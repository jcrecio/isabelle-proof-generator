{"file_name": "/home/qj213/afp-2021-10-22/thys/Recursion-Theory-I/RecEnSet.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Recursion-Theory-I", "problem_names": ["lemma ce_set_lm_1: \"p \\<in> PrimRec2 \\<Longrightarrow> fn_to_set p \\<in> ce_sets\"", "lemma ce_set_lm_2: \"\\<lbrakk> p \\<in> PrimRec2; \\<forall> x. (x \\<in> A) = (\\<exists> y. p x y = 0)\\<rbrakk> \\<Longrightarrow> A \\<in> ce_sets\"", "lemma ce_set_lm_3: \"A \\<in> ce_sets \\<Longrightarrow> \\<exists> p \\<in> PrimRec2. A = fn_to_set p\"", "lemma ce_set_lm_4: \"A \\<in> ce_sets \\<Longrightarrow> \\<exists> p \\<in> PrimRec2. \\<forall> x. (x \\<in> A) = (\\<exists> y. p x y = 0)\"", "lemma ce_set_lm_5: \"\\<lbrakk> A \\<in> ce_sets; p \\<in> PrimRec1 \\<rbrakk> \\<Longrightarrow> { x . p x \\<in> A } \\<in> ce_sets\"", "lemma ce_set_lm_6: \"\\<lbrakk> A \\<in> ce_sets; A \\<noteq> {}\\<rbrakk> \\<Longrightarrow> \\<exists> q \\<in> PrimRec1. A = { q x | x. x \\<in> UNIV }\"", "lemma ce_set_lm_7: \"\\<lbrakk> A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk> \\<Longrightarrow> { p x | x. x \\<in> A } \\<in> ce_sets\"", "theorem ce_empty: \"{} \\<in> ce_sets\"", "theorem ce_univ: \"UNIV \\<in> ce_sets\"", "theorem ce_singleton: \"{a} \\<in> ce_sets\"", "theorem ce_union: \"\\<lbrakk> A \\<in> ce_sets; B \\<in> ce_sets \\<rbrakk> \\<Longrightarrow> A \\<union> B \\<in> ce_sets\"", "theorem ce_intersect: \"\\<lbrakk> A \\<in> ce_sets; B \\<in> ce_sets \\<rbrakk> \\<Longrightarrow> A \\<inter> B \\<in> ce_sets\"", "lemma nat_to_ce_set_lm_1: \"nat_to_ce_set n = { x . \\<exists> y. (nat_to_pr n) (c_pair x y) = 0 }\"", "lemma nat_to_ce_set_into_ce: \"nat_to_ce_set n \\<in> ce_sets\"", "lemma nat_to_ce_set_srj: \"A \\<in> ce_sets \\<Longrightarrow> \\<exists> n. A = nat_to_ce_set n\"", "lemma chf_lm_1 [simp]: \"zero_set (chf A) = A\"", "lemma chf_lm_2: \"(x \\<in> A) = (chf A x = 0)\"", "lemma chf_lm_3: \"(x \\<notin> A) = (chf A x = 1)\"", "lemma chf_lm_4: \"chf A \\<in> PrimRec1 \\<Longrightarrow> A \\<in> ce_sets\"", "lemma chf_lm_5: \"finite A \\<Longrightarrow> chf A \\<in> PrimRec1\"", "theorem ce_finite: \"finite A \\<Longrightarrow> A \\<in> ce_sets\"", "lemma ce_rel_lm_1 [simp]: \"ce_set_to_rel (ce_rel_to_set r) = r\"", "lemma ce_rel_lm_2 [simp]: \"ce_rel_to_set (ce_set_to_rel A) = A\"", "lemma ce_rels_def1: \"ce_rels = { ce_set_to_rel A | A. A \\<in> ce_sets}\"", "lemma ce_rel_to_set_inj: \"inj ce_rel_to_set\"", "lemma ce_rel_to_set_srj: \"surj ce_rel_to_set\"", "lemma ce_rel_to_set_bij: \"bij ce_rel_to_set\"", "lemma ce_set_to_rel_inj: \"inj ce_set_to_rel\"", "lemma ce_set_to_rel_srj: \"surj ce_set_to_rel\"", "lemma ce_set_to_rel_bij: \"bij ce_set_to_rel\"", "lemma ce_rel_lm_3: \"A \\<in> ce_sets \\<Longrightarrow> ce_set_to_rel A \\<in> ce_rels\"", "lemma ce_rel_lm_4: \"ce_set_to_rel A \\<in> ce_rels \\<Longrightarrow> A \\<in> ce_sets\"", "lemma ce_rel_lm_5: \"(A \\<in> ce_sets) = (ce_set_to_rel A \\<in> ce_rels)\"", "lemma ce_rel_lm_6: \"r \\<in> ce_rels \\<Longrightarrow> ce_rel_to_set r \\<in> ce_sets\"", "lemma ce_rel_lm_7: \"ce_rel_to_set r \\<in> ce_sets \\<Longrightarrow> r \\<in> ce_rels\"", "lemma ce_rel_lm_8: \"(r \\<in> ce_rels) = (ce_rel_to_set r \\<in> ce_sets)\"", "lemma ce_rel_lm_9: \"(x,y) \\<in> r \\<Longrightarrow> c_pair x y \\<in> ce_rel_to_set r\"", "lemma ce_rel_lm_10: \"x \\<in> A \\<Longrightarrow> (c_fst x, c_snd x) \\<in> ce_set_to_rel A\"", "lemma ce_rel_lm_11: \"c_pair x y \\<in> ce_rel_to_set r \\<Longrightarrow> (x,y) \\<in> r\"", "lemma ce_rel_lm_12: \"(c_pair x y \\<in> ce_rel_to_set r) = ((x,y) \\<in> r)\"", "lemma ce_rel_lm_13: \"(x,y) \\<in> ce_set_to_rel A \\<Longrightarrow> c_pair x y \\<in> A\"", "lemma ce_rel_lm_14: \"c_pair x y \\<in> A \\<Longrightarrow> (x,y) \\<in> ce_set_to_rel A\"", "lemma ce_rel_lm_15: \"((x,y) \\<in> ce_set_to_rel A) = (c_pair x y \\<in> A)\"", "lemma ce_rel_lm_16: \"x \\<in> ce_rel_to_set r \\<Longrightarrow> (c_fst x, c_snd x) \\<in> r\"", "lemma ce_rel_lm_17: \"(c_fst x, c_snd x) \\<in> ce_set_to_rel A \\<Longrightarrow> x \\<in> A\"", "lemma ce_rel_lm_18: \"((c_fst x, c_snd x) \\<in> ce_set_to_rel A) = (x \\<in> A)\"", "lemma ce_rel_lm_19: \"(c_fst x, c_snd x) \\<in> r \\<Longrightarrow> x \\<in> ce_rel_to_set r\"", "lemma ce_rel_lm_20: \"((c_fst x, c_snd x) \\<in> r) = (x \\<in> ce_rel_to_set r)\"", "lemma ce_rel_lm_21: \"r \\<in> ce_rels \\<Longrightarrow> \\<exists> p \\<in> PrimRec3. \\<forall> x y. ((x,y) \\<in> r) = (\\<exists> u. p x y u = 0)\"", "lemma ce_rel_lm_22: \"r \\<in> ce_rels \\<Longrightarrow> \\<exists> p \\<in> PrimRec3. r = { (x,y). \\<exists> u. p x y u = 0 }\"", "lemma ce_rel_lm_23: \"\\<lbrakk> p \\<in> PrimRec3; \\<forall> x y. ((x,y) \\<in> r) = (\\<exists> u. p x y u = 0) \\<rbrakk> \\<Longrightarrow> r \\<in> ce_rels\"", "lemma ce_rel_lm_24: \"\\<lbrakk> r \\<in> ce_rels; s \\<in> ce_rels \\<rbrakk> \\<Longrightarrow> s O r \\<in> ce_rels\"", "lemma ce_rel_lm_25: \"r \\<in> ce_rels \\<Longrightarrow> r^-1 \\<in> ce_rels\"", "lemma ce_rel_lm_26: \"r \\<in> ce_rels \\<Longrightarrow> Domain r \\<in> ce_sets\"", "lemma ce_rel_lm_27: \"r \\<in> ce_rels \\<Longrightarrow> Range r \\<in> ce_sets\"", "lemma ce_rel_lm_28: \"r \\<in> ce_rels \\<Longrightarrow> Field r \\<in> ce_sets\"", "lemma ce_rel_lm_29: \"\\<lbrakk> A \\<in> ce_sets; B \\<in> ce_sets \\<rbrakk> \\<Longrightarrow> A \\<times> B \\<in> ce_rels\"", "lemma ce_rel_lm_30: \"{} \\<in> ce_rels\"", "lemma ce_rel_lm_31: \"UNIV \\<in> ce_rels\"", "lemma ce_rel_lm_32: \"ce_rel_to_set (r \\<union> s) = (ce_rel_to_set r) \\<union> (ce_rel_to_set s)\"", "lemma ce_rel_lm_33: \"\\<lbrakk> r \\<in> ce_rels; s \\<in> ce_rels \\<rbrakk> \\<Longrightarrow> r \\<union> s \\<in> ce_rels\"", "lemma ce_rel_lm_34: \"ce_rel_to_set (r \\<inter> s) = (ce_rel_to_set r) \\<inter> (ce_rel_to_set s)\"", "lemma ce_rel_lm_35: \"\\<lbrakk> r \\<in> ce_rels; s \\<in> ce_rels \\<rbrakk> \\<Longrightarrow> r \\<inter> s \\<in> ce_rels\"", "lemma ce_rel_lm_36: \"ce_set_to_rel (A \\<union> B) = (ce_set_to_rel A) \\<union> (ce_set_to_rel B)\"", "lemma ce_rel_lm_37: \"ce_set_to_rel (A \\<inter> B) = (ce_set_to_rel A) \\<inter> (ce_set_to_rel B)\"", "lemma ce_rel_lm_38: \"\\<lbrakk> r \\<in> ce_rels; A \\<in> ce_sets \\<rbrakk> \\<Longrightarrow> r``A \\<in> ce_sets\"", "lemma graph_lm_1: \"(x,y) \\<in> graph f \\<Longrightarrow> y = f x\"", "lemma graph_lm_2: \"y = f x \\<Longrightarrow> (x,y) \\<in> graph f\"", "lemma graph_lm_3: \"((x,y) \\<in> graph f) = (y = f x)\"", "lemma graph_lm_4: \"graph (f o g) = (graph g) O (graph f)\"", "lemma c_graph_lm_1: \"c_pair x y \\<in> c_graph f \\<Longrightarrow> y = f x\"", "lemma c_graph_lm_2: \"y = f x \\<Longrightarrow> c_pair x y \\<in> c_graph f\"", "lemma c_graph_lm_3: \"(c_pair x y \\<in> c_graph f) = (y = f x)\"", "lemma c_graph_lm_4: \"c_graph f = ce_rel_to_set (graph f)\"", "lemma c_graph_lm_5: \"graph f = ce_set_to_rel (c_graph f)\"", "lemma total_recursive_def1: \"total_recursive = (\\<lambda> f. c_graph f \\<in> ce_sets)\"", "theorem pr_is_total_rec: \"f \\<in> PrimRec1 \\<Longrightarrow> total_recursive f\"", "theorem comp_tot_rec: \"\\<lbrakk> total_recursive f; total_recursive g \\<rbrakk> \\<Longrightarrow> total_recursive (f o g)\"", "lemma univ_for_pr_tot_rec_lm: \"c_graph univ_for_pr \\<in> ce_sets\"", "theorem univ_for_pr_tot_rec: \"total_recursive univ_for_pr\"", "lemma computable_complement_1: \"computable A \\<Longrightarrow> computable (- A)\"", "lemma computable_complement_2: \"computable (- A) \\<Longrightarrow> computable A\"", "lemma computable_complement_3: \"(computable A) = (computable (- A))\"", "theorem comp_impl_tot_rec: \"computable A \\<Longrightarrow> total_recursive (chf A)\"", "theorem tot_rec_impl_comp: \"total_recursive (chf A) \\<Longrightarrow> computable A\"", "theorem post_th_0: \"(computable A) = (total_recursive (chf A))\"", "lemma univ_for_pr_lm: \"univ_for_pr (c_pair n x) = (nat_to_pr n) x\"", "theorem univ_is_ce: \"univ_ce \\<in> ce_sets\"", "lemma univ_ce_lm_1: \"(c_pair n x \\<in> univ_ce) = (x \\<in> nat_to_ce_set n)\"", "theorem univ_ce_is_not_comp1: \"- univ_ce \\<notin> ce_sets\"", "theorem univ_ce_is_not_comp2: \"\\<not> total_recursive (chf univ_ce)\"", "theorem univ_ce_is_not_comp3: \"\\<not> computable univ_ce\"", "lemma index_of_r_to_l_lm: \"nat_to_pr index_of_r_to_l (c_pair x (c_pair y z)) = c_pair (c_pair x y) z\"", "lemma s_ce_is_pr: \"s_ce \\<in> PrimRec2\"", "lemma s_ce_inj: \"s_ce e1 x1 = s_ce e2 x2 \\<Longrightarrow> e1=e2 \\<and> x1=x2\"", "lemma s_ce_inj1: \"s_ce e1 x = s_ce e2 x \\<Longrightarrow> e1=e2\"", "lemma s_ce_inj2: \"s_ce e x1 = s_ce e x2 \\<Longrightarrow> x1=x2\"", "theorem s1_1_th1: \"\\<forall> n x y. ((nat_to_pr n) (c_pair x y)) = (nat_to_pr (s1_1 n x)) y\"", "lemma s_lm: \"(nat_to_pr (s_ce e x)) (c_pair y z) = (nat_to_pr e) (c_pair (c_pair x y) z)\"", "theorem s_ce_1_1_th: \"(c_pair x y \\<in> nat_to_ce_set e) = (y \\<in> nat_to_ce_set (s_ce e x))\"", "lemma one_reducible_to_via_trans: \"\\<lbrakk> one_reducible_to_via A B f; one_reducible_to_via B C g \\<rbrakk> \\<Longrightarrow> one_reducible_to_via A C (g o f)\"", "lemma one_reducible_to_trans: \"\\<lbrakk> one_reducible_to A B; one_reducible_to B C \\<rbrakk> \\<Longrightarrow> one_reducible_to A C\"", "lemma one_reducible_to_via_refl: \"one_reducible_to_via A A (\\<lambda> x. x)\"", "lemma one_reducible_to_refl: \"one_reducible_to A A\"", "lemma many_reducible_to_via_trans: \"\\<lbrakk> many_reducible_to_via A B f; many_reducible_to_via B C g \\<rbrakk> \\<Longrightarrow> many_reducible_to_via A C (g o f)\"", "lemma many_reducible_to_trans: \"\\<lbrakk> many_reducible_to A B; many_reducible_to B C \\<rbrakk> \\<Longrightarrow> many_reducible_to A C\"", "lemma one_reducibility_via_is_many: \"one_reducible_to_via A B f \\<Longrightarrow> many_reducible_to_via A B f\"", "lemma one_reducibility_is_many: \"one_reducible_to A B \\<Longrightarrow> many_reducible_to A B\"", "lemma many_reducible_to_via_refl: \"many_reducible_to_via A A (\\<lambda> x. x)\"", "lemma many_reducible_to_refl: \"many_reducible_to A A\"", "theorem m_red_to_comp: \"\\<lbrakk> many_reducible_to A B; computable B \\<rbrakk> \\<Longrightarrow> computable A\"", "lemma many_reducible_lm_1: \"many_reducible_to univ_ce A \\<Longrightarrow> \\<not> computable A\"", "lemma one_reducible_lm_1: \"one_reducible_to univ_ce A \\<Longrightarrow> \\<not> computable A\"", "lemma one_reducible_lm_2: \"one_reducible_to_via (nat_to_ce_set n) univ_ce (\\<lambda> x. c_pair n x)\"", "lemma one_reducible_lm_3: \"one_reducible_to (nat_to_ce_set n) univ_ce\"", "lemma one_reducible_lm_4: \"A \\<in> ce_sets \\<Longrightarrow> one_reducible_to A univ_ce\"", "theorem univ_is_complete: \"one_complete univ_ce\"", "lemma index_set_lm_1: \"\\<lbrakk> index_set A; n\\<in> A; nat_to_ce_set n = nat_to_ce_set m \\<rbrakk> \\<Longrightarrow> m \\<in> A\"", "lemma index_set_lm_2: \"index_set A \\<Longrightarrow> index_set (-A)\"", "lemma Rice_lm_1: \"\\<lbrakk> index_set A; A \\<noteq> {}; A \\<noteq> UNIV; \\<exists> n \\<in> A. nat_to_ce_set n = {} \\<rbrakk> \\<Longrightarrow> one_reducible_to univ_ce (- A)\"", "lemma Rice_lm_2: \"\\<lbrakk> index_set A; A \\<noteq> {}; A \\<noteq> UNIV; n \\<in> A;  nat_to_ce_set n = {} \\<rbrakk> \\<Longrightarrow> one_reducible_to univ_ce (- A)\"", "theorem Rice_1: \"\\<lbrakk> index_set A; A \\<noteq> {}; A \\<noteq> UNIV \\<rbrakk> \\<Longrightarrow> one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)\"", "theorem Rice_2: \"\\<lbrakk> index_set A; A \\<noteq> {}; A \\<noteq> UNIV \\<rbrakk> \\<Longrightarrow> \\<not> computable A\"", "theorem Rice_3: \"\\<lbrakk> C \\<subseteq> ce_sets; computable { n. nat_to_ce_set n \\<in> C} \\<rbrakk> \\<Longrightarrow> C = {} \\<or> C = ce_sets\""], "translations": [["", "lemma ce_set_lm_1: \"p \\<in> PrimRec2 \\<Longrightarrow> fn_to_set p \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> PrimRec2 \\<Longrightarrow> fn_to_set p \\<in> ce_sets", "by (auto simp add: ce_sets_def)"], ["", "lemma ce_set_lm_2: \"\\<lbrakk> p \\<in> PrimRec2; \\<forall> x. (x \\<in> A) = (\\<exists> y. p x y = 0)\\<rbrakk> \\<Longrightarrow> A \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec2;\n     \\<forall>x. (x \\<in> A) = (\\<exists>y. p x y = 0)\\<rbrakk>\n    \\<Longrightarrow> A \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec2;\n     \\<forall>x. (x \\<in> A) = (\\<exists>y. p x y = 0)\\<rbrakk>\n    \\<Longrightarrow> A \\<in> ce_sets", "assume p_is_pr: \"p \\<in> PrimRec2\""], ["proof (state)\nthis:\n  p \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec2;\n     \\<forall>x. (x \\<in> A) = (\\<exists>y. p x y = 0)\\<rbrakk>\n    \\<Longrightarrow> A \\<in> ce_sets", "assume \"\\<forall> x. (x \\<in> A) = (\\<exists> y. p x y = 0)\""], ["proof (state)\nthis:\n  \\<forall>x. (x \\<in> A) = (\\<exists>y. p x y = 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec2;\n     \\<forall>x. (x \\<in> A) = (\\<exists>y. p x y = 0)\\<rbrakk>\n    \\<Longrightarrow> A \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  \\<forall>x. (x \\<in> A) = (\\<exists>y. p x y = 0)", "have \"A = fn_to_set p\""], ["proof (prove)\nusing this:\n  \\<forall>x. (x \\<in> A) = (\\<exists>y. p x y = 0)\n\ngoal (1 subgoal):\n 1. A = fn_to_set p", "by (unfold fn_to_set_def, auto)"], ["proof (state)\nthis:\n  A = fn_to_set p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec2;\n     \\<forall>x. (x \\<in> A) = (\\<exists>y. p x y = 0)\\<rbrakk>\n    \\<Longrightarrow> A \\<in> ce_sets", "with p_is_pr"], ["proof (chain)\npicking this:\n  p \\<in> PrimRec2\n  A = fn_to_set p", "show \"A \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  p \\<in> PrimRec2\n  A = fn_to_set p\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets", "by (simp add: ce_set_lm_1)"], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_set_lm_3: \"A \\<in> ce_sets \\<Longrightarrow> \\<exists> p \\<in> PrimRec2. A = fn_to_set p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec2. A = fn_to_set p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec2. A = fn_to_set p", "assume \"A \\<in> ce_sets\""], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec2. A = fn_to_set p", "then"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets", "have \"A \\<in> { (fn_to_set p) | p. p \\<in> PrimRec2 }\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. A \\<in> {fn_to_set p |p. p \\<in> PrimRec2}", "by (simp add: ce_sets_def)"], ["proof (state)\nthis:\n  A \\<in> {fn_to_set p |p. p \\<in> PrimRec2}\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec2. A = fn_to_set p", "thus ?thesis"], ["proof (prove)\nusing this:\n  A \\<in> {fn_to_set p |p. p \\<in> PrimRec2}\n\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>PrimRec2. A = fn_to_set p", "by auto"], ["proof (state)\nthis:\n  \\<exists>p\\<in>PrimRec2. A = fn_to_set p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_set_lm_4: \"A \\<in> ce_sets \\<Longrightarrow> \\<exists> p \\<in> PrimRec2. \\<forall> x. (x \\<in> A) = (\\<exists> y. p x y = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec2.\n       \\<forall>x. (x \\<in> A) = (\\<exists>y. p x y = 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec2.\n       \\<forall>x. (x \\<in> A) = (\\<exists>y. p x y = 0)", "assume \"A \\<in> ce_sets\""], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec2.\n       \\<forall>x. (x \\<in> A) = (\\<exists>y. p x y = 0)", "then"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets", "have \"\\<exists> p \\<in> PrimRec2. A = fn_to_set p\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>PrimRec2. A = fn_to_set p", "by (rule ce_set_lm_3)"], ["proof (state)\nthis:\n  \\<exists>p\\<in>PrimRec2. A = fn_to_set p\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec2.\n       \\<forall>x. (x \\<in> A) = (\\<exists>y. p x y = 0)", "then"], ["proof (chain)\npicking this:\n  \\<exists>p\\<in>PrimRec2. A = fn_to_set p", "obtain p where p_is_pr: \"p \\<in> PrimRec2\" and L1: \"A = fn_to_set p\""], ["proof (prove)\nusing this:\n  \\<exists>p\\<in>PrimRec2. A = fn_to_set p\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<in> PrimRec2; A = fn_to_set p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  p \\<in> PrimRec2\n  A = fn_to_set p\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec2.\n       \\<forall>x. (x \\<in> A) = (\\<exists>y. p x y = 0)", "from p_is_pr L1"], ["proof (chain)\npicking this:\n  p \\<in> PrimRec2\n  A = fn_to_set p", "show ?thesis"], ["proof (prove)\nusing this:\n  p \\<in> PrimRec2\n  A = fn_to_set p\n\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>PrimRec2.\n       \\<forall>x. (x \\<in> A) = (\\<exists>y. p x y = 0)", "by (unfold fn_to_set_def, auto)"], ["proof (state)\nthis:\n  \\<exists>p\\<in>PrimRec2. \\<forall>x. (x \\<in> A) = (\\<exists>y. p x y = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_set_lm_5: \"\\<lbrakk> A \\<in> ce_sets; p \\<in> PrimRec1 \\<rbrakk> \\<Longrightarrow> { x . p x \\<in> A } \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {x. p x \\<in> A} \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {x. p x \\<in> A} \\<in> ce_sets", "assume A1: \"A \\<in> ce_sets\""], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {x. p x \\<in> A} \\<in> ce_sets", "assume A2: \"p \\<in> PrimRec1\""], ["proof (state)\nthis:\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {x. p x \\<in> A} \\<in> ce_sets", "from A1"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets", "have \"\\<exists> pA \\<in> PrimRec2. A = fn_to_set pA\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<exists>pA\\<in>PrimRec2. A = fn_to_set pA", "by (rule ce_set_lm_3)"], ["proof (state)\nthis:\n  \\<exists>pA\\<in>PrimRec2. A = fn_to_set pA\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {x. p x \\<in> A} \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  \\<exists>pA\\<in>PrimRec2. A = fn_to_set pA", "obtain pA where pA_is_pr: \"pA \\<in> PrimRec2\" and S1: \"A = fn_to_set pA\""], ["proof (prove)\nusing this:\n  \\<exists>pA\\<in>PrimRec2. A = fn_to_set pA\n\ngoal (1 subgoal):\n 1. (\\<And>pA.\n        \\<lbrakk>pA \\<in> PrimRec2; A = fn_to_set pA\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  pA \\<in> PrimRec2\n  A = fn_to_set pA\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {x. p x \\<in> A} \\<in> ce_sets", "from S1"], ["proof (chain)\npicking this:\n  A = fn_to_set pA", "have S2: \"A = { x . \\<exists> y. pA x y = 0 }\""], ["proof (prove)\nusing this:\n  A = fn_to_set pA\n\ngoal (1 subgoal):\n 1. A = {x. \\<exists>y. pA x y = 0}", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  A = {x. \\<exists>y. pA x y = 0}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {x. p x \\<in> A} \\<in> ce_sets", "define q where \"q x y = pA (p x) y\" for x y"], ["proof (state)\nthis:\n  q ?x ?y = pA (p ?x) ?y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {x. p x \\<in> A} \\<in> ce_sets", "from pA_is_pr A2"], ["proof (chain)\npicking this:\n  pA \\<in> PrimRec2\n  p \\<in> PrimRec1", "have q_is_pr: \"q \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  pA \\<in> PrimRec2\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. q \\<in> PrimRec2", "unfolding q_def"], ["proof (prove)\nusing this:\n  pA \\<in> PrimRec2\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. pA (p x)) \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  q \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {x. p x \\<in> A} \\<in> ce_sets", "have \"\\<And> x. (p x \\<in> A) = (\\<exists> y. q x y = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. (p x \\<in> A) = (\\<exists>y. q x y = 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (p x \\<in> A) = (\\<exists>y. q x y = 0)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (p x \\<in> A) = (\\<exists>y. q x y = 0)", "show \"(p x \\<in> A) = (\\<exists> y. q x y = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p x \\<in> A) = (\\<exists>y. q x y = 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. p x \\<in> A \\<Longrightarrow> \\<exists>y. q x y = 0\n 2. \\<exists>y. q x y = 0 \\<Longrightarrow> p x \\<in> A", "assume A: \"p x \\<in> A\""], ["proof (state)\nthis:\n  p x \\<in> A\n\ngoal (2 subgoals):\n 1. p x \\<in> A \\<Longrightarrow> \\<exists>y. q x y = 0\n 2. \\<exists>y. q x y = 0 \\<Longrightarrow> p x \\<in> A", "with S2"], ["proof (chain)\npicking this:\n  A = {x. \\<exists>y. pA x y = 0}\n  p x \\<in> A", "obtain y where L1: \"pA (p x) y = 0\""], ["proof (prove)\nusing this:\n  A = {x. \\<exists>y. pA x y = 0}\n  p x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>y. pA (p x) y = 0 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  pA (p x) y = 0\n\ngoal (2 subgoals):\n 1. p x \\<in> A \\<Longrightarrow> \\<exists>y. q x y = 0\n 2. \\<exists>y. q x y = 0 \\<Longrightarrow> p x \\<in> A", "then"], ["proof (chain)\npicking this:\n  pA (p x) y = 0", "have \"q x y = 0\""], ["proof (prove)\nusing this:\n  pA (p x) y = 0\n\ngoal (1 subgoal):\n 1. q x y = 0", "by (simp add: q_def)"], ["proof (state)\nthis:\n  q x y = 0\n\ngoal (2 subgoals):\n 1. p x \\<in> A \\<Longrightarrow> \\<exists>y. q x y = 0\n 2. \\<exists>y. q x y = 0 \\<Longrightarrow> p x \\<in> A", "thus \"\\<exists> y. q x y = 0\""], ["proof (prove)\nusing this:\n  q x y = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. q x y = 0", ".."], ["proof (state)\nthis:\n  \\<exists>y. q x y = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. q x y = 0 \\<Longrightarrow> p x \\<in> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y. q x y = 0 \\<Longrightarrow> p x \\<in> A", "assume A: \"\\<exists>y. q x y = 0\""], ["proof (state)\nthis:\n  \\<exists>y. q x y = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. q x y = 0 \\<Longrightarrow> p x \\<in> A", "then"], ["proof (chain)\npicking this:\n  \\<exists>y. q x y = 0", "obtain y where L1: \"q x y = 0\""], ["proof (prove)\nusing this:\n  \\<exists>y. q x y = 0\n\ngoal (1 subgoal):\n 1. (\\<And>y. q x y = 0 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", ".."], ["proof (state)\nthis:\n  q x y = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. q x y = 0 \\<Longrightarrow> p x \\<in> A", "then"], ["proof (chain)\npicking this:\n  q x y = 0", "have \"pA (p x) y = 0\""], ["proof (prove)\nusing this:\n  q x y = 0\n\ngoal (1 subgoal):\n 1. pA (p x) y = 0", "by (simp add: q_def)"], ["proof (state)\nthis:\n  pA (p x) y = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. q x y = 0 \\<Longrightarrow> p x \\<in> A", "with S2"], ["proof (chain)\npicking this:\n  A = {x. \\<exists>y. pA x y = 0}\n  pA (p x) y = 0", "show \"p x \\<in> A\""], ["proof (prove)\nusing this:\n  A = {x. \\<exists>y. pA x y = 0}\n  pA (p x) y = 0\n\ngoal (1 subgoal):\n 1. p x \\<in> A", "by auto"], ["proof (state)\nthis:\n  p x \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (p x \\<in> A) = (\\<exists>y. q x y = 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (p ?x \\<in> A) = (\\<exists>y. q ?x y = 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {x. p x \\<in> A} \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  (p ?x \\<in> A) = (\\<exists>y. q ?x y = 0)", "have \"{ x . p x \\<in> A } = { x. \\<exists> y. q x y = 0 }\""], ["proof (prove)\nusing this:\n  (p ?x \\<in> A) = (\\<exists>y. q ?x y = 0)\n\ngoal (1 subgoal):\n 1. {x. p x \\<in> A} = {x. \\<exists>y. q x y = 0}", "by auto"], ["proof (state)\nthis:\n  {x. p x \\<in> A} = {x. \\<exists>y. q x y = 0}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {x. p x \\<in> A} \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  {x. p x \\<in> A} = {x. \\<exists>y. q x y = 0}", "have \"{ x . p x \\<in> A } = fn_to_set q\""], ["proof (prove)\nusing this:\n  {x. p x \\<in> A} = {x. \\<exists>y. q x y = 0}\n\ngoal (1 subgoal):\n 1. {x. p x \\<in> A} = fn_to_set q", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  {x. p x \\<in> A} = fn_to_set q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {x. p x \\<in> A} \\<in> ce_sets", "moreover"], ["proof (state)\nthis:\n  {x. p x \\<in> A} = fn_to_set q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {x. p x \\<in> A} \\<in> ce_sets", "from q_is_pr"], ["proof (chain)\npicking this:\n  q \\<in> PrimRec2", "have \"fn_to_set q \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  q \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. fn_to_set q \\<in> ce_sets", "by (rule ce_set_lm_1)"], ["proof (state)\nthis:\n  fn_to_set q \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {x. p x \\<in> A} \\<in> ce_sets", "ultimately"], ["proof (chain)\npicking this:\n  {x. p x \\<in> A} = fn_to_set q\n  fn_to_set q \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  {x. p x \\<in> A} = fn_to_set q\n  fn_to_set q \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. {x. p x \\<in> A} \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  {x. p x \\<in> A} \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_set_lm_6: \"\\<lbrakk> A \\<in> ce_sets; A \\<noteq> {}\\<rbrakk> \\<Longrightarrow> \\<exists> q \\<in> PrimRec1. A = { q x | x. x \\<in> UNIV }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>q\\<in>PrimRec1. A = {q x |x. x \\<in> UNIV}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>q\\<in>PrimRec1. A = {q x |x. x \\<in> UNIV}", "assume A1: \"A \\<in> ce_sets\""], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>q\\<in>PrimRec1. A = {q x |x. x \\<in> UNIV}", "assume A2: \"A \\<noteq> {}\""], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>q\\<in>PrimRec1. A = {q x |x. x \\<in> UNIV}", "from A1"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets", "have \"\\<exists> pA \\<in> PrimRec2. A = fn_to_set pA\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<exists>pA\\<in>PrimRec2. A = fn_to_set pA", "by (rule ce_set_lm_3)"], ["proof (state)\nthis:\n  \\<exists>pA\\<in>PrimRec2. A = fn_to_set pA\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>q\\<in>PrimRec1. A = {q x |x. x \\<in> UNIV}", "then"], ["proof (chain)\npicking this:\n  \\<exists>pA\\<in>PrimRec2. A = fn_to_set pA", "obtain pA where pA_is_pr: \"pA \\<in> PrimRec2\" and S1: \"A = fn_to_set pA\""], ["proof (prove)\nusing this:\n  \\<exists>pA\\<in>PrimRec2. A = fn_to_set pA\n\ngoal (1 subgoal):\n 1. (\\<And>pA.\n        \\<lbrakk>pA \\<in> PrimRec2; A = fn_to_set pA\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  pA \\<in> PrimRec2\n  A = fn_to_set pA\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>q\\<in>PrimRec1. A = {q x |x. x \\<in> UNIV}", "from S1"], ["proof (chain)\npicking this:\n  A = fn_to_set pA", "have S2: \"A = { x. \\<exists> y. pA x y = 0 }\""], ["proof (prove)\nusing this:\n  A = fn_to_set pA\n\ngoal (1 subgoal):\n 1. A = {x. \\<exists>y. pA x y = 0}", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  A = {x. \\<exists>y. pA x y = 0}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>q\\<in>PrimRec1. A = {q x |x. x \\<in> UNIV}", "from A2"], ["proof (chain)\npicking this:\n  A \\<noteq> {}", "obtain a where a_in: \"a \\<in> A\""], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>a. a \\<in> A \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>q\\<in>PrimRec1. A = {q x |x. x \\<in> UNIV}", "define q where \"q z = (if pA (c_fst z) (c_snd z) = 0 then c_fst z else a)\" for z"], ["proof (state)\nthis:\n  q ?z = (if pA (c_fst ?z) (c_snd ?z) = 0 then c_fst ?z else a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>q\\<in>PrimRec1. A = {q x |x. x \\<in> UNIV}", "from pA_is_pr"], ["proof (chain)\npicking this:\n  pA \\<in> PrimRec2", "have q_is_pr: \"q \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  pA \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. q \\<in> PrimRec1", "unfolding q_def"], ["proof (prove)\nusing this:\n  pA \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>z. if pA (c_fst z) (c_snd z) = 0 then c_fst z else a)\n    \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  q \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>q\\<in>PrimRec1. A = {q x |x. x \\<in> UNIV}", "have S3: \"\\<forall> z. q z \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>z. q z \\<in> A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z. q z \\<in> A", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z. q z \\<in> A", "show \"q z \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q z \\<in> A", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> q z \\<in> A\n 2. \\<not> ?P \\<Longrightarrow> q z \\<in> A", "assume A: \"pA (c_fst z) (c_snd z) = 0\""], ["proof (state)\nthis:\n  pA (c_fst z) (c_snd z) = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> q z \\<in> A\n 2. \\<not> ?P \\<Longrightarrow> q z \\<in> A", "with S2"], ["proof (chain)\npicking this:\n  A = {x. \\<exists>y. pA x y = 0}\n  pA (c_fst z) (c_snd z) = 0", "have \"c_fst z \\<in> A\""], ["proof (prove)\nusing this:\n  A = {x. \\<exists>y. pA x y = 0}\n  pA (c_fst z) (c_snd z) = 0\n\ngoal (1 subgoal):\n 1. c_fst z \\<in> A", "by auto"], ["proof (state)\nthis:\n  c_fst z \\<in> A\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> q z \\<in> A\n 2. \\<not> ?P \\<Longrightarrow> q z \\<in> A", "moreover"], ["proof (state)\nthis:\n  c_fst z \\<in> A\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> q z \\<in> A\n 2. \\<not> ?P \\<Longrightarrow> q z \\<in> A", "from A q_def"], ["proof (chain)\npicking this:\n  pA (c_fst z) (c_snd z) = 0\n  q ?z = (if pA (c_fst ?z) (c_snd ?z) = 0 then c_fst ?z else a)", "have \"q z = c_fst z\""], ["proof (prove)\nusing this:\n  pA (c_fst z) (c_snd z) = 0\n  q ?z = (if pA (c_fst ?z) (c_snd ?z) = 0 then c_fst ?z else a)\n\ngoal (1 subgoal):\n 1. q z = c_fst z", "by simp"], ["proof (state)\nthis:\n  q z = c_fst z\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> q z \\<in> A\n 2. \\<not> ?P \\<Longrightarrow> q z \\<in> A", "ultimately"], ["proof (chain)\npicking this:\n  c_fst z \\<in> A\n  q z = c_fst z", "show \"q z \\<in> A\""], ["proof (prove)\nusing this:\n  c_fst z \\<in> A\n  q z = c_fst z\n\ngoal (1 subgoal):\n 1. q z \\<in> A", "by auto"], ["proof (state)\nthis:\n  q z \\<in> A\n\ngoal (1 subgoal):\n 1. pA (c_fst z) (c_snd z) \\<noteq> 0 \\<Longrightarrow> q z \\<in> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. pA (c_fst z) (c_snd z) \\<noteq> 0 \\<Longrightarrow> q z \\<in> A", "assume A: \"pA (c_fst z) (c_snd z) \\<noteq> 0\""], ["proof (state)\nthis:\n  pA (c_fst z) (c_snd z) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pA (c_fst z) (c_snd z) \\<noteq> 0 \\<Longrightarrow> q z \\<in> A", "with q_def"], ["proof (chain)\npicking this:\n  q ?z = (if pA (c_fst ?z) (c_snd ?z) = 0 then c_fst ?z else a)\n  pA (c_fst z) (c_snd z) \\<noteq> 0", "have \"q z = a\""], ["proof (prove)\nusing this:\n  q ?z = (if pA (c_fst ?z) (c_snd ?z) = 0 then c_fst ?z else a)\n  pA (c_fst z) (c_snd z) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q z = a", "by simp"], ["proof (state)\nthis:\n  q z = a\n\ngoal (1 subgoal):\n 1. pA (c_fst z) (c_snd z) \\<noteq> 0 \\<Longrightarrow> q z \\<in> A", "with a_in"], ["proof (chain)\npicking this:\n  a \\<in> A\n  q z = a", "show \"q z \\<in> A\""], ["proof (prove)\nusing this:\n  a \\<in> A\n  q z = a\n\ngoal (1 subgoal):\n 1. q z \\<in> A", "by auto"], ["proof (state)\nthis:\n  q z \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q z \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>z. q z \\<in> A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>q\\<in>PrimRec1. A = {q x |x. x \\<in> UNIV}", "then"], ["proof (chain)\npicking this:\n  \\<forall>z. q z \\<in> A", "have S4: \"{ q x | x. x \\<in> UNIV } \\<subseteq> A\""], ["proof (prove)\nusing this:\n  \\<forall>z. q z \\<in> A\n\ngoal (1 subgoal):\n 1. {q x |x. x \\<in> UNIV} \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  {q x |x. x \\<in> UNIV} \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>q\\<in>PrimRec1. A = {q x |x. x \\<in> UNIV}", "have S5: \"A \\<subseteq> { q x | x. x \\<in> UNIV }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> {q x |x. x \\<in> UNIV}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> {q x |x. x \\<in> UNIV}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> {q x |x. x \\<in> UNIV}", "assume A: \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> {q x |x. x \\<in> UNIV}", "show \"x \\<in> {q x |x. x \\<in> UNIV}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {q x |x. x \\<in> UNIV}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>xa. x = q xa \\<and> xa \\<in> UNIV", "from A S2"], ["proof (chain)\npicking this:\n  x \\<in> A\n  A = {x. \\<exists>y. pA x y = 0}", "obtain y where L1: \"pA x y = 0\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  A = {x. \\<exists>y. pA x y = 0}\n\ngoal (1 subgoal):\n 1. (\\<And>y. pA x y = 0 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  pA x y = 0\n\ngoal (1 subgoal):\n 1. \\<exists>xa. x = q xa \\<and> xa \\<in> UNIV", "let ?z = \"c_pair x y\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>xa. x = q xa \\<and> xa \\<in> UNIV", "from L1"], ["proof (chain)\npicking this:\n  pA x y = 0", "have \"q ?z = x\""], ["proof (prove)\nusing this:\n  pA x y = 0\n\ngoal (1 subgoal):\n 1. q (c_pair x y) = x", "by (simp add: q_def)"], ["proof (state)\nthis:\n  q (c_pair x y) = x\n\ngoal (1 subgoal):\n 1. \\<exists>xa. x = q xa \\<and> xa \\<in> UNIV", "then"], ["proof (chain)\npicking this:\n  q (c_pair x y) = x", "have \"\\<exists> u. q u = x\""], ["proof (prove)\nusing this:\n  q (c_pair x y) = x\n\ngoal (1 subgoal):\n 1. \\<exists>u. q u = x", "by blast"], ["proof (state)\nthis:\n  \\<exists>u. q u = x\n\ngoal (1 subgoal):\n 1. \\<exists>xa. x = q xa \\<and> xa \\<in> UNIV", "then"], ["proof (chain)\npicking this:\n  \\<exists>u. q u = x", "show \"\\<exists>u. x = q u \\<and> u \\<in> UNIV\""], ["proof (prove)\nusing this:\n  \\<exists>u. q u = x\n\ngoal (1 subgoal):\n 1. \\<exists>u. x = q u \\<and> u \\<in> UNIV", "by auto"], ["proof (state)\nthis:\n  \\<exists>u. x = q u \\<and> u \\<in> UNIV\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> {q x |x. x \\<in> UNIV}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A \\<subseteq> {q x |x. x \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>q\\<in>PrimRec1. A = {q x |x. x \\<in> UNIV}", "from S4 S5"], ["proof (chain)\npicking this:\n  {q x |x. x \\<in> UNIV} \\<subseteq> A\n  A \\<subseteq> {q x |x. x \\<in> UNIV}", "have S6: \"A = { q x | x. x \\<in> UNIV }\""], ["proof (prove)\nusing this:\n  {q x |x. x \\<in> UNIV} \\<subseteq> A\n  A \\<subseteq> {q x |x. x \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. A = {q x |x. x \\<in> UNIV}", "by auto"], ["proof (state)\nthis:\n  A = {q x |x. x \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>q\\<in>PrimRec1. A = {q x |x. x \\<in> UNIV}", "with q_is_pr"], ["proof (chain)\npicking this:\n  q \\<in> PrimRec1\n  A = {q x |x. x \\<in> UNIV}", "show ?thesis"], ["proof (prove)\nusing this:\n  q \\<in> PrimRec1\n  A = {q x |x. x \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>PrimRec1. A = {q x |x. x \\<in> UNIV}", "by blast"], ["proof (state)\nthis:\n  \\<exists>q\\<in>PrimRec1. A = {q x |x. x \\<in> UNIV}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_set_lm_7: \"\\<lbrakk> A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk> \\<Longrightarrow> { p x | x. x \\<in> A } \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {p x |x. x \\<in> A} \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {p x |x. x \\<in> A} \\<in> ce_sets", "assume A1: \"A \\<in> ce_sets\""], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {p x |x. x \\<in> A} \\<in> ce_sets", "assume A2: \"p \\<in> PrimRec1\""], ["proof (state)\nthis:\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {p x |x. x \\<in> A} \\<in> ce_sets", "let ?B = \"{ p x | x. x \\<in> A }\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {p x |x. x \\<in> A} \\<in> ce_sets", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {p x |x. x \\<in> A} \\<in> ce_sets", "have S1: \"(y \\<in> ?B) = (\\<exists> x. x \\<in> A \\<and> (y = p x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<in> {p x |x. x \\<in> A}) = (\\<exists>x. x \\<in> A \\<and> y = p x)", "by auto"], ["proof (state)\nthis:\n  (y \\<in> {p x |x. x \\<in> A}) = (\\<exists>x. x \\<in> A \\<and> y = p x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {p x |x. x \\<in> A} \\<in> ce_sets", "from A1"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets", "have \"\\<exists> pA \\<in> PrimRec2. A = fn_to_set pA\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<exists>pA\\<in>PrimRec2. A = fn_to_set pA", "by (rule ce_set_lm_3)"], ["proof (state)\nthis:\n  \\<exists>pA\\<in>PrimRec2. A = fn_to_set pA\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {p x |x. x \\<in> A} \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  \\<exists>pA\\<in>PrimRec2. A = fn_to_set pA", "obtain pA where pA_is_pr: \"pA \\<in> PrimRec2\" and S2: \"A = fn_to_set pA\""], ["proof (prove)\nusing this:\n  \\<exists>pA\\<in>PrimRec2. A = fn_to_set pA\n\ngoal (1 subgoal):\n 1. (\\<And>pA.\n        \\<lbrakk>pA \\<in> PrimRec2; A = fn_to_set pA\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  pA \\<in> PrimRec2\n  A = fn_to_set pA\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {p x |x. x \\<in> A} \\<in> ce_sets", "from S2"], ["proof (chain)\npicking this:\n  A = fn_to_set pA", "have S3: \"A = { x. \\<exists> y. pA x y = 0 }\""], ["proof (prove)\nusing this:\n  A = fn_to_set pA\n\ngoal (1 subgoal):\n 1. A = {x. \\<exists>y. pA x y = 0}", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  A = {x. \\<exists>y. pA x y = 0}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {p x |x. x \\<in> A} \\<in> ce_sets", "define q where \"q y t = (if y = p (c_snd t) then pA (c_snd t) (c_fst t) else 1)\" for y t"], ["proof (state)\nthis:\n  q ?y ?t = (if ?y = p (c_snd ?t) then pA (c_snd ?t) (c_fst ?t) else 1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {p x |x. x \\<in> A} \\<in> ce_sets", "from pA_is_pr A2"], ["proof (chain)\npicking this:\n  pA \\<in> PrimRec2\n  p \\<in> PrimRec1", "have q_is_pr: \"q \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  pA \\<in> PrimRec2\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. q \\<in> PrimRec2", "unfolding q_def"], ["proof (prove)\nusing this:\n  pA \\<in> PrimRec2\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>y t. if y = p (c_snd t) then pA (c_snd t) (c_fst t) else 1)\n    \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  q \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {p x |x. x \\<in> A} \\<in> ce_sets", "have L1: \"\\<And> y. (y \\<in> ?B) = (\\<exists> z. q y z = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y. (y \\<in> {p x |x. x \\<in> A}) = (\\<exists>z. q y z = 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. (y \\<in> {p x |x. x \\<in> A}) = (\\<exists>z. q y z = 0)", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. (y \\<in> {p x |x. x \\<in> A}) = (\\<exists>z. q y z = 0)", "show \"(y \\<in> ?B) = (\\<exists> z. q y z = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<in> {p x |x. x \\<in> A}) = (\\<exists>z. q y z = 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. y \\<in> {p x |x. x \\<in> A} \\<Longrightarrow> \\<exists>z. q y z = 0\n 2. \\<exists>z. q y z = 0 \\<Longrightarrow> y \\<in> {p x |x. x \\<in> A}", "assume AA1: \"y \\<in> ?B\""], ["proof (state)\nthis:\n  y \\<in> {p x |x. x \\<in> A}\n\ngoal (2 subgoals):\n 1. y \\<in> {p x |x. x \\<in> A} \\<Longrightarrow> \\<exists>z. q y z = 0\n 2. \\<exists>z. q y z = 0 \\<Longrightarrow> y \\<in> {p x |x. x \\<in> A}", "then"], ["proof (chain)\npicking this:\n  y \\<in> {p x |x. x \\<in> A}", "obtain x0 where LL_2: \"x0 \\<in> A\" and LL_3: \"y = p x0\""], ["proof (prove)\nusing this:\n  y \\<in> {p x |x. x \\<in> A}\n\ngoal (1 subgoal):\n 1. (\\<And>x0.\n        \\<lbrakk>x0 \\<in> A; y = p x0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x0 \\<in> A\n  y = p x0\n\ngoal (2 subgoals):\n 1. y \\<in> {p x |x. x \\<in> A} \\<Longrightarrow> \\<exists>z. q y z = 0\n 2. \\<exists>z. q y z = 0 \\<Longrightarrow> y \\<in> {p x |x. x \\<in> A}", "from S3"], ["proof (chain)\npicking this:\n  A = {x. \\<exists>y. pA x y = 0}", "have LL_4: \"(x0 \\<in> A) = (\\<exists> z. pA x0 z = 0)\""], ["proof (prove)\nusing this:\n  A = {x. \\<exists>y. pA x y = 0}\n\ngoal (1 subgoal):\n 1. (x0 \\<in> A) = (\\<exists>z. pA x0 z = 0)", "by auto"], ["proof (state)\nthis:\n  (x0 \\<in> A) = (\\<exists>z. pA x0 z = 0)\n\ngoal (2 subgoals):\n 1. y \\<in> {p x |x. x \\<in> A} \\<Longrightarrow> \\<exists>z. q y z = 0\n 2. \\<exists>z. q y z = 0 \\<Longrightarrow> y \\<in> {p x |x. x \\<in> A}", "from LL_2 LL_4"], ["proof (chain)\npicking this:\n  x0 \\<in> A\n  (x0 \\<in> A) = (\\<exists>z. pA x0 z = 0)", "obtain z0 where LL_5: \"pA x0 z0 = 0\""], ["proof (prove)\nusing this:\n  x0 \\<in> A\n  (x0 \\<in> A) = (\\<exists>z. pA x0 z = 0)\n\ngoal (1 subgoal):\n 1. (\\<And>z0. pA x0 z0 = 0 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  pA x0 z0 = 0\n\ngoal (2 subgoals):\n 1. y \\<in> {p x |x. x \\<in> A} \\<Longrightarrow> \\<exists>z. q y z = 0\n 2. \\<exists>z. q y z = 0 \\<Longrightarrow> y \\<in> {p x |x. x \\<in> A}", "define t where \"t = c_pair z0 x0\""], ["proof (state)\nthis:\n  t = c_pair z0 x0\n\ngoal (2 subgoals):\n 1. y \\<in> {p x |x. x \\<in> A} \\<Longrightarrow> \\<exists>z. q y z = 0\n 2. \\<exists>z. q y z = 0 \\<Longrightarrow> y \\<in> {p x |x. x \\<in> A}", "from t_def q_def LL_3 LL_5"], ["proof (chain)\npicking this:\n  t = c_pair z0 x0\n  q ?y ?t = (if ?y = p (c_snd ?t) then pA (c_snd ?t) (c_fst ?t) else 1)\n  y = p x0\n  pA x0 z0 = 0", "have \"q y t = 0\""], ["proof (prove)\nusing this:\n  t = c_pair z0 x0\n  q ?y ?t = (if ?y = p (c_snd ?t) then pA (c_snd ?t) (c_fst ?t) else 1)\n  y = p x0\n  pA x0 z0 = 0\n\ngoal (1 subgoal):\n 1. q y t = 0", "by simp"], ["proof (state)\nthis:\n  q y t = 0\n\ngoal (2 subgoals):\n 1. y \\<in> {p x |x. x \\<in> A} \\<Longrightarrow> \\<exists>z. q y z = 0\n 2. \\<exists>z. q y z = 0 \\<Longrightarrow> y \\<in> {p x |x. x \\<in> A}", "then"], ["proof (chain)\npicking this:\n  q y t = 0", "show \"\\<exists> z. q y z = 0\""], ["proof (prove)\nusing this:\n  q y t = 0\n\ngoal (1 subgoal):\n 1. \\<exists>z. q y z = 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>z. q y z = 0\n\ngoal (1 subgoal):\n 1. \\<exists>z. q y z = 0 \\<Longrightarrow> y \\<in> {p x |x. x \\<in> A}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>z. q y z = 0 \\<Longrightarrow> y \\<in> {p x |x. x \\<in> A}", "assume A1: \"\\<exists> z. q y z = 0\""], ["proof (state)\nthis:\n  \\<exists>z. q y z = 0\n\ngoal (1 subgoal):\n 1. \\<exists>z. q y z = 0 \\<Longrightarrow> y \\<in> {p x |x. x \\<in> A}", "then"], ["proof (chain)\npicking this:\n  \\<exists>z. q y z = 0", "obtain z0 where LL_1: \"q y z0 = 0\""], ["proof (prove)\nusing this:\n  \\<exists>z. q y z = 0\n\ngoal (1 subgoal):\n 1. (\\<And>z0. q y z0 = 0 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", ".."], ["proof (state)\nthis:\n  q y z0 = 0\n\ngoal (1 subgoal):\n 1. \\<exists>z. q y z = 0 \\<Longrightarrow> y \\<in> {p x |x. x \\<in> A}", "have LL2: \"y = p (c_snd z0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = p (c_snd z0)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<noteq> p (c_snd z0) \\<Longrightarrow> False", "assume \"y \\<noteq> p (c_snd z0)\""], ["proof (state)\nthis:\n  y \\<noteq> p (c_snd z0)\n\ngoal (1 subgoal):\n 1. y \\<noteq> p (c_snd z0) \\<Longrightarrow> False", "with q_def LL_1"], ["proof (chain)\npicking this:\n  q ?y ?t = (if ?y = p (c_snd ?t) then pA (c_snd ?t) (c_fst ?t) else 1)\n  q y z0 = 0\n  y \\<noteq> p (c_snd z0)", "have \"q y z0 = 1\""], ["proof (prove)\nusing this:\n  q ?y ?t = (if ?y = p (c_snd ?t) then pA (c_snd ?t) (c_fst ?t) else 1)\n  q y z0 = 0\n  y \\<noteq> p (c_snd z0)\n\ngoal (1 subgoal):\n 1. q y z0 = 1", "by auto"], ["proof (state)\nthis:\n  q y z0 = 1\n\ngoal (1 subgoal):\n 1. y \\<noteq> p (c_snd z0) \\<Longrightarrow> False", "with LL_1"], ["proof (chain)\npicking this:\n  q y z0 = 0\n  q y z0 = 1", "show False"], ["proof (prove)\nusing this:\n  q y z0 = 0\n  q y z0 = 1\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y = p (c_snd z0)\n\ngoal (1 subgoal):\n 1. \\<exists>z. q y z = 0 \\<Longrightarrow> y \\<in> {p x |x. x \\<in> A}", "from LL2 LL_1 q_def"], ["proof (chain)\npicking this:\n  y = p (c_snd z0)\n  q y z0 = 0\n  q ?y ?t = (if ?y = p (c_snd ?t) then pA (c_snd ?t) (c_fst ?t) else 1)", "have LL3: \"pA (c_snd z0) (c_fst z0) = 0\""], ["proof (prove)\nusing this:\n  y = p (c_snd z0)\n  q y z0 = 0\n  q ?y ?t = (if ?y = p (c_snd ?t) then pA (c_snd ?t) (c_fst ?t) else 1)\n\ngoal (1 subgoal):\n 1. pA (c_snd z0) (c_fst z0) = 0", "by auto"], ["proof (state)\nthis:\n  pA (c_snd z0) (c_fst z0) = 0\n\ngoal (1 subgoal):\n 1. \\<exists>z. q y z = 0 \\<Longrightarrow> y \\<in> {p x |x. x \\<in> A}", "with S3"], ["proof (chain)\npicking this:\n  A = {x. \\<exists>y. pA x y = 0}\n  pA (c_snd z0) (c_fst z0) = 0", "have LL4: \"c_snd z0 \\<in> A\""], ["proof (prove)\nusing this:\n  A = {x. \\<exists>y. pA x y = 0}\n  pA (c_snd z0) (c_fst z0) = 0\n\ngoal (1 subgoal):\n 1. c_snd z0 \\<in> A", "by auto"], ["proof (state)\nthis:\n  c_snd z0 \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>z. q y z = 0 \\<Longrightarrow> y \\<in> {p x |x. x \\<in> A}", "with LL2"], ["proof (chain)\npicking this:\n  y = p (c_snd z0)\n  c_snd z0 \\<in> A", "show \"y \\<in> {p x | x. x \\<in> A}\""], ["proof (prove)\nusing this:\n  y = p (c_snd z0)\n  c_snd z0 \\<in> A\n\ngoal (1 subgoal):\n 1. y \\<in> {p x |x. x \\<in> A}", "by auto"], ["proof (state)\nthis:\n  y \\<in> {p x |x. x \\<in> A}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (y \\<in> {p x |x. x \\<in> A}) = (\\<exists>z. q y z = 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (?y \\<in> {p x |x. x \\<in> A}) = (\\<exists>z. q ?y z = 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {p x |x. x \\<in> A} \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  (?y \\<in> {p x |x. x \\<in> A}) = (\\<exists>z. q ?y z = 0)", "have L2: \"?B = { y | y. \\<exists> z. q y z = 0}\""], ["proof (prove)\nusing this:\n  (?y \\<in> {p x |x. x \\<in> A}) = (\\<exists>z. q ?y z = 0)\n\ngoal (1 subgoal):\n 1. {p x |x. x \\<in> A} = {y |y. \\<exists>z. q y z = 0}", "by auto"], ["proof (state)\nthis:\n  {p x |x. x \\<in> A} = {y |y. \\<exists>z. q y z = 0}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {p x |x. x \\<in> A} \\<in> ce_sets", "with fn_to_set_def"], ["proof (chain)\npicking this:\n  fn_to_set ?f = {x. \\<exists>y. ?f x y = 0}\n  {p x |x. x \\<in> A} = {y |y. \\<exists>z. q y z = 0}", "have \"?B = fn_to_set q\""], ["proof (prove)\nusing this:\n  fn_to_set ?f = {x. \\<exists>y. ?f x y = 0}\n  {p x |x. x \\<in> A} = {y |y. \\<exists>z. q y z = 0}\n\ngoal (1 subgoal):\n 1. {p x |x. x \\<in> A} = fn_to_set q", "by auto"], ["proof (state)\nthis:\n  {p x |x. x \\<in> A} = fn_to_set q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; p \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> {p x |x. x \\<in> A} \\<in> ce_sets", "with q_is_pr ce_set_lm_1"], ["proof (chain)\npicking this:\n  q \\<in> PrimRec2\n  ?p \\<in> PrimRec2 \\<Longrightarrow> fn_to_set ?p \\<in> ce_sets\n  {p x |x. x \\<in> A} = fn_to_set q", "show ?thesis"], ["proof (prove)\nusing this:\n  q \\<in> PrimRec2\n  ?p \\<in> PrimRec2 \\<Longrightarrow> fn_to_set ?p \\<in> ce_sets\n  {p x |x. x \\<in> A} = fn_to_set q\n\ngoal (1 subgoal):\n 1. {p x |x. x \\<in> A} \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  {p x |x. x \\<in> A} \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem ce_empty: \"{} \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {} \\<in> ce_sets", "let ?f = \"(\\<lambda> x a. (1::nat))\""], ["proof (state)\ngoal (1 subgoal):\n 1. {} \\<in> ce_sets", "have S1: \"?f \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x a. 1) \\<in> PrimRec2", "by (rule const_is_pr_2)"], ["proof (state)\nthis:\n  (\\<lambda>x a. 1) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. {} \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x a. 1) \\<in> PrimRec2", "have \"\\<forall> x a. ?f x a \\<noteq> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>x a. 1) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<forall>x a. 1 \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  \\<forall>x a. 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. {} \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  \\<forall>x a. 1 \\<noteq> 0", "have \"{x. \\<exists> a. ?f x a = 0 }={}\""], ["proof (prove)\nusing this:\n  \\<forall>x a. 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. {x. \\<exists>a. 1 = 0} = {}", "by auto"], ["proof (state)\nthis:\n  {x. \\<exists>a. 1 = 0} = {}\n\ngoal (1 subgoal):\n 1. {} \\<in> ce_sets", "also"], ["proof (state)\nthis:\n  {x. \\<exists>a. 1 = 0} = {}\n\ngoal (1 subgoal):\n 1. {} \\<in> ce_sets", "have \"fn_to_set ?f = \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fn_to_set (\\<lambda>x a. 1) = {}", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  fn_to_set (\\<lambda>x a. 1) = {}\n\ngoal (1 subgoal):\n 1. {} \\<in> ce_sets", "with S1"], ["proof (chain)\npicking this:\n  (\\<lambda>x a. 1) \\<in> PrimRec2\n  fn_to_set (\\<lambda>x a. 1) = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x a. 1) \\<in> PrimRec2\n  fn_to_set (\\<lambda>x a. 1) = {}\n\ngoal (1 subgoal):\n 1. {} \\<in> ce_sets", "by (auto simp add: ce_sets_def)"], ["proof (state)\nthis:\n  {} \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem ce_univ: \"UNIV \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. UNIV \\<in> ce_sets", "let ?f = \"(\\<lambda> x a. (0::nat))\""], ["proof (state)\ngoal (1 subgoal):\n 1. UNIV \\<in> ce_sets", "have S1: \"?f \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x a. 0) \\<in> PrimRec2", "by (rule const_is_pr_2)"], ["proof (state)\nthis:\n  (\\<lambda>x a. 0) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. UNIV \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x a. 0) \\<in> PrimRec2", "have \"\\<forall> x a. ?f x a = 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>x a. 0) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<forall>x a. 0 = 0", "by simp"], ["proof (state)\nthis:\n  \\<forall>x a. 0 = 0\n\ngoal (1 subgoal):\n 1. UNIV \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  \\<forall>x a. 0 = 0", "have \"{x. \\<exists> a. ?f x a = 0 }=UNIV\""], ["proof (prove)\nusing this:\n  \\<forall>x a. 0 = 0\n\ngoal (1 subgoal):\n 1. {x. \\<exists>a. 0 = 0} = UNIV", "by auto"], ["proof (state)\nthis:\n  {x. \\<exists>a. 0 = 0} = UNIV\n\ngoal (1 subgoal):\n 1. UNIV \\<in> ce_sets", "also"], ["proof (state)\nthis:\n  {x. \\<exists>a. 0 = 0} = UNIV\n\ngoal (1 subgoal):\n 1. UNIV \\<in> ce_sets", "have \"fn_to_set ?f = \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fn_to_set (\\<lambda>x a. 0) = UNIV", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  fn_to_set (\\<lambda>x a. 0) = UNIV\n\ngoal (1 subgoal):\n 1. UNIV \\<in> ce_sets", "with S1"], ["proof (chain)\npicking this:\n  (\\<lambda>x a. 0) \\<in> PrimRec2\n  fn_to_set (\\<lambda>x a. 0) = UNIV", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x a. 0) \\<in> PrimRec2\n  fn_to_set (\\<lambda>x a. 0) = UNIV\n\ngoal (1 subgoal):\n 1. UNIV \\<in> ce_sets", "by (auto simp add: ce_sets_def)"], ["proof (state)\nthis:\n  UNIV \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem ce_singleton: \"{a} \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a} \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {a} \\<in> ce_sets", "let ?f = \"\\<lambda> x y. (abs_of_diff x a) + y\""], ["proof (state)\ngoal (1 subgoal):\n 1. {a} \\<in> ce_sets", "have S1: \"?f \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (+) (abs_of_diff x a)) \\<in> PrimRec2", "using const_is_pr_2 [where ?n=\"a\"]"], ["proof (prove)\nusing this:\n  (\\<lambda>x y. a) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (+) (abs_of_diff x a)) \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>x. (+) (abs_of_diff x a)) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. {a} \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. (+) (abs_of_diff x a)) \\<in> PrimRec2", "have \"\\<forall> x y. (?f x y = 0) = (x=a \\<and> y=0)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. (+) (abs_of_diff x a)) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<forall>x y. (abs_of_diff x a + y = 0) = (x = a \\<and> y = 0)", "by (simp add: abs_of_diff_eq)"], ["proof (state)\nthis:\n  \\<forall>x y. (abs_of_diff x a + y = 0) = (x = a \\<and> y = 0)\n\ngoal (1 subgoal):\n 1. {a} \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  \\<forall>x y. (abs_of_diff x a + y = 0) = (x = a \\<and> y = 0)", "have S2: \"{x. \\<exists> y. ?f x y = 0 }={a}\""], ["proof (prove)\nusing this:\n  \\<forall>x y. (abs_of_diff x a + y = 0) = (x = a \\<and> y = 0)\n\ngoal (1 subgoal):\n 1. {x. \\<exists>y. abs_of_diff x a + y = 0} = {a}", "by auto"], ["proof (state)\nthis:\n  {x. \\<exists>y. abs_of_diff x a + y = 0} = {a}\n\ngoal (1 subgoal):\n 1. {a} \\<in> ce_sets", "have \"fn_to_set ?f = {x. \\<exists> y. ?f x y = 0 }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fn_to_set (\\<lambda>x. (+) (abs_of_diff x a)) =\n    {x. \\<exists>y. abs_of_diff x a + y = 0}", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  fn_to_set (\\<lambda>x. (+) (abs_of_diff x a)) =\n  {x. \\<exists>y. abs_of_diff x a + y = 0}\n\ngoal (1 subgoal):\n 1. {a} \\<in> ce_sets", "with S2"], ["proof (chain)\npicking this:\n  {x. \\<exists>y. abs_of_diff x a + y = 0} = {a}\n  fn_to_set (\\<lambda>x. (+) (abs_of_diff x a)) =\n  {x. \\<exists>y. abs_of_diff x a + y = 0}", "have \"fn_to_set ?f = {a}\""], ["proof (prove)\nusing this:\n  {x. \\<exists>y. abs_of_diff x a + y = 0} = {a}\n  fn_to_set (\\<lambda>x. (+) (abs_of_diff x a)) =\n  {x. \\<exists>y. abs_of_diff x a + y = 0}\n\ngoal (1 subgoal):\n 1. fn_to_set (\\<lambda>x. (+) (abs_of_diff x a)) = {a}", "by simp"], ["proof (state)\nthis:\n  fn_to_set (\\<lambda>x. (+) (abs_of_diff x a)) = {a}\n\ngoal (1 subgoal):\n 1. {a} \\<in> ce_sets", "with S1"], ["proof (chain)\npicking this:\n  (\\<lambda>x. (+) (abs_of_diff x a)) \\<in> PrimRec2\n  fn_to_set (\\<lambda>x. (+) (abs_of_diff x a)) = {a}", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. (+) (abs_of_diff x a)) \\<in> PrimRec2\n  fn_to_set (\\<lambda>x. (+) (abs_of_diff x a)) = {a}\n\ngoal (1 subgoal):\n 1. {a} \\<in> ce_sets", "by (auto simp add: ce_sets_def)"], ["proof (state)\nthis:\n  {a} \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem ce_union: \"\\<lbrakk> A \\<in> ce_sets; B \\<in> ce_sets \\<rbrakk> \\<Longrightarrow> A \\<union> B \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<union> B \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<union> B \\<in> ce_sets", "assume A1: \"A \\<in> ce_sets\""], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<union> B \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets", "obtain p_a where S2: \"p_a \\<in> PrimRec2\" and S3: \"A = fn_to_set p_a\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. (\\<And>p_a.\n        \\<lbrakk>p_a \\<in> PrimRec2; A = fn_to_set p_a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: ce_sets_def)"], ["proof (state)\nthis:\n  p_a \\<in> PrimRec2\n  A = fn_to_set p_a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<union> B \\<in> ce_sets", "assume A2: \"B \\<in> ce_sets\""], ["proof (state)\nthis:\n  B \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<union> B \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  B \\<in> ce_sets", "obtain p_b where S5: \"p_b \\<in> PrimRec2\" and S6: \"B = fn_to_set p_b\""], ["proof (prove)\nusing this:\n  B \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. (\\<And>p_b.\n        \\<lbrakk>p_b \\<in> PrimRec2; B = fn_to_set p_b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: ce_sets_def)"], ["proof (state)\nthis:\n  p_b \\<in> PrimRec2\n  B = fn_to_set p_b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<union> B \\<in> ce_sets", "let ?p = \"(\\<lambda> x y. (p_a x y) * (p_b x y))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<union> B \\<in> ce_sets", "from S2 S5"], ["proof (chain)\npicking this:\n  p_a \\<in> PrimRec2\n  p_b \\<in> PrimRec2", "have S7: \"?p \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  p_a \\<in> PrimRec2\n  p_b \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. p_a x y * p_b x y) \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>x y. p_a x y * p_b x y) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<union> B \\<in> ce_sets", "have S8: \"\\<forall> x y. (?p x y = 0) = ((p_a x y = 0) \\<or> (p_b x y = 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. (p_a x y * p_b x y = 0) = (p_a x y = 0 \\<or> p_b x y = 0)", "by simp"], ["proof (state)\nthis:\n  \\<forall>x y. (p_a x y * p_b x y = 0) = (p_a x y = 0 \\<or> p_b x y = 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<union> B \\<in> ce_sets", "let ?C = \"fn_to_set ?p\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<union> B \\<in> ce_sets", "have S9: \"?C = {x. \\<exists> y. ?p x y = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fn_to_set (\\<lambda>x y. p_a x y * p_b x y) =\n    {x. \\<exists>y. p_a x y * p_b x y = 0}", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  fn_to_set (\\<lambda>x y. p_a x y * p_b x y) =\n  {x. \\<exists>y. p_a x y * p_b x y = 0}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<union> B \\<in> ce_sets", "from S3"], ["proof (chain)\npicking this:\n  A = fn_to_set p_a", "have S10: \"A = {x. \\<exists> y. p_a x y = 0}\""], ["proof (prove)\nusing this:\n  A = fn_to_set p_a\n\ngoal (1 subgoal):\n 1. A = {x. \\<exists>y. p_a x y = 0}", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  A = {x. \\<exists>y. p_a x y = 0}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<union> B \\<in> ce_sets", "from S6"], ["proof (chain)\npicking this:\n  B = fn_to_set p_b", "have S11: \"B = {x. \\<exists> y. p_b x y = 0}\""], ["proof (prove)\nusing this:\n  B = fn_to_set p_b\n\ngoal (1 subgoal):\n 1. B = {x. \\<exists>y. p_b x y = 0}", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  B = {x. \\<exists>y. p_b x y = 0}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<union> B \\<in> ce_sets", "from S10 S11 S9 S8"], ["proof (chain)\npicking this:\n  A = {x. \\<exists>y. p_a x y = 0}\n  B = {x. \\<exists>y. p_b x y = 0}\n  fn_to_set (\\<lambda>x y. p_a x y * p_b x y) =\n  {x. \\<exists>y. p_a x y * p_b x y = 0}\n  \\<forall>x y. (p_a x y * p_b x y = 0) = (p_a x y = 0 \\<or> p_b x y = 0)", "have S12: \"?C = A \\<union> B\""], ["proof (prove)\nusing this:\n  A = {x. \\<exists>y. p_a x y = 0}\n  B = {x. \\<exists>y. p_b x y = 0}\n  fn_to_set (\\<lambda>x y. p_a x y * p_b x y) =\n  {x. \\<exists>y. p_a x y * p_b x y = 0}\n  \\<forall>x y. (p_a x y * p_b x y = 0) = (p_a x y = 0 \\<or> p_b x y = 0)\n\ngoal (1 subgoal):\n 1. fn_to_set (\\<lambda>x y. p_a x y * p_b x y) = A \\<union> B", "by auto"], ["proof (state)\nthis:\n  fn_to_set (\\<lambda>x y. p_a x y * p_b x y) = A \\<union> B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<union> B \\<in> ce_sets", "from S7"], ["proof (chain)\npicking this:\n  (\\<lambda>x y. p_a x y * p_b x y) \\<in> PrimRec2", "have \"?C \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  (\\<lambda>x y. p_a x y * p_b x y) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. fn_to_set (\\<lambda>x y. p_a x y * p_b x y) \\<in> ce_sets", "by (auto simp add: ce_sets_def)"], ["proof (state)\nthis:\n  fn_to_set (\\<lambda>x y. p_a x y * p_b x y) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<union> B \\<in> ce_sets", "with S12"], ["proof (chain)\npicking this:\n  fn_to_set (\\<lambda>x y. p_a x y * p_b x y) = A \\<union> B\n  fn_to_set (\\<lambda>x y. p_a x y * p_b x y) \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  fn_to_set (\\<lambda>x y. p_a x y * p_b x y) = A \\<union> B\n  fn_to_set (\\<lambda>x y. p_a x y * p_b x y) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. A \\<union> B \\<in> ce_sets", "by simp"], ["proof (state)\nthis:\n  A \\<union> B \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem ce_intersect: \"\\<lbrakk> A \\<in> ce_sets; B \\<in> ce_sets \\<rbrakk> \\<Longrightarrow> A \\<inter> B \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<inter> B \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<inter> B \\<in> ce_sets", "assume A1: \"A \\<in> ce_sets\""], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<inter> B \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets", "obtain p_a where S2: \"p_a \\<in> PrimRec2\" and S3: \"A = fn_to_set p_a\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. (\\<And>p_a.\n        \\<lbrakk>p_a \\<in> PrimRec2; A = fn_to_set p_a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: ce_sets_def)"], ["proof (state)\nthis:\n  p_a \\<in> PrimRec2\n  A = fn_to_set p_a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<inter> B \\<in> ce_sets", "assume A2: \"B \\<in> ce_sets\""], ["proof (state)\nthis:\n  B \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<inter> B \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  B \\<in> ce_sets", "obtain p_b where S5: \"p_b \\<in> PrimRec2\" and S6: \"B = fn_to_set p_b\""], ["proof (prove)\nusing this:\n  B \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. (\\<And>p_b.\n        \\<lbrakk>p_b \\<in> PrimRec2; B = fn_to_set p_b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: ce_sets_def)"], ["proof (state)\nthis:\n  p_b \\<in> PrimRec2\n  B = fn_to_set p_b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<inter> B \\<in> ce_sets", "let ?p = \"(\\<lambda> x y. (p_a x (c_fst y)) + (p_b x (c_snd y)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<inter> B \\<in> ce_sets", "from S2 S5"], ["proof (chain)\npicking this:\n  p_a \\<in> PrimRec2\n  p_b \\<in> PrimRec2", "have S7: \"?p \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  p_a \\<in> PrimRec2\n  p_b \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. p_a x (c_fst y) + p_b x (c_snd y)) \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>x y. p_a x (c_fst y) + p_b x (c_snd y)) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<inter> B \\<in> ce_sets", "have S8: \"\\<forall> x. (\\<exists> y. ?p x y = 0) = ((\\<exists> z. p_a x z = 0) \\<and> (\\<exists> z. p_b x z = 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n       ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n       ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n       ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))", "show \"(\\<exists> y. ?p x y = 0) = ((\\<exists> z. p_a x z = 0) \\<and> (\\<exists> z. p_b x z = 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n    ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n    ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))", "have 1: \"(\\<exists> y. ?p x y = 0) \\<Longrightarrow> ((\\<exists> z. p_a x z = 0) \\<and> (\\<exists> z. p_b x z = 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0 \\<Longrightarrow>\n    (\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0)", "by blast"], ["proof (state)\nthis:\n  \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0 \\<Longrightarrow>\n  (\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0)\n\ngoal (1 subgoal):\n 1. (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n    ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))", "have 2: \"((\\<exists> z. p_a x z = 0) \\<and> (\\<exists> z. p_b x z = 0)) \\<Longrightarrow> (\\<exists> y. ?p x y = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>z. p_a x z = 0) \\<and>\n    (\\<exists>z. p_b x z = 0) \\<Longrightarrow>\n    \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>z. p_a x z = 0) \\<and>\n    (\\<exists>z. p_b x z = 0) \\<Longrightarrow>\n    \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0", "assume \"((\\<exists> z. p_a x z = 0) \\<and> (\\<exists> z. p_b x z = 0))\""], ["proof (state)\nthis:\n  (\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0)\n\ngoal (1 subgoal):\n 1. (\\<exists>z. p_a x z = 0) \\<and>\n    (\\<exists>z. p_b x z = 0) \\<Longrightarrow>\n    \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0", "then"], ["proof (chain)\npicking this:\n  (\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0)", "obtain z1 z2 where s_23: \"p_a x z1 = 0\" and s_24: \"p_b x z2 = 0\""], ["proof (prove)\nusing this:\n  (\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0)\n\ngoal (1 subgoal):\n 1. (\\<And>z1 z2.\n        \\<lbrakk>p_a x z1 = 0; p_b x z2 = 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p_a x z1 = 0\n  p_b x z2 = 0\n\ngoal (1 subgoal):\n 1. (\\<exists>z. p_a x z = 0) \\<and>\n    (\\<exists>z. p_b x z = 0) \\<Longrightarrow>\n    \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0", "let ?y1 = \"c_pair z1 z2\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>z. p_a x z = 0) \\<and>\n    (\\<exists>z. p_b x z = 0) \\<Longrightarrow>\n    \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0", "from s_23"], ["proof (chain)\npicking this:\n  p_a x z1 = 0", "have s_25: \"p_a x (c_fst ?y1) = 0\""], ["proof (prove)\nusing this:\n  p_a x z1 = 0\n\ngoal (1 subgoal):\n 1. p_a x (c_fst (c_pair z1 z2)) = 0", "by simp"], ["proof (state)\nthis:\n  p_a x (c_fst (c_pair z1 z2)) = 0\n\ngoal (1 subgoal):\n 1. (\\<exists>z. p_a x z = 0) \\<and>\n    (\\<exists>z. p_b x z = 0) \\<Longrightarrow>\n    \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0", "from s_24"], ["proof (chain)\npicking this:\n  p_b x z2 = 0", "have s_26: \"p_b x (c_snd ?y1) = 0\""], ["proof (prove)\nusing this:\n  p_b x z2 = 0\n\ngoal (1 subgoal):\n 1. p_b x (c_snd (c_pair z1 z2)) = 0", "by simp"], ["proof (state)\nthis:\n  p_b x (c_snd (c_pair z1 z2)) = 0\n\ngoal (1 subgoal):\n 1. (\\<exists>z. p_a x z = 0) \\<and>\n    (\\<exists>z. p_b x z = 0) \\<Longrightarrow>\n    \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0", "from s_25 s_26"], ["proof (chain)\npicking this:\n  p_a x (c_fst (c_pair z1 z2)) = 0\n  p_b x (c_snd (c_pair z1 z2)) = 0", "have s_27: \"p_a x (c_fst ?y1) + p_b x (c_snd ?y1) = 0\""], ["proof (prove)\nusing this:\n  p_a x (c_fst (c_pair z1 z2)) = 0\n  p_b x (c_snd (c_pair z1 z2)) = 0\n\ngoal (1 subgoal):\n 1. p_a x (c_fst (c_pair z1 z2)) + p_b x (c_snd (c_pair z1 z2)) = 0", "by simp"], ["proof (state)\nthis:\n  p_a x (c_fst (c_pair z1 z2)) + p_b x (c_snd (c_pair z1 z2)) = 0\n\ngoal (1 subgoal):\n 1. (\\<exists>z. p_a x z = 0) \\<and>\n    (\\<exists>z. p_b x z = 0) \\<Longrightarrow>\n    \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0", "then"], ["proof (chain)\npicking this:\n  p_a x (c_fst (c_pair z1 z2)) + p_b x (c_snd (c_pair z1 z2)) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  p_a x (c_fst (c_pair z1 z2)) + p_b x (c_snd (c_pair z1 z2)) = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0", ".."], ["proof (state)\nthis:\n  \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>z. p_a x z = 0) \\<and>\n  (\\<exists>z. p_b x z = 0) \\<Longrightarrow>\n  \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0\n\ngoal (1 subgoal):\n 1. (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n    ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))", "from 1 2"], ["proof (chain)\npicking this:\n  \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0 \\<Longrightarrow>\n  (\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0)\n  (\\<exists>z. p_a x z = 0) \\<and>\n  (\\<exists>z. p_b x z = 0) \\<Longrightarrow>\n  \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0", "have \"(\\<exists> y. ?p x y = 0) = ((\\<exists> z. p_a x z = 0) \\<and> (\\<exists> z. p_b x z = 0))\""], ["proof (prove)\nusing this:\n  \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0 \\<Longrightarrow>\n  (\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0)\n  (\\<exists>z. p_a x z = 0) \\<and>\n  (\\<exists>z. p_b x z = 0) \\<Longrightarrow>\n  \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0\n\ngoal (1 subgoal):\n 1. (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n    ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))", "by (rule iffI)"], ["proof (state)\nthis:\n  (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n  ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))\n\ngoal (1 subgoal):\n 1. (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n    ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))", "then"], ["proof (chain)\npicking this:\n  (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n  ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n  ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))\n\ngoal (1 subgoal):\n 1. (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n    ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))", "by auto"], ["proof (state)\nthis:\n  (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n  ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n  ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x.\n     (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n     ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<inter> B \\<in> ce_sets", "let ?C = \"fn_to_set ?p\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<inter> B \\<in> ce_sets", "have S9: \"?C = {x. \\<exists> y. ?p x y = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fn_to_set (\\<lambda>x y. p_a x (c_fst y) + p_b x (c_snd y)) =\n    {x. \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0}", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  fn_to_set (\\<lambda>x y. p_a x (c_fst y) + p_b x (c_snd y)) =\n  {x. \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<inter> B \\<in> ce_sets", "from S3"], ["proof (chain)\npicking this:\n  A = fn_to_set p_a", "have S10: \"A = {x. \\<exists> y. p_a x y = 0}\""], ["proof (prove)\nusing this:\n  A = fn_to_set p_a\n\ngoal (1 subgoal):\n 1. A = {x. \\<exists>y. p_a x y = 0}", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  A = {x. \\<exists>y. p_a x y = 0}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<inter> B \\<in> ce_sets", "from S6"], ["proof (chain)\npicking this:\n  B = fn_to_set p_b", "have S11: \"B = {x. \\<exists> y. p_b x y = 0}\""], ["proof (prove)\nusing this:\n  B = fn_to_set p_b\n\ngoal (1 subgoal):\n 1. B = {x. \\<exists>y. p_b x y = 0}", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  B = {x. \\<exists>y. p_b x y = 0}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<inter> B \\<in> ce_sets", "from S10 S11 S9 S8"], ["proof (chain)\npicking this:\n  A = {x. \\<exists>y. p_a x y = 0}\n  B = {x. \\<exists>y. p_b x y = 0}\n  fn_to_set (\\<lambda>x y. p_a x (c_fst y) + p_b x (c_snd y)) =\n  {x. \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0}\n  \\<forall>x.\n     (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n     ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))", "have S12: \"?C = A \\<inter> B\""], ["proof (prove)\nusing this:\n  A = {x. \\<exists>y. p_a x y = 0}\n  B = {x. \\<exists>y. p_b x y = 0}\n  fn_to_set (\\<lambda>x y. p_a x (c_fst y) + p_b x (c_snd y)) =\n  {x. \\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0}\n  \\<forall>x.\n     (\\<exists>y. p_a x (c_fst y) + p_b x (c_snd y) = 0) =\n     ((\\<exists>z. p_a x z = 0) \\<and> (\\<exists>z. p_b x z = 0))\n\ngoal (1 subgoal):\n 1. fn_to_set (\\<lambda>x y. p_a x (c_fst y) + p_b x (c_snd y)) =\n    A \\<inter> B", "by auto"], ["proof (state)\nthis:\n  fn_to_set (\\<lambda>x y. p_a x (c_fst y) + p_b x (c_snd y)) = A \\<inter> B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<inter> B \\<in> ce_sets", "from S7"], ["proof (chain)\npicking this:\n  (\\<lambda>x y. p_a x (c_fst y) + p_b x (c_snd y)) \\<in> PrimRec2", "have \"?C \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  (\\<lambda>x y. p_a x (c_fst y) + p_b x (c_snd y)) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. fn_to_set (\\<lambda>x y. p_a x (c_fst y) + p_b x (c_snd y))\n    \\<in> ce_sets", "by (auto simp add: ce_sets_def)"], ["proof (state)\nthis:\n  fn_to_set (\\<lambda>x y. p_a x (c_fst y) + p_b x (c_snd y)) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<inter> B \\<in> ce_sets", "with S12"], ["proof (chain)\npicking this:\n  fn_to_set (\\<lambda>x y. p_a x (c_fst y) + p_b x (c_snd y)) = A \\<inter> B\n  fn_to_set (\\<lambda>x y. p_a x (c_fst y) + p_b x (c_snd y)) \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  fn_to_set (\\<lambda>x y. p_a x (c_fst y) + p_b x (c_snd y)) = A \\<inter> B\n  fn_to_set (\\<lambda>x y. p_a x (c_fst y) + p_b x (c_snd y)) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. A \\<inter> B \\<in> ce_sets", "by simp"], ["proof (state)\nthis:\n  A \\<inter> B \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Enumeration of computably enumerable sets\\<close>"], ["", "definition\n  nat_to_ce_set :: \"nat \\<Rightarrow> (nat set)\" where\n  \"nat_to_ce_set = (\\<lambda> n. fn_to_set (pr_conv_1_to_2 (nat_to_pr n)))\""], ["", "lemma nat_to_ce_set_lm_1: \"nat_to_ce_set n = { x . \\<exists> y. (nat_to_pr n) (c_pair x y) = 0 }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_ce_set n = {x. \\<exists>y. nat_to_pr n (c_pair x y) = 0}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_ce_set n = {x. \\<exists>y. nat_to_pr n (c_pair x y) = 0}", "have S1: \"nat_to_ce_set n = fn_to_set (pr_conv_1_to_2 (nat_to_pr n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_ce_set n = fn_to_set (pr_conv_1_to_2 (nat_to_pr n))", "by (simp add: nat_to_ce_set_def)"], ["proof (state)\nthis:\n  nat_to_ce_set n = fn_to_set (pr_conv_1_to_2 (nat_to_pr n))\n\ngoal (1 subgoal):\n 1. nat_to_ce_set n = {x. \\<exists>y. nat_to_pr n (c_pair x y) = 0}", "then"], ["proof (chain)\npicking this:\n  nat_to_ce_set n = fn_to_set (pr_conv_1_to_2 (nat_to_pr n))", "have S2: \"nat_to_ce_set n = { x . \\<exists> y. (pr_conv_1_to_2 (nat_to_pr n)) x y = 0}\""], ["proof (prove)\nusing this:\n  nat_to_ce_set n = fn_to_set (pr_conv_1_to_2 (nat_to_pr n))\n\ngoal (1 subgoal):\n 1. nat_to_ce_set n = {x. \\<exists>y. pr_conv_1_to_2 (nat_to_pr n) x y = 0}", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  nat_to_ce_set n = {x. \\<exists>y. pr_conv_1_to_2 (nat_to_pr n) x y = 0}\n\ngoal (1 subgoal):\n 1. nat_to_ce_set n = {x. \\<exists>y. nat_to_pr n (c_pair x y) = 0}", "have S3: \"\\<And> x y. (pr_conv_1_to_2 (nat_to_pr n)) x y = (nat_to_pr n) (c_pair x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. pr_conv_1_to_2 (nat_to_pr n) x y = nat_to_pr n (c_pair x y)", "by (simp add: pr_conv_1_to_2_def)"], ["proof (state)\nthis:\n  pr_conv_1_to_2 (nat_to_pr n) ?x ?y = nat_to_pr n (c_pair ?x ?y)\n\ngoal (1 subgoal):\n 1. nat_to_ce_set n = {x. \\<exists>y. nat_to_pr n (c_pair x y) = 0}", "from S2 S3"], ["proof (chain)\npicking this:\n  nat_to_ce_set n = {x. \\<exists>y. pr_conv_1_to_2 (nat_to_pr n) x y = 0}\n  pr_conv_1_to_2 (nat_to_pr n) ?x ?y = nat_to_pr n (c_pair ?x ?y)", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_ce_set n = {x. \\<exists>y. pr_conv_1_to_2 (nat_to_pr n) x y = 0}\n  pr_conv_1_to_2 (nat_to_pr n) ?x ?y = nat_to_pr n (c_pair ?x ?y)\n\ngoal (1 subgoal):\n 1. nat_to_ce_set n = {x. \\<exists>y. nat_to_pr n (c_pair x y) = 0}", "by auto"], ["proof (state)\nthis:\n  nat_to_ce_set n = {x. \\<exists>y. nat_to_pr n (c_pair x y) = 0}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_ce_set_into_ce: \"nat_to_ce_set n \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_ce_set n \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_ce_set n \\<in> ce_sets", "have S1: \"nat_to_ce_set n = fn_to_set (pr_conv_1_to_2 (nat_to_pr n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_ce_set n = fn_to_set (pr_conv_1_to_2 (nat_to_pr n))", "by (simp add: nat_to_ce_set_def)"], ["proof (state)\nthis:\n  nat_to_ce_set n = fn_to_set (pr_conv_1_to_2 (nat_to_pr n))\n\ngoal (1 subgoal):\n 1. nat_to_ce_set n \\<in> ce_sets", "have \"(nat_to_pr n) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr n \\<in> PrimRec1", "by (rule nat_to_pr_into_pr)"], ["proof (state)\nthis:\n  nat_to_pr n \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. nat_to_ce_set n \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  nat_to_pr n \\<in> PrimRec1", "have S2: \"(pr_conv_1_to_2 (nat_to_pr n)) \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  nat_to_pr n \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. pr_conv_1_to_2 (nat_to_pr n) \\<in> PrimRec2", "by (rule pr_conv_1_to_2_lm)"], ["proof (state)\nthis:\n  pr_conv_1_to_2 (nat_to_pr n) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. nat_to_ce_set n \\<in> ce_sets", "from S2 S1"], ["proof (chain)\npicking this:\n  pr_conv_1_to_2 (nat_to_pr n) \\<in> PrimRec2\n  nat_to_ce_set n = fn_to_set (pr_conv_1_to_2 (nat_to_pr n))", "show ?thesis"], ["proof (prove)\nusing this:\n  pr_conv_1_to_2 (nat_to_pr n) \\<in> PrimRec2\n  nat_to_ce_set n = fn_to_set (pr_conv_1_to_2 (nat_to_pr n))\n\ngoal (1 subgoal):\n 1. nat_to_ce_set n \\<in> ce_sets", "by (simp add: ce_set_lm_1)"], ["proof (state)\nthis:\n  nat_to_ce_set n \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_ce_set_srj: \"A \\<in> ce_sets \\<Longrightarrow> \\<exists> n. A = nat_to_ce_set n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> \\<exists>n. A = nat_to_ce_set n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> \\<exists>n. A = nat_to_ce_set n", "assume A: \"A \\<in> ce_sets\""], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> \\<exists>n. A = nat_to_ce_set n", "then"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets", "have \"\\<exists> p \\<in> PrimRec2. A = fn_to_set p\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>PrimRec2. A = fn_to_set p", "by (rule ce_set_lm_3)"], ["proof (state)\nthis:\n  \\<exists>p\\<in>PrimRec2. A = fn_to_set p\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> \\<exists>n. A = nat_to_ce_set n", "then"], ["proof (chain)\npicking this:\n  \\<exists>p\\<in>PrimRec2. A = fn_to_set p", "obtain p where p_is_pr: \"p \\<in> PrimRec2\" and S1: \"A = fn_to_set p\""], ["proof (prove)\nusing this:\n  \\<exists>p\\<in>PrimRec2. A = fn_to_set p\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<in> PrimRec2; A = fn_to_set p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  p \\<in> PrimRec2\n  A = fn_to_set p\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> \\<exists>n. A = nat_to_ce_set n", "define q where \"q = pr_conv_2_to_1 p\""], ["proof (state)\nthis:\n  q = pr_conv_2_to_1 p\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> \\<exists>n. A = nat_to_ce_set n", "from p_is_pr"], ["proof (chain)\npicking this:\n  p \\<in> PrimRec2", "have q_is_pr: \"q \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  p \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. q \\<in> PrimRec1", "by (unfold q_def, rule pr_conv_2_to_1_lm)"], ["proof (state)\nthis:\n  q \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> \\<exists>n. A = nat_to_ce_set n", "from q_def"], ["proof (chain)\npicking this:\n  q = pr_conv_2_to_1 p", "have S2: \"pr_conv_1_to_2 q = p\""], ["proof (prove)\nusing this:\n  q = pr_conv_2_to_1 p\n\ngoal (1 subgoal):\n 1. pr_conv_1_to_2 q = p", "by simp"], ["proof (state)\nthis:\n  pr_conv_1_to_2 q = p\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> \\<exists>n. A = nat_to_ce_set n", "let ?n = \"index_of_pr q\""], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> \\<exists>n. A = nat_to_ce_set n", "from q_is_pr"], ["proof (chain)\npicking this:\n  q \\<in> PrimRec1", "have \"nat_to_pr ?n = q\""], ["proof (prove)\nusing this:\n  q \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_pr q) = q", "by (rule index_of_pr_is_real)"], ["proof (state)\nthis:\n  nat_to_pr (index_of_pr q) = q\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> \\<exists>n. A = nat_to_ce_set n", "with S2 S1"], ["proof (chain)\npicking this:\n  pr_conv_1_to_2 q = p\n  A = fn_to_set p\n  nat_to_pr (index_of_pr q) = q", "have \"A = fn_to_set (pr_conv_1_to_2 (nat_to_pr ?n))\""], ["proof (prove)\nusing this:\n  pr_conv_1_to_2 q = p\n  A = fn_to_set p\n  nat_to_pr (index_of_pr q) = q\n\ngoal (1 subgoal):\n 1. A = fn_to_set (pr_conv_1_to_2 (nat_to_pr (index_of_pr q)))", "by auto"], ["proof (state)\nthis:\n  A = fn_to_set (pr_conv_1_to_2 (nat_to_pr (index_of_pr q)))\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> \\<exists>n. A = nat_to_ce_set n", "then"], ["proof (chain)\npicking this:\n  A = fn_to_set (pr_conv_1_to_2 (nat_to_pr (index_of_pr q)))", "have \"A = nat_to_ce_set ?n\""], ["proof (prove)\nusing this:\n  A = fn_to_set (pr_conv_1_to_2 (nat_to_pr (index_of_pr q)))\n\ngoal (1 subgoal):\n 1. A = nat_to_ce_set (index_of_pr q)", "by (simp add: nat_to_ce_set_def)"], ["proof (state)\nthis:\n  A = nat_to_ce_set (index_of_pr q)\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> \\<exists>n. A = nat_to_ce_set n", "thus ?thesis"], ["proof (prove)\nusing this:\n  A = nat_to_ce_set (index_of_pr q)\n\ngoal (1 subgoal):\n 1. \\<exists>n. A = nat_to_ce_set n", ".."], ["proof (state)\nthis:\n  \\<exists>n. A = nat_to_ce_set n\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Characteristic functions\\<close>"], ["", "definition\n  chf :: \"nat set \\<Rightarrow> (nat \\<Rightarrow> nat)\" \\<comment> \\<open>Characteristic function\\<close> where\n  \"chf = (\\<lambda> A x. if x \\<in> A then 0 else 1 )\""], ["", "definition\n  zero_set :: \"(nat \\<Rightarrow> nat) \\<Rightarrow> nat set\" where\n  \"zero_set = (\\<lambda> f. { x. f x = 0})\""], ["", "lemma chf_lm_1 [simp]: \"zero_set (chf A) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zero_set (chf A) = A", "by (unfold chf_def, unfold zero_set_def, simp)"], ["", "lemma chf_lm_2: \"(x \\<in> A) = (chf A x = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> A) = (chf A x = 0)", "by (unfold chf_def, simp)"], ["", "lemma chf_lm_3: \"(x \\<notin> A) = (chf A x = 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<notin> A) = (chf A x = 1)", "by (unfold chf_def, simp)"], ["", "lemma chf_lm_4: \"chf A \\<in> PrimRec1 \\<Longrightarrow> A \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chf A \\<in> PrimRec1 \\<Longrightarrow> A \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. chf A \\<in> PrimRec1 \\<Longrightarrow> A \\<in> ce_sets", "assume A: \"chf A \\<in> PrimRec1\""], ["proof (state)\nthis:\n  chf A \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. chf A \\<in> PrimRec1 \\<Longrightarrow> A \\<in> ce_sets", "define p where \"p = chf A\""], ["proof (state)\nthis:\n  p = chf A\n\ngoal (1 subgoal):\n 1. chf A \\<in> PrimRec1 \\<Longrightarrow> A \\<in> ce_sets", "from A p_def"], ["proof (chain)\npicking this:\n  chf A \\<in> PrimRec1\n  p = chf A", "have p_is_pr: \"p \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  chf A \\<in> PrimRec1\n  p = chf A\n\ngoal (1 subgoal):\n 1. p \\<in> PrimRec1", "by auto"], ["proof (state)\nthis:\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. chf A \\<in> PrimRec1 \\<Longrightarrow> A \\<in> ce_sets", "define q where \"q x y = p x\" for x y :: nat"], ["proof (state)\nthis:\n  q ?x ?y = p ?x\n\ngoal (1 subgoal):\n 1. chf A \\<in> PrimRec1 \\<Longrightarrow> A \\<in> ce_sets", "from p_is_pr"], ["proof (chain)\npicking this:\n  p \\<in> PrimRec1", "have q_is_pr: \"q \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. q \\<in> PrimRec2", "unfolding q_def"], ["proof (prove)\nusing this:\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. p x) \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  q \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. chf A \\<in> PrimRec1 \\<Longrightarrow> A \\<in> ce_sets", "have S1: \"A = {x. p(x) = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = {x. p x = 0}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. A = {x. p x = 0}", "have \"zero_set p = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zero_set p = A", "by (unfold p_def, simp)"], ["proof (state)\nthis:\n  zero_set p = A\n\ngoal (1 subgoal):\n 1. A = {x. p x = 0}", "thus ?thesis"], ["proof (prove)\nusing this:\n  zero_set p = A\n\ngoal (1 subgoal):\n 1. A = {x. p x = 0}", "by (simp add: zero_set_def)"], ["proof (state)\nthis:\n  A = {x. p x = 0}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A = {x. p x = 0}\n\ngoal (1 subgoal):\n 1. chf A \\<in> PrimRec1 \\<Longrightarrow> A \\<in> ce_sets", "have S2: \"fn_to_set q = {x. \\<exists> y. q x y = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fn_to_set q = {x. \\<exists>y. q x y = 0}", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  fn_to_set q = {x. \\<exists>y. q x y = 0}\n\ngoal (1 subgoal):\n 1. chf A \\<in> PrimRec1 \\<Longrightarrow> A \\<in> ce_sets", "have S3: \"\\<And> x. (p x = 0) = (\\<exists> y. q x y = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. (p x = 0) = (\\<exists>y. q x y = 0)", "by (unfold q_def, auto)"], ["proof (state)\nthis:\n  (p ?x = 0) = (\\<exists>y. q ?x y = 0)\n\ngoal (1 subgoal):\n 1. chf A \\<in> PrimRec1 \\<Longrightarrow> A \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  (p ?x = 0) = (\\<exists>y. q ?x y = 0)", "have S4: \"{x. p x = 0} = {x. \\<exists> y. q x y = 0}\""], ["proof (prove)\nusing this:\n  (p ?x = 0) = (\\<exists>y. q ?x y = 0)\n\ngoal (1 subgoal):\n 1. {x. p x = 0} = {x. \\<exists>y. q x y = 0}", "by auto"], ["proof (state)\nthis:\n  {x. p x = 0} = {x. \\<exists>y. q x y = 0}\n\ngoal (1 subgoal):\n 1. chf A \\<in> PrimRec1 \\<Longrightarrow> A \\<in> ce_sets", "with S1 S2"], ["proof (chain)\npicking this:\n  A = {x. p x = 0}\n  fn_to_set q = {x. \\<exists>y. q x y = 0}\n  {x. p x = 0} = {x. \\<exists>y. q x y = 0}", "have S5: \"fn_to_set q = A\""], ["proof (prove)\nusing this:\n  A = {x. p x = 0}\n  fn_to_set q = {x. \\<exists>y. q x y = 0}\n  {x. p x = 0} = {x. \\<exists>y. q x y = 0}\n\ngoal (1 subgoal):\n 1. fn_to_set q = A", "by auto"], ["proof (state)\nthis:\n  fn_to_set q = A\n\ngoal (1 subgoal):\n 1. chf A \\<in> PrimRec1 \\<Longrightarrow> A \\<in> ce_sets", "from q_is_pr"], ["proof (chain)\npicking this:\n  q \\<in> PrimRec2", "have \"fn_to_set q \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  q \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. fn_to_set q \\<in> ce_sets", "by (rule ce_set_lm_1)"], ["proof (state)\nthis:\n  fn_to_set q \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. chf A \\<in> PrimRec1 \\<Longrightarrow> A \\<in> ce_sets", "with S5"], ["proof (chain)\npicking this:\n  fn_to_set q = A\n  fn_to_set q \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  fn_to_set q = A\n  fn_to_set q \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma chf_lm_5: \"finite A \\<Longrightarrow> chf A \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> chf A \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> chf A \\<in> PrimRec1", "assume A: \"finite A\""], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> chf A \\<in> PrimRec1", "define u where \"u = set_to_nat A\""], ["proof (state)\nthis:\n  u = set_to_nat A\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> chf A \\<in> PrimRec1", "from A"], ["proof (chain)\npicking this:\n  finite A", "have S1: \"nat_to_set u = A\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. nat_to_set u = A", "by (unfold u_def, rule nat_to_set_srj)"], ["proof (state)\nthis:\n  nat_to_set u = A\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> chf A \\<in> PrimRec1", "have \"chf A = (\\<lambda> x. sgn2 (c_in x u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chf A = (\\<lambda>x. sgn2 (c_in x u))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. chf A x = sgn2 (c_in x u)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. chf A x = sgn2 (c_in x u)", "show \"chf A x = sgn2 (c_in x u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chf A x = sgn2 (c_in x u)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> chf A x = sgn2 (c_in x u)\n 2. \\<not> ?P \\<Longrightarrow> chf A x = sgn2 (c_in x u)", "assume A: \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> chf A x = sgn2 (c_in x u)\n 2. \\<not> ?P \\<Longrightarrow> chf A x = sgn2 (c_in x u)", "then"], ["proof (chain)\npicking this:\n  x \\<in> A", "have S1_1: \"chf A x = 0\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. chf A x = 0", "by (simp add: chf_lm_2)"], ["proof (state)\nthis:\n  chf A x = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> chf A x = sgn2 (c_in x u)\n 2. \\<not> ?P \\<Longrightarrow> chf A x = sgn2 (c_in x u)", "from A S1"], ["proof (chain)\npicking this:\n  x \\<in> A\n  nat_to_set u = A", "have \"x \\<in> nat_to_set u\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  nat_to_set u = A\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u", "by auto"], ["proof (state)\nthis:\n  x \\<in> nat_to_set u\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> chf A x = sgn2 (c_in x u)\n 2. \\<not> ?P \\<Longrightarrow> chf A x = sgn2 (c_in x u)", "then"], ["proof (chain)\npicking this:\n  x \\<in> nat_to_set u", "have \"c_in x u = 1\""], ["proof (prove)\nusing this:\n  x \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. c_in x u = 1", "by (simp add: x_in_u_eq)"], ["proof (state)\nthis:\n  c_in x u = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> chf A x = sgn2 (c_in x u)\n 2. \\<not> ?P \\<Longrightarrow> chf A x = sgn2 (c_in x u)", "with S1_1"], ["proof (chain)\npicking this:\n  chf A x = 0\n  c_in x u = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  chf A x = 0\n  c_in x u = 1\n\ngoal (1 subgoal):\n 1. chf A x = sgn2 (c_in x u)", "by simp"], ["proof (state)\nthis:\n  chf A x = sgn2 (c_in x u)\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> chf A x = sgn2 (c_in x u)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> chf A x = sgn2 (c_in x u)", "assume A: \"x \\<notin> A\""], ["proof (state)\nthis:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> chf A x = sgn2 (c_in x u)", "then"], ["proof (chain)\npicking this:\n  x \\<notin> A", "have S1_1: \"chf A x = 1\""], ["proof (prove)\nusing this:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. chf A x = 1", "by (simp add: chf_def)"], ["proof (state)\nthis:\n  chf A x = 1\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> chf A x = sgn2 (c_in x u)", "from A S1"], ["proof (chain)\npicking this:\n  x \\<notin> A\n  nat_to_set u = A", "have \"x \\<notin> nat_to_set u\""], ["proof (prove)\nusing this:\n  x \\<notin> A\n  nat_to_set u = A\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u", "by auto"], ["proof (state)\nthis:\n  x \\<notin> nat_to_set u\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> chf A x = sgn2 (c_in x u)", "then"], ["proof (chain)\npicking this:\n  x \\<notin> nat_to_set u", "have \"c_in x u = 0\""], ["proof (prove)\nusing this:\n  x \\<notin> nat_to_set u\n\ngoal (1 subgoal):\n 1. c_in x u = 0", "by (simp add: x_in_u_eq c_in_def)"], ["proof (state)\nthis:\n  c_in x u = 0\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> chf A x = sgn2 (c_in x u)", "with S1_1"], ["proof (chain)\npicking this:\n  chf A x = 1\n  c_in x u = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  chf A x = 1\n  c_in x u = 0\n\ngoal (1 subgoal):\n 1. chf A x = sgn2 (c_in x u)", "by simp"], ["proof (state)\nthis:\n  chf A x = sgn2 (c_in x u)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  chf A x = sgn2 (c_in x u)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  chf A = (\\<lambda>x. sgn2 (c_in x u))\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> chf A \\<in> PrimRec1", "moreover"], ["proof (state)\nthis:\n  chf A = (\\<lambda>x. sgn2 (c_in x u))\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> chf A \\<in> PrimRec1", "from c_in_is_pr"], ["proof (chain)\npicking this:\n  c_in \\<in> PrimRec2", "have \"(\\<lambda> x. sgn2 (c_in x u)) \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  c_in \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sgn2 (c_in x u)) \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>x. sgn2 (c_in x u)) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> chf A \\<in> PrimRec1", "ultimately"], ["proof (chain)\npicking this:\n  chf A = (\\<lambda>x. sgn2 (c_in x u))\n  (\\<lambda>x. sgn2 (c_in x u)) \\<in> PrimRec1", "show ?thesis"], ["proof (prove)\nusing this:\n  chf A = (\\<lambda>x. sgn2 (c_in x u))\n  (\\<lambda>x. sgn2 (c_in x u)) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. chf A \\<in> PrimRec1", "by auto"], ["proof (state)\nthis:\n  chf A \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem ce_finite: \"finite A \\<Longrightarrow> A \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> A \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> A \\<in> ce_sets", "assume A: \"finite A\""], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> A \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  finite A", "have \"chf A \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. chf A \\<in> PrimRec1", "by (rule chf_lm_5)"], ["proof (state)\nthis:\n  chf A \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> A \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  chf A \\<in> PrimRec1", "show ?thesis"], ["proof (prove)\nusing this:\n  chf A \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets", "by (rule chf_lm_4)"], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Computably enumerable relations\\<close>"], ["", "definition\n  ce_set_to_rel :: \"nat set \\<Rightarrow> (nat * nat) set\" where\n  \"ce_set_to_rel = (\\<lambda> A. { (c_fst x, c_snd x) | x. x \\<in> A})\""], ["", "definition\n  ce_rel_to_set :: \"(nat * nat) set \\<Rightarrow> nat set\" where\n  \"ce_rel_to_set = (\\<lambda> R. { c_pair x y | x y. (x,y) \\<in> R})\""], ["", "definition\n  ce_rels :: \"((nat * nat) set) set\" where\n  \"ce_rels = { R | R. ce_rel_to_set R \\<in> ce_sets }\""], ["", "lemma ce_rel_lm_1 [simp]: \"ce_set_to_rel (ce_rel_to_set r) = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_set_to_rel (ce_rel_to_set r) = r", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ce_set_to_rel (ce_rel_to_set r) \\<subseteq> r\n 2. r \\<subseteq> ce_set_to_rel (ce_rel_to_set r)", "show \" ce_set_to_rel (ce_rel_to_set r) \\<subseteq> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_set_to_rel (ce_rel_to_set r) \\<subseteq> r", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_set_to_rel (ce_rel_to_set r) \\<Longrightarrow> x \\<in> r", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_set_to_rel (ce_rel_to_set r) \\<Longrightarrow> x \\<in> r", "assume A: \"z \\<in> ce_set_to_rel (ce_rel_to_set r)\""], ["proof (state)\nthis:\n  z \\<in> ce_set_to_rel (ce_rel_to_set r)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_set_to_rel (ce_rel_to_set r) \\<Longrightarrow> x \\<in> r", "then"], ["proof (chain)\npicking this:\n  z \\<in> ce_set_to_rel (ce_rel_to_set r)", "obtain u where L1: \"u \\<in> (ce_rel_to_set r)\" and L2: \"z = (c_fst u, c_snd u)\""], ["proof (prove)\nusing this:\n  z \\<in> ce_set_to_rel (ce_rel_to_set r)\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> ce_rel_to_set r; z = (c_fst u, c_snd u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding ce_set_to_rel_def"], ["proof (prove)\nusing this:\n  z \\<in> {(c_fst x, c_snd x) |x. x \\<in> ce_rel_to_set r}\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> ce_rel_to_set r; z = (c_fst u, c_snd u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u \\<in> ce_rel_to_set r\n  z = (c_fst u, c_snd u)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_set_to_rel (ce_rel_to_set r) \\<Longrightarrow> x \\<in> r", "from L1"], ["proof (chain)\npicking this:\n  u \\<in> ce_rel_to_set r", "obtain x y where L3: \"(x,y) \\<in> r\" and L4: \"u = c_pair x y\""], ["proof (prove)\nusing this:\n  u \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>(x, y) \\<in> r; u = c_pair x y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding ce_rel_to_set_def"], ["proof (prove)\nusing this:\n  u \\<in> {c_pair x y |x y. (x, y) \\<in> r}\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>(x, y) \\<in> r; u = c_pair x y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (x, y) \\<in> r\n  u = c_pair x y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_set_to_rel (ce_rel_to_set r) \\<Longrightarrow> x \\<in> r", "from L4"], ["proof (chain)\npicking this:\n  u = c_pair x y", "have L5: \"c_fst u = x\""], ["proof (prove)\nusing this:\n  u = c_pair x y\n\ngoal (1 subgoal):\n 1. c_fst u = x", "by simp"], ["proof (state)\nthis:\n  c_fst u = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_set_to_rel (ce_rel_to_set r) \\<Longrightarrow> x \\<in> r", "from L4"], ["proof (chain)\npicking this:\n  u = c_pair x y", "have L6: \"c_snd u = y\""], ["proof (prove)\nusing this:\n  u = c_pair x y\n\ngoal (1 subgoal):\n 1. c_snd u = y", "by simp"], ["proof (state)\nthis:\n  c_snd u = y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_set_to_rel (ce_rel_to_set r) \\<Longrightarrow> x \\<in> r", "from L5 L6 L2"], ["proof (chain)\npicking this:\n  c_fst u = x\n  c_snd u = y\n  z = (c_fst u, c_snd u)", "have \"z = (x,y)\""], ["proof (prove)\nusing this:\n  c_fst u = x\n  c_snd u = y\n  z = (c_fst u, c_snd u)\n\ngoal (1 subgoal):\n 1. z = (x, y)", "by simp"], ["proof (state)\nthis:\n  z = (x, y)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_set_to_rel (ce_rel_to_set r) \\<Longrightarrow> x \\<in> r", "with L3"], ["proof (chain)\npicking this:\n  (x, y) \\<in> r\n  z = (x, y)", "show \"z \\<in> r\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> r\n  z = (x, y)\n\ngoal (1 subgoal):\n 1. z \\<in> r", "by auto"], ["proof (state)\nthis:\n  z \\<in> r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ce_set_to_rel (ce_rel_to_set r) \\<subseteq> r\n\ngoal (1 subgoal):\n 1. r \\<subseteq> ce_set_to_rel (ce_rel_to_set r)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<subseteq> ce_set_to_rel (ce_rel_to_set r)", "show \"r \\<subseteq> ce_set_to_rel (ce_rel_to_set r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<subseteq> ce_set_to_rel (ce_rel_to_set r)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> r \\<Longrightarrow> x \\<in> ce_set_to_rel (ce_rel_to_set r)", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> r \\<Longrightarrow> x \\<in> ce_set_to_rel (ce_rel_to_set r)", "show \"z \\<in> r \\<Longrightarrow> z \\<in> ce_set_to_rel (ce_rel_to_set r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> r \\<Longrightarrow> z \\<in> ce_set_to_rel (ce_rel_to_set r)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<in> r \\<Longrightarrow> z \\<in> ce_set_to_rel (ce_rel_to_set r)", "assume A: \"z \\<in> r\""], ["proof (state)\nthis:\n  z \\<in> r\n\ngoal (1 subgoal):\n 1. z \\<in> r \\<Longrightarrow> z \\<in> ce_set_to_rel (ce_rel_to_set r)", "define x where \"x = fst z\""], ["proof (state)\nthis:\n  x = fst z\n\ngoal (1 subgoal):\n 1. z \\<in> r \\<Longrightarrow> z \\<in> ce_set_to_rel (ce_rel_to_set r)", "define y where \"y = snd z\""], ["proof (state)\nthis:\n  y = snd z\n\ngoal (1 subgoal):\n 1. z \\<in> r \\<Longrightarrow> z \\<in> ce_set_to_rel (ce_rel_to_set r)", "from x_def y_def"], ["proof (chain)\npicking this:\n  x = fst z\n  y = snd z", "have L1: \"z = (x,y)\""], ["proof (prove)\nusing this:\n  x = fst z\n  y = snd z\n\ngoal (1 subgoal):\n 1. z = (x, y)", "by simp"], ["proof (state)\nthis:\n  z = (x, y)\n\ngoal (1 subgoal):\n 1. z \\<in> r \\<Longrightarrow> z \\<in> ce_set_to_rel (ce_rel_to_set r)", "define u where \"u = c_pair x y\""], ["proof (state)\nthis:\n  u = c_pair x y\n\ngoal (1 subgoal):\n 1. z \\<in> r \\<Longrightarrow> z \\<in> ce_set_to_rel (ce_rel_to_set r)", "from A L1 u_def"], ["proof (chain)\npicking this:\n  z \\<in> r\n  z = (x, y)\n  u = c_pair x y", "have L2: \"u \\<in> ce_rel_to_set r\""], ["proof (prove)\nusing this:\n  z \\<in> r\n  z = (x, y)\n  u = c_pair x y\n\ngoal (1 subgoal):\n 1. u \\<in> ce_rel_to_set r", "by (unfold ce_rel_to_set_def, auto)"], ["proof (state)\nthis:\n  u \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. z \\<in> r \\<Longrightarrow> z \\<in> ce_set_to_rel (ce_rel_to_set r)", "from L1 u_def"], ["proof (chain)\npicking this:\n  z = (x, y)\n  u = c_pair x y", "have L3: \"z = (c_fst u, c_snd u)\""], ["proof (prove)\nusing this:\n  z = (x, y)\n  u = c_pair x y\n\ngoal (1 subgoal):\n 1. z = (c_fst u, c_snd u)", "by simp"], ["proof (state)\nthis:\n  z = (c_fst u, c_snd u)\n\ngoal (1 subgoal):\n 1. z \\<in> r \\<Longrightarrow> z \\<in> ce_set_to_rel (ce_rel_to_set r)", "from L2 L3"], ["proof (chain)\npicking this:\n  u \\<in> ce_rel_to_set r\n  z = (c_fst u, c_snd u)", "show \"z \\<in> ce_set_to_rel (ce_rel_to_set r)\""], ["proof (prove)\nusing this:\n  u \\<in> ce_rel_to_set r\n  z = (c_fst u, c_snd u)\n\ngoal (1 subgoal):\n 1. z \\<in> ce_set_to_rel (ce_rel_to_set r)", "by (unfold ce_set_to_rel_def, auto)"], ["proof (state)\nthis:\n  z \\<in> ce_set_to_rel (ce_rel_to_set r)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> r \\<Longrightarrow> z \\<in> ce_set_to_rel (ce_rel_to_set r)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r \\<subseteq> ce_set_to_rel (ce_rel_to_set r)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_2 [simp]: \"ce_rel_to_set (ce_set_to_rel A) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_rel_to_set (ce_set_to_rel A) = A", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ce_rel_to_set (ce_set_to_rel A) \\<subseteq> A\n 2. A \\<subseteq> ce_rel_to_set (ce_set_to_rel A)", "show \"ce_rel_to_set (ce_set_to_rel A) \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_rel_to_set (ce_set_to_rel A) \\<subseteq> A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_rel_to_set (ce_set_to_rel A) \\<Longrightarrow> x \\<in> A", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_rel_to_set (ce_set_to_rel A) \\<Longrightarrow> x \\<in> A", "show \"z \\<in> ce_rel_to_set (ce_set_to_rel A) \\<Longrightarrow> z \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> ce_rel_to_set (ce_set_to_rel A) \\<Longrightarrow> z \\<in> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<in> ce_rel_to_set (ce_set_to_rel A) \\<Longrightarrow> z \\<in> A", "assume A: \"z \\<in> ce_rel_to_set (ce_set_to_rel A)\""], ["proof (state)\nthis:\n  z \\<in> ce_rel_to_set (ce_set_to_rel A)\n\ngoal (1 subgoal):\n 1. z \\<in> ce_rel_to_set (ce_set_to_rel A) \\<Longrightarrow> z \\<in> A", "then"], ["proof (chain)\npicking this:\n  z \\<in> ce_rel_to_set (ce_set_to_rel A)", "obtain x y where L1: \"z = c_pair x y\" and L2: \"(x,y) \\<in> ce_set_to_rel A\""], ["proof (prove)\nusing this:\n  z \\<in> ce_rel_to_set (ce_set_to_rel A)\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>z = c_pair x y; (x, y) \\<in> ce_set_to_rel A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding ce_rel_to_set_def"], ["proof (prove)\nusing this:\n  z \\<in> {c_pair x y |x y. (x, y) \\<in> ce_set_to_rel A}\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>z = c_pair x y; (x, y) \\<in> ce_set_to_rel A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z = c_pair x y\n  (x, y) \\<in> ce_set_to_rel A\n\ngoal (1 subgoal):\n 1. z \\<in> ce_rel_to_set (ce_set_to_rel A) \\<Longrightarrow> z \\<in> A", "from L2"], ["proof (chain)\npicking this:\n  (x, y) \\<in> ce_set_to_rel A", "obtain u where L3: \"(x,y) = (c_fst u, c_snd u)\" and L4: \"u \\<in> A\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> ce_set_to_rel A\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>(x, y) = (c_fst u, c_snd u); u \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding ce_set_to_rel_def"], ["proof (prove)\nusing this:\n  (x, y) \\<in> {(c_fst x, c_snd x) |x. x \\<in> A}\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>(x, y) = (c_fst u, c_snd u); u \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (x, y) = (c_fst u, c_snd u)\n  u \\<in> A\n\ngoal (1 subgoal):\n 1. z \\<in> ce_rel_to_set (ce_set_to_rel A) \\<Longrightarrow> z \\<in> A", "from L3 L1"], ["proof (chain)\npicking this:\n  (x, y) = (c_fst u, c_snd u)\n  z = c_pair x y", "have L5: \"z = u\""], ["proof (prove)\nusing this:\n  (x, y) = (c_fst u, c_snd u)\n  z = c_pair x y\n\ngoal (1 subgoal):\n 1. z = u", "by simp"], ["proof (state)\nthis:\n  z = u\n\ngoal (1 subgoal):\n 1. z \\<in> ce_rel_to_set (ce_set_to_rel A) \\<Longrightarrow> z \\<in> A", "with L4"], ["proof (chain)\npicking this:\n  u \\<in> A\n  z = u", "show \"z \\<in> A\""], ["proof (prove)\nusing this:\n  u \\<in> A\n  z = u\n\ngoal (1 subgoal):\n 1. z \\<in> A", "by auto"], ["proof (state)\nthis:\n  z \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> ce_rel_to_set (ce_set_to_rel A) \\<Longrightarrow> z \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ce_rel_to_set (ce_set_to_rel A) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. A \\<subseteq> ce_rel_to_set (ce_set_to_rel A)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<subseteq> ce_rel_to_set (ce_set_to_rel A)", "show \"A \\<subseteq> ce_rel_to_set (ce_set_to_rel A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> ce_rel_to_set (ce_set_to_rel A)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow> x \\<in> ce_rel_to_set (ce_set_to_rel A)", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow> x \\<in> ce_rel_to_set (ce_set_to_rel A)", "show \"z \\<in> A \\<Longrightarrow> z \\<in> ce_rel_to_set (ce_set_to_rel A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> A \\<Longrightarrow> z \\<in> ce_rel_to_set (ce_set_to_rel A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<in> A \\<Longrightarrow> z \\<in> ce_rel_to_set (ce_set_to_rel A)", "assume A: \"z \\<in> A\""], ["proof (state)\nthis:\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. z \\<in> A \\<Longrightarrow> z \\<in> ce_rel_to_set (ce_set_to_rel A)", "then"], ["proof (chain)\npicking this:\n  z \\<in> A", "have L1: \"(c_fst z, c_snd z) \\<in> ce_set_to_rel A\""], ["proof (prove)\nusing this:\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. (c_fst z, c_snd z) \\<in> ce_set_to_rel A", "by (unfold ce_set_to_rel_def, auto)"], ["proof (state)\nthis:\n  (c_fst z, c_snd z) \\<in> ce_set_to_rel A\n\ngoal (1 subgoal):\n 1. z \\<in> A \\<Longrightarrow> z \\<in> ce_rel_to_set (ce_set_to_rel A)", "define x where \"x = c_fst z\""], ["proof (state)\nthis:\n  x = c_fst z\n\ngoal (1 subgoal):\n 1. z \\<in> A \\<Longrightarrow> z \\<in> ce_rel_to_set (ce_set_to_rel A)", "define y where \"y = c_snd z\""], ["proof (state)\nthis:\n  y = c_snd z\n\ngoal (1 subgoal):\n 1. z \\<in> A \\<Longrightarrow> z \\<in> ce_rel_to_set (ce_set_to_rel A)", "from L1 x_def y_def"], ["proof (chain)\npicking this:\n  (c_fst z, c_snd z) \\<in> ce_set_to_rel A\n  x = c_fst z\n  y = c_snd z", "have L2: \"(x,y) \\<in> ce_set_to_rel A\""], ["proof (prove)\nusing this:\n  (c_fst z, c_snd z) \\<in> ce_set_to_rel A\n  x = c_fst z\n  y = c_snd z\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> ce_set_to_rel A", "by simp"], ["proof (state)\nthis:\n  (x, y) \\<in> ce_set_to_rel A\n\ngoal (1 subgoal):\n 1. z \\<in> A \\<Longrightarrow> z \\<in> ce_rel_to_set (ce_set_to_rel A)", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<in> ce_set_to_rel A", "have L3: \"c_pair x y \\<in> ce_rel_to_set (ce_set_to_rel A)\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> ce_set_to_rel A\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> ce_rel_to_set (ce_set_to_rel A)", "by (unfold ce_rel_to_set_def, auto)"], ["proof (state)\nthis:\n  c_pair x y \\<in> ce_rel_to_set (ce_set_to_rel A)\n\ngoal (1 subgoal):\n 1. z \\<in> A \\<Longrightarrow> z \\<in> ce_rel_to_set (ce_set_to_rel A)", "with x_def y_def"], ["proof (chain)\npicking this:\n  x = c_fst z\n  y = c_snd z\n  c_pair x y \\<in> ce_rel_to_set (ce_set_to_rel A)", "show \"z \\<in> ce_rel_to_set (ce_set_to_rel A)\""], ["proof (prove)\nusing this:\n  x = c_fst z\n  y = c_snd z\n  c_pair x y \\<in> ce_rel_to_set (ce_set_to_rel A)\n\ngoal (1 subgoal):\n 1. z \\<in> ce_rel_to_set (ce_set_to_rel A)", "by simp"], ["proof (state)\nthis:\n  z \\<in> ce_rel_to_set (ce_set_to_rel A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> A \\<Longrightarrow> z \\<in> ce_rel_to_set (ce_set_to_rel A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A \\<subseteq> ce_rel_to_set (ce_set_to_rel A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rels_def1: \"ce_rels = { ce_set_to_rel A | A. A \\<in> ce_sets}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_rels = {ce_set_to_rel A |A. A \\<in> ce_sets}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ce_rels \\<subseteq> {ce_set_to_rel A |A. A \\<in> ce_sets}\n 2. {ce_set_to_rel A |A. A \\<in> ce_sets} \\<subseteq> ce_rels", "show \"ce_rels \\<subseteq> {ce_set_to_rel A |A. A \\<in> ce_sets}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_rels \\<subseteq> {ce_set_to_rel A |A. A \\<in> ce_sets}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_rels \\<Longrightarrow>\n       x \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_rels \\<Longrightarrow>\n       x \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}", "show \" r \\<in> ce_rels \\<Longrightarrow> r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}", "assume A: \"r \\<in> ce_rels\""], ["proof (state)\nthis:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}", "then"], ["proof (chain)\npicking this:\n  r \\<in> ce_rels", "have L1: \"ce_rel_to_set r \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. ce_rel_to_set r \\<in> ce_sets", "by (unfold ce_rels_def, auto)"], ["proof (state)\nthis:\n  ce_rel_to_set r \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}", "define A where \"A = ce_rel_to_set r\""], ["proof (state)\nthis:\n  A = ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}", "from A_def L1"], ["proof (chain)\npicking this:\n  A = ce_rel_to_set r\n  ce_rel_to_set r \\<in> ce_sets", "have L2: \"A \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  A = ce_rel_to_set r\n  ce_rel_to_set r \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}", "from A_def"], ["proof (chain)\npicking this:\n  A = ce_rel_to_set r", "have L3: \"ce_set_to_rel A = r\""], ["proof (prove)\nusing this:\n  A = ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. ce_set_to_rel A = r", "by simp"], ["proof (state)\nthis:\n  ce_set_to_rel A = r\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}", "with L2"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets\n  ce_set_to_rel A = r", "show \"r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n  ce_set_to_rel A = r\n\ngoal (1 subgoal):\n 1. r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}", "by auto"], ["proof (state)\nthis:\n  r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r \\<in> ce_rels \\<Longrightarrow>\n  r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ce_rels \\<subseteq> {ce_set_to_rel A |A. A \\<in> ce_sets}\n\ngoal (1 subgoal):\n 1. {ce_set_to_rel A |A. A \\<in> ce_sets} \\<subseteq> ce_rels", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {ce_set_to_rel A |A. A \\<in> ce_sets} \\<subseteq> ce_rels", "show \"{ce_set_to_rel A |A. A \\<in> ce_sets} \\<subseteq> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {ce_set_to_rel A |A. A \\<in> ce_sets} \\<subseteq> ce_rels", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets} \\<Longrightarrow>\n       x \\<in> ce_rels", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets} \\<Longrightarrow>\n       x \\<in> ce_rels", "show \"r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets} \\<Longrightarrow> r \\<in> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets} \\<Longrightarrow>\n    r \\<in> ce_rels", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets} \\<Longrightarrow>\n    r \\<in> ce_rels", "assume A: \"r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}\""], ["proof (state)\nthis:\n  r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}\n\ngoal (1 subgoal):\n 1. r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets} \\<Longrightarrow>\n    r \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}", "obtain A where L1: \"r = ce_set_to_rel A\" and L2: \"A \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets}\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>r = ce_set_to_rel A; A \\<in> ce_sets\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r = ce_set_to_rel A\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets} \\<Longrightarrow>\n    r \\<in> ce_rels", "from L1"], ["proof (chain)\npicking this:\n  r = ce_set_to_rel A", "have \"ce_rel_to_set r = A\""], ["proof (prove)\nusing this:\n  r = ce_set_to_rel A\n\ngoal (1 subgoal):\n 1. ce_rel_to_set r = A", "by simp"], ["proof (state)\nthis:\n  ce_rel_to_set r = A\n\ngoal (1 subgoal):\n 1. r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets} \\<Longrightarrow>\n    r \\<in> ce_rels", "with L2"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets\n  ce_rel_to_set r = A", "show \"r \\<in> ce_rels\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n  ce_rel_to_set r = A\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels", "unfolding ce_rels_def"], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n  ce_rel_to_set r = A\n\ngoal (1 subgoal):\n 1. r \\<in> {R |R. ce_rel_to_set R \\<in> ce_sets}", "by auto"], ["proof (state)\nthis:\n  r \\<in> ce_rels\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r \\<in> {ce_set_to_rel A |A. A \\<in> ce_sets} \\<Longrightarrow>\n  r \\<in> ce_rels\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {ce_set_to_rel A |A. A \\<in> ce_sets} \\<subseteq> ce_rels\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_to_set_inj: \"inj ce_rel_to_set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj ce_rel_to_set", "proof (rule inj_on_inverseI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> ?g (ce_rel_to_set x) = x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> ?g (ce_rel_to_set x) = x", "assume A: \"(x::(nat\\<times>nat) set) \\<in> UNIV\""], ["proof (state)\nthis:\n  x \\<in> UNIV\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> ?g (ce_rel_to_set x) = x", "show \"ce_set_to_rel (ce_rel_to_set x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_set_to_rel (ce_rel_to_set x) = x", "by (rule ce_rel_lm_1)"], ["proof (state)\nthis:\n  ce_set_to_rel (ce_rel_to_set x) = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_to_set_srj: \"surj ce_rel_to_set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. surj ce_rel_to_set", "proof (rule surjI [where ?f=ce_set_to_rel])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. ce_rel_to_set (ce_set_to_rel x) = x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. ce_rel_to_set (ce_set_to_rel x) = x", "show \"ce_rel_to_set (ce_set_to_rel x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_rel_to_set (ce_set_to_rel x) = x", "by (rule ce_rel_lm_2)"], ["proof (state)\nthis:\n  ce_rel_to_set (ce_set_to_rel x) = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_to_set_bij: \"bij ce_rel_to_set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij ce_rel_to_set", "proof (rule bijI)"], ["proof (state)\ngoal (2 subgoals):\n 1. inj ce_rel_to_set\n 2. surj ce_rel_to_set", "show \"inj ce_rel_to_set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj ce_rel_to_set", "by (rule ce_rel_to_set_inj)"], ["proof (state)\nthis:\n  inj ce_rel_to_set\n\ngoal (1 subgoal):\n 1. surj ce_rel_to_set", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. surj ce_rel_to_set", "show \"surj ce_rel_to_set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. surj ce_rel_to_set", "by (rule ce_rel_to_set_srj)"], ["proof (state)\nthis:\n  surj ce_rel_to_set\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_set_to_rel_inj: \"inj ce_set_to_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj ce_set_to_rel", "proof (rule inj_on_inverseI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> ?g (ce_set_to_rel x) = x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> ?g (ce_set_to_rel x) = x", "assume A: \"(x::nat set) \\<in> UNIV\""], ["proof (state)\nthis:\n  x \\<in> UNIV\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> ?g (ce_set_to_rel x) = x", "show \"ce_rel_to_set (ce_set_to_rel x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_rel_to_set (ce_set_to_rel x) = x", "by (rule ce_rel_lm_2)"], ["proof (state)\nthis:\n  ce_rel_to_set (ce_set_to_rel x) = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_set_to_rel_srj: \"surj ce_set_to_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. surj ce_set_to_rel", "proof (rule surjI [where ?f=ce_rel_to_set])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. ce_set_to_rel (ce_rel_to_set x) = x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. ce_set_to_rel (ce_rel_to_set x) = x", "show \"ce_set_to_rel (ce_rel_to_set x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_set_to_rel (ce_rel_to_set x) = x", "by (rule ce_rel_lm_1)"], ["proof (state)\nthis:\n  ce_set_to_rel (ce_rel_to_set x) = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_set_to_rel_bij: \"bij ce_set_to_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij ce_set_to_rel", "proof (rule bijI)"], ["proof (state)\ngoal (2 subgoals):\n 1. inj ce_set_to_rel\n 2. surj ce_set_to_rel", "show \"inj ce_set_to_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj ce_set_to_rel", "by (rule ce_set_to_rel_inj)"], ["proof (state)\nthis:\n  inj ce_set_to_rel\n\ngoal (1 subgoal):\n 1. surj ce_set_to_rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. surj ce_set_to_rel", "show \"surj ce_set_to_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. surj ce_set_to_rel", "by (rule ce_set_to_rel_srj)"], ["proof (state)\nthis:\n  surj ce_set_to_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_3: \"A \\<in> ce_sets \\<Longrightarrow> ce_set_to_rel A \\<in> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> ce_set_to_rel A \\<in> ce_rels", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> ce_set_to_rel A \\<in> ce_rels", "assume A: \"A \\<in> ce_sets\""], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> ce_set_to_rel A \\<in> ce_rels", "from A ce_rels_def1"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets\n  ce_rels = {ce_set_to_rel A |A. A \\<in> ce_sets}", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n  ce_rels = {ce_set_to_rel A |A. A \\<in> ce_sets}\n\ngoal (1 subgoal):\n 1. ce_set_to_rel A \\<in> ce_rels", "by auto"], ["proof (state)\nthis:\n  ce_set_to_rel A \\<in> ce_rels\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_4: \"ce_set_to_rel A \\<in> ce_rels \\<Longrightarrow> A \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_set_to_rel A \\<in> ce_rels \\<Longrightarrow> A \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ce_set_to_rel A \\<in> ce_rels \\<Longrightarrow> A \\<in> ce_sets", "assume A: \"ce_set_to_rel A \\<in> ce_rels\""], ["proof (state)\nthis:\n  ce_set_to_rel A \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. ce_set_to_rel A \\<in> ce_rels \\<Longrightarrow> A \\<in> ce_sets", "from A"], ["proof (chain)\npicking this:\n  ce_set_to_rel A \\<in> ce_rels", "show ?thesis"], ["proof (prove)\nusing this:\n  ce_set_to_rel A \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets", "by (unfold ce_rels_def, auto)"], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_5: \"(A \\<in> ce_sets) = (ce_set_to_rel A \\<in> ce_rels)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A \\<in> ce_sets) = (ce_set_to_rel A \\<in> ce_rels)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. A \\<in> ce_sets \\<Longrightarrow> ce_set_to_rel A \\<in> ce_rels\n 2. ce_set_to_rel A \\<in> ce_rels \\<Longrightarrow> A \\<in> ce_sets", "assume \"A \\<in> ce_sets\""], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (2 subgoals):\n 1. A \\<in> ce_sets \\<Longrightarrow> ce_set_to_rel A \\<in> ce_rels\n 2. ce_set_to_rel A \\<in> ce_rels \\<Longrightarrow> A \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets", "show \"ce_set_to_rel A \\<in> ce_rels\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. ce_set_to_rel A \\<in> ce_rels", "by (rule ce_rel_lm_3)"], ["proof (state)\nthis:\n  ce_set_to_rel A \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. ce_set_to_rel A \\<in> ce_rels \\<Longrightarrow> A \\<in> ce_sets", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ce_set_to_rel A \\<in> ce_rels \\<Longrightarrow> A \\<in> ce_sets", "assume \"ce_set_to_rel A \\<in> ce_rels\""], ["proof (state)\nthis:\n  ce_set_to_rel A \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. ce_set_to_rel A \\<in> ce_rels \\<Longrightarrow> A \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  ce_set_to_rel A \\<in> ce_rels", "show \"A \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  ce_set_to_rel A \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets", "by (rule ce_rel_lm_4)"], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_6: \"r \\<in> ce_rels \\<Longrightarrow> ce_rel_to_set r \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> ce_rel_to_set r \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> ce_rel_to_set r \\<in> ce_sets", "assume A: \"r \\<in> ce_rels\""], ["proof (state)\nthis:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> ce_rel_to_set r \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  r \\<in> ce_rels", "show ?thesis"], ["proof (prove)\nusing this:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. ce_rel_to_set r \\<in> ce_sets", "by (unfold ce_rels_def, auto)"], ["proof (state)\nthis:\n  ce_rel_to_set r \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_7: \"ce_rel_to_set r \\<in> ce_sets \\<Longrightarrow> r \\<in> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_rel_to_set r \\<in> ce_sets \\<Longrightarrow> r \\<in> ce_rels", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ce_rel_to_set r \\<in> ce_sets \\<Longrightarrow> r \\<in> ce_rels", "assume \"ce_rel_to_set r \\<in> ce_sets\""], ["proof (state)\nthis:\n  ce_rel_to_set r \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. ce_rel_to_set r \\<in> ce_sets \\<Longrightarrow> r \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  ce_rel_to_set r \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  ce_rel_to_set r \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels", "by (unfold ce_rels_def, auto)"], ["proof (state)\nthis:\n  r \\<in> ce_rels\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_8: \"(r \\<in> ce_rels) = (ce_rel_to_set r \\<in> ce_sets)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<in> ce_rels) = (ce_rel_to_set r \\<in> ce_sets)", "by (unfold ce_rels_def, auto)"], ["", "lemma ce_rel_lm_9: \"(x,y) \\<in> r \\<Longrightarrow> c_pair x y \\<in> ce_rel_to_set r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> r \\<Longrightarrow> c_pair x y \\<in> ce_rel_to_set r", "by (unfold ce_rel_to_set_def, auto)"], ["", "lemma ce_rel_lm_10: \"x \\<in> A \\<Longrightarrow> (c_fst x, c_snd x) \\<in> ce_set_to_rel A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> A \\<Longrightarrow> (c_fst x, c_snd x) \\<in> ce_set_to_rel A", "by (unfold ce_set_to_rel_def, auto)"], ["", "lemma ce_rel_lm_11: \"c_pair x y \\<in> ce_rel_to_set r \\<Longrightarrow> (x,y) \\<in> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_pair x y \\<in> ce_rel_to_set r \\<Longrightarrow> (x, y) \\<in> r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_pair x y \\<in> ce_rel_to_set r \\<Longrightarrow> (x, y) \\<in> r", "assume A: \"c_pair x y \\<in> ce_rel_to_set r\""], ["proof (state)\nthis:\n  c_pair x y \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> ce_rel_to_set r \\<Longrightarrow> (x, y) \\<in> r", "let ?z = \"c_pair x y\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_pair x y \\<in> ce_rel_to_set r \\<Longrightarrow> (x, y) \\<in> r", "from A"], ["proof (chain)\npicking this:\n  c_pair x y \\<in> ce_rel_to_set r", "have \"(c_fst ?z, c_snd ?z) \\<in> ce_set_to_rel (ce_rel_to_set r)\""], ["proof (prove)\nusing this:\n  c_pair x y \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. (c_fst (c_pair x y), c_snd (c_pair x y))\n    \\<in> ce_set_to_rel (ce_rel_to_set r)", "by (rule ce_rel_lm_10)"], ["proof (state)\nthis:\n  (c_fst (c_pair x y), c_snd (c_pair x y))\n  \\<in> ce_set_to_rel (ce_rel_to_set r)\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> ce_rel_to_set r \\<Longrightarrow> (x, y) \\<in> r", "then"], ["proof (chain)\npicking this:\n  (c_fst (c_pair x y), c_snd (c_pair x y))\n  \\<in> ce_set_to_rel (ce_rel_to_set r)", "show \"(x,y) \\<in> r\""], ["proof (prove)\nusing this:\n  (c_fst (c_pair x y), c_snd (c_pair x y))\n  \\<in> ce_set_to_rel (ce_rel_to_set r)\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> r", "by simp"], ["proof (state)\nthis:\n  (x, y) \\<in> r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_12: \"(c_pair x y \\<in> ce_rel_to_set r) = ((x,y) \\<in> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c_pair x y \\<in> ce_rel_to_set r) = ((x, y) \\<in> r)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. c_pair x y \\<in> ce_rel_to_set r \\<Longrightarrow> (x, y) \\<in> r\n 2. (x, y) \\<in> r \\<Longrightarrow> c_pair x y \\<in> ce_rel_to_set r", "assume \"c_pair x y \\<in> ce_rel_to_set r\""], ["proof (state)\nthis:\n  c_pair x y \\<in> ce_rel_to_set r\n\ngoal (2 subgoals):\n 1. c_pair x y \\<in> ce_rel_to_set r \\<Longrightarrow> (x, y) \\<in> r\n 2. (x, y) \\<in> r \\<Longrightarrow> c_pair x y \\<in> ce_rel_to_set r", "then"], ["proof (chain)\npicking this:\n  c_pair x y \\<in> ce_rel_to_set r", "show \"(x, y) \\<in> r\""], ["proof (prove)\nusing this:\n  c_pair x y \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> r", "by (rule ce_rel_lm_11)"], ["proof (state)\nthis:\n  (x, y) \\<in> r\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> r \\<Longrightarrow> c_pair x y \\<in> ce_rel_to_set r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (x, y) \\<in> r \\<Longrightarrow> c_pair x y \\<in> ce_rel_to_set r", "assume \"(x, y) \\<in> r\""], ["proof (state)\nthis:\n  (x, y) \\<in> r\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> r \\<Longrightarrow> c_pair x y \\<in> ce_rel_to_set r", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<in> r", "show \"c_pair x y \\<in> ce_rel_to_set r\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> r\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> ce_rel_to_set r", "by (rule ce_rel_lm_9)"], ["proof (state)\nthis:\n  c_pair x y \\<in> ce_rel_to_set r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_13: \"(x,y) \\<in> ce_set_to_rel A \\<Longrightarrow> c_pair x y \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> ce_set_to_rel A \\<Longrightarrow> c_pair x y \\<in> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x, y) \\<in> ce_set_to_rel A \\<Longrightarrow> c_pair x y \\<in> A", "assume \"(x,y) \\<in> ce_set_to_rel A\""], ["proof (state)\nthis:\n  (x, y) \\<in> ce_set_to_rel A\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> ce_set_to_rel A \\<Longrightarrow> c_pair x y \\<in> A", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<in> ce_set_to_rel A", "have \"c_pair x y \\<in> ce_rel_to_set (ce_set_to_rel A)\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> ce_set_to_rel A\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> ce_rel_to_set (ce_set_to_rel A)", "by (rule ce_rel_lm_9)"], ["proof (state)\nthis:\n  c_pair x y \\<in> ce_rel_to_set (ce_set_to_rel A)\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> ce_set_to_rel A \\<Longrightarrow> c_pair x y \\<in> A", "then"], ["proof (chain)\npicking this:\n  c_pair x y \\<in> ce_rel_to_set (ce_set_to_rel A)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_pair x y \\<in> ce_rel_to_set (ce_set_to_rel A)\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> A", "by simp"], ["proof (state)\nthis:\n  c_pair x y \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_14: \"c_pair x y \\<in> A \\<Longrightarrow> (x,y) \\<in> ce_set_to_rel A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_pair x y \\<in> A \\<Longrightarrow> (x, y) \\<in> ce_set_to_rel A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_pair x y \\<in> A \\<Longrightarrow> (x, y) \\<in> ce_set_to_rel A", "assume \"c_pair x y \\<in> A\""], ["proof (state)\nthis:\n  c_pair x y \\<in> A\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> A \\<Longrightarrow> (x, y) \\<in> ce_set_to_rel A", "then"], ["proof (chain)\npicking this:\n  c_pair x y \\<in> A", "have \"c_pair x y \\<in> ce_rel_to_set (ce_set_to_rel A)\""], ["proof (prove)\nusing this:\n  c_pair x y \\<in> A\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> ce_rel_to_set (ce_set_to_rel A)", "by simp"], ["proof (state)\nthis:\n  c_pair x y \\<in> ce_rel_to_set (ce_set_to_rel A)\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> A \\<Longrightarrow> (x, y) \\<in> ce_set_to_rel A", "then"], ["proof (chain)\npicking this:\n  c_pair x y \\<in> ce_rel_to_set (ce_set_to_rel A)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_pair x y \\<in> ce_rel_to_set (ce_set_to_rel A)\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> ce_set_to_rel A", "by (rule ce_rel_lm_11)"], ["proof (state)\nthis:\n  (x, y) \\<in> ce_set_to_rel A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_15: \"((x,y) \\<in> ce_set_to_rel A) = (c_pair x y \\<in> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> ce_set_to_rel A) = (c_pair x y \\<in> A)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (x, y) \\<in> ce_set_to_rel A \\<Longrightarrow> c_pair x y \\<in> A\n 2. c_pair x y \\<in> A \\<Longrightarrow> (x, y) \\<in> ce_set_to_rel A", "assume \"(x, y) \\<in> ce_set_to_rel A\""], ["proof (state)\nthis:\n  (x, y) \\<in> ce_set_to_rel A\n\ngoal (2 subgoals):\n 1. (x, y) \\<in> ce_set_to_rel A \\<Longrightarrow> c_pair x y \\<in> A\n 2. c_pair x y \\<in> A \\<Longrightarrow> (x, y) \\<in> ce_set_to_rel A", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<in> ce_set_to_rel A", "show \"c_pair x y \\<in> A\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> ce_set_to_rel A\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> A", "by (rule ce_rel_lm_13)"], ["proof (state)\nthis:\n  c_pair x y \\<in> A\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> A \\<Longrightarrow> (x, y) \\<in> ce_set_to_rel A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c_pair x y \\<in> A \\<Longrightarrow> (x, y) \\<in> ce_set_to_rel A", "assume \"c_pair x y \\<in> A\""], ["proof (state)\nthis:\n  c_pair x y \\<in> A\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> A \\<Longrightarrow> (x, y) \\<in> ce_set_to_rel A", "then"], ["proof (chain)\npicking this:\n  c_pair x y \\<in> A", "show \"(x, y) \\<in> ce_set_to_rel A\""], ["proof (prove)\nusing this:\n  c_pair x y \\<in> A\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> ce_set_to_rel A", "by (rule ce_rel_lm_14)"], ["proof (state)\nthis:\n  (x, y) \\<in> ce_set_to_rel A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_16: \"x \\<in> ce_rel_to_set r \\<Longrightarrow> (c_fst x, c_snd x) \\<in> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> ce_rel_to_set r \\<Longrightarrow> (c_fst x, c_snd x) \\<in> r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> ce_rel_to_set r \\<Longrightarrow> (c_fst x, c_snd x) \\<in> r", "assume \"x \\<in> ce_rel_to_set r\""], ["proof (state)\nthis:\n  x \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. x \\<in> ce_rel_to_set r \\<Longrightarrow> (c_fst x, c_snd x) \\<in> r", "then"], ["proof (chain)\npicking this:\n  x \\<in> ce_rel_to_set r", "have \"(c_fst x, c_snd x) \\<in> ce_set_to_rel (ce_rel_to_set r)\""], ["proof (prove)\nusing this:\n  x \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. (c_fst x, c_snd x) \\<in> ce_set_to_rel (ce_rel_to_set r)", "by (rule ce_rel_lm_10)"], ["proof (state)\nthis:\n  (c_fst x, c_snd x) \\<in> ce_set_to_rel (ce_rel_to_set r)\n\ngoal (1 subgoal):\n 1. x \\<in> ce_rel_to_set r \\<Longrightarrow> (c_fst x, c_snd x) \\<in> r", "then"], ["proof (chain)\npicking this:\n  (c_fst x, c_snd x) \\<in> ce_set_to_rel (ce_rel_to_set r)", "show ?thesis"], ["proof (prove)\nusing this:\n  (c_fst x, c_snd x) \\<in> ce_set_to_rel (ce_rel_to_set r)\n\ngoal (1 subgoal):\n 1. (c_fst x, c_snd x) \\<in> r", "by simp"], ["proof (state)\nthis:\n  (c_fst x, c_snd x) \\<in> r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_17: \"(c_fst x, c_snd x) \\<in> ce_set_to_rel A \\<Longrightarrow> x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c_fst x, c_snd x) \\<in> ce_set_to_rel A \\<Longrightarrow> x \\<in> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (c_fst x, c_snd x) \\<in> ce_set_to_rel A \\<Longrightarrow> x \\<in> A", "assume \"(c_fst x, c_snd x) \\<in> ce_set_to_rel A\""], ["proof (state)\nthis:\n  (c_fst x, c_snd x) \\<in> ce_set_to_rel A\n\ngoal (1 subgoal):\n 1. (c_fst x, c_snd x) \\<in> ce_set_to_rel A \\<Longrightarrow> x \\<in> A", "then"], ["proof (chain)\npicking this:\n  (c_fst x, c_snd x) \\<in> ce_set_to_rel A", "have \"c_pair (c_fst x) (c_snd x) \\<in> A\""], ["proof (prove)\nusing this:\n  (c_fst x, c_snd x) \\<in> ce_set_to_rel A\n\ngoal (1 subgoal):\n 1. c_pair (c_fst x) (c_snd x) \\<in> A", "by (rule ce_rel_lm_13)"], ["proof (state)\nthis:\n  c_pair (c_fst x) (c_snd x) \\<in> A\n\ngoal (1 subgoal):\n 1. (c_fst x, c_snd x) \\<in> ce_set_to_rel A \\<Longrightarrow> x \\<in> A", "then"], ["proof (chain)\npicking this:\n  c_pair (c_fst x) (c_snd x) \\<in> A", "show ?thesis"], ["proof (prove)\nusing this:\n  c_pair (c_fst x) (c_snd x) \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by simp"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_18: \"((c_fst x, c_snd x) \\<in> ce_set_to_rel A) = (x \\<in> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((c_fst x, c_snd x) \\<in> ce_set_to_rel A) = (x \\<in> A)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (c_fst x, c_snd x) \\<in> ce_set_to_rel A \\<Longrightarrow> x \\<in> A\n 2. x \\<in> A \\<Longrightarrow> (c_fst x, c_snd x) \\<in> ce_set_to_rel A", "assume \"(c_fst x, c_snd x) \\<in> ce_set_to_rel A\""], ["proof (state)\nthis:\n  (c_fst x, c_snd x) \\<in> ce_set_to_rel A\n\ngoal (2 subgoals):\n 1. (c_fst x, c_snd x) \\<in> ce_set_to_rel A \\<Longrightarrow> x \\<in> A\n 2. x \\<in> A \\<Longrightarrow> (c_fst x, c_snd x) \\<in> ce_set_to_rel A", "then"], ["proof (chain)\npicking this:\n  (c_fst x, c_snd x) \\<in> ce_set_to_rel A", "show \"x \\<in> A\""], ["proof (prove)\nusing this:\n  (c_fst x, c_snd x) \\<in> ce_set_to_rel A\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by (rule ce_rel_lm_17)"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<Longrightarrow> (c_fst x, c_snd x) \\<in> ce_set_to_rel A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> A \\<Longrightarrow> (c_fst x, c_snd x) \\<in> ce_set_to_rel A", "assume \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<Longrightarrow> (c_fst x, c_snd x) \\<in> ce_set_to_rel A", "then"], ["proof (chain)\npicking this:\n  x \\<in> A", "show \"(c_fst x, c_snd x) \\<in> ce_set_to_rel A\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (c_fst x, c_snd x) \\<in> ce_set_to_rel A", "by (rule ce_rel_lm_10)"], ["proof (state)\nthis:\n  (c_fst x, c_snd x) \\<in> ce_set_to_rel A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_19: \"(c_fst x, c_snd x) \\<in> r \\<Longrightarrow> x \\<in> ce_rel_to_set r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c_fst x, c_snd x) \\<in> r \\<Longrightarrow> x \\<in> ce_rel_to_set r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (c_fst x, c_snd x) \\<in> r \\<Longrightarrow> x \\<in> ce_rel_to_set r", "assume \"(c_fst x, c_snd x) \\<in> r\""], ["proof (state)\nthis:\n  (c_fst x, c_snd x) \\<in> r\n\ngoal (1 subgoal):\n 1. (c_fst x, c_snd x) \\<in> r \\<Longrightarrow> x \\<in> ce_rel_to_set r", "then"], ["proof (chain)\npicking this:\n  (c_fst x, c_snd x) \\<in> r", "have \"(c_fst x, c_snd x) \\<in> ce_set_to_rel (ce_rel_to_set r)\""], ["proof (prove)\nusing this:\n  (c_fst x, c_snd x) \\<in> r\n\ngoal (1 subgoal):\n 1. (c_fst x, c_snd x) \\<in> ce_set_to_rel (ce_rel_to_set r)", "by simp"], ["proof (state)\nthis:\n  (c_fst x, c_snd x) \\<in> ce_set_to_rel (ce_rel_to_set r)\n\ngoal (1 subgoal):\n 1. (c_fst x, c_snd x) \\<in> r \\<Longrightarrow> x \\<in> ce_rel_to_set r", "then"], ["proof (chain)\npicking this:\n  (c_fst x, c_snd x) \\<in> ce_set_to_rel (ce_rel_to_set r)", "show ?thesis"], ["proof (prove)\nusing this:\n  (c_fst x, c_snd x) \\<in> ce_set_to_rel (ce_rel_to_set r)\n\ngoal (1 subgoal):\n 1. x \\<in> ce_rel_to_set r", "by (rule ce_rel_lm_17)"], ["proof (state)\nthis:\n  x \\<in> ce_rel_to_set r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_20: \"((c_fst x, c_snd x) \\<in> r) = (x \\<in> ce_rel_to_set r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((c_fst x, c_snd x) \\<in> r) = (x \\<in> ce_rel_to_set r)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (c_fst x, c_snd x) \\<in> r \\<Longrightarrow> x \\<in> ce_rel_to_set r\n 2. x \\<in> ce_rel_to_set r \\<Longrightarrow> (c_fst x, c_snd x) \\<in> r", "assume \"(c_fst x, c_snd x) \\<in> r\""], ["proof (state)\nthis:\n  (c_fst x, c_snd x) \\<in> r\n\ngoal (2 subgoals):\n 1. (c_fst x, c_snd x) \\<in> r \\<Longrightarrow> x \\<in> ce_rel_to_set r\n 2. x \\<in> ce_rel_to_set r \\<Longrightarrow> (c_fst x, c_snd x) \\<in> r", "then"], ["proof (chain)\npicking this:\n  (c_fst x, c_snd x) \\<in> r", "show \"x \\<in> ce_rel_to_set r\""], ["proof (prove)\nusing this:\n  (c_fst x, c_snd x) \\<in> r\n\ngoal (1 subgoal):\n 1. x \\<in> ce_rel_to_set r", "by (rule ce_rel_lm_19)"], ["proof (state)\nthis:\n  x \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. x \\<in> ce_rel_to_set r \\<Longrightarrow> (c_fst x, c_snd x) \\<in> r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> ce_rel_to_set r \\<Longrightarrow> (c_fst x, c_snd x) \\<in> r", "assume \"x \\<in> ce_rel_to_set r\""], ["proof (state)\nthis:\n  x \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. x \\<in> ce_rel_to_set r \\<Longrightarrow> (c_fst x, c_snd x) \\<in> r", "then"], ["proof (chain)\npicking this:\n  x \\<in> ce_rel_to_set r", "show \"(c_fst x, c_snd x) \\<in> r\""], ["proof (prove)\nusing this:\n  x \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. (c_fst x, c_snd x) \\<in> r", "by (rule ce_rel_lm_16)"], ["proof (state)\nthis:\n  (c_fst x, c_snd x) \\<in> r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_21: \"r \\<in> ce_rels \\<Longrightarrow> \\<exists> p \\<in> PrimRec3. \\<forall> x y. ((x,y) \\<in> r) = (\\<exists> u. p x y u = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec3.\n       \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec3.\n       \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "assume r_ce: \"r \\<in> ce_rels\""], ["proof (state)\nthis:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec3.\n       \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "define A where \"A = ce_rel_to_set r\""], ["proof (state)\nthis:\n  A = ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec3.\n       \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "from r_ce"], ["proof (chain)\npicking this:\n  r \\<in> ce_rels", "have A_ce: \"A \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets", "by (unfold A_def, rule ce_rel_lm_6)"], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec3.\n       \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "then"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets", "have \"\\<exists> p \\<in> PrimRec2. A = fn_to_set p\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>PrimRec2. A = fn_to_set p", "by (rule ce_set_lm_3)"], ["proof (state)\nthis:\n  \\<exists>p\\<in>PrimRec2. A = fn_to_set p\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec3.\n       \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "then"], ["proof (chain)\npicking this:\n  \\<exists>p\\<in>PrimRec2. A = fn_to_set p", "obtain q where q_is_pr: \"q \\<in> PrimRec2\" and A_def1: \"A = fn_to_set q\""], ["proof (prove)\nusing this:\n  \\<exists>p\\<in>PrimRec2. A = fn_to_set p\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> PrimRec2; A = fn_to_set q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  q \\<in> PrimRec2\n  A = fn_to_set q\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec3.\n       \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "from A_def1"], ["proof (chain)\npicking this:\n  A = fn_to_set q", "have A_def2: \"A = { x. \\<exists> y. q x y = 0}\""], ["proof (prove)\nusing this:\n  A = fn_to_set q\n\ngoal (1 subgoal):\n 1. A = {x. \\<exists>y. q x y = 0}", "by (unfold fn_to_set_def)"], ["proof (state)\nthis:\n  A = {x. \\<exists>y. q x y = 0}\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec3.\n       \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "define p where \"p x y u = q (c_pair x y) u\" for x y u"], ["proof (state)\nthis:\n  p ?x ?y ?u = q (c_pair ?x ?y) ?u\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec3.\n       \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "from q_is_pr"], ["proof (chain)\npicking this:\n  q \\<in> PrimRec2", "have p_is_pr: \"p \\<in> PrimRec3\""], ["proof (prove)\nusing this:\n  q \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. p \\<in> PrimRec3", "unfolding p_def"], ["proof (prove)\nusing this:\n  q \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. q (c_pair x y)) \\<in> PrimRec3", "by prec"], ["proof (state)\nthis:\n  p \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec3.\n       \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "have \"\\<And> x y. ((x,y) \\<in> r) = (\\<exists> u. p x y u = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "show \"((x,y) \\<in> r) = (\\<exists> u. p x y u = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (x, y) \\<in> r \\<Longrightarrow> \\<exists>u. p x y u = 0\n 2. \\<exists>u. p x y u = 0 \\<Longrightarrow> (x, y) \\<in> r", "assume A: \"(x,y) \\<in> r\""], ["proof (state)\nthis:\n  (x, y) \\<in> r\n\ngoal (2 subgoals):\n 1. (x, y) \\<in> r \\<Longrightarrow> \\<exists>u. p x y u = 0\n 2. \\<exists>u. p x y u = 0 \\<Longrightarrow> (x, y) \\<in> r", "define z where \"z = c_pair x y\""], ["proof (state)\nthis:\n  z = c_pair x y\n\ngoal (2 subgoals):\n 1. (x, y) \\<in> r \\<Longrightarrow> \\<exists>u. p x y u = 0\n 2. \\<exists>u. p x y u = 0 \\<Longrightarrow> (x, y) \\<in> r", "with A_def A"], ["proof (chain)\npicking this:\n  A = ce_rel_to_set r\n  (x, y) \\<in> r\n  z = c_pair x y", "have z_in_A: \"z \\<in> A\""], ["proof (prove)\nusing this:\n  A = ce_rel_to_set r\n  (x, y) \\<in> r\n  z = c_pair x y\n\ngoal (1 subgoal):\n 1. z \\<in> A", "by (unfold ce_rel_to_set_def, auto)"], ["proof (state)\nthis:\n  z \\<in> A\n\ngoal (2 subgoals):\n 1. (x, y) \\<in> r \\<Longrightarrow> \\<exists>u. p x y u = 0\n 2. \\<exists>u. p x y u = 0 \\<Longrightarrow> (x, y) \\<in> r", "with A_def2"], ["proof (chain)\npicking this:\n  A = {x. \\<exists>y. q x y = 0}\n  z \\<in> A", "have \"z \\<in> { x. \\<exists> y. q x y = 0}\""], ["proof (prove)\nusing this:\n  A = {x. \\<exists>y. q x y = 0}\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. z \\<in> {x. \\<exists>y. q x y = 0}", "by auto"], ["proof (state)\nthis:\n  z \\<in> {x. \\<exists>y. q x y = 0}\n\ngoal (2 subgoals):\n 1. (x, y) \\<in> r \\<Longrightarrow> \\<exists>u. p x y u = 0\n 2. \\<exists>u. p x y u = 0 \\<Longrightarrow> (x, y) \\<in> r", "then"], ["proof (chain)\npicking this:\n  z \\<in> {x. \\<exists>y. q x y = 0}", "obtain u where \"q z u = 0\""], ["proof (prove)\nusing this:\n  z \\<in> {x. \\<exists>y. q x y = 0}\n\ngoal (1 subgoal):\n 1. (\\<And>u. q z u = 0 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  q z u = 0\n\ngoal (2 subgoals):\n 1. (x, y) \\<in> r \\<Longrightarrow> \\<exists>u. p x y u = 0\n 2. \\<exists>u. p x y u = 0 \\<Longrightarrow> (x, y) \\<in> r", "with z_def"], ["proof (chain)\npicking this:\n  z = c_pair x y\n  q z u = 0", "have \"p x y u = 0\""], ["proof (prove)\nusing this:\n  z = c_pair x y\n  q z u = 0\n\ngoal (1 subgoal):\n 1. p x y u = 0", "by (simp add: z_def p_def)"], ["proof (state)\nthis:\n  p x y u = 0\n\ngoal (2 subgoals):\n 1. (x, y) \\<in> r \\<Longrightarrow> \\<exists>u. p x y u = 0\n 2. \\<exists>u. p x y u = 0 \\<Longrightarrow> (x, y) \\<in> r", "then"], ["proof (chain)\npicking this:\n  p x y u = 0", "show \"\\<exists> u. p x y u = 0\""], ["proof (prove)\nusing this:\n  p x y u = 0\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x y u = 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>u. p x y u = 0\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x y u = 0 \\<Longrightarrow> (x, y) \\<in> r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u. p x y u = 0 \\<Longrightarrow> (x, y) \\<in> r", "assume A: \"\\<exists> u. p x y u = 0\""], ["proof (state)\nthis:\n  \\<exists>u. p x y u = 0\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x y u = 0 \\<Longrightarrow> (x, y) \\<in> r", "define z where \"z = c_pair x y\""], ["proof (state)\nthis:\n  z = c_pair x y\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x y u = 0 \\<Longrightarrow> (x, y) \\<in> r", "from A"], ["proof (chain)\npicking this:\n  \\<exists>u. p x y u = 0", "obtain u where \"p x y u = 0\""], ["proof (prove)\nusing this:\n  \\<exists>u. p x y u = 0\n\ngoal (1 subgoal):\n 1. (\\<And>u. p x y u = 0 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  p x y u = 0\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x y u = 0 \\<Longrightarrow> (x, y) \\<in> r", "then"], ["proof (chain)\npicking this:\n  p x y u = 0", "have q_z: \"q z u = 0\""], ["proof (prove)\nusing this:\n  p x y u = 0\n\ngoal (1 subgoal):\n 1. q z u = 0", "by (simp add: z_def p_def)"], ["proof (state)\nthis:\n  q z u = 0\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x y u = 0 \\<Longrightarrow> (x, y) \\<in> r", "with A_def2"], ["proof (chain)\npicking this:\n  A = {x. \\<exists>y. q x y = 0}\n  q z u = 0", "have z_in_A: \"z \\<in> A\""], ["proof (prove)\nusing this:\n  A = {x. \\<exists>y. q x y = 0}\n  q z u = 0\n\ngoal (1 subgoal):\n 1. z \\<in> A", "by auto"], ["proof (state)\nthis:\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x y u = 0 \\<Longrightarrow> (x, y) \\<in> r", "then"], ["proof (chain)\npicking this:\n  z \\<in> A", "have \"c_pair x y \\<in> A\""], ["proof (prove)\nusing this:\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> A", "by (unfold z_def)"], ["proof (state)\nthis:\n  c_pair x y \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x y u = 0 \\<Longrightarrow> (x, y) \\<in> r", "then"], ["proof (chain)\npicking this:\n  c_pair x y \\<in> A", "have \"c_pair x y \\<in> ce_rel_to_set r\""], ["proof (prove)\nusing this:\n  c_pair x y \\<in> A\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> ce_rel_to_set r", "by (unfold A_def)"], ["proof (state)\nthis:\n  c_pair x y \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x y u = 0 \\<Longrightarrow> (x, y) \\<in> r", "then"], ["proof (chain)\npicking this:\n  c_pair x y \\<in> ce_rel_to_set r", "show \"(x,y) \\<in> r\""], ["proof (prove)\nusing this:\n  c_pair x y \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> r", "by (rule ce_rel_lm_11)"], ["proof (state)\nthis:\n  (x, y) \\<in> r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((?x, ?y) \\<in> r) = (\\<exists>u. p ?x ?y u = 0)\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec3.\n       \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "with p_is_pr"], ["proof (chain)\npicking this:\n  p \\<in> PrimRec3\n  ((?x, ?y) \\<in> r) = (\\<exists>u. p ?x ?y u = 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  p \\<in> PrimRec3\n  ((?x, ?y) \\<in> r) = (\\<exists>u. p ?x ?y u = 0)\n\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>PrimRec3.\n       \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "by auto"], ["proof (state)\nthis:\n  \\<exists>p\\<in>PrimRec3.\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_22: \"r \\<in> ce_rels \\<Longrightarrow> \\<exists> p \\<in> PrimRec3. r = { (x,y). \\<exists> u. p x y u = 0 }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec3. r = {(x, y). \\<exists>u. p x y u = 0}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec3. r = {(x, y). \\<exists>u. p x y u = 0}", "assume r_ce: \"r \\<in> ce_rels\""], ["proof (state)\nthis:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec3. r = {(x, y). \\<exists>u. p x y u = 0}", "then"], ["proof (chain)\npicking this:\n  r \\<in> ce_rels", "have \"\\<exists> p \\<in> PrimRec3. \\<forall> x y. ((x,y) \\<in> r) = (\\<exists> u. p x y u = 0)\""], ["proof (prove)\nusing this:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>PrimRec3.\n       \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "by (rule ce_rel_lm_21)"], ["proof (state)\nthis:\n  \\<exists>p\\<in>PrimRec3.\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec3. r = {(x, y). \\<exists>u. p x y u = 0}", "then"], ["proof (chain)\npicking this:\n  \\<exists>p\\<in>PrimRec3.\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "obtain p where p_is_pr: \"p \\<in> PrimRec3\" and L1: \"\\<forall> x y. ((x,y) \\<in> r) = (\\<exists> u. p x y u = 0)\""], ["proof (prove)\nusing this:\n  \\<exists>p\\<in>PrimRec3.\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<in> PrimRec3;\n         \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p \\<in> PrimRec3\n  \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow>\n    \\<exists>p\\<in>PrimRec3. r = {(x, y). \\<exists>u. p x y u = 0}", "from p_is_pr L1"], ["proof (chain)\npicking this:\n  p \\<in> PrimRec3\n  \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  p \\<in> PrimRec3\n  \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\n\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>PrimRec3. r = {(x, y). \\<exists>u. p x y u = 0}", "by blast"], ["proof (state)\nthis:\n  \\<exists>p\\<in>PrimRec3. r = {(x, y). \\<exists>u. p x y u = 0}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_23: \"\\<lbrakk> p \\<in> PrimRec3; \\<forall> x y. ((x,y) \\<in> r) = (\\<exists> u. p x y u = 0) \\<rbrakk> \\<Longrightarrow> r \\<in> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec3;\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\\<rbrakk>\n    \\<Longrightarrow> r \\<in> ce_rels", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec3;\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\\<rbrakk>\n    \\<Longrightarrow> r \\<in> ce_rels", "assume p_is_pr: \"p \\<in> PrimRec3\""], ["proof (state)\nthis:\n  p \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec3;\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\\<rbrakk>\n    \\<Longrightarrow> r \\<in> ce_rels", "assume A: \"\\<forall> x y. ((x,y) \\<in> r) = (\\<exists> u. p x y u = 0)\""], ["proof (state)\nthis:\n  \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec3;\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\\<rbrakk>\n    \\<Longrightarrow> r \\<in> ce_rels", "define q where \"q z u = p (c_fst z) (c_snd z) u\" for z u"], ["proof (state)\nthis:\n  q ?z ?u = p (c_fst ?z) (c_snd ?z) ?u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec3;\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\\<rbrakk>\n    \\<Longrightarrow> r \\<in> ce_rels", "from p_is_pr"], ["proof (chain)\npicking this:\n  p \\<in> PrimRec3", "have q_is_pr: \"q \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  p \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. q \\<in> PrimRec2", "unfolding q_def"], ["proof (prove)\nusing this:\n  p \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. (\\<lambda>z. p (c_fst z) (c_snd z)) \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  q \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec3;\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\\<rbrakk>\n    \\<Longrightarrow> r \\<in> ce_rels", "define A where \"A = { x. \\<exists> y. q x y = 0}\""], ["proof (state)\nthis:\n  A = {x. \\<exists>y. q x y = 0}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec3;\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\\<rbrakk>\n    \\<Longrightarrow> r \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  A = {x. \\<exists>y. q x y = 0}", "have A_def1: \"A = fn_to_set q\""], ["proof (prove)\nusing this:\n  A = {x. \\<exists>y. q x y = 0}\n\ngoal (1 subgoal):\n 1. A = fn_to_set q", "by (unfold fn_to_set_def, auto)"], ["proof (state)\nthis:\n  A = fn_to_set q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec3;\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\\<rbrakk>\n    \\<Longrightarrow> r \\<in> ce_rels", "from q_is_pr A_def1"], ["proof (chain)\npicking this:\n  q \\<in> PrimRec2\n  A = fn_to_set q", "have A_ce: \"A \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  q \\<in> PrimRec2\n  A = fn_to_set q\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets", "by (simp add: ce_set_lm_1)"], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec3;\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\\<rbrakk>\n    \\<Longrightarrow> r \\<in> ce_rels", "have main: \"A = ce_rel_to_set r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = ce_rel_to_set r", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. A \\<subseteq> ce_rel_to_set r\n 2. ce_rel_to_set r \\<subseteq> A", "show \"A \\<subseteq> ce_rel_to_set r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> ce_rel_to_set r", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> ce_rel_to_set r", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> ce_rel_to_set r", "assume z_in_A: \"z \\<in> A\""], ["proof (state)\nthis:\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> ce_rel_to_set r", "show \"z \\<in> ce_rel_to_set r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> ce_rel_to_set r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<in> ce_rel_to_set r", "define x where \"x = c_fst z\""], ["proof (state)\nthis:\n  x = c_fst z\n\ngoal (1 subgoal):\n 1. z \\<in> ce_rel_to_set r", "define y where \"y = c_snd z\""], ["proof (state)\nthis:\n  y = c_snd z\n\ngoal (1 subgoal):\n 1. z \\<in> ce_rel_to_set r", "from z_in_A A_def"], ["proof (chain)\npicking this:\n  z \\<in> A\n  A = {x. \\<exists>y. q x y = 0}", "obtain u where L2: \"q z u = 0\""], ["proof (prove)\nusing this:\n  z \\<in> A\n  A = {x. \\<exists>y. q x y = 0}\n\ngoal (1 subgoal):\n 1. (\\<And>u. q z u = 0 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  q z u = 0\n\ngoal (1 subgoal):\n 1. z \\<in> ce_rel_to_set r", "with x_def y_def q_def"], ["proof (chain)\npicking this:\n  x = c_fst z\n  y = c_snd z\n  q ?z ?u = p (c_fst ?z) (c_snd ?z) ?u\n  q z u = 0", "have L3: \"p x y u = 0\""], ["proof (prove)\nusing this:\n  x = c_fst z\n  y = c_snd z\n  q ?z ?u = p (c_fst ?z) (c_snd ?z) ?u\n  q z u = 0\n\ngoal (1 subgoal):\n 1. p x y u = 0", "by simp"], ["proof (state)\nthis:\n  p x y u = 0\n\ngoal (1 subgoal):\n 1. z \\<in> ce_rel_to_set r", "then"], ["proof (chain)\npicking this:\n  p x y u = 0", "have \"\\<exists>u. p x y u = 0\""], ["proof (prove)\nusing this:\n  p x y u = 0\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x y u = 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>u. p x y u = 0\n\ngoal (1 subgoal):\n 1. z \\<in> ce_rel_to_set r", "with A"], ["proof (chain)\npicking this:\n  \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\n  \\<exists>u. p x y u = 0", "have \"(x,y) \\<in> r\""], ["proof (prove)\nusing this:\n  \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\n  \\<exists>u. p x y u = 0\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> r", "by auto"], ["proof (state)\nthis:\n  (x, y) \\<in> r\n\ngoal (1 subgoal):\n 1. z \\<in> ce_rel_to_set r", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<in> r", "have \"c_pair x y \\<in> ce_rel_to_set r\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> r\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> ce_rel_to_set r", "by (rule ce_rel_lm_9)"], ["proof (state)\nthis:\n  c_pair x y \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. z \\<in> ce_rel_to_set r", "with x_def y_def"], ["proof (chain)\npicking this:\n  x = c_fst z\n  y = c_snd z\n  c_pair x y \\<in> ce_rel_to_set r", "show ?thesis"], ["proof (prove)\nusing this:\n  x = c_fst z\n  y = c_snd z\n  c_pair x y \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. z \\<in> ce_rel_to_set r", "by simp"], ["proof (state)\nthis:\n  z \\<in> ce_rel_to_set r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> ce_rel_to_set r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A \\<subseteq> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. ce_rel_to_set r \\<subseteq> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ce_rel_to_set r \\<subseteq> A", "show \"ce_rel_to_set r \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_rel_to_set r \\<subseteq> A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> ce_rel_to_set r \\<Longrightarrow> x \\<in> A", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> ce_rel_to_set r \\<Longrightarrow> x \\<in> A", "assume z_in_r: \"z \\<in> ce_rel_to_set r\""], ["proof (state)\nthis:\n  z \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> ce_rel_to_set r \\<Longrightarrow> x \\<in> A", "show \"z \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<in> A", "define x where \"x = c_fst z\""], ["proof (state)\nthis:\n  x = c_fst z\n\ngoal (1 subgoal):\n 1. z \\<in> A", "define y where \"y = c_snd z\""], ["proof (state)\nthis:\n  y = c_snd z\n\ngoal (1 subgoal):\n 1. z \\<in> A", "from z_in_r"], ["proof (chain)\npicking this:\n  z \\<in> ce_rel_to_set r", "have \"(c_fst z, c_snd z) \\<in> r\""], ["proof (prove)\nusing this:\n  z \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. (c_fst z, c_snd z) \\<in> r", "by (rule ce_rel_lm_16)"], ["proof (state)\nthis:\n  (c_fst z, c_snd z) \\<in> r\n\ngoal (1 subgoal):\n 1. z \\<in> A", "with x_def y_def"], ["proof (chain)\npicking this:\n  x = c_fst z\n  y = c_snd z\n  (c_fst z, c_snd z) \\<in> r", "have \"(x,y) \\<in> r\""], ["proof (prove)\nusing this:\n  x = c_fst z\n  y = c_snd z\n  (c_fst z, c_snd z) \\<in> r\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> r", "by simp"], ["proof (state)\nthis:\n  (x, y) \\<in> r\n\ngoal (1 subgoal):\n 1. z \\<in> A", "with A"], ["proof (chain)\npicking this:\n  \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\n  (x, y) \\<in> r", "obtain u where L1: \"p x y u = 0\""], ["proof (prove)\nusing this:\n  \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\n  (x, y) \\<in> r\n\ngoal (1 subgoal):\n 1. (\\<And>u. p x y u = 0 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  p x y u = 0\n\ngoal (1 subgoal):\n 1. z \\<in> A", "with x_def y_def q_def"], ["proof (chain)\npicking this:\n  x = c_fst z\n  y = c_snd z\n  q ?z ?u = p (c_fst ?z) (c_snd ?z) ?u\n  p x y u = 0", "have \"q z u = 0\""], ["proof (prove)\nusing this:\n  x = c_fst z\n  y = c_snd z\n  q ?z ?u = p (c_fst ?z) (c_snd ?z) ?u\n  p x y u = 0\n\ngoal (1 subgoal):\n 1. q z u = 0", "by simp"], ["proof (state)\nthis:\n  q z u = 0\n\ngoal (1 subgoal):\n 1. z \\<in> A", "with A_def"], ["proof (chain)\npicking this:\n  A = {x. \\<exists>y. q x y = 0}\n  q z u = 0", "show \"z \\<in> A\""], ["proof (prove)\nusing this:\n  A = {x. \\<exists>y. q x y = 0}\n  q z u = 0\n\ngoal (1 subgoal):\n 1. z \\<in> A", "by auto"], ["proof (state)\nthis:\n  z \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ce_rel_to_set r \\<subseteq> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A = ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec3;\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\\<rbrakk>\n    \\<Longrightarrow> r \\<in> ce_rels", "with A_ce"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets\n  A = ce_rel_to_set r", "have \"ce_rel_to_set r \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n  A = ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. ce_rel_to_set r \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  ce_rel_to_set r \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec3;\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\\<rbrakk>\n    \\<Longrightarrow> r \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  ce_rel_to_set r \\<in> ce_sets", "show \"r \\<in> ce_rels\""], ["proof (prove)\nusing this:\n  ce_rel_to_set r \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels", "by (rule ce_rel_lm_7)"], ["proof (state)\nthis:\n  r \\<in> ce_rels\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_24: \"\\<lbrakk> r \\<in> ce_rels; s \\<in> ce_rels \\<rbrakk> \\<Longrightarrow> s O r \\<in> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> s O r \\<in> ce_rels", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> s O r \\<in> ce_rels", "assume r_ce: \"r \\<in> ce_rels\""], ["proof (state)\nthis:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> s O r \\<in> ce_rels", "assume s_ce: \"s \\<in> ce_rels\""], ["proof (state)\nthis:\n  s \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> s O r \\<in> ce_rels", "from r_ce"], ["proof (chain)\npicking this:\n  r \\<in> ce_rels", "have \"\\<exists> p \\<in> PrimRec3. \\<forall> x y. ((x,y) \\<in> r)=(\\<exists> u. p x y u = 0)\""], ["proof (prove)\nusing this:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>PrimRec3.\n       \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "by (rule ce_rel_lm_21)"], ["proof (state)\nthis:\n  \\<exists>p\\<in>PrimRec3.\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> s O r \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  \\<exists>p\\<in>PrimRec3.\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "obtain p_r where p_r_is_pr: \"p_r \\<in> PrimRec3\" and R1: \"\\<forall> x y. ((x,y) \\<in> r)=(\\<exists> u. p_r x y u = 0)\""], ["proof (prove)\nusing this:\n  \\<exists>p\\<in>PrimRec3.\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\n\ngoal (1 subgoal):\n 1. (\\<And>p_r.\n        \\<lbrakk>p_r \\<in> PrimRec3;\n         \\<forall>x y.\n            ((x, y) \\<in> r) = (\\<exists>u. p_r x y u = 0)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p_r \\<in> PrimRec3\n  \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p_r x y u = 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> s O r \\<in> ce_rels", "from s_ce"], ["proof (chain)\npicking this:\n  s \\<in> ce_rels", "have \"\\<exists> p \\<in> PrimRec3. \\<forall> x y. ((x,y) \\<in> s)=(\\<exists> u. p x y u = 0)\""], ["proof (prove)\nusing this:\n  s \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>PrimRec3.\n       \\<forall>x y. ((x, y) \\<in> s) = (\\<exists>u. p x y u = 0)", "by (rule ce_rel_lm_21)"], ["proof (state)\nthis:\n  \\<exists>p\\<in>PrimRec3.\n     \\<forall>x y. ((x, y) \\<in> s) = (\\<exists>u. p x y u = 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> s O r \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  \\<exists>p\\<in>PrimRec3.\n     \\<forall>x y. ((x, y) \\<in> s) = (\\<exists>u. p x y u = 0)", "obtain p_s where p_s_is_pr: \"p_s \\<in> PrimRec3\" and S1: \"\\<forall> x y. ((x,y) \\<in> s)=(\\<exists> u. p_s x y u = 0)\""], ["proof (prove)\nusing this:\n  \\<exists>p\\<in>PrimRec3.\n     \\<forall>x y. ((x, y) \\<in> s) = (\\<exists>u. p x y u = 0)\n\ngoal (1 subgoal):\n 1. (\\<And>p_s.\n        \\<lbrakk>p_s \\<in> PrimRec3;\n         \\<forall>x y.\n            ((x, y) \\<in> s) = (\\<exists>u. p_s x y u = 0)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p_s \\<in> PrimRec3\n  \\<forall>x y. ((x, y) \\<in> s) = (\\<exists>u. p_s x y u = 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> s O r \\<in> ce_rels", "define p where \"p x z u = (p_s x (c_fst u) (c_fst (c_snd u))) + (p_r (c_fst u) z (c_snd (c_snd u)))\"\n    for x z u"], ["proof (state)\nthis:\n  p ?x ?z ?u =\n  p_s ?x (c_fst ?u) (c_fst (c_snd ?u)) +\n  p_r (c_fst ?u) ?z (c_snd (c_snd ?u))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> s O r \\<in> ce_rels", "from p_r_is_pr p_s_is_pr"], ["proof (chain)\npicking this:\n  p_r \\<in> PrimRec3\n  p_s \\<in> PrimRec3", "have p_is_pr: \"p \\<in> PrimRec3\""], ["proof (prove)\nusing this:\n  p_r \\<in> PrimRec3\n  p_s \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. p \\<in> PrimRec3", "unfolding p_def"], ["proof (prove)\nusing this:\n  p_r \\<in> PrimRec3\n  p_s \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. (\\<lambda>x z u.\n        p_s x (c_fst u) (c_fst (c_snd u)) +\n        p_r (c_fst u) z (c_snd (c_snd u)))\n    \\<in> PrimRec3", "by prec"], ["proof (state)\nthis:\n  p \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> s O r \\<in> ce_rels", "define sr where \"sr = s O r\""], ["proof (state)\nthis:\n  sr = s O r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> s O r \\<in> ce_rels", "have main: \"\\<forall> x z. ((x,z) \\<in> sr) = (\\<exists> u. p x z u = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x z. ((x, z) \\<in> sr) = (\\<exists>u. p x z u = 0)", "proof (rule allI, rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x z. ((x, z) \\<in> sr) = (\\<exists>u. p x z u = 0)", "fix x z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x z. ((x, z) \\<in> sr) = (\\<exists>u. p x z u = 0)", "show \"((x, z) \\<in> sr) = (\\<exists>u. p x z u = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, z) \\<in> sr) = (\\<exists>u. p x z u = 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (x, z) \\<in> sr \\<Longrightarrow> \\<exists>u. p x z u = 0\n 2. \\<exists>u. p x z u = 0 \\<Longrightarrow> (x, z) \\<in> sr", "assume A: \"(x, z) \\<in> sr\""], ["proof (state)\nthis:\n  (x, z) \\<in> sr\n\ngoal (2 subgoals):\n 1. (x, z) \\<in> sr \\<Longrightarrow> \\<exists>u. p x z u = 0\n 2. \\<exists>u. p x z u = 0 \\<Longrightarrow> (x, z) \\<in> sr", "show \"\\<exists>u. p x z u = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u. p x z u = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u. p x z u = 0", "from A sr_def"], ["proof (chain)\npicking this:\n  (x, z) \\<in> sr\n  sr = s O r", "obtain y where L1: \"(x,y) \\<in> s\" and L2: \"(y,z) \\<in> r\""], ["proof (prove)\nusing this:\n  (x, z) \\<in> sr\n  sr = s O r\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>(x, y) \\<in> s; (y, z) \\<in> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (x, y) \\<in> s\n  (y, z) \\<in> r\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x z u = 0", "from L1 S1"], ["proof (chain)\npicking this:\n  (x, y) \\<in> s\n  \\<forall>x y. ((x, y) \\<in> s) = (\\<exists>u. p_s x y u = 0)", "obtain u_s where L3: \"p_s x y u_s = 0\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> s\n  \\<forall>x y. ((x, y) \\<in> s) = (\\<exists>u. p_s x y u = 0)\n\ngoal (1 subgoal):\n 1. (\\<And>u_s. p_s x y u_s = 0 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p_s x y u_s = 0\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x z u = 0", "from L2 R1"], ["proof (chain)\npicking this:\n  (y, z) \\<in> r\n  \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p_r x y u = 0)", "obtain u_r where L4: \"p_r y z u_r = 0\""], ["proof (prove)\nusing this:\n  (y, z) \\<in> r\n  \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p_r x y u = 0)\n\ngoal (1 subgoal):\n 1. (\\<And>u_r. p_r y z u_r = 0 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p_r y z u_r = 0\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x z u = 0", "define u where \"u = c_pair y (c_pair u_s u_r)\""], ["proof (state)\nthis:\n  u = c_pair y (c_pair u_s u_r)\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x z u = 0", "from L3 L4"], ["proof (chain)\npicking this:\n  p_s x y u_s = 0\n  p_r y z u_r = 0", "have \"p x z u = 0\""], ["proof (prove)\nusing this:\n  p_s x y u_s = 0\n  p_r y z u_r = 0\n\ngoal (1 subgoal):\n 1. p x z u = 0", "by (unfold p_def, unfold u_def, simp)"], ["proof (state)\nthis:\n  p x z u = 0\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x z u = 0", "then"], ["proof (chain)\npicking this:\n  p x z u = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  p x z u = 0\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x z u = 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>u. p x z u = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>u. p x z u = 0\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x z u = 0 \\<Longrightarrow> (x, z) \\<in> sr", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u. p x z u = 0 \\<Longrightarrow> (x, z) \\<in> sr", "assume A: \"\\<exists>u. p x z u = 0\""], ["proof (state)\nthis:\n  \\<exists>u. p x z u = 0\n\ngoal (1 subgoal):\n 1. \\<exists>u. p x z u = 0 \\<Longrightarrow> (x, z) \\<in> sr", "show \"(x, z) \\<in> sr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, z) \\<in> sr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x, z) \\<in> sr", "from A"], ["proof (chain)\npicking this:\n  \\<exists>u. p x z u = 0", "obtain u where L1: \"p x z u = 0\""], ["proof (prove)\nusing this:\n  \\<exists>u. p x z u = 0\n\ngoal (1 subgoal):\n 1. (\\<And>u. p x z u = 0 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  p x z u = 0\n\ngoal (1 subgoal):\n 1. (x, z) \\<in> sr", "then"], ["proof (chain)\npicking this:\n  p x z u = 0", "have L2: \"(p_s x (c_fst u) (c_fst (c_snd u))) + (p_r (c_fst u) z (c_snd (c_snd u))) = 0\""], ["proof (prove)\nusing this:\n  p x z u = 0\n\ngoal (1 subgoal):\n 1. p_s x (c_fst u) (c_fst (c_snd u)) + p_r (c_fst u) z (c_snd (c_snd u)) =\n    0", "by (unfold p_def)"], ["proof (state)\nthis:\n  p_s x (c_fst u) (c_fst (c_snd u)) + p_r (c_fst u) z (c_snd (c_snd u)) = 0\n\ngoal (1 subgoal):\n 1. (x, z) \\<in> sr", "from L2"], ["proof (chain)\npicking this:\n  p_s x (c_fst u) (c_fst (c_snd u)) + p_r (c_fst u) z (c_snd (c_snd u)) = 0", "have L3: \"p_s x (c_fst u) (c_fst (c_snd u)) = 0\""], ["proof (prove)\nusing this:\n  p_s x (c_fst u) (c_fst (c_snd u)) + p_r (c_fst u) z (c_snd (c_snd u)) = 0\n\ngoal (1 subgoal):\n 1. p_s x (c_fst u) (c_fst (c_snd u)) = 0", "by auto"], ["proof (state)\nthis:\n  p_s x (c_fst u) (c_fst (c_snd u)) = 0\n\ngoal (1 subgoal):\n 1. (x, z) \\<in> sr", "from L2"], ["proof (chain)\npicking this:\n  p_s x (c_fst u) (c_fst (c_snd u)) + p_r (c_fst u) z (c_snd (c_snd u)) = 0", "have L4: \"p_r (c_fst u) z (c_snd (c_snd u)) = 0\""], ["proof (prove)\nusing this:\n  p_s x (c_fst u) (c_fst (c_snd u)) + p_r (c_fst u) z (c_snd (c_snd u)) = 0\n\ngoal (1 subgoal):\n 1. p_r (c_fst u) z (c_snd (c_snd u)) = 0", "by auto"], ["proof (state)\nthis:\n  p_r (c_fst u) z (c_snd (c_snd u)) = 0\n\ngoal (1 subgoal):\n 1. (x, z) \\<in> sr", "from L3 S1"], ["proof (chain)\npicking this:\n  p_s x (c_fst u) (c_fst (c_snd u)) = 0\n  \\<forall>x y. ((x, y) \\<in> s) = (\\<exists>u. p_s x y u = 0)", "have L5: \"(x,(c_fst u)) \\<in> s\""], ["proof (prove)\nusing this:\n  p_s x (c_fst u) (c_fst (c_snd u)) = 0\n  \\<forall>x y. ((x, y) \\<in> s) = (\\<exists>u. p_s x y u = 0)\n\ngoal (1 subgoal):\n 1. (x, c_fst u) \\<in> s", "by auto"], ["proof (state)\nthis:\n  (x, c_fst u) \\<in> s\n\ngoal (1 subgoal):\n 1. (x, z) \\<in> sr", "from L4 R1"], ["proof (chain)\npicking this:\n  p_r (c_fst u) z (c_snd (c_snd u)) = 0\n  \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p_r x y u = 0)", "have L6: \"((c_fst u),z) \\<in> r\""], ["proof (prove)\nusing this:\n  p_r (c_fst u) z (c_snd (c_snd u)) = 0\n  \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p_r x y u = 0)\n\ngoal (1 subgoal):\n 1. (c_fst u, z) \\<in> r", "by auto"], ["proof (state)\nthis:\n  (c_fst u, z) \\<in> r\n\ngoal (1 subgoal):\n 1. (x, z) \\<in> sr", "from L5 L6"], ["proof (chain)\npicking this:\n  (x, c_fst u) \\<in> s\n  (c_fst u, z) \\<in> r", "have \"(x,z) \\<in> s O r\""], ["proof (prove)\nusing this:\n  (x, c_fst u) \\<in> s\n  (c_fst u, z) \\<in> r\n\ngoal (1 subgoal):\n 1. (x, z) \\<in> s O r", "by auto"], ["proof (state)\nthis:\n  (x, z) \\<in> s O r\n\ngoal (1 subgoal):\n 1. (x, z) \\<in> sr", "with sr_def"], ["proof (chain)\npicking this:\n  sr = s O r\n  (x, z) \\<in> s O r", "show ?thesis"], ["proof (prove)\nusing this:\n  sr = s O r\n  (x, z) \\<in> s O r\n\ngoal (1 subgoal):\n 1. (x, z) \\<in> sr", "by auto"], ["proof (state)\nthis:\n  (x, z) \\<in> sr\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x, z) \\<in> sr\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((x, z) \\<in> sr) = (\\<exists>u. p x z u = 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x z. ((x, z) \\<in> sr) = (\\<exists>u. p x z u = 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> s O r \\<in> ce_rels", "from p_is_pr main"], ["proof (chain)\npicking this:\n  p \\<in> PrimRec3\n  \\<forall>x z. ((x, z) \\<in> sr) = (\\<exists>u. p x z u = 0)", "have \"sr \\<in> ce_rels\""], ["proof (prove)\nusing this:\n  p \\<in> PrimRec3\n  \\<forall>x z. ((x, z) \\<in> sr) = (\\<exists>u. p x z u = 0)\n\ngoal (1 subgoal):\n 1. sr \\<in> ce_rels", "by (rule ce_rel_lm_23)"], ["proof (state)\nthis:\n  sr \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> s O r \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  sr \\<in> ce_rels", "show ?thesis"], ["proof (prove)\nusing this:\n  sr \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. s O r \\<in> ce_rels", "by (unfold sr_def)"], ["proof (state)\nthis:\n  s O r \\<in> ce_rels\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_25: \"r \\<in> ce_rels \\<Longrightarrow> r^-1 \\<in> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> r\\<inverse> \\<in> ce_rels", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> r\\<inverse> \\<in> ce_rels", "assume r_ce: \"r \\<in> ce_rels\""], ["proof (state)\nthis:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> r\\<inverse> \\<in> ce_rels", "have \"r^-1 = {(y,x). (x,y) \\<in> r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r\\<inverse> = {(y, x). (x, y) \\<in> r}", "by auto"], ["proof (state)\nthis:\n  r\\<inverse> = {(y, x). (x, y) \\<in> r}\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> r\\<inverse> \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  r\\<inverse> = {(y, x). (x, y) \\<in> r}", "have L1: \"\\<forall> x y. ((x,y) \\<in> r) = ((y,x) \\<in> r^-1)\""], ["proof (prove)\nusing this:\n  r\\<inverse> = {(y, x). (x, y) \\<in> r}\n\ngoal (1 subgoal):\n 1. \\<forall>x y. ((x, y) \\<in> r) = ((y, x) \\<in> r\\<inverse>)", "by auto"], ["proof (state)\nthis:\n  \\<forall>x y. ((x, y) \\<in> r) = ((y, x) \\<in> r\\<inverse>)\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> r\\<inverse> \\<in> ce_rels", "from r_ce"], ["proof (chain)\npicking this:\n  r \\<in> ce_rels", "have \"\\<exists> p \\<in> PrimRec3. \\<forall> x y. ((x,y) \\<in> r) = (\\<exists> u. p x y u = 0)\""], ["proof (prove)\nusing this:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>PrimRec3.\n       \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "by (rule ce_rel_lm_21)"], ["proof (state)\nthis:\n  \\<exists>p\\<in>PrimRec3.\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> r\\<inverse> \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  \\<exists>p\\<in>PrimRec3.\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "obtain p where p_is_pr: \"p \\<in> PrimRec3\" and R1: \"\\<forall> x y. ((x,y) \\<in> r) = (\\<exists> u. p x y u = 0)\""], ["proof (prove)\nusing this:\n  \\<exists>p\\<in>PrimRec3.\n     \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<in> PrimRec3;\n         \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p \\<in> PrimRec3\n  \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> r\\<inverse> \\<in> ce_rels", "define q where \"q x y u = p y x u\" for x y u"], ["proof (state)\nthis:\n  q ?x ?y ?u = p ?y ?x ?u\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> r\\<inverse> \\<in> ce_rels", "from p_is_pr"], ["proof (chain)\npicking this:\n  p \\<in> PrimRec3", "have q_is_pr: \"q \\<in> PrimRec3\""], ["proof (prove)\nusing this:\n  p \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. q \\<in> PrimRec3", "unfolding q_def"], ["proof (prove)\nusing this:\n  p \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. p y x) \\<in> PrimRec3", "by prec"], ["proof (state)\nthis:\n  q \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> r\\<inverse> \\<in> ce_rels", "from L1 R1"], ["proof (chain)\npicking this:\n  \\<forall>x y. ((x, y) \\<in> r) = ((y, x) \\<in> r\\<inverse>)\n  \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)", "have L2: \"\\<forall> x y. ((x,y) \\<in> r^-1) = (\\<exists> u. p y x u = 0)\""], ["proof (prove)\nusing this:\n  \\<forall>x y. ((x, y) \\<in> r) = ((y, x) \\<in> r\\<inverse>)\n  \\<forall>x y. ((x, y) \\<in> r) = (\\<exists>u. p x y u = 0)\n\ngoal (1 subgoal):\n 1. \\<forall>x y. ((x, y) \\<in> r\\<inverse>) = (\\<exists>u. p y x u = 0)", "by auto"], ["proof (state)\nthis:\n  \\<forall>x y. ((x, y) \\<in> r\\<inverse>) = (\\<exists>u. p y x u = 0)\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> r\\<inverse> \\<in> ce_rels", "with q_def"], ["proof (chain)\npicking this:\n  q ?x ?y ?u = p ?y ?x ?u\n  \\<forall>x y. ((x, y) \\<in> r\\<inverse>) = (\\<exists>u. p y x u = 0)", "have L3: \"\\<forall> x y. ((x,y) \\<in> r^-1) = (\\<exists> u. q x y u = 0)\""], ["proof (prove)\nusing this:\n  q ?x ?y ?u = p ?y ?x ?u\n  \\<forall>x y. ((x, y) \\<in> r\\<inverse>) = (\\<exists>u. p y x u = 0)\n\ngoal (1 subgoal):\n 1. \\<forall>x y. ((x, y) \\<in> r\\<inverse>) = (\\<exists>u. q x y u = 0)", "by auto"], ["proof (state)\nthis:\n  \\<forall>x y. ((x, y) \\<in> r\\<inverse>) = (\\<exists>u. q x y u = 0)\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> r\\<inverse> \\<in> ce_rels", "with q_is_pr"], ["proof (chain)\npicking this:\n  q \\<in> PrimRec3\n  \\<forall>x y. ((x, y) \\<in> r\\<inverse>) = (\\<exists>u. q x y u = 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  q \\<in> PrimRec3\n  \\<forall>x y. ((x, y) \\<in> r\\<inverse>) = (\\<exists>u. q x y u = 0)\n\ngoal (1 subgoal):\n 1. r\\<inverse> \\<in> ce_rels", "by (rule ce_rel_lm_23)"], ["proof (state)\nthis:\n  r\\<inverse> \\<in> ce_rels\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_26: \"r \\<in> ce_rels \\<Longrightarrow> Domain r \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Domain r \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Domain r \\<in> ce_sets", "assume r_ce: \"r \\<in> ce_rels\""], ["proof (state)\nthis:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Domain r \\<in> ce_sets", "have L1: \"\\<forall> x. (x \\<in> Domain r) = (\\<exists> y. (x,y) \\<in> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. (x \\<in> Domain r) = (\\<exists>y. (x, y) \\<in> r)", "by auto"], ["proof (state)\nthis:\n  \\<forall>x. (x \\<in> Domain r) = (\\<exists>y. (x, y) \\<in> r)\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Domain r \\<in> ce_sets", "define A where \"A = ce_rel_to_set r\""], ["proof (state)\nthis:\n  A = ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Domain r \\<in> ce_sets", "from r_ce"], ["proof (chain)\npicking this:\n  r \\<in> ce_rels", "have \"ce_rel_to_set r \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. ce_rel_to_set r \\<in> ce_sets", "by (rule ce_rel_lm_6)"], ["proof (state)\nthis:\n  ce_rel_to_set r \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Domain r \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  ce_rel_to_set r \\<in> ce_sets", "have A_ce: \"A \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  ce_rel_to_set r \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets", "by (unfold A_def)"], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Domain r \\<in> ce_sets", "have \"\\<forall> x y. ((x,y) \\<in> r) = (c_pair x y \\<in> ce_rel_to_set r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. ((x, y) \\<in> r) = (c_pair x y \\<in> ce_rel_to_set r)", "by (simp add: ce_rel_lm_12)"], ["proof (state)\nthis:\n  \\<forall>x y. ((x, y) \\<in> r) = (c_pair x y \\<in> ce_rel_to_set r)\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Domain r \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  \\<forall>x y. ((x, y) \\<in> r) = (c_pair x y \\<in> ce_rel_to_set r)", "have L2: \"\\<forall> x y. ((x,y) \\<in> r) = (c_pair x y \\<in> A)\""], ["proof (prove)\nusing this:\n  \\<forall>x y. ((x, y) \\<in> r) = (c_pair x y \\<in> ce_rel_to_set r)\n\ngoal (1 subgoal):\n 1. \\<forall>x y. ((x, y) \\<in> r) = (c_pair x y \\<in> A)", "by (unfold A_def)"], ["proof (state)\nthis:\n  \\<forall>x y. ((x, y) \\<in> r) = (c_pair x y \\<in> A)\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Domain r \\<in> ce_sets", "from A_ce c_fst_is_pr"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets\n  c_fst \\<in> PrimRec1", "have L3: \"{ c_fst z |z.  z \\<in> A } \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n  c_fst \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. {c_fst z |z. z \\<in> A} \\<in> ce_sets", "by (rule ce_set_lm_7)"], ["proof (state)\nthis:\n  {c_fst z |z. z \\<in> A} \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Domain r \\<in> ce_sets", "have L4: \"\\<forall> x. (x \\<in> { c_fst z |z.  z \\<in> A }) =(\\<exists> y. c_pair x y \\<in> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (x \\<in> {c_fst z |z. z \\<in> A}) = (\\<exists>y. c_pair x y \\<in> A)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> {c_fst z |z. z \\<in> A}) = (\\<exists>y. c_pair x y \\<in> A)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> {c_fst z |z. z \\<in> A}) = (\\<exists>y. c_pair x y \\<in> A)", "show \"(x \\<in> { c_fst z |z.  z \\<in> A }) =(\\<exists> y. c_pair x y \\<in> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> {c_fst z |z. z \\<in> A}) = (\\<exists>y. c_pair x y \\<in> A)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> {c_fst z |z. z \\<in> A} \\<Longrightarrow>\n    \\<exists>y. c_pair x y \\<in> A\n 2. \\<exists>y. c_pair x y \\<in> A \\<Longrightarrow>\n    x \\<in> {c_fst z |z. z \\<in> A}", "assume A: \"x \\<in> {c_fst z |z. z \\<in> A}\""], ["proof (state)\nthis:\n  x \\<in> {c_fst z |z. z \\<in> A}\n\ngoal (2 subgoals):\n 1. x \\<in> {c_fst z |z. z \\<in> A} \\<Longrightarrow>\n    \\<exists>y. c_pair x y \\<in> A\n 2. \\<exists>y. c_pair x y \\<in> A \\<Longrightarrow>\n    x \\<in> {c_fst z |z. z \\<in> A}", "then"], ["proof (chain)\npicking this:\n  x \\<in> {c_fst z |z. z \\<in> A}", "obtain z where z_in_A: \"z \\<in> A\" and x_z: \"x = c_fst z\""], ["proof (prove)\nusing this:\n  x \\<in> {c_fst z |z. z \\<in> A}\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<in> A; x = c_fst z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z \\<in> A\n  x = c_fst z\n\ngoal (2 subgoals):\n 1. x \\<in> {c_fst z |z. z \\<in> A} \\<Longrightarrow>\n    \\<exists>y. c_pair x y \\<in> A\n 2. \\<exists>y. c_pair x y \\<in> A \\<Longrightarrow>\n    x \\<in> {c_fst z |z. z \\<in> A}", "from x_z"], ["proof (chain)\npicking this:\n  x = c_fst z", "have \"z = c_pair x (c_snd z)\""], ["proof (prove)\nusing this:\n  x = c_fst z\n\ngoal (1 subgoal):\n 1. z = c_pair x (c_snd z)", "by simp"], ["proof (state)\nthis:\n  z = c_pair x (c_snd z)\n\ngoal (2 subgoals):\n 1. x \\<in> {c_fst z |z. z \\<in> A} \\<Longrightarrow>\n    \\<exists>y. c_pair x y \\<in> A\n 2. \\<exists>y. c_pair x y \\<in> A \\<Longrightarrow>\n    x \\<in> {c_fst z |z. z \\<in> A}", "with z_in_A"], ["proof (chain)\npicking this:\n  z \\<in> A\n  z = c_pair x (c_snd z)", "have \"c_pair x (c_snd z) \\<in> A\""], ["proof (prove)\nusing this:\n  z \\<in> A\n  z = c_pair x (c_snd z)\n\ngoal (1 subgoal):\n 1. c_pair x (c_snd z) \\<in> A", "by auto"], ["proof (state)\nthis:\n  c_pair x (c_snd z) \\<in> A\n\ngoal (2 subgoals):\n 1. x \\<in> {c_fst z |z. z \\<in> A} \\<Longrightarrow>\n    \\<exists>y. c_pair x y \\<in> A\n 2. \\<exists>y. c_pair x y \\<in> A \\<Longrightarrow>\n    x \\<in> {c_fst z |z. z \\<in> A}", "then"], ["proof (chain)\npicking this:\n  c_pair x (c_snd z) \\<in> A", "show \"\\<exists>y. c_pair x y \\<in> A\""], ["proof (prove)\nusing this:\n  c_pair x (c_snd z) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>y. c_pair x y \\<in> A", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. c_pair x y \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>y. c_pair x y \\<in> A \\<Longrightarrow>\n    x \\<in> {c_fst z |z. z \\<in> A}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y. c_pair x y \\<in> A \\<Longrightarrow>\n    x \\<in> {c_fst z |z. z \\<in> A}", "assume A: \"\\<exists>y. c_pair x y \\<in> A\""], ["proof (state)\nthis:\n  \\<exists>y. c_pair x y \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>y. c_pair x y \\<in> A \\<Longrightarrow>\n    x \\<in> {c_fst z |z. z \\<in> A}", "then"], ["proof (chain)\npicking this:\n  \\<exists>y. c_pair x y \\<in> A", "obtain y where y_1: \"c_pair x y \\<in> A\""], ["proof (prove)\nusing this:\n  \\<exists>y. c_pair x y \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>y. c_pair x y \\<in> A \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c_pair x y \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>y. c_pair x y \\<in> A \\<Longrightarrow>\n    x \\<in> {c_fst z |z. z \\<in> A}", "define z where \"z = c_pair x y\""], ["proof (state)\nthis:\n  z = c_pair x y\n\ngoal (1 subgoal):\n 1. \\<exists>y. c_pair x y \\<in> A \\<Longrightarrow>\n    x \\<in> {c_fst z |z. z \\<in> A}", "from y_1"], ["proof (chain)\npicking this:\n  c_pair x y \\<in> A", "have z_in_A: \"z \\<in> A\""], ["proof (prove)\nusing this:\n  c_pair x y \\<in> A\n\ngoal (1 subgoal):\n 1. z \\<in> A", "by (unfold z_def)"], ["proof (state)\nthis:\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>y. c_pair x y \\<in> A \\<Longrightarrow>\n    x \\<in> {c_fst z |z. z \\<in> A}", "from z_def"], ["proof (chain)\npicking this:\n  z = c_pair x y", "have x_z: \"x = c_fst z\""], ["proof (prove)\nusing this:\n  z = c_pair x y\n\ngoal (1 subgoal):\n 1. x = c_fst z", "by (unfold z_def, simp)"], ["proof (state)\nthis:\n  x = c_fst z\n\ngoal (1 subgoal):\n 1. \\<exists>y. c_pair x y \\<in> A \\<Longrightarrow>\n    x \\<in> {c_fst z |z. z \\<in> A}", "from z_in_A x_z"], ["proof (chain)\npicking this:\n  z \\<in> A\n  x = c_fst z", "show \"x \\<in> {c_fst z |z. z \\<in> A}\""], ["proof (prove)\nusing this:\n  z \\<in> A\n  x = c_fst z\n\ngoal (1 subgoal):\n 1. x \\<in> {c_fst z |z. z \\<in> A}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {c_fst z |z. z \\<in> A}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x \\<in> {c_fst z |z. z \\<in> A}) = (\\<exists>y. c_pair x y \\<in> A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x.\n     (x \\<in> {c_fst z |z. z \\<in> A}) = (\\<exists>y. c_pair x y \\<in> A)\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Domain r \\<in> ce_sets", "from L1 L2"], ["proof (chain)\npicking this:\n  \\<forall>x. (x \\<in> Domain r) = (\\<exists>y. (x, y) \\<in> r)\n  \\<forall>x y. ((x, y) \\<in> r) = (c_pair x y \\<in> A)", "have L5: \"\\<forall> x. (x \\<in> Domain r) = (\\<exists> y. c_pair x y \\<in> A)\""], ["proof (prove)\nusing this:\n  \\<forall>x. (x \\<in> Domain r) = (\\<exists>y. (x, y) \\<in> r)\n  \\<forall>x y. ((x, y) \\<in> r) = (c_pair x y \\<in> A)\n\ngoal (1 subgoal):\n 1. \\<forall>x. (x \\<in> Domain r) = (\\<exists>y. c_pair x y \\<in> A)", "by auto"], ["proof (state)\nthis:\n  \\<forall>x. (x \\<in> Domain r) = (\\<exists>y. c_pair x y \\<in> A)\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Domain r \\<in> ce_sets", "from L4 L5"], ["proof (chain)\npicking this:\n  \\<forall>x.\n     (x \\<in> {c_fst z |z. z \\<in> A}) = (\\<exists>y. c_pair x y \\<in> A)\n  \\<forall>x. (x \\<in> Domain r) = (\\<exists>y. c_pair x y \\<in> A)", "have L6: \"\\<forall> x. (x \\<in> Domain r) = (x \\<in> { c_fst z |z.  z \\<in> A })\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     (x \\<in> {c_fst z |z. z \\<in> A}) = (\\<exists>y. c_pair x y \\<in> A)\n  \\<forall>x. (x \\<in> Domain r) = (\\<exists>y. c_pair x y \\<in> A)\n\ngoal (1 subgoal):\n 1. \\<forall>x. (x \\<in> Domain r) = (x \\<in> {c_fst z |z. z \\<in> A})", "by auto"], ["proof (state)\nthis:\n  \\<forall>x. (x \\<in> Domain r) = (x \\<in> {c_fst z |z. z \\<in> A})\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Domain r \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  \\<forall>x. (x \\<in> Domain r) = (x \\<in> {c_fst z |z. z \\<in> A})", "have \"Domain r = { c_fst z |z.  z \\<in> A }\""], ["proof (prove)\nusing this:\n  \\<forall>x. (x \\<in> Domain r) = (x \\<in> {c_fst z |z. z \\<in> A})\n\ngoal (1 subgoal):\n 1. Domain r = {c_fst z |z. z \\<in> A}", "by auto"], ["proof (state)\nthis:\n  Domain r = {c_fst z |z. z \\<in> A}\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Domain r \\<in> ce_sets", "with L3"], ["proof (chain)\npicking this:\n  {c_fst z |z. z \\<in> A} \\<in> ce_sets\n  Domain r = {c_fst z |z. z \\<in> A}", "show \"Domain r \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  {c_fst z |z. z \\<in> A} \\<in> ce_sets\n  Domain r = {c_fst z |z. z \\<in> A}\n\ngoal (1 subgoal):\n 1. Domain r \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  Domain r \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_27: \"r \\<in> ce_rels \\<Longrightarrow> Range r \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Range r \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Range r \\<in> ce_sets", "assume r_ce: \"r \\<in> ce_rels\""], ["proof (state)\nthis:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Range r \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  r \\<in> ce_rels", "have \"r^-1 \\<in> ce_rels\""], ["proof (prove)\nusing this:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. r\\<inverse> \\<in> ce_rels", "by (rule ce_rel_lm_25)"], ["proof (state)\nthis:\n  r\\<inverse> \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Range r \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  r\\<inverse> \\<in> ce_rels", "have \"Domain (r^-1) \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  r\\<inverse> \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. Domain (r\\<inverse>) \\<in> ce_sets", "by (rule ce_rel_lm_26)"], ["proof (state)\nthis:\n  Domain (r\\<inverse>) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Range r \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  Domain (r\\<inverse>) \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  Domain (r\\<inverse>) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. Range r \\<in> ce_sets", "by (unfold Domain_converse [symmetric])"], ["proof (state)\nthis:\n  Range r \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_28: \"r \\<in> ce_rels \\<Longrightarrow> Field r \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Field r \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Field r \\<in> ce_sets", "assume r_ce: \"r \\<in> ce_rels\""], ["proof (state)\nthis:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Field r \\<in> ce_sets", "from r_ce"], ["proof (chain)\npicking this:\n  r \\<in> ce_rels", "have L1: \"Domain r \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. Domain r \\<in> ce_sets", "by (rule ce_rel_lm_26)"], ["proof (state)\nthis:\n  Domain r \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Field r \\<in> ce_sets", "from r_ce"], ["proof (chain)\npicking this:\n  r \\<in> ce_rels", "have L2: \"Range r \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. Range r \\<in> ce_sets", "by (rule ce_rel_lm_27)"], ["proof (state)\nthis:\n  Range r \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Field r \\<in> ce_sets", "from L1 L2"], ["proof (chain)\npicking this:\n  Domain r \\<in> ce_sets\n  Range r \\<in> ce_sets", "have L3: \"Domain r \\<union> Range r \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  Domain r \\<in> ce_sets\n  Range r \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. Domain r \\<union> Range r \\<in> ce_sets", "by (rule ce_union)"], ["proof (state)\nthis:\n  Domain r \\<union> Range r \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r \\<in> ce_rels \\<Longrightarrow> Field r \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  Domain r \\<union> Range r \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  Domain r \\<union> Range r \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. Field r \\<in> ce_sets", "by (unfold Field_def)"], ["proof (state)\nthis:\n  Field r \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_29: \"\\<lbrakk> A \\<in> ce_sets; B \\<in> ce_sets \\<rbrakk> \\<Longrightarrow> A \\<times> B \\<in> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<times> B \\<in> ce_rels", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<times> B \\<in> ce_rels", "assume A_ce: \"A \\<in> ce_sets\""], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<times> B \\<in> ce_rels", "assume B_ce: \"B \\<in> ce_sets\""], ["proof (state)\nthis:\n  B \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<times> B \\<in> ce_rels", "define r_a where \"r_a = {(x,(0::nat)) | x. x \\<in> A}\""], ["proof (state)\nthis:\n  r_a = {(x, 0) |x. x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<times> B \\<in> ce_rels", "define r_b where \"r_b = {((0::nat),z) | z. z \\<in> B}\""], ["proof (state)\nthis:\n  r_b = {(0, z) |z. z \\<in> B}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<times> B \\<in> ce_rels", "have L1: \"r_a O r_b = A \\<times> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r_a O r_b = A \\<times> B", "by (unfold r_a_def, unfold r_b_def, auto)"], ["proof (state)\nthis:\n  r_a O r_b = A \\<times> B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<times> B \\<in> ce_rels", "have r_a_ce: \"r_a \\<in> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r_a \\<in> ce_rels", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r_a \\<in> ce_rels", "have loc1: \"ce_rel_to_set r_a = { c_pair x 0 | x. x \\<in> A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_rel_to_set r_a = {c_pair x 0 |x. x \\<in> A}", "by (unfold r_a_def, unfold ce_rel_to_set_def, auto)"], ["proof (state)\nthis:\n  ce_rel_to_set r_a = {c_pair x 0 |x. x \\<in> A}\n\ngoal (1 subgoal):\n 1. r_a \\<in> ce_rels", "define p where \"p x = c_pair x 0\" for x"], ["proof (state)\nthis:\n  p ?x = c_pair ?x 0\n\ngoal (1 subgoal):\n 1. r_a \\<in> ce_rels", "have p_is_pr: \"p \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> PrimRec1", "unfolding p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. c_pair x 0) \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. r_a \\<in> ce_rels", "from A_ce p_is_pr"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets\n  p \\<in> PrimRec1", "have \"{ c_pair x 0 | x. x \\<in> A} \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. {c_pair x 0 |x. x \\<in> A} \\<in> ce_sets", "unfolding p_def"], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n  (\\<lambda>x. c_pair x 0) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. {c_pair x 0 |x. x \\<in> A} \\<in> ce_sets", "by (simp add: ce_set_lm_7)"], ["proof (state)\nthis:\n  {c_pair x 0 |x. x \\<in> A} \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r_a \\<in> ce_rels", "with loc1"], ["proof (chain)\npicking this:\n  ce_rel_to_set r_a = {c_pair x 0 |x. x \\<in> A}\n  {c_pair x 0 |x. x \\<in> A} \\<in> ce_sets", "have \"ce_rel_to_set r_a \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  ce_rel_to_set r_a = {c_pair x 0 |x. x \\<in> A}\n  {c_pair x 0 |x. x \\<in> A} \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. ce_rel_to_set r_a \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  ce_rel_to_set r_a \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r_a \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  ce_rel_to_set r_a \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  ce_rel_to_set r_a \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r_a \\<in> ce_rels", "by (rule ce_rel_lm_7)"], ["proof (state)\nthis:\n  r_a \\<in> ce_rels\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r_a \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<times> B \\<in> ce_rels", "have r_b_ce: \"r_b \\<in> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r_b \\<in> ce_rels", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r_b \\<in> ce_rels", "have loc1: \"ce_rel_to_set r_b = { c_pair 0 z | z. z \\<in> B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_rel_to_set r_b = {c_pair 0 z |z. z \\<in> B}", "by (unfold r_b_def, unfold ce_rel_to_set_def, auto)"], ["proof (state)\nthis:\n  ce_rel_to_set r_b = {c_pair 0 z |z. z \\<in> B}\n\ngoal (1 subgoal):\n 1. r_b \\<in> ce_rels", "define p where \"p z = c_pair 0 z\" for z"], ["proof (state)\nthis:\n  p ?z = c_pair 0 ?z\n\ngoal (1 subgoal):\n 1. r_b \\<in> ce_rels", "have p_is_pr: \"p \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> PrimRec1", "unfolding p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_pair 0 \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. r_b \\<in> ce_rels", "from B_ce p_is_pr"], ["proof (chain)\npicking this:\n  B \\<in> ce_sets\n  p \\<in> PrimRec1", "have \"{ c_pair 0 z | z. z \\<in> B} \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  B \\<in> ce_sets\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. {c_pair 0 z |z. z \\<in> B} \\<in> ce_sets", "unfolding p_def"], ["proof (prove)\nusing this:\n  B \\<in> ce_sets\n  c_pair 0 \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. {c_pair 0 z |z. z \\<in> B} \\<in> ce_sets", "by (simp add: ce_set_lm_7)"], ["proof (state)\nthis:\n  {c_pair 0 z |z. z \\<in> B} \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r_b \\<in> ce_rels", "with loc1"], ["proof (chain)\npicking this:\n  ce_rel_to_set r_b = {c_pair 0 z |z. z \\<in> B}\n  {c_pair 0 z |z. z \\<in> B} \\<in> ce_sets", "have \"ce_rel_to_set r_b \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  ce_rel_to_set r_b = {c_pair 0 z |z. z \\<in> B}\n  {c_pair 0 z |z. z \\<in> B} \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. ce_rel_to_set r_b \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  ce_rel_to_set r_b \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r_b \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  ce_rel_to_set r_b \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  ce_rel_to_set r_b \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r_b \\<in> ce_rels", "by (rule ce_rel_lm_7)"], ["proof (state)\nthis:\n  r_b \\<in> ce_rels\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r_b \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<times> B \\<in> ce_rels", "from r_b_ce r_a_ce"], ["proof (chain)\npicking this:\n  r_b \\<in> ce_rels\n  r_a \\<in> ce_rels", "have \"r_a O r_b \\<in> ce_rels\""], ["proof (prove)\nusing this:\n  r_b \\<in> ce_rels\n  r_a \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. r_a O r_b \\<in> ce_rels", "by (rule ce_rel_lm_24)"], ["proof (state)\nthis:\n  r_a O r_b \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> ce_sets; B \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> A \\<times> B \\<in> ce_rels", "with L1"], ["proof (chain)\npicking this:\n  r_a O r_b = A \\<times> B\n  r_a O r_b \\<in> ce_rels", "show ?thesis"], ["proof (prove)\nusing this:\n  r_a O r_b = A \\<times> B\n  r_a O r_b \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. A \\<times> B \\<in> ce_rels", "by auto"], ["proof (state)\nthis:\n  A \\<times> B \\<in> ce_rels\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_30: \"{} \\<in> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<in> ce_rels", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {} \\<in> ce_rels", "have \"ce_rel_to_set {} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_rel_to_set {} = {}", "by (unfold ce_rel_to_set_def, auto)"], ["proof (state)\nthis:\n  ce_rel_to_set {} = {}\n\ngoal (1 subgoal):\n 1. {} \\<in> ce_rels", "with ce_empty"], ["proof (chain)\npicking this:\n  {} \\<in> ce_sets\n  ce_rel_to_set {} = {}", "have \"ce_rel_to_set {} \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  {} \\<in> ce_sets\n  ce_rel_to_set {} = {}\n\ngoal (1 subgoal):\n 1. ce_rel_to_set {} \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  ce_rel_to_set {} \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. {} \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  ce_rel_to_set {} \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  ce_rel_to_set {} \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. {} \\<in> ce_rels", "by (rule ce_rel_lm_7)"], ["proof (state)\nthis:\n  {} \\<in> ce_rels\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_31: \"UNIV \\<in> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV \\<in> ce_rels", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. UNIV \\<in> ce_rels", "from ce_univ ce_univ"], ["proof (chain)\npicking this:\n  UNIV \\<in> ce_sets\n  UNIV \\<in> ce_sets", "have \"UNIV \\<times> UNIV \\<in> ce_rels\""], ["proof (prove)\nusing this:\n  UNIV \\<in> ce_sets\n  UNIV \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. UNIV \\<times> UNIV \\<in> ce_rels", "by (rule ce_rel_lm_29)"], ["proof (state)\nthis:\n  UNIV \\<times> UNIV \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. UNIV \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  UNIV \\<times> UNIV \\<in> ce_rels", "show ?thesis"], ["proof (prove)\nusing this:\n  UNIV \\<times> UNIV \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. UNIV \\<in> ce_rels", "by auto"], ["proof (state)\nthis:\n  UNIV \\<in> ce_rels\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_32: \"ce_rel_to_set (r \\<union> s) = (ce_rel_to_set r) \\<union> (ce_rel_to_set s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_rel_to_set (r \\<union> s) = ce_rel_to_set r \\<union> ce_rel_to_set s", "by (unfold ce_rel_to_set_def, auto)"], ["", "lemma ce_rel_lm_33: \"\\<lbrakk> r \\<in> ce_rels; s \\<in> ce_rels \\<rbrakk> \\<Longrightarrow> r \\<union> s \\<in> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<union> s \\<in> ce_rels", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<union> s \\<in> ce_rels", "assume \"r \\<in> ce_rels\""], ["proof (state)\nthis:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<union> s \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  r \\<in> ce_rels", "have r_ce: \"ce_rel_to_set r \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. ce_rel_to_set r \\<in> ce_sets", "by (rule ce_rel_lm_6)"], ["proof (state)\nthis:\n  ce_rel_to_set r \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<union> s \\<in> ce_rels", "assume \"s \\<in> ce_rels\""], ["proof (state)\nthis:\n  s \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<union> s \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  s \\<in> ce_rels", "have s_ce: \"ce_rel_to_set s \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  s \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. ce_rel_to_set s \\<in> ce_sets", "by (rule ce_rel_lm_6)"], ["proof (state)\nthis:\n  ce_rel_to_set s \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<union> s \\<in> ce_rels", "have \"ce_rel_to_set (r \\<union> s) = (ce_rel_to_set r) \\<union> (ce_rel_to_set s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_rel_to_set (r \\<union> s) = ce_rel_to_set r \\<union> ce_rel_to_set s", "by (unfold ce_rel_to_set_def, auto)"], ["proof (state)\nthis:\n  ce_rel_to_set (r \\<union> s) = ce_rel_to_set r \\<union> ce_rel_to_set s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<union> s \\<in> ce_rels", "moreover"], ["proof (state)\nthis:\n  ce_rel_to_set (r \\<union> s) = ce_rel_to_set r \\<union> ce_rel_to_set s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<union> s \\<in> ce_rels", "from r_ce s_ce"], ["proof (chain)\npicking this:\n  ce_rel_to_set r \\<in> ce_sets\n  ce_rel_to_set s \\<in> ce_sets", "have \"(ce_rel_to_set r) \\<union> (ce_rel_to_set s) \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  ce_rel_to_set r \\<in> ce_sets\n  ce_rel_to_set s \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. ce_rel_to_set r \\<union> ce_rel_to_set s \\<in> ce_sets", "by (rule ce_union)"], ["proof (state)\nthis:\n  ce_rel_to_set r \\<union> ce_rel_to_set s \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<union> s \\<in> ce_rels", "ultimately"], ["proof (chain)\npicking this:\n  ce_rel_to_set (r \\<union> s) = ce_rel_to_set r \\<union> ce_rel_to_set s\n  ce_rel_to_set r \\<union> ce_rel_to_set s \\<in> ce_sets", "have \"ce_rel_to_set (r \\<union> s) \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  ce_rel_to_set (r \\<union> s) = ce_rel_to_set r \\<union> ce_rel_to_set s\n  ce_rel_to_set r \\<union> ce_rel_to_set s \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. ce_rel_to_set (r \\<union> s) \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  ce_rel_to_set (r \\<union> s) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<union> s \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  ce_rel_to_set (r \\<union> s) \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  ce_rel_to_set (r \\<union> s) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r \\<union> s \\<in> ce_rels", "by (rule ce_rel_lm_7)"], ["proof (state)\nthis:\n  r \\<union> s \\<in> ce_rels\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_34: \"ce_rel_to_set (r \\<inter> s) = (ce_rel_to_set r) \\<inter> (ce_rel_to_set s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_rel_to_set (r \\<inter> s) = ce_rel_to_set r \\<inter> ce_rel_to_set s", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ce_rel_to_set (r \\<inter> s)\n    \\<subseteq> ce_rel_to_set r \\<inter> ce_rel_to_set s\n 2. ce_rel_to_set r \\<inter> ce_rel_to_set s\n    \\<subseteq> ce_rel_to_set (r \\<inter> s)", "show \"ce_rel_to_set (r \\<inter> s) \\<subseteq> ce_rel_to_set r \\<inter> ce_rel_to_set s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_rel_to_set (r \\<inter> s)\n    \\<subseteq> ce_rel_to_set r \\<inter> ce_rel_to_set s", "by (unfold ce_rel_to_set_def, auto)"], ["proof (state)\nthis:\n  ce_rel_to_set (r \\<inter> s)\n  \\<subseteq> ce_rel_to_set r \\<inter> ce_rel_to_set s\n\ngoal (1 subgoal):\n 1. ce_rel_to_set r \\<inter> ce_rel_to_set s\n    \\<subseteq> ce_rel_to_set (r \\<inter> s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ce_rel_to_set r \\<inter> ce_rel_to_set s\n    \\<subseteq> ce_rel_to_set (r \\<inter> s)", "show \"ce_rel_to_set r \\<inter> ce_rel_to_set s \\<subseteq> ce_rel_to_set (r \\<inter> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_rel_to_set r \\<inter> ce_rel_to_set s\n    \\<subseteq> ce_rel_to_set (r \\<inter> s)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s \\<Longrightarrow>\n       x \\<in> ce_rel_to_set (r \\<inter> s)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s \\<Longrightarrow>\n       x \\<in> ce_rel_to_set (r \\<inter> s)", "assume A: \"x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s\""], ["proof (state)\nthis:\n  x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s \\<Longrightarrow>\n       x \\<in> ce_rel_to_set (r \\<inter> s)", "from A"], ["proof (chain)\npicking this:\n  x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s", "have L1: \"x \\<in> ce_rel_to_set r\""], ["proof (prove)\nusing this:\n  x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s\n\ngoal (1 subgoal):\n 1. x \\<in> ce_rel_to_set r", "by auto"], ["proof (state)\nthis:\n  x \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s \\<Longrightarrow>\n       x \\<in> ce_rel_to_set (r \\<inter> s)", "from A"], ["proof (chain)\npicking this:\n  x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s", "have L2: \"x \\<in> ce_rel_to_set s\""], ["proof (prove)\nusing this:\n  x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s\n\ngoal (1 subgoal):\n 1. x \\<in> ce_rel_to_set s", "by auto"], ["proof (state)\nthis:\n  x \\<in> ce_rel_to_set s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s \\<Longrightarrow>\n       x \\<in> ce_rel_to_set (r \\<inter> s)", "from L1"], ["proof (chain)\npicking this:\n  x \\<in> ce_rel_to_set r", "obtain u v where L3: \"(u,v) \\<in> r\" and L4: \"x = c_pair u v\""], ["proof (prove)\nusing this:\n  x \\<in> ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>(u, v) \\<in> r; x = c_pair u v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding ce_rel_to_set_def"], ["proof (prove)\nusing this:\n  x \\<in> {c_pair x y |x y. (x, y) \\<in> r}\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>(u, v) \\<in> r; x = c_pair u v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (u, v) \\<in> r\n  x = c_pair u v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s \\<Longrightarrow>\n       x \\<in> ce_rel_to_set (r \\<inter> s)", "from L2"], ["proof (chain)\npicking this:\n  x \\<in> ce_rel_to_set s", "obtain u1 v1 where L5: \"(u1,v1) \\<in> s\" and L6: \"x = c_pair u1 v1\""], ["proof (prove)\nusing this:\n  x \\<in> ce_rel_to_set s\n\ngoal (1 subgoal):\n 1. (\\<And>u1 v1.\n        \\<lbrakk>(u1, v1) \\<in> s; x = c_pair u1 v1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding ce_rel_to_set_def"], ["proof (prove)\nusing this:\n  x \\<in> {c_pair x y |x y. (x, y) \\<in> s}\n\ngoal (1 subgoal):\n 1. (\\<And>u1 v1.\n        \\<lbrakk>(u1, v1) \\<in> s; x = c_pair u1 v1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (u1, v1) \\<in> s\n  x = c_pair u1 v1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s \\<Longrightarrow>\n       x \\<in> ce_rel_to_set (r \\<inter> s)", "from L4 L6"], ["proof (chain)\npicking this:\n  x = c_pair u v\n  x = c_pair u1 v1", "have L7: \"c_pair u1 v1 = c_pair u v\""], ["proof (prove)\nusing this:\n  x = c_pair u v\n  x = c_pair u1 v1\n\ngoal (1 subgoal):\n 1. c_pair u1 v1 = c_pair u v", "by auto"], ["proof (state)\nthis:\n  c_pair u1 v1 = c_pair u v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s \\<Longrightarrow>\n       x \\<in> ce_rel_to_set (r \\<inter> s)", "then"], ["proof (chain)\npicking this:\n  c_pair u1 v1 = c_pair u v", "have \"u1=u\""], ["proof (prove)\nusing this:\n  c_pair u1 v1 = c_pair u v\n\ngoal (1 subgoal):\n 1. u1 = u", "by (rule c_pair_inj1)"], ["proof (state)\nthis:\n  u1 = u\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s \\<Longrightarrow>\n       x \\<in> ce_rel_to_set (r \\<inter> s)", "moreover"], ["proof (state)\nthis:\n  u1 = u\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s \\<Longrightarrow>\n       x \\<in> ce_rel_to_set (r \\<inter> s)", "from L7"], ["proof (chain)\npicking this:\n  c_pair u1 v1 = c_pair u v", "have \"v1=v\""], ["proof (prove)\nusing this:\n  c_pair u1 v1 = c_pair u v\n\ngoal (1 subgoal):\n 1. v1 = v", "by (rule c_pair_inj2)"], ["proof (state)\nthis:\n  v1 = v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s \\<Longrightarrow>\n       x \\<in> ce_rel_to_set (r \\<inter> s)", "ultimately"], ["proof (chain)\npicking this:\n  u1 = u\n  v1 = v", "have \"(u,v)=(u1,v1)\""], ["proof (prove)\nusing this:\n  u1 = u\n  v1 = v\n\ngoal (1 subgoal):\n 1. (u, v) = (u1, v1)", "by auto"], ["proof (state)\nthis:\n  (u, v) = (u1, v1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s \\<Longrightarrow>\n       x \\<in> ce_rel_to_set (r \\<inter> s)", "with L3 L5"], ["proof (chain)\npicking this:\n  (u, v) \\<in> r\n  (u1, v1) \\<in> s\n  (u, v) = (u1, v1)", "have \"(u,v) \\<in> r \\<inter> s\""], ["proof (prove)\nusing this:\n  (u, v) \\<in> r\n  (u1, v1) \\<in> s\n  (u, v) = (u1, v1)\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> r \\<inter> s", "by auto"], ["proof (state)\nthis:\n  (u, v) \\<in> r \\<inter> s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ce_rel_to_set r \\<inter> ce_rel_to_set s \\<Longrightarrow>\n       x \\<in> ce_rel_to_set (r \\<inter> s)", "with L4"], ["proof (chain)\npicking this:\n  x = c_pair u v\n  (u, v) \\<in> r \\<inter> s", "show \"x \\<in> ce_rel_to_set (r \\<inter> s)\""], ["proof (prove)\nusing this:\n  x = c_pair u v\n  (u, v) \\<in> r \\<inter> s\n\ngoal (1 subgoal):\n 1. x \\<in> ce_rel_to_set (r \\<inter> s)", "by (unfold ce_rel_to_set_def, auto)"], ["proof (state)\nthis:\n  x \\<in> ce_rel_to_set (r \\<inter> s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ce_rel_to_set r \\<inter> ce_rel_to_set s\n  \\<subseteq> ce_rel_to_set (r \\<inter> s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_35: \"\\<lbrakk> r \\<in> ce_rels; s \\<in> ce_rels \\<rbrakk> \\<Longrightarrow> r \\<inter> s \\<in> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<inter> s \\<in> ce_rels", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<inter> s \\<in> ce_rels", "assume \"r \\<in> ce_rels\""], ["proof (state)\nthis:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<inter> s \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  r \\<in> ce_rels", "have r_ce: \"ce_rel_to_set r \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. ce_rel_to_set r \\<in> ce_sets", "by (rule ce_rel_lm_6)"], ["proof (state)\nthis:\n  ce_rel_to_set r \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<inter> s \\<in> ce_rels", "assume \"s \\<in> ce_rels\""], ["proof (state)\nthis:\n  s \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<inter> s \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  s \\<in> ce_rels", "have s_ce: \"ce_rel_to_set s \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  s \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. ce_rel_to_set s \\<in> ce_sets", "by (rule ce_rel_lm_6)"], ["proof (state)\nthis:\n  ce_rel_to_set s \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<inter> s \\<in> ce_rels", "have \"ce_rel_to_set (r \\<inter> s) = (ce_rel_to_set r) \\<inter> (ce_rel_to_set s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_rel_to_set (r \\<inter> s) = ce_rel_to_set r \\<inter> ce_rel_to_set s", "by (rule ce_rel_lm_34)"], ["proof (state)\nthis:\n  ce_rel_to_set (r \\<inter> s) = ce_rel_to_set r \\<inter> ce_rel_to_set s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<inter> s \\<in> ce_rels", "moreover"], ["proof (state)\nthis:\n  ce_rel_to_set (r \\<inter> s) = ce_rel_to_set r \\<inter> ce_rel_to_set s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<inter> s \\<in> ce_rels", "from r_ce s_ce"], ["proof (chain)\npicking this:\n  ce_rel_to_set r \\<in> ce_sets\n  ce_rel_to_set s \\<in> ce_sets", "have \"(ce_rel_to_set r) \\<inter> (ce_rel_to_set s) \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  ce_rel_to_set r \\<in> ce_sets\n  ce_rel_to_set s \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. ce_rel_to_set r \\<inter> ce_rel_to_set s \\<in> ce_sets", "by (rule ce_intersect)"], ["proof (state)\nthis:\n  ce_rel_to_set r \\<inter> ce_rel_to_set s \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<inter> s \\<in> ce_rels", "ultimately"], ["proof (chain)\npicking this:\n  ce_rel_to_set (r \\<inter> s) = ce_rel_to_set r \\<inter> ce_rel_to_set s\n  ce_rel_to_set r \\<inter> ce_rel_to_set s \\<in> ce_sets", "have \"ce_rel_to_set (r \\<inter> s) \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  ce_rel_to_set (r \\<inter> s) = ce_rel_to_set r \\<inter> ce_rel_to_set s\n  ce_rel_to_set r \\<inter> ce_rel_to_set s \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. ce_rel_to_set (r \\<inter> s) \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  ce_rel_to_set (r \\<inter> s) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; s \\<in> ce_rels\\<rbrakk>\n    \\<Longrightarrow> r \\<inter> s \\<in> ce_rels", "then"], ["proof (chain)\npicking this:\n  ce_rel_to_set (r \\<inter> s) \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  ce_rel_to_set (r \\<inter> s) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r \\<inter> s \\<in> ce_rels", "by (rule ce_rel_lm_7)"], ["proof (state)\nthis:\n  r \\<inter> s \\<in> ce_rels\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_36: \"ce_set_to_rel (A \\<union> B) = (ce_set_to_rel A) \\<union> (ce_set_to_rel B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_set_to_rel (A \\<union> B) = ce_set_to_rel A \\<union> ce_set_to_rel B", "by (unfold ce_set_to_rel_def, auto)"], ["", "lemma ce_rel_lm_37: \"ce_set_to_rel (A \\<inter> B) = (ce_set_to_rel A) \\<inter> (ce_set_to_rel B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ce_set_to_rel (A \\<inter> B) = ce_set_to_rel A \\<inter> ce_set_to_rel B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ce_set_to_rel (A \\<inter> B) = ce_set_to_rel A \\<inter> ce_set_to_rel B", "define f where \"f x = (c_fst x, c_snd x)\" for x"], ["proof (state)\nthis:\n  f ?x = (c_fst ?x, c_snd ?x)\n\ngoal (1 subgoal):\n 1. ce_set_to_rel (A \\<inter> B) = ce_set_to_rel A \\<inter> ce_set_to_rel B", "have f_inj: \"inj f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj f", "proof (unfold f_def, rule inj_on_inverseI [where ?g=\"\\<lambda> (u,v). c_pair u v\"])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV \\<Longrightarrow>\n       (case (c_fst x, c_snd x) of (u, v) \\<Rightarrow> c_pair u v) = x", "fix x :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV \\<Longrightarrow>\n       (case (c_fst x, c_snd x) of (u, v) \\<Rightarrow> c_pair u v) = x", "assume \"x \\<in> UNIV\""], ["proof (state)\nthis:\n  x \\<in> UNIV\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV \\<Longrightarrow>\n       (case (c_fst x, c_snd x) of (u, v) \\<Rightarrow> c_pair u v) = x", "show \"case_prod c_pair (c_fst x, c_snd x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case (c_fst x, c_snd x) of (x, xa) \\<Rightarrow> c_pair x xa) = x", "by simp"], ["proof (state)\nthis:\n  (case (c_fst x, c_snd x) of (x, xa) \\<Rightarrow> c_pair x xa) = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj f\n\ngoal (1 subgoal):\n 1. ce_set_to_rel (A \\<inter> B) = ce_set_to_rel A \\<inter> ce_set_to_rel B", "from f_inj"], ["proof (chain)\npicking this:\n  inj f", "have \"f ` (A \\<inter> B) = f ` A \\<inter> f ` B\""], ["proof (prove)\nusing this:\n  inj f\n\ngoal (1 subgoal):\n 1. f ` (A \\<inter> B) = f ` A \\<inter> f ` B", "by (rule image_Int)"], ["proof (state)\nthis:\n  f ` (A \\<inter> B) = f ` A \\<inter> f ` B\n\ngoal (1 subgoal):\n 1. ce_set_to_rel (A \\<inter> B) = ce_set_to_rel A \\<inter> ce_set_to_rel B", "then"], ["proof (chain)\npicking this:\n  f ` (A \\<inter> B) = f ` A \\<inter> f ` B", "show ?thesis"], ["proof (prove)\nusing this:\n  f ` (A \\<inter> B) = f ` A \\<inter> f ` B\n\ngoal (1 subgoal):\n 1. ce_set_to_rel (A \\<inter> B) = ce_set_to_rel A \\<inter> ce_set_to_rel B", "by (unfold f_def, unfold ce_set_to_rel_def, auto)"], ["proof (state)\nthis:\n  ce_set_to_rel (A \\<inter> B) = ce_set_to_rel A \\<inter> ce_set_to_rel B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ce_rel_lm_38: \"\\<lbrakk> r \\<in> ce_rels; A \\<in> ce_sets \\<rbrakk> \\<Longrightarrow> r``A \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; A \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> r `` A \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; A \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> r `` A \\<in> ce_sets", "assume r_ce: \"r \\<in> ce_rels\""], ["proof (state)\nthis:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; A \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> r `` A \\<in> ce_sets", "assume A_ce: \"A \\<in> ce_sets\""], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; A \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> r `` A \\<in> ce_sets", "have L1: \"r``A = Range (r \\<inter> A \\<times> UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r `` A = Range (r \\<inter> A \\<times> UNIV)", "by blast"], ["proof (state)\nthis:\n  r `` A = Range (r \\<inter> A \\<times> UNIV)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; A \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> r `` A \\<in> ce_sets", "have L2: \"Range (r \\<inter> A \\<times> UNIV) \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Range (r \\<inter> A \\<times> UNIV) \\<in> ce_sets", "proof (rule ce_rel_lm_27)"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<inter> A \\<times> UNIV \\<in> ce_rels", "show \"r \\<inter> A \\<times> UNIV \\<in> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<inter> A \\<times> UNIV \\<in> ce_rels", "proof (rule ce_rel_lm_35)"], ["proof (state)\ngoal (2 subgoals):\n 1. r \\<in> ce_rels\n 2. A \\<times> UNIV \\<in> ce_rels", "show \"r \\<in> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels", "by (rule r_ce)"], ["proof (state)\nthis:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. A \\<times> UNIV \\<in> ce_rels", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<times> UNIV \\<in> ce_rels", "show \"A \\<times> UNIV \\<in> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<times> UNIV \\<in> ce_rels", "proof (rule ce_rel_lm_29)"], ["proof (state)\ngoal (2 subgoals):\n 1. A \\<in> ce_sets\n 2. UNIV \\<in> ce_sets", "show \"A \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> ce_sets", "by (rule A_ce)"], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. UNIV \\<in> ce_sets", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. UNIV \\<in> ce_sets", "show \"UNIV \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV \\<in> ce_sets", "by (rule ce_univ)"], ["proof (state)\nthis:\n  UNIV \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A \\<times> UNIV \\<in> ce_rels\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r \\<inter> A \\<times> UNIV \\<in> ce_rels\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Range (r \\<inter> A \\<times> UNIV) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> ce_rels; A \\<in> ce_sets\\<rbrakk>\n    \\<Longrightarrow> r `` A \\<in> ce_sets", "from L1 L2"], ["proof (chain)\npicking this:\n  r `` A = Range (r \\<inter> A \\<times> UNIV)\n  Range (r \\<inter> A \\<times> UNIV) \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  r `` A = Range (r \\<inter> A \\<times> UNIV)\n  Range (r \\<inter> A \\<times> UNIV) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. r `` A \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  r `` A \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Total computable functions\\<close>"], ["", "definition\n  graph :: \"(nat \\<Rightarrow> nat) \\<Rightarrow> (nat \\<times> nat) set\" where\n  \"graph = (\\<lambda> f. { (x, f x) | x. x \\<in> UNIV})\""], ["", "lemma graph_lm_1: \"(x,y) \\<in> graph f \\<Longrightarrow> y = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> graph f \\<Longrightarrow> y = f x", "by (unfold graph_def, auto)"], ["", "lemma graph_lm_2: \"y = f x \\<Longrightarrow> (x,y) \\<in> graph f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = f x \\<Longrightarrow> (x, y) \\<in> graph f", "by (unfold graph_def, auto)"], ["", "lemma graph_lm_3: \"((x,y) \\<in> graph f) = (y = f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> graph f) = (y = f x)", "by (unfold graph_def, auto)"], ["", "lemma graph_lm_4: \"graph (f o g) = (graph g) O (graph f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. graph (f \\<circ> g) = graph g O graph f", "by (unfold graph_def, auto)"], ["", "definition\n  c_graph :: \"(nat \\<Rightarrow> nat) \\<Rightarrow> nat set\" where\n  \"c_graph = (\\<lambda> f. { c_pair x (f x) | x. x \\<in> UNIV})\""], ["", "lemma c_graph_lm_1: \"c_pair x y \\<in> c_graph f \\<Longrightarrow> y = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_pair x y \\<in> c_graph f \\<Longrightarrow> y = f x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_pair x y \\<in> c_graph f \\<Longrightarrow> y = f x", "assume A: \"c_pair x y \\<in> c_graph f\""], ["proof (state)\nthis:\n  c_pair x y \\<in> c_graph f\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> c_graph f \\<Longrightarrow> y = f x", "have S1: \"c_graph f = {c_pair x (f x) | x. x \\<in> UNIV}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_graph f = {c_pair x (f x) |x. x \\<in> UNIV}", "by (simp add: c_graph_def)"], ["proof (state)\nthis:\n  c_graph f = {c_pair x (f x) |x. x \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> c_graph f \\<Longrightarrow> y = f x", "from A S1"], ["proof (chain)\npicking this:\n  c_pair x y \\<in> c_graph f\n  c_graph f = {c_pair x (f x) |x. x \\<in> UNIV}", "obtain z where S2: \"c_pair x y = c_pair z (f z)\""], ["proof (prove)\nusing this:\n  c_pair x y \\<in> c_graph f\n  c_graph f = {c_pair x (f x) |x. x \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        c_pair x y = c_pair z (f z) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c_pair x y = c_pair z (f z)\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> c_graph f \\<Longrightarrow> y = f x", "then"], ["proof (chain)\npicking this:\n  c_pair x y = c_pair z (f z)", "have \"x = z\""], ["proof (prove)\nusing this:\n  c_pair x y = c_pair z (f z)\n\ngoal (1 subgoal):\n 1. x = z", "by (rule c_pair_inj1)"], ["proof (state)\nthis:\n  x = z\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> c_graph f \\<Longrightarrow> y = f x", "moreover"], ["proof (state)\nthis:\n  x = z\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> c_graph f \\<Longrightarrow> y = f x", "from S2"], ["proof (chain)\npicking this:\n  c_pair x y = c_pair z (f z)", "have \"y = f z\""], ["proof (prove)\nusing this:\n  c_pair x y = c_pair z (f z)\n\ngoal (1 subgoal):\n 1. y = f z", "by (rule c_pair_inj2)"], ["proof (state)\nthis:\n  y = f z\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> c_graph f \\<Longrightarrow> y = f x", "ultimately"], ["proof (chain)\npicking this:\n  x = z\n  y = f z", "show ?thesis"], ["proof (prove)\nusing this:\n  x = z\n  y = f z\n\ngoal (1 subgoal):\n 1. y = f x", "by auto"], ["proof (state)\nthis:\n  y = f x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma c_graph_lm_2: \"y = f x \\<Longrightarrow> c_pair x y \\<in> c_graph f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = f x \\<Longrightarrow> c_pair x y \\<in> c_graph f", "by (unfold c_graph_def, auto)"], ["", "lemma c_graph_lm_3: \"(c_pair x y \\<in> c_graph f) = (y = f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c_pair x y \\<in> c_graph f) = (y = f x)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. c_pair x y \\<in> c_graph f \\<Longrightarrow> y = f x\n 2. y = f x \\<Longrightarrow> c_pair x y \\<in> c_graph f", "assume \"c_pair x y \\<in> c_graph f\""], ["proof (state)\nthis:\n  c_pair x y \\<in> c_graph f\n\ngoal (2 subgoals):\n 1. c_pair x y \\<in> c_graph f \\<Longrightarrow> y = f x\n 2. y = f x \\<Longrightarrow> c_pair x y \\<in> c_graph f", "then"], ["proof (chain)\npicking this:\n  c_pair x y \\<in> c_graph f", "show \"y = f x\""], ["proof (prove)\nusing this:\n  c_pair x y \\<in> c_graph f\n\ngoal (1 subgoal):\n 1. y = f x", "by (rule c_graph_lm_1)"], ["proof (state)\nthis:\n  y = f x\n\ngoal (1 subgoal):\n 1. y = f x \\<Longrightarrow> c_pair x y \\<in> c_graph f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y = f x \\<Longrightarrow> c_pair x y \\<in> c_graph f", "assume \"y = f x\""], ["proof (state)\nthis:\n  y = f x\n\ngoal (1 subgoal):\n 1. y = f x \\<Longrightarrow> c_pair x y \\<in> c_graph f", "then"], ["proof (chain)\npicking this:\n  y = f x", "show \"c_pair x y \\<in> c_graph f\""], ["proof (prove)\nusing this:\n  y = f x\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> c_graph f", "by (rule c_graph_lm_2)"], ["proof (state)\nthis:\n  c_pair x y \\<in> c_graph f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma c_graph_lm_4: \"c_graph f = ce_rel_to_set (graph f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_graph f = ce_rel_to_set (graph f)", "by (unfold c_graph_def ce_rel_to_set_def graph_def, auto)"], ["", "lemma c_graph_lm_5: \"graph f = ce_set_to_rel (c_graph f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. graph f = ce_set_to_rel (c_graph f)", "by (simp add: c_graph_lm_4)"], ["", "definition\n  total_recursive :: \"(nat \\<Rightarrow> nat) \\<Rightarrow> bool\" where\n  \"total_recursive = (\\<lambda> f. graph f \\<in> ce_rels)\""], ["", "lemma total_recursive_def1: \"total_recursive = (\\<lambda> f. c_graph f \\<in> ce_sets)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. total_recursive = (\\<lambda>f. c_graph f \\<in> ce_sets)", "proof (rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f. total_recursive f = (c_graph f \\<in> ce_sets)", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f. total_recursive f = (c_graph f \\<in> ce_sets)", "show \" total_recursive f = (c_graph f \\<in> ce_sets)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. total_recursive f = (c_graph f \\<in> ce_sets)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. total_recursive f \\<Longrightarrow> c_graph f \\<in> ce_sets\n 2. c_graph f \\<in> ce_sets \\<Longrightarrow> total_recursive f", "assume A: \"total_recursive f\""], ["proof (state)\nthis:\n  total_recursive f\n\ngoal (2 subgoals):\n 1. total_recursive f \\<Longrightarrow> c_graph f \\<in> ce_sets\n 2. c_graph f \\<in> ce_sets \\<Longrightarrow> total_recursive f", "then"], ["proof (chain)\npicking this:\n  total_recursive f", "have \"graph f \\<in> ce_rels\""], ["proof (prove)\nusing this:\n  total_recursive f\n\ngoal (1 subgoal):\n 1. graph f \\<in> ce_rels", "by (unfold total_recursive_def)"], ["proof (state)\nthis:\n  graph f \\<in> ce_rels\n\ngoal (2 subgoals):\n 1. total_recursive f \\<Longrightarrow> c_graph f \\<in> ce_sets\n 2. c_graph f \\<in> ce_sets \\<Longrightarrow> total_recursive f", "then"], ["proof (chain)\npicking this:\n  graph f \\<in> ce_rels", "have \"ce_rel_to_set (graph f) \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  graph f \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. ce_rel_to_set (graph f) \\<in> ce_sets", "by (rule ce_rel_lm_6)"], ["proof (state)\nthis:\n  ce_rel_to_set (graph f) \\<in> ce_sets\n\ngoal (2 subgoals):\n 1. total_recursive f \\<Longrightarrow> c_graph f \\<in> ce_sets\n 2. c_graph f \\<in> ce_sets \\<Longrightarrow> total_recursive f", "then"], ["proof (chain)\npicking this:\n  ce_rel_to_set (graph f) \\<in> ce_sets", "show \"c_graph f \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  ce_rel_to_set (graph f) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. c_graph f \\<in> ce_sets", "by (simp add: c_graph_lm_4)"], ["proof (state)\nthis:\n  c_graph f \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. c_graph f \\<in> ce_sets \\<Longrightarrow> total_recursive f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c_graph f \\<in> ce_sets \\<Longrightarrow> total_recursive f", "assume \"c_graph f \\<in> ce_sets\""], ["proof (state)\nthis:\n  c_graph f \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. c_graph f \\<in> ce_sets \\<Longrightarrow> total_recursive f", "then"], ["proof (chain)\npicking this:\n  c_graph f \\<in> ce_sets", "have \"ce_rel_to_set (graph f) \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  c_graph f \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. ce_rel_to_set (graph f) \\<in> ce_sets", "by (simp add: c_graph_lm_4)"], ["proof (state)\nthis:\n  ce_rel_to_set (graph f) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. c_graph f \\<in> ce_sets \\<Longrightarrow> total_recursive f", "then"], ["proof (chain)\npicking this:\n  ce_rel_to_set (graph f) \\<in> ce_sets", "have \"graph f \\<in> ce_rels\""], ["proof (prove)\nusing this:\n  ce_rel_to_set (graph f) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. graph f \\<in> ce_rels", "by (rule ce_rel_lm_7)"], ["proof (state)\nthis:\n  graph f \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. c_graph f \\<in> ce_sets \\<Longrightarrow> total_recursive f", "then"], ["proof (chain)\npicking this:\n  graph f \\<in> ce_rels", "show \"total_recursive f\""], ["proof (prove)\nusing this:\n  graph f \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. total_recursive f", "by (unfold total_recursive_def)"], ["proof (state)\nthis:\n  total_recursive f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  total_recursive f = (c_graph f \\<in> ce_sets)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem pr_is_total_rec: \"f \\<in> PrimRec1 \\<Longrightarrow> total_recursive f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> total_recursive f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> total_recursive f", "assume A: \"f \\<in> PrimRec1\""], ["proof (state)\nthis:\n  f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> total_recursive f", "define p where \"p x = c_pair x (f x)\" for x"], ["proof (state)\nthis:\n  p ?x = c_pair ?x (f ?x)\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> total_recursive f", "from A"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec1", "have p_is_pr: \"p \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. p \\<in> PrimRec1", "unfolding p_def"], ["proof (prove)\nusing this:\n  f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. c_pair x (f x)) \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> total_recursive f", "let ?U = \"{ p x | x. x \\<in> UNIV }\""], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> total_recursive f", "from ce_univ p_is_pr"], ["proof (chain)\npicking this:\n  UNIV \\<in> ce_sets\n  p \\<in> PrimRec1", "have U_ce: \"?U \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  UNIV \\<in> ce_sets\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. {p x |x. x \\<in> UNIV} \\<in> ce_sets", "by (rule ce_set_lm_7)"], ["proof (state)\nthis:\n  {p x |x. x \\<in> UNIV} \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> total_recursive f", "have U_1: \"?U = { c_pair x (f x) | x. x \\<in> UNIV}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p x |x. x \\<in> UNIV} = {c_pair x (f x) |x. x \\<in> UNIV}", "by (simp add: p_def)"], ["proof (state)\nthis:\n  {p x |x. x \\<in> UNIV} = {c_pair x (f x) |x. x \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> total_recursive f", "with U_ce"], ["proof (chain)\npicking this:\n  {p x |x. x \\<in> UNIV} \\<in> ce_sets\n  {p x |x. x \\<in> UNIV} = {c_pair x (f x) |x. x \\<in> UNIV}", "have S1: \"{ c_pair x (f x) | x. x \\<in> UNIV} \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  {p x |x. x \\<in> UNIV} \\<in> ce_sets\n  {p x |x. x \\<in> UNIV} = {c_pair x (f x) |x. x \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. {c_pair x (f x) |x. x \\<in> UNIV} \\<in> ce_sets", "by simp"], ["proof (state)\nthis:\n  {c_pair x (f x) |x. x \\<in> UNIV} \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> total_recursive f", "with c_graph_def"], ["proof (chain)\npicking this:\n  c_graph = (\\<lambda>f. {c_pair x (f x) |x. x \\<in> UNIV})\n  {c_pair x (f x) |x. x \\<in> UNIV} \\<in> ce_sets", "have c_graph_f_is_ce: \"c_graph f \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  c_graph = (\\<lambda>f. {c_pair x (f x) |x. x \\<in> UNIV})\n  {c_pair x (f x) |x. x \\<in> UNIV} \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. c_graph f \\<in> ce_sets", "by (unfold c_graph_def, auto)"], ["proof (state)\nthis:\n  c_graph f \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> total_recursive f", "then"], ["proof (chain)\npicking this:\n  c_graph f \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  c_graph f \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. total_recursive f", "by (unfold total_recursive_def1, auto)"], ["proof (state)\nthis:\n  total_recursive f\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem comp_tot_rec: \"\\<lbrakk> total_recursive f; total_recursive g \\<rbrakk> \\<Longrightarrow> total_recursive (f o g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>total_recursive f; total_recursive g\\<rbrakk>\n    \\<Longrightarrow> total_recursive (f \\<circ> g)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>total_recursive f; total_recursive g\\<rbrakk>\n    \\<Longrightarrow> total_recursive (f \\<circ> g)", "assume \"total_recursive f\""], ["proof (state)\nthis:\n  total_recursive f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>total_recursive f; total_recursive g\\<rbrakk>\n    \\<Longrightarrow> total_recursive (f \\<circ> g)", "then"], ["proof (chain)\npicking this:\n  total_recursive f", "have f_ce: \"graph f \\<in> ce_rels\""], ["proof (prove)\nusing this:\n  total_recursive f\n\ngoal (1 subgoal):\n 1. graph f \\<in> ce_rels", "by (unfold total_recursive_def)"], ["proof (state)\nthis:\n  graph f \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<lbrakk>total_recursive f; total_recursive g\\<rbrakk>\n    \\<Longrightarrow> total_recursive (f \\<circ> g)", "assume \"total_recursive g\""], ["proof (state)\nthis:\n  total_recursive g\n\ngoal (1 subgoal):\n 1. \\<lbrakk>total_recursive f; total_recursive g\\<rbrakk>\n    \\<Longrightarrow> total_recursive (f \\<circ> g)", "then"], ["proof (chain)\npicking this:\n  total_recursive g", "have g_ce: \"graph g \\<in> ce_rels\""], ["proof (prove)\nusing this:\n  total_recursive g\n\ngoal (1 subgoal):\n 1. graph g \\<in> ce_rels", "by (unfold total_recursive_def)"], ["proof (state)\nthis:\n  graph g \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<lbrakk>total_recursive f; total_recursive g\\<rbrakk>\n    \\<Longrightarrow> total_recursive (f \\<circ> g)", "from f_ce g_ce"], ["proof (chain)\npicking this:\n  graph f \\<in> ce_rels\n  graph g \\<in> ce_rels", "have \"graph g O graph f \\<in> ce_rels\""], ["proof (prove)\nusing this:\n  graph f \\<in> ce_rels\n  graph g \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. graph g O graph f \\<in> ce_rels", "by (rule ce_rel_lm_24)"], ["proof (state)\nthis:\n  graph g O graph f \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<lbrakk>total_recursive f; total_recursive g\\<rbrakk>\n    \\<Longrightarrow> total_recursive (f \\<circ> g)", "then"], ["proof (chain)\npicking this:\n  graph g O graph f \\<in> ce_rels", "have \"graph (f o g) \\<in> ce_rels\""], ["proof (prove)\nusing this:\n  graph g O graph f \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. graph (f \\<circ> g) \\<in> ce_rels", "by (simp add: graph_lm_4)"], ["proof (state)\nthis:\n  graph (f \\<circ> g) \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<lbrakk>total_recursive f; total_recursive g\\<rbrakk>\n    \\<Longrightarrow> total_recursive (f \\<circ> g)", "then"], ["proof (chain)\npicking this:\n  graph (f \\<circ> g) \\<in> ce_rels", "show ?thesis"], ["proof (prove)\nusing this:\n  graph (f \\<circ> g) \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. total_recursive (f \\<circ> g)", "by (unfold total_recursive_def)"], ["proof (state)\nthis:\n  total_recursive (f \\<circ> g)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma univ_for_pr_tot_rec_lm: \"c_graph univ_for_pr \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_graph univ_for_pr \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_graph univ_for_pr \\<in> ce_sets", "define A where \"A = c_graph univ_for_pr\""], ["proof (state)\nthis:\n  A = c_graph univ_for_pr\n\ngoal (1 subgoal):\n 1. c_graph univ_for_pr \\<in> ce_sets", "from A_def"], ["proof (chain)\npicking this:\n  A = c_graph univ_for_pr", "have S1: \"A = { c_pair x (univ_for_pr x) | x. x \\<in> UNIV }\""], ["proof (prove)\nusing this:\n  A = c_graph univ_for_pr\n\ngoal (1 subgoal):\n 1. A = {c_pair x (univ_for_pr x) |x. x \\<in> UNIV}", "by (simp add: c_graph_def)"], ["proof (state)\nthis:\n  A = {c_pair x (univ_for_pr x) |x. x \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. c_graph univ_for_pr \\<in> ce_sets", "from S1"], ["proof (chain)\npicking this:\n  A = {c_pair x (univ_for_pr x) |x. x \\<in> UNIV}", "have S2: \"A = { z . \\<exists> x. z = c_pair x (univ_for_pr x) }\""], ["proof (prove)\nusing this:\n  A = {c_pair x (univ_for_pr x) |x. x \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. A = {z. \\<exists>x. z = c_pair x (univ_for_pr x)}", "by auto"], ["proof (state)\nthis:\n  A = {z. \\<exists>x. z = c_pair x (univ_for_pr x)}\n\ngoal (1 subgoal):\n 1. c_graph univ_for_pr \\<in> ce_sets", "have S3: \"\\<And> z. (\\<exists> x. (z = c_pair x (univ_for_pr x))) = (univ_for_pr (c_fst z) = c_snd z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       (\\<exists>x. z = c_pair x (univ_for_pr x)) =\n       (univ_for_pr (c_fst z) = c_snd z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       (\\<exists>x. z = c_pair x (univ_for_pr x)) =\n       (univ_for_pr (c_fst z) = c_snd z)", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       (\\<exists>x. z = c_pair x (univ_for_pr x)) =\n       (univ_for_pr (c_fst z) = c_snd z)", "show \"(\\<exists> x. (z = c_pair x (univ_for_pr x))) = (univ_for_pr (c_fst z) = c_snd z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x. z = c_pair x (univ_for_pr x)) =\n    (univ_for_pr (c_fst z) = c_snd z)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>x. z = c_pair x (univ_for_pr x) \\<Longrightarrow>\n    univ_for_pr (c_fst z) = c_snd z\n 2. univ_for_pr (c_fst z) = c_snd z \\<Longrightarrow>\n    \\<exists>x. z = c_pair x (univ_for_pr x)", "assume A: \"\\<exists>x. z = c_pair x (univ_for_pr x)\""], ["proof (state)\nthis:\n  \\<exists>x. z = c_pair x (univ_for_pr x)\n\ngoal (2 subgoals):\n 1. \\<exists>x. z = c_pair x (univ_for_pr x) \\<Longrightarrow>\n    univ_for_pr (c_fst z) = c_snd z\n 2. univ_for_pr (c_fst z) = c_snd z \\<Longrightarrow>\n    \\<exists>x. z = c_pair x (univ_for_pr x)", "then"], ["proof (chain)\npicking this:\n  \\<exists>x. z = c_pair x (univ_for_pr x)", "obtain x where S3_1: \"z = c_pair x (univ_for_pr x)\""], ["proof (prove)\nusing this:\n  \\<exists>x. z = c_pair x (univ_for_pr x)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        z = c_pair x (univ_for_pr x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  z = c_pair x (univ_for_pr x)\n\ngoal (2 subgoals):\n 1. \\<exists>x. z = c_pair x (univ_for_pr x) \\<Longrightarrow>\n    univ_for_pr (c_fst z) = c_snd z\n 2. univ_for_pr (c_fst z) = c_snd z \\<Longrightarrow>\n    \\<exists>x. z = c_pair x (univ_for_pr x)", "then"], ["proof (chain)\npicking this:\n  z = c_pair x (univ_for_pr x)", "show \"univ_for_pr (c_fst z) = c_snd z\""], ["proof (prove)\nusing this:\n  z = c_pair x (univ_for_pr x)\n\ngoal (1 subgoal):\n 1. univ_for_pr (c_fst z) = c_snd z", "by simp"], ["proof (state)\nthis:\n  univ_for_pr (c_fst z) = c_snd z\n\ngoal (1 subgoal):\n 1. univ_for_pr (c_fst z) = c_snd z \\<Longrightarrow>\n    \\<exists>x. z = c_pair x (univ_for_pr x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. univ_for_pr (c_fst z) = c_snd z \\<Longrightarrow>\n    \\<exists>x. z = c_pair x (univ_for_pr x)", "assume A: \"univ_for_pr (c_fst z) = c_snd z\""], ["proof (state)\nthis:\n  univ_for_pr (c_fst z) = c_snd z\n\ngoal (1 subgoal):\n 1. univ_for_pr (c_fst z) = c_snd z \\<Longrightarrow>\n    \\<exists>x. z = c_pair x (univ_for_pr x)", "from A"], ["proof (chain)\npicking this:\n  univ_for_pr (c_fst z) = c_snd z", "have \"z = c_pair (c_fst z) (univ_for_pr (c_fst z))\""], ["proof (prove)\nusing this:\n  univ_for_pr (c_fst z) = c_snd z\n\ngoal (1 subgoal):\n 1. z = c_pair (c_fst z) (univ_for_pr (c_fst z))", "by simp"], ["proof (state)\nthis:\n  z = c_pair (c_fst z) (univ_for_pr (c_fst z))\n\ngoal (1 subgoal):\n 1. univ_for_pr (c_fst z) = c_snd z \\<Longrightarrow>\n    \\<exists>x. z = c_pair x (univ_for_pr x)", "thus \"\\<exists>x. z = c_pair x (univ_for_pr x)\""], ["proof (prove)\nusing this:\n  z = c_pair (c_fst z) (univ_for_pr (c_fst z))\n\ngoal (1 subgoal):\n 1. \\<exists>x. z = c_pair x (univ_for_pr x)", ".."], ["proof (state)\nthis:\n  \\<exists>x. z = c_pair x (univ_for_pr x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>x. z = c_pair x (univ_for_pr x)) =\n  (univ_for_pr (c_fst z) = c_snd z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>x. ?z = c_pair x (univ_for_pr x)) =\n  (univ_for_pr (c_fst ?z) = c_snd ?z)\n\ngoal (1 subgoal):\n 1. c_graph univ_for_pr \\<in> ce_sets", "with S2"], ["proof (chain)\npicking this:\n  A = {z. \\<exists>x. z = c_pair x (univ_for_pr x)}\n  (\\<exists>x. ?z = c_pair x (univ_for_pr x)) =\n  (univ_for_pr (c_fst ?z) = c_snd ?z)", "have S4: \"A = { z . univ_for_pr (c_fst z) = c_snd z }\""], ["proof (prove)\nusing this:\n  A = {z. \\<exists>x. z = c_pair x (univ_for_pr x)}\n  (\\<exists>x. ?z = c_pair x (univ_for_pr x)) =\n  (univ_for_pr (c_fst ?z) = c_snd ?z)\n\ngoal (1 subgoal):\n 1. A = {z. univ_for_pr (c_fst z) = c_snd z}", "by auto"], ["proof (state)\nthis:\n  A = {z. univ_for_pr (c_fst z) = c_snd z}\n\ngoal (1 subgoal):\n 1. c_graph univ_for_pr \\<in> ce_sets", "define p where \"p x y =\n    (if c_assoc_have_key (pr_gr y) (c_fst x) = 0 then\n      (if c_assoc_value (pr_gr y) (c_fst x) = c_snd x then (0::nat) else 1)\n    else 1)\" for x y"], ["proof (state)\nthis:\n  p ?x ?y =\n  (if c_assoc_have_key (pr_gr ?y) (c_fst ?x) = 0\n   then if c_assoc_value (pr_gr ?y) (c_fst ?x) = c_snd ?x then 0 else 1\n   else 1)\n\ngoal (1 subgoal):\n 1. c_graph univ_for_pr \\<in> ce_sets", "from c_assoc_have_key_is_pr c_assoc_value_is_pr pr_gr_is_pr"], ["proof (chain)\npicking this:\n  c_assoc_have_key \\<in> PrimRec2\n  c_assoc_value \\<in> PrimRec2\n  pr_gr \\<in> PrimRec1", "have p_is_pr: \"p \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  c_assoc_have_key \\<in> PrimRec2\n  c_assoc_value \\<in> PrimRec2\n  pr_gr \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. p \\<in> PrimRec2", "unfolding p_def"], ["proof (prove)\nusing this:\n  c_assoc_have_key \\<in> PrimRec2\n  c_assoc_value \\<in> PrimRec2\n  pr_gr \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y.\n        if c_assoc_have_key (pr_gr y) (c_fst x) = 0\n        then if c_assoc_value (pr_gr y) (c_fst x) = c_snd x then 0 else 1\n        else 1)\n    \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  p \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. c_graph univ_for_pr \\<in> ce_sets", "have S5: \"\\<And> z. (univ_for_pr (c_fst z) = c_snd z) = (\\<exists> y. p z y = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z. (univ_for_pr (c_fst z) = c_snd z) = (\\<exists>y. p z y = 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z. (univ_for_pr (c_fst z) = c_snd z) = (\\<exists>y. p z y = 0)", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z. (univ_for_pr (c_fst z) = c_snd z) = (\\<exists>y. p z y = 0)", "show \"(univ_for_pr (c_fst z) = c_snd z) = (\\<exists> y. p z y = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (univ_for_pr (c_fst z) = c_snd z) = (\\<exists>y. p z y = 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. univ_for_pr (c_fst z) = c_snd z \\<Longrightarrow> \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "assume A: \"univ_for_pr (c_fst z) = c_snd z\""], ["proof (state)\nthis:\n  univ_for_pr (c_fst z) = c_snd z\n\ngoal (2 subgoals):\n 1. univ_for_pr (c_fst z) = c_snd z \\<Longrightarrow> \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "let ?n = \"c_fst (c_fst z)\""], ["proof (state)\ngoal (2 subgoals):\n 1. univ_for_pr (c_fst z) = c_snd z \\<Longrightarrow> \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "let ?x = \"c_snd (c_fst z)\""], ["proof (state)\ngoal (2 subgoals):\n 1. univ_for_pr (c_fst z) = c_snd z \\<Longrightarrow> \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "let ?y = \"loc_upb ?n ?x\""], ["proof (state)\ngoal (2 subgoals):\n 1. univ_for_pr (c_fst z) = c_snd z \\<Longrightarrow> \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "have S5_1: \"c_assoc_have_key (pr_gr ?y) (c_pair ?n ?x) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))))\n     (c_pair (c_fst (c_fst z)) (c_snd (c_fst z))) =\n    0", "by (rule loc_upb_main)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))))\n   (c_pair (c_fst (c_fst z)) (c_snd (c_fst z))) =\n  0\n\ngoal (2 subgoals):\n 1. univ_for_pr (c_fst z) = c_snd z \\<Longrightarrow> \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "have S5_2: \"c_assoc_value (pr_gr ?y) (c_pair ?n ?x) = univ_for_pr (c_pair ?n ?x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_value (pr_gr (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))))\n     (c_pair (c_fst (c_fst z)) (c_snd (c_fst z))) =\n    univ_for_pr (c_pair (c_fst (c_fst z)) (c_snd (c_fst z)))", "by (rule pr_gr_value)"], ["proof (state)\nthis:\n  c_assoc_value (pr_gr (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))))\n   (c_pair (c_fst (c_fst z)) (c_snd (c_fst z))) =\n  univ_for_pr (c_pair (c_fst (c_fst z)) (c_snd (c_fst z)))\n\ngoal (2 subgoals):\n 1. univ_for_pr (c_fst z) = c_snd z \\<Longrightarrow> \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "from S5_1"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))))\n   (c_pair (c_fst (c_fst z)) (c_snd (c_fst z))) =\n  0", "have S5_3: \"c_assoc_have_key (pr_gr ?y) (c_fst z) = 0\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))))\n   (c_pair (c_fst (c_fst z)) (c_snd (c_fst z))) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))))\n     (c_fst z) =\n    0", "by simp"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))))\n   (c_fst z) =\n  0\n\ngoal (2 subgoals):\n 1. univ_for_pr (c_fst z) = c_snd z \\<Longrightarrow> \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "from S5_2 A"], ["proof (chain)\npicking this:\n  c_assoc_value (pr_gr (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))))\n   (c_pair (c_fst (c_fst z)) (c_snd (c_fst z))) =\n  univ_for_pr (c_pair (c_fst (c_fst z)) (c_snd (c_fst z)))\n  univ_for_pr (c_fst z) = c_snd z", "have S5_4: \"c_assoc_value (pr_gr ?y) (c_fst z) = c_snd z\""], ["proof (prove)\nusing this:\n  c_assoc_value (pr_gr (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))))\n   (c_pair (c_fst (c_fst z)) (c_snd (c_fst z))) =\n  univ_for_pr (c_pair (c_fst (c_fst z)) (c_snd (c_fst z)))\n  univ_for_pr (c_fst z) = c_snd z\n\ngoal (1 subgoal):\n 1. c_assoc_value (pr_gr (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))))\n     (c_fst z) =\n    c_snd z", "by simp"], ["proof (state)\nthis:\n  c_assoc_value (pr_gr (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))))\n   (c_fst z) =\n  c_snd z\n\ngoal (2 subgoals):\n 1. univ_for_pr (c_fst z) = c_snd z \\<Longrightarrow> \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "from S5_3 S5_4"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))))\n   (c_fst z) =\n  0\n  c_assoc_value (pr_gr (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))))\n   (c_fst z) =\n  c_snd z", "have \"p z ?y = 0\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))))\n   (c_fst z) =\n  0\n  c_assoc_value (pr_gr (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))))\n   (c_fst z) =\n  c_snd z\n\ngoal (1 subgoal):\n 1. p z (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))) = 0", "by (simp add: p_def)"], ["proof (state)\nthis:\n  p z (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))) = 0\n\ngoal (2 subgoals):\n 1. univ_for_pr (c_fst z) = c_snd z \\<Longrightarrow> \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "thus \"\\<exists> y. p z y = 0\""], ["proof (prove)\nusing this:\n  p z (loc_upb (c_fst (c_fst z)) (c_snd (c_fst z))) = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0", ".."], ["proof (state)\nthis:\n  \\<exists>y. p z y = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "assume A: \"\\<exists>y. p z y = 0\""], ["proof (state)\nthis:\n  \\<exists>y. p z y = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "then"], ["proof (chain)\npicking this:\n  \\<exists>y. p z y = 0", "obtain y where S5_1: \"p z y = 0\""], ["proof (prove)\nusing this:\n  \\<exists>y. p z y = 0\n\ngoal (1 subgoal):\n 1. (\\<And>y. p z y = 0 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", ".."], ["proof (state)\nthis:\n  p z y = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "have S5_2: \"c_assoc_have_key (pr_gr y) (c_fst z) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr y) (c_fst z) = 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr y) (c_fst z) \\<noteq> 0 \\<Longrightarrow> False", "assume A_1: \"c_assoc_have_key (pr_gr y) (c_fst z) \\<noteq> 0\""], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr y) (c_fst z) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr y) (c_fst z) \\<noteq> 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr y) (c_fst z) \\<noteq> 0", "have \"p z y = 1\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr y) (c_fst z) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p z y = 1", "by (simp add: p_def)"], ["proof (state)\nthis:\n  p z y = 1\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr y) (c_fst z) \\<noteq> 0 \\<Longrightarrow> False", "with S5_1"], ["proof (chain)\npicking this:\n  p z y = 0\n  p z y = 1", "show False"], ["proof (prove)\nusing this:\n  p z y = 0\n  p z y = 1\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr y) (c_fst z) = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "then"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr y) (c_fst z) = 0", "have S5_3: \"p z y = (if c_assoc_value (pr_gr y) (c_fst z) = c_snd z then (0::nat) else 1)\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr y) (c_fst z) = 0\n\ngoal (1 subgoal):\n 1. p z y = (if c_assoc_value (pr_gr y) (c_fst z) = c_snd z then 0 else 1)", "by (simp add: p_def)"], ["proof (state)\nthis:\n  p z y = (if c_assoc_value (pr_gr y) (c_fst z) = c_snd z then 0 else 1)\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "have S5_4: \"c_assoc_value (pr_gr y) (c_fst z) = c_snd z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_value (pr_gr y) (c_fst z) = c_snd z", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_value (pr_gr y) (c_fst z) \\<noteq> c_snd z \\<Longrightarrow>\n    False", "assume A_2: \"c_assoc_value (pr_gr y) (c_fst z) \\<noteq> c_snd z\""], ["proof (state)\nthis:\n  c_assoc_value (pr_gr y) (c_fst z) \\<noteq> c_snd z\n\ngoal (1 subgoal):\n 1. c_assoc_value (pr_gr y) (c_fst z) \\<noteq> c_snd z \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  c_assoc_value (pr_gr y) (c_fst z) \\<noteq> c_snd z", "have \"p z y = 1\""], ["proof (prove)\nusing this:\n  c_assoc_value (pr_gr y) (c_fst z) \\<noteq> c_snd z\n\ngoal (1 subgoal):\n 1. p z y = 1", "by (simp add: p_def)"], ["proof (state)\nthis:\n  p z y = 1\n\ngoal (1 subgoal):\n 1. c_assoc_value (pr_gr y) (c_fst z) \\<noteq> c_snd z \\<Longrightarrow>\n    False", "with S5_1"], ["proof (chain)\npicking this:\n  p z y = 0\n  p z y = 1", "show False"], ["proof (prove)\nusing this:\n  p z y = 0\n  p z y = 1\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_value (pr_gr y) (c_fst z) = c_snd z\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "have S5_5: \"c_is_sub_fun (pr_gr y) univ_for_pr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_is_sub_fun (pr_gr y) univ_for_pr", "by (rule pr_gr_1)"], ["proof (state)\nthis:\n  c_is_sub_fun (pr_gr y) univ_for_pr\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "from S5_5 S5_2"], ["proof (chain)\npicking this:\n  c_is_sub_fun (pr_gr y) univ_for_pr\n  c_assoc_have_key (pr_gr y) (c_fst z) = 0", "have S5_6: \"c_assoc_value (pr_gr y) (c_fst z) = univ_for_pr (c_fst z)\""], ["proof (prove)\nusing this:\n  c_is_sub_fun (pr_gr y) univ_for_pr\n  c_assoc_have_key (pr_gr y) (c_fst z) = 0\n\ngoal (1 subgoal):\n 1. c_assoc_value (pr_gr y) (c_fst z) = univ_for_pr (c_fst z)", "by (rule c_is_sub_fun_lm_1)"], ["proof (state)\nthis:\n  c_assoc_value (pr_gr y) (c_fst z) = univ_for_pr (c_fst z)\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow> univ_for_pr (c_fst z) = c_snd z", "with S5_4"], ["proof (chain)\npicking this:\n  c_assoc_value (pr_gr y) (c_fst z) = c_snd z\n  c_assoc_value (pr_gr y) (c_fst z) = univ_for_pr (c_fst z)", "show \"univ_for_pr (c_fst z) = c_snd z\""], ["proof (prove)\nusing this:\n  c_assoc_value (pr_gr y) (c_fst z) = c_snd z\n  c_assoc_value (pr_gr y) (c_fst z) = univ_for_pr (c_fst z)\n\ngoal (1 subgoal):\n 1. univ_for_pr (c_fst z) = c_snd z", "by auto"], ["proof (state)\nthis:\n  univ_for_pr (c_fst z) = c_snd z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (univ_for_pr (c_fst z) = c_snd z) = (\\<exists>y. p z y = 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (univ_for_pr (c_fst ?z) = c_snd ?z) = (\\<exists>y. p ?z y = 0)\n\ngoal (1 subgoal):\n 1. c_graph univ_for_pr \\<in> ce_sets", "from S5 S4"], ["proof (chain)\npicking this:\n  (univ_for_pr (c_fst ?z) = c_snd ?z) = (\\<exists>y. p ?z y = 0)\n  A = {z. univ_for_pr (c_fst z) = c_snd z}", "have \"A = {z. \\<exists> y. p z y = 0}\""], ["proof (prove)\nusing this:\n  (univ_for_pr (c_fst ?z) = c_snd ?z) = (\\<exists>y. p ?z y = 0)\n  A = {z. univ_for_pr (c_fst z) = c_snd z}\n\ngoal (1 subgoal):\n 1. A = {z. \\<exists>y. p z y = 0}", "by auto"], ["proof (state)\nthis:\n  A = {z. \\<exists>y. p z y = 0}\n\ngoal (1 subgoal):\n 1. c_graph univ_for_pr \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  A = {z. \\<exists>y. p z y = 0}", "have \"A = fn_to_set p\""], ["proof (prove)\nusing this:\n  A = {z. \\<exists>y. p z y = 0}\n\ngoal (1 subgoal):\n 1. A = fn_to_set p", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  A = fn_to_set p\n\ngoal (1 subgoal):\n 1. c_graph univ_for_pr \\<in> ce_sets", "moreover"], ["proof (state)\nthis:\n  A = fn_to_set p\n\ngoal (1 subgoal):\n 1. c_graph univ_for_pr \\<in> ce_sets", "from p_is_pr"], ["proof (chain)\npicking this:\n  p \\<in> PrimRec2", "have \"fn_to_set p \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  p \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. fn_to_set p \\<in> ce_sets", "by (rule ce_set_lm_1)"], ["proof (state)\nthis:\n  fn_to_set p \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. c_graph univ_for_pr \\<in> ce_sets", "ultimately"], ["proof (chain)\npicking this:\n  A = fn_to_set p\n  fn_to_set p \\<in> ce_sets", "have \"A \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  A = fn_to_set p\n  fn_to_set p \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. c_graph univ_for_pr \\<in> ce_sets", "with A_def"], ["proof (chain)\npicking this:\n  A = c_graph univ_for_pr\n  A \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  A = c_graph univ_for_pr\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. c_graph univ_for_pr \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  c_graph univ_for_pr \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem univ_for_pr_tot_rec: \"total_recursive univ_for_pr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. total_recursive univ_for_pr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. total_recursive univ_for_pr", "have \"c_graph univ_for_pr \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_graph univ_for_pr \\<in> ce_sets", "by (rule univ_for_pr_tot_rec_lm)"], ["proof (state)\nthis:\n  c_graph univ_for_pr \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. total_recursive univ_for_pr", "then"], ["proof (chain)\npicking this:\n  c_graph univ_for_pr \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  c_graph univ_for_pr \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. total_recursive univ_for_pr", "by (unfold total_recursive_def1, auto)"], ["proof (state)\nthis:\n  total_recursive univ_for_pr\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Computable sets, Post's theorem\\<close>"], ["", "definition\n  computable :: \"nat set \\<Rightarrow> bool\" where\n  \"computable = (\\<lambda> A. A \\<in> ce_sets \\<and> -A \\<in> ce_sets)\""], ["", "lemma computable_complement_1: \"computable A \\<Longrightarrow> computable (- A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> computable (- A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> computable (- A)", "assume \"computable A\""], ["proof (state)\nthis:\n  computable A\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> computable (- A)", "then"], ["proof (chain)\npicking this:\n  computable A", "show ?thesis"], ["proof (prove)\nusing this:\n  computable A\n\ngoal (1 subgoal):\n 1. computable (- A)", "by (unfold computable_def, auto)"], ["proof (state)\nthis:\n  computable (- A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma computable_complement_2: \"computable (- A) \\<Longrightarrow> computable A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. computable (- A) \\<Longrightarrow> computable A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. computable (- A) \\<Longrightarrow> computable A", "assume \"computable (- A)\""], ["proof (state)\nthis:\n  computable (- A)\n\ngoal (1 subgoal):\n 1. computable (- A) \\<Longrightarrow> computable A", "then"], ["proof (chain)\npicking this:\n  computable (- A)", "show ?thesis"], ["proof (prove)\nusing this:\n  computable (- A)\n\ngoal (1 subgoal):\n 1. computable A", "by (unfold computable_def, auto)"], ["proof (state)\nthis:\n  computable A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma computable_complement_3: \"(computable A) = (computable (- A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. computable A = computable (- A)", "by (unfold computable_def, auto)"], ["", "theorem comp_impl_tot_rec: \"computable A \\<Longrightarrow> total_recursive (chf A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "assume A: \"computable A\""], ["proof (state)\nthis:\n  computable A\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "from A"], ["proof (chain)\npicking this:\n  computable A", "have A1: \"A \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  computable A\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets", "by (unfold computable_def, simp)"], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "from A"], ["proof (chain)\npicking this:\n  computable A", "have A2: \"-A \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  computable A\n\ngoal (1 subgoal):\n 1. - A \\<in> ce_sets", "by (unfold computable_def, simp)"], ["proof (state)\nthis:\n  - A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "define p where \"p x = c_pair x 0\" for x"], ["proof (state)\nthis:\n  p ?x = c_pair ?x 0\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "define q where \"q x = c_pair x 1\" for x"], ["proof (state)\nthis:\n  q ?x = c_pair ?x 1\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "from p_def"], ["proof (chain)\npicking this:\n  p ?x = c_pair ?x 0", "have p_is_pr: \"p \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  p ?x = c_pair ?x 0\n\ngoal (1 subgoal):\n 1. p \\<in> PrimRec1", "unfolding p_def"], ["proof (prove)\nusing this:\n  c_pair ?x 0 = c_pair ?x 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. c_pair x 0) \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "from q_def"], ["proof (chain)\npicking this:\n  q ?x = c_pair ?x 1", "have q_is_pr: \"q \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  q ?x = c_pair ?x 1\n\ngoal (1 subgoal):\n 1. q \\<in> PrimRec1", "unfolding q_def"], ["proof (prove)\nusing this:\n  c_pair ?x 1 = c_pair ?x 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. c_pair x 1) \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  q \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "define U0 where \"U0 = {p x | x. x \\<in> A}\""], ["proof (state)\nthis:\n  U0 = {p x |x. x \\<in> A}\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "define U1 where \"U1 = {q x | x. x \\<in> - A}\""], ["proof (state)\nthis:\n  U1 = {q x |x. x \\<in> - A}\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "from A1 p_is_pr"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets\n  p \\<in> PrimRec1", "have U0_ce: \"U0 \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. U0 \\<in> ce_sets", "by(unfold U0_def, rule ce_set_lm_7)"], ["proof (state)\nthis:\n  U0 \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "from A2 q_is_pr"], ["proof (chain)\npicking this:\n  - A \\<in> ce_sets\n  q \\<in> PrimRec1", "have U1_ce: \"U1 \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  - A \\<in> ce_sets\n  q \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. U1 \\<in> ce_sets", "by(unfold U1_def, rule ce_set_lm_7)"], ["proof (state)\nthis:\n  U1 \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "define U where \"U = U0 \\<union> U1\""], ["proof (state)\nthis:\n  U = U0 \\<union> U1\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "from U0_ce U1_ce"], ["proof (chain)\npicking this:\n  U0 \\<in> ce_sets\n  U1 \\<in> ce_sets", "have U_ce: \"U \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  U0 \\<in> ce_sets\n  U1 \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. U \\<in> ce_sets", "by (unfold U_def, rule ce_union)"], ["proof (state)\nthis:\n  U \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "define V where \"V = c_graph (chf A)\""], ["proof (state)\nthis:\n  V = c_graph (chf A)\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "have V_1: \"V = { c_pair x (chf A x) | x. x \\<in> UNIV}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V = {c_pair x (chf A x) |x. x \\<in> UNIV}", "by (simp add: V_def c_graph_def)"], ["proof (state)\nthis:\n  V = {c_pair x (chf A x) |x. x \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "from U0_def p_def"], ["proof (chain)\npicking this:\n  U0 = {p x |x. x \\<in> A}\n  p ?x = c_pair ?x 0", "have U0_1: \"U0 = { c_pair x y | x y. x \\<in> A \\<and> y=0}\""], ["proof (prove)\nusing this:\n  U0 = {p x |x. x \\<in> A}\n  p ?x = c_pair ?x 0\n\ngoal (1 subgoal):\n 1. U0 = {c_pair x y |x y. x \\<in> A \\<and> y = 0}", "by auto"], ["proof (state)\nthis:\n  U0 = {c_pair x y |x y. x \\<in> A \\<and> y = 0}\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "from U1_def q_def"], ["proof (chain)\npicking this:\n  U1 = {q x |x. x \\<in> - A}\n  q ?x = c_pair ?x 1", "have U1_1: \"U1 = { c_pair x y | x y. x \\<notin> A \\<and> y=1}\""], ["proof (prove)\nusing this:\n  U1 = {q x |x. x \\<in> - A}\n  q ?x = c_pair ?x 1\n\ngoal (1 subgoal):\n 1. U1 = {c_pair x y |x y. x \\<notin> A \\<and> y = 1}", "by auto"], ["proof (state)\nthis:\n  U1 = {c_pair x y |x y. x \\<notin> A \\<and> y = 1}\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "from U0_1 U1_1 U_def"], ["proof (chain)\npicking this:\n  U0 = {c_pair x y |x y. x \\<in> A \\<and> y = 0}\n  U1 = {c_pair x y |x y. x \\<notin> A \\<and> y = 1}\n  U = U0 \\<union> U1", "have U_1: \"U = { c_pair x y | x y. (x \\<in> A \\<and> y=0) \\<or> (x \\<notin> A \\<and> y=1)}\""], ["proof (prove)\nusing this:\n  U0 = {c_pair x y |x y. x \\<in> A \\<and> y = 0}\n  U1 = {c_pair x y |x y. x \\<notin> A \\<and> y = 1}\n  U = U0 \\<union> U1\n\ngoal (1 subgoal):\n 1. U =\n    {c_pair x y |x y.\n     x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}", "by auto"], ["proof (state)\nthis:\n  U =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "from V_1"], ["proof (chain)\npicking this:\n  V = {c_pair x (chf A x) |x. x \\<in> UNIV}", "have V_2: \"V = { c_pair x y | x y. y = chf A x}\""], ["proof (prove)\nusing this:\n  V = {c_pair x (chf A x) |x. x \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. V = {c_pair x y |x y. y = chf A x}", "by auto"], ["proof (state)\nthis:\n  V = {c_pair x y |x y. y = chf A x}\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "have L1: \"\\<And> x y. ((x \\<in> A \\<and> y=0) \\<or> (x \\<notin> A \\<and> y=1)) = (y = chf A x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1) =\n       (y = chf A x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1) =\n       (y = chf A x)", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1) =\n       (y = chf A x)", "show \"((x \\<in> A \\<and> y=0) \\<or> (x \\<notin> A \\<and> y=1)) = (y = chf A x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1) = (y = chf A x)", "by(unfold chf_def, auto)"], ["proof (state)\nthis:\n  (x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1) = (y = chf A x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (?x \\<in> A \\<and> ?y = 0 \\<or> ?x \\<notin> A \\<and> ?y = 1) =\n  (?y = chf A ?x)\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "from V_2 U_1 L1"], ["proof (chain)\npicking this:\n  V = {c_pair x y |x y. y = chf A x}\n  U =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n  (?x \\<in> A \\<and> ?y = 0 \\<or> ?x \\<notin> A \\<and> ?y = 1) =\n  (?y = chf A ?x)", "have \"U=V\""], ["proof (prove)\nusing this:\n  V = {c_pair x y |x y. y = chf A x}\n  U =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n  (?x \\<in> A \\<and> ?y = 0 \\<or> ?x \\<notin> A \\<and> ?y = 1) =\n  (?y = chf A ?x)\n\ngoal (1 subgoal):\n 1. U = V", "by simp"], ["proof (state)\nthis:\n  U = V\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "with U_ce"], ["proof (chain)\npicking this:\n  U \\<in> ce_sets\n  U = V", "have V_ce: \"V \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  U \\<in> ce_sets\n  U = V\n\ngoal (1 subgoal):\n 1. V \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  V \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "with V_def"], ["proof (chain)\npicking this:\n  V = c_graph (chf A)\n  V \\<in> ce_sets", "have \"c_graph (chf A) \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  V = c_graph (chf A)\n  V \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. c_graph (chf A) \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  c_graph (chf A) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)", "then"], ["proof (chain)\npicking this:\n  c_graph (chf A) \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  c_graph (chf A) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. total_recursive (chf A)", "by (unfold total_recursive_def1)"], ["proof (state)\nthis:\n  total_recursive (chf A)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem tot_rec_impl_comp: \"total_recursive (chf A) \\<Longrightarrow> computable A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "assume A: \"total_recursive (chf A)\""], ["proof (state)\nthis:\n  total_recursive (chf A)\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "then"], ["proof (chain)\npicking this:\n  total_recursive (chf A)", "have A1: \"c_graph (chf A) \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  total_recursive (chf A)\n\ngoal (1 subgoal):\n 1. c_graph (chf A) \\<in> ce_sets", "by (unfold total_recursive_def1)"], ["proof (state)\nthis:\n  c_graph (chf A) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "let ?U = \"c_graph (chf A)\""], ["proof (state)\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "have L1: \"?U = { c_pair x (chf A x) | x. x \\<in> UNIV}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_graph (chf A) = {c_pair x (chf A x) |x. x \\<in> UNIV}", "by (simp add: c_graph_def)"], ["proof (state)\nthis:\n  c_graph (chf A) = {c_pair x (chf A x) |x. x \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "have L2: \"\\<And> x y. ((x \\<in> A \\<and> y=0) \\<or> (x \\<notin> A \\<and> y=1)) = (y = chf A x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1) =\n       (y = chf A x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1) =\n       (y = chf A x)", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1) =\n       (y = chf A x)", "show \"((x \\<in> A \\<and> y=0) \\<or> (x \\<notin> A \\<and> y=1)) = (y = chf A x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1) = (y = chf A x)", "by(unfold chf_def, auto)"], ["proof (state)\nthis:\n  (x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1) = (y = chf A x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (?x \\<in> A \\<and> ?y = 0 \\<or> ?x \\<notin> A \\<and> ?y = 1) =\n  (?y = chf A ?x)\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "from L1 L2"], ["proof (chain)\npicking this:\n  c_graph (chf A) = {c_pair x (chf A x) |x. x \\<in> UNIV}\n  (?x \\<in> A \\<and> ?y = 0 \\<or> ?x \\<notin> A \\<and> ?y = 1) =\n  (?y = chf A ?x)", "have L3: \"?U = { c_pair x y | x y. (x \\<in> A \\<and> y=0) \\<or> (x \\<notin> A \\<and> y=1)}\""], ["proof (prove)\nusing this:\n  c_graph (chf A) = {c_pair x (chf A x) |x. x \\<in> UNIV}\n  (?x \\<in> A \\<and> ?y = 0 \\<or> ?x \\<notin> A \\<and> ?y = 1) =\n  (?y = chf A ?x)\n\ngoal (1 subgoal):\n 1. c_graph (chf A) =\n    {c_pair x y |x y.\n     x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}", "by auto"], ["proof (state)\nthis:\n  c_graph (chf A) =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "define p where \"p x = c_pair x 0\" for x"], ["proof (state)\nthis:\n  p ?x = c_pair ?x 0\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "define q where \"q x = c_pair x 1\" for x"], ["proof (state)\nthis:\n  q ?x = c_pair ?x 1\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "have p_is_pr: \"p \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> PrimRec1", "unfolding p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. c_pair x 0) \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "have q_is_pr: \"q \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> PrimRec1", "unfolding q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. c_pair x 1) \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  q \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "define V where \"V = { c_pair x y | x y. (x \\<in> A \\<and> y=0) \\<or> (x \\<notin> A \\<and> y=1)}\""], ["proof (state)\nthis:\n  V =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "from V_def L3 A1"], ["proof (chain)\npicking this:\n  V =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n  c_graph (chf A) =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n  c_graph (chf A) \\<in> ce_sets", "have V_ce: \"V \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  V =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n  c_graph (chf A) =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n  c_graph (chf A) \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. V \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  V \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "from V_def"], ["proof (chain)\npicking this:\n  V =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}", "have L4: \"\\<forall> z. (z \\<in> V) = (\\<exists> x y. z = c_pair x y \\<and>  ((x \\<in> A \\<and> y=0) \\<or> (x \\<notin> A \\<and> y=1)))\""], ["proof (prove)\nusing this:\n  V =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n\ngoal (1 subgoal):\n 1. \\<forall>z.\n       (z \\<in> V) =\n       (\\<exists>x y.\n           z = c_pair x y \\<and>\n           (x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1))", "by blast"], ["proof (state)\nthis:\n  \\<forall>z.\n     (z \\<in> V) =\n     (\\<exists>x y.\n         z = c_pair x y \\<and>\n         (x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1))\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "have L5: \"\\<And> x. (p x \\<in> V) = (x \\<in> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. (p x \\<in> V) = (x \\<in> A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (p x \\<in> V) = (x \\<in> A)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (p x \\<in> V) = (x \\<in> A)", "show \"(p x \\<in> V) = (x \\<in> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p x \\<in> V) = (x \\<in> A)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. p x \\<in> V \\<Longrightarrow> x \\<in> A\n 2. x \\<in> A \\<Longrightarrow> p x \\<in> V", "assume A: \"p x \\<in> V\""], ["proof (state)\nthis:\n  p x \\<in> V\n\ngoal (2 subgoals):\n 1. p x \\<in> V \\<Longrightarrow> x \\<in> A\n 2. x \\<in> A \\<Longrightarrow> p x \\<in> V", "then"], ["proof (chain)\npicking this:\n  p x \\<in> V", "have \"c_pair x 0 \\<in> V\""], ["proof (prove)\nusing this:\n  p x \\<in> V\n\ngoal (1 subgoal):\n 1. c_pair x 0 \\<in> V", "by (unfold p_def)"], ["proof (state)\nthis:\n  c_pair x 0 \\<in> V\n\ngoal (2 subgoals):\n 1. p x \\<in> V \\<Longrightarrow> x \\<in> A\n 2. x \\<in> A \\<Longrightarrow> p x \\<in> V", "with V_def"], ["proof (chain)\npicking this:\n  V =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n  c_pair x 0 \\<in> V", "obtain x1 y1 where L5_2: \"c_pair x 0 = c_pair x1 y1\"\n        and L5_3: \"((x1 \\<in> A \\<and> y1=0) \\<or> (x1 \\<notin> A \\<and> y1=1))\""], ["proof (prove)\nusing this:\n  V =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n  c_pair x 0 \\<in> V\n\ngoal (1 subgoal):\n 1. (\\<And>x1 y1.\n        \\<lbrakk>c_pair x 0 = c_pair x1 y1;\n         x1 \\<in> A \\<and> y1 = 0 \\<or> x1 \\<notin> A \\<and> y1 = 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c_pair x 0 = c_pair x1 y1\n  x1 \\<in> A \\<and> y1 = 0 \\<or> x1 \\<notin> A \\<and> y1 = 1\n\ngoal (2 subgoals):\n 1. p x \\<in> V \\<Longrightarrow> x \\<in> A\n 2. x \\<in> A \\<Longrightarrow> p x \\<in> V", "from L5_2"], ["proof (chain)\npicking this:\n  c_pair x 0 = c_pair x1 y1", "have X_eq_X1: \"x=x1\""], ["proof (prove)\nusing this:\n  c_pair x 0 = c_pair x1 y1\n\ngoal (1 subgoal):\n 1. x = x1", "by (rule c_pair_inj1)"], ["proof (state)\nthis:\n  x = x1\n\ngoal (2 subgoals):\n 1. p x \\<in> V \\<Longrightarrow> x \\<in> A\n 2. x \\<in> A \\<Longrightarrow> p x \\<in> V", "from L5_2"], ["proof (chain)\npicking this:\n  c_pair x 0 = c_pair x1 y1", "have Y1_eq_0: \"0=y1\""], ["proof (prove)\nusing this:\n  c_pair x 0 = c_pair x1 y1\n\ngoal (1 subgoal):\n 1. 0 = y1", "by (rule c_pair_inj2)"], ["proof (state)\nthis:\n  0 = y1\n\ngoal (2 subgoals):\n 1. p x \\<in> V \\<Longrightarrow> x \\<in> A\n 2. x \\<in> A \\<Longrightarrow> p x \\<in> V", "from L5_3 X_eq_X1 Y1_eq_0"], ["proof (chain)\npicking this:\n  x1 \\<in> A \\<and> y1 = 0 \\<or> x1 \\<notin> A \\<and> y1 = 1\n  x = x1\n  0 = y1", "show \"x \\<in> A\""], ["proof (prove)\nusing this:\n  x1 \\<in> A \\<and> y1 = 0 \\<or> x1 \\<notin> A \\<and> y1 = 1\n  x = x1\n  0 = y1\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by auto"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<Longrightarrow> p x \\<in> V", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> A \\<Longrightarrow> p x \\<in> V", "assume A: \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<Longrightarrow> p x \\<in> V", "let ?z = \"c_pair x 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> A \\<Longrightarrow> p x \\<in> V", "from A"], ["proof (chain)\npicking this:\n  x \\<in> A", "have L5_1: \"\\<exists> x1 y1. c_pair x 0 = c_pair x1 y1 \\<and>  ((x1 \\<in> A \\<and> y1=0) \\<or> (x1 \\<notin> A \\<and> y1=1))\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>x1 y1.\n       c_pair x 0 = c_pair x1 y1 \\<and>\n       (x1 \\<in> A \\<and> y1 = 0 \\<or> x1 \\<notin> A \\<and> y1 = 1)", "by auto"], ["proof (state)\nthis:\n  \\<exists>x1 y1.\n     c_pair x 0 = c_pair x1 y1 \\<and>\n     (x1 \\<in> A \\<and> y1 = 0 \\<or> x1 \\<notin> A \\<and> y1 = 1)\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<Longrightarrow> p x \\<in> V", "with V_def"], ["proof (chain)\npicking this:\n  V =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n  \\<exists>x1 y1.\n     c_pair x 0 = c_pair x1 y1 \\<and>\n     (x1 \\<in> A \\<and> y1 = 0 \\<or> x1 \\<notin> A \\<and> y1 = 1)", "have \"c_pair x 0 \\<in> V\""], ["proof (prove)\nusing this:\n  V =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n  \\<exists>x1 y1.\n     c_pair x 0 = c_pair x1 y1 \\<and>\n     (x1 \\<in> A \\<and> y1 = 0 \\<or> x1 \\<notin> A \\<and> y1 = 1)\n\ngoal (1 subgoal):\n 1. c_pair x 0 \\<in> V", "by auto"], ["proof (state)\nthis:\n  c_pair x 0 \\<in> V\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<Longrightarrow> p x \\<in> V", "with p_def"], ["proof (chain)\npicking this:\n  p ?x = c_pair ?x 0\n  c_pair x 0 \\<in> V", "show \"p x \\<in> V\""], ["proof (prove)\nusing this:\n  p ?x = c_pair ?x 0\n  c_pair x 0 \\<in> V\n\ngoal (1 subgoal):\n 1. p x \\<in> V", "by simp"], ["proof (state)\nthis:\n  p x \\<in> V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (p x \\<in> V) = (x \\<in> A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (p ?x \\<in> V) = (?x \\<in> A)\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "then"], ["proof (chain)\npicking this:\n  (p ?x \\<in> V) = (?x \\<in> A)", "have A_eq: \"A = { x. p x \\<in> V}\""], ["proof (prove)\nusing this:\n  (p ?x \\<in> V) = (?x \\<in> A)\n\ngoal (1 subgoal):\n 1. A = {x. p x \\<in> V}", "by auto"], ["proof (state)\nthis:\n  A = {x. p x \\<in> V}\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "from V_ce p_is_pr"], ["proof (chain)\npicking this:\n  V \\<in> ce_sets\n  p \\<in> PrimRec1", "have \"{ x. p x \\<in> V} \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  V \\<in> ce_sets\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. {x. p x \\<in> V} \\<in> ce_sets", "by (rule ce_set_lm_5)"], ["proof (state)\nthis:\n  {x. p x \\<in> V} \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "with A_eq"], ["proof (chain)\npicking this:\n  A = {x. p x \\<in> V}\n  {x. p x \\<in> V} \\<in> ce_sets", "have A_ce: \"A \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  A = {x. p x \\<in> V}\n  {x. p x \\<in> V} \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets", "by simp"], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "have CA_eq: \"- A = {x. q x \\<in> V}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - A = {x. q x \\<in> V}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. - A = {x. q x \\<in> V}", "have \"\\<And> x. (q x \\<in> V) = (x \\<notin> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. (q x \\<in> V) = (x \\<notin> A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (q x \\<in> V) = (x \\<notin> A)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (q x \\<in> V) = (x \\<notin> A)", "show \"(q x \\<in> V) = (x \\<notin> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (q x \\<in> V) = (x \\<notin> A)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. q x \\<in> V \\<Longrightarrow> x \\<notin> A\n 2. x \\<notin> A \\<Longrightarrow> q x \\<in> V", "assume A: \"q x \\<in> V\""], ["proof (state)\nthis:\n  q x \\<in> V\n\ngoal (2 subgoals):\n 1. q x \\<in> V \\<Longrightarrow> x \\<notin> A\n 2. x \\<notin> A \\<Longrightarrow> q x \\<in> V", "then"], ["proof (chain)\npicking this:\n  q x \\<in> V", "have \"c_pair x 1 \\<in> V\""], ["proof (prove)\nusing this:\n  q x \\<in> V\n\ngoal (1 subgoal):\n 1. c_pair x 1 \\<in> V", "by (unfold q_def)"], ["proof (state)\nthis:\n  c_pair x 1 \\<in> V\n\ngoal (2 subgoals):\n 1. q x \\<in> V \\<Longrightarrow> x \\<notin> A\n 2. x \\<notin> A \\<Longrightarrow> q x \\<in> V", "with V_def"], ["proof (chain)\npicking this:\n  V =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n  c_pair x 1 \\<in> V", "obtain x1 y1 where L5_2: \"c_pair x 1 = c_pair x1 y1\"\n          and L5_3: \"((x1 \\<in> A \\<and> y1=0) \\<or> (x1 \\<notin> A \\<and> y1=1))\""], ["proof (prove)\nusing this:\n  V =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n  c_pair x 1 \\<in> V\n\ngoal (1 subgoal):\n 1. (\\<And>x1 y1.\n        \\<lbrakk>c_pair x 1 = c_pair x1 y1;\n         x1 \\<in> A \\<and> y1 = 0 \\<or> x1 \\<notin> A \\<and> y1 = 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c_pair x 1 = c_pair x1 y1\n  x1 \\<in> A \\<and> y1 = 0 \\<or> x1 \\<notin> A \\<and> y1 = 1\n\ngoal (2 subgoals):\n 1. q x \\<in> V \\<Longrightarrow> x \\<notin> A\n 2. x \\<notin> A \\<Longrightarrow> q x \\<in> V", "from L5_2"], ["proof (chain)\npicking this:\n  c_pair x 1 = c_pair x1 y1", "have X_eq_X1: \"x=x1\""], ["proof (prove)\nusing this:\n  c_pair x 1 = c_pair x1 y1\n\ngoal (1 subgoal):\n 1. x = x1", "by (rule c_pair_inj1)"], ["proof (state)\nthis:\n  x = x1\n\ngoal (2 subgoals):\n 1. q x \\<in> V \\<Longrightarrow> x \\<notin> A\n 2. x \\<notin> A \\<Longrightarrow> q x \\<in> V", "from L5_2"], ["proof (chain)\npicking this:\n  c_pair x 1 = c_pair x1 y1", "have Y1_eq_1: \"1=y1\""], ["proof (prove)\nusing this:\n  c_pair x 1 = c_pair x1 y1\n\ngoal (1 subgoal):\n 1. 1 = y1", "by (rule c_pair_inj2)"], ["proof (state)\nthis:\n  1 = y1\n\ngoal (2 subgoals):\n 1. q x \\<in> V \\<Longrightarrow> x \\<notin> A\n 2. x \\<notin> A \\<Longrightarrow> q x \\<in> V", "from L5_3 X_eq_X1 Y1_eq_1"], ["proof (chain)\npicking this:\n  x1 \\<in> A \\<and> y1 = 0 \\<or> x1 \\<notin> A \\<and> y1 = 1\n  x = x1\n  1 = y1", "show \"x \\<notin> A\""], ["proof (prove)\nusing this:\n  x1 \\<in> A \\<and> y1 = 0 \\<or> x1 \\<notin> A \\<and> y1 = 1\n  x = x1\n  1 = y1\n\ngoal (1 subgoal):\n 1. x \\<notin> A", "by auto"], ["proof (state)\nthis:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> q x \\<in> V", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> q x \\<in> V", "assume A: \"x \\<notin> A\""], ["proof (state)\nthis:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> q x \\<in> V", "from A"], ["proof (chain)\npicking this:\n  x \\<notin> A", "have L5_1: \"\\<exists> x1 y1. c_pair x 1 = c_pair x1 y1 \\<and>  ((x1 \\<in> A \\<and> y1=0) \\<or> (x1 \\<notin> A \\<and> y1=1))\""], ["proof (prove)\nusing this:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. \\<exists>x1 y1.\n       c_pair x 1 = c_pair x1 y1 \\<and>\n       (x1 \\<in> A \\<and> y1 = 0 \\<or> x1 \\<notin> A \\<and> y1 = 1)", "by auto"], ["proof (state)\nthis:\n  \\<exists>x1 y1.\n     c_pair x 1 = c_pair x1 y1 \\<and>\n     (x1 \\<in> A \\<and> y1 = 0 \\<or> x1 \\<notin> A \\<and> y1 = 1)\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> q x \\<in> V", "with V_def"], ["proof (chain)\npicking this:\n  V =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n  \\<exists>x1 y1.\n     c_pair x 1 = c_pair x1 y1 \\<and>\n     (x1 \\<in> A \\<and> y1 = 0 \\<or> x1 \\<notin> A \\<and> y1 = 1)", "have \"c_pair x 1 \\<in> V\""], ["proof (prove)\nusing this:\n  V =\n  {c_pair x y |x y. x \\<in> A \\<and> y = 0 \\<or> x \\<notin> A \\<and> y = 1}\n  \\<exists>x1 y1.\n     c_pair x 1 = c_pair x1 y1 \\<and>\n     (x1 \\<in> A \\<and> y1 = 0 \\<or> x1 \\<notin> A \\<and> y1 = 1)\n\ngoal (1 subgoal):\n 1. c_pair x 1 \\<in> V", "by auto"], ["proof (state)\nthis:\n  c_pair x 1 \\<in> V\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> q x \\<in> V", "with q_def"], ["proof (chain)\npicking this:\n  q ?x = c_pair ?x 1\n  c_pair x 1 \\<in> V", "show \"q x \\<in> V\""], ["proof (prove)\nusing this:\n  q ?x = c_pair ?x 1\n  c_pair x 1 \\<in> V\n\ngoal (1 subgoal):\n 1. q x \\<in> V", "by simp"], ["proof (state)\nthis:\n  q x \\<in> V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (q x \\<in> V) = (x \\<notin> A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (q ?x \\<in> V) = (?x \\<notin> A)\n\ngoal (1 subgoal):\n 1. - A = {x. q x \\<in> V}", "then"], ["proof (chain)\npicking this:\n  (q ?x \\<in> V) = (?x \\<notin> A)", "show ?thesis"], ["proof (prove)\nusing this:\n  (q ?x \\<in> V) = (?x \\<notin> A)\n\ngoal (1 subgoal):\n 1. - A = {x. q x \\<in> V}", "by auto"], ["proof (state)\nthis:\n  - A = {x. q x \\<in> V}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  - A = {x. q x \\<in> V}\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "from V_ce q_is_pr"], ["proof (chain)\npicking this:\n  V \\<in> ce_sets\n  q \\<in> PrimRec1", "have \"{ x. q x \\<in> V} \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  V \\<in> ce_sets\n  q \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. {x. q x \\<in> V} \\<in> ce_sets", "by (rule ce_set_lm_5)"], ["proof (state)\nthis:\n  {x. q x \\<in> V} \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "with CA_eq"], ["proof (chain)\npicking this:\n  - A = {x. q x \\<in> V}\n  {x. q x \\<in> V} \\<in> ce_sets", "have CA_ce: \"- A \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  - A = {x. q x \\<in> V}\n  {x. q x \\<in> V} \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. - A \\<in> ce_sets", "by simp"], ["proof (state)\nthis:\n  - A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "from A_ce CA_ce"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets\n  - A \\<in> ce_sets", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n  - A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. computable A", "by (simp add: computable_def)"], ["proof (state)\nthis:\n  computable A\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem post_th_0: \"(computable A) = (total_recursive (chf A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. computable A = total_recursive (chf A)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)\n 2. total_recursive (chf A) \\<Longrightarrow> computable A", "assume \"computable A\""], ["proof (state)\nthis:\n  computable A\n\ngoal (2 subgoals):\n 1. computable A \\<Longrightarrow> total_recursive (chf A)\n 2. total_recursive (chf A) \\<Longrightarrow> computable A", "then"], ["proof (chain)\npicking this:\n  computable A", "show \"total_recursive (chf A)\""], ["proof (prove)\nusing this:\n  computable A\n\ngoal (1 subgoal):\n 1. total_recursive (chf A)", "by (rule comp_impl_tot_rec)"], ["proof (state)\nthis:\n  total_recursive (chf A)\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "assume \"total_recursive (chf A)\""], ["proof (state)\nthis:\n  total_recursive (chf A)\n\ngoal (1 subgoal):\n 1. total_recursive (chf A) \\<Longrightarrow> computable A", "then"], ["proof (chain)\npicking this:\n  total_recursive (chf A)", "show \"computable A\""], ["proof (prove)\nusing this:\n  total_recursive (chf A)\n\ngoal (1 subgoal):\n 1. computable A", "by (rule tot_rec_impl_comp)"], ["proof (state)\nthis:\n  computable A\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Universal computably enumerable set\\<close>"], ["", "definition\n  univ_ce :: \"nat set\" where\n  \"univ_ce = { c_pair n x | n x. x \\<in> nat_to_ce_set n }\""], ["", "lemma univ_for_pr_lm: \"univ_for_pr (c_pair n x) = (nat_to_pr n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ_for_pr (c_pair n x) = nat_to_pr n x", "by (simp add: univ_for_pr_def pr_conv_2_to_1_def)"], ["", "theorem univ_is_ce: \"univ_ce \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "define A where \"A = c_graph univ_for_pr\""], ["proof (state)\nthis:\n  A = c_graph univ_for_pr\n\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  A = c_graph univ_for_pr", "have \"A \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  A = c_graph univ_for_pr\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets", "by (simp add: univ_for_pr_tot_rec_lm)"], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets", "have \"\\<exists> pA \\<in> PrimRec2. A = fn_to_set pA\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<exists>pA\\<in>PrimRec2. A = fn_to_set pA", "by (rule ce_set_lm_3)"], ["proof (state)\nthis:\n  \\<exists>pA\\<in>PrimRec2. A = fn_to_set pA\n\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  \\<exists>pA\\<in>PrimRec2. A = fn_to_set pA", "obtain pA where pA_is_pr: \"pA \\<in> PrimRec2\" and S1: \"A = fn_to_set pA\""], ["proof (prove)\nusing this:\n  \\<exists>pA\\<in>PrimRec2. A = fn_to_set pA\n\ngoal (1 subgoal):\n 1. (\\<And>pA.\n        \\<lbrakk>pA \\<in> PrimRec2; A = fn_to_set pA\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  pA \\<in> PrimRec2\n  A = fn_to_set pA\n\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "from S1"], ["proof (chain)\npicking this:\n  A = fn_to_set pA", "have S2: \"A = { x. \\<exists> y. pA x y = 0 }\""], ["proof (prove)\nusing this:\n  A = fn_to_set pA\n\ngoal (1 subgoal):\n 1. A = {x. \\<exists>y. pA x y = 0}", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  A = {x. \\<exists>y. pA x y = 0}\n\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "define p where \"p z y = pA (c_pair (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) 0) (c_snd y)\"\n    for z y"], ["proof (state)\nthis:\n  p ?z ?y =\n  pA (c_pair (c_pair (c_fst ?z) (c_pair (c_snd ?z) (c_fst ?y))) 0)\n   (c_snd ?y)\n\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "from pA_is_pr"], ["proof (chain)\npicking this:\n  pA \\<in> PrimRec2", "have p_is_pr: \"p \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  pA \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. p \\<in> PrimRec2", "unfolding p_def"], ["proof (prove)\nusing this:\n  pA \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>z y.\n        pA (c_pair (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) 0)\n         (c_snd y))\n    \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  p \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "have \"\\<And> z. (\\<exists> n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n) = (c_snd z \\<in> nat_to_ce_set (c_fst z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       (\\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n) =\n       (c_snd z \\<in> nat_to_ce_set (c_fst z))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       (\\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n) =\n       (c_snd z \\<in> nat_to_ce_set (c_fst z))", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       (\\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n) =\n       (c_snd z \\<in> nat_to_ce_set (c_fst z))", "show \"(\\<exists> n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n) = (c_snd z \\<in> nat_to_ce_set (c_fst z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n) =\n    (c_snd z \\<in> nat_to_ce_set (c_fst z))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>n x.\n       z = c_pair n x \\<and> x \\<in> nat_to_ce_set n \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)\n 2. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "assume A: \"\\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n\""], ["proof (state)\nthis:\n  \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n\n\ngoal (2 subgoals):\n 1. \\<exists>n x.\n       z = c_pair n x \\<and> x \\<in> nat_to_ce_set n \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)\n 2. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "then"], ["proof (chain)\npicking this:\n  \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "obtain n x where L1: \"z = c_pair n x \\<and> x \\<in> nat_to_ce_set n\""], ["proof (prove)\nusing this:\n  \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. (\\<And>n x.\n        z = c_pair n x \\<and> x \\<in> nat_to_ce_set n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z = c_pair n x \\<and> x \\<in> nat_to_ce_set n\n\ngoal (2 subgoals):\n 1. \\<exists>n x.\n       z = c_pair n x \\<and> x \\<in> nat_to_ce_set n \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)\n 2. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "from L1"], ["proof (chain)\npicking this:\n  z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "have L2: \"z = c_pair n x\""], ["proof (prove)\nusing this:\n  z = c_pair n x \\<and> x \\<in> nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. z = c_pair n x", "by auto"], ["proof (state)\nthis:\n  z = c_pair n x\n\ngoal (2 subgoals):\n 1. \\<exists>n x.\n       z = c_pair n x \\<and> x \\<in> nat_to_ce_set n \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)\n 2. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "from L1"], ["proof (chain)\npicking this:\n  z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "have L3: \"x \\<in> nat_to_ce_set n\""], ["proof (prove)\nusing this:\n  z = c_pair n x \\<and> x \\<in> nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_ce_set n", "by auto"], ["proof (state)\nthis:\n  x \\<in> nat_to_ce_set n\n\ngoal (2 subgoals):\n 1. \\<exists>n x.\n       z = c_pair n x \\<and> x \\<in> nat_to_ce_set n \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)\n 2. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "from L1"], ["proof (chain)\npicking this:\n  z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "have L4: \"c_fst z = n\""], ["proof (prove)\nusing this:\n  z = c_pair n x \\<and> x \\<in> nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. c_fst z = n", "by simp"], ["proof (state)\nthis:\n  c_fst z = n\n\ngoal (2 subgoals):\n 1. \\<exists>n x.\n       z = c_pair n x \\<and> x \\<in> nat_to_ce_set n \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)\n 2. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "from L1"], ["proof (chain)\npicking this:\n  z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "have L5: \"c_snd z = x\""], ["proof (prove)\nusing this:\n  z = c_pair n x \\<and> x \\<in> nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. c_snd z = x", "by simp"], ["proof (state)\nthis:\n  c_snd z = x\n\ngoal (2 subgoals):\n 1. \\<exists>n x.\n       z = c_pair n x \\<and> x \\<in> nat_to_ce_set n \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)\n 2. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "from L3 L4 L5"], ["proof (chain)\npicking this:\n  x \\<in> nat_to_ce_set n\n  c_fst z = n\n  c_snd z = x", "show \"c_snd z \\<in> nat_to_ce_set (c_fst z)\""], ["proof (prove)\nusing this:\n  x \\<in> nat_to_ce_set n\n  c_fst z = n\n  c_snd z = x\n\ngoal (1 subgoal):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z)", "by auto"], ["proof (state)\nthis:\n  c_snd z \\<in> nat_to_ce_set (c_fst z)\n\ngoal (1 subgoal):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "assume A: \"c_snd z \\<in> nat_to_ce_set (c_fst z)\""], ["proof (state)\nthis:\n  c_snd z \\<in> nat_to_ce_set (c_fst z)\n\ngoal (1 subgoal):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "let ?n = \"c_fst z\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "let ?x = \"c_snd z\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "have L1: \"z = c_pair ?n ?x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = c_pair (c_fst z) (c_snd z)", "by simp"], ["proof (state)\nthis:\n  z = c_pair (c_fst z) (c_snd z)\n\ngoal (1 subgoal):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "from L1 A"], ["proof (chain)\npicking this:\n  z = c_pair (c_fst z) (c_snd z)\n  c_snd z \\<in> nat_to_ce_set (c_fst z)", "have \"z = c_pair ?n ?x \\<and> ?x \\<in> nat_to_ce_set ?n\""], ["proof (prove)\nusing this:\n  z = c_pair (c_fst z) (c_snd z)\n  c_snd z \\<in> nat_to_ce_set (c_fst z)\n\ngoal (1 subgoal):\n 1. z = c_pair (c_fst z) (c_snd z) \\<and>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "by auto"], ["proof (state)\nthis:\n  z = c_pair (c_fst z) (c_snd z) \\<and>\n  c_snd z \\<in> nat_to_ce_set (c_fst z)\n\ngoal (1 subgoal):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "thus \"\\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n\""], ["proof (prove)\nusing this:\n  z = c_pair (c_fst z) (c_snd z) \\<and>\n  c_snd z \\<in> nat_to_ce_set (c_fst z)\n\ngoal (1 subgoal):\n 1. \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "by blast"], ["proof (state)\nthis:\n  \\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n) =\n  (c_snd z \\<in> nat_to_ce_set (c_fst z))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>n x. ?z = c_pair n x \\<and> x \\<in> nat_to_ce_set n) =\n  (c_snd ?z \\<in> nat_to_ce_set (c_fst ?z))\n\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  (\\<exists>n x. ?z = c_pair n x \\<and> x \\<in> nat_to_ce_set n) =\n  (c_snd ?z \\<in> nat_to_ce_set (c_fst ?z))", "have \"{ c_pair n x | n x. x \\<in> nat_to_ce_set n } = { z. c_snd z \\<in> nat_to_ce_set (c_fst z)}\""], ["proof (prove)\nusing this:\n  (\\<exists>n x. ?z = c_pair n x \\<and> x \\<in> nat_to_ce_set n) =\n  (c_snd ?z \\<in> nat_to_ce_set (c_fst ?z))\n\ngoal (1 subgoal):\n 1. {c_pair n x |n x. x \\<in> nat_to_ce_set n} =\n    {z. c_snd z \\<in> nat_to_ce_set (c_fst z)}", "by auto"], ["proof (state)\nthis:\n  {c_pair n x |n x. x \\<in> nat_to_ce_set n} =\n  {z. c_snd z \\<in> nat_to_ce_set (c_fst z)}\n\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  {c_pair n x |n x. x \\<in> nat_to_ce_set n} =\n  {z. c_snd z \\<in> nat_to_ce_set (c_fst z)}", "have S3: \"univ_ce  = { z. c_snd z \\<in> nat_to_ce_set (c_fst z)}\""], ["proof (prove)\nusing this:\n  {c_pair n x |n x. x \\<in> nat_to_ce_set n} =\n  {z. c_snd z \\<in> nat_to_ce_set (c_fst z)}\n\ngoal (1 subgoal):\n 1. univ_ce = {z. c_snd z \\<in> nat_to_ce_set (c_fst z)}", "by (simp add: univ_ce_def)"], ["proof (state)\nthis:\n  univ_ce = {z. c_snd z \\<in> nat_to_ce_set (c_fst z)}\n\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "have S4: \"\\<And> z. (c_snd z \\<in> nat_to_ce_set (c_fst z)) = (\\<exists> y. p z y = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       (c_snd z \\<in> nat_to_ce_set (c_fst z)) = (\\<exists>y. p z y = 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       (c_snd z \\<in> nat_to_ce_set (c_fst z)) = (\\<exists>y. p z y = 0)", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       (c_snd z \\<in> nat_to_ce_set (c_fst z)) = (\\<exists>y. p z y = 0)", "show \"(c_snd z \\<in> nat_to_ce_set (c_fst z)) = (\\<exists> y. p z y = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c_snd z \\<in> nat_to_ce_set (c_fst z)) = (\\<exists>y. p z y = 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "assume A: \"c_snd z \\<in> nat_to_ce_set (c_fst z)\""], ["proof (state)\nthis:\n  c_snd z \\<in> nat_to_ce_set (c_fst z)\n\ngoal (2 subgoals):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "have \"nat_to_ce_set (c_fst z) = { x . \\<exists> y. (nat_to_pr (c_fst z)) (c_pair x y) = 0 }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_ce_set (c_fst z) =\n    {x. \\<exists>y. nat_to_pr (c_fst z) (c_pair x y) = 0}", "by (simp add: nat_to_ce_set_lm_1)"], ["proof (state)\nthis:\n  nat_to_ce_set (c_fst z) =\n  {x. \\<exists>y. nat_to_pr (c_fst z) (c_pair x y) = 0}\n\ngoal (2 subgoals):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "with A"], ["proof (chain)\npicking this:\n  c_snd z \\<in> nat_to_ce_set (c_fst z)\n  nat_to_ce_set (c_fst z) =\n  {x. \\<exists>y. nat_to_pr (c_fst z) (c_pair x y) = 0}", "obtain u where S4_1: \"(nat_to_pr (c_fst z)) (c_pair (c_snd z) u) = 0\""], ["proof (prove)\nusing this:\n  c_snd z \\<in> nat_to_ce_set (c_fst z)\n  nat_to_ce_set (c_fst z) =\n  {x. \\<exists>y. nat_to_pr (c_fst z) (c_pair x y) = 0}\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        nat_to_pr (c_fst z) (c_pair (c_snd z) u) = 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  nat_to_pr (c_fst z) (c_pair (c_snd z) u) = 0\n\ngoal (2 subgoals):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "then"], ["proof (chain)\npicking this:\n  nat_to_pr (c_fst z) (c_pair (c_snd z) u) = 0", "have S4_2: \"univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) u)) = 0\""], ["proof (prove)\nusing this:\n  nat_to_pr (c_fst z) (c_pair (c_snd z) u) = 0\n\ngoal (1 subgoal):\n 1. univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) u)) = 0", "by (simp add: univ_for_pr_lm)"], ["proof (state)\nthis:\n  univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) u)) = 0\n\ngoal (2 subgoals):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "from A_def"], ["proof (chain)\npicking this:\n  A = c_graph univ_for_pr", "have S4_3: \"A = { c_pair x (univ_for_pr x) | x. x \\<in> UNIV }\""], ["proof (prove)\nusing this:\n  A = c_graph univ_for_pr\n\ngoal (1 subgoal):\n 1. A = {c_pair x (univ_for_pr x) |x. x \\<in> UNIV}", "by (simp add: c_graph_def)"], ["proof (state)\nthis:\n  A = {c_pair x (univ_for_pr x) |x. x \\<in> UNIV}\n\ngoal (2 subgoals):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "then"], ["proof (chain)\npicking this:\n  A = {c_pair x (univ_for_pr x) |x. x \\<in> UNIV}", "have S4_4: \"\\<And> x. c_pair x (univ_for_pr x) \\<in> A\""], ["proof (prove)\nusing this:\n  A = {c_pair x (univ_for_pr x) |x. x \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. \\<And>x. c_pair x (univ_for_pr x) \\<in> A", "by auto"], ["proof (state)\nthis:\n  c_pair ?x (univ_for_pr ?x) \\<in> A\n\ngoal (2 subgoals):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "then"], ["proof (chain)\npicking this:\n  c_pair ?x (univ_for_pr ?x) \\<in> A", "have \"c_pair (c_pair (c_fst z) (c_pair (c_snd z) u)) (univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) u))) \\<in> A\""], ["proof (prove)\nusing this:\n  c_pair ?x (univ_for_pr ?x) \\<in> A\n\ngoal (1 subgoal):\n 1. c_pair (c_pair (c_fst z) (c_pair (c_snd z) u))\n     (univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) u)))\n    \\<in> A", "by auto"], ["proof (state)\nthis:\n  c_pair (c_pair (c_fst z) (c_pair (c_snd z) u))\n   (univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) u)))\n  \\<in> A\n\ngoal (2 subgoals):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "with S4_2"], ["proof (chain)\npicking this:\n  univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) u)) = 0\n  c_pair (c_pair (c_fst z) (c_pair (c_snd z) u))\n   (univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) u)))\n  \\<in> A", "have S4_5: \"c_pair (c_pair (c_fst z) (c_pair (c_snd z) u)) 0 \\<in> A\""], ["proof (prove)\nusing this:\n  univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) u)) = 0\n  c_pair (c_pair (c_fst z) (c_pair (c_snd z) u))\n   (univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) u)))\n  \\<in> A\n\ngoal (1 subgoal):\n 1. c_pair (c_pair (c_fst z) (c_pair (c_snd z) u)) 0 \\<in> A", "by auto"], ["proof (state)\nthis:\n  c_pair (c_pair (c_fst z) (c_pair (c_snd z) u)) 0 \\<in> A\n\ngoal (2 subgoals):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "with S2"], ["proof (chain)\npicking this:\n  A = {x. \\<exists>y. pA x y = 0}\n  c_pair (c_pair (c_fst z) (c_pair (c_snd z) u)) 0 \\<in> A", "obtain v where S4_6: \"pA (c_pair (c_pair (c_fst z) (c_pair (c_snd z) u)) 0) v = 0\""], ["proof (prove)\nusing this:\n  A = {x. \\<exists>y. pA x y = 0}\n  c_pair (c_pair (c_fst z) (c_pair (c_snd z) u)) 0 \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        pA (c_pair (c_pair (c_fst z) (c_pair (c_snd z) u)) 0) v =\n        0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  pA (c_pair (c_pair (c_fst z) (c_pair (c_snd z) u)) 0) v = 0\n\ngoal (2 subgoals):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "define y where \"y = c_pair u v\""], ["proof (state)\nthis:\n  y = c_pair u v\n\ngoal (2 subgoals):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "from y_def"], ["proof (chain)\npicking this:\n  y = c_pair u v", "have S4_7: \"u = c_fst y\""], ["proof (prove)\nusing this:\n  y = c_pair u v\n\ngoal (1 subgoal):\n 1. u = c_fst y", "by simp"], ["proof (state)\nthis:\n  u = c_fst y\n\ngoal (2 subgoals):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "from y_def"], ["proof (chain)\npicking this:\n  y = c_pair u v", "have S4_8: \"v = c_snd y\""], ["proof (prove)\nusing this:\n  y = c_pair u v\n\ngoal (1 subgoal):\n 1. v = c_snd y", "by simp"], ["proof (state)\nthis:\n  v = c_snd y\n\ngoal (2 subgoals):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "from S4_6 S4_7 S4_8 p_def"], ["proof (chain)\npicking this:\n  pA (c_pair (c_pair (c_fst z) (c_pair (c_snd z) u)) 0) v = 0\n  u = c_fst y\n  v = c_snd y\n  p ?z ?y =\n  pA (c_pair (c_pair (c_fst ?z) (c_pair (c_snd ?z) (c_fst ?y))) 0)\n   (c_snd ?y)", "have \"p z y = 0\""], ["proof (prove)\nusing this:\n  pA (c_pair (c_pair (c_fst z) (c_pair (c_snd z) u)) 0) v = 0\n  u = c_fst y\n  v = c_snd y\n  p ?z ?y =\n  pA (c_pair (c_pair (c_fst ?z) (c_pair (c_snd ?z) (c_fst ?y))) 0)\n   (c_snd ?y)\n\ngoal (1 subgoal):\n 1. p z y = 0", "by simp"], ["proof (state)\nthis:\n  p z y = 0\n\ngoal (2 subgoals):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z) \\<Longrightarrow>\n    \\<exists>y. p z y = 0\n 2. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "thus \"\\<exists> y. p z y = 0\""], ["proof (prove)\nusing this:\n  p z y = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0", ".."], ["proof (state)\nthis:\n  \\<exists>y. p z y = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "assume A: \"\\<exists>y. p z y = 0\""], ["proof (state)\nthis:\n  \\<exists>y. p z y = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "then"], ["proof (chain)\npicking this:\n  \\<exists>y. p z y = 0", "obtain y where S4_1: \"p z y = 0\""], ["proof (prove)\nusing this:\n  \\<exists>y. p z y = 0\n\ngoal (1 subgoal):\n 1. (\\<And>y. p z y = 0 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", ".."], ["proof (state)\nthis:\n  p z y = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "from S4_1 p_def"], ["proof (chain)\npicking this:\n  p z y = 0\n  p ?z ?y =\n  pA (c_pair (c_pair (c_fst ?z) (c_pair (c_snd ?z) (c_fst ?y))) 0)\n   (c_snd ?y)", "have S4_2: \"pA (c_pair (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) 0) (c_snd y) = 0\""], ["proof (prove)\nusing this:\n  p z y = 0\n  p ?z ?y =\n  pA (c_pair (c_pair (c_fst ?z) (c_pair (c_snd ?z) (c_fst ?y))) 0)\n   (c_snd ?y)\n\ngoal (1 subgoal):\n 1. pA (c_pair (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) 0)\n     (c_snd y) =\n    0", "by simp"], ["proof (state)\nthis:\n  pA (c_pair (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) 0) (c_snd y) =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "with S2"], ["proof (chain)\npicking this:\n  A = {x. \\<exists>y. pA x y = 0}\n  pA (c_pair (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) 0) (c_snd y) =\n  0", "have S4_3: \"c_pair (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) 0 \\<in> A\""], ["proof (prove)\nusing this:\n  A = {x. \\<exists>y. pA x y = 0}\n  pA (c_pair (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) 0) (c_snd y) =\n  0\n\ngoal (1 subgoal):\n 1. c_pair (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) 0 \\<in> A", "by auto"], ["proof (state)\nthis:\n  c_pair (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) 0 \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "with A_def"], ["proof (chain)\npicking this:\n  A = c_graph univ_for_pr\n  c_pair (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) 0 \\<in> A", "have \"c_pair (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) 0 \\<in> c_graph univ_for_pr\""], ["proof (prove)\nusing this:\n  A = c_graph univ_for_pr\n  c_pair (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) 0 \\<in> A\n\ngoal (1 subgoal):\n 1. c_pair (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) 0\n    \\<in> c_graph univ_for_pr", "by simp"], ["proof (state)\nthis:\n  c_pair (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) 0\n  \\<in> c_graph univ_for_pr\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "then"], ["proof (chain)\npicking this:\n  c_pair (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) 0\n  \\<in> c_graph univ_for_pr", "have S4_4: \"0 = univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y)))\""], ["proof (prove)\nusing this:\n  c_pair (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) 0\n  \\<in> c_graph univ_for_pr\n\ngoal (1 subgoal):\n 1. 0 = univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y)))", "by (rule c_graph_lm_1)"], ["proof (state)\nthis:\n  0 = univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y)))\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "then"], ["proof (chain)\npicking this:\n  0 = univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y)))", "have S4_5: \"univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) = 0\""], ["proof (prove)\nusing this:\n  0 = univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y)))\n\ngoal (1 subgoal):\n 1. univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) = 0", "by auto"], ["proof (state)\nthis:\n  univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "then"], ["proof (chain)\npicking this:\n  univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) = 0", "have S4_6: \"(nat_to_pr (c_fst z)) (c_pair (c_snd z) (c_fst y)) = 0\""], ["proof (prove)\nusing this:\n  univ_for_pr (c_pair (c_fst z) (c_pair (c_snd z) (c_fst y))) = 0\n\ngoal (1 subgoal):\n 1. nat_to_pr (c_fst z) (c_pair (c_snd z) (c_fst y)) = 0", "by (simp add: univ_for_pr_lm)"], ["proof (state)\nthis:\n  nat_to_pr (c_fst z) (c_pair (c_snd z) (c_fst y)) = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "then"], ["proof (chain)\npicking this:\n  nat_to_pr (c_fst z) (c_pair (c_snd z) (c_fst y)) = 0", "have S4_7: \"\\<exists> y. (nat_to_pr (c_fst z)) (c_pair (c_snd z) y) = 0\""], ["proof (prove)\nusing this:\n  nat_to_pr (c_fst z) (c_pair (c_snd z) (c_fst y)) = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. nat_to_pr (c_fst z) (c_pair (c_snd z) y) = 0", ".."], ["proof (state)\nthis:\n  \\<exists>y. nat_to_pr (c_fst z) (c_pair (c_snd z) y) = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "have S4_8: \"nat_to_ce_set (c_fst z) = { x . \\<exists> y. (nat_to_pr (c_fst z)) (c_pair x y) = 0 }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_ce_set (c_fst z) =\n    {x. \\<exists>y. nat_to_pr (c_fst z) (c_pair x y) = 0}", "by (simp add: nat_to_ce_set_lm_1)"], ["proof (state)\nthis:\n  nat_to_ce_set (c_fst z) =\n  {x. \\<exists>y. nat_to_pr (c_fst z) (c_pair x y) = 0}\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "from S4_7"], ["proof (chain)\npicking this:\n  \\<exists>y. nat_to_pr (c_fst z) (c_pair (c_snd z) y) = 0", "have S4_9: \"c_snd z \\<in> { x . \\<exists> y. (nat_to_pr (c_fst z)) (c_pair x y) = 0 }\""], ["proof (prove)\nusing this:\n  \\<exists>y. nat_to_pr (c_fst z) (c_pair (c_snd z) y) = 0\n\ngoal (1 subgoal):\n 1. c_snd z \\<in> {x. \\<exists>y. nat_to_pr (c_fst z) (c_pair x y) = 0}", "by auto"], ["proof (state)\nthis:\n  c_snd z \\<in> {x. \\<exists>y. nat_to_pr (c_fst z) (c_pair x y) = 0}\n\ngoal (1 subgoal):\n 1. \\<exists>y. p z y = 0 \\<Longrightarrow>\n    c_snd z \\<in> nat_to_ce_set (c_fst z)", "with S4_8"], ["proof (chain)\npicking this:\n  nat_to_ce_set (c_fst z) =\n  {x. \\<exists>y. nat_to_pr (c_fst z) (c_pair x y) = 0}\n  c_snd z \\<in> {x. \\<exists>y. nat_to_pr (c_fst z) (c_pair x y) = 0}", "show \"c_snd z \\<in> nat_to_ce_set (c_fst z)\""], ["proof (prove)\nusing this:\n  nat_to_ce_set (c_fst z) =\n  {x. \\<exists>y. nat_to_pr (c_fst z) (c_pair x y) = 0}\n  c_snd z \\<in> {x. \\<exists>y. nat_to_pr (c_fst z) (c_pair x y) = 0}\n\ngoal (1 subgoal):\n 1. c_snd z \\<in> nat_to_ce_set (c_fst z)", "by auto"], ["proof (state)\nthis:\n  c_snd z \\<in> nat_to_ce_set (c_fst z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (c_snd z \\<in> nat_to_ce_set (c_fst z)) = (\\<exists>y. p z y = 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (c_snd ?z \\<in> nat_to_ce_set (c_fst ?z)) = (\\<exists>y. p ?z y = 0)\n\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "with S3"], ["proof (chain)\npicking this:\n  univ_ce = {z. c_snd z \\<in> nat_to_ce_set (c_fst z)}\n  (c_snd ?z \\<in> nat_to_ce_set (c_fst ?z)) = (\\<exists>y. p ?z y = 0)", "have \"univ_ce = {z. \\<exists> y. p z y = 0}\""], ["proof (prove)\nusing this:\n  univ_ce = {z. c_snd z \\<in> nat_to_ce_set (c_fst z)}\n  (c_snd ?z \\<in> nat_to_ce_set (c_fst ?z)) = (\\<exists>y. p ?z y = 0)\n\ngoal (1 subgoal):\n 1. univ_ce = {z. \\<exists>y. p z y = 0}", "by auto"], ["proof (state)\nthis:\n  univ_ce = {z. \\<exists>y. p z y = 0}\n\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "then"], ["proof (chain)\npicking this:\n  univ_ce = {z. \\<exists>y. p z y = 0}", "have \"univ_ce = fn_to_set p\""], ["proof (prove)\nusing this:\n  univ_ce = {z. \\<exists>y. p z y = 0}\n\ngoal (1 subgoal):\n 1. univ_ce = fn_to_set p", "by (simp add: fn_to_set_def)"], ["proof (state)\nthis:\n  univ_ce = fn_to_set p\n\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "moreover"], ["proof (state)\nthis:\n  univ_ce = fn_to_set p\n\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "from p_is_pr"], ["proof (chain)\npicking this:\n  p \\<in> PrimRec2", "have \"fn_to_set p \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  p \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. fn_to_set p \\<in> ce_sets", "by (rule ce_set_lm_1)"], ["proof (state)\nthis:\n  fn_to_set p \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "ultimately"], ["proof (chain)\npicking this:\n  univ_ce = fn_to_set p\n  fn_to_set p \\<in> ce_sets", "show \"univ_ce \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  univ_ce = fn_to_set p\n  fn_to_set p \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  univ_ce \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma univ_ce_lm_1: \"(c_pair n x \\<in> univ_ce) = (x \\<in> nat_to_ce_set n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c_pair n x \\<in> univ_ce) = (x \\<in> nat_to_ce_set n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (c_pair n x \\<in> univ_ce) = (x \\<in> nat_to_ce_set n)", "from univ_ce_def"], ["proof (chain)\npicking this:\n  univ_ce = {c_pair n x |n x. x \\<in> nat_to_ce_set n}", "have S1: \"univ_ce = {z . \\<exists> n x. z = c_pair n x \\<and> x \\<in> nat_to_ce_set n}\""], ["proof (prove)\nusing this:\n  univ_ce = {c_pair n x |n x. x \\<in> nat_to_ce_set n}\n\ngoal (1 subgoal):\n 1. univ_ce = {c_pair n x |n x. x \\<in> nat_to_ce_set n}", "by auto"], ["proof (state)\nthis:\n  univ_ce = {c_pair n x |n x. x \\<in> nat_to_ce_set n}\n\ngoal (1 subgoal):\n 1. (c_pair n x \\<in> univ_ce) = (x \\<in> nat_to_ce_set n)", "have S2: \"(\\<exists> n1 x1. c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1) = (x \\<in> nat_to_ce_set n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>n1 x1.\n        c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1) =\n    (x \\<in> nat_to_ce_set n)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>n1 x1.\n       c_pair n x = c_pair n1 x1 \\<and>\n       x1 \\<in> nat_to_ce_set n1 \\<Longrightarrow>\n    x \\<in> nat_to_ce_set n\n 2. x \\<in> nat_to_ce_set n \\<Longrightarrow>\n    \\<exists>n1 x1.\n       c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1", "assume \"\\<exists>n1 x1. c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1\""], ["proof (state)\nthis:\n  \\<exists>n1 x1. c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1\n\ngoal (2 subgoals):\n 1. \\<exists>n1 x1.\n       c_pair n x = c_pair n1 x1 \\<and>\n       x1 \\<in> nat_to_ce_set n1 \\<Longrightarrow>\n    x \\<in> nat_to_ce_set n\n 2. x \\<in> nat_to_ce_set n \\<Longrightarrow>\n    \\<exists>n1 x1.\n       c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1", "then"], ["proof (chain)\npicking this:\n  \\<exists>n1 x1. c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1", "obtain n1 x1 where L1: \"c_pair n x = c_pair n1 x1\" and L2: \"x1 \\<in> nat_to_ce_set n1\""], ["proof (prove)\nusing this:\n  \\<exists>n1 x1. c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1\n\ngoal (1 subgoal):\n 1. (\\<And>n1 x1.\n        \\<lbrakk>c_pair n x = c_pair n1 x1;\n         x1 \\<in> nat_to_ce_set n1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c_pair n x = c_pair n1 x1\n  x1 \\<in> nat_to_ce_set n1\n\ngoal (2 subgoals):\n 1. \\<exists>n1 x1.\n       c_pair n x = c_pair n1 x1 \\<and>\n       x1 \\<in> nat_to_ce_set n1 \\<Longrightarrow>\n    x \\<in> nat_to_ce_set n\n 2. x \\<in> nat_to_ce_set n \\<Longrightarrow>\n    \\<exists>n1 x1.\n       c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1", "from L1"], ["proof (chain)\npicking this:\n  c_pair n x = c_pair n1 x1", "have L3: \"n = n1\""], ["proof (prove)\nusing this:\n  c_pair n x = c_pair n1 x1\n\ngoal (1 subgoal):\n 1. n = n1", "by (rule c_pair_inj1)"], ["proof (state)\nthis:\n  n = n1\n\ngoal (2 subgoals):\n 1. \\<exists>n1 x1.\n       c_pair n x = c_pair n1 x1 \\<and>\n       x1 \\<in> nat_to_ce_set n1 \\<Longrightarrow>\n    x \\<in> nat_to_ce_set n\n 2. x \\<in> nat_to_ce_set n \\<Longrightarrow>\n    \\<exists>n1 x1.\n       c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1", "from L1"], ["proof (chain)\npicking this:\n  c_pair n x = c_pair n1 x1", "have L4: \"x = x1\""], ["proof (prove)\nusing this:\n  c_pair n x = c_pair n1 x1\n\ngoal (1 subgoal):\n 1. x = x1", "by (rule c_pair_inj2)"], ["proof (state)\nthis:\n  x = x1\n\ngoal (2 subgoals):\n 1. \\<exists>n1 x1.\n       c_pair n x = c_pair n1 x1 \\<and>\n       x1 \\<in> nat_to_ce_set n1 \\<Longrightarrow>\n    x \\<in> nat_to_ce_set n\n 2. x \\<in> nat_to_ce_set n \\<Longrightarrow>\n    \\<exists>n1 x1.\n       c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1", "from L2 L3 L4"], ["proof (chain)\npicking this:\n  x1 \\<in> nat_to_ce_set n1\n  n = n1\n  x = x1", "show \"x \\<in> nat_to_ce_set n\""], ["proof (prove)\nusing this:\n  x1 \\<in> nat_to_ce_set n1\n  n = n1\n  x = x1\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_ce_set n", "by auto"], ["proof (state)\nthis:\n  x \\<in> nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_ce_set n \\<Longrightarrow>\n    \\<exists>n1 x1.\n       c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> nat_to_ce_set n \\<Longrightarrow>\n    \\<exists>n1 x1.\n       c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1", "assume A: \"x \\<in> nat_to_ce_set n\""], ["proof (state)\nthis:\n  x \\<in> nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_ce_set n \\<Longrightarrow>\n    \\<exists>n1 x1.\n       c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1", "then"], ["proof (chain)\npicking this:\n  x \\<in> nat_to_ce_set n", "have \"c_pair n x = c_pair n x \\<and> x \\<in> nat_to_ce_set n\""], ["proof (prove)\nusing this:\n  x \\<in> nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. c_pair n x = c_pair n x \\<and> x \\<in> nat_to_ce_set n", "by auto"], ["proof (state)\nthis:\n  c_pair n x = c_pair n x \\<and> x \\<in> nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_ce_set n \\<Longrightarrow>\n    \\<exists>n1 x1.\n       c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1", "thus \"\\<exists> n1 x1. c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1\""], ["proof (prove)\nusing this:\n  c_pair n x = c_pair n x \\<and> x \\<in> nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. \\<exists>n1 x1.\n       c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1", "by blast"], ["proof (state)\nthis:\n  \\<exists>n1 x1. c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>n1 x1.\n      c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1) =\n  (x \\<in> nat_to_ce_set n)\n\ngoal (1 subgoal):\n 1. (c_pair n x \\<in> univ_ce) = (x \\<in> nat_to_ce_set n)", "with S1"], ["proof (chain)\npicking this:\n  univ_ce = {c_pair n x |n x. x \\<in> nat_to_ce_set n}\n  (\\<exists>n1 x1.\n      c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1) =\n  (x \\<in> nat_to_ce_set n)", "show ?thesis"], ["proof (prove)\nusing this:\n  univ_ce = {c_pair n x |n x. x \\<in> nat_to_ce_set n}\n  (\\<exists>n1 x1.\n      c_pair n x = c_pair n1 x1 \\<and> x1 \\<in> nat_to_ce_set n1) =\n  (x \\<in> nat_to_ce_set n)\n\ngoal (1 subgoal):\n 1. (c_pair n x \\<in> univ_ce) = (x \\<in> nat_to_ce_set n)", "by auto"], ["proof (state)\nthis:\n  (c_pair n x \\<in> univ_ce) = (x \\<in> nat_to_ce_set n)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem univ_ce_is_not_comp1: \"- univ_ce \\<notin> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - univ_ce \\<notin> ce_sets", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> - univ_ce \\<notin> ce_sets \\<Longrightarrow> False", "assume \"\\<not> - univ_ce \\<notin> ce_sets\""], ["proof (state)\nthis:\n  \\<not> - univ_ce \\<notin> ce_sets\n\ngoal (1 subgoal):\n 1. \\<not> - univ_ce \\<notin> ce_sets \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> - univ_ce \\<notin> ce_sets", "have A: \"- univ_ce \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  \\<not> - univ_ce \\<notin> ce_sets\n\ngoal (1 subgoal):\n 1. - univ_ce \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  - univ_ce \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<not> - univ_ce \\<notin> ce_sets \\<Longrightarrow> False", "define p where \"p x = c_pair x x\" for x"], ["proof (state)\nthis:\n  p ?x = c_pair ?x ?x\n\ngoal (1 subgoal):\n 1. \\<not> - univ_ce \\<notin> ce_sets \\<Longrightarrow> False", "have p_is_pr: \"p \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> PrimRec1", "unfolding p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. c_pair x x) \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<not> - univ_ce \\<notin> ce_sets \\<Longrightarrow> False", "define A where \"A = { x. p x \\<in> - univ_ce }\""], ["proof (state)\nthis:\n  A = {x. p x \\<in> - univ_ce}\n\ngoal (1 subgoal):\n 1. \\<not> - univ_ce \\<notin> ce_sets \\<Longrightarrow> False", "from A p_is_pr"], ["proof (chain)\npicking this:\n  - univ_ce \\<in> ce_sets\n  p \\<in> PrimRec1", "have \"{ x. p x \\<in> - univ_ce } \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  - univ_ce \\<in> ce_sets\n  p \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. {x. p x \\<in> - univ_ce} \\<in> ce_sets", "by (rule ce_set_lm_5)"], ["proof (state)\nthis:\n  {x. p x \\<in> - univ_ce} \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<not> - univ_ce \\<notin> ce_sets \\<Longrightarrow> False", "with A_def"], ["proof (chain)\npicking this:\n  A = {x. p x \\<in> - univ_ce}\n  {x. p x \\<in> - univ_ce} \\<in> ce_sets", "have S1: \"A \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  A = {x. p x \\<in> - univ_ce}\n  {x. p x \\<in> - univ_ce} \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<not> - univ_ce \\<notin> ce_sets \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets", "have \"\\<exists> n. A = nat_to_ce_set n\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<exists>n. A = nat_to_ce_set n", "by (rule nat_to_ce_set_srj)"], ["proof (state)\nthis:\n  \\<exists>n. A = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. \\<not> - univ_ce \\<notin> ce_sets \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. A = nat_to_ce_set n", "obtain n where S2: \"A = nat_to_ce_set n\""], ["proof (prove)\nusing this:\n  \\<exists>n. A = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        A = nat_to_ce_set n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  A = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. \\<not> - univ_ce \\<notin> ce_sets \\<Longrightarrow> False", "from A_def"], ["proof (chain)\npicking this:\n  A = {x. p x \\<in> - univ_ce}", "have \"(n \\<in> A) = (p n \\<in> - univ_ce)\""], ["proof (prove)\nusing this:\n  A = {x. p x \\<in> - univ_ce}\n\ngoal (1 subgoal):\n 1. (n \\<in> A) = (p n \\<in> - univ_ce)", "by auto"], ["proof (state)\nthis:\n  (n \\<in> A) = (p n \\<in> - univ_ce)\n\ngoal (1 subgoal):\n 1. \\<not> - univ_ce \\<notin> ce_sets \\<Longrightarrow> False", "with p_def"], ["proof (chain)\npicking this:\n  p ?x = c_pair ?x ?x\n  (n \\<in> A) = (p n \\<in> - univ_ce)", "have \"(n \\<in> A) = (c_pair n n \\<notin> univ_ce)\""], ["proof (prove)\nusing this:\n  p ?x = c_pair ?x ?x\n  (n \\<in> A) = (p n \\<in> - univ_ce)\n\ngoal (1 subgoal):\n 1. (n \\<in> A) = (c_pair n n \\<notin> univ_ce)", "by auto"], ["proof (state)\nthis:\n  (n \\<in> A) = (c_pair n n \\<notin> univ_ce)\n\ngoal (1 subgoal):\n 1. \\<not> - univ_ce \\<notin> ce_sets \\<Longrightarrow> False", "with univ_ce_def univ_ce_lm_1"], ["proof (chain)\npicking this:\n  univ_ce = {c_pair n x |n x. x \\<in> nat_to_ce_set n}\n  (c_pair ?n ?x \\<in> univ_ce) = (?x \\<in> nat_to_ce_set ?n)\n  (n \\<in> A) = (c_pair n n \\<notin> univ_ce)", "have \"(n \\<in> A) = (n \\<notin> nat_to_ce_set n)\""], ["proof (prove)\nusing this:\n  univ_ce = {c_pair n x |n x. x \\<in> nat_to_ce_set n}\n  (c_pair ?n ?x \\<in> univ_ce) = (?x \\<in> nat_to_ce_set ?n)\n  (n \\<in> A) = (c_pair n n \\<notin> univ_ce)\n\ngoal (1 subgoal):\n 1. (n \\<in> A) = (n \\<notin> nat_to_ce_set n)", "by auto"], ["proof (state)\nthis:\n  (n \\<in> A) = (n \\<notin> nat_to_ce_set n)\n\ngoal (1 subgoal):\n 1. \\<not> - univ_ce \\<notin> ce_sets \\<Longrightarrow> False", "with S2"], ["proof (chain)\npicking this:\n  A = nat_to_ce_set n\n  (n \\<in> A) = (n \\<notin> nat_to_ce_set n)", "have \"(n \\<in> A) = (n \\<notin> A)\""], ["proof (prove)\nusing this:\n  A = nat_to_ce_set n\n  (n \\<in> A) = (n \\<notin> nat_to_ce_set n)\n\ngoal (1 subgoal):\n 1. (n \\<in> A) = (n \\<notin> A)", "by auto"], ["proof (state)\nthis:\n  (n \\<in> A) = (n \\<notin> A)\n\ngoal (1 subgoal):\n 1. \\<not> - univ_ce \\<notin> ce_sets \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  (n \\<in> A) = (n \\<notin> A)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem univ_ce_is_not_comp2: \"\\<not> total_recursive (chf univ_ce)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> total_recursive (chf univ_ce)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. total_recursive (chf univ_ce) \\<Longrightarrow> False", "assume \"total_recursive (chf univ_ce)\""], ["proof (state)\nthis:\n  total_recursive (chf univ_ce)\n\ngoal (1 subgoal):\n 1. total_recursive (chf univ_ce) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  total_recursive (chf univ_ce)", "have \"computable univ_ce\""], ["proof (prove)\nusing this:\n  total_recursive (chf univ_ce)\n\ngoal (1 subgoal):\n 1. computable univ_ce", "by (rule tot_rec_impl_comp)"], ["proof (state)\nthis:\n  computable univ_ce\n\ngoal (1 subgoal):\n 1. total_recursive (chf univ_ce) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  computable univ_ce", "have \"- univ_ce \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  computable univ_ce\n\ngoal (1 subgoal):\n 1. - univ_ce \\<in> ce_sets", "by (unfold computable_def, auto)"], ["proof (state)\nthis:\n  - univ_ce \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. total_recursive (chf univ_ce) \\<Longrightarrow> False", "with univ_ce_is_not_comp1"], ["proof (chain)\npicking this:\n  - univ_ce \\<notin> ce_sets\n  - univ_ce \\<in> ce_sets", "show False"], ["proof (prove)\nusing this:\n  - univ_ce \\<notin> ce_sets\n  - univ_ce \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem univ_ce_is_not_comp3: \"\\<not> computable univ_ce\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> computable univ_ce", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> computable univ_ce \\<Longrightarrow> False", "assume \"\\<not> \\<not> computable univ_ce\""], ["proof (state)\nthis:\n  \\<not> \\<not> computable univ_ce\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> computable univ_ce \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> \\<not> computable univ_ce", "have \"computable univ_ce\""], ["proof (prove)\nusing this:\n  \\<not> \\<not> computable univ_ce\n\ngoal (1 subgoal):\n 1. computable univ_ce", "by auto"], ["proof (state)\nthis:\n  computable univ_ce\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> computable univ_ce \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  computable univ_ce", "have \"total_recursive (chf univ_ce)\""], ["proof (prove)\nusing this:\n  computable univ_ce\n\ngoal (1 subgoal):\n 1. total_recursive (chf univ_ce)", "by (rule comp_impl_tot_rec)"], ["proof (state)\nthis:\n  total_recursive (chf univ_ce)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> computable univ_ce \\<Longrightarrow> False", "with univ_ce_is_not_comp2"], ["proof (chain)\npicking this:\n  \\<not> total_recursive (chf univ_ce)\n  total_recursive (chf univ_ce)", "show False"], ["proof (prove)\nusing this:\n  \\<not> total_recursive (chf univ_ce)\n  total_recursive (chf univ_ce)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>s-1-1 theorem, one-one and many-one reducibilities\\<close>"], ["", "definition\n  index_of_r_to_l :: nat where\n  \"index_of_r_to_l =\n  pair_by_index\n    (pair_by_index index_of_c_fst (comp_by_index index_of_c_fst index_of_c_snd))\n    (comp_by_index index_of_c_snd index_of_c_snd)\""], ["", "lemma index_of_r_to_l_lm: \"nat_to_pr index_of_r_to_l (c_pair x (c_pair y z)) = c_pair (c_pair x y) z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr index_of_r_to_l (c_pair x (c_pair y z)) =\n    c_pair (c_pair x y) z", "apply(unfold index_of_r_to_l_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr\n     (pair_by_index\n       (pair_by_index index_of_c_fst\n         (comp_by_index index_of_c_fst index_of_c_snd))\n       (comp_by_index index_of_c_snd index_of_c_snd))\n     (c_pair x (c_pair y z)) =\n    c_pair (c_pair x y) z", "apply(simp add: pair_by_index_main)"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_f_pair\n     (c_f_pair (nat_to_pr index_of_c_fst)\n       (nat_to_pr (comp_by_index index_of_c_fst index_of_c_snd)))\n     (nat_to_pr (comp_by_index index_of_c_snd index_of_c_snd))\n     (c_pair x (c_pair y z)) =\n    c_pair (c_pair x y) z", "apply(unfold c_f_pair_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_pair\n     (c_pair (nat_to_pr index_of_c_fst (c_pair x (c_pair y z)))\n       (nat_to_pr (comp_by_index index_of_c_fst index_of_c_snd)\n         (c_pair x (c_pair y z))))\n     (nat_to_pr (comp_by_index index_of_c_snd index_of_c_snd)\n       (c_pair x (c_pair y z))) =\n    c_pair (c_pair x y) z", "apply(simp add: index_of_c_fst_main)"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_pair\n     (c_pair x\n       (nat_to_pr (comp_by_index index_of_c_fst index_of_c_snd)\n         (c_pair x (c_pair y z))))\n     (nat_to_pr (comp_by_index index_of_c_snd index_of_c_snd)\n       (c_pair x (c_pair y z))) =\n    c_pair (c_pair x y) z", "apply(simp add: comp_by_index_main)"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_pair\n     (c_pair x\n       (nat_to_pr index_of_c_fst\n         (nat_to_pr index_of_c_snd (c_pair x (c_pair y z)))))\n     (nat_to_pr index_of_c_snd\n       (nat_to_pr index_of_c_snd (c_pair x (c_pair y z)))) =\n    c_pair (c_pair x y) z", "apply(simp add: index_of_c_fst_main)"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_pair\n     (c_pair x (c_fst (nat_to_pr index_of_c_snd (c_pair x (c_pair y z)))))\n     (nat_to_pr index_of_c_snd\n       (nat_to_pr index_of_c_snd (c_pair x (c_pair y z)))) =\n    c_pair (c_pair x y) z", "apply(simp add: index_of_c_snd_main)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  s_ce :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\" where\n  \"s_ce == (\\<lambda> e x. s1_1 (comp_by_index e index_of_r_to_l) x)\""], ["", "lemma s_ce_is_pr: \"s_ce \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s_ce \\<in> PrimRec2", "unfolding s_ce_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>e. s1_1 (comp_by_index e index_of_r_to_l)) \\<in> PrimRec2", "using comp_by_index_is_pr s1_1_is_pr"], ["proof (prove)\nusing this:\n  comp_by_index \\<in> PrimRec2\n  s1_1 \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>e. s1_1 (comp_by_index e index_of_r_to_l)) \\<in> PrimRec2", "by prec"], ["", "lemma s_ce_inj: \"s_ce e1 x1 = s_ce e2 x2 \\<Longrightarrow> e1=e2 \\<and> x1=x2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s_ce e1 x1 = s_ce e2 x2 \\<Longrightarrow> e1 = e2 \\<and> x1 = x2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s_ce e1 x1 = s_ce e2 x2 \\<Longrightarrow> e1 = e2 \\<and> x1 = x2", "let ?n1 = \"index_of_r_to_l\""], ["proof (state)\ngoal (1 subgoal):\n 1. s_ce e1 x1 = s_ce e2 x2 \\<Longrightarrow> e1 = e2 \\<and> x1 = x2", "assume \"s_ce e1 x1 = s_ce e2 x2\""], ["proof (state)\nthis:\n  s_ce e1 x1 = s_ce e2 x2\n\ngoal (1 subgoal):\n 1. s_ce e1 x1 = s_ce e2 x2 \\<Longrightarrow> e1 = e2 \\<and> x1 = x2", "then"], ["proof (chain)\npicking this:\n  s_ce e1 x1 = s_ce e2 x2", "have \"s1_1 (comp_by_index e1 ?n1) x1 = s1_1 (comp_by_index e2 ?n1) x2\""], ["proof (prove)\nusing this:\n  s_ce e1 x1 = s_ce e2 x2\n\ngoal (1 subgoal):\n 1. s1_1 (comp_by_index e1 index_of_r_to_l) x1 =\n    s1_1 (comp_by_index e2 index_of_r_to_l) x2", "by (unfold s_ce_def)"], ["proof (state)\nthis:\n  s1_1 (comp_by_index e1 index_of_r_to_l) x1 =\n  s1_1 (comp_by_index e2 index_of_r_to_l) x2\n\ngoal (1 subgoal):\n 1. s_ce e1 x1 = s_ce e2 x2 \\<Longrightarrow> e1 = e2 \\<and> x1 = x2", "then"], ["proof (chain)\npicking this:\n  s1_1 (comp_by_index e1 index_of_r_to_l) x1 =\n  s1_1 (comp_by_index e2 index_of_r_to_l) x2", "have L1: \"comp_by_index e1 ?n1 = comp_by_index e2 ?n1 \\<and> x1=x2\""], ["proof (prove)\nusing this:\n  s1_1 (comp_by_index e1 index_of_r_to_l) x1 =\n  s1_1 (comp_by_index e2 index_of_r_to_l) x2\n\ngoal (1 subgoal):\n 1. comp_by_index e1 index_of_r_to_l =\n    comp_by_index e2 index_of_r_to_l \\<and>\n    x1 = x2", "by (rule s1_1_inj)"], ["proof (state)\nthis:\n  comp_by_index e1 index_of_r_to_l = comp_by_index e2 index_of_r_to_l \\<and>\n  x1 = x2\n\ngoal (1 subgoal):\n 1. s_ce e1 x1 = s_ce e2 x2 \\<Longrightarrow> e1 = e2 \\<and> x1 = x2", "from L1"], ["proof (chain)\npicking this:\n  comp_by_index e1 index_of_r_to_l = comp_by_index e2 index_of_r_to_l \\<and>\n  x1 = x2", "have \"comp_by_index e1 ?n1 = comp_by_index e2 ?n1\""], ["proof (prove)\nusing this:\n  comp_by_index e1 index_of_r_to_l = comp_by_index e2 index_of_r_to_l \\<and>\n  x1 = x2\n\ngoal (1 subgoal):\n 1. comp_by_index e1 index_of_r_to_l = comp_by_index e2 index_of_r_to_l", ".."], ["proof (state)\nthis:\n  comp_by_index e1 index_of_r_to_l = comp_by_index e2 index_of_r_to_l\n\ngoal (1 subgoal):\n 1. s_ce e1 x1 = s_ce e2 x2 \\<Longrightarrow> e1 = e2 \\<and> x1 = x2", "then"], ["proof (chain)\npicking this:\n  comp_by_index e1 index_of_r_to_l = comp_by_index e2 index_of_r_to_l", "have \"e1=e2\""], ["proof (prove)\nusing this:\n  comp_by_index e1 index_of_r_to_l = comp_by_index e2 index_of_r_to_l\n\ngoal (1 subgoal):\n 1. e1 = e2", "by (rule comp_by_index_inj1)"], ["proof (state)\nthis:\n  e1 = e2\n\ngoal (1 subgoal):\n 1. s_ce e1 x1 = s_ce e2 x2 \\<Longrightarrow> e1 = e2 \\<and> x1 = x2", "moreover"], ["proof (state)\nthis:\n  e1 = e2\n\ngoal (1 subgoal):\n 1. s_ce e1 x1 = s_ce e2 x2 \\<Longrightarrow> e1 = e2 \\<and> x1 = x2", "from L1"], ["proof (chain)\npicking this:\n  comp_by_index e1 index_of_r_to_l = comp_by_index e2 index_of_r_to_l \\<and>\n  x1 = x2", "have \"x1=x2\""], ["proof (prove)\nusing this:\n  comp_by_index e1 index_of_r_to_l = comp_by_index e2 index_of_r_to_l \\<and>\n  x1 = x2\n\ngoal (1 subgoal):\n 1. x1 = x2", "by auto"], ["proof (state)\nthis:\n  x1 = x2\n\ngoal (1 subgoal):\n 1. s_ce e1 x1 = s_ce e2 x2 \\<Longrightarrow> e1 = e2 \\<and> x1 = x2", "ultimately"], ["proof (chain)\npicking this:\n  e1 = e2\n  x1 = x2", "show ?thesis"], ["proof (prove)\nusing this:\n  e1 = e2\n  x1 = x2\n\ngoal (1 subgoal):\n 1. e1 = e2 \\<and> x1 = x2", "by auto"], ["proof (state)\nthis:\n  e1 = e2 \\<and> x1 = x2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma s_ce_inj1: \"s_ce e1 x = s_ce e2 x \\<Longrightarrow> e1=e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s_ce e1 x = s_ce e2 x \\<Longrightarrow> e1 = e2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s_ce e1 x = s_ce e2 x \\<Longrightarrow> e1 = e2", "assume \"s_ce e1 x = s_ce e2 x\""], ["proof (state)\nthis:\n  s_ce e1 x = s_ce e2 x\n\ngoal (1 subgoal):\n 1. s_ce e1 x = s_ce e2 x \\<Longrightarrow> e1 = e2", "then"], ["proof (chain)\npicking this:\n  s_ce e1 x = s_ce e2 x", "have \"e1=e2 \\<and> x=x\""], ["proof (prove)\nusing this:\n  s_ce e1 x = s_ce e2 x\n\ngoal (1 subgoal):\n 1. e1 = e2 \\<and> x = x", "by (rule s_ce_inj)"], ["proof (state)\nthis:\n  e1 = e2 \\<and> x = x\n\ngoal (1 subgoal):\n 1. s_ce e1 x = s_ce e2 x \\<Longrightarrow> e1 = e2", "then"], ["proof (chain)\npicking this:\n  e1 = e2 \\<and> x = x", "show \"e1=e2\""], ["proof (prove)\nusing this:\n  e1 = e2 \\<and> x = x\n\ngoal (1 subgoal):\n 1. e1 = e2", "by auto"], ["proof (state)\nthis:\n  e1 = e2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma s_ce_inj2: \"s_ce e x1 = s_ce e x2 \\<Longrightarrow> x1=x2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s_ce e x1 = s_ce e x2 \\<Longrightarrow> x1 = x2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s_ce e x1 = s_ce e x2 \\<Longrightarrow> x1 = x2", "assume \"s_ce e x1 = s_ce e x2\""], ["proof (state)\nthis:\n  s_ce e x1 = s_ce e x2\n\ngoal (1 subgoal):\n 1. s_ce e x1 = s_ce e x2 \\<Longrightarrow> x1 = x2", "then"], ["proof (chain)\npicking this:\n  s_ce e x1 = s_ce e x2", "have \"e=e \\<and> x1=x2\""], ["proof (prove)\nusing this:\n  s_ce e x1 = s_ce e x2\n\ngoal (1 subgoal):\n 1. e = e \\<and> x1 = x2", "by (rule s_ce_inj)"], ["proof (state)\nthis:\n  e = e \\<and> x1 = x2\n\ngoal (1 subgoal):\n 1. s_ce e x1 = s_ce e x2 \\<Longrightarrow> x1 = x2", "then"], ["proof (chain)\npicking this:\n  e = e \\<and> x1 = x2", "show \"x1=x2\""], ["proof (prove)\nusing this:\n  e = e \\<and> x1 = x2\n\ngoal (1 subgoal):\n 1. x1 = x2", "by auto"], ["proof (state)\nthis:\n  x1 = x2\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem s1_1_th1: \"\\<forall> n x y. ((nat_to_pr n) (c_pair x y)) = (nat_to_pr (s1_1 n x)) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n x y. nat_to_pr n (c_pair x y) = nat_to_pr (s1_1 n x) y", "proof (rule allI, rule allI, rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n x y. nat_to_pr n (c_pair x y) = nat_to_pr (s1_1 n x) y", "fix n x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n x y. nat_to_pr n (c_pair x y) = nat_to_pr (s1_1 n x) y", "show \"nat_to_pr n (c_pair x y) = nat_to_pr (s1_1 n x) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr n (c_pair x y) = nat_to_pr (s1_1 n x) y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_pr n (c_pair x y) = nat_to_pr (s1_1 n x) y", "have \"(\\<lambda> y. (nat_to_pr n) (c_pair x y)) = nat_to_pr (s1_1 n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>y. nat_to_pr n (c_pair x y)) = nat_to_pr (s1_1 n x)", "by (rule s1_1_th)"], ["proof (state)\nthis:\n  (\\<lambda>y. nat_to_pr n (c_pair x y)) = nat_to_pr (s1_1 n x)\n\ngoal (1 subgoal):\n 1. nat_to_pr n (c_pair x y) = nat_to_pr (s1_1 n x) y", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>y. nat_to_pr n (c_pair x y)) = nat_to_pr (s1_1 n x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>y. nat_to_pr n (c_pair x y)) = nat_to_pr (s1_1 n x)\n\ngoal (1 subgoal):\n 1. nat_to_pr n (c_pair x y) = nat_to_pr (s1_1 n x) y", "by (simp add: fun_eq_iff)"], ["proof (state)\nthis:\n  nat_to_pr n (c_pair x y) = nat_to_pr (s1_1 n x) y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat_to_pr n (c_pair x y) = nat_to_pr (s1_1 n x) y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma s_lm: \"(nat_to_pr (s_ce e x)) (c_pair y z) = (nat_to_pr e) (c_pair (c_pair x y) z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (s_ce e x) (c_pair y z) = nat_to_pr e (c_pair (c_pair x y) z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_pr (s_ce e x) (c_pair y z) = nat_to_pr e (c_pair (c_pair x y) z)", "let ?n1 = \"index_of_r_to_l\""], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_pr (s_ce e x) (c_pair y z) = nat_to_pr e (c_pair (c_pair x y) z)", "have \"(nat_to_pr (s_ce e x)) (c_pair y z) = nat_to_pr (s1_1 (comp_by_index e ?n1) x) (c_pair y z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (s_ce e x) (c_pair y z) =\n    nat_to_pr (s1_1 (comp_by_index e index_of_r_to_l) x) (c_pair y z)", "by (unfold s_ce_def, simp)"], ["proof (state)\nthis:\n  nat_to_pr (s_ce e x) (c_pair y z) =\n  nat_to_pr (s1_1 (comp_by_index e index_of_r_to_l) x) (c_pair y z)\n\ngoal (1 subgoal):\n 1. nat_to_pr (s_ce e x) (c_pair y z) = nat_to_pr e (c_pair (c_pair x y) z)", "also"], ["proof (state)\nthis:\n  nat_to_pr (s_ce e x) (c_pair y z) =\n  nat_to_pr (s1_1 (comp_by_index e index_of_r_to_l) x) (c_pair y z)\n\ngoal (1 subgoal):\n 1. nat_to_pr (s_ce e x) (c_pair y z) = nat_to_pr e (c_pair (c_pair x y) z)", "have \"\\<dots> = (nat_to_pr (comp_by_index e ?n1)) (c_pair x (c_pair y z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (s1_1 (comp_by_index e index_of_r_to_l) x) (c_pair y z) =\n    nat_to_pr (comp_by_index e index_of_r_to_l) (c_pair x (c_pair y z))", "by (simp add: s1_1_th1)"], ["proof (state)\nthis:\n  nat_to_pr (s1_1 (comp_by_index e index_of_r_to_l) x) (c_pair y z) =\n  nat_to_pr (comp_by_index e index_of_r_to_l) (c_pair x (c_pair y z))\n\ngoal (1 subgoal):\n 1. nat_to_pr (s_ce e x) (c_pair y z) = nat_to_pr e (c_pair (c_pair x y) z)", "also"], ["proof (state)\nthis:\n  nat_to_pr (s1_1 (comp_by_index e index_of_r_to_l) x) (c_pair y z) =\n  nat_to_pr (comp_by_index e index_of_r_to_l) (c_pair x (c_pair y z))\n\ngoal (1 subgoal):\n 1. nat_to_pr (s_ce e x) (c_pair y z) = nat_to_pr e (c_pair (c_pair x y) z)", "have \"\\<dots> = (nat_to_pr e) ((nat_to_pr ?n1) (c_pair x (c_pair y z)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (comp_by_index e index_of_r_to_l) (c_pair x (c_pair y z)) =\n    nat_to_pr e (nat_to_pr index_of_r_to_l (c_pair x (c_pair y z)))", "by (simp add: comp_by_index_main)"], ["proof (state)\nthis:\n  nat_to_pr (comp_by_index e index_of_r_to_l) (c_pair x (c_pair y z)) =\n  nat_to_pr e (nat_to_pr index_of_r_to_l (c_pair x (c_pair y z)))\n\ngoal (1 subgoal):\n 1. nat_to_pr (s_ce e x) (c_pair y z) = nat_to_pr e (c_pair (c_pair x y) z)", "finally"], ["proof (chain)\npicking this:\n  nat_to_pr (s_ce e x) (c_pair y z) =\n  nat_to_pr e (nat_to_pr index_of_r_to_l (c_pair x (c_pair y z)))", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_pr (s_ce e x) (c_pair y z) =\n  nat_to_pr e (nat_to_pr index_of_r_to_l (c_pair x (c_pair y z)))\n\ngoal (1 subgoal):\n 1. nat_to_pr (s_ce e x) (c_pair y z) = nat_to_pr e (c_pair (c_pair x y) z)", "by (simp add: index_of_r_to_l_lm)"], ["proof (state)\nthis:\n  nat_to_pr (s_ce e x) (c_pair y z) = nat_to_pr e (c_pair (c_pair x y) z)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem s_ce_1_1_th: \"(c_pair x y \\<in> nat_to_ce_set e) = (y \\<in> nat_to_ce_set (s_ce e x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c_pair x y \\<in> nat_to_ce_set e) = (y \\<in> nat_to_ce_set (s_ce e x))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. c_pair x y \\<in> nat_to_ce_set e \\<Longrightarrow>\n    y \\<in> nat_to_ce_set (s_ce e x)\n 2. y \\<in> nat_to_ce_set (s_ce e x) \\<Longrightarrow>\n    c_pair x y \\<in> nat_to_ce_set e", "assume A: \"c_pair x y \\<in> nat_to_ce_set e\""], ["proof (state)\nthis:\n  c_pair x y \\<in> nat_to_ce_set e\n\ngoal (2 subgoals):\n 1. c_pair x y \\<in> nat_to_ce_set e \\<Longrightarrow>\n    y \\<in> nat_to_ce_set (s_ce e x)\n 2. y \\<in> nat_to_ce_set (s_ce e x) \\<Longrightarrow>\n    c_pair x y \\<in> nat_to_ce_set e", "then"], ["proof (chain)\npicking this:\n  c_pair x y \\<in> nat_to_ce_set e", "obtain z where L1: \"(nat_to_pr e) (c_pair (c_pair x y) z) = 0\""], ["proof (prove)\nusing this:\n  c_pair x y \\<in> nat_to_ce_set e\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        nat_to_pr e (c_pair (c_pair x y) z) = 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: nat_to_ce_set_lm_1)"], ["proof (state)\nthis:\n  nat_to_pr e (c_pair (c_pair x y) z) = 0\n\ngoal (2 subgoals):\n 1. c_pair x y \\<in> nat_to_ce_set e \\<Longrightarrow>\n    y \\<in> nat_to_ce_set (s_ce e x)\n 2. y \\<in> nat_to_ce_set (s_ce e x) \\<Longrightarrow>\n    c_pair x y \\<in> nat_to_ce_set e", "have \"(nat_to_pr (s_ce e x)) (c_pair y z) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (s_ce e x) (c_pair y z) = 0", "by (simp add: s_lm L1)"], ["proof (state)\nthis:\n  nat_to_pr (s_ce e x) (c_pair y z) = 0\n\ngoal (2 subgoals):\n 1. c_pair x y \\<in> nat_to_ce_set e \\<Longrightarrow>\n    y \\<in> nat_to_ce_set (s_ce e x)\n 2. y \\<in> nat_to_ce_set (s_ce e x) \\<Longrightarrow>\n    c_pair x y \\<in> nat_to_ce_set e", "with nat_to_ce_set_lm_1"], ["proof (chain)\npicking this:\n  nat_to_ce_set ?n = {x. \\<exists>y. nat_to_pr ?n (c_pair x y) = 0}\n  nat_to_pr (s_ce e x) (c_pair y z) = 0", "show \"y \\<in> nat_to_ce_set (s_ce e x)\""], ["proof (prove)\nusing this:\n  nat_to_ce_set ?n = {x. \\<exists>y. nat_to_pr ?n (c_pair x y) = 0}\n  nat_to_pr (s_ce e x) (c_pair y z) = 0\n\ngoal (1 subgoal):\n 1. y \\<in> nat_to_ce_set (s_ce e x)", "by auto"], ["proof (state)\nthis:\n  y \\<in> nat_to_ce_set (s_ce e x)\n\ngoal (1 subgoal):\n 1. y \\<in> nat_to_ce_set (s_ce e x) \\<Longrightarrow>\n    c_pair x y \\<in> nat_to_ce_set e", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> nat_to_ce_set (s_ce e x) \\<Longrightarrow>\n    c_pair x y \\<in> nat_to_ce_set e", "assume A: \"y \\<in> nat_to_ce_set (s_ce e x)\""], ["proof (state)\nthis:\n  y \\<in> nat_to_ce_set (s_ce e x)\n\ngoal (1 subgoal):\n 1. y \\<in> nat_to_ce_set (s_ce e x) \\<Longrightarrow>\n    c_pair x y \\<in> nat_to_ce_set e", "then"], ["proof (chain)\npicking this:\n  y \\<in> nat_to_ce_set (s_ce e x)", "obtain z where L1: \"(nat_to_pr (s_ce e x)) (c_pair y z) = 0\""], ["proof (prove)\nusing this:\n  y \\<in> nat_to_ce_set (s_ce e x)\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        nat_to_pr (s_ce e x) (c_pair y z) = 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: nat_to_ce_set_lm_1)"], ["proof (state)\nthis:\n  nat_to_pr (s_ce e x) (c_pair y z) = 0\n\ngoal (1 subgoal):\n 1. y \\<in> nat_to_ce_set (s_ce e x) \\<Longrightarrow>\n    c_pair x y \\<in> nat_to_ce_set e", "then"], ["proof (chain)\npicking this:\n  nat_to_pr (s_ce e x) (c_pair y z) = 0", "have \"(nat_to_pr e) (c_pair (c_pair x y) z) = 0\""], ["proof (prove)\nusing this:\n  nat_to_pr (s_ce e x) (c_pair y z) = 0\n\ngoal (1 subgoal):\n 1. nat_to_pr e (c_pair (c_pair x y) z) = 0", "by (simp add: s_lm)"], ["proof (state)\nthis:\n  nat_to_pr e (c_pair (c_pair x y) z) = 0\n\ngoal (1 subgoal):\n 1. y \\<in> nat_to_ce_set (s_ce e x) \\<Longrightarrow>\n    c_pair x y \\<in> nat_to_ce_set e", "with nat_to_ce_set_lm_1"], ["proof (chain)\npicking this:\n  nat_to_ce_set ?n = {x. \\<exists>y. nat_to_pr ?n (c_pair x y) = 0}\n  nat_to_pr e (c_pair (c_pair x y) z) = 0", "show \"c_pair x y \\<in> nat_to_ce_set e\""], ["proof (prove)\nusing this:\n  nat_to_ce_set ?n = {x. \\<exists>y. nat_to_pr ?n (c_pair x y) = 0}\n  nat_to_pr e (c_pair (c_pair x y) z) = 0\n\ngoal (1 subgoal):\n 1. c_pair x y \\<in> nat_to_ce_set e", "by auto"], ["proof (state)\nthis:\n  c_pair x y \\<in> nat_to_ce_set e\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  one_reducible_to_via :: \"(nat set) \\<Rightarrow> (nat set) \\<Rightarrow> (nat \\<Rightarrow> nat) \\<Rightarrow> bool\" where\n  \"one_reducible_to_via = (\\<lambda> A B f. total_recursive f \\<and> inj f \\<and> (\\<forall> x. (x \\<in> A) = (f x \\<in> B)))\""], ["", "definition\n  one_reducible_to :: \"(nat set) \\<Rightarrow> (nat set) \\<Rightarrow> bool\" where\n  \"one_reducible_to = (\\<lambda> A B. \\<exists> f. one_reducible_to_via A B f)\""], ["", "definition\n  many_reducible_to_via :: \"(nat set) \\<Rightarrow> (nat set) \\<Rightarrow> (nat \\<Rightarrow> nat) \\<Rightarrow> bool\" where\n  \"many_reducible_to_via = (\\<lambda> A B f. total_recursive f \\<and> (\\<forall> x. (x \\<in> A) = (f x \\<in> B)))\""], ["", "definition\n  many_reducible_to :: \"(nat set) \\<Rightarrow> (nat set) \\<Rightarrow> bool\" where\n  \"many_reducible_to = (\\<lambda> A B. \\<exists> f. many_reducible_to_via A B f)\""], ["", "lemma one_reducible_to_via_trans: \"\\<lbrakk> one_reducible_to_via A B f; one_reducible_to_via B C g \\<rbrakk> \\<Longrightarrow> one_reducible_to_via A C (g o f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to_via A B f; one_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to_via A C (g \\<circ> f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to_via A B f; one_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to_via A C (g \\<circ> f)", "assume A1: \"one_reducible_to_via A B f\""], ["proof (state)\nthis:\n  one_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to_via A B f; one_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to_via A C (g \\<circ> f)", "assume A2: \"one_reducible_to_via B C g\""], ["proof (state)\nthis:\n  one_reducible_to_via B C g\n\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to_via A B f; one_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to_via A C (g \\<circ> f)", "from A1"], ["proof (chain)\npicking this:\n  one_reducible_to_via A B f", "have f_tr: \"total_recursive f\""], ["proof (prove)\nusing this:\n  one_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. total_recursive f", "by (unfold one_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  total_recursive f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to_via A B f; one_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to_via A C (g \\<circ> f)", "from A1"], ["proof (chain)\npicking this:\n  one_reducible_to_via A B f", "have f_inj: \"inj f\""], ["proof (prove)\nusing this:\n  one_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. inj f", "by (unfold one_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  inj f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to_via A B f; one_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to_via A C (g \\<circ> f)", "from A1"], ["proof (chain)\npicking this:\n  one_reducible_to_via A B f", "have L1: \"\\<forall> x. (x \\<in> A) = (f x \\<in> B)\""], ["proof (prove)\nusing this:\n  one_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. \\<forall>x. (x \\<in> A) = (f x \\<in> B)", "by (unfold one_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  \\<forall>x. (x \\<in> A) = (f x \\<in> B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to_via A B f; one_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to_via A C (g \\<circ> f)", "from A2"], ["proof (chain)\npicking this:\n  one_reducible_to_via B C g", "have g_tr: \"total_recursive g\""], ["proof (prove)\nusing this:\n  one_reducible_to_via B C g\n\ngoal (1 subgoal):\n 1. total_recursive g", "by (unfold one_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  total_recursive g\n\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to_via A B f; one_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to_via A C (g \\<circ> f)", "from A2"], ["proof (chain)\npicking this:\n  one_reducible_to_via B C g", "have g_inj: \"inj g\""], ["proof (prove)\nusing this:\n  one_reducible_to_via B C g\n\ngoal (1 subgoal):\n 1. inj g", "by (unfold one_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  inj g\n\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to_via A B f; one_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to_via A C (g \\<circ> f)", "from A2"], ["proof (chain)\npicking this:\n  one_reducible_to_via B C g", "have L2: \"\\<forall> x. (x \\<in> B) = (g x \\<in> C)\""], ["proof (prove)\nusing this:\n  one_reducible_to_via B C g\n\ngoal (1 subgoal):\n 1. \\<forall>x. (x \\<in> B) = (g x \\<in> C)", "by (unfold one_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  \\<forall>x. (x \\<in> B) = (g x \\<in> C)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to_via A B f; one_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to_via A C (g \\<circ> f)", "from g_tr f_tr"], ["proof (chain)\npicking this:\n  total_recursive g\n  total_recursive f", "have fg_tr: \"total_recursive (g o f)\""], ["proof (prove)\nusing this:\n  total_recursive g\n  total_recursive f\n\ngoal (1 subgoal):\n 1. total_recursive (g \\<circ> f)", "by (rule comp_tot_rec)"], ["proof (state)\nthis:\n  total_recursive (g \\<circ> f)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to_via A B f; one_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to_via A C (g \\<circ> f)", "from g_inj f_inj"], ["proof (chain)\npicking this:\n  inj g\n  inj f", "have fg_inj: \"inj (g o f)\""], ["proof (prove)\nusing this:\n  inj g\n  inj f\n\ngoal (1 subgoal):\n 1. inj (g \\<circ> f)", "by (rule inj_compose)"], ["proof (state)\nthis:\n  inj (g \\<circ> f)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to_via A B f; one_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to_via A C (g \\<circ> f)", "from L1 L2"], ["proof (chain)\npicking this:\n  \\<forall>x. (x \\<in> A) = (f x \\<in> B)\n  \\<forall>x. (x \\<in> B) = (g x \\<in> C)", "have L3: \"(\\<forall> x. (x \\<in> A) = ((g o f) x \\<in> C))\""], ["proof (prove)\nusing this:\n  \\<forall>x. (x \\<in> A) = (f x \\<in> B)\n  \\<forall>x. (x \\<in> B) = (g x \\<in> C)\n\ngoal (1 subgoal):\n 1. \\<forall>x. (x \\<in> A) = ((g \\<circ> f) x \\<in> C)", "by auto"], ["proof (state)\nthis:\n  \\<forall>x. (x \\<in> A) = ((g \\<circ> f) x \\<in> C)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to_via A B f; one_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to_via A C (g \\<circ> f)", "with fg_tr fg_inj"], ["proof (chain)\npicking this:\n  total_recursive (g \\<circ> f)\n  inj (g \\<circ> f)\n  \\<forall>x. (x \\<in> A) = ((g \\<circ> f) x \\<in> C)", "show ?thesis"], ["proof (prove)\nusing this:\n  total_recursive (g \\<circ> f)\n  inj (g \\<circ> f)\n  \\<forall>x. (x \\<in> A) = ((g \\<circ> f) x \\<in> C)\n\ngoal (1 subgoal):\n 1. one_reducible_to_via A C (g \\<circ> f)", "by (unfold one_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  one_reducible_to_via A C (g \\<circ> f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_reducible_to_trans: \"\\<lbrakk> one_reducible_to A B; one_reducible_to B C \\<rbrakk> \\<Longrightarrow> one_reducible_to A C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to A B; one_reducible_to B C\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to A C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to A B; one_reducible_to B C\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to A C", "assume \"one_reducible_to A B\""], ["proof (state)\nthis:\n  one_reducible_to A B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to A B; one_reducible_to B C\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to A C", "then"], ["proof (chain)\npicking this:\n  one_reducible_to A B", "obtain f where A1: \"one_reducible_to_via A B f\""], ["proof (prove)\nusing this:\n  one_reducible_to A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        one_reducible_to_via A B f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding one_reducible_to_def"], ["proof (prove)\nusing this:\n  Ex (one_reducible_to_via A B)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        one_reducible_to_via A B f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  one_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to A B; one_reducible_to B C\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to A C", "assume \"one_reducible_to B C\""], ["proof (state)\nthis:\n  one_reducible_to B C\n\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to A B; one_reducible_to B C\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to A C", "then"], ["proof (chain)\npicking this:\n  one_reducible_to B C", "obtain g where A2: \"one_reducible_to_via B C g\""], ["proof (prove)\nusing this:\n  one_reducible_to B C\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        one_reducible_to_via B C g \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding one_reducible_to_def"], ["proof (prove)\nusing this:\n  Ex (one_reducible_to_via B C)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        one_reducible_to_via B C g \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  one_reducible_to_via B C g\n\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to A B; one_reducible_to B C\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to A C", "from A1 A2"], ["proof (chain)\npicking this:\n  one_reducible_to_via A B f\n  one_reducible_to_via B C g", "have \"one_reducible_to_via A C (g o f)\""], ["proof (prove)\nusing this:\n  one_reducible_to_via A B f\n  one_reducible_to_via B C g\n\ngoal (1 subgoal):\n 1. one_reducible_to_via A C (g \\<circ> f)", "by (rule one_reducible_to_via_trans)"], ["proof (state)\nthis:\n  one_reducible_to_via A C (g \\<circ> f)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>one_reducible_to A B; one_reducible_to B C\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to A C", "then"], ["proof (chain)\npicking this:\n  one_reducible_to_via A C (g \\<circ> f)", "show ?thesis"], ["proof (prove)\nusing this:\n  one_reducible_to_via A C (g \\<circ> f)\n\ngoal (1 subgoal):\n 1. one_reducible_to A C", "unfolding one_reducible_to_def"], ["proof (prove)\nusing this:\n  one_reducible_to_via A C (g \\<circ> f)\n\ngoal (1 subgoal):\n 1. Ex (one_reducible_to_via A C)", "by auto"], ["proof (state)\nthis:\n  one_reducible_to A C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_reducible_to_via_refl: \"one_reducible_to_via A A (\\<lambda> x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_reducible_to_via A A (\\<lambda>x. x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. one_reducible_to_via A A (\\<lambda>x. x)", "have is_pr: \"(\\<lambda> x. x) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x) \\<in> PrimRec1", "by (rule pr_id1_1)"], ["proof (state)\nthis:\n  (\\<lambda>x. x) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. one_reducible_to_via A A (\\<lambda>x. x)", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. x) \\<in> PrimRec1", "have is_tr: \"total_recursive (\\<lambda> x. x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. x) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. total_recursive (\\<lambda>x. x)", "by (rule pr_is_total_rec)"], ["proof (state)\nthis:\n  total_recursive (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. one_reducible_to_via A A (\\<lambda>x. x)", "have is_inj: \"inj (\\<lambda> x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj (\\<lambda>x. x)", "by simp"], ["proof (state)\nthis:\n  inj (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. one_reducible_to_via A A (\\<lambda>x. x)", "have L1: \"\\<forall> x. (x \\<in> A) = (((\\<lambda> x. x) x) \\<in> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. (x \\<in> A) = (x \\<in> A)", "by simp"], ["proof (state)\nthis:\n  \\<forall>x. (x \\<in> A) = (x \\<in> A)\n\ngoal (1 subgoal):\n 1. one_reducible_to_via A A (\\<lambda>x. x)", "with is_tr is_inj"], ["proof (chain)\npicking this:\n  total_recursive (\\<lambda>x. x)\n  inj (\\<lambda>x. x)\n  \\<forall>x. (x \\<in> A) = (x \\<in> A)", "show ?thesis"], ["proof (prove)\nusing this:\n  total_recursive (\\<lambda>x. x)\n  inj (\\<lambda>x. x)\n  \\<forall>x. (x \\<in> A) = (x \\<in> A)\n\ngoal (1 subgoal):\n 1. one_reducible_to_via A A (\\<lambda>x. x)", "by (unfold one_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  one_reducible_to_via A A (\\<lambda>x. x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_reducible_to_refl: \"one_reducible_to A A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_reducible_to A A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. one_reducible_to A A", "have \"one_reducible_to_via A A (\\<lambda> x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_reducible_to_via A A (\\<lambda>x. x)", "by (rule one_reducible_to_via_refl)"], ["proof (state)\nthis:\n  one_reducible_to_via A A (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. one_reducible_to A A", "then"], ["proof (chain)\npicking this:\n  one_reducible_to_via A A (\\<lambda>x. x)", "show ?thesis"], ["proof (prove)\nusing this:\n  one_reducible_to_via A A (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. one_reducible_to A A", "by (unfold one_reducible_to_def, auto)"], ["proof (state)\nthis:\n  one_reducible_to A A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma many_reducible_to_via_trans: \"\\<lbrakk> many_reducible_to_via A B f; many_reducible_to_via B C g \\<rbrakk> \\<Longrightarrow> many_reducible_to_via A C (g o f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to_via A B f;\n     many_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> many_reducible_to_via A C (g \\<circ> f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to_via A B f;\n     many_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> many_reducible_to_via A C (g \\<circ> f)", "assume A1: \"many_reducible_to_via A B f\""], ["proof (state)\nthis:\n  many_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to_via A B f;\n     many_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> many_reducible_to_via A C (g \\<circ> f)", "assume A2: \"many_reducible_to_via B C g\""], ["proof (state)\nthis:\n  many_reducible_to_via B C g\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to_via A B f;\n     many_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> many_reducible_to_via A C (g \\<circ> f)", "from A1"], ["proof (chain)\npicking this:\n  many_reducible_to_via A B f", "have f_tr: \"total_recursive f\""], ["proof (prove)\nusing this:\n  many_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. total_recursive f", "by (unfold many_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  total_recursive f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to_via A B f;\n     many_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> many_reducible_to_via A C (g \\<circ> f)", "from A1"], ["proof (chain)\npicking this:\n  many_reducible_to_via A B f", "have L1: \"\\<forall> x. (x \\<in> A) = (f x \\<in> B)\""], ["proof (prove)\nusing this:\n  many_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. \\<forall>x. (x \\<in> A) = (f x \\<in> B)", "by (unfold many_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  \\<forall>x. (x \\<in> A) = (f x \\<in> B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to_via A B f;\n     many_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> many_reducible_to_via A C (g \\<circ> f)", "from A2"], ["proof (chain)\npicking this:\n  many_reducible_to_via B C g", "have g_tr: \"total_recursive g\""], ["proof (prove)\nusing this:\n  many_reducible_to_via B C g\n\ngoal (1 subgoal):\n 1. total_recursive g", "by (unfold many_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  total_recursive g\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to_via A B f;\n     many_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> many_reducible_to_via A C (g \\<circ> f)", "from A2"], ["proof (chain)\npicking this:\n  many_reducible_to_via B C g", "have L2: \"\\<forall> x. (x \\<in> B) = (g x \\<in> C)\""], ["proof (prove)\nusing this:\n  many_reducible_to_via B C g\n\ngoal (1 subgoal):\n 1. \\<forall>x. (x \\<in> B) = (g x \\<in> C)", "by (unfold many_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  \\<forall>x. (x \\<in> B) = (g x \\<in> C)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to_via A B f;\n     many_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> many_reducible_to_via A C (g \\<circ> f)", "from g_tr f_tr"], ["proof (chain)\npicking this:\n  total_recursive g\n  total_recursive f", "have fg_tr: \"total_recursive (g o f)\""], ["proof (prove)\nusing this:\n  total_recursive g\n  total_recursive f\n\ngoal (1 subgoal):\n 1. total_recursive (g \\<circ> f)", "by (rule comp_tot_rec)"], ["proof (state)\nthis:\n  total_recursive (g \\<circ> f)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to_via A B f;\n     many_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> many_reducible_to_via A C (g \\<circ> f)", "from L1 L2"], ["proof (chain)\npicking this:\n  \\<forall>x. (x \\<in> A) = (f x \\<in> B)\n  \\<forall>x. (x \\<in> B) = (g x \\<in> C)", "have L3: \"(\\<forall> x. (x \\<in> A) = ((g o f) x \\<in> C))\""], ["proof (prove)\nusing this:\n  \\<forall>x. (x \\<in> A) = (f x \\<in> B)\n  \\<forall>x. (x \\<in> B) = (g x \\<in> C)\n\ngoal (1 subgoal):\n 1. \\<forall>x. (x \\<in> A) = ((g \\<circ> f) x \\<in> C)", "by auto"], ["proof (state)\nthis:\n  \\<forall>x. (x \\<in> A) = ((g \\<circ> f) x \\<in> C)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to_via A B f;\n     many_reducible_to_via B C g\\<rbrakk>\n    \\<Longrightarrow> many_reducible_to_via A C (g \\<circ> f)", "with fg_tr"], ["proof (chain)\npicking this:\n  total_recursive (g \\<circ> f)\n  \\<forall>x. (x \\<in> A) = ((g \\<circ> f) x \\<in> C)", "show ?thesis"], ["proof (prove)\nusing this:\n  total_recursive (g \\<circ> f)\n  \\<forall>x. (x \\<in> A) = ((g \\<circ> f) x \\<in> C)\n\ngoal (1 subgoal):\n 1. many_reducible_to_via A C (g \\<circ> f)", "by (unfold many_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  many_reducible_to_via A C (g \\<circ> f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma many_reducible_to_trans: \"\\<lbrakk> many_reducible_to A B; many_reducible_to B C \\<rbrakk> \\<Longrightarrow> many_reducible_to A C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; many_reducible_to B C\\<rbrakk>\n    \\<Longrightarrow> many_reducible_to A C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; many_reducible_to B C\\<rbrakk>\n    \\<Longrightarrow> many_reducible_to A C", "assume \"many_reducible_to A B\""], ["proof (state)\nthis:\n  many_reducible_to A B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; many_reducible_to B C\\<rbrakk>\n    \\<Longrightarrow> many_reducible_to A C", "then"], ["proof (chain)\npicking this:\n  many_reducible_to A B", "obtain f where A1: \"many_reducible_to_via A B f\""], ["proof (prove)\nusing this:\n  many_reducible_to A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        many_reducible_to_via A B f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding many_reducible_to_def"], ["proof (prove)\nusing this:\n  Ex (many_reducible_to_via A B)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        many_reducible_to_via A B f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  many_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; many_reducible_to B C\\<rbrakk>\n    \\<Longrightarrow> many_reducible_to A C", "assume \"many_reducible_to B C\""], ["proof (state)\nthis:\n  many_reducible_to B C\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; many_reducible_to B C\\<rbrakk>\n    \\<Longrightarrow> many_reducible_to A C", "then"], ["proof (chain)\npicking this:\n  many_reducible_to B C", "obtain g where A2: \"many_reducible_to_via B C g\""], ["proof (prove)\nusing this:\n  many_reducible_to B C\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        many_reducible_to_via B C g \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding many_reducible_to_def"], ["proof (prove)\nusing this:\n  Ex (many_reducible_to_via B C)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        many_reducible_to_via B C g \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  many_reducible_to_via B C g\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; many_reducible_to B C\\<rbrakk>\n    \\<Longrightarrow> many_reducible_to A C", "from A1 A2"], ["proof (chain)\npicking this:\n  many_reducible_to_via A B f\n  many_reducible_to_via B C g", "have \"many_reducible_to_via A C (g o f)\""], ["proof (prove)\nusing this:\n  many_reducible_to_via A B f\n  many_reducible_to_via B C g\n\ngoal (1 subgoal):\n 1. many_reducible_to_via A C (g \\<circ> f)", "by (rule many_reducible_to_via_trans)"], ["proof (state)\nthis:\n  many_reducible_to_via A C (g \\<circ> f)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; many_reducible_to B C\\<rbrakk>\n    \\<Longrightarrow> many_reducible_to A C", "then"], ["proof (chain)\npicking this:\n  many_reducible_to_via A C (g \\<circ> f)", "show ?thesis"], ["proof (prove)\nusing this:\n  many_reducible_to_via A C (g \\<circ> f)\n\ngoal (1 subgoal):\n 1. many_reducible_to A C", "unfolding many_reducible_to_def"], ["proof (prove)\nusing this:\n  many_reducible_to_via A C (g \\<circ> f)\n\ngoal (1 subgoal):\n 1. Ex (many_reducible_to_via A C)", "by auto"], ["proof (state)\nthis:\n  many_reducible_to A C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_reducibility_via_is_many: \"one_reducible_to_via A B f \\<Longrightarrow> many_reducible_to_via A B f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_reducible_to_via A B f \\<Longrightarrow> many_reducible_to_via A B f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. one_reducible_to_via A B f \\<Longrightarrow> many_reducible_to_via A B f", "assume A: \"one_reducible_to_via A B f\""], ["proof (state)\nthis:\n  one_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. one_reducible_to_via A B f \\<Longrightarrow> many_reducible_to_via A B f", "from A"], ["proof (chain)\npicking this:\n  one_reducible_to_via A B f", "have f_tr: \"total_recursive f\""], ["proof (prove)\nusing this:\n  one_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. total_recursive f", "by (unfold one_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  total_recursive f\n\ngoal (1 subgoal):\n 1. one_reducible_to_via A B f \\<Longrightarrow> many_reducible_to_via A B f", "from A"], ["proof (chain)\npicking this:\n  one_reducible_to_via A B f", "have \"\\<forall> x. (x \\<in> A) = (f x \\<in> B)\""], ["proof (prove)\nusing this:\n  one_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. \\<forall>x. (x \\<in> A) = (f x \\<in> B)", "by (unfold one_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  \\<forall>x. (x \\<in> A) = (f x \\<in> B)\n\ngoal (1 subgoal):\n 1. one_reducible_to_via A B f \\<Longrightarrow> many_reducible_to_via A B f", "with f_tr"], ["proof (chain)\npicking this:\n  total_recursive f\n  \\<forall>x. (x \\<in> A) = (f x \\<in> B)", "show ?thesis"], ["proof (prove)\nusing this:\n  total_recursive f\n  \\<forall>x. (x \\<in> A) = (f x \\<in> B)\n\ngoal (1 subgoal):\n 1. many_reducible_to_via A B f", "by (unfold many_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  many_reducible_to_via A B f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_reducibility_is_many: \"one_reducible_to A B \\<Longrightarrow> many_reducible_to A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_reducible_to A B \\<Longrightarrow> many_reducible_to A B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. one_reducible_to A B \\<Longrightarrow> many_reducible_to A B", "assume \"one_reducible_to A B\""], ["proof (state)\nthis:\n  one_reducible_to A B\n\ngoal (1 subgoal):\n 1. one_reducible_to A B \\<Longrightarrow> many_reducible_to A B", "then"], ["proof (chain)\npicking this:\n  one_reducible_to A B", "obtain f where A: \"one_reducible_to_via A B f\""], ["proof (prove)\nusing this:\n  one_reducible_to A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        one_reducible_to_via A B f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding one_reducible_to_def"], ["proof (prove)\nusing this:\n  Ex (one_reducible_to_via A B)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        one_reducible_to_via A B f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  one_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. one_reducible_to A B \\<Longrightarrow> many_reducible_to A B", "then"], ["proof (chain)\npicking this:\n  one_reducible_to_via A B f", "have \"many_reducible_to_via A B f\""], ["proof (prove)\nusing this:\n  one_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. many_reducible_to_via A B f", "by (rule one_reducibility_via_is_many)"], ["proof (state)\nthis:\n  many_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. one_reducible_to A B \\<Longrightarrow> many_reducible_to A B", "then"], ["proof (chain)\npicking this:\n  many_reducible_to_via A B f", "show ?thesis"], ["proof (prove)\nusing this:\n  many_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. many_reducible_to A B", "unfolding many_reducible_to_def"], ["proof (prove)\nusing this:\n  many_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. Ex (many_reducible_to_via A B)", "by auto"], ["proof (state)\nthis:\n  many_reducible_to A B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma many_reducible_to_via_refl: \"many_reducible_to_via A A (\\<lambda> x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_reducible_to_via A A (\\<lambda>x. x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. many_reducible_to_via A A (\\<lambda>x. x)", "have \"one_reducible_to_via A A (\\<lambda> x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_reducible_to_via A A (\\<lambda>x. x)", "by (rule one_reducible_to_via_refl)"], ["proof (state)\nthis:\n  one_reducible_to_via A A (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. many_reducible_to_via A A (\\<lambda>x. x)", "then"], ["proof (chain)\npicking this:\n  one_reducible_to_via A A (\\<lambda>x. x)", "show ?thesis"], ["proof (prove)\nusing this:\n  one_reducible_to_via A A (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. many_reducible_to_via A A (\\<lambda>x. x)", "by (rule one_reducibility_via_is_many)"], ["proof (state)\nthis:\n  many_reducible_to_via A A (\\<lambda>x. x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma many_reducible_to_refl: \"many_reducible_to A A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_reducible_to A A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. many_reducible_to A A", "have \"one_reducible_to A A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_reducible_to A A", "by (rule one_reducible_to_refl)"], ["proof (state)\nthis:\n  one_reducible_to A A\n\ngoal (1 subgoal):\n 1. many_reducible_to A A", "then"], ["proof (chain)\npicking this:\n  one_reducible_to A A", "show ?thesis"], ["proof (prove)\nusing this:\n  one_reducible_to A A\n\ngoal (1 subgoal):\n 1. many_reducible_to A A", "by (rule one_reducibility_is_many)"], ["proof (state)\nthis:\n  many_reducible_to A A\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem m_red_to_comp: \"\\<lbrakk> many_reducible_to A B; computable B \\<rbrakk> \\<Longrightarrow> computable A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; computable B\\<rbrakk>\n    \\<Longrightarrow> computable A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; computable B\\<rbrakk>\n    \\<Longrightarrow> computable A", "assume \"many_reducible_to A B\""], ["proof (state)\nthis:\n  many_reducible_to A B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; computable B\\<rbrakk>\n    \\<Longrightarrow> computable A", "then"], ["proof (chain)\npicking this:\n  many_reducible_to A B", "obtain f where A1: \"many_reducible_to_via A B f\""], ["proof (prove)\nusing this:\n  many_reducible_to A B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        many_reducible_to_via A B f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding many_reducible_to_def"], ["proof (prove)\nusing this:\n  Ex (many_reducible_to_via A B)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        many_reducible_to_via A B f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  many_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; computable B\\<rbrakk>\n    \\<Longrightarrow> computable A", "from A1"], ["proof (chain)\npicking this:\n  many_reducible_to_via A B f", "have f_tr: \"total_recursive f\""], ["proof (prove)\nusing this:\n  many_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. total_recursive f", "by (unfold many_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  total_recursive f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; computable B\\<rbrakk>\n    \\<Longrightarrow> computable A", "from A1"], ["proof (chain)\npicking this:\n  many_reducible_to_via A B f", "have L1: \"\\<forall> x. (x \\<in> A) = (f x \\<in> B)\""], ["proof (prove)\nusing this:\n  many_reducible_to_via A B f\n\ngoal (1 subgoal):\n 1. \\<forall>x. (x \\<in> A) = (f x \\<in> B)", "by (unfold many_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  \\<forall>x. (x \\<in> A) = (f x \\<in> B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; computable B\\<rbrakk>\n    \\<Longrightarrow> computable A", "assume \"computable B\""], ["proof (state)\nthis:\n  computable B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; computable B\\<rbrakk>\n    \\<Longrightarrow> computable A", "then"], ["proof (chain)\npicking this:\n  computable B", "have L2: \"total_recursive (chf B)\""], ["proof (prove)\nusing this:\n  computable B\n\ngoal (1 subgoal):\n 1. total_recursive (chf B)", "by (rule comp_impl_tot_rec)"], ["proof (state)\nthis:\n  total_recursive (chf B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; computable B\\<rbrakk>\n    \\<Longrightarrow> computable A", "have L3: \"chf A = (chf B) o f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chf A = chf B \\<circ> f", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. chf A x = (chf B \\<circ> f) x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. chf A x = (chf B \\<circ> f) x", "have \"chf A x = (chf B) (f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chf A x = chf B (f x)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> chf A x = chf B (f x)\n 2. \\<not> ?P \\<Longrightarrow> chf A x = chf B (f x)", "assume A: \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> chf A x = chf B (f x)\n 2. \\<not> ?P \\<Longrightarrow> chf A x = chf B (f x)", "then"], ["proof (chain)\npicking this:\n  x \\<in> A", "have L3_1: \"chf A x = 0\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. chf A x = 0", "by (simp add: chf_lm_2)"], ["proof (state)\nthis:\n  chf A x = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> chf A x = chf B (f x)\n 2. \\<not> ?P \\<Longrightarrow> chf A x = chf B (f x)", "from A L1"], ["proof (chain)\npicking this:\n  x \\<in> A\n  \\<forall>x. (x \\<in> A) = (f x \\<in> B)", "have \"f x \\<in> B\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  \\<forall>x. (x \\<in> A) = (f x \\<in> B)\n\ngoal (1 subgoal):\n 1. f x \\<in> B", "by auto"], ["proof (state)\nthis:\n  f x \\<in> B\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> chf A x = chf B (f x)\n 2. \\<not> ?P \\<Longrightarrow> chf A x = chf B (f x)", "then"], ["proof (chain)\npicking this:\n  f x \\<in> B", "have L3_2: \"(chf B) (f x) = 0\""], ["proof (prove)\nusing this:\n  f x \\<in> B\n\ngoal (1 subgoal):\n 1. chf B (f x) = 0", "by (simp add: chf_lm_2)"], ["proof (state)\nthis:\n  chf B (f x) = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> chf A x = chf B (f x)\n 2. \\<not> ?P \\<Longrightarrow> chf A x = chf B (f x)", "from L3_1 L3_2"], ["proof (chain)\npicking this:\n  chf A x = 0\n  chf B (f x) = 0", "show \"chf A x = (chf B) (f x)\""], ["proof (prove)\nusing this:\n  chf A x = 0\n  chf B (f x) = 0\n\ngoal (1 subgoal):\n 1. chf A x = chf B (f x)", "by auto"], ["proof (state)\nthis:\n  chf A x = chf B (f x)\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> chf A x = chf B (f x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> chf A x = chf B (f x)", "assume A: \"x \\<notin> A\""], ["proof (state)\nthis:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> chf A x = chf B (f x)", "then"], ["proof (chain)\npicking this:\n  x \\<notin> A", "have L3_1: \"chf A x = 1\""], ["proof (prove)\nusing this:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. chf A x = 1", "by (simp add: chf_lm_3)"], ["proof (state)\nthis:\n  chf A x = 1\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> chf A x = chf B (f x)", "from A L1"], ["proof (chain)\npicking this:\n  x \\<notin> A\n  \\<forall>x. (x \\<in> A) = (f x \\<in> B)", "have \"f x \\<notin> B\""], ["proof (prove)\nusing this:\n  x \\<notin> A\n  \\<forall>x. (x \\<in> A) = (f x \\<in> B)\n\ngoal (1 subgoal):\n 1. f x \\<notin> B", "by auto"], ["proof (state)\nthis:\n  f x \\<notin> B\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> chf A x = chf B (f x)", "then"], ["proof (chain)\npicking this:\n  f x \\<notin> B", "have L3_2: \"(chf B) (f x) = 1\""], ["proof (prove)\nusing this:\n  f x \\<notin> B\n\ngoal (1 subgoal):\n 1. chf B (f x) = 1", "by (simp add: chf_lm_3)"], ["proof (state)\nthis:\n  chf B (f x) = 1\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow> chf A x = chf B (f x)", "from L3_1 L3_2"], ["proof (chain)\npicking this:\n  chf A x = 1\n  chf B (f x) = 1", "show \"chf A x = (chf B) (f x)\""], ["proof (prove)\nusing this:\n  chf A x = 1\n  chf B (f x) = 1\n\ngoal (1 subgoal):\n 1. chf A x = chf B (f x)", "by auto"], ["proof (state)\nthis:\n  chf A x = chf B (f x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  chf A x = chf B (f x)\n\ngoal (1 subgoal):\n 1. \\<And>x. chf A x = (chf B \\<circ> f) x", "then"], ["proof (chain)\npicking this:\n  chf A x = chf B (f x)", "show \"chf A x = (chf B \\<circ> f) x\""], ["proof (prove)\nusing this:\n  chf A x = chf B (f x)\n\ngoal (1 subgoal):\n 1. chf A x = (chf B \\<circ> f) x", "by auto"], ["proof (state)\nthis:\n  chf A x = (chf B \\<circ> f) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  chf A = chf B \\<circ> f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; computable B\\<rbrakk>\n    \\<Longrightarrow> computable A", "from L2 f_tr"], ["proof (chain)\npicking this:\n  total_recursive (chf B)\n  total_recursive f", "have \"total_recursive (chf B \\<circ> f)\""], ["proof (prove)\nusing this:\n  total_recursive (chf B)\n  total_recursive f\n\ngoal (1 subgoal):\n 1. total_recursive (chf B \\<circ> f)", "by (rule comp_tot_rec)"], ["proof (state)\nthis:\n  total_recursive (chf B \\<circ> f)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; computable B\\<rbrakk>\n    \\<Longrightarrow> computable A", "with L3"], ["proof (chain)\npicking this:\n  chf A = chf B \\<circ> f\n  total_recursive (chf B \\<circ> f)", "have \"total_recursive (chf A)\""], ["proof (prove)\nusing this:\n  chf A = chf B \\<circ> f\n  total_recursive (chf B \\<circ> f)\n\ngoal (1 subgoal):\n 1. total_recursive (chf A)", "by auto"], ["proof (state)\nthis:\n  total_recursive (chf A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to A B; computable B\\<rbrakk>\n    \\<Longrightarrow> computable A", "then"], ["proof (chain)\npicking this:\n  total_recursive (chf A)", "show ?thesis"], ["proof (prove)\nusing this:\n  total_recursive (chf A)\n\ngoal (1 subgoal):\n 1. computable A", "by (rule tot_rec_impl_comp)"], ["proof (state)\nthis:\n  computable A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma many_reducible_lm_1: \"many_reducible_to univ_ce A \\<Longrightarrow> \\<not> computable A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. many_reducible_to univ_ce A \\<Longrightarrow> \\<not> computable A", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to univ_ce A;\n     \\<not> \\<not> computable A\\<rbrakk>\n    \\<Longrightarrow> False", "assume A1: \"many_reducible_to univ_ce A\""], ["proof (state)\nthis:\n  many_reducible_to univ_ce A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to univ_ce A;\n     \\<not> \\<not> computable A\\<rbrakk>\n    \\<Longrightarrow> False", "assume \"\\<not> \\<not> computable A\""], ["proof (state)\nthis:\n  \\<not> \\<not> computable A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to univ_ce A;\n     \\<not> \\<not> computable A\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> \\<not> computable A", "have A2: \"computable A\""], ["proof (prove)\nusing this:\n  \\<not> \\<not> computable A\n\ngoal (1 subgoal):\n 1. computable A", "by auto"], ["proof (state)\nthis:\n  computable A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to univ_ce A;\n     \\<not> \\<not> computable A\\<rbrakk>\n    \\<Longrightarrow> False", "from A1 A2"], ["proof (chain)\npicking this:\n  many_reducible_to univ_ce A\n  computable A", "have \"computable univ_ce\""], ["proof (prove)\nusing this:\n  many_reducible_to univ_ce A\n  computable A\n\ngoal (1 subgoal):\n 1. computable univ_ce", "by (rule m_red_to_comp)"], ["proof (state)\nthis:\n  computable univ_ce\n\ngoal (1 subgoal):\n 1. \\<lbrakk>many_reducible_to univ_ce A;\n     \\<not> \\<not> computable A\\<rbrakk>\n    \\<Longrightarrow> False", "with univ_ce_is_not_comp3"], ["proof (chain)\npicking this:\n  \\<not> computable univ_ce\n  computable univ_ce", "show False"], ["proof (prove)\nusing this:\n  \\<not> computable univ_ce\n  computable univ_ce\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_reducible_lm_1: \"one_reducible_to univ_ce A \\<Longrightarrow> \\<not> computable A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_reducible_to univ_ce A \\<Longrightarrow> \\<not> computable A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. one_reducible_to univ_ce A \\<Longrightarrow> \\<not> computable A", "assume \"one_reducible_to univ_ce A\""], ["proof (state)\nthis:\n  one_reducible_to univ_ce A\n\ngoal (1 subgoal):\n 1. one_reducible_to univ_ce A \\<Longrightarrow> \\<not> computable A", "then"], ["proof (chain)\npicking this:\n  one_reducible_to univ_ce A", "have \"many_reducible_to univ_ce A\""], ["proof (prove)\nusing this:\n  one_reducible_to univ_ce A\n\ngoal (1 subgoal):\n 1. many_reducible_to univ_ce A", "by (rule one_reducibility_is_many)"], ["proof (state)\nthis:\n  many_reducible_to univ_ce A\n\ngoal (1 subgoal):\n 1. one_reducible_to univ_ce A \\<Longrightarrow> \\<not> computable A", "then"], ["proof (chain)\npicking this:\n  many_reducible_to univ_ce A", "show ?thesis"], ["proof (prove)\nusing this:\n  many_reducible_to univ_ce A\n\ngoal (1 subgoal):\n 1. \\<not> computable A", "by (rule many_reducible_lm_1)"], ["proof (state)\nthis:\n  \\<not> computable A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_reducible_lm_2: \"one_reducible_to_via (nat_to_ce_set n) univ_ce (\\<lambda> x. c_pair n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_reducible_to_via (nat_to_ce_set n) univ_ce (c_pair n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. one_reducible_to_via (nat_to_ce_set n) univ_ce (c_pair n)", "define f where \"f x = c_pair n x\" for x"], ["proof (state)\nthis:\n  f ?x = c_pair n ?x\n\ngoal (1 subgoal):\n 1. one_reducible_to_via (nat_to_ce_set n) univ_ce (c_pair n)", "have f_is_pr: \"f \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_pair n \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. one_reducible_to_via (nat_to_ce_set n) univ_ce (c_pair n)", "then"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec1", "have f_tr: \"total_recursive f\""], ["proof (prove)\nusing this:\n  f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. total_recursive f", "by (rule pr_is_total_rec)"], ["proof (state)\nthis:\n  total_recursive f\n\ngoal (1 subgoal):\n 1. one_reducible_to_via (nat_to_ce_set n) univ_ce (c_pair n)", "have f_inj: \"inj f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj f", "proof (rule injI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. f x = f y \\<Longrightarrow> x = y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. f x = f y \\<Longrightarrow> x = y", "assume A: \"f x = f y\""], ["proof (state)\nthis:\n  f x = f y\n\ngoal (1 subgoal):\n 1. \\<And>x y. f x = f y \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  f x = f y", "have \"c_pair n x = c_pair n y\""], ["proof (prove)\nusing this:\n  f x = f y\n\ngoal (1 subgoal):\n 1. c_pair n x = c_pair n y", "by (unfold f_def)"], ["proof (state)\nthis:\n  c_pair n x = c_pair n y\n\ngoal (1 subgoal):\n 1. \\<And>x y. f x = f y \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  c_pair n x = c_pair n y", "show \"x = y\""], ["proof (prove)\nusing this:\n  c_pair n x = c_pair n y\n\ngoal (1 subgoal):\n 1. x = y", "by (rule c_pair_inj2)"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj f\n\ngoal (1 subgoal):\n 1. one_reducible_to_via (nat_to_ce_set n) univ_ce (c_pair n)", "have \"\\<forall> x. (x \\<in> (nat_to_ce_set n)) = (f x \\<in> univ_ce)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. (x \\<in> nat_to_ce_set n) = (f x \\<in> univ_ce)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (x \\<in> nat_to_ce_set n) = (f x \\<in> univ_ce)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (x \\<in> nat_to_ce_set n) = (f x \\<in> univ_ce)", "show \"(x \\<in> nat_to_ce_set n) = (f x \\<in> univ_ce)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> nat_to_ce_set n) = (f x \\<in> univ_ce)", "by (unfold f_def, simp add: univ_ce_lm_1)"], ["proof (state)\nthis:\n  (x \\<in> nat_to_ce_set n) = (f x \\<in> univ_ce)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x. (x \\<in> nat_to_ce_set n) = (f x \\<in> univ_ce)\n\ngoal (1 subgoal):\n 1. one_reducible_to_via (nat_to_ce_set n) univ_ce (c_pair n)", "with f_tr f_inj"], ["proof (chain)\npicking this:\n  total_recursive f\n  inj f\n  \\<forall>x. (x \\<in> nat_to_ce_set n) = (f x \\<in> univ_ce)", "show ?thesis"], ["proof (prove)\nusing this:\n  total_recursive f\n  inj f\n  \\<forall>x. (x \\<in> nat_to_ce_set n) = (f x \\<in> univ_ce)\n\ngoal (1 subgoal):\n 1. one_reducible_to_via (nat_to_ce_set n) univ_ce (c_pair n)", "by (unfold f_def, unfold one_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  one_reducible_to_via (nat_to_ce_set n) univ_ce (c_pair n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_reducible_lm_3: \"one_reducible_to (nat_to_ce_set n) univ_ce\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_reducible_to (nat_to_ce_set n) univ_ce", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. one_reducible_to (nat_to_ce_set n) univ_ce", "have \"one_reducible_to_via (nat_to_ce_set n) univ_ce (\\<lambda> x. c_pair n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_reducible_to_via (nat_to_ce_set n) univ_ce (c_pair n)", "by (rule one_reducible_lm_2)"], ["proof (state)\nthis:\n  one_reducible_to_via (nat_to_ce_set n) univ_ce (c_pair n)\n\ngoal (1 subgoal):\n 1. one_reducible_to (nat_to_ce_set n) univ_ce", "then"], ["proof (chain)\npicking this:\n  one_reducible_to_via (nat_to_ce_set n) univ_ce (c_pair n)", "show ?thesis"], ["proof (prove)\nusing this:\n  one_reducible_to_via (nat_to_ce_set n) univ_ce (c_pair n)\n\ngoal (1 subgoal):\n 1. one_reducible_to (nat_to_ce_set n) univ_ce", "by (unfold one_reducible_to_def, auto)"], ["proof (state)\nthis:\n  one_reducible_to (nat_to_ce_set n) univ_ce\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_reducible_lm_4: \"A \\<in> ce_sets \\<Longrightarrow> one_reducible_to A univ_ce\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> one_reducible_to A univ_ce", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> one_reducible_to A univ_ce", "assume \"A \\<in> ce_sets\""], ["proof (state)\nthis:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> one_reducible_to A univ_ce", "then"], ["proof (chain)\npicking this:\n  A \\<in> ce_sets", "have \"\\<exists> n. A = nat_to_ce_set n\""], ["proof (prove)\nusing this:\n  A \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<exists>n. A = nat_to_ce_set n", "by (rule nat_to_ce_set_srj)"], ["proof (state)\nthis:\n  \\<exists>n. A = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> one_reducible_to A univ_ce", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. A = nat_to_ce_set n", "obtain n where \"A = nat_to_ce_set n\""], ["proof (prove)\nusing this:\n  \\<exists>n. A = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        A = nat_to_ce_set n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. A \\<in> ce_sets \\<Longrightarrow> one_reducible_to A univ_ce", "with one_reducible_lm_3"], ["proof (chain)\npicking this:\n  one_reducible_to (nat_to_ce_set ?n) univ_ce\n  A = nat_to_ce_set n", "show ?thesis"], ["proof (prove)\nusing this:\n  one_reducible_to (nat_to_ce_set ?n) univ_ce\n  A = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. one_reducible_to A univ_ce", "by auto"], ["proof (state)\nthis:\n  one_reducible_to A univ_ce\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>One-complete sets\\<close>"], ["", "definition\n  one_complete :: \"nat set \\<Rightarrow> bool\" where\n  \"one_complete = (\\<lambda> A. A \\<in> ce_sets \\<and> (\\<forall> B. B \\<in> ce_sets \\<longrightarrow> one_reducible_to B A))\""], ["", "theorem univ_is_complete: \"one_complete univ_ce\""], ["proof (prove)\ngoal (1 subgoal):\n 1. one_complete univ_ce", "proof (unfold one_complete_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets \\<and>\n    (\\<forall>B.\n        B \\<in> ce_sets \\<longrightarrow> one_reducible_to B univ_ce)", "show \"univ_ce \\<in> ce_sets \\<and> (\\<forall>B. B \\<in> ce_sets \\<longrightarrow> one_reducible_to B univ_ce)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets \\<and>\n    (\\<forall>B.\n        B \\<in> ce_sets \\<longrightarrow> one_reducible_to B univ_ce)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. univ_ce \\<in> ce_sets\n 2. \\<forall>B. B \\<in> ce_sets \\<longrightarrow> one_reducible_to B univ_ce", "show \"univ_ce \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "by (rule univ_is_ce)"], ["proof (state)\nthis:\n  univ_ce \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<forall>B. B \\<in> ce_sets \\<longrightarrow> one_reducible_to B univ_ce", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>B. B \\<in> ce_sets \\<longrightarrow> one_reducible_to B univ_ce", "show \"\\<forall>B. B \\<in> ce_sets \\<longrightarrow> one_reducible_to B univ_ce\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>B. B \\<in> ce_sets \\<longrightarrow> one_reducible_to B univ_ce", "proof (rule allI, rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B. B \\<in> ce_sets \\<Longrightarrow> one_reducible_to B univ_ce", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B. B \\<in> ce_sets \\<Longrightarrow> one_reducible_to B univ_ce", "assume \"B \\<in> ce_sets\""], ["proof (state)\nthis:\n  B \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<And>B. B \\<in> ce_sets \\<Longrightarrow> one_reducible_to B univ_ce", "then"], ["proof (chain)\npicking this:\n  B \\<in> ce_sets", "show \"one_reducible_to B univ_ce\""], ["proof (prove)\nusing this:\n  B \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. one_reducible_to B univ_ce", "by (rule one_reducible_lm_4)"], ["proof (state)\nthis:\n  one_reducible_to B univ_ce\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>B. B \\<in> ce_sets \\<longrightarrow> one_reducible_to B univ_ce\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  univ_ce \\<in> ce_sets \\<and>\n  (\\<forall>B. B \\<in> ce_sets \\<longrightarrow> one_reducible_to B univ_ce)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Index sets, Rice's theorem\\<close>"], ["", "definition\n  index_set :: \"nat set \\<Rightarrow> bool\" where\n  \"index_set = (\\<lambda> A. \\<forall> n m. n \\<in> A \\<and> (nat_to_ce_set n = nat_to_ce_set m) \\<longrightarrow> m \\<in> A)\""], ["", "lemma index_set_lm_1: \"\\<lbrakk> index_set A; n\\<in> A; nat_to_ce_set n = nat_to_ce_set m \\<rbrakk> \\<Longrightarrow> m \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; n \\<in> A;\n     nat_to_ce_set n = nat_to_ce_set m\\<rbrakk>\n    \\<Longrightarrow> m \\<in> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; n \\<in> A;\n     nat_to_ce_set n = nat_to_ce_set m\\<rbrakk>\n    \\<Longrightarrow> m \\<in> A", "assume A1: \"index_set A\""], ["proof (state)\nthis:\n  index_set A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; n \\<in> A;\n     nat_to_ce_set n = nat_to_ce_set m\\<rbrakk>\n    \\<Longrightarrow> m \\<in> A", "assume A2: \"n \\<in> A\""], ["proof (state)\nthis:\n  n \\<in> A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; n \\<in> A;\n     nat_to_ce_set n = nat_to_ce_set m\\<rbrakk>\n    \\<Longrightarrow> m \\<in> A", "assume A3: \"nat_to_ce_set n = nat_to_ce_set m\""], ["proof (state)\nthis:\n  nat_to_ce_set n = nat_to_ce_set m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; n \\<in> A;\n     nat_to_ce_set n = nat_to_ce_set m\\<rbrakk>\n    \\<Longrightarrow> m \\<in> A", "from A2 A3"], ["proof (chain)\npicking this:\n  n \\<in> A\n  nat_to_ce_set n = nat_to_ce_set m", "have L1: \"n \\<in> A \\<and> (nat_to_ce_set n = nat_to_ce_set m)\""], ["proof (prove)\nusing this:\n  n \\<in> A\n  nat_to_ce_set n = nat_to_ce_set m\n\ngoal (1 subgoal):\n 1. n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m", "by auto"], ["proof (state)\nthis:\n  n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; n \\<in> A;\n     nat_to_ce_set n = nat_to_ce_set m\\<rbrakk>\n    \\<Longrightarrow> m \\<in> A", "from A1"], ["proof (chain)\npicking this:\n  index_set A", "have L2: \"\\<forall> n m. n \\<in> A \\<and> (nat_to_ce_set n = nat_to_ce_set m) \\<longrightarrow> m \\<in> A\""], ["proof (prove)\nusing this:\n  index_set A\n\ngoal (1 subgoal):\n 1. \\<forall>n m.\n       n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m \\<longrightarrow>\n       m \\<in> A", "by (unfold index_set_def)"], ["proof (state)\nthis:\n  \\<forall>n m.\n     n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m \\<longrightarrow>\n     m \\<in> A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; n \\<in> A;\n     nat_to_ce_set n = nat_to_ce_set m\\<rbrakk>\n    \\<Longrightarrow> m \\<in> A", "from L1 L2"], ["proof (chain)\npicking this:\n  n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m\n  \\<forall>n m.\n     n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m \\<longrightarrow>\n     m \\<in> A", "show ?thesis"], ["proof (prove)\nusing this:\n  n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m\n  \\<forall>n m.\n     n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m \\<longrightarrow>\n     m \\<in> A\n\ngoal (1 subgoal):\n 1. m \\<in> A", "by auto"], ["proof (state)\nthis:\n  m \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma index_set_lm_2: \"index_set A \\<Longrightarrow> index_set (-A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index_set A \\<Longrightarrow> index_set (- A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. index_set A \\<Longrightarrow> index_set (- A)", "assume A: \"index_set A\""], ["proof (state)\nthis:\n  index_set A\n\ngoal (1 subgoal):\n 1. index_set A \\<Longrightarrow> index_set (- A)", "show \"index_set (-A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index_set (- A)", "proof (unfold index_set_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n m.\n       n \\<in> - A \\<and>\n       nat_to_ce_set n = nat_to_ce_set m \\<longrightarrow>\n       m \\<in> - A", "show \"\\<forall>n m. n \\<in> - A \\<and> nat_to_ce_set n = nat_to_ce_set m \\<longrightarrow> m \\<in> - A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n m.\n       n \\<in> - A \\<and>\n       nat_to_ce_set n = nat_to_ce_set m \\<longrightarrow>\n       m \\<in> - A", "proof (rule allI, rule allI, rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<in> - A \\<and>\n       nat_to_ce_set n = nat_to_ce_set m \\<Longrightarrow>\n       m \\<in> - A", "fix n m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<in> - A \\<and>\n       nat_to_ce_set n = nat_to_ce_set m \\<Longrightarrow>\n       m \\<in> - A", "assume A1: \"n \\<in> - A \\<and> nat_to_ce_set n = nat_to_ce_set m\""], ["proof (state)\nthis:\n  n \\<in> - A \\<and> nat_to_ce_set n = nat_to_ce_set m\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<in> - A \\<and>\n       nat_to_ce_set n = nat_to_ce_set m \\<Longrightarrow>\n       m \\<in> - A", "from A1"], ["proof (chain)\npicking this:\n  n \\<in> - A \\<and> nat_to_ce_set n = nat_to_ce_set m", "have A2: \"n \\<in> -A\""], ["proof (prove)\nusing this:\n  n \\<in> - A \\<and> nat_to_ce_set n = nat_to_ce_set m\n\ngoal (1 subgoal):\n 1. n \\<in> - A", "by auto"], ["proof (state)\nthis:\n  n \\<in> - A\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<in> - A \\<and>\n       nat_to_ce_set n = nat_to_ce_set m \\<Longrightarrow>\n       m \\<in> - A", "from A1"], ["proof (chain)\npicking this:\n  n \\<in> - A \\<and> nat_to_ce_set n = nat_to_ce_set m", "have A3: \"nat_to_ce_set m = nat_to_ce_set n\""], ["proof (prove)\nusing this:\n  n \\<in> - A \\<and> nat_to_ce_set n = nat_to_ce_set m\n\ngoal (1 subgoal):\n 1. nat_to_ce_set m = nat_to_ce_set n", "by auto"], ["proof (state)\nthis:\n  nat_to_ce_set m = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<in> - A \\<and>\n       nat_to_ce_set n = nat_to_ce_set m \\<Longrightarrow>\n       m \\<in> - A", "show \"m \\<in> - A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<in> - A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. m \\<in> A \\<Longrightarrow> False", "assume \"m \\<in> A\""], ["proof (state)\nthis:\n  m \\<in> A\n\ngoal (1 subgoal):\n 1. m \\<in> A \\<Longrightarrow> False", "from A this A3"], ["proof (chain)\npicking this:\n  index_set A\n  m \\<in> A\n  nat_to_ce_set m = nat_to_ce_set n", "have \"n \\<in> A\""], ["proof (prove)\nusing this:\n  index_set A\n  m \\<in> A\n  nat_to_ce_set m = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. n \\<in> A", "by (rule index_set_lm_1)"], ["proof (state)\nthis:\n  n \\<in> A\n\ngoal (1 subgoal):\n 1. m \\<in> A \\<Longrightarrow> False", "with A2"], ["proof (chain)\npicking this:\n  n \\<in> - A\n  n \\<in> A", "show False"], ["proof (prove)\nusing this:\n  n \\<in> - A\n  n \\<in> A\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m \\<in> - A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n m.\n     n \\<in> - A \\<and> nat_to_ce_set n = nat_to_ce_set m \\<longrightarrow>\n     m \\<in> - A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  index_set (- A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Rice_lm_1: \"\\<lbrakk> index_set A; A \\<noteq> {}; A \\<noteq> UNIV; \\<exists> n \\<in> A. nat_to_ce_set n = {} \\<rbrakk> \\<Longrightarrow> one_reducible_to univ_ce (- A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "assume A1: \"index_set A\""], ["proof (state)\nthis:\n  index_set A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "assume A2: \"A \\<noteq> {}\""], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "assume A3: \"A \\<noteq> UNIV\""], ["proof (state)\nthis:\n  A \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "assume \"\\<exists> n \\<in> A. nat_to_ce_set n = {}\""], ["proof (state)\nthis:\n  \\<exists>n\\<in>A. nat_to_ce_set n = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "then"], ["proof (chain)\npicking this:\n  \\<exists>n\\<in>A. nat_to_ce_set n = {}", "obtain e_0 where e_0_in_A: \"e_0 \\<in> A\" and e_0_empty: \"nat_to_ce_set e_0 = {}\""], ["proof (prove)\nusing this:\n  \\<exists>n\\<in>A. nat_to_ce_set n = {}\n\ngoal (1 subgoal):\n 1. (\\<And>e_0.\n        \\<lbrakk>e_0 \\<in> A; nat_to_ce_set e_0 = {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  e_0 \\<in> A\n  nat_to_ce_set e_0 = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "from e_0_in_A A3"], ["proof (chain)\npicking this:\n  e_0 \\<in> A\n  A \\<noteq> UNIV", "obtain e_1 where e_1_not_in_A: \"e_1 \\<in> (- A)\""], ["proof (prove)\nusing this:\n  e_0 \\<in> A\n  A \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. (\\<And>e_1. e_1 \\<in> - A \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  e_1 \\<in> - A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "with e_0_in_A"], ["proof (chain)\npicking this:\n  e_0 \\<in> A\n  e_1 \\<in> - A", "have e_0_neq_e_1: \"e_0 \\<noteq> e_1\""], ["proof (prove)\nusing this:\n  e_0 \\<in> A\n  e_1 \\<in> - A\n\ngoal (1 subgoal):\n 1. e_0 \\<noteq> e_1", "by auto"], ["proof (state)\nthis:\n  e_0 \\<noteq> e_1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "have \"nat_to_ce_set e_0 \\<noteq> nat_to_ce_set e_1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_ce_set e_0 \\<noteq> nat_to_ce_set e_1", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_ce_set e_0 = nat_to_ce_set e_1 \\<Longrightarrow> False", "assume \"nat_to_ce_set e_0 = nat_to_ce_set e_1\""], ["proof (state)\nthis:\n  nat_to_ce_set e_0 = nat_to_ce_set e_1\n\ngoal (1 subgoal):\n 1. nat_to_ce_set e_0 = nat_to_ce_set e_1 \\<Longrightarrow> False", "with A1 e_0_in_A"], ["proof (chain)\npicking this:\n  index_set A\n  e_0 \\<in> A\n  nat_to_ce_set e_0 = nat_to_ce_set e_1", "have \"e_1 \\<in> A\""], ["proof (prove)\nusing this:\n  index_set A\n  e_0 \\<in> A\n  nat_to_ce_set e_0 = nat_to_ce_set e_1\n\ngoal (1 subgoal):\n 1. e_1 \\<in> A", "by (rule index_set_lm_1)"], ["proof (state)\nthis:\n  e_1 \\<in> A\n\ngoal (1 subgoal):\n 1. nat_to_ce_set e_0 = nat_to_ce_set e_1 \\<Longrightarrow> False", "with e_1_not_in_A"], ["proof (chain)\npicking this:\n  e_1 \\<in> - A\n  e_1 \\<in> A", "show False"], ["proof (prove)\nusing this:\n  e_1 \\<in> - A\n  e_1 \\<in> A\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat_to_ce_set e_0 \\<noteq> nat_to_ce_set e_1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "with e_0_empty"], ["proof (chain)\npicking this:\n  nat_to_ce_set e_0 = {}\n  nat_to_ce_set e_0 \\<noteq> nat_to_ce_set e_1", "have e1_not_empty: \"nat_to_ce_set e_1 \\<noteq> {}\""], ["proof (prove)\nusing this:\n  nat_to_ce_set e_0 = {}\n  nat_to_ce_set e_0 \\<noteq> nat_to_ce_set e_1\n\ngoal (1 subgoal):\n 1. nat_to_ce_set e_1 \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  nat_to_ce_set e_1 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "define we_1 where \"we_1 = nat_to_ce_set e_1\""], ["proof (state)\nthis:\n  we_1 = nat_to_ce_set e_1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "from e1_not_empty"], ["proof (chain)\npicking this:\n  nat_to_ce_set e_1 \\<noteq> {}", "have we_1_not_empty: \"we_1 \\<noteq> {}\""], ["proof (prove)\nusing this:\n  nat_to_ce_set e_1 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. we_1 \\<noteq> {}", "by (unfold we_1_def)"], ["proof (state)\nthis:\n  we_1 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "define r where \"r = univ_ce \\<times> we_1\""], ["proof (state)\nthis:\n  r = univ_ce \\<times> we_1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "have loc_lm_1: \"\\<And> x. x \\<in> univ_ce \\<Longrightarrow> \\<forall> y. (y \\<in> we_1) = ((x,y) \\<in> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> univ_ce \\<Longrightarrow>\n       \\<forall>y. (y \\<in> we_1) = ((x, y) \\<in> r)", "by (unfold r_def, auto)"], ["proof (state)\nthis:\n  ?x \\<in> univ_ce \\<Longrightarrow>\n  \\<forall>y. (y \\<in> we_1) = ((?x, y) \\<in> r)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "have loc_lm_2: \"\\<And> x. x \\<notin> univ_ce \\<Longrightarrow> \\<forall> y. (y \\<in> {}) = ((x,y) \\<in> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> univ_ce \\<Longrightarrow>\n       \\<forall>y. (y \\<in> {}) = ((x, y) \\<in> r)", "by (unfold r_def, auto)"], ["proof (state)\nthis:\n  ?x \\<notin> univ_ce \\<Longrightarrow>\n  \\<forall>y. (y \\<in> {}) = ((?x, y) \\<in> r)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "have r_ce: \"r \\<in> ce_rels\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> ce_rels", "proof (unfold r_def, rule ce_rel_lm_29)"], ["proof (state)\ngoal (2 subgoals):\n 1. univ_ce \\<in> ce_sets\n 2. we_1 \\<in> ce_sets", "show \"univ_ce \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ_ce \\<in> ce_sets", "by (rule univ_is_ce)"], ["proof (state)\nthis:\n  univ_ce \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. we_1 \\<in> ce_sets", "show \"we_1 \\<in> ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. we_1 \\<in> ce_sets", "by (unfold we_1_def, rule nat_to_ce_set_into_ce)"], ["proof (state)\nthis:\n  we_1 \\<in> ce_sets\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "define we_n where \"we_n = ce_rel_to_set r\""], ["proof (state)\nthis:\n  we_n = ce_rel_to_set r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "from r_ce"], ["proof (chain)\npicking this:\n  r \\<in> ce_rels", "have we_n_ce: \"we_n \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  r \\<in> ce_rels\n\ngoal (1 subgoal):\n 1. we_n \\<in> ce_sets", "by (unfold we_n_def, rule ce_rel_lm_6)"], ["proof (state)\nthis:\n  we_n \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "then"], ["proof (chain)\npicking this:\n  we_n \\<in> ce_sets", "have \"\\<exists> n. we_n = nat_to_ce_set n\""], ["proof (prove)\nusing this:\n  we_n \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<exists>n. we_n = nat_to_ce_set n", "by (rule nat_to_ce_set_srj)"], ["proof (state)\nthis:\n  \\<exists>n. we_n = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. we_n = nat_to_ce_set n", "obtain n where we_n_df1: \"we_n = nat_to_ce_set n\""], ["proof (prove)\nusing this:\n  \\<exists>n. we_n = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        we_n = nat_to_ce_set n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  we_n = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "define f where \"f x = s_ce n x\" for x"], ["proof (state)\nthis:\n  f ?x = s_ce n ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "from s_ce_is_pr"], ["proof (chain)\npicking this:\n  s_ce \\<in> PrimRec2", "have f_is_pr: \"f \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  s_ce \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1", "unfolding f_def"], ["proof (prove)\nusing this:\n  s_ce \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. s_ce n \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "then"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec1", "have f_tr: \"total_recursive f\""], ["proof (prove)\nusing this:\n  f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. total_recursive f", "by (rule pr_is_total_rec)"], ["proof (state)\nthis:\n  total_recursive f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "have f_inj: \"inj f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj f", "proof (rule injI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. f x = f y \\<Longrightarrow> x = y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. f x = f y \\<Longrightarrow> x = y", "assume \"f x = f y\""], ["proof (state)\nthis:\n  f x = f y\n\ngoal (1 subgoal):\n 1. \\<And>x y. f x = f y \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  f x = f y", "have \"s_ce n x = s_ce n y\""], ["proof (prove)\nusing this:\n  f x = f y\n\ngoal (1 subgoal):\n 1. s_ce n x = s_ce n y", "by (unfold f_def)"], ["proof (state)\nthis:\n  s_ce n x = s_ce n y\n\ngoal (1 subgoal):\n 1. \\<And>x y. f x = f y \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  s_ce n x = s_ce n y", "show \"x = y\""], ["proof (prove)\nusing this:\n  s_ce n x = s_ce n y\n\ngoal (1 subgoal):\n 1. x = y", "by (rule s_ce_inj2)"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "have loc_lm_3: \"\\<forall> x y. (c_pair x y \\<in> we_n) = (y \\<in> nat_to_ce_set (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. (c_pair x y \\<in> we_n) = (y \\<in> nat_to_ce_set (f x))", "proof (rule allI, rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. (c_pair x y \\<in> we_n) = (y \\<in> nat_to_ce_set (f x))", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. (c_pair x y \\<in> we_n) = (y \\<in> nat_to_ce_set (f x))", "show \"(c_pair x y \\<in> we_n) = (y \\<in> nat_to_ce_set (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c_pair x y \\<in> we_n) = (y \\<in> nat_to_ce_set (f x))", "by (unfold f_def, unfold we_n_df1, simp add: s_ce_1_1_th)"], ["proof (state)\nthis:\n  (c_pair x y \\<in> we_n) = (y \\<in> nat_to_ce_set (f x))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x y. (c_pair x y \\<in> we_n) = (y \\<in> nat_to_ce_set (f x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "from A1"], ["proof (chain)\npicking this:\n  index_set A", "have loc_lm_4: \"index_set (- A)\""], ["proof (prove)\nusing this:\n  index_set A\n\ngoal (1 subgoal):\n 1. index_set (- A)", "by (rule index_set_lm_2)"], ["proof (state)\nthis:\n  index_set (- A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "have loc_lm_5: \"\\<forall> x. (x \\<in> univ_ce) = (f x \\<in> -A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. (x \\<in> univ_ce) = (f x \\<in> - A)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (x \\<in> univ_ce) = (f x \\<in> - A)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (x \\<in> univ_ce) = (f x \\<in> - A)", "show \"(x \\<in> univ_ce) = (f x \\<in> -A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> univ_ce) = (f x \\<in> - A)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> univ_ce \\<Longrightarrow> f x \\<in> - A\n 2. f x \\<in> - A \\<Longrightarrow> x \\<in> univ_ce", "assume A: \"x \\<in> univ_ce\""], ["proof (state)\nthis:\n  x \\<in> univ_ce\n\ngoal (2 subgoals):\n 1. x \\<in> univ_ce \\<Longrightarrow> f x \\<in> - A\n 2. f x \\<in> - A \\<Longrightarrow> x \\<in> univ_ce", "then"], ["proof (chain)\npicking this:\n  x \\<in> univ_ce", "have S1: \"\\<forall> y. (y \\<in> we_1) = ((x,y) \\<in> r)\""], ["proof (prove)\nusing this:\n  x \\<in> univ_ce\n\ngoal (1 subgoal):\n 1. \\<forall>y. (y \\<in> we_1) = ((x, y) \\<in> r)", "by (rule loc_lm_1)"], ["proof (state)\nthis:\n  \\<forall>y. (y \\<in> we_1) = ((x, y) \\<in> r)\n\ngoal (2 subgoals):\n 1. x \\<in> univ_ce \\<Longrightarrow> f x \\<in> - A\n 2. f x \\<in> - A \\<Longrightarrow> x \\<in> univ_ce", "from ce_rel_lm_12"], ["proof (chain)\npicking this:\n  (c_pair ?x ?y \\<in> ce_rel_to_set ?r) = ((?x, ?y) \\<in> ?r)", "have \"\\<forall> y. (c_pair x y \\<in> ce_rel_to_set r) = ((x,y) \\<in> r)\""], ["proof (prove)\nusing this:\n  (c_pair ?x ?y \\<in> ce_rel_to_set ?r) = ((?x, ?y) \\<in> ?r)\n\ngoal (1 subgoal):\n 1. \\<forall>y. (c_pair x y \\<in> ce_rel_to_set r) = ((x, y) \\<in> r)", "by auto"], ["proof (state)\nthis:\n  \\<forall>y. (c_pair x y \\<in> ce_rel_to_set r) = ((x, y) \\<in> r)\n\ngoal (2 subgoals):\n 1. x \\<in> univ_ce \\<Longrightarrow> f x \\<in> - A\n 2. f x \\<in> - A \\<Longrightarrow> x \\<in> univ_ce", "then"], ["proof (chain)\npicking this:\n  \\<forall>y. (c_pair x y \\<in> ce_rel_to_set r) = ((x, y) \\<in> r)", "have \"\\<forall> y. ((x,y) \\<in> r) = (c_pair x y \\<in> we_n)\""], ["proof (prove)\nusing this:\n  \\<forall>y. (c_pair x y \\<in> ce_rel_to_set r) = ((x, y) \\<in> r)\n\ngoal (1 subgoal):\n 1. \\<forall>y. ((x, y) \\<in> r) = (c_pair x y \\<in> we_n)", "by (unfold we_n_def, auto)"], ["proof (state)\nthis:\n  \\<forall>y. ((x, y) \\<in> r) = (c_pair x y \\<in> we_n)\n\ngoal (2 subgoals):\n 1. x \\<in> univ_ce \\<Longrightarrow> f x \\<in> - A\n 2. f x \\<in> - A \\<Longrightarrow> x \\<in> univ_ce", "with S1"], ["proof (chain)\npicking this:\n  \\<forall>y. (y \\<in> we_1) = ((x, y) \\<in> r)\n  \\<forall>y. ((x, y) \\<in> r) = (c_pair x y \\<in> we_n)", "have \"\\<forall> y. (y \\<in> we_1) = (c_pair x y \\<in> we_n)\""], ["proof (prove)\nusing this:\n  \\<forall>y. (y \\<in> we_1) = ((x, y) \\<in> r)\n  \\<forall>y. ((x, y) \\<in> r) = (c_pair x y \\<in> we_n)\n\ngoal (1 subgoal):\n 1. \\<forall>y. (y \\<in> we_1) = (c_pair x y \\<in> we_n)", "by auto"], ["proof (state)\nthis:\n  \\<forall>y. (y \\<in> we_1) = (c_pair x y \\<in> we_n)\n\ngoal (2 subgoals):\n 1. x \\<in> univ_ce \\<Longrightarrow> f x \\<in> - A\n 2. f x \\<in> - A \\<Longrightarrow> x \\<in> univ_ce", "with loc_lm_3"], ["proof (chain)\npicking this:\n  \\<forall>x y. (c_pair x y \\<in> we_n) = (y \\<in> nat_to_ce_set (f x))\n  \\<forall>y. (y \\<in> we_1) = (c_pair x y \\<in> we_n)", "have \"\\<forall> y. (y \\<in> we_1) = (y \\<in> nat_to_ce_set (f x))\""], ["proof (prove)\nusing this:\n  \\<forall>x y. (c_pair x y \\<in> we_n) = (y \\<in> nat_to_ce_set (f x))\n  \\<forall>y. (y \\<in> we_1) = (c_pair x y \\<in> we_n)\n\ngoal (1 subgoal):\n 1. \\<forall>y. (y \\<in> we_1) = (y \\<in> nat_to_ce_set (f x))", "by auto"], ["proof (state)\nthis:\n  \\<forall>y. (y \\<in> we_1) = (y \\<in> nat_to_ce_set (f x))\n\ngoal (2 subgoals):\n 1. x \\<in> univ_ce \\<Longrightarrow> f x \\<in> - A\n 2. f x \\<in> - A \\<Longrightarrow> x \\<in> univ_ce", "then"], ["proof (chain)\npicking this:\n  \\<forall>y. (y \\<in> we_1) = (y \\<in> nat_to_ce_set (f x))", "have S2: \"we_1 = nat_to_ce_set (f x)\""], ["proof (prove)\nusing this:\n  \\<forall>y. (y \\<in> we_1) = (y \\<in> nat_to_ce_set (f x))\n\ngoal (1 subgoal):\n 1. we_1 = nat_to_ce_set (f x)", "by auto"], ["proof (state)\nthis:\n  we_1 = nat_to_ce_set (f x)\n\ngoal (2 subgoals):\n 1. x \\<in> univ_ce \\<Longrightarrow> f x \\<in> - A\n 2. f x \\<in> - A \\<Longrightarrow> x \\<in> univ_ce", "then"], ["proof (chain)\npicking this:\n  we_1 = nat_to_ce_set (f x)", "have \"nat_to_ce_set e_1 = nat_to_ce_set (f x)\""], ["proof (prove)\nusing this:\n  we_1 = nat_to_ce_set (f x)\n\ngoal (1 subgoal):\n 1. nat_to_ce_set e_1 = nat_to_ce_set (f x)", "by (unfold we_1_def)"], ["proof (state)\nthis:\n  nat_to_ce_set e_1 = nat_to_ce_set (f x)\n\ngoal (2 subgoals):\n 1. x \\<in> univ_ce \\<Longrightarrow> f x \\<in> - A\n 2. f x \\<in> - A \\<Longrightarrow> x \\<in> univ_ce", "with loc_lm_4 e_1_not_in_A"], ["proof (chain)\npicking this:\n  index_set (- A)\n  e_1 \\<in> - A\n  nat_to_ce_set e_1 = nat_to_ce_set (f x)", "show \"f x \\<in> -A\""], ["proof (prove)\nusing this:\n  index_set (- A)\n  e_1 \\<in> - A\n  nat_to_ce_set e_1 = nat_to_ce_set (f x)\n\ngoal (1 subgoal):\n 1. f x \\<in> - A", "by (rule index_set_lm_1)"], ["proof (state)\nthis:\n  f x \\<in> - A\n\ngoal (1 subgoal):\n 1. f x \\<in> - A \\<Longrightarrow> x \\<in> univ_ce", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f x \\<in> - A \\<Longrightarrow> x \\<in> univ_ce", "show \" f x \\<in> - A \\<Longrightarrow> x \\<in> univ_ce\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<in> - A \\<Longrightarrow> x \\<in> univ_ce", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>f x \\<in> - A; x \\<notin> univ_ce\\<rbrakk>\n    \\<Longrightarrow> False", "assume fx_in_A: \"f x \\<in> - A\""], ["proof (state)\nthis:\n  f x \\<in> - A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f x \\<in> - A; x \\<notin> univ_ce\\<rbrakk>\n    \\<Longrightarrow> False", "assume x_not_in_univ: \"x \\<notin> univ_ce\""], ["proof (state)\nthis:\n  x \\<notin> univ_ce\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f x \\<in> - A; x \\<notin> univ_ce\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<notin> univ_ce", "have S1: \"\\<forall> y. (y \\<in> {}) = ((x,y) \\<in> r)\""], ["proof (prove)\nusing this:\n  x \\<notin> univ_ce\n\ngoal (1 subgoal):\n 1. \\<forall>y. (y \\<in> {}) = ((x, y) \\<in> r)", "by (rule loc_lm_2)"], ["proof (state)\nthis:\n  \\<forall>y. (y \\<in> {}) = ((x, y) \\<in> r)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f x \\<in> - A; x \\<notin> univ_ce\\<rbrakk>\n    \\<Longrightarrow> False", "from ce_rel_lm_12"], ["proof (chain)\npicking this:\n  (c_pair ?x ?y \\<in> ce_rel_to_set ?r) = ((?x, ?y) \\<in> ?r)", "have \"\\<forall> y. (c_pair x y \\<in> ce_rel_to_set r) = ((x,y) \\<in> r)\""], ["proof (prove)\nusing this:\n  (c_pair ?x ?y \\<in> ce_rel_to_set ?r) = ((?x, ?y) \\<in> ?r)\n\ngoal (1 subgoal):\n 1. \\<forall>y. (c_pair x y \\<in> ce_rel_to_set r) = ((x, y) \\<in> r)", "by auto"], ["proof (state)\nthis:\n  \\<forall>y. (c_pair x y \\<in> ce_rel_to_set r) = ((x, y) \\<in> r)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f x \\<in> - A; x \\<notin> univ_ce\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>y. (c_pair x y \\<in> ce_rel_to_set r) = ((x, y) \\<in> r)", "have \"\\<forall> y. ((x,y) \\<in> r) = (c_pair x y \\<in> we_n)\""], ["proof (prove)\nusing this:\n  \\<forall>y. (c_pair x y \\<in> ce_rel_to_set r) = ((x, y) \\<in> r)\n\ngoal (1 subgoal):\n 1. \\<forall>y. ((x, y) \\<in> r) = (c_pair x y \\<in> we_n)", "by (unfold we_n_def, auto)"], ["proof (state)\nthis:\n  \\<forall>y. ((x, y) \\<in> r) = (c_pair x y \\<in> we_n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f x \\<in> - A; x \\<notin> univ_ce\\<rbrakk>\n    \\<Longrightarrow> False", "with S1"], ["proof (chain)\npicking this:\n  \\<forall>y. (y \\<in> {}) = ((x, y) \\<in> r)\n  \\<forall>y. ((x, y) \\<in> r) = (c_pair x y \\<in> we_n)", "have \"\\<forall> y. (y \\<in> {}) = (c_pair x y \\<in> we_n)\""], ["proof (prove)\nusing this:\n  \\<forall>y. (y \\<in> {}) = ((x, y) \\<in> r)\n  \\<forall>y. ((x, y) \\<in> r) = (c_pair x y \\<in> we_n)\n\ngoal (1 subgoal):\n 1. \\<forall>y. (y \\<in> {}) = (c_pair x y \\<in> we_n)", "by auto"], ["proof (state)\nthis:\n  \\<forall>y. (y \\<in> {}) = (c_pair x y \\<in> we_n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f x \\<in> - A; x \\<notin> univ_ce\\<rbrakk>\n    \\<Longrightarrow> False", "with loc_lm_3"], ["proof (chain)\npicking this:\n  \\<forall>x y. (c_pair x y \\<in> we_n) = (y \\<in> nat_to_ce_set (f x))\n  \\<forall>y. (y \\<in> {}) = (c_pair x y \\<in> we_n)", "have \"\\<forall> y. (y \\<in> {}) = (y \\<in> nat_to_ce_set (f x))\""], ["proof (prove)\nusing this:\n  \\<forall>x y. (c_pair x y \\<in> we_n) = (y \\<in> nat_to_ce_set (f x))\n  \\<forall>y. (y \\<in> {}) = (c_pair x y \\<in> we_n)\n\ngoal (1 subgoal):\n 1. \\<forall>y. (y \\<in> {}) = (y \\<in> nat_to_ce_set (f x))", "by auto"], ["proof (state)\nthis:\n  \\<forall>y. (y \\<in> {}) = (y \\<in> nat_to_ce_set (f x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f x \\<in> - A; x \\<notin> univ_ce\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>y. (y \\<in> {}) = (y \\<in> nat_to_ce_set (f x))", "have S2: \"{} = nat_to_ce_set (f x)\""], ["proof (prove)\nusing this:\n  \\<forall>y. (y \\<in> {}) = (y \\<in> nat_to_ce_set (f x))\n\ngoal (1 subgoal):\n 1. {} = nat_to_ce_set (f x)", "by auto"], ["proof (state)\nthis:\n  {} = nat_to_ce_set (f x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f x \\<in> - A; x \\<notin> univ_ce\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  {} = nat_to_ce_set (f x)", "have \"nat_to_ce_set e_0 = nat_to_ce_set (f x)\""], ["proof (prove)\nusing this:\n  {} = nat_to_ce_set (f x)\n\ngoal (1 subgoal):\n 1. nat_to_ce_set e_0 = nat_to_ce_set (f x)", "by (unfold e_0_empty)"], ["proof (state)\nthis:\n  nat_to_ce_set e_0 = nat_to_ce_set (f x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f x \\<in> - A; x \\<notin> univ_ce\\<rbrakk>\n    \\<Longrightarrow> False", "with A1 e_0_in_A"], ["proof (chain)\npicking this:\n  index_set A\n  e_0 \\<in> A\n  nat_to_ce_set e_0 = nat_to_ce_set (f x)", "have \"f x \\<in> A\""], ["proof (prove)\nusing this:\n  index_set A\n  e_0 \\<in> A\n  nat_to_ce_set e_0 = nat_to_ce_set (f x)\n\ngoal (1 subgoal):\n 1. f x \\<in> A", "by (rule index_set_lm_1)"], ["proof (state)\nthis:\n  f x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f x \\<in> - A; x \\<notin> univ_ce\\<rbrakk>\n    \\<Longrightarrow> False", "with fx_in_A"], ["proof (chain)\npicking this:\n  f x \\<in> - A\n  f x \\<in> A", "show False"], ["proof (prove)\nusing this:\n  f x \\<in> - A\n  f x \\<in> A\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f x \\<in> - A \\<Longrightarrow> x \\<in> univ_ce\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x \\<in> univ_ce) = (f x \\<in> - A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x. (x \\<in> univ_ce) = (f x \\<in> - A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "with f_tr f_inj"], ["proof (chain)\npicking this:\n  total_recursive f\n  inj f\n  \\<forall>x. (x \\<in> univ_ce) = (f x \\<in> - A)", "have \"one_reducible_to_via univ_ce (-A) f\""], ["proof (prove)\nusing this:\n  total_recursive f\n  inj f\n  \\<forall>x. (x \\<in> univ_ce) = (f x \\<in> - A)\n\ngoal (1 subgoal):\n 1. one_reducible_to_via univ_ce (- A) f", "by (unfold one_reducible_to_via_def, auto)"], ["proof (state)\nthis:\n  one_reducible_to_via univ_ce (- A) f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV;\n     \\<exists>n\\<in>A. nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "then"], ["proof (chain)\npicking this:\n  one_reducible_to_via univ_ce (- A) f", "show ?thesis"], ["proof (prove)\nusing this:\n  one_reducible_to_via univ_ce (- A) f\n\ngoal (1 subgoal):\n 1. one_reducible_to univ_ce (- A)", "by (unfold one_reducible_to_def, auto)"], ["proof (state)\nthis:\n  one_reducible_to univ_ce (- A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Rice_lm_2: \"\\<lbrakk> index_set A; A \\<noteq> {}; A \\<noteq> UNIV; n \\<in> A;  nat_to_ce_set n = {} \\<rbrakk> \\<Longrightarrow> one_reducible_to univ_ce (- A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV; n \\<in> A;\n     nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV; n \\<in> A;\n     nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "assume A1: \"index_set A\""], ["proof (state)\nthis:\n  index_set A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV; n \\<in> A;\n     nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "assume A2: \"A \\<noteq> {}\""], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV; n \\<in> A;\n     nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "assume A3: \"A \\<noteq> UNIV\""], ["proof (state)\nthis:\n  A \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV; n \\<in> A;\n     nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "assume A4: \"n \\<in> A\""], ["proof (state)\nthis:\n  n \\<in> A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV; n \\<in> A;\n     nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "assume A5: \"nat_to_ce_set n = {}\""], ["proof (state)\nthis:\n  nat_to_ce_set n = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV; n \\<in> A;\n     nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "from A4 A5"], ["proof (chain)\npicking this:\n  n \\<in> A\n  nat_to_ce_set n = {}", "have S1: \"\\<exists> n \\<in> A. nat_to_ce_set n = {}\""], ["proof (prove)\nusing this:\n  n \\<in> A\n  nat_to_ce_set n = {}\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>A. nat_to_ce_set n = {}", "by auto"], ["proof (state)\nthis:\n  \\<exists>n\\<in>A. nat_to_ce_set n = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV; n \\<in> A;\n     nat_to_ce_set n = {}\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce (- A)", "from A1 A2 A3 S1"], ["proof (chain)\npicking this:\n  index_set A\n  A \\<noteq> {}\n  A \\<noteq> UNIV\n  \\<exists>n\\<in>A. nat_to_ce_set n = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  index_set A\n  A \\<noteq> {}\n  A \\<noteq> UNIV\n  \\<exists>n\\<in>A. nat_to_ce_set n = {}\n\ngoal (1 subgoal):\n 1. one_reducible_to univ_ce (- A)", "by (rule Rice_lm_1)"], ["proof (state)\nthis:\n  one_reducible_to univ_ce (- A)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem Rice_1: \"\\<lbrakk> index_set A; A \\<noteq> {}; A \\<noteq> UNIV \\<rbrakk> \\<Longrightarrow> one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce A \\<or>\n                      one_reducible_to univ_ce (- A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce A \\<or>\n                      one_reducible_to univ_ce (- A)", "assume A1: \"index_set A\""], ["proof (state)\nthis:\n  index_set A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce A \\<or>\n                      one_reducible_to univ_ce (- A)", "assume A2: \"A \\<noteq> {}\""], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce A \\<or>\n                      one_reducible_to univ_ce (- A)", "assume A3: \"A \\<noteq> UNIV\""], ["proof (state)\nthis:\n  A \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce A \\<or>\n                      one_reducible_to univ_ce (- A)", "from ce_empty"], ["proof (chain)\npicking this:\n  {} \\<in> ce_sets", "have \"\\<exists> n. {} = nat_to_ce_set n\""], ["proof (prove)\nusing this:\n  {} \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<exists>n. {} = nat_to_ce_set n", "by (rule nat_to_ce_set_srj)"], ["proof (state)\nthis:\n  \\<exists>n. {} = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce A \\<or>\n                      one_reducible_to univ_ce (- A)", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. {} = nat_to_ce_set n", "obtain n where n_empty: \"nat_to_ce_set n = {}\""], ["proof (prove)\nusing this:\n  \\<exists>n. {} = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        nat_to_ce_set n = {} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  nat_to_ce_set n = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV\\<rbrakk>\n    \\<Longrightarrow> one_reducible_to univ_ce A \\<or>\n                      one_reducible_to univ_ce (- A)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)\n 2. \\<not> ?P \\<Longrightarrow>\n    one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)", "assume A: \"n \\<in> A\""], ["proof (state)\nthis:\n  n \\<in> A\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)\n 2. \\<not> ?P \\<Longrightarrow>\n    one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)", "from A1 A2 A3 A n_empty"], ["proof (chain)\npicking this:\n  index_set A\n  A \\<noteq> {}\n  A \\<noteq> UNIV\n  n \\<in> A\n  nat_to_ce_set n = {}", "have \"one_reducible_to univ_ce (- A)\""], ["proof (prove)\nusing this:\n  index_set A\n  A \\<noteq> {}\n  A \\<noteq> UNIV\n  n \\<in> A\n  nat_to_ce_set n = {}\n\ngoal (1 subgoal):\n 1. one_reducible_to univ_ce (- A)", "by (rule Rice_lm_2)"], ["proof (state)\nthis:\n  one_reducible_to univ_ce (- A)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)\n 2. \\<not> ?P \\<Longrightarrow>\n    one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)", "then"], ["proof (chain)\npicking this:\n  one_reducible_to univ_ce (- A)", "show ?thesis"], ["proof (prove)\nusing this:\n  one_reducible_to univ_ce (- A)\n\ngoal (1 subgoal):\n 1. one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)", "by auto"], ["proof (state)\nthis:\n  one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)\n\ngoal (1 subgoal):\n 1. n \\<notin> A \\<Longrightarrow>\n    one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<notin> A \\<Longrightarrow>\n    one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)", "assume \"n \\<notin> A\""], ["proof (state)\nthis:\n  n \\<notin> A\n\ngoal (1 subgoal):\n 1. n \\<notin> A \\<Longrightarrow>\n    one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)", "then"], ["proof (chain)\npicking this:\n  n \\<notin> A", "have A: \"n \\<in> - A\""], ["proof (prove)\nusing this:\n  n \\<notin> A\n\ngoal (1 subgoal):\n 1. n \\<in> - A", "by auto"], ["proof (state)\nthis:\n  n \\<in> - A\n\ngoal (1 subgoal):\n 1. n \\<notin> A \\<Longrightarrow>\n    one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)", "from A1"], ["proof (chain)\npicking this:\n  index_set A", "have S1: \"index_set (- A)\""], ["proof (prove)\nusing this:\n  index_set A\n\ngoal (1 subgoal):\n 1. index_set (- A)", "by (rule index_set_lm_2)"], ["proof (state)\nthis:\n  index_set (- A)\n\ngoal (1 subgoal):\n 1. n \\<notin> A \\<Longrightarrow>\n    one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)", "from A3"], ["proof (chain)\npicking this:\n  A \\<noteq> UNIV", "have S2: \"- A \\<noteq> {}\""], ["proof (prove)\nusing this:\n  A \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. - A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  - A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. n \\<notin> A \\<Longrightarrow>\n    one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)", "from A2"], ["proof (chain)\npicking this:\n  A \\<noteq> {}", "have S3: \"- A \\<noteq> UNIV\""], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. - A \\<noteq> UNIV", "by auto"], ["proof (state)\nthis:\n  - A \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. n \\<notin> A \\<Longrightarrow>\n    one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)", "from S1 S2 S3 A n_empty"], ["proof (chain)\npicking this:\n  index_set (- A)\n  - A \\<noteq> {}\n  - A \\<noteq> UNIV\n  n \\<in> - A\n  nat_to_ce_set n = {}", "have \"one_reducible_to univ_ce (- (- A))\""], ["proof (prove)\nusing this:\n  index_set (- A)\n  - A \\<noteq> {}\n  - A \\<noteq> UNIV\n  n \\<in> - A\n  nat_to_ce_set n = {}\n\ngoal (1 subgoal):\n 1. one_reducible_to univ_ce (- (- A))", "by (rule Rice_lm_2)"], ["proof (state)\nthis:\n  one_reducible_to univ_ce (- (- A))\n\ngoal (1 subgoal):\n 1. n \\<notin> A \\<Longrightarrow>\n    one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)", "then"], ["proof (chain)\npicking this:\n  one_reducible_to univ_ce (- (- A))", "have \"one_reducible_to univ_ce A\""], ["proof (prove)\nusing this:\n  one_reducible_to univ_ce (- (- A))\n\ngoal (1 subgoal):\n 1. one_reducible_to univ_ce A", "by simp"], ["proof (state)\nthis:\n  one_reducible_to univ_ce A\n\ngoal (1 subgoal):\n 1. n \\<notin> A \\<Longrightarrow>\n    one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)", "then"], ["proof (chain)\npicking this:\n  one_reducible_to univ_ce A", "show ?thesis"], ["proof (prove)\nusing this:\n  one_reducible_to univ_ce A\n\ngoal (1 subgoal):\n 1. one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)", "by auto"], ["proof (state)\nthis:\n  one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem Rice_2: \"\\<lbrakk> index_set A; A \\<noteq> {}; A \\<noteq> UNIV \\<rbrakk> \\<Longrightarrow> \\<not> computable A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<not> computable A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<not> computable A", "assume A1: \"index_set A\""], ["proof (state)\nthis:\n  index_set A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<not> computable A", "assume A2: \"A \\<noteq> {}\""], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<not> computable A", "assume A3: \"A \\<noteq> UNIV\""], ["proof (state)\nthis:\n  A \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<not> computable A", "from A1 A2 A3"], ["proof (chain)\npicking this:\n  index_set A\n  A \\<noteq> {}\n  A \\<noteq> UNIV", "have \"one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)\""], ["proof (prove)\nusing this:\n  index_set A\n  A \\<noteq> {}\n  A \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)", "by (rule Rice_1)"], ["proof (state)\nthis:\n  one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<not> computable A", "then"], ["proof (chain)\npicking this:\n  one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)", "have S1: \"\\<not> one_reducible_to univ_ce A \\<longrightarrow> one_reducible_to univ_ce (- A)\""], ["proof (prove)\nusing this:\n  one_reducible_to univ_ce A \\<or> one_reducible_to univ_ce (- A)\n\ngoal (1 subgoal):\n 1. \\<not> one_reducible_to univ_ce A \\<longrightarrow>\n    one_reducible_to univ_ce (- A)", "by auto"], ["proof (state)\nthis:\n  \\<not> one_reducible_to univ_ce A \\<longrightarrow>\n  one_reducible_to univ_ce (- A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>index_set A; A \\<noteq> {}; A \\<noteq> UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<not> computable A", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> computable A", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> \\<not> computable A\n 2. \\<not> ?P \\<Longrightarrow> \\<not> computable A", "assume \"one_reducible_to univ_ce A\""], ["proof (state)\nthis:\n  one_reducible_to univ_ce A\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> \\<not> computable A\n 2. \\<not> ?P \\<Longrightarrow> \\<not> computable A", "then"], ["proof (chain)\npicking this:\n  one_reducible_to univ_ce A", "show \"\\<not> computable A\""], ["proof (prove)\nusing this:\n  one_reducible_to univ_ce A\n\ngoal (1 subgoal):\n 1. \\<not> computable A", "by (rule one_reducible_lm_1)"], ["proof (state)\nthis:\n  \\<not> computable A\n\ngoal (1 subgoal):\n 1. \\<not> one_reducible_to univ_ce A \\<Longrightarrow> \\<not> computable A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> one_reducible_to univ_ce A \\<Longrightarrow> \\<not> computable A", "assume \"\\<not> one_reducible_to univ_ce A\""], ["proof (state)\nthis:\n  \\<not> one_reducible_to univ_ce A\n\ngoal (1 subgoal):\n 1. \\<not> one_reducible_to univ_ce A \\<Longrightarrow> \\<not> computable A", "with S1"], ["proof (chain)\npicking this:\n  \\<not> one_reducible_to univ_ce A \\<longrightarrow>\n  one_reducible_to univ_ce (- A)\n  \\<not> one_reducible_to univ_ce A", "have \"one_reducible_to univ_ce (- A)\""], ["proof (prove)\nusing this:\n  \\<not> one_reducible_to univ_ce A \\<longrightarrow>\n  one_reducible_to univ_ce (- A)\n  \\<not> one_reducible_to univ_ce A\n\ngoal (1 subgoal):\n 1. one_reducible_to univ_ce (- A)", "by auto"], ["proof (state)\nthis:\n  one_reducible_to univ_ce (- A)\n\ngoal (1 subgoal):\n 1. \\<not> one_reducible_to univ_ce A \\<Longrightarrow> \\<not> computable A", "then"], ["proof (chain)\npicking this:\n  one_reducible_to univ_ce (- A)", "have \"\\<not> computable (- A)\""], ["proof (prove)\nusing this:\n  one_reducible_to univ_ce (- A)\n\ngoal (1 subgoal):\n 1. \\<not> computable (- A)", "by (rule one_reducible_lm_1)"], ["proof (state)\nthis:\n  \\<not> computable (- A)\n\ngoal (1 subgoal):\n 1. \\<not> one_reducible_to univ_ce A \\<Longrightarrow> \\<not> computable A", "with computable_complement_3"], ["proof (chain)\npicking this:\n  computable ?A = computable (- ?A)\n  \\<not> computable (- A)", "show \"\\<not> computable A\""], ["proof (prove)\nusing this:\n  computable ?A = computable (- ?A)\n  \\<not> computable (- A)\n\ngoal (1 subgoal):\n 1. \\<not> computable A", "by auto"], ["proof (state)\nthis:\n  \\<not> computable A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> computable A\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem Rice_3: \"\\<lbrakk> C \\<subseteq> ce_sets; computable { n. nat_to_ce_set n \\<in> C} \\<rbrakk> \\<Longrightarrow> C = {} \\<or> C = ce_sets\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> ce_sets;\n     computable {n. nat_to_ce_set n \\<in> C}\\<rbrakk>\n    \\<Longrightarrow> C = {} \\<or> C = ce_sets", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> ce_sets; computable {n. nat_to_ce_set n \\<in> C};\n     \\<not> (C = {} \\<or> C = ce_sets)\\<rbrakk>\n    \\<Longrightarrow> False", "assume A1: \"C \\<subseteq> ce_sets\""], ["proof (state)\nthis:\n  C \\<subseteq> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> ce_sets; computable {n. nat_to_ce_set n \\<in> C};\n     \\<not> (C = {} \\<or> C = ce_sets)\\<rbrakk>\n    \\<Longrightarrow> False", "assume A2: \"computable { n. nat_to_ce_set n \\<in> C}\""], ["proof (state)\nthis:\n  computable {n. nat_to_ce_set n \\<in> C}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> ce_sets; computable {n. nat_to_ce_set n \\<in> C};\n     \\<not> (C = {} \\<or> C = ce_sets)\\<rbrakk>\n    \\<Longrightarrow> False", "assume A3: \"\\<not> (C = {} \\<or> C = ce_sets)\""], ["proof (state)\nthis:\n  \\<not> (C = {} \\<or> C = ce_sets)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> ce_sets; computable {n. nat_to_ce_set n \\<in> C};\n     \\<not> (C = {} \\<or> C = ce_sets)\\<rbrakk>\n    \\<Longrightarrow> False", "from A3"], ["proof (chain)\npicking this:\n  \\<not> (C = {} \\<or> C = ce_sets)", "have A4: \"C \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<not> (C = {} \\<or> C = ce_sets)\n\ngoal (1 subgoal):\n 1. C \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  C \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> ce_sets; computable {n. nat_to_ce_set n \\<in> C};\n     \\<not> (C = {} \\<or> C = ce_sets)\\<rbrakk>\n    \\<Longrightarrow> False", "from A3"], ["proof (chain)\npicking this:\n  \\<not> (C = {} \\<or> C = ce_sets)", "have A5: \"C \\<noteq> ce_sets\""], ["proof (prove)\nusing this:\n  \\<not> (C = {} \\<or> C = ce_sets)\n\ngoal (1 subgoal):\n 1. C \\<noteq> ce_sets", "by auto"], ["proof (state)\nthis:\n  C \\<noteq> ce_sets\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> ce_sets; computable {n. nat_to_ce_set n \\<in> C};\n     \\<not> (C = {} \\<or> C = ce_sets)\\<rbrakk>\n    \\<Longrightarrow> False", "define A where \"A = { n. nat_to_ce_set n \\<in> C}\""], ["proof (state)\nthis:\n  A = {n. nat_to_ce_set n \\<in> C}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> ce_sets; computable {n. nat_to_ce_set n \\<in> C};\n     \\<not> (C = {} \\<or> C = ce_sets)\\<rbrakk>\n    \\<Longrightarrow> False", "have S1: \"index_set A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index_set A", "proof (unfold index_set_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n m.\n       n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m \\<longrightarrow>\n       m \\<in> A", "show \"\\<forall>n m. n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m \\<longrightarrow> m \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n m.\n       n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m \\<longrightarrow>\n       m \\<in> A", "proof (rule allI, rule allI, rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m \\<Longrightarrow>\n       m \\<in> A", "fix n m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m \\<Longrightarrow>\n       m \\<in> A", "assume A1_1: \"n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m\""], ["proof (state)\nthis:\n  n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m \\<Longrightarrow>\n       m \\<in> A", "from A1_1"], ["proof (chain)\npicking this:\n  n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m", "have \"n \\<in> A\""], ["proof (prove)\nusing this:\n  n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m\n\ngoal (1 subgoal):\n 1. n \\<in> A", "by auto"], ["proof (state)\nthis:\n  n \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m \\<Longrightarrow>\n       m \\<in> A", "then"], ["proof (chain)\npicking this:\n  n \\<in> A", "have S1_1: \"nat_to_ce_set n \\<in> C\""], ["proof (prove)\nusing this:\n  n \\<in> A\n\ngoal (1 subgoal):\n 1. nat_to_ce_set n \\<in> C", "by (unfold A_def, auto)"], ["proof (state)\nthis:\n  nat_to_ce_set n \\<in> C\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m \\<Longrightarrow>\n       m \\<in> A", "from A1_1"], ["proof (chain)\npicking this:\n  n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m", "have \"nat_to_ce_set n = nat_to_ce_set m\""], ["proof (prove)\nusing this:\n  n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m\n\ngoal (1 subgoal):\n 1. nat_to_ce_set n = nat_to_ce_set m", "by auto"], ["proof (state)\nthis:\n  nat_to_ce_set n = nat_to_ce_set m\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m \\<Longrightarrow>\n       m \\<in> A", "with S1_1"], ["proof (chain)\npicking this:\n  nat_to_ce_set n \\<in> C\n  nat_to_ce_set n = nat_to_ce_set m", "have \"nat_to_ce_set m \\<in> C\""], ["proof (prove)\nusing this:\n  nat_to_ce_set n \\<in> C\n  nat_to_ce_set n = nat_to_ce_set m\n\ngoal (1 subgoal):\n 1. nat_to_ce_set m \\<in> C", "by auto"], ["proof (state)\nthis:\n  nat_to_ce_set m \\<in> C\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m \\<Longrightarrow>\n       m \\<in> A", "then"], ["proof (chain)\npicking this:\n  nat_to_ce_set m \\<in> C", "show \"m \\<in> A\""], ["proof (prove)\nusing this:\n  nat_to_ce_set m \\<in> C\n\ngoal (1 subgoal):\n 1. m \\<in> A", "by (unfold A_def, auto)"], ["proof (state)\nthis:\n  m \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n m.\n     n \\<in> A \\<and> nat_to_ce_set n = nat_to_ce_set m \\<longrightarrow>\n     m \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  index_set A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> ce_sets; computable {n. nat_to_ce_set n \\<in> C};\n     \\<not> (C = {} \\<or> C = ce_sets)\\<rbrakk>\n    \\<Longrightarrow> False", "have S2: \"A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "from A4"], ["proof (chain)\npicking this:\n  C \\<noteq> {}", "obtain B where S2_1: \"B \\<in> C\""], ["proof (prove)\nusing this:\n  C \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>B. B \\<in> C \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  B \\<in> C\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "with A1"], ["proof (chain)\npicking this:\n  C \\<subseteq> ce_sets\n  B \\<in> C", "have \"B \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  C \\<subseteq> ce_sets\n  B \\<in> C\n\ngoal (1 subgoal):\n 1. B \\<in> ce_sets", "by auto"], ["proof (state)\nthis:\n  B \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  B \\<in> ce_sets", "have \"\\<exists> n. B = nat_to_ce_set n\""], ["proof (prove)\nusing this:\n  B \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<exists>n. B = nat_to_ce_set n", "by (rule nat_to_ce_set_srj)"], ["proof (state)\nthis:\n  \\<exists>n. B = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. B = nat_to_ce_set n", "obtain n where \"B = nat_to_ce_set n\""], ["proof (prove)\nusing this:\n  \\<exists>n. B = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        B = nat_to_ce_set n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  B = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "with S2_1"], ["proof (chain)\npicking this:\n  B \\<in> C\n  B = nat_to_ce_set n", "have \"nat_to_ce_set n \\<in> C\""], ["proof (prove)\nusing this:\n  B \\<in> C\n  B = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. nat_to_ce_set n \\<in> C", "by auto"], ["proof (state)\nthis:\n  nat_to_ce_set n \\<in> C\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  nat_to_ce_set n \\<in> C", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_ce_set n \\<in> C\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by (unfold A_def, auto)"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> ce_sets; computable {n. nat_to_ce_set n \\<in> C};\n     \\<not> (C = {} \\<or> C = ce_sets)\\<rbrakk>\n    \\<Longrightarrow> False", "have S3: \"A \\<noteq> UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> UNIV", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<noteq> UNIV", "from A1 A5"], ["proof (chain)\npicking this:\n  C \\<subseteq> ce_sets\n  C \\<noteq> ce_sets", "obtain B where S2_1: \"B \\<notin> C\" and S2_2: \"B \\<in> ce_sets\""], ["proof (prove)\nusing this:\n  C \\<subseteq> ce_sets\n  C \\<noteq> ce_sets\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>B \\<notin> C; B \\<in> ce_sets\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B \\<notin> C\n  B \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. A \\<noteq> UNIV", "from S2_2"], ["proof (chain)\npicking this:\n  B \\<in> ce_sets", "have \"\\<exists> n. B = nat_to_ce_set n\""], ["proof (prove)\nusing this:\n  B \\<in> ce_sets\n\ngoal (1 subgoal):\n 1. \\<exists>n. B = nat_to_ce_set n", "by (rule nat_to_ce_set_srj)"], ["proof (state)\nthis:\n  \\<exists>n. B = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. A \\<noteq> UNIV", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. B = nat_to_ce_set n", "obtain n where \"B = nat_to_ce_set n\""], ["proof (prove)\nusing this:\n  \\<exists>n. B = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        B = nat_to_ce_set n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  B = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. A \\<noteq> UNIV", "with S2_1"], ["proof (chain)\npicking this:\n  B \\<notin> C\n  B = nat_to_ce_set n", "have \"nat_to_ce_set n \\<notin> C\""], ["proof (prove)\nusing this:\n  B \\<notin> C\n  B = nat_to_ce_set n\n\ngoal (1 subgoal):\n 1. nat_to_ce_set n \\<notin> C", "by auto"], ["proof (state)\nthis:\n  nat_to_ce_set n \\<notin> C\n\ngoal (1 subgoal):\n 1. A \\<noteq> UNIV", "then"], ["proof (chain)\npicking this:\n  nat_to_ce_set n \\<notin> C", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_ce_set n \\<notin> C\n\ngoal (1 subgoal):\n 1. A \\<noteq> UNIV", "by (unfold A_def, auto)"], ["proof (state)\nthis:\n  A \\<noteq> UNIV\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> ce_sets; computable {n. nat_to_ce_set n \\<in> C};\n     \\<not> (C = {} \\<or> C = ce_sets)\\<rbrakk>\n    \\<Longrightarrow> False", "from S1 S2 S3"], ["proof (chain)\npicking this:\n  index_set A\n  A \\<noteq> {}\n  A \\<noteq> UNIV", "have \"\\<not> computable A\""], ["proof (prove)\nusing this:\n  index_set A\n  A \\<noteq> {}\n  A \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. \\<not> computable A", "by (rule Rice_2)"], ["proof (state)\nthis:\n  \\<not> computable A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> ce_sets; computable {n. nat_to_ce_set n \\<in> C};\n     \\<not> (C = {} \\<or> C = ce_sets)\\<rbrakk>\n    \\<Longrightarrow> False", "with A2"], ["proof (chain)\npicking this:\n  computable {n. nat_to_ce_set n \\<in> C}\n  \\<not> computable A", "show False"], ["proof (prove)\nusing this:\n  computable {n. nat_to_ce_set n \\<in> C}\n  \\<not> computable A\n\ngoal (1 subgoal):\n 1. False", "unfolding A_def"], ["proof (prove)\nusing this:\n  computable {n. nat_to_ce_set n \\<in> C}\n  \\<not> computable {n. nat_to_ce_set n \\<in> C}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}