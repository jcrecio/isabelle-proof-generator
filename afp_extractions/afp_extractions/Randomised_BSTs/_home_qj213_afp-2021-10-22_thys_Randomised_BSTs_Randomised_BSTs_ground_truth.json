{"file_name": "/home/qj213/afp-2021-10-22/thys/Randomised_BSTs/Randomised_BSTs.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Randomised_BSTs", "problem_names": ["lemma return_pmf_if: \"return_pmf (if P then a else b) = (if P then return_pmf a else return_pmf b)\"", "lemma True_in_set_bernoulli_pmf_iff [simp]:\n  \"True \\<in> set_pmf (bernoulli_pmf p) \\<longleftrightarrow> p > 0\"", "lemma False_in_set_bernoulli_pmf_iff [simp]:\n  \"False \\<in> set_pmf (bernoulli_pmf p) \\<longleftrightarrow> p < 1\"", "lemma in_set_pmf_of_setD: \"x \\<in> set_pmf (pmf_of_set A) \\<Longrightarrow> finite A \\<Longrightarrow> A \\<noteq> {} \\<Longrightarrow> x \\<in> A\"", "lemma random_bst_reduce:\n  \"finite A \\<Longrightarrow> A \\<noteq> {} \\<Longrightarrow>\n     random_bst A = do {x \\<leftarrow> pmf_of_set A; l \\<leftarrow> random_bst {y\\<in>A. y < x};\n                        r \\<leftarrow> random_bst {y\\<in>A. y > x}; return_pmf \\<langle>l, x, r\\<rangle>}\"", "lemma pmf_bind_bernoulli:\n  assumes \"x \\<in> {0..1}\"\n  shows   \"pmf (bernoulli_pmf x \\<bind> f) y = x * pmf (f True) y + (1 - x) * pmf (f False) y\"", "lemma vimage_bool_pair:\n  \"f -` A = (\\<Union>x\\<in>{True, False}. \\<Union>y\\<in>{True, False}. if f (x, y) \\<in> A then {(x, y)} else {})\"\n  (is \"?lhs = ?rhs\")", "lemma Leaf_in_set_random_bst_iff [simp]:\n  \"Leaf \\<in> set_pmf (random_bst A) \\<longleftrightarrow> A = {} \\<or> \\<not>finite A\"", "lemma bst_insert [intro]: \"bst t \\<Longrightarrow> bst (Tree_Set.insert x t)\"", "lemma bst_bst_of_list [intro]: \"bst (bst_of_list xs)\"", "lemma bst_random_bst:\n  assumes \"t \\<in> set_pmf (random_bst A)\"\n  shows   \"bst t\"", "lemma set_random_bst:\n  assumes \"t \\<in> set_pmf (random_bst A)\" \"finite A\"\n  shows   \"set_tree t = A\"", "lemma isin_bst:\n  assumes \"bst t\"\n  shows   \"isin t x \\<longleftrightarrow> x \\<in> set_tree t\"", "lemma isin_random_bst:\n  assumes \"finite A\" \"t \\<in> set_pmf (random_bst A)\"\n  shows   \"isin t x \\<longleftrightarrow> x \\<in> A\"", "lemma card_3way_split:\n  assumes \"x \\<in> (A :: 'a :: linorder set)\" \"finite A\"\n  shows   \"card A = card {y\\<in>A. y < x} + card {y\\<in>A. y > x} + 1\"", "lemma pmf_of_set_union_split:\n  assumes \"finite A\" \"finite B\" \"A \\<inter> B = {}\" \"A \\<union> B \\<noteq> {}\"\n  assumes \"p = card A / (card A + card B)\"\n  shows   \"do {b \\<leftarrow> bernoulli_pmf p; if b then pmf_of_set A else pmf_of_set B} = pmf_of_set (A \\<union> B)\"\n            (is \"?lhs = ?rhs\")", "lemma pmf_of_set_split_inter_diff:\n  assumes \"finite A\" \"finite B\" \"A \\<noteq> {}\" \"B \\<noteq> {}\"\n  assumes \"p = card (A \\<inter> B) / card B\"\n  shows   \"do {b \\<leftarrow> bernoulli_pmf p; if b then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)} =\n             pmf_of_set B\" (is \"?lhs = ?rhs\")", "lemma pmf_of_set_3way_split:\n  fixes f g h :: \"'a \\<Rightarrow> 'b pmf\"\n  assumes \"finite A\" \"A \\<noteq> {}\" \"A1 \\<inter> A2 = {}\" \"A1 \\<inter> A3 = {}\" \"A2 \\<inter> A3 = {}\" \"A1 \\<union> A2 \\<union> A3 = A\"\n  shows   \"do {x \\<leftarrow> pmf_of_set A; if x \\<in> A1 then f x else if x \\<in> A2 then g x else h x} =\n           do {i \\<leftarrow> pmf_of_set {..<card A};\n               if i < card A1 then pmf_of_set A1 \\<bind> f\n               else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n               else pmf_of_set A3 \\<bind> h}\" (is \"?lhs = ?rhs\")", "lemma split_bst'_altdef: \"split_bst' x t = (isin t x, split_bst x t)\"", "lemma fst_split_bst' [simp]: \"fst (split_bst' x t) = isin t x\"\n  and snd_split_bst' [simp]: \"snd (split_bst' x t) = split_bst x t\"", "lemma size_fst_split_bst [termination_simp]: \"size (fst (split_bst x t)) \\<le> size t\"", "lemma size_snd_split_bst [termination_simp]: \"size (snd (split_bst x t)) \\<le> size t\"", "lemmas size_split_bst = size_fst_split_bst size_snd_split_bst", "lemma set_split_bst1: \"bst t \\<Longrightarrow> set_tree (fst (split_bst x t)) = {y \\<in> set_tree t. y < x}\"", "lemma set_split_bst2: \"bst t \\<Longrightarrow> set_tree (snd (split_bst x t)) = {y \\<in> set_tree t. y > x}\"", "lemma bst_split_bst1 [intro]: \"bst t \\<Longrightarrow> bst (fst (split_bst x t))\"", "lemma bst_split_bst2 [intro]: \"bst t \\<Longrightarrow> bst (snd (split_bst x t))\"", "theorem split_random_bst:\n  assumes \"finite A\"\n  shows   \"map_pmf (split_bst x) (random_bst A) =\n             pair_pmf (random_bst {y\\<in>A. y < x}) (random_bst {y\\<in>A. y > x})\"", "lemma mrbst_join_Leaf_left [simp]: \"mrbst_join \\<langle>\\<rangle> = return_pmf\"", "lemma mrbst_join_Leaf_right [simp]: \"mrbst_join t \\<langle>\\<rangle> = return_pmf t\"", "lemma mrbst_join_reduce:\n  \"t1 \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow> t2 \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow> mrbst_join t1 t2 =\n     do {\n        b \\<leftarrow> bernoulli_pmf (size t1 / (size t1 + size t2));\n        if b then\n          (case t1 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>r'. \\<langle>l, x, r'\\<rangle>) (mrbst_join r t2))\n        else\n          (case t2 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>) (mrbst_join t1 l))\n      }\"", "lemmas [simp del] = mrbst_join.simps", "lemma\n  assumes \"t' \\<in> set_pmf (mrbst_join t1 t2)\" \"bst t1\" \"bst t2\"\n  assumes \"\\<And>x y. x \\<in> set_tree t1 \\<Longrightarrow> y \\<in> set_tree t2 \\<Longrightarrow> x < y\"\n  shows   bst_mrbst_join: \"bst t'\"\n    and   set_mrbst_join: \"set_tree t' = set_tree t1 \\<union> set_tree t2\"", "theorem mrbst_join_correct:\n  fixes A B :: \"'a :: linorder set\"\n  assumes \"finite A\" \"finite B\" \"\\<And>x y. x \\<in> A \\<Longrightarrow> y \\<in> B \\<Longrightarrow> x < y\"\n  shows   \"do {t1 \\<leftarrow> random_bst A; t2 \\<leftarrow> random_bst B; mrbst_join t1 t2} = random_bst (A \\<union> B)\"", "lemmas [simp del] = mrbst_push_down.simps", "lemma\n  assumes \"t' \\<in> set_pmf (mrbst_push_down t1 x t2)\" \"bst t1\" \"bst t2\"\n  assumes \"\\<And>y. y \\<in> set_tree t1 \\<Longrightarrow> y < x\" \"\\<And>y. y \\<in> set_tree t2 \\<Longrightarrow> y > x\"\n  shows   bst_mrbst_push_down: \"bst t'\"\n    and   set_mrbst_push_down: \"set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\"", "theorem mrbst_push_down_correct:\n  fixes A B :: \"'a :: linorder set\"\n  assumes \"finite A\" \"finite B\" \"\\<And>y. y \\<in> A \\<Longrightarrow> y < x\" \"\\<And>y. y \\<in> B \\<Longrightarrow> x < y\"\n  shows   \"do {l \\<leftarrow> random_bst A; r \\<leftarrow> random_bst B; mrbst_push_down l x r} =\n             random_bst ({x} \\<union> A \\<union> B)\"", "lemma mrbst_push_down_correct':\n  assumes \"finite (A :: 'a :: linorder set)\" \"x \\<in> A\"\n  shows   \"do {l \\<leftarrow> random_bst {y\\<in>A. y < x}; r \\<leftarrow> random_bst {y\\<in>A. y > x}; mrbst_push_down l x r} =\n             random_bst A\" (is \"?lhs = ?rhs\")", "lemma mrbst_inter_diff_reduce:\n  \"mrbst_inter_diff b \\<langle>l1, x, r1\\<rangle> =\n     (\\<lambda>t2. case split_bst' x t2 of (sep, l2, r2) \\<Rightarrow>\n        do {\n           l \\<leftarrow> mrbst_inter_diff b l1 l2;\n           r \\<leftarrow> mrbst_inter_diff b r1 r2;\n           if sep = b then return_pmf \\<langle>l, x, r\\<rangle> else mrbst_join l r\n         })\"", "lemma mrbst_inter_diff_Leaf_left [simp]:\n  \"mrbst_inter_diff b \\<langle>\\<rangle> = (\\<lambda>_. return_pmf \\<langle>\\<rangle>)\"", "lemma mrbst_inter_diff_Leaf_right [simp]:\n  \"mrbst_inter_diff b (t1 :: 'a :: linorder tree) \\<langle>\\<rangle> = return_pmf (if b then \\<langle>\\<rangle> else t1)\"", "lemma\n  fixes t1 t2 :: \"'a :: linorder tree\" and b :: bool\n  defines \"setop \\<equiv> (if b then (\\<inter>) else (-) :: 'a set \\<Rightarrow> _)\"\n  assumes \"t' \\<in> set_pmf (mrbst_inter_diff b t1 t2)\" \"bst t1\" \"bst t2\"\n  shows   bst_mrbst_inter_diff: \"bst t'\"\n    and   set_mrbst_inter_diff: \"set_tree t' = setop (set_tree t1) (set_tree t2)\"", "theorem mrbst_inter_diff_correct:\n  fixes A B :: \"'a :: linorder set\" and b :: bool\n  defines \"setop \\<equiv> (if b then (\\<inter>) else (-) :: 'a set \\<Rightarrow> _)\"\n  assumes \"finite A\" \"finite B\"\n  shows   \"do {t1 \\<leftarrow> random_bst A; t2 \\<leftarrow> random_bst B; mrbst_inter_diff b t1 t2} =\n             random_bst (setop A B)\"", "lemma mrbst_inter_Leaf_left [simp]:\n  \"mrbst_inter \\<langle>\\<rangle> = (\\<lambda>_. return_pmf \\<langle>\\<rangle>)\"", "lemma mrbst_inter_Leaf_right [simp]:\n  \"mrbst_inter (t1 :: 'a :: linorder tree) \\<langle>\\<rangle> = return_pmf \\<langle>\\<rangle>\"", "lemma mrbst_inter_reduce:\n  \"mrbst_inter \\<langle>l1, x, r1\\<rangle> =\n     (\\<lambda>t2. case split_bst' x t2 of (sep, l2, r2) \\<Rightarrow>\n        do {\n           l \\<leftarrow> mrbst_inter l1 l2;\n           r \\<leftarrow> mrbst_inter r1 r2;\n           if sep then return_pmf \\<langle>l, x, r\\<rangle> else mrbst_join l r\n         })\"", "lemma mrbst_inter_altdef: \"mrbst_inter = mrbst_inter_diff True\"", "lemma mrbst_diff_Leaf_left [simp]:\n  \"mrbst_diff \\<langle>\\<rangle> = (\\<lambda>_. return_pmf \\<langle>\\<rangle>)\"", "lemma mrbst_diff_Leaf_right [simp]:\n  \"mrbst_diff (t1 :: 'a :: linorder tree) \\<langle>\\<rangle> = return_pmf t1\"", "lemma mrbst_diff_reduce:\n  \"mrbst_diff \\<langle>l1, x, r1\\<rangle> =\n     (\\<lambda>t2. case split_bst' x t2 of (sep, l2, r2) \\<Rightarrow>\n        do {\n           l \\<leftarrow> mrbst_diff l1 l2;\n           r \\<leftarrow> mrbst_diff r1 r2;\n           if sep then mrbst_join l r else return_pmf \\<langle>l, x, r\\<rangle>\n         })\"", "lemma If_not: \"(if \\<not>b then x else y) = (if b then y else x)\"", "lemma mrbst_diff_altdef: \"mrbst_diff = mrbst_inter_diff False\"", "lemma mrbst_union_Leaf_left [simp]: \"mrbst_union \\<langle>\\<rangle> = return_pmf\"", "lemma mrbst_union_Leaf_right [simp]: \"mrbst_union t1 \\<langle>\\<rangle> = return_pmf t1\"", "lemma\n  fixes t1 t2 :: \"'a :: linorder tree\" and b :: bool\n  assumes \"t' \\<in> set_pmf (mrbst_union t1 t2)\" \"bst t1\" \"bst t2\"\n  shows   bst_mrbst_union: \"bst t'\"\n    and   set_mrbst_union: \"set_tree t' = set_tree t1 \\<union> set_tree t2\"", "theorem mrbst_union_correct:\n  assumes \"finite A\" \"finite B\"\n  shows   \"do {t1 \\<leftarrow> random_bst A; t2 \\<leftarrow> random_bst B; mrbst_union t1 t2} =\n             random_bst (A \\<union> B)\"", "lemma mrbst_insert_altdef: \"mrbst_insert x t = mrbst_union \\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle> t\"", "lemma mrbst_delete_altdef: \"mrbst_delete x t = mrbst_diff t \\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle>\""], "translations": [["", "lemma return_pmf_if: \"return_pmf (if P then a else b) = (if P then return_pmf a else return_pmf b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_pmf (if P then a else b) =\n    (if P then return_pmf a else return_pmf b)", "by simp"], ["", "context\nbegin"], ["", "interpretation pmf_as_function"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lemma True_in_set_bernoulli_pmf_iff [simp]:\n  \"True \\<in> set_pmf (bernoulli_pmf p) \\<longleftrightarrow> p > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (True \\<in> set_pmf (bernoulli_pmf p)) = (0 < p)", "by transfer auto"], ["", "lemma False_in_set_bernoulli_pmf_iff [simp]:\n  \"False \\<in> set_pmf (bernoulli_pmf p) \\<longleftrightarrow> p < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (False \\<in> set_pmf (bernoulli_pmf p)) = (p < 1)", "by transfer auto"], ["", "end"], ["", "lemma in_set_pmf_of_setD: \"x \\<in> set_pmf (pmf_of_set A) \\<Longrightarrow> finite A \\<Longrightarrow> A \\<noteq> {} \\<Longrightarrow> x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> set_pmf (pmf_of_set A); finite A;\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> x \\<in> A", "by (subst (asm) set_pmf_of_set) auto"], ["", "lemma random_bst_reduce:\n  \"finite A \\<Longrightarrow> A \\<noteq> {} \\<Longrightarrow>\n     random_bst A = do {x \\<leftarrow> pmf_of_set A; l \\<leftarrow> random_bst {y\\<in>A. y < x};\n                        r \\<leftarrow> random_bst {y\\<in>A. y > x}; return_pmf \\<langle>l, x, r\\<rangle>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> random_bst A =\n                      pmf_of_set A \\<bind>\n                      (\\<lambda>x.\n                          random_bst {y \\<in> A. y < x} \\<bind>\n                          (\\<lambda>l.\n                              random_bst {y \\<in> A. x < y} \\<bind>\n                              (\\<lambda>r.\n                                  return_pmf \\<langle>l, x, r\\<rangle>)))", "by (subst random_bst.simps) auto"], ["", "lemma pmf_bind_bernoulli:\n  assumes \"x \\<in> {0..1}\"\n  shows   \"pmf (bernoulli_pmf x \\<bind> f) y = x * pmf (f True) y + (1 - x) * pmf (f False) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf (bernoulli_pmf x \\<bind> f) y =\n    x * pmf (f True) y + (1 - x) * pmf (f False) y", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> {0..1}\n\ngoal (1 subgoal):\n 1. pmf (bernoulli_pmf x \\<bind> f) y =\n    x * pmf (f True) y + (1 - x) * pmf (f False) y", "by (simp add: pmf_bind)"], ["", "lemma vimage_bool_pair:\n  \"f -` A = (\\<Union>x\\<in>{True, False}. \\<Union>y\\<in>{True, False}. if f (x, y) \\<in> A then {(x, y)} else {})\"\n  (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` A =\n    (\\<Union>x\\<in>{True, False}.\n        \\<Union>y\\<in>{True, False}.\n           if f (x, y) \\<in> A then {(x, y)} else {})", "unfolding set_eq_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (x \\<in> f -` A) =\n       (x \\<in> (\\<Union>x\\<in>{True, False}.\n                    \\<Union>y\\<in>{True, False}.\n                       if f (x, y) \\<in> A then {(x, y)} else {}))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> f -` A) =\n       (x \\<in> (\\<Union>x\\<in>{True, False}.\n                    \\<Union>y\\<in>{True, False}.\n                       if f (x, y) \\<in> A then {(x, y)} else {}))", "fix x :: \"bool \\<times> bool\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> f -` A) =\n       (x \\<in> (\\<Union>x\\<in>{True, False}.\n                    \\<Union>y\\<in>{True, False}.\n                       if f (x, y) \\<in> A then {(x, y)} else {}))", "obtain a b where [simp]: \"x = (a, b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a b. x = (a, b) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases x)"], ["proof (state)\nthis:\n  x = (a, b)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> f -` A) =\n       (x \\<in> (\\<Union>x\\<in>{True, False}.\n                    \\<Union>y\\<in>{True, False}.\n                       if f (x, y) \\<in> A then {(x, y)} else {}))", "show \"x \\<in> ?lhs \\<longleftrightarrow> x \\<in> ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> f -` A) =\n    (x \\<in> (\\<Union>x\\<in>{True, False}.\n                 \\<Union>y\\<in>{True, False}.\n                    if f (x, y) \\<in> A then {(x, y)} else {}))", "by (cases a; cases b) auto"], ["proof (state)\nthis:\n  (x \\<in> f -` A) =\n  (x \\<in> (\\<Union>x\\<in>{True, False}.\n               \\<Union>y\\<in>{True, False}.\n                  if f (x, y) \\<in> A then {(x, y)} else {}))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Leaf_in_set_random_bst_iff [simp]:\n  \"Leaf \\<in> set_pmf (random_bst A) \\<longleftrightarrow> A = {} \\<or> \\<not>finite A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>\\<rangle> \\<in> set_pmf (random_bst A)) =\n    (A = {} \\<or> infinite A)", "by (subst random_bst.simps) auto"], ["", "lemma bst_insert [intro]: \"bst t \\<Longrightarrow> bst (Tree_Set.insert x t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t \\<Longrightarrow> bst (Tree_Set.insert x t)", "by (simp add: bst_iff_sorted_wrt_less inorder_insert sorted_ins_list)"], ["", "lemma bst_bst_of_list [intro]: \"bst (bst_of_list xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst (bst_of_list xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. bst (bst_of_list xs)", "have \"bst (fold Tree_Set.insert xs t)\" if \"bst t\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. bst (fold Tree_Set.insert xs t)", "using that"], ["proof (prove)\nusing this:\n  bst t\n\ngoal (1 subgoal):\n 1. bst (fold Tree_Set.insert xs t)", "proof (induction xs arbitrary: t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. bst t \\<Longrightarrow> bst (fold Tree_Set.insert [] t)\n 2. \\<And>a xs t.\n       \\<lbrakk>\\<And>t.\n                   bst t \\<Longrightarrow> bst (fold Tree_Set.insert xs t);\n        bst t\\<rbrakk>\n       \\<Longrightarrow> bst (fold Tree_Set.insert (a # xs) t)", "case (Cons y xs)"], ["proof (state)\nthis:\n  bst ?t \\<Longrightarrow> bst (fold Tree_Set.insert xs ?t)\n  bst t\n\ngoal (2 subgoals):\n 1. \\<And>t. bst t \\<Longrightarrow> bst (fold Tree_Set.insert [] t)\n 2. \\<And>a xs t.\n       \\<lbrakk>\\<And>t.\n                   bst t \\<Longrightarrow> bst (fold Tree_Set.insert xs t);\n        bst t\\<rbrakk>\n       \\<Longrightarrow> bst (fold Tree_Set.insert (a # xs) t)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. bst (fold Tree_Set.insert (y # xs) t)", "by (auto intro!: Cons bst_insert)"], ["proof (state)\nthis:\n  bst (fold Tree_Set.insert (y # xs) t)\n\ngoal (1 subgoal):\n 1. \\<And>t. bst t \\<Longrightarrow> bst (fold Tree_Set.insert [] t)", "qed auto"], ["proof (state)\nthis:\n  bst ?t \\<Longrightarrow> bst (fold Tree_Set.insert xs ?t)\n\ngoal (1 subgoal):\n 1. bst (bst_of_list xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  bst ?t \\<Longrightarrow> bst (fold Tree_Set.insert xs ?t)\n\ngoal (1 subgoal):\n 1. bst (bst_of_list xs)", "by (simp add: bst_of_list_altdef)"], ["proof (state)\nthis:\n  bst (bst_of_list xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bst_random_bst:\n  assumes \"t \\<in> set_pmf (random_bst A)\"\n  shows   \"bst t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t", "proof (cases \"finite A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> bst t\n 2. infinite A \\<Longrightarrow> bst t", "case True"], ["proof (state)\nthis:\n  finite A\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> bst t\n 2. infinite A \\<Longrightarrow> bst t", "have \"random_bst A = map_pmf bst_of_list (pmf_of_set (permutations_of_set A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A = map_pmf bst_of_list (pmf_of_set (permutations_of_set A))", "by (rule random_bst_altdef) fact+"], ["proof (state)\nthis:\n  random_bst A = map_pmf bst_of_list (pmf_of_set (permutations_of_set A))\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> bst t\n 2. infinite A \\<Longrightarrow> bst t", "also"], ["proof (state)\nthis:\n  random_bst A = map_pmf bst_of_list (pmf_of_set (permutations_of_set A))\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> bst t\n 2. infinite A \\<Longrightarrow> bst t", "have \"set_pmf \\<dots> = bst_of_list ` permutations_of_set A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_pmf (map_pmf bst_of_list (pmf_of_set (permutations_of_set A))) =\n    bst_of_list ` permutations_of_set A", "using True"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. set_pmf (map_pmf bst_of_list (pmf_of_set (permutations_of_set A))) =\n    bst_of_list ` permutations_of_set A", "by auto"], ["proof (state)\nthis:\n  set_pmf (map_pmf bst_of_list (pmf_of_set (permutations_of_set A))) =\n  bst_of_list ` permutations_of_set A\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> bst t\n 2. infinite A \\<Longrightarrow> bst t", "finally"], ["proof (chain)\npicking this:\n  set_pmf (random_bst A) = bst_of_list ` permutations_of_set A", "show ?thesis"], ["proof (prove)\nusing this:\n  set_pmf (random_bst A) = bst_of_list ` permutations_of_set A\n\ngoal (1 subgoal):\n 1. bst t", "using assms"], ["proof (prove)\nusing this:\n  set_pmf (random_bst A) = bst_of_list ` permutations_of_set A\n  t \\<in> set_pmf (random_bst A)\n\ngoal (1 subgoal):\n 1. bst t", "by auto"], ["proof (state)\nthis:\n  bst t\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> bst t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> bst t", "case False"], ["proof (state)\nthis:\n  infinite A\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> bst t", "hence \"random_bst A = return_pmf \\<langle>\\<rangle>\""], ["proof (prove)\nusing this:\n  infinite A\n\ngoal (1 subgoal):\n 1. random_bst A = return_pmf \\<langle>\\<rangle>", "by (simp add: random_bst.simps)"], ["proof (state)\nthis:\n  random_bst A = return_pmf \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> bst t", "with assms"], ["proof (chain)\npicking this:\n  t \\<in> set_pmf (random_bst A)\n  random_bst A = return_pmf \\<langle>\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  t \\<in> set_pmf (random_bst A)\n  random_bst A = return_pmf \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. bst t", "by simp"], ["proof (state)\nthis:\n  bst t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma set_random_bst:\n  assumes \"t \\<in> set_pmf (random_bst A)\" \"finite A\"\n  shows   \"set_tree t = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_tree t = A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set_tree t = A", "have \"random_bst A = map_pmf bst_of_list (pmf_of_set (permutations_of_set A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A = map_pmf bst_of_list (pmf_of_set (permutations_of_set A))", "by (rule random_bst_altdef) fact+"], ["proof (state)\nthis:\n  random_bst A = map_pmf bst_of_list (pmf_of_set (permutations_of_set A))\n\ngoal (1 subgoal):\n 1. set_tree t = A", "also"], ["proof (state)\nthis:\n  random_bst A = map_pmf bst_of_list (pmf_of_set (permutations_of_set A))\n\ngoal (1 subgoal):\n 1. set_tree t = A", "have \"set_pmf \\<dots> = bst_of_list ` permutations_of_set A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_pmf (map_pmf bst_of_list (pmf_of_set (permutations_of_set A))) =\n    bst_of_list ` permutations_of_set A", "using assms"], ["proof (prove)\nusing this:\n  t \\<in> set_pmf (random_bst A)\n  finite A\n\ngoal (1 subgoal):\n 1. set_pmf (map_pmf bst_of_list (pmf_of_set (permutations_of_set A))) =\n    bst_of_list ` permutations_of_set A", "by auto"], ["proof (state)\nthis:\n  set_pmf (map_pmf bst_of_list (pmf_of_set (permutations_of_set A))) =\n  bst_of_list ` permutations_of_set A\n\ngoal (1 subgoal):\n 1. set_tree t = A", "finally"], ["proof (chain)\npicking this:\n  set_pmf (random_bst A) = bst_of_list ` permutations_of_set A", "show ?thesis"], ["proof (prove)\nusing this:\n  set_pmf (random_bst A) = bst_of_list ` permutations_of_set A\n\ngoal (1 subgoal):\n 1. set_tree t = A", "using assms"], ["proof (prove)\nusing this:\n  set_pmf (random_bst A) = bst_of_list ` permutations_of_set A\n  t \\<in> set_pmf (random_bst A)\n  finite A\n\ngoal (1 subgoal):\n 1. set_tree t = A", "by (auto simp: permutations_of_setD)"], ["proof (state)\nthis:\n  set_tree t = A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isin_bst:\n  assumes \"bst t\"\n  shows   \"isin t x \\<longleftrightarrow> x \\<in> set_tree t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isin t x = (x \\<in> set_tree t)", "using assms"], ["proof (prove)\nusing this:\n  bst t\n\ngoal (1 subgoal):\n 1. isin t x = (x \\<in> set_tree t)", "by (subst isin_set) (auto simp: bst_iff_sorted_wrt_less)"], ["", "lemma isin_random_bst:\n  assumes \"finite A\" \"t \\<in> set_pmf (random_bst A)\"\n  shows   \"isin t x \\<longleftrightarrow> x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isin t x = (x \\<in> A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. isin t x = (x \\<in> A)", "from assms"], ["proof (chain)\npicking this:\n  finite A\n  t \\<in> set_pmf (random_bst A)", "have \"bst t\""], ["proof (prove)\nusing this:\n  finite A\n  t \\<in> set_pmf (random_bst A)\n\ngoal (1 subgoal):\n 1. bst t", "by (auto dest: bst_random_bst)"], ["proof (state)\nthis:\n  bst t\n\ngoal (1 subgoal):\n 1. isin t x = (x \\<in> A)", "with assms"], ["proof (chain)\npicking this:\n  finite A\n  t \\<in> set_pmf (random_bst A)\n  bst t", "show ?thesis"], ["proof (prove)\nusing this:\n  finite A\n  t \\<in> set_pmf (random_bst A)\n  bst t\n\ngoal (1 subgoal):\n 1. isin t x = (x \\<in> A)", "by (simp add: isin_bst set_random_bst)"], ["proof (state)\nthis:\n  isin t x = (x \\<in> A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_3way_split:\n  assumes \"x \\<in> (A :: 'a :: linorder set)\" \"finite A\"\n  shows   \"card A = card {y\\<in>A. y < x} + card {y\\<in>A. y > x} + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card A = card {y \\<in> A. y < x} + card {y \\<in> A. x < y} + 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card A = card {y \\<in> A. y < x} + card {y \\<in> A. x < y} + 1", "from assms"], ["proof (chain)\npicking this:\n  x \\<in> A\n  finite A", "have \"A = insert x ({y\\<in>A. y < x} \\<union> {y\\<in>A. y > x})\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  finite A\n\ngoal (1 subgoal):\n 1. A = insert x ({y \\<in> A. y < x} \\<union> {y \\<in> A. x < y})", "by auto"], ["proof (state)\nthis:\n  A = insert x ({y \\<in> A. y < x} \\<union> {y \\<in> A. x < y})\n\ngoal (1 subgoal):\n 1. card A = card {y \\<in> A. y < x} + card {y \\<in> A. x < y} + 1", "also"], ["proof (state)\nthis:\n  A = insert x ({y \\<in> A. y < x} \\<union> {y \\<in> A. x < y})\n\ngoal (1 subgoal):\n 1. card A = card {y \\<in> A. y < x} + card {y \\<in> A. x < y} + 1", "have \"card \\<dots> = card {y\\<in>A. y < x} + card {y\\<in>A. y > x} + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (insert x ({y \\<in> A. y < x} \\<union> {y \\<in> A. x < y})) =\n    card {y \\<in> A. y < x} + card {y \\<in> A. x < y} + 1", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> A\n  finite A\n\ngoal (1 subgoal):\n 1. card (insert x ({y \\<in> A. y < x} \\<union> {y \\<in> A. x < y})) =\n    card {y \\<in> A. y < x} + card {y \\<in> A. x < y} + 1", "by (subst card_insert_disjoint) (auto intro: card_Un_disjoint)"], ["proof (state)\nthis:\n  card (insert x ({y \\<in> A. y < x} \\<union> {y \\<in> A. x < y})) =\n  card {y \\<in> A. y < x} + card {y \\<in> A. x < y} + 1\n\ngoal (1 subgoal):\n 1. card A = card {y \\<in> A. y < x} + card {y \\<in> A. x < y} + 1", "finally"], ["proof (chain)\npicking this:\n  card A = card {y \\<in> A. y < x} + card {y \\<in> A. x < y} + 1", "show ?thesis"], ["proof (prove)\nusing this:\n  card A = card {y \\<in> A. y < x} + card {y \\<in> A. x < y} + 1\n\ngoal (1 subgoal):\n 1. card A = card {y \\<in> A. y < x} + card {y \\<in> A. x < y} + 1", "."], ["proof (state)\nthis:\n  card A = card {y \\<in> A. y < x} + card {y \\<in> A. x < y} + 1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The following theorem allows splitting a uniformly random choice from a union of two disjoint\n  sets to first tossing a coin to decide on one of the constituent sets and then chooing an \n  element from it uniformly at random.\n\\<close>"], ["", "lemma pmf_of_set_union_split:\n  assumes \"finite A\" \"finite B\" \"A \\<inter> B = {}\" \"A \\<union> B \\<noteq> {}\"\n  assumes \"p = card A / (card A + card B)\"\n  shows   \"do {b \\<leftarrow> bernoulli_pmf p; if b then pmf_of_set A else pmf_of_set B} = pmf_of_set (A \\<union> B)\"\n            (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B) =\n    pmf_of_set (A \\<union> B)", "proof (rule pmf_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (bernoulli_pmf p \\<bind>\n            (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B))\n        i =\n       pmf (pmf_of_set (A \\<union> B)) i", "fix x :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (bernoulli_pmf p \\<bind>\n            (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B))\n        i =\n       pmf (pmf_of_set (A \\<union> B)) i", "from assms"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  A \\<inter> B = {}\n  A \\<union> B \\<noteq> {}\n  p = real (card A) / real (card A + card B)", "have p: \"p \\<in> {0..1}\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<inter> B = {}\n  A \\<union> B \\<noteq> {}\n  p = real (card A) / real (card A + card B)\n\ngoal (1 subgoal):\n 1. p \\<in> {0..1}", "by (auto simp: divide_simps assms(5) split: if_splits)"], ["proof (state)\nthis:\n  p \\<in> {0..1}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (bernoulli_pmf p \\<bind>\n            (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B))\n        i =\n       pmf (pmf_of_set (A \\<union> B)) i", "have \"pmf ?lhs x = pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf (bernoulli_pmf p \\<bind>\n         (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B))\n     x =\n    pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p)", "unfolding pmf_bind"], ["proof (prove)\ngoal (1 subgoal):\n 1. measure_pmf.expectation (bernoulli_pmf p)\n     (\\<lambda>xa. pmf (if xa then pmf_of_set A else pmf_of_set B) x) =\n    pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p)", "using p"], ["proof (prove)\nusing this:\n  p \\<in> {0..1}\n\ngoal (1 subgoal):\n 1. measure_pmf.expectation (bernoulli_pmf p)\n     (\\<lambda>xa. pmf (if xa then pmf_of_set A else pmf_of_set B) x) =\n    pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p)", "by (subst integral_bernoulli_pmf) auto"], ["proof (state)\nthis:\n  pmf (bernoulli_pmf p \\<bind>\n       (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B))\n   x =\n  pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (bernoulli_pmf p \\<bind>\n            (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B))\n        i =\n       pmf (pmf_of_set (A \\<union> B)) i", "also"], ["proof (state)\nthis:\n  pmf (bernoulli_pmf p \\<bind>\n       (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B))\n   x =\n  pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (bernoulli_pmf p \\<bind>\n            (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B))\n        i =\n       pmf (pmf_of_set (A \\<union> B)) i", "consider \"x \\<in> A\" \"B \\<noteq> {}\" | \"x \\<in> B\" \"A \\<noteq> {}\" | \"x \\<in> A\" \"B = {}\" | \"x \\<in> B\" \"A = {}\" |\n                \"x \\<notin> A\" \"x \\<notin> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>x \\<in> A; B \\<noteq> {}\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>x \\<in> A; B = {}\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>x \\<in> B; A = {}\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>x \\<notin> A; x \\<notin> B\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<inter> B = {}\n  A \\<union> B \\<noteq> {}\n  p = real (card A) / real (card A + card B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>x \\<in> A; B \\<noteq> {}\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>x \\<in> A; B = {}\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>x \\<in> B; A = {}\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>x \\<notin> A; x \\<notin> B\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk>x \\<in> A; B \\<noteq> {}\\<rbrakk>\n           \\<Longrightarrow> ?thesis;\n   \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk> \\<Longrightarrow> ?thesis;\n   \\<lbrakk>x \\<in> A; B = {}\\<rbrakk> \\<Longrightarrow> ?thesis;\n   \\<lbrakk>x \\<in> B; A = {}\\<rbrakk> \\<Longrightarrow> ?thesis;\n   \\<lbrakk>x \\<notin> A; x \\<notin> B\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (bernoulli_pmf p \\<bind>\n            (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B))\n        i =\n       pmf (pmf_of_set (A \\<union> B)) i", "hence \"pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) = pmf ?rhs x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<lbrakk>x \\<in> A; B \\<noteq> {}\\<rbrakk>\n           \\<Longrightarrow> ?thesis;\n   \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk> \\<Longrightarrow> ?thesis;\n   \\<lbrakk>x \\<in> A; B = {}\\<rbrakk> \\<Longrightarrow> ?thesis;\n   \\<lbrakk>x \\<in> B; A = {}\\<rbrakk> \\<Longrightarrow> ?thesis;\n   \\<lbrakk>x \\<notin> A; x \\<notin> B\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n    pmf (pmf_of_set (A \\<union> B)) x", "proof cases"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<lbrakk>x \\<in> A; B \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 2. \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 3. \\<lbrakk>x \\<in> A; B = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 4. \\<lbrakk>x \\<in> B; A = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 5. \\<lbrakk>x \\<notin> A; x \\<notin> B\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x", "assume \"x \\<notin> A\" \"x \\<notin> B\""], ["proof (state)\nthis:\n  x \\<notin> A\n  x \\<notin> B\n\ngoal (5 subgoals):\n 1. \\<lbrakk>x \\<in> A; B \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 2. \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 3. \\<lbrakk>x \\<in> A; B = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 4. \\<lbrakk>x \\<in> B; A = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 5. \\<lbrakk>x \\<notin> A; x \\<notin> B\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> A\n  x \\<notin> B\n\ngoal (1 subgoal):\n 1. pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n    pmf (pmf_of_set (A \\<union> B)) x", "using assms"], ["proof (prove)\nusing this:\n  x \\<notin> A\n  x \\<notin> B\n  finite A\n  finite B\n  A \\<inter> B = {}\n  A \\<union> B \\<noteq> {}\n  p = real (card A) / real (card A + card B)\n\ngoal (1 subgoal):\n 1. pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n    pmf (pmf_of_set (A \\<union> B)) x", "by (cases \"A = {}\"; cases \"B = {}\") auto"], ["proof (state)\nthis:\n  pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n  pmf (pmf_of_set (A \\<union> B)) x\n\ngoal (4 subgoals):\n 1. \\<lbrakk>x \\<in> A; B \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 2. \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 3. \\<lbrakk>x \\<in> A; B = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 4. \\<lbrakk>x \\<in> B; A = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>x \\<in> A; B \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 2. \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 3. \\<lbrakk>x \\<in> A; B = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 4. \\<lbrakk>x \\<in> B; A = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x", "assume \"x \\<in> A\" and [simp]: \"B \\<noteq> {}\""], ["proof (state)\nthis:\n  x \\<in> A\n  B \\<noteq> {}\n\ngoal (4 subgoals):\n 1. \\<lbrakk>x \\<in> A; B \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 2. \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 3. \\<lbrakk>x \\<in> A; B = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 4. \\<lbrakk>x \\<in> B; A = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x", "have \"pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) = p / real (card A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n    p / real (card A)", "using \\<open>x \\<in> A\\<close> assms(1-4)"], ["proof (prove)\nusing this:\n  x \\<in> A\n  finite A\n  finite B\n  A \\<inter> B = {}\n  A \\<union> B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n    p / real (card A)", "by (subst (1 2) pmf_of_set) (auto simp: indicator_def)"], ["proof (state)\nthis:\n  pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n  p / real (card A)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>x \\<in> A; B \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 2. \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 3. \\<lbrakk>x \\<in> A; B = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 4. \\<lbrakk>x \\<in> B; A = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x", "also"], ["proof (state)\nthis:\n  pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n  p / real (card A)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>x \\<in> A; B \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 2. \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 3. \\<lbrakk>x \\<in> A; B = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 4. \\<lbrakk>x \\<in> B; A = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x", "have \"\\<dots> = pmf ?rhs x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p / real (card A) = pmf (pmf_of_set (A \\<union> B)) x", "using assms \\<open>x \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<inter> B = {}\n  A \\<union> B \\<noteq> {}\n  p = real (card A) / real (card A + card B)\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. p / real (card A) = pmf (pmf_of_set (A \\<union> B)) x", "by (subst pmf_of_set) (auto simp: card_Un_disjoint)"], ["proof (state)\nthis:\n  p / real (card A) = pmf (pmf_of_set (A \\<union> B)) x\n\ngoal (4 subgoals):\n 1. \\<lbrakk>x \\<in> A; B \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 2. \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 3. \\<lbrakk>x \\<in> A; B = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 4. \\<lbrakk>x \\<in> B; A = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x", "finally"], ["proof (chain)\npicking this:\n  pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n  pmf (pmf_of_set (A \\<union> B)) x", "show ?thesis"], ["proof (prove)\nusing this:\n  pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n  pmf (pmf_of_set (A \\<union> B)) x\n\ngoal (1 subgoal):\n 1. pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n    pmf (pmf_of_set (A \\<union> B)) x", "."], ["proof (state)\nthis:\n  pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n  pmf (pmf_of_set (A \\<union> B)) x\n\ngoal (3 subgoals):\n 1. \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 2. \\<lbrakk>x \\<in> A; B = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 3. \\<lbrakk>x \\<in> B; A = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 2. \\<lbrakk>x \\<in> A; B = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 3. \\<lbrakk>x \\<in> B; A = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x", "assume \"x \\<in> B\" and [simp]: \"A \\<noteq> {}\""], ["proof (state)\nthis:\n  x \\<in> B\n  A \\<noteq> {}\n\ngoal (3 subgoals):\n 1. \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 2. \\<lbrakk>x \\<in> A; B = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 3. \\<lbrakk>x \\<in> B; A = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x", "from assms"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  A \\<inter> B = {}\n  A \\<union> B \\<noteq> {}\n  p = real (card A) / real (card A + card B)", "have *: \"card (A \\<union> B) > 0\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<inter> B = {}\n  A \\<union> B \\<noteq> {}\n  p = real (card A) / real (card A + card B)\n\ngoal (1 subgoal):\n 1. 0 < card (A \\<union> B)", "by (subst card_gt_0_iff) auto"], ["proof (state)\nthis:\n  0 < card (A \\<union> B)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 2. \\<lbrakk>x \\<in> A; B = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 3. \\<lbrakk>x \\<in> B; A = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x", "have \"pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) = (1 - p) / real (card B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n    (1 - p) / real (card B)", "using \\<open>x \\<in> B\\<close> assms(1-4)"], ["proof (prove)\nusing this:\n  x \\<in> B\n  finite A\n  finite B\n  A \\<inter> B = {}\n  A \\<union> B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n    (1 - p) / real (card B)", "by (subst (1 2) pmf_of_set) (auto simp: indicator_def)"], ["proof (state)\nthis:\n  pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n  (1 - p) / real (card B)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 2. \\<lbrakk>x \\<in> A; B = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 3. \\<lbrakk>x \\<in> B; A = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x", "also"], ["proof (state)\nthis:\n  pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n  (1 - p) / real (card B)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 2. \\<lbrakk>x \\<in> A; B = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 3. \\<lbrakk>x \\<in> B; A = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x", "have \"\\<dots> = pmf ?rhs x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - p) / real (card B) = pmf (pmf_of_set (A \\<union> B)) x", "using assms \\<open>x \\<in> B\\<close> *"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<inter> B = {}\n  A \\<union> B \\<noteq> {}\n  p = real (card A) / real (card A + card B)\n  x \\<in> B\n  0 < card (A \\<union> B)\n\ngoal (1 subgoal):\n 1. (1 - p) / real (card B) = pmf (pmf_of_set (A \\<union> B)) x", "by (subst pmf_of_set) (auto simp: card_Un_disjoint assms(5) divide_simps)"], ["proof (state)\nthis:\n  (1 - p) / real (card B) = pmf (pmf_of_set (A \\<union> B)) x\n\ngoal (3 subgoals):\n 1. \\<lbrakk>x \\<in> B; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 2. \\<lbrakk>x \\<in> A; B = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 3. \\<lbrakk>x \\<in> B; A = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x", "finally"], ["proof (chain)\npicking this:\n  pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n  pmf (pmf_of_set (A \\<union> B)) x", "show ?thesis"], ["proof (prove)\nusing this:\n  pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n  pmf (pmf_of_set (A \\<union> B)) x\n\ngoal (1 subgoal):\n 1. pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n    pmf (pmf_of_set (A \\<union> B)) x", "."], ["proof (state)\nthis:\n  pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n  pmf (pmf_of_set (A \\<union> B)) x\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> A; B = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x\n 2. \\<lbrakk>x \\<in> B; A = {}\\<rbrakk>\n    \\<Longrightarrow> pmf (pmf_of_set A) x * p +\n                      pmf (pmf_of_set B) x * (1 - p) =\n                      pmf (pmf_of_set (A \\<union> B)) x", "qed (insert assms(1-4), auto simp: assms(5))"], ["proof (state)\nthis:\n  pmf (pmf_of_set A) x * p + pmf (pmf_of_set B) x * (1 - p) =\n  pmf (pmf_of_set (A \\<union> B)) x\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (bernoulli_pmf p \\<bind>\n            (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B))\n        i =\n       pmf (pmf_of_set (A \\<union> B)) i", "finally"], ["proof (chain)\npicking this:\n  pmf (bernoulli_pmf p \\<bind>\n       (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B))\n   x =\n  pmf (pmf_of_set (A \\<union> B)) x", "show \"pmf ?lhs x = pmf ?rhs x\""], ["proof (prove)\nusing this:\n  pmf (bernoulli_pmf p \\<bind>\n       (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B))\n   x =\n  pmf (pmf_of_set (A \\<union> B)) x\n\ngoal (1 subgoal):\n 1. pmf (bernoulli_pmf p \\<bind>\n         (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B))\n     x =\n    pmf (pmf_of_set (A \\<union> B)) x", "."], ["proof (state)\nthis:\n  pmf (bernoulli_pmf p \\<bind>\n       (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B))\n   x =\n  pmf (pmf_of_set (A \\<union> B)) x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pmf_of_set_split_inter_diff:\n  assumes \"finite A\" \"finite B\" \"A \\<noteq> {}\" \"B \\<noteq> {}\"\n  assumes \"p = card (A \\<inter> B) / card B\"\n  shows   \"do {b \\<leftarrow> bernoulli_pmf p; if b then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)} =\n             pmf_of_set B\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)) =\n    pmf_of_set B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)) =\n    pmf_of_set B", "have eq: \"B = (A \\<inter> B) \\<union> (B - A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B = A \\<inter> B \\<union> (B - A)", "by auto"], ["proof (state)\nthis:\n  B = A \\<inter> B \\<union> (B - A)\n\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)) =\n    pmf_of_set B", "have card_eq: \"card B = card (A \\<inter> B) + card (B - A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card B = card (A \\<inter> B) + card (B - A)", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n  p = real (card (A \\<inter> B)) / real (card B)\n\ngoal (1 subgoal):\n 1. card B = card (A \\<inter> B) + card (B - A)", "by (subst eq, subst card_Un_disjoint) auto"], ["proof (state)\nthis:\n  card B = card (A \\<inter> B) + card (B - A)\n\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)) =\n    pmf_of_set B", "have \"?lhs = pmf_of_set ((A \\<inter> B) \\<union> (B - A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)) =\n    pmf_of_set (A \\<inter> B \\<union> (B - A))", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n  p = real (card (A \\<inter> B)) / real (card B)\n\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)) =\n    pmf_of_set (A \\<inter> B \\<union> (B - A))", "by (intro pmf_of_set_union_split) (auto simp: card_eq)"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)) =\n  pmf_of_set (A \\<inter> B \\<union> (B - A))\n\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)) =\n    pmf_of_set B", "with eq"], ["proof (chain)\npicking this:\n  B = A \\<inter> B \\<union> (B - A)\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)) =\n  pmf_of_set (A \\<inter> B \\<union> (B - A))", "show ?thesis"], ["proof (prove)\nusing this:\n  B = A \\<inter> B \\<union> (B - A)\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)) =\n  pmf_of_set (A \\<inter> B \\<union> (B - A))\n\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)) =\n    pmf_of_set B", "by simp"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)) =\n  pmf_of_set B\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Similarly to the above rule, we can split up a uniformly random choice from the disjoint\n  union of three sets. This could be done with two coin flips, but it is more convenient to\n  choose a natural number uniformly at random instead and then do a case distinction on it.\n\\<close>"], ["", "lemma pmf_of_set_3way_split:\n  fixes f g h :: \"'a \\<Rightarrow> 'b pmf\"\n  assumes \"finite A\" \"A \\<noteq> {}\" \"A1 \\<inter> A2 = {}\" \"A1 \\<inter> A3 = {}\" \"A2 \\<inter> A3 = {}\" \"A1 \\<union> A2 \\<union> A3 = A\"\n  shows   \"do {x \\<leftarrow> pmf_of_set A; if x \\<in> A1 then f x else if x \\<in> A2 then g x else h x} =\n           do {i \\<leftarrow> pmf_of_set {..<card A};\n               if i < card A1 then pmf_of_set A1 \\<bind> f\n               else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n               else pmf_of_set A3 \\<bind> h}\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        if x \\<in> A1 then f x else if x \\<in> A2 then g x else h x) =\n    pmf_of_set {..<card A} \\<bind>\n    (\\<lambda>i.\n        if i < card A1 then pmf_of_set A1 \\<bind> f\n        else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n             else pmf_of_set A3 \\<bind> h)", "proof (intro pmf_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "fix x :: 'b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "define m n l where \"m = card A1\" and \"n = card A2\" and \"l = card A3\""], ["proof (state)\nthis:\n  m = card A1\n  n = card A2\n  l = card A3\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "have [simp]: \"finite A1\" \"finite A2\" \"finite A3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A1 &&& finite A2 &&& finite A3", "by (rule finite_subset[of _ A]; use assms in force)+"], ["proof (state)\nthis:\n  finite A1\n  finite A2\n  finite A3\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "from assms"], ["proof (chain)\npicking this:\n  finite A\n  A \\<noteq> {}\n  A1 \\<inter> A2 = {}\n  A1 \\<inter> A3 = {}\n  A2 \\<inter> A3 = {}\n  A1 \\<union> A2 \\<union> A3 = A", "have card_pos: \"card A > 0\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n  A1 \\<inter> A2 = {}\n  A1 \\<inter> A3 = {}\n  A2 \\<inter> A3 = {}\n  A1 \\<union> A2 \\<union> A3 = A\n\ngoal (1 subgoal):\n 1. 0 < card A", "by auto"], ["proof (state)\nthis:\n  0 < card A\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "have A_eq: \"A = A1 \\<union> A2 \\<union> A3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = A1 \\<union> A2 \\<union> A3", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n  A1 \\<inter> A2 = {}\n  A1 \\<inter> A3 = {}\n  A2 \\<inter> A3 = {}\n  A1 \\<union> A2 \\<union> A3 = A\n\ngoal (1 subgoal):\n 1. A = A1 \\<union> A2 \\<union> A3", "by simp"], ["proof (state)\nthis:\n  A = A1 \\<union> A2 \\<union> A3\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "have card_A_eq: \"card A = card A1 + card A2 + card A3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card A = card A1 + card A2 + card A3", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n  A1 \\<inter> A2 = {}\n  A1 \\<inter> A3 = {}\n  A2 \\<inter> A3 = {}\n  A1 \\<union> A2 \\<union> A3 = A\n\ngoal (1 subgoal):\n 1. card A = card A1 + card A2 + card A3", "unfolding A_eq"], ["proof (prove)\nusing this:\n  finite (A1 \\<union> A2 \\<union> A3)\n  A1 \\<union> A2 \\<union> A3 \\<noteq> {}\n  A1 \\<inter> A2 = {}\n  A1 \\<inter> A3 = {}\n  A2 \\<inter> A3 = {}\n  A1 \\<union> A2 \\<union> A3 = A1 \\<union> A2 \\<union> A3\n\ngoal (1 subgoal):\n 1. card (A1 \\<union> A2 \\<union> A3) = card A1 + card A2 + card A3", "by (subst card_Un_disjoint, simp, simp, force)+ auto"], ["proof (state)\nthis:\n  card A = card A1 + card A2 + card A3\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "have card_A_eq': \"{..<card A} = {..<m} \\<union> {m..<m + n} \\<union> {m + n..<card A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..<card A} = {..<m} \\<union> {m..<m + n} \\<union> {m + n..<card A}", "by (auto simp: m_def n_def card_A_eq)"], ["proof (state)\nthis:\n  {..<card A} = {..<m} \\<union> {m..<m + n} \\<union> {m + n..<card A}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "let ?M = \"\\<lambda>i. if i < m then pmf_of_set A1 \\<bind> f else if i < m + n then\n                  pmf_of_set A2 \\<bind> g else pmf_of_set A3 \\<bind> h\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "have card_times_pmf_of_set_bind:\n      \"card X * pmf (pmf_of_set X \\<bind> f) x = (\\<Sum>y\\<in>X. pmf (f y) x)\"\n      if \"finite X\" for X :: \"'a set\" and f :: \"'a \\<Rightarrow> 'b pmf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (card X) * pmf (pmf_of_set X \\<bind> f) x =\n    (\\<Sum>y\\<in>X. pmf (f y) x)", "using that"], ["proof (prove)\nusing this:\n  finite X\n\ngoal (1 subgoal):\n 1. real (card X) * pmf (pmf_of_set X \\<bind> f) x =\n    (\\<Sum>y\\<in>X. pmf (f y) x)", "by (cases \"X = {}\") (auto simp: pmf_bind_pmf_of_set)"], ["proof (state)\nthis:\n  finite ?X \\<Longrightarrow>\n  real (card ?X) * pmf (pmf_of_set ?X \\<bind> ?f) x =\n  (\\<Sum>y\\<in>?X. pmf (?f y) x)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "have \"pmf ?rhs x = (\\<Sum>i<card A. pmf (?M i) x) / card A\"\n    (is \"_ = ?S / _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf (pmf_of_set {..<card A} \\<bind>\n         (\\<lambda>i.\n             if i < card A1 then pmf_of_set A1 \\<bind> f\n             else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                  else pmf_of_set A3 \\<bind> h))\n     x =\n    (\\<Sum>i<card A.\n        pmf (if i < m then pmf_of_set A1 \\<bind> f\n             else if i < m + n then pmf_of_set A2 \\<bind> g\n                  else pmf_of_set A3 \\<bind> h)\n         x) /\n    real (card A)", "using assms card_pos"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n  A1 \\<inter> A2 = {}\n  A1 \\<inter> A3 = {}\n  A2 \\<inter> A3 = {}\n  A1 \\<union> A2 \\<union> A3 = A\n  0 < card A\n\ngoal (1 subgoal):\n 1. pmf (pmf_of_set {..<card A} \\<bind>\n         (\\<lambda>i.\n             if i < card A1 then pmf_of_set A1 \\<bind> f\n             else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                  else pmf_of_set A3 \\<bind> h))\n     x =\n    (\\<Sum>i<card A.\n        pmf (if i < m then pmf_of_set A1 \\<bind> f\n             else if i < m + n then pmf_of_set A2 \\<bind> g\n                  else pmf_of_set A3 \\<bind> h)\n         x) /\n    real (card A)", "unfolding m_def n_def"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n  A1 \\<inter> A2 = {}\n  A1 \\<inter> A3 = {}\n  A2 \\<inter> A3 = {}\n  A1 \\<union> A2 \\<union> A3 = A\n  0 < card A\n\ngoal (1 subgoal):\n 1. pmf (pmf_of_set {..<card A} \\<bind>\n         (\\<lambda>i.\n             if i < card A1 then pmf_of_set A1 \\<bind> f\n             else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                  else pmf_of_set A3 \\<bind> h))\n     x =\n    (\\<Sum>i<card A.\n        pmf (if i < card A1 then pmf_of_set A1 \\<bind> f\n             else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                  else pmf_of_set A3 \\<bind> h)\n         x) /\n    real (card A)", "by (subst pmf_bind_pmf_of_set) auto"], ["proof (state)\nthis:\n  pmf (pmf_of_set {..<card A} \\<bind>\n       (\\<lambda>i.\n           if i < card A1 then pmf_of_set A1 \\<bind> f\n           else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                else pmf_of_set A3 \\<bind> h))\n   x =\n  (\\<Sum>i<card A.\n      pmf (if i < m then pmf_of_set A1 \\<bind> f\n           else if i < m + n then pmf_of_set A2 \\<bind> g\n                else pmf_of_set A3 \\<bind> h)\n       x) /\n  real (card A)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "also"], ["proof (state)\nthis:\n  pmf (pmf_of_set {..<card A} \\<bind>\n       (\\<lambda>i.\n           if i < card A1 then pmf_of_set A1 \\<bind> f\n           else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                else pmf_of_set A3 \\<bind> h))\n   x =\n  (\\<Sum>i<card A.\n      pmf (if i < m then pmf_of_set A1 \\<bind> f\n           else if i < m + n then pmf_of_set A2 \\<bind> g\n                else pmf_of_set A3 \\<bind> h)\n       x) /\n  real (card A)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "have \"?S = (real m * pmf (pmf_of_set A1 \\<bind> f) x +\n                   real n * pmf (pmf_of_set A2 \\<bind> g) x +\n                   real l * pmf (pmf_of_set A3 \\<bind> h) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<card A.\n        pmf (if i < m then pmf_of_set A1 \\<bind> f\n             else if i < m + n then pmf_of_set A2 \\<bind> g\n                  else pmf_of_set A3 \\<bind> h)\n         x) =\n    real m * pmf (pmf_of_set A1 \\<bind> f) x +\n    real n * pmf (pmf_of_set A2 \\<bind> g) x +\n    real l * pmf (pmf_of_set A3 \\<bind> h) x", "unfolding card_A_eq'"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{..<m} \\<union> {m..<m + n} \\<union> {m + n..<card A}.\n       pmf (if i < m then pmf_of_set A1 \\<bind> f\n            else if i < m + n then pmf_of_set A2 \\<bind> g\n                 else pmf_of_set A3 \\<bind> h)\n        x) =\n    real m * pmf (pmf_of_set A1 \\<bind> f) x +\n    real n * pmf (pmf_of_set A2 \\<bind> g) x +\n    real l * pmf (pmf_of_set A3 \\<bind> h) x", "by (subst sum.union_disjoint, simp, simp, force)+ (auto simp: card_A_eq m_def n_def l_def)"], ["proof (state)\nthis:\n  (\\<Sum>i<card A.\n      pmf (if i < m then pmf_of_set A1 \\<bind> f\n           else if i < m + n then pmf_of_set A2 \\<bind> g\n                else pmf_of_set A3 \\<bind> h)\n       x) =\n  real m * pmf (pmf_of_set A1 \\<bind> f) x +\n  real n * pmf (pmf_of_set A2 \\<bind> g) x +\n  real l * pmf (pmf_of_set A3 \\<bind> h) x\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "also"], ["proof (state)\nthis:\n  (\\<Sum>i<card A.\n      pmf (if i < m then pmf_of_set A1 \\<bind> f\n           else if i < m + n then pmf_of_set A2 \\<bind> g\n                else pmf_of_set A3 \\<bind> h)\n       x) =\n  real m * pmf (pmf_of_set A1 \\<bind> f) x +\n  real n * pmf (pmf_of_set A2 \\<bind> g) x +\n  real l * pmf (pmf_of_set A3 \\<bind> h) x\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "have \"\\<dots> = (\\<Sum>y\\<in>A1. pmf (f y) x) + (\\<Sum>y\\<in>A2. pmf (g y) x) + (\\<Sum>y\\<in>A3. pmf (h y) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real m * pmf (pmf_of_set A1 \\<bind> f) x +\n    real n * pmf (pmf_of_set A2 \\<bind> g) x +\n    real l * pmf (pmf_of_set A3 \\<bind> h) x =\n    (\\<Sum>y\\<in>A1. pmf (f y) x) + (\\<Sum>y\\<in>A2. pmf (g y) x) +\n    (\\<Sum>y\\<in>A3. pmf (h y) x)", "unfolding m_def n_def l_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (card A1) * pmf (pmf_of_set A1 \\<bind> f) x +\n    real (card A2) * pmf (pmf_of_set A2 \\<bind> g) x +\n    real (card A3) * pmf (pmf_of_set A3 \\<bind> h) x =\n    (\\<Sum>y\\<in>A1. pmf (f y) x) + (\\<Sum>y\\<in>A2. pmf (g y) x) +\n    (\\<Sum>y\\<in>A3. pmf (h y) x)", "by (subst (1 2 3) card_times_pmf_of_set_bind) auto"], ["proof (state)\nthis:\n  real m * pmf (pmf_of_set A1 \\<bind> f) x +\n  real n * pmf (pmf_of_set A2 \\<bind> g) x +\n  real l * pmf (pmf_of_set A3 \\<bind> h) x =\n  (\\<Sum>y\\<in>A1. pmf (f y) x) + (\\<Sum>y\\<in>A2. pmf (g y) x) +\n  (\\<Sum>y\\<in>A3. pmf (h y) x)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "also"], ["proof (state)\nthis:\n  real m * pmf (pmf_of_set A1 \\<bind> f) x +\n  real n * pmf (pmf_of_set A2 \\<bind> g) x +\n  real l * pmf (pmf_of_set A3 \\<bind> h) x =\n  (\\<Sum>y\\<in>A1. pmf (f y) x) + (\\<Sum>y\\<in>A2. pmf (g y) x) +\n  (\\<Sum>y\\<in>A3. pmf (h y) x)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "have \"\\<dots> = (\\<Sum>y\\<in>A1 \\<union> A2 \\<union> A3.\n                       pmf (if y \\<in> A1 then f y else if y \\<in> A2 then g y else h y) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>A1. pmf (f y) x) + (\\<Sum>y\\<in>A2. pmf (g y) x) +\n    (\\<Sum>y\\<in>A3. pmf (h y) x) =\n    (\\<Sum>y\\<in>A1 \\<union> A2 \\<union> A3.\n       pmf (if y \\<in> A1 then f y else if y \\<in> A2 then g y else h y) x)", "using assms(1-5)"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n  A1 \\<inter> A2 = {}\n  A1 \\<inter> A3 = {}\n  A2 \\<inter> A3 = {}\n\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>A1. pmf (f y) x) + (\\<Sum>y\\<in>A2. pmf (g y) x) +\n    (\\<Sum>y\\<in>A3. pmf (h y) x) =\n    (\\<Sum>y\\<in>A1 \\<union> A2 \\<union> A3.\n       pmf (if y \\<in> A1 then f y else if y \\<in> A2 then g y else h y) x)", "by (subst sum.union_disjoint, simp, simp, force)+\n       (intro arg_cong2[of _ _ _ _ \"(+)\"] sum.cong, auto)"], ["proof (state)\nthis:\n  (\\<Sum>y\\<in>A1. pmf (f y) x) + (\\<Sum>y\\<in>A2. pmf (g y) x) +\n  (\\<Sum>y\\<in>A3. pmf (h y) x) =\n  (\\<Sum>y\\<in>A1 \\<union> A2 \\<union> A3.\n     pmf (if y \\<in> A1 then f y else if y \\<in> A2 then g y else h y) x)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "also"], ["proof (state)\nthis:\n  (\\<Sum>y\\<in>A1. pmf (f y) x) + (\\<Sum>y\\<in>A2. pmf (g y) x) +\n  (\\<Sum>y\\<in>A3. pmf (h y) x) =\n  (\\<Sum>y\\<in>A1 \\<union> A2 \\<union> A3.\n     pmf (if y \\<in> A1 then f y else if y \\<in> A2 then g y else h y) x)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "have \"\\<dots> / card A = pmf ?lhs x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>A1 \\<union> A2 \\<union> A3.\n       pmf (if y \\<in> A1 then f y else if y \\<in> A2 then g y else h y)\n        x) /\n    real (card A) =\n    pmf (pmf_of_set A \\<bind>\n         (\\<lambda>x.\n             if x \\<in> A1 then f x else if x \\<in> A2 then g x else h x))\n     x", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n  A1 \\<inter> A2 = {}\n  A1 \\<inter> A3 = {}\n  A2 \\<inter> A3 = {}\n  A1 \\<union> A2 \\<union> A3 = A\n\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>A1 \\<union> A2 \\<union> A3.\n       pmf (if y \\<in> A1 then f y else if y \\<in> A2 then g y else h y)\n        x) /\n    real (card A) =\n    pmf (pmf_of_set A \\<bind>\n         (\\<lambda>x.\n             if x \\<in> A1 then f x else if x \\<in> A2 then g x else h x))\n     x", "by (simp add: pmf_bind_pmf_of_set)"], ["proof (state)\nthis:\n  (\\<Sum>y\\<in>A1 \\<union> A2 \\<union> A3.\n     pmf (if y \\<in> A1 then f y else if y \\<in> A2 then g y else h y) x) /\n  real (card A) =\n  pmf (pmf_of_set A \\<bind>\n       (\\<lambda>x.\n           if x \\<in> A1 then f x else if x \\<in> A2 then g x else h x))\n   x\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (pmf_of_set A \\<bind>\n            (\\<lambda>x.\n                if x \\<in> A1 then f x\n                else if x \\<in> A2 then g x else h x))\n        i =\n       pmf (pmf_of_set {..<card A} \\<bind>\n            (\\<lambda>i.\n                if i < card A1 then pmf_of_set A1 \\<bind> f\n                else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                     else pmf_of_set A3 \\<bind> h))\n        i", "finally"], ["proof (chain)\npicking this:\n  pmf (pmf_of_set {..<card A} \\<bind>\n       (\\<lambda>i.\n           if i < card A1 then pmf_of_set A1 \\<bind> f\n           else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                else pmf_of_set A3 \\<bind> h))\n   x =\n  pmf (pmf_of_set A \\<bind>\n       (\\<lambda>x.\n           if x \\<in> A1 then f x else if x \\<in> A2 then g x else h x))\n   x", "show \"pmf ?lhs x = pmf ?rhs x\""], ["proof (prove)\nusing this:\n  pmf (pmf_of_set {..<card A} \\<bind>\n       (\\<lambda>i.\n           if i < card A1 then pmf_of_set A1 \\<bind> f\n           else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                else pmf_of_set A3 \\<bind> h))\n   x =\n  pmf (pmf_of_set A \\<bind>\n       (\\<lambda>x.\n           if x \\<in> A1 then f x else if x \\<in> A2 then g x else h x))\n   x\n\ngoal (1 subgoal):\n 1. pmf (pmf_of_set A \\<bind>\n         (\\<lambda>x.\n             if x \\<in> A1 then f x else if x \\<in> A2 then g x else h x))\n     x =\n    pmf (pmf_of_set {..<card A} \\<bind>\n         (\\<lambda>i.\n             if i < card A1 then pmf_of_set A1 \\<bind> f\n             else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                  else pmf_of_set A3 \\<bind> h))\n     x", "unfolding m_def n_def l_def card_A_eq"], ["proof (prove)\nusing this:\n  pmf (pmf_of_set {..<card A1 + card A2 + card A3} \\<bind>\n       (\\<lambda>i.\n           if i < card A1 then pmf_of_set A1 \\<bind> f\n           else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                else pmf_of_set A3 \\<bind> h))\n   x =\n  pmf (pmf_of_set A \\<bind>\n       (\\<lambda>x.\n           if x \\<in> A1 then f x else if x \\<in> A2 then g x else h x))\n   x\n\ngoal (1 subgoal):\n 1. pmf (pmf_of_set A \\<bind>\n         (\\<lambda>x.\n             if x \\<in> A1 then f x else if x \\<in> A2 then g x else h x))\n     x =\n    pmf (pmf_of_set {..<card A1 + card A2 + card A3} \\<bind>\n         (\\<lambda>i.\n             if i < card A1 then pmf_of_set A1 \\<bind> f\n             else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                  else pmf_of_set A3 \\<bind> h))\n     x", ".."], ["proof (state)\nthis:\n  pmf (pmf_of_set A \\<bind>\n       (\\<lambda>x.\n           if x \\<in> A1 then f x else if x \\<in> A2 then g x else h x))\n   x =\n  pmf (pmf_of_set {..<card A} \\<bind>\n       (\\<lambda>i.\n           if i < card A1 then pmf_of_set A1 \\<bind> f\n           else if i < card A1 + card A2 then pmf_of_set A2 \\<bind> g\n                else pmf_of_set A3 \\<bind> h))\n   x\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Partitioning a BST\\<close>"], ["", "text \\<open>\n  The split operation takes a search parameter \\<open>x\\<close> and partitions a BST into two BSTs\n  containing all the values that are smaller than \\<open>x\\<close> and those that are greater than \\<open>x\\<close>,\n  respectively. Note that \\<open>x\\<close> need not be an element of the tree.\n\\<close>"], ["", "fun split_bst :: \"'a :: linorder \\<Rightarrow> 'a tree \\<Rightarrow> 'a tree \\<times> 'a tree\" where\n  \"split_bst _ \\<langle>\\<rangle> = (\\<langle>\\<rangle>, \\<langle>\\<rangle>)\"\n| \"split_bst x \\<langle>l, y, r\\<rangle> =\n     (if y < x then\n        case split_bst x r of (t1, t2) \\<Rightarrow> (\\<langle>l, y, t1\\<rangle>, t2)\n      else if y > x then\n        case split_bst x l of (t1, t2) \\<Rightarrow> (t1, \\<langle>t2, y, r\\<rangle>)\n      else\n        (l, r))\""], ["", "fun split_bst' :: \"'a :: linorder \\<Rightarrow> 'a tree \\<Rightarrow> bool \\<times> 'a tree \\<times> 'a tree\" where\n  \"split_bst' _ \\<langle>\\<rangle> = (False, \\<langle>\\<rangle>, \\<langle>\\<rangle>)\"\n| \"split_bst' x \\<langle>l, y, r\\<rangle> =\n     (if y < x then\n        case split_bst' x r of (b, t1, t2) \\<Rightarrow> (b, \\<langle>l, y, t1\\<rangle>, t2)\n      else if y > x then\n        case split_bst' x l of (b, t1, t2) \\<Rightarrow> (b, t1, \\<langle>t2, y, r\\<rangle>)\n      else\n        (True, l, r))\""], ["", "lemma split_bst'_altdef: \"split_bst' x t = (isin t x, split_bst x t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. split_bst' x t = (isin t x, split_bst x t)", "by (induction x t rule: split_bst.induct) (auto simp: case_prod_unfold)"], ["", "lemma fst_split_bst' [simp]: \"fst (split_bst' x t) = isin t x\"\n  and snd_split_bst' [simp]: \"snd (split_bst' x t) = split_bst x t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (split_bst' x t) = isin t x &&& snd (split_bst' x t) = split_bst x t", "by (simp_all add: split_bst'_altdef)"], ["", "lemma size_fst_split_bst [termination_simp]: \"size (fst (split_bst x t)) \\<le> size t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size (fst (split_bst x t)) \\<le> size t", "by (induction t) (auto simp: case_prod_unfold)"], ["", "lemma size_snd_split_bst [termination_simp]: \"size (snd (split_bst x t)) \\<le> size t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size (snd (split_bst x t)) \\<le> size t", "by (induction t) (auto simp: case_prod_unfold)"], ["", "lemmas size_split_bst = size_fst_split_bst size_snd_split_bst"], ["", "lemma set_split_bst1: \"bst t \\<Longrightarrow> set_tree (fst (split_bst x t)) = {y \\<in> set_tree t. y < x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t \\<Longrightarrow>\n    set_tree (fst (split_bst x t)) = {y \\<in> set_tree t. y < x}", "by (induction t) (auto split: prod.splits)"], ["", "lemma set_split_bst2: \"bst t \\<Longrightarrow> set_tree (snd (split_bst x t)) = {y \\<in> set_tree t. y > x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t \\<Longrightarrow>\n    set_tree (snd (split_bst x t)) = {y \\<in> set_tree t. x < y}", "by (induction t) (auto split: prod.splits)"], ["", "lemma bst_split_bst1 [intro]: \"bst t \\<Longrightarrow> bst (fst (split_bst x t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t \\<Longrightarrow> bst (fst (split_bst x t))", "by (induction t) (auto simp: case_prod_unfold set_split_bst1)"], ["", "lemma bst_split_bst2 [intro]: \"bst t \\<Longrightarrow> bst (snd (split_bst x t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t \\<Longrightarrow> bst (snd (split_bst x t))", "by (induction t) (auto simp: case_prod_unfold set_split_bst2)"], ["", "text \\<open>\n  Splitting a random BST produces two random BSTs:\n\\<close>"], ["", "theorem split_random_bst:\n  assumes \"finite A\"\n  shows   \"map_pmf (split_bst x) (random_bst A) =\n             pair_pmf (random_bst {y\\<in>A. y < x}) (random_bst {y\\<in>A. y > x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "using assms"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "proof (induction A rule: random_bst.induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<And>xa.\n                   \\<lbrakk>\\<not> (infinite A \\<or> A = {});\n                    xa \\<in> set_pmf (pmf_of_set A);\n                    finite {y \\<in> A. y < xa}\\<rbrakk>\n                   \\<Longrightarrow> map_pmf (split_bst x)\n(random_bst {y \\<in> A. y < xa}) =\n                                     pair_pmf\n(random_bst {y \\<in> {y \\<in> A. y < xa}. y < x})\n(random_bst {y \\<in> {y \\<in> A. y < xa}. x < y});\n        \\<And>xa xaa.\n           \\<lbrakk>\\<not> (infinite A \\<or> A = {});\n            xa \\<in> set_pmf (pmf_of_set A);\n            xaa \\<in> set_pmf (random_bst {y \\<in> A. y < xa});\n            finite {y \\<in> A. xa < y}\\<rbrakk>\n           \\<Longrightarrow> map_pmf (split_bst x)\n                              (random_bst {y \\<in> A. xa < y}) =\n                             pair_pmf\n                              (random_bst\n                                {y \\<in> {y \\<in> A. xa < y}. y < x})\n                              (random_bst\n                                {y \\<in> {y \\<in> A. xa < y}. x < y});\n        finite A\\<rbrakk>\n       \\<Longrightarrow> map_pmf (split_bst x) (random_bst A) =\n                         pair_pmf (random_bst {y \\<in> A. y < x})\n                          (random_bst {y \\<in> A. x < y})", "case (1 A)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> (infinite A \\<or> A = {});\n   ?x \\<in> set_pmf (pmf_of_set A); finite {y \\<in> A. y < ?x}\\<rbrakk>\n  \\<Longrightarrow> map_pmf (split_bst x) (random_bst {y \\<in> A. y < ?x}) =\n                    pair_pmf\n                     (random_bst {y \\<in> {y \\<in> A. y < ?x}. y < x})\n                     (random_bst {y \\<in> {y \\<in> A. y < ?x}. x < y})\n  \\<lbrakk>\\<not> (infinite A \\<or> A = {});\n   ?x \\<in> set_pmf (pmf_of_set A);\n   ?xa \\<in> set_pmf (random_bst {y \\<in> A. y < ?x});\n   finite {y \\<in> A. ?x < y}\\<rbrakk>\n  \\<Longrightarrow> map_pmf (split_bst x) (random_bst {y \\<in> A. ?x < y}) =\n                    pair_pmf\n                     (random_bst {y \\<in> {y \\<in> A. ?x < y}. y < x})\n                     (random_bst {y \\<in> {y \\<in> A. ?x < y}. x < y})\n  finite A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<And>xa.\n                   \\<lbrakk>\\<not> (infinite A \\<or> A = {});\n                    xa \\<in> set_pmf (pmf_of_set A);\n                    finite {y \\<in> A. y < xa}\\<rbrakk>\n                   \\<Longrightarrow> map_pmf (split_bst x)\n(random_bst {y \\<in> A. y < xa}) =\n                                     pair_pmf\n(random_bst {y \\<in> {y \\<in> A. y < xa}. y < x})\n(random_bst {y \\<in> {y \\<in> A. y < xa}. x < y});\n        \\<And>xa xaa.\n           \\<lbrakk>\\<not> (infinite A \\<or> A = {});\n            xa \\<in> set_pmf (pmf_of_set A);\n            xaa \\<in> set_pmf (random_bst {y \\<in> A. y < xa});\n            finite {y \\<in> A. xa < y}\\<rbrakk>\n           \\<Longrightarrow> map_pmf (split_bst x)\n                              (random_bst {y \\<in> A. xa < y}) =\n                             pair_pmf\n                              (random_bst\n                                {y \\<in> {y \\<in> A. xa < y}. y < x})\n                              (random_bst\n                                {y \\<in> {y \\<in> A. xa < y}. x < y});\n        finite A\\<rbrakk>\n       \\<Longrightarrow> map_pmf (split_bst x) (random_bst A) =\n                         pair_pmf (random_bst {y \\<in> A. y < x})\n                          (random_bst {y \\<in> A. x < y})", "define A\\<^sub>1 A\\<^sub>2 where \"A\\<^sub>1 = {y\\<in>A. y < x}\" and \"A\\<^sub>2 = {y\\<in>A. y > x}\""], ["proof (state)\nthis:\n  A\\<^sub>1 = {y \\<in> A. y < x}\n  A\\<^sub>2 = {y \\<in> A. x < y}\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<And>xa.\n                   \\<lbrakk>\\<not> (infinite A \\<or> A = {});\n                    xa \\<in> set_pmf (pmf_of_set A);\n                    finite {y \\<in> A. y < xa}\\<rbrakk>\n                   \\<Longrightarrow> map_pmf (split_bst x)\n(random_bst {y \\<in> A. y < xa}) =\n                                     pair_pmf\n(random_bst {y \\<in> {y \\<in> A. y < xa}. y < x})\n(random_bst {y \\<in> {y \\<in> A. y < xa}. x < y});\n        \\<And>xa xaa.\n           \\<lbrakk>\\<not> (infinite A \\<or> A = {});\n            xa \\<in> set_pmf (pmf_of_set A);\n            xaa \\<in> set_pmf (random_bst {y \\<in> A. y < xa});\n            finite {y \\<in> A. xa < y}\\<rbrakk>\n           \\<Longrightarrow> map_pmf (split_bst x)\n                              (random_bst {y \\<in> A. xa < y}) =\n                             pair_pmf\n                              (random_bst\n                                {y \\<in> {y \\<in> A. xa < y}. y < x})\n                              (random_bst\n                                {y \\<in> {y \\<in> A. xa < y}. x < y});\n        finite A\\<rbrakk>\n       \\<Longrightarrow> map_pmf (split_bst x) (random_bst A) =\n                         pair_pmf (random_bst {y \\<in> A. y < x})\n                          (random_bst {y \\<in> A. x < y})", "have [simp]: \"\\<not>x \\<in> A\\<^sub>2\" if \"x \\<in> A\\<^sub>1\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> A\\<^sub>2", "using that"], ["proof (prove)\nusing this:\n  x \\<in> A\\<^sub>1\n\ngoal (1 subgoal):\n 1. x \\<notin> A\\<^sub>2", "by (auto simp: A\\<^sub>1_def A\\<^sub>2_def)"], ["proof (state)\nthis:\n  ?x \\<in> A\\<^sub>1 \\<Longrightarrow> ?x \\<notin> A\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<And>xa.\n                   \\<lbrakk>\\<not> (infinite A \\<or> A = {});\n                    xa \\<in> set_pmf (pmf_of_set A);\n                    finite {y \\<in> A. y < xa}\\<rbrakk>\n                   \\<Longrightarrow> map_pmf (split_bst x)\n(random_bst {y \\<in> A. y < xa}) =\n                                     pair_pmf\n(random_bst {y \\<in> {y \\<in> A. y < xa}. y < x})\n(random_bst {y \\<in> {y \\<in> A. y < xa}. x < y});\n        \\<And>xa xaa.\n           \\<lbrakk>\\<not> (infinite A \\<or> A = {});\n            xa \\<in> set_pmf (pmf_of_set A);\n            xaa \\<in> set_pmf (random_bst {y \\<in> A. y < xa});\n            finite {y \\<in> A. xa < y}\\<rbrakk>\n           \\<Longrightarrow> map_pmf (split_bst x)\n                              (random_bst {y \\<in> A. xa < y}) =\n                             pair_pmf\n                              (random_bst\n                                {y \\<in> {y \\<in> A. xa < y}. y < x})\n                              (random_bst\n                                {y \\<in> {y \\<in> A. xa < y}. x < y});\n        finite A\\<rbrakk>\n       \\<Longrightarrow> map_pmf (split_bst x) (random_bst A) =\n                         pair_pmf (random_bst {y \\<in> A. y < x})\n                          (random_bst {y \\<in> A. x < y})", "from \\<open>finite A\\<close>"], ["proof (chain)\npicking this:\n  finite A", "have [simp]: \"finite A\\<^sub>1\" \"finite A\\<^sub>2\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. finite A\\<^sub>1 &&& finite A\\<^sub>2", "by (auto simp: A\\<^sub>1_def A\\<^sub>2_def)"], ["proof (state)\nthis:\n  finite A\\<^sub>1\n  finite A\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<And>xa.\n                   \\<lbrakk>\\<not> (infinite A \\<or> A = {});\n                    xa \\<in> set_pmf (pmf_of_set A);\n                    finite {y \\<in> A. y < xa}\\<rbrakk>\n                   \\<Longrightarrow> map_pmf (split_bst x)\n(random_bst {y \\<in> A. y < xa}) =\n                                     pair_pmf\n(random_bst {y \\<in> {y \\<in> A. y < xa}. y < x})\n(random_bst {y \\<in> {y \\<in> A. y < xa}. x < y});\n        \\<And>xa xaa.\n           \\<lbrakk>\\<not> (infinite A \\<or> A = {});\n            xa \\<in> set_pmf (pmf_of_set A);\n            xaa \\<in> set_pmf (random_bst {y \\<in> A. y < xa});\n            finite {y \\<in> A. xa < y}\\<rbrakk>\n           \\<Longrightarrow> map_pmf (split_bst x)\n                              (random_bst {y \\<in> A. xa < y}) =\n                             pair_pmf\n                              (random_bst\n                                {y \\<in> {y \\<in> A. xa < y}. y < x})\n                              (random_bst\n                                {y \\<in> {y \\<in> A. xa < y}. x < y});\n        finite A\\<rbrakk>\n       \\<Longrightarrow> map_pmf (split_bst x) (random_bst A) =\n                         pair_pmf (random_bst {y \\<in> A. y < x})\n                          (random_bst {y \\<in> A. x < y})", "include monad_normalisation"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<And>xa.\n                   \\<lbrakk>\\<not> (infinite A \\<or> A = {});\n                    xa \\<in> set_pmf (pmf_of_set A);\n                    finite {y \\<in> A. y < xa}\\<rbrakk>\n                   \\<Longrightarrow> map_pmf (split_bst x)\n(random_bst {y \\<in> A. y < xa}) =\n                                     pair_pmf\n(random_bst {y \\<in> {y \\<in> A. y < xa}. y < x})\n(random_bst {y \\<in> {y \\<in> A. y < xa}. x < y});\n        \\<And>xa xaa.\n           \\<lbrakk>\\<not> (infinite A \\<or> A = {});\n            xa \\<in> set_pmf (pmf_of_set A);\n            xaa \\<in> set_pmf (random_bst {y \\<in> A. y < xa});\n            finite {y \\<in> A. xa < y}\\<rbrakk>\n           \\<Longrightarrow> map_pmf (split_bst x)\n                              (random_bst {y \\<in> A. xa < y}) =\n                             pair_pmf\n                              (random_bst\n                                {y \\<in> {y \\<in> A. xa < y}. y < x})\n                              (random_bst\n                                {y \\<in> {y \\<in> A. xa < y}. x < y});\n        finite A\\<rbrakk>\n       \\<Longrightarrow> map_pmf (split_bst x) (random_bst A) =\n                         pair_pmf (random_bst {y \\<in> A. y < x})\n                          (random_bst {y \\<in> A. x < y})", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "proof (cases \"A = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A = {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})\n 2. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "case True"], ["proof (state)\nthis:\n  A = {}\n\ngoal (2 subgoals):\n 1. A = {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})\n 2. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "thus ?thesis"], ["proof (prove)\nusing this:\n  A = {}\n\ngoal (1 subgoal):\n 1. map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "by (auto simp: pair_return_pmf1)"], ["proof (state)\nthis:\n  map_pmf (split_bst x) (random_bst A) =\n  pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "case False"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "have \"map_pmf (split_bst x) (random_bst A) =\n            do {y \\<leftarrow> pmf_of_set A;\n                if y < x then\n                  do {\n                    l \\<leftarrow> random_bst {z\\<in>A. z < y};\n                    (t1, t2) \\<leftarrow> map_pmf (split_bst x) (random_bst {z\\<in>A. z > y});\n                    return_pmf (\\<langle>l, y, t1\\<rangle>, t2)\n                  }\n                else if y > x then\n                  do {\n                    (t1, t2) \\<leftarrow> map_pmf (split_bst x) (random_bst {z\\<in>A. z < y});\n                    r \\<leftarrow> random_bst {z\\<in>A. z > y};\n                    return_pmf (t1, (\\<langle>t2, y, r\\<rangle>))\n                  }\n                else\n                  do {\n                    l \\<leftarrow> random_bst {z\\<in>A. z < y};\n                    r \\<leftarrow> random_bst {z\\<in>A. z > y};\n                    return_pmf (l, r)\n                  }\n               }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_pmf (split_bst x) (random_bst A) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>y.\n        if y < x\n        then random_bst {z \\<in> A. z < y} \\<bind>\n             (\\<lambda>l.\n                 map_pmf (split_bst x)\n                  (random_bst {z \\<in> A. y < z}) \\<bind>\n                 (\\<lambda>(t1, t2).\n                     return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))\n        else if x < y\n             then map_pmf (split_bst x)\n                   (random_bst {z \\<in> A. z < y}) \\<bind>\n                  (\\<lambda>(t1, t2).\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r.\n                          return_pmf (t1, \\<langle>t2, y, r\\<rangle>)))\n             else random_bst {z \\<in> A. z < y} \\<bind>\n                  (\\<lambda>l.\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r. return_pmf (l, r))))", "using \"1.prems\" False"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. map_pmf (split_bst x) (random_bst A) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>y.\n        if y < x\n        then random_bst {z \\<in> A. z < y} \\<bind>\n             (\\<lambda>l.\n                 map_pmf (split_bst x)\n                  (random_bst {z \\<in> A. y < z}) \\<bind>\n                 (\\<lambda>(t1, t2).\n                     return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))\n        else if x < y\n             then map_pmf (split_bst x)\n                   (random_bst {z \\<in> A. z < y}) \\<bind>\n                  (\\<lambda>(t1, t2).\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r.\n                          return_pmf (t1, \\<langle>t2, y, r\\<rangle>)))\n             else random_bst {z \\<in> A. z < y} \\<bind>\n                  (\\<lambda>l.\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r. return_pmf (l, r))))", "by (subst random_bst.simps)\n         (simp add: map_bind_pmf bind_map_pmf return_pmf_if case_prod_unfold cong: if_cong)"], ["proof (state)\nthis:\n  map_pmf (split_bst x) (random_bst A) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>y.\n      if y < x\n      then random_bst {z \\<in> A. z < y} \\<bind>\n           (\\<lambda>l.\n               map_pmf (split_bst x) (random_bst {z \\<in> A. y < z}) \\<bind>\n               (\\<lambda>(t1, t2).\n                   return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))\n      else if x < y\n           then map_pmf (split_bst x)\n                 (random_bst {z \\<in> A. z < y}) \\<bind>\n                (\\<lambda>(t1, t2).\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r.\n                        return_pmf (t1, \\<langle>t2, y, r\\<rangle>)))\n           else random_bst {z \\<in> A. z < y} \\<bind>\n                (\\<lambda>l.\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r. return_pmf (l, r))))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "also"], ["proof (state)\nthis:\n  map_pmf (split_bst x) (random_bst A) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>y.\n      if y < x\n      then random_bst {z \\<in> A. z < y} \\<bind>\n           (\\<lambda>l.\n               map_pmf (split_bst x) (random_bst {z \\<in> A. y < z}) \\<bind>\n               (\\<lambda>(t1, t2).\n                   return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))\n      else if x < y\n           then map_pmf (split_bst x)\n                 (random_bst {z \\<in> A. z < y}) \\<bind>\n                (\\<lambda>(t1, t2).\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r.\n                        return_pmf (t1, \\<langle>t2, y, r\\<rangle>)))\n           else random_bst {z \\<in> A. z < y} \\<bind>\n                (\\<lambda>l.\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r. return_pmf (l, r))))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "have \"\\<dots> = do {y \\<leftarrow> pmf_of_set A;\n                        if y < x then\n                          do {\n                            l \\<leftarrow> random_bst {z\\<in>A. z < y};\n                            (t1, t2) \\<leftarrow> pair_pmf (random_bst {z\\<in>{z\\<in>A. z > y}. z < x})\n                                                 (random_bst {z\\<in>{z\\<in>A. z > y}. z > x});\n                            return_pmf (\\<langle>l, y, t1\\<rangle>, t2)\n                          }\n                        else if y > x then\n                          do {\n                            (t1, t2) \\<leftarrow> pair_pmf (random_bst {z\\<in>{z\\<in>A. z < y}. z < x})\n                                                 (random_bst {z\\<in>{z\\<in>A. z < y}. z > x});\n                            r \\<leftarrow> random_bst {z\\<in>A. z > y};\n                            return_pmf (t1, (\\<langle>t2, y, r\\<rangle>))\n                          }\n                         else \n                           do {\n                             l \\<leftarrow> random_bst {z\\<in>A. z < y};\n                             r \\<leftarrow> random_bst {z\\<in>A. z > y};\n                             return_pmf (l, r)\n                           }\n                       }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>y.\n        if y < x\n        then random_bst {z \\<in> A. z < y} \\<bind>\n             (\\<lambda>l.\n                 map_pmf (split_bst x)\n                  (random_bst {z \\<in> A. y < z}) \\<bind>\n                 (\\<lambda>(t1, t2).\n                     return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))\n        else if x < y\n             then map_pmf (split_bst x)\n                   (random_bst {z \\<in> A. z < y}) \\<bind>\n                  (\\<lambda>(t1, t2).\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r.\n                          return_pmf (t1, \\<langle>t2, y, r\\<rangle>)))\n             else random_bst {z \\<in> A. z < y} \\<bind>\n                  (\\<lambda>l.\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r. return_pmf (l, r)))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>y.\n        if y < x\n        then random_bst {z \\<in> A. z < y} \\<bind>\n             (\\<lambda>l.\n                 pair_pmf (random_bst {z \\<in> {z \\<in> A. y < z}. z < x})\n                  (random_bst {z \\<in> {z \\<in> A. y < z}. x < z}) \\<bind>\n                 (\\<lambda>(t1, t2).\n                     return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))\n        else if x < y\n             then pair_pmf (random_bst {z \\<in> {z \\<in> A. z < y}. z < x})\n                   (random_bst {z \\<in> {z \\<in> A. z < y}. x < z}) \\<bind>\n                  (\\<lambda>(t1, t2).\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r.\n                          return_pmf (t1, \\<langle>t2, y, r\\<rangle>)))\n             else random_bst {z \\<in> A. z < y} \\<bind>\n                  (\\<lambda>l.\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r. return_pmf (l, r))))", "using \\<open>finite A\\<close> and \\<open>A \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>y.\n        if y < x\n        then random_bst {z \\<in> A. z < y} \\<bind>\n             (\\<lambda>l.\n                 map_pmf (split_bst x)\n                  (random_bst {z \\<in> A. y < z}) \\<bind>\n                 (\\<lambda>(t1, t2).\n                     return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))\n        else if x < y\n             then map_pmf (split_bst x)\n                   (random_bst {z \\<in> A. z < y}) \\<bind>\n                  (\\<lambda>(t1, t2).\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r.\n                          return_pmf (t1, \\<langle>t2, y, r\\<rangle>)))\n             else random_bst {z \\<in> A. z < y} \\<bind>\n                  (\\<lambda>l.\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r. return_pmf (l, r)))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>y.\n        if y < x\n        then random_bst {z \\<in> A. z < y} \\<bind>\n             (\\<lambda>l.\n                 pair_pmf (random_bst {z \\<in> {z \\<in> A. y < z}. z < x})\n                  (random_bst {z \\<in> {z \\<in> A. y < z}. x < z}) \\<bind>\n                 (\\<lambda>(t1, t2).\n                     return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))\n        else if x < y\n             then pair_pmf (random_bst {z \\<in> {z \\<in> A. z < y}. z < x})\n                   (random_bst {z \\<in> {z \\<in> A. z < y}. x < z}) \\<bind>\n                  (\\<lambda>(t1, t2).\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r.\n                          return_pmf (t1, \\<langle>t2, y, r\\<rangle>)))\n             else random_bst {z \\<in> A. z < y} \\<bind>\n                  (\\<lambda>l.\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r. return_pmf (l, r))))", "thm \"1.IH\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>y.\n        if y < x\n        then random_bst {z \\<in> A. z < y} \\<bind>\n             (\\<lambda>l.\n                 map_pmf (split_bst x)\n                  (random_bst {z \\<in> A. y < z}) \\<bind>\n                 (\\<lambda>(t1, t2).\n                     return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))\n        else if x < y\n             then map_pmf (split_bst x)\n                   (random_bst {z \\<in> A. z < y}) \\<bind>\n                  (\\<lambda>(t1, t2).\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r.\n                          return_pmf (t1, \\<langle>t2, y, r\\<rangle>)))\n             else random_bst {z \\<in> A. z < y} \\<bind>\n                  (\\<lambda>l.\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r. return_pmf (l, r)))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>y.\n        if y < x\n        then random_bst {z \\<in> A. z < y} \\<bind>\n             (\\<lambda>l.\n                 pair_pmf (random_bst {z \\<in> {z \\<in> A. y < z}. z < x})\n                  (random_bst {z \\<in> {z \\<in> A. y < z}. x < z}) \\<bind>\n                 (\\<lambda>(t1, t2).\n                     return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))\n        else if x < y\n             then pair_pmf (random_bst {z \\<in> {z \\<in> A. z < y}. z < x})\n                   (random_bst {z \\<in> {z \\<in> A. z < y}. x < z}) \\<bind>\n                  (\\<lambda>(t1, t2).\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r.\n                          return_pmf (t1, \\<langle>t2, y, r\\<rangle>)))\n             else random_bst {z \\<in> A. z < y} \\<bind>\n                  (\\<lambda>l.\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r. return_pmf (l, r))))", "by (intro bind_pmf_cong if_cong refl \"1.IH\") auto"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>y.\n      if y < x\n      then random_bst {z \\<in> A. z < y} \\<bind>\n           (\\<lambda>l.\n               map_pmf (split_bst x) (random_bst {z \\<in> A. y < z}) \\<bind>\n               (\\<lambda>(t1, t2).\n                   return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))\n      else if x < y\n           then map_pmf (split_bst x)\n                 (random_bst {z \\<in> A. z < y}) \\<bind>\n                (\\<lambda>(t1, t2).\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r.\n                        return_pmf (t1, \\<langle>t2, y, r\\<rangle>)))\n           else random_bst {z \\<in> A. z < y} \\<bind>\n                (\\<lambda>l.\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r. return_pmf (l, r)))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>y.\n      if y < x\n      then random_bst {z \\<in> A. z < y} \\<bind>\n           (\\<lambda>l.\n               pair_pmf (random_bst {z \\<in> {z \\<in> A. y < z}. z < x})\n                (random_bst {z \\<in> {z \\<in> A. y < z}. x < z}) \\<bind>\n               (\\<lambda>(t1, t2).\n                   return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))\n      else if x < y\n           then pair_pmf (random_bst {z \\<in> {z \\<in> A. z < y}. z < x})\n                 (random_bst {z \\<in> {z \\<in> A. z < y}. x < z}) \\<bind>\n                (\\<lambda>(t1, t2).\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r.\n                        return_pmf (t1, \\<langle>t2, y, r\\<rangle>)))\n           else random_bst {z \\<in> A. z < y} \\<bind>\n                (\\<lambda>l.\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r. return_pmf (l, r))))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "also"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>y.\n      if y < x\n      then random_bst {z \\<in> A. z < y} \\<bind>\n           (\\<lambda>l.\n               map_pmf (split_bst x) (random_bst {z \\<in> A. y < z}) \\<bind>\n               (\\<lambda>(t1, t2).\n                   return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))\n      else if x < y\n           then map_pmf (split_bst x)\n                 (random_bst {z \\<in> A. z < y}) \\<bind>\n                (\\<lambda>(t1, t2).\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r.\n                        return_pmf (t1, \\<langle>t2, y, r\\<rangle>)))\n           else random_bst {z \\<in> A. z < y} \\<bind>\n                (\\<lambda>l.\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r. return_pmf (l, r)))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>y.\n      if y < x\n      then random_bst {z \\<in> A. z < y} \\<bind>\n           (\\<lambda>l.\n               pair_pmf (random_bst {z \\<in> {z \\<in> A. y < z}. z < x})\n                (random_bst {z \\<in> {z \\<in> A. y < z}. x < z}) \\<bind>\n               (\\<lambda>(t1, t2).\n                   return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))\n      else if x < y\n           then pair_pmf (random_bst {z \\<in> {z \\<in> A. z < y}. z < x})\n                 (random_bst {z \\<in> {z \\<in> A. z < y}. x < z}) \\<bind>\n                (\\<lambda>(t1, t2).\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r.\n                        return_pmf (t1, \\<langle>t2, y, r\\<rangle>)))\n           else random_bst {z \\<in> A. z < y} \\<bind>\n                (\\<lambda>l.\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r. return_pmf (l, r))))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "have \"\\<dots> = do {y \\<leftarrow> pmf_of_set A;\n                        if y < x then\n                          do {\n                            l \\<leftarrow> random_bst {z\\<in>A. z < y};\n                            t1 \\<leftarrow> random_bst {z\\<in>{z\\<in>A. z > y}. z < x};\n                            t2 \\<leftarrow> random_bst {z\\<in>{z\\<in>A. z > y}. z > x};\n                            return_pmf (\\<langle>l, y, t1\\<rangle>, t2)\n                          }\n                        else if y > x then\n                          do {\n                            t1 \\<leftarrow> random_bst {z\\<in>{z\\<in>A. z < y}. z < x};\n                            t2 \\<leftarrow> random_bst {z\\<in>{z\\<in>A. z < y}. z > x};\n                            r \\<leftarrow> random_bst {z\\<in>A. z > y};\n                            return_pmf (t1, (\\<langle>t2, y, r\\<rangle>))\n                          }\n                         else \n                           do {\n                             l \\<leftarrow> random_bst {z\\<in>A. z < y};\n                             r \\<leftarrow> random_bst {z\\<in>A. z > y};\n                             return_pmf (l, r)\n                           }\n                       }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>y.\n        if y < x\n        then random_bst {z \\<in> A. z < y} \\<bind>\n             (\\<lambda>l.\n                 pair_pmf (random_bst {z \\<in> {z \\<in> A. y < z}. z < x})\n                  (random_bst {z \\<in> {z \\<in> A. y < z}. x < z}) \\<bind>\n                 (\\<lambda>(t1, t2).\n                     return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))\n        else if x < y\n             then pair_pmf (random_bst {z \\<in> {z \\<in> A. z < y}. z < x})\n                   (random_bst {z \\<in> {z \\<in> A. z < y}. x < z}) \\<bind>\n                  (\\<lambda>(t1, t2).\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r.\n                          return_pmf (t1, \\<langle>t2, y, r\\<rangle>)))\n             else random_bst {z \\<in> A. z < y} \\<bind>\n                  (\\<lambda>l.\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r. return_pmf (l, r)))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>y.\n        if y < x\n        then random_bst {z \\<in> A. z < y} \\<bind>\n             (\\<lambda>l.\n                 random_bst {z \\<in> {z \\<in> A. y < z}. z < x} \\<bind>\n                 (\\<lambda>t1.\n                     random_bst {z \\<in> {z \\<in> A. y < z}. x < z} \\<bind>\n                     (\\<lambda>t2.\n                         return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))\n        else if x < y\n             then random_bst {z \\<in> {z \\<in> A. z < y}. z < x} \\<bind>\n                  (\\<lambda>t1.\n                      random_bst {z \\<in> {z \\<in> A. z < y}. x < z} \\<bind>\n                      (\\<lambda>t2.\n                          random_bst {z \\<in> A. y < z} \\<bind>\n                          (\\<lambda>r.\n                              return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))\n             else random_bst {z \\<in> A. z < y} \\<bind>\n                  (\\<lambda>l.\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r. return_pmf (l, r))))", "by (simp add: pair_pmf_def cong: if_cong)"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>y.\n      if y < x\n      then random_bst {z \\<in> A. z < y} \\<bind>\n           (\\<lambda>l.\n               pair_pmf (random_bst {z \\<in> {z \\<in> A. y < z}. z < x})\n                (random_bst {z \\<in> {z \\<in> A. y < z}. x < z}) \\<bind>\n               (\\<lambda>(t1, t2).\n                   return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))\n      else if x < y\n           then pair_pmf (random_bst {z \\<in> {z \\<in> A. z < y}. z < x})\n                 (random_bst {z \\<in> {z \\<in> A. z < y}. x < z}) \\<bind>\n                (\\<lambda>(t1, t2).\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r.\n                        return_pmf (t1, \\<langle>t2, y, r\\<rangle>)))\n           else random_bst {z \\<in> A. z < y} \\<bind>\n                (\\<lambda>l.\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r. return_pmf (l, r)))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>y.\n      if y < x\n      then random_bst {z \\<in> A. z < y} \\<bind>\n           (\\<lambda>l.\n               random_bst {z \\<in> {z \\<in> A. y < z}. z < x} \\<bind>\n               (\\<lambda>t1.\n                   random_bst {z \\<in> {z \\<in> A. y < z}. x < z} \\<bind>\n                   (\\<lambda>t2.\n                       return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))\n      else if x < y\n           then random_bst {z \\<in> {z \\<in> A. z < y}. z < x} \\<bind>\n                (\\<lambda>t1.\n                    random_bst {z \\<in> {z \\<in> A. z < y}. x < z} \\<bind>\n                    (\\<lambda>t2.\n                        random_bst {z \\<in> A. y < z} \\<bind>\n                        (\\<lambda>r.\n                            return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))\n           else random_bst {z \\<in> A. z < y} \\<bind>\n                (\\<lambda>l.\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r. return_pmf (l, r))))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "also"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>y.\n      if y < x\n      then random_bst {z \\<in> A. z < y} \\<bind>\n           (\\<lambda>l.\n               pair_pmf (random_bst {z \\<in> {z \\<in> A. y < z}. z < x})\n                (random_bst {z \\<in> {z \\<in> A. y < z}. x < z}) \\<bind>\n               (\\<lambda>(t1, t2).\n                   return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))\n      else if x < y\n           then pair_pmf (random_bst {z \\<in> {z \\<in> A. z < y}. z < x})\n                 (random_bst {z \\<in> {z \\<in> A. z < y}. x < z}) \\<bind>\n                (\\<lambda>(t1, t2).\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r.\n                        return_pmf (t1, \\<langle>t2, y, r\\<rangle>)))\n           else random_bst {z \\<in> A. z < y} \\<bind>\n                (\\<lambda>l.\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r. return_pmf (l, r)))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>y.\n      if y < x\n      then random_bst {z \\<in> A. z < y} \\<bind>\n           (\\<lambda>l.\n               random_bst {z \\<in> {z \\<in> A. y < z}. z < x} \\<bind>\n               (\\<lambda>t1.\n                   random_bst {z \\<in> {z \\<in> A. y < z}. x < z} \\<bind>\n                   (\\<lambda>t2.\n                       return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))\n      else if x < y\n           then random_bst {z \\<in> {z \\<in> A. z < y}. z < x} \\<bind>\n                (\\<lambda>t1.\n                    random_bst {z \\<in> {z \\<in> A. z < y}. x < z} \\<bind>\n                    (\\<lambda>t2.\n                        random_bst {z \\<in> A. y < z} \\<bind>\n                        (\\<lambda>r.\n                            return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))\n           else random_bst {z \\<in> A. z < y} \\<bind>\n                (\\<lambda>l.\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r. return_pmf (l, r))))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "have \"\\<dots> = do {y \\<leftarrow> pmf_of_set A;\n                        if y \\<in> A\\<^sub>1 then\n                          do {\n                            l \\<leftarrow> random_bst {z\\<in>A\\<^sub>1. z < y};\n                            t1 \\<leftarrow> random_bst {z\\<in>A\\<^sub>1. z > y};\n                            t2 \\<leftarrow> random_bst A\\<^sub>2;\n                            return_pmf (\\<langle>l, y, t1\\<rangle>, t2)\n                          }\n                        else if y \\<in> A\\<^sub>2 then\n                          do {\n                            t1 \\<leftarrow> random_bst A\\<^sub>1;\n                            t2 \\<leftarrow> random_bst {z\\<in>A\\<^sub>2. z < y};\n                            r \\<leftarrow> random_bst {z\\<in>A\\<^sub>2. z > y};\n                            return_pmf (t1, (\\<langle>t2, y, r\\<rangle>))\n                          }\n                         else\n                           pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n                       }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>y.\n        if y < x\n        then random_bst {z \\<in> A. z < y} \\<bind>\n             (\\<lambda>l.\n                 random_bst {z \\<in> {z \\<in> A. y < z}. z < x} \\<bind>\n                 (\\<lambda>t1.\n                     random_bst {z \\<in> {z \\<in> A. y < z}. x < z} \\<bind>\n                     (\\<lambda>t2.\n                         return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))\n        else if x < y\n             then random_bst {z \\<in> {z \\<in> A. z < y}. z < x} \\<bind>\n                  (\\<lambda>t1.\n                      random_bst {z \\<in> {z \\<in> A. z < y}. x < z} \\<bind>\n                      (\\<lambda>t2.\n                          random_bst {z \\<in> A. y < z} \\<bind>\n                          (\\<lambda>r.\n                              return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))\n             else random_bst {z \\<in> A. z < y} \\<bind>\n                  (\\<lambda>l.\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r. return_pmf (l, r)))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>y.\n        if y \\<in> A\\<^sub>1\n        then random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n             (\\<lambda>l.\n                 random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n                 (\\<lambda>t1.\n                     random_bst A\\<^sub>2 \\<bind>\n                     (\\<lambda>t2.\n                         return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))\n        else if y \\<in> A\\<^sub>2\n             then random_bst A\\<^sub>1 \\<bind>\n                  (\\<lambda>t1.\n                      random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                      (\\<lambda>t2.\n                          random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                          (\\<lambda>r.\n                              return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))\n             else pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2))", "using \\<open>finite A\\<close> \\<open>A \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>y.\n        if y < x\n        then random_bst {z \\<in> A. z < y} \\<bind>\n             (\\<lambda>l.\n                 random_bst {z \\<in> {z \\<in> A. y < z}. z < x} \\<bind>\n                 (\\<lambda>t1.\n                     random_bst {z \\<in> {z \\<in> A. y < z}. x < z} \\<bind>\n                     (\\<lambda>t2.\n                         return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))\n        else if x < y\n             then random_bst {z \\<in> {z \\<in> A. z < y}. z < x} \\<bind>\n                  (\\<lambda>t1.\n                      random_bst {z \\<in> {z \\<in> A. z < y}. x < z} \\<bind>\n                      (\\<lambda>t2.\n                          random_bst {z \\<in> A. y < z} \\<bind>\n                          (\\<lambda>r.\n                              return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))\n             else random_bst {z \\<in> A. z < y} \\<bind>\n                  (\\<lambda>l.\n                      random_bst {z \\<in> A. y < z} \\<bind>\n                      (\\<lambda>r. return_pmf (l, r)))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>y.\n        if y \\<in> A\\<^sub>1\n        then random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n             (\\<lambda>l.\n                 random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n                 (\\<lambda>t1.\n                     random_bst A\\<^sub>2 \\<bind>\n                     (\\<lambda>t2.\n                         return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))\n        else if y \\<in> A\\<^sub>2\n             then random_bst A\\<^sub>1 \\<bind>\n                  (\\<lambda>t1.\n                      random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                      (\\<lambda>t2.\n                          random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                          (\\<lambda>r.\n                              return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))\n             else pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2))", "by (intro bind_pmf_cong refl if_cong arg_cong[of _ _ random_bst])\n         (auto simp: A\\<^sub>1_def A\\<^sub>2_def pair_pmf_def)"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>y.\n      if y < x\n      then random_bst {z \\<in> A. z < y} \\<bind>\n           (\\<lambda>l.\n               random_bst {z \\<in> {z \\<in> A. y < z}. z < x} \\<bind>\n               (\\<lambda>t1.\n                   random_bst {z \\<in> {z \\<in> A. y < z}. x < z} \\<bind>\n                   (\\<lambda>t2.\n                       return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))\n      else if x < y\n           then random_bst {z \\<in> {z \\<in> A. z < y}. z < x} \\<bind>\n                (\\<lambda>t1.\n                    random_bst {z \\<in> {z \\<in> A. z < y}. x < z} \\<bind>\n                    (\\<lambda>t2.\n                        random_bst {z \\<in> A. y < z} \\<bind>\n                        (\\<lambda>r.\n                            return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))\n           else random_bst {z \\<in> A. z < y} \\<bind>\n                (\\<lambda>l.\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r. return_pmf (l, r)))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>y.\n      if y \\<in> A\\<^sub>1\n      then random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n           (\\<lambda>l.\n               random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n               (\\<lambda>t1.\n                   random_bst A\\<^sub>2 \\<bind>\n                   (\\<lambda>t2.\n                       return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))\n      else if y \\<in> A\\<^sub>2\n           then random_bst A\\<^sub>1 \\<bind>\n                (\\<lambda>t1.\n                    random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                    (\\<lambda>t2.\n                        random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                        (\\<lambda>r.\n                            return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))\n           else pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "also"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>y.\n      if y < x\n      then random_bst {z \\<in> A. z < y} \\<bind>\n           (\\<lambda>l.\n               random_bst {z \\<in> {z \\<in> A. y < z}. z < x} \\<bind>\n               (\\<lambda>t1.\n                   random_bst {z \\<in> {z \\<in> A. y < z}. x < z} \\<bind>\n                   (\\<lambda>t2.\n                       return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))\n      else if x < y\n           then random_bst {z \\<in> {z \\<in> A. z < y}. z < x} \\<bind>\n                (\\<lambda>t1.\n                    random_bst {z \\<in> {z \\<in> A. z < y}. x < z} \\<bind>\n                    (\\<lambda>t2.\n                        random_bst {z \\<in> A. y < z} \\<bind>\n                        (\\<lambda>r.\n                            return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))\n           else random_bst {z \\<in> A. z < y} \\<bind>\n                (\\<lambda>l.\n                    random_bst {z \\<in> A. y < z} \\<bind>\n                    (\\<lambda>r. return_pmf (l, r)))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>y.\n      if y \\<in> A\\<^sub>1\n      then random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n           (\\<lambda>l.\n               random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n               (\\<lambda>t1.\n                   random_bst A\\<^sub>2 \\<bind>\n                   (\\<lambda>t2.\n                       return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))\n      else if y \\<in> A\\<^sub>2\n           then random_bst A\\<^sub>1 \\<bind>\n                (\\<lambda>t1.\n                    random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                    (\\<lambda>t2.\n                        random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                        (\\<lambda>r.\n                            return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))\n           else pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "have \"\\<dots> = do {i \\<leftarrow> pmf_of_set {..<card A};\n                        if i < card A\\<^sub>1 then\n                          do {\n                            y \\<leftarrow> pmf_of_set A\\<^sub>1;\n                            l \\<leftarrow> random_bst {z\\<in>A\\<^sub>1. z < y};\n                            t1 \\<leftarrow> random_bst {z\\<in>A\\<^sub>1. z > y};\n                            t2 \\<leftarrow> random_bst A\\<^sub>2;\n                            return_pmf (\\<langle>l, y, t1\\<rangle>, t2)\n                          }\n                        else if i < card A\\<^sub>1 + card A\\<^sub>2 then\n                          do {\n                            y \\<leftarrow> pmf_of_set A\\<^sub>2;\n                            t1 \\<leftarrow> random_bst A\\<^sub>1;\n                            t2 \\<leftarrow> random_bst {z\\<in>A\\<^sub>2. z < y};\n                            r \\<leftarrow> random_bst {z\\<in>A\\<^sub>2. z > y};\n                            return_pmf (t1, (\\<langle>t2, y, r\\<rangle>))\n                          }\n                         else do {\n                           y \\<leftarrow> pmf_of_set (if x \\<in> A then {x} else {});\n                           pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n                         }\n                       }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>y.\n        if y \\<in> A\\<^sub>1\n        then random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n             (\\<lambda>l.\n                 random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n                 (\\<lambda>t1.\n                     random_bst A\\<^sub>2 \\<bind>\n                     (\\<lambda>t2.\n                         return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))\n        else if y \\<in> A\\<^sub>2\n             then random_bst A\\<^sub>1 \\<bind>\n                  (\\<lambda>t1.\n                      random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                      (\\<lambda>t2.\n                          random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                          (\\<lambda>r.\n                              return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))\n             else pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)) =\n    pmf_of_set {..<card A} \\<bind>\n    (\\<lambda>i.\n        if i < card A\\<^sub>1\n        then pmf_of_set A\\<^sub>1 \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n                     (\\<lambda>t1.\n                         random_bst A\\<^sub>2 \\<bind>\n                         (\\<lambda>t2.\n                             return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))))\n        else if i < card A\\<^sub>1 + card A\\<^sub>2\n             then pmf_of_set A\\<^sub>2 \\<bind>\n                  (\\<lambda>y.\n                      random_bst A\\<^sub>1 \\<bind>\n                      (\\<lambda>t1.\n                          random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                          (\\<lambda>t2.\n                              random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                              (\\<lambda>r.\n                                  return_pmf\n                                   (t1, \\<langle>t2, y, r\\<rangle>)))))\n             else pmf_of_set (if x \\<in> A then {x} else {}) \\<bind>\n                  (\\<lambda>y.\n                      pair_pmf (random_bst A\\<^sub>1)\n                       (random_bst A\\<^sub>2)))", "using \\<open>finite A\\<close> \\<open>A \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>y.\n        if y \\<in> A\\<^sub>1\n        then random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n             (\\<lambda>l.\n                 random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n                 (\\<lambda>t1.\n                     random_bst A\\<^sub>2 \\<bind>\n                     (\\<lambda>t2.\n                         return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))\n        else if y \\<in> A\\<^sub>2\n             then random_bst A\\<^sub>1 \\<bind>\n                  (\\<lambda>t1.\n                      random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                      (\\<lambda>t2.\n                          random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                          (\\<lambda>r.\n                              return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))\n             else pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)) =\n    pmf_of_set {..<card A} \\<bind>\n    (\\<lambda>i.\n        if i < card A\\<^sub>1\n        then pmf_of_set A\\<^sub>1 \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n                     (\\<lambda>t1.\n                         random_bst A\\<^sub>2 \\<bind>\n                         (\\<lambda>t2.\n                             return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))))\n        else if i < card A\\<^sub>1 + card A\\<^sub>2\n             then pmf_of_set A\\<^sub>2 \\<bind>\n                  (\\<lambda>y.\n                      random_bst A\\<^sub>1 \\<bind>\n                      (\\<lambda>t1.\n                          random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                          (\\<lambda>t2.\n                              random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                              (\\<lambda>r.\n                                  return_pmf\n                                   (t1, \\<langle>t2, y, r\\<rangle>)))))\n             else pmf_of_set (if x \\<in> A then {x} else {}) \\<bind>\n                  (\\<lambda>y.\n                      pair_pmf (random_bst A\\<^sub>1)\n                       (random_bst A\\<^sub>2)))", "by (intro pmf_of_set_3way_split) (auto simp: A\\<^sub>1_def A\\<^sub>2_def not_less_iff_gr_or_eq)"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>y.\n      if y \\<in> A\\<^sub>1\n      then random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n           (\\<lambda>l.\n               random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n               (\\<lambda>t1.\n                   random_bst A\\<^sub>2 \\<bind>\n                   (\\<lambda>t2.\n                       return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))\n      else if y \\<in> A\\<^sub>2\n           then random_bst A\\<^sub>1 \\<bind>\n                (\\<lambda>t1.\n                    random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                    (\\<lambda>t2.\n                        random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                        (\\<lambda>r.\n                            return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))\n           else pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)) =\n  pmf_of_set {..<card A} \\<bind>\n  (\\<lambda>i.\n      if i < card A\\<^sub>1\n      then pmf_of_set A\\<^sub>1 \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n                   (\\<lambda>t1.\n                       random_bst A\\<^sub>2 \\<bind>\n                       (\\<lambda>t2.\n                           return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))))\n      else if i < card A\\<^sub>1 + card A\\<^sub>2\n           then pmf_of_set A\\<^sub>2 \\<bind>\n                (\\<lambda>y.\n                    random_bst A\\<^sub>1 \\<bind>\n                    (\\<lambda>t1.\n                        random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                        (\\<lambda>t2.\n                            random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                            (\\<lambda>r.\n                                return_pmf\n                                 (t1, \\<langle>t2, y, r\\<rangle>)))))\n           else pmf_of_set (if x \\<in> A then {x} else {}) \\<bind>\n                (\\<lambda>y.\n                    pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "also"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>y.\n      if y \\<in> A\\<^sub>1\n      then random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n           (\\<lambda>l.\n               random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n               (\\<lambda>t1.\n                   random_bst A\\<^sub>2 \\<bind>\n                   (\\<lambda>t2.\n                       return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))\n      else if y \\<in> A\\<^sub>2\n           then random_bst A\\<^sub>1 \\<bind>\n                (\\<lambda>t1.\n                    random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                    (\\<lambda>t2.\n                        random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                        (\\<lambda>r.\n                            return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))\n           else pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)) =\n  pmf_of_set {..<card A} \\<bind>\n  (\\<lambda>i.\n      if i < card A\\<^sub>1\n      then pmf_of_set A\\<^sub>1 \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n                   (\\<lambda>t1.\n                       random_bst A\\<^sub>2 \\<bind>\n                       (\\<lambda>t2.\n                           return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))))\n      else if i < card A\\<^sub>1 + card A\\<^sub>2\n           then pmf_of_set A\\<^sub>2 \\<bind>\n                (\\<lambda>y.\n                    random_bst A\\<^sub>1 \\<bind>\n                    (\\<lambda>t1.\n                        random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                        (\\<lambda>t2.\n                            random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                            (\\<lambda>r.\n                                return_pmf\n                                 (t1, \\<langle>t2, y, r\\<rangle>)))))\n           else pmf_of_set (if x \\<in> A then {x} else {}) \\<bind>\n                (\\<lambda>y.\n                    pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "have \"\\<dots> = do {i \\<leftarrow> pmf_of_set {..<card A};\n                        if i < card A\\<^sub>1 then\n                          pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n                        else if i < card A\\<^sub>1 + card A\\<^sub>2 then\n                          pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n                         else \n                          pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n                       }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set {..<card A} \\<bind>\n    (\\<lambda>i.\n        if i < card A\\<^sub>1\n        then pmf_of_set A\\<^sub>1 \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n                     (\\<lambda>t1.\n                         random_bst A\\<^sub>2 \\<bind>\n                         (\\<lambda>t2.\n                             return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))))\n        else if i < card A\\<^sub>1 + card A\\<^sub>2\n             then pmf_of_set A\\<^sub>2 \\<bind>\n                  (\\<lambda>y.\n                      random_bst A\\<^sub>1 \\<bind>\n                      (\\<lambda>t1.\n                          random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                          (\\<lambda>t2.\n                              random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                              (\\<lambda>r.\n                                  return_pmf\n                                   (t1, \\<langle>t2, y, r\\<rangle>)))))\n             else pmf_of_set (if x \\<in> A then {x} else {}) \\<bind>\n                  (\\<lambda>y.\n                      pair_pmf (random_bst A\\<^sub>1)\n                       (random_bst A\\<^sub>2))) =\n    pmf_of_set {..<card A} \\<bind>\n    (\\<lambda>i.\n        if i < card A\\<^sub>1\n        then pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n        else if i < card A\\<^sub>1 + card A\\<^sub>2\n             then pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n             else pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2))", "using \\<open>finite A\\<close> \\<open>A \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. pmf_of_set {..<card A} \\<bind>\n    (\\<lambda>i.\n        if i < card A\\<^sub>1\n        then pmf_of_set A\\<^sub>1 \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n                     (\\<lambda>t1.\n                         random_bst A\\<^sub>2 \\<bind>\n                         (\\<lambda>t2.\n                             return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))))\n        else if i < card A\\<^sub>1 + card A\\<^sub>2\n             then pmf_of_set A\\<^sub>2 \\<bind>\n                  (\\<lambda>y.\n                      random_bst A\\<^sub>1 \\<bind>\n                      (\\<lambda>t1.\n                          random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                          (\\<lambda>t2.\n                              random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                              (\\<lambda>r.\n                                  return_pmf\n                                   (t1, \\<langle>t2, y, r\\<rangle>)))))\n             else pmf_of_set (if x \\<in> A then {x} else {}) \\<bind>\n                  (\\<lambda>y.\n                      pair_pmf (random_bst A\\<^sub>1)\n                       (random_bst A\\<^sub>2))) =\n    pmf_of_set {..<card A} \\<bind>\n    (\\<lambda>i.\n        if i < card A\\<^sub>1\n        then pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n        else if i < card A\\<^sub>1 + card A\\<^sub>2\n             then pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n             else pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2))", "proof (intro bind_pmf_cong refl if_cong, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        x \\<in> set_pmf (pmf_of_set {..<card A});\n        x < card A\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set A\\<^sub>1 \\<bind>\n                         (\\<lambda>y.\n                             random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {z \\<in> A\\<^sub>1. y < z} \\<bind>\n                                 (\\<lambda>t1.\n                                     random_bst A\\<^sub>2 \\<bind>\n                                     (\\<lambda>t2.\n   return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)\n 2. \\<And>x.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        x \\<in> set_pmf (pmf_of_set {..<card A}); \\<not> x < card A\\<^sub>1;\n        x < card A\\<^sub>1 + card A\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set A\\<^sub>2 \\<bind>\n                         (\\<lambda>y.\n                             random_bst A\\<^sub>1 \\<bind>\n                             (\\<lambda>t1.\n                                 random_bst\n                                  {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                                 (\\<lambda>t2.\n                                     random_bst\n{z \\<in> A\\<^sub>2. y < z} \\<bind>\n                                     (\\<lambda>r.\n   return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)\n 3. \\<And>xa.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {..<card A});\n        \\<not> xa < card A\\<^sub>1;\n        \\<not> xa < card A\\<^sub>1 + card A\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set (if x \\<in> A then {x} else {}) \\<bind>\n                         (\\<lambda>y.\n                             pair_pmf (random_bst A\\<^sub>1)\n                              (random_bst A\\<^sub>2)) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)", "case (1 i)"], ["proof (state)\nthis:\n  finite A\n  A \\<noteq> {}\n  i \\<in> set_pmf (pmf_of_set {..<card A})\n  i < card A\\<^sub>1\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        x \\<in> set_pmf (pmf_of_set {..<card A});\n        x < card A\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set A\\<^sub>1 \\<bind>\n                         (\\<lambda>y.\n                             random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {z \\<in> A\\<^sub>1. y < z} \\<bind>\n                                 (\\<lambda>t1.\n                                     random_bst A\\<^sub>2 \\<bind>\n                                     (\\<lambda>t2.\n   return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)\n 2. \\<And>x.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        x \\<in> set_pmf (pmf_of_set {..<card A}); \\<not> x < card A\\<^sub>1;\n        x < card A\\<^sub>1 + card A\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set A\\<^sub>2 \\<bind>\n                         (\\<lambda>y.\n                             random_bst A\\<^sub>1 \\<bind>\n                             (\\<lambda>t1.\n                                 random_bst\n                                  {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                                 (\\<lambda>t2.\n                                     random_bst\n{z \\<in> A\\<^sub>2. y < z} \\<bind>\n                                     (\\<lambda>r.\n   return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)\n 3. \\<And>xa.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {..<card A});\n        \\<not> xa < card A\\<^sub>1;\n        \\<not> xa < card A\\<^sub>1 + card A\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set (if x \\<in> A then {x} else {}) \\<bind>\n                         (\\<lambda>y.\n                             pair_pmf (random_bst A\\<^sub>1)\n                              (random_bst A\\<^sub>2)) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)", "hence \"A\\<^sub>1 \\<noteq> {}\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n  i \\<in> set_pmf (pmf_of_set {..<card A})\n  i < card A\\<^sub>1\n\ngoal (1 subgoal):\n 1. A\\<^sub>1 \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  A\\<^sub>1 \\<noteq> {}\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        x \\<in> set_pmf (pmf_of_set {..<card A});\n        x < card A\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set A\\<^sub>1 \\<bind>\n                         (\\<lambda>y.\n                             random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {z \\<in> A\\<^sub>1. y < z} \\<bind>\n                                 (\\<lambda>t1.\n                                     random_bst A\\<^sub>2 \\<bind>\n                                     (\\<lambda>t2.\n   return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)\n 2. \\<And>x.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        x \\<in> set_pmf (pmf_of_set {..<card A}); \\<not> x < card A\\<^sub>1;\n        x < card A\\<^sub>1 + card A\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set A\\<^sub>2 \\<bind>\n                         (\\<lambda>y.\n                             random_bst A\\<^sub>1 \\<bind>\n                             (\\<lambda>t1.\n                                 random_bst\n                                  {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                                 (\\<lambda>t2.\n                                     random_bst\n{z \\<in> A\\<^sub>2. y < z} \\<bind>\n                                     (\\<lambda>r.\n   return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)\n 3. \\<And>xa.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {..<card A});\n        \\<not> xa < card A\\<^sub>1;\n        \\<not> xa < card A\\<^sub>1 + card A\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set (if x \\<in> A then {x} else {}) \\<bind>\n                         (\\<lambda>y.\n                             pair_pmf (random_bst A\\<^sub>1)\n                              (random_bst A\\<^sub>2)) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)", "thus ?case"], ["proof (prove)\nusing this:\n  A\\<^sub>1 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. pmf_of_set A\\<^sub>1 \\<bind>\n    (\\<lambda>y.\n        random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n        (\\<lambda>l.\n            random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n            (\\<lambda>t1.\n                random_bst A\\<^sub>2 \\<bind>\n                (\\<lambda>t2.\n                    return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))) =\n    pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  A\\<^sub>1 \\<noteq> {}\n  finite A\n\ngoal (1 subgoal):\n 1. pmf_of_set A\\<^sub>1 \\<bind>\n    (\\<lambda>y.\n        random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n        (\\<lambda>l.\n            random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n            (\\<lambda>t1.\n                random_bst A\\<^sub>2 \\<bind>\n                (\\<lambda>t2.\n                    return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))) =\n    pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)", "by (simp add: pair_pmf_def random_bst_reduce)"], ["proof (state)\nthis:\n  pmf_of_set A\\<^sub>1 \\<bind>\n  (\\<lambda>y.\n      random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n      (\\<lambda>l.\n          random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n          (\\<lambda>t1.\n              random_bst A\\<^sub>2 \\<bind>\n              (\\<lambda>t2.\n                  return_pmf (\\<langle>l, y, t1\\<rangle>, t2))))) =\n  pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        x \\<in> set_pmf (pmf_of_set {..<card A}); \\<not> x < card A\\<^sub>1;\n        x < card A\\<^sub>1 + card A\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set A\\<^sub>2 \\<bind>\n                         (\\<lambda>y.\n                             random_bst A\\<^sub>1 \\<bind>\n                             (\\<lambda>t1.\n                                 random_bst\n                                  {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                                 (\\<lambda>t2.\n                                     random_bst\n{z \\<in> A\\<^sub>2. y < z} \\<bind>\n                                     (\\<lambda>r.\n   return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)\n 2. \\<And>xa.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {..<card A});\n        \\<not> xa < card A\\<^sub>1;\n        \\<not> xa < card A\\<^sub>1 + card A\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set (if x \\<in> A then {x} else {}) \\<bind>\n                         (\\<lambda>y.\n                             pair_pmf (random_bst A\\<^sub>1)\n                              (random_bst A\\<^sub>2)) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        x \\<in> set_pmf (pmf_of_set {..<card A}); \\<not> x < card A\\<^sub>1;\n        x < card A\\<^sub>1 + card A\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set A\\<^sub>2 \\<bind>\n                         (\\<lambda>y.\n                             random_bst A\\<^sub>1 \\<bind>\n                             (\\<lambda>t1.\n                                 random_bst\n                                  {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                                 (\\<lambda>t2.\n                                     random_bst\n{z \\<in> A\\<^sub>2. y < z} \\<bind>\n                                     (\\<lambda>r.\n   return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)\n 2. \\<And>xa.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {..<card A});\n        \\<not> xa < card A\\<^sub>1;\n        \\<not> xa < card A\\<^sub>1 + card A\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set (if x \\<in> A then {x} else {}) \\<bind>\n                         (\\<lambda>y.\n                             pair_pmf (random_bst A\\<^sub>1)\n                              (random_bst A\\<^sub>2)) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)", "case (2 i)"], ["proof (state)\nthis:\n  finite A\n  A \\<noteq> {}\n  i \\<in> set_pmf (pmf_of_set {..<card A})\n  \\<not> i < card A\\<^sub>1\n  i < card A\\<^sub>1 + card A\\<^sub>2\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        x \\<in> set_pmf (pmf_of_set {..<card A}); \\<not> x < card A\\<^sub>1;\n        x < card A\\<^sub>1 + card A\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set A\\<^sub>2 \\<bind>\n                         (\\<lambda>y.\n                             random_bst A\\<^sub>1 \\<bind>\n                             (\\<lambda>t1.\n                                 random_bst\n                                  {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                                 (\\<lambda>t2.\n                                     random_bst\n{z \\<in> A\\<^sub>2. y < z} \\<bind>\n                                     (\\<lambda>r.\n   return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)\n 2. \\<And>xa.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {..<card A});\n        \\<not> xa < card A\\<^sub>1;\n        \\<not> xa < card A\\<^sub>1 + card A\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set (if x \\<in> A then {x} else {}) \\<bind>\n                         (\\<lambda>y.\n                             pair_pmf (random_bst A\\<^sub>1)\n                              (random_bst A\\<^sub>2)) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)", "hence \"A\\<^sub>2 \\<noteq> {}\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n  i \\<in> set_pmf (pmf_of_set {..<card A})\n  \\<not> i < card A\\<^sub>1\n  i < card A\\<^sub>1 + card A\\<^sub>2\n\ngoal (1 subgoal):\n 1. A\\<^sub>2 \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  A\\<^sub>2 \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        x \\<in> set_pmf (pmf_of_set {..<card A}); \\<not> x < card A\\<^sub>1;\n        x < card A\\<^sub>1 + card A\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set A\\<^sub>2 \\<bind>\n                         (\\<lambda>y.\n                             random_bst A\\<^sub>1 \\<bind>\n                             (\\<lambda>t1.\n                                 random_bst\n                                  {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                                 (\\<lambda>t2.\n                                     random_bst\n{z \\<in> A\\<^sub>2. y < z} \\<bind>\n                                     (\\<lambda>r.\n   return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)\n 2. \\<And>xa.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {..<card A});\n        \\<not> xa < card A\\<^sub>1;\n        \\<not> xa < card A\\<^sub>1 + card A\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set (if x \\<in> A then {x} else {}) \\<bind>\n                         (\\<lambda>y.\n                             pair_pmf (random_bst A\\<^sub>1)\n                              (random_bst A\\<^sub>2)) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)", "thus ?case"], ["proof (prove)\nusing this:\n  A\\<^sub>2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. pmf_of_set A\\<^sub>2 \\<bind>\n    (\\<lambda>y.\n        random_bst A\\<^sub>1 \\<bind>\n        (\\<lambda>t1.\n            random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n            (\\<lambda>t2.\n                random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                (\\<lambda>r.\n                    return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))) =\n    pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  A\\<^sub>2 \\<noteq> {}\n  finite A\n\ngoal (1 subgoal):\n 1. pmf_of_set A\\<^sub>2 \\<bind>\n    (\\<lambda>y.\n        random_bst A\\<^sub>1 \\<bind>\n        (\\<lambda>t1.\n            random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n            (\\<lambda>t2.\n                random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                (\\<lambda>r.\n                    return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))) =\n    pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)", "by (simp add: pair_pmf_def random_bst_reduce)"], ["proof (state)\nthis:\n  pmf_of_set A\\<^sub>2 \\<bind>\n  (\\<lambda>y.\n      random_bst A\\<^sub>1 \\<bind>\n      (\\<lambda>t1.\n          random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n          (\\<lambda>t2.\n              random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n              (\\<lambda>r. return_pmf (t1, \\<langle>t2, y, r\\<rangle>))))) =\n  pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>finite A; A \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {..<card A});\n        \\<not> xa < card A\\<^sub>1;\n        \\<not> xa < card A\\<^sub>1 + card A\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set (if x \\<in> A then {x} else {}) \\<bind>\n                         (\\<lambda>y.\n                             pair_pmf (random_bst A\\<^sub>1)\n                              (random_bst A\\<^sub>2)) =\n                         pair_pmf (random_bst A\\<^sub>1)\n                          (random_bst A\\<^sub>2)", "qed auto"], ["proof (state)\nthis:\n  pmf_of_set {..<card A} \\<bind>\n  (\\<lambda>i.\n      if i < card A\\<^sub>1\n      then pmf_of_set A\\<^sub>1 \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n                   (\\<lambda>t1.\n                       random_bst A\\<^sub>2 \\<bind>\n                       (\\<lambda>t2.\n                           return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))))\n      else if i < card A\\<^sub>1 + card A\\<^sub>2\n           then pmf_of_set A\\<^sub>2 \\<bind>\n                (\\<lambda>y.\n                    random_bst A\\<^sub>1 \\<bind>\n                    (\\<lambda>t1.\n                        random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                        (\\<lambda>t2.\n                            random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                            (\\<lambda>r.\n                                return_pmf\n                                 (t1, \\<langle>t2, y, r\\<rangle>)))))\n           else pmf_of_set (if x \\<in> A then {x} else {}) \\<bind>\n                (\\<lambda>y.\n                    pair_pmf (random_bst A\\<^sub>1)\n                     (random_bst A\\<^sub>2))) =\n  pmf_of_set {..<card A} \\<bind>\n  (\\<lambda>i.\n      if i < card A\\<^sub>1\n      then pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n      else if i < card A\\<^sub>1 + card A\\<^sub>2\n           then pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n           else pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "also"], ["proof (state)\nthis:\n  pmf_of_set {..<card A} \\<bind>\n  (\\<lambda>i.\n      if i < card A\\<^sub>1\n      then pmf_of_set A\\<^sub>1 \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A\\<^sub>1. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A\\<^sub>1. y < z} \\<bind>\n                   (\\<lambda>t1.\n                       random_bst A\\<^sub>2 \\<bind>\n                       (\\<lambda>t2.\n                           return_pmf (\\<langle>l, y, t1\\<rangle>, t2)))))\n      else if i < card A\\<^sub>1 + card A\\<^sub>2\n           then pmf_of_set A\\<^sub>2 \\<bind>\n                (\\<lambda>y.\n                    random_bst A\\<^sub>1 \\<bind>\n                    (\\<lambda>t1.\n                        random_bst {z \\<in> A\\<^sub>2. z < y} \\<bind>\n                        (\\<lambda>t2.\n                            random_bst {z \\<in> A\\<^sub>2. y < z} \\<bind>\n                            (\\<lambda>r.\n                                return_pmf\n                                 (t1, \\<langle>t2, y, r\\<rangle>)))))\n           else pmf_of_set (if x \\<in> A then {x} else {}) \\<bind>\n                (\\<lambda>y.\n                    pair_pmf (random_bst A\\<^sub>1)\n                     (random_bst A\\<^sub>2))) =\n  pmf_of_set {..<card A} \\<bind>\n  (\\<lambda>i.\n      if i < card A\\<^sub>1\n      then pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n      else if i < card A\\<^sub>1 + card A\\<^sub>2\n           then pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n           else pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "have \"\\<dots> = pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set {..<card A} \\<bind>\n    (\\<lambda>i.\n        if i < card A\\<^sub>1\n        then pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n        else if i < card A\\<^sub>1 + card A\\<^sub>2\n             then pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n             else pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)) =\n    pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)", "by (simp cong: if_cong)"], ["proof (state)\nthis:\n  pmf_of_set {..<card A} \\<bind>\n  (\\<lambda>i.\n      if i < card A\\<^sub>1\n      then pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n      else if i < card A\\<^sub>1 + card A\\<^sub>2\n           then pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n           else pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)) =\n  pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "finally"], ["proof (chain)\npicking this:\n  map_pmf (split_bst x) (random_bst A) =\n  pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  map_pmf (split_bst x) (random_bst A) =\n  pair_pmf (random_bst A\\<^sub>1) (random_bst A\\<^sub>2)\n\ngoal (1 subgoal):\n 1. map_pmf (split_bst x) (random_bst A) =\n    pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})", "by (simp add: A\\<^sub>1_def A\\<^sub>2_def)"], ["proof (state)\nthis:\n  map_pmf (split_bst x) (random_bst A) =\n  pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  map_pmf (split_bst x) (random_bst A) =\n  pair_pmf (random_bst {y \\<in> A. y < x}) (random_bst {y \\<in> A. x < y})\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Joining\\<close>"], ["", "text \\<open>\n  The ``join'' operation computes the union of two BSTs \\<open>l\\<close> and \\<open>r\\<close> where all the values in\n  \\<open>l\\<close> are stricly smaller than those in \\<open>r\\<close>.\n\\<close>"], ["", "fun mrbst_join :: \"'a tree \\<Rightarrow> 'a tree \\<Rightarrow> 'a tree pmf\" where\n  \"mrbst_join t1 t2 =\n     (if t1 = \\<langle>\\<rangle> then return_pmf t2\n      else if t2 = \\<langle>\\<rangle> then return_pmf t1\n      else do {\n        b \\<leftarrow> bernoulli_pmf (size t1 / (size t1 + size t2));\n        if b then\n          (case t1 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>r'. \\<langle>l, x, r'\\<rangle>) (mrbst_join r t2))\n        else\n          (case t2 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>) (mrbst_join t1 l))\n      })\""], ["", "lemma mrbst_join_Leaf_left [simp]: \"mrbst_join \\<langle>\\<rangle> = return_pmf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_join \\<langle>\\<rangle> = return_pmf", "by (simp add: fun_eq_iff)"], ["", "lemma mrbst_join_Leaf_right [simp]: \"mrbst_join t \\<langle>\\<rangle> = return_pmf t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_join t \\<langle>\\<rangle> = return_pmf t", "by (simp add: fun_eq_iff)"], ["", "lemma mrbst_join_reduce:\n  \"t1 \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow> t2 \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow> mrbst_join t1 t2 =\n     do {\n        b \\<leftarrow> bernoulli_pmf (size t1 / (size t1 + size t2));\n        if b then\n          (case t1 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>r'. \\<langle>l, x, r'\\<rangle>) (mrbst_join r t2))\n        else\n          (case t2 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>) (mrbst_join t1 l))\n      }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<noteq> \\<langle>\\<rangle>;\n     t2 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> mrbst_join t1 t2 =\n                      bernoulli_pmf\n                       (real (size t1) / real (size t1 + size t2)) \\<bind>\n                      (\\<lambda>b.\n                          if b\n                          then case t1 of\n                               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                 map_pmf (Node l x) (mrbst_join r t2)\n                          else case t2 of\n                               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                 map_pmf\n                                  (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                                  (mrbst_join t1 l))", "by (subst mrbst_join.simps) auto"], ["", "lemmas [simp del] = mrbst_join.simps"], ["", "lemma\n  assumes \"t' \\<in> set_pmf (mrbst_join t1 t2)\" \"bst t1\" \"bst t2\"\n  assumes \"\\<And>x y. x \\<in> set_tree t1 \\<Longrightarrow> y \\<in> set_tree t2 \\<Longrightarrow> x < y\"\n  shows   bst_mrbst_join: \"bst t'\"\n    and   set_mrbst_join: \"set_tree t' = set_tree t1 \\<union> set_tree t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t' &&& set_tree t' = set_tree t1 \\<union> set_tree t2", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. bst t'\n 2. set_tree t' = set_tree t1 \\<union> set_tree t2", "have \"bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "using assms"], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf (mrbst_join t1 t2)\n  bst t1\n  bst t2\n  \\<lbrakk>?x \\<in> set_tree t1; ?y \\<in> set_tree t2\\<rbrakk>\n  \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "proof (induction \"size t1 + size t2\" arbitrary: t1 t2 t' rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 t2 t'.\n       \\<lbrakk>\\<And>t1a t2a t'.\n                   \\<lbrakk>size t1a + size t2a < size t1 + size t2;\n                    t' \\<in> set_pmf (mrbst_join t1a t2a); bst t1a; bst t2a;\n                    \\<And>x y.\n                       \\<lbrakk>x \\<in> set_tree t1a;\n                        y \\<in> set_tree t2a\\<rbrakk>\n                       \\<Longrightarrow> x < y\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     set_tree t1a \\<union> set_tree t2a;\n        t' \\<in> set_pmf (mrbst_join t1 t2); bst t1; bst t2;\n        \\<And>x y.\n           \\<lbrakk>x \\<in> set_tree t1; y \\<in> set_tree t2\\<rbrakk>\n           \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' = set_tree t1 \\<union> set_tree t2", "case (less t1 t2 t')"], ["proof (state)\nthis:\n  \\<lbrakk>size ?t1.0 + size ?t2.0 < size t1 + size t2;\n   ?t' \\<in> set_pmf (mrbst_join ?t1.0 ?t2.0); bst ?t1.0; bst ?t2.0;\n   \\<And>x y.\n      \\<lbrakk>x \\<in> set_tree ?t1.0; y \\<in> set_tree ?t2.0\\<rbrakk>\n      \\<Longrightarrow> x < y\\<rbrakk>\n  \\<Longrightarrow> bst ?t' \\<and>\n                    set_tree ?t' = set_tree ?t1.0 \\<union> set_tree ?t2.0\n  t' \\<in> set_pmf (mrbst_join t1 t2)\n  bst t1\n  bst t2\n  \\<lbrakk>?x \\<in> set_tree t1; ?y \\<in> set_tree t2\\<rbrakk>\n  \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2 t'.\n       \\<lbrakk>\\<And>t1a t2a t'.\n                   \\<lbrakk>size t1a + size t2a < size t1 + size t2;\n                    t' \\<in> set_pmf (mrbst_join t1a t2a); bst t1a; bst t2a;\n                    \\<And>x y.\n                       \\<lbrakk>x \\<in> set_tree t1a;\n                        y \\<in> set_tree t2a\\<rbrakk>\n                       \\<Longrightarrow> x < y\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     set_tree t1a \\<union> set_tree t2a;\n        t' \\<in> set_pmf (mrbst_join t1 t2); bst t1; bst t2;\n        \\<And>x y.\n           \\<lbrakk>x \\<in> set_tree t1; y \\<in> set_tree t2\\<rbrakk>\n           \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' = set_tree t1 \\<union> set_tree t2", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "proof (cases \"t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle> \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n 2. \\<not> (t1 = \\<langle>\\<rangle> \\<or>\n            t2 = \\<langle>\\<rangle>) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "case False"], ["proof (state)\nthis:\n  \\<not> (t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle>)\n\ngoal (2 subgoals):\n 1. t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle> \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n 2. \\<not> (t1 = \\<langle>\\<rangle> \\<or>\n            t2 = \\<langle>\\<rangle>) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "hence \"t' \\<in> set_pmf (case t1 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (Node l x) (mrbst_join r t2)) \\<or>\n             t' \\<in> set_pmf (case t2 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>) (mrbst_join t1 l))\""], ["proof (prove)\nusing this:\n  \\<not> (t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle>)\n\ngoal (1 subgoal):\n 1. t' \\<in> set_pmf\n              (case t1 of\n               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                 map_pmf (Node l x) (mrbst_join r t2)) \\<or>\n    t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                  (mrbst_join t1 l))", "using less.prems"], ["proof (prove)\nusing this:\n  \\<not> (t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle>)\n  t' \\<in> set_pmf (mrbst_join t1 t2)\n  bst t1\n  bst t2\n  \\<lbrakk>?x \\<in> set_tree t1; ?y \\<in> set_tree t2\\<rbrakk>\n  \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. t' \\<in> set_pmf\n              (case t1 of\n               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                 map_pmf (Node l x) (mrbst_join r t2)) \\<or>\n    t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                  (mrbst_join t1 l))", "by (subst (asm) mrbst_join_reduce) (auto split: if_splits)"], ["proof (state)\nthis:\n  t' \\<in> set_pmf\n            (case t1 of\n             \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n               map_pmf (Node l x) (mrbst_join r t2)) \\<or>\n  t' \\<in> set_pmf\n            (case t2 of\n             \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n               map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                (mrbst_join t1 l))\n\ngoal (2 subgoals):\n 1. t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle> \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n 2. \\<not> (t1 = \\<langle>\\<rangle> \\<or>\n            t2 = \\<langle>\\<rangle>) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "thus ?thesis"], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf\n            (case t1 of\n             \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n               map_pmf (Node l x) (mrbst_join r t2)) \\<or>\n  t' \\<in> set_pmf\n            (case t2 of\n             \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n               map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                (mrbst_join t1 l))\n\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. t' \\<in> set_pmf\n              (case t1 of\n               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                 map_pmf (Node l x) (mrbst_join r t2)) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n 2. t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                  (mrbst_join t1 l)) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "assume \"t' \\<in> set_pmf (case t1 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (Node l x) (mrbst_join r t2))\""], ["proof (state)\nthis:\n  t' \\<in> set_pmf\n            (case t1 of\n             \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n               map_pmf (Node l x) (mrbst_join r t2))\n\ngoal (2 subgoals):\n 1. t' \\<in> set_pmf\n              (case t1 of\n               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                 map_pmf (Node l x) (mrbst_join r t2)) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n 2. t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                  (mrbst_join t1 l)) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "then"], ["proof (chain)\npicking this:\n  t' \\<in> set_pmf\n            (case t1 of\n             \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n               map_pmf (Node l x) (mrbst_join r t2))", "obtain l x r r'\n          where *: \"t1 = \\<langle>l, x, r\\<rangle>\" \"r' \\<in> set_pmf (mrbst_join r t2)\" \"t' = \\<langle>l, x, r'\\<rangle>\""], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf\n            (case t1 of\n             \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n               map_pmf (Node l x) (mrbst_join r t2))\n\ngoal (1 subgoal):\n 1. (\\<And>l x r r'.\n        \\<lbrakk>t1 = \\<langle>l, x, r\\<rangle>;\n         r' \\<in> set_pmf (mrbst_join r t2);\n         t' = \\<langle>l, x, r'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using False"], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf\n            (case t1 of\n             \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n               map_pmf (Node l x) (mrbst_join r t2))\n  \\<not> (t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle>)\n\ngoal (1 subgoal):\n 1. (\\<And>l x r r'.\n        \\<lbrakk>t1 = \\<langle>l, x, r\\<rangle>;\n         r' \\<in> set_pmf (mrbst_join r t2);\n         t' = \\<langle>l, x, r'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto split: tree.splits)"], ["proof (state)\nthis:\n  t1 = \\<langle>l, x, r\\<rangle>\n  r' \\<in> set_pmf (mrbst_join r t2)\n  t' = \\<langle>l, x, r'\\<rangle>\n\ngoal (2 subgoals):\n 1. t' \\<in> set_pmf\n              (case t1 of\n               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                 map_pmf (Node l x) (mrbst_join r t2)) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n 2. t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                  (mrbst_join t1 l)) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "from * and less.prems"], ["proof (chain)\npicking this:\n  t1 = \\<langle>l, x, r\\<rangle>\n  r' \\<in> set_pmf (mrbst_join r t2)\n  t' = \\<langle>l, x, r'\\<rangle>\n  t' \\<in> set_pmf (mrbst_join t1 t2)\n  bst t1\n  bst t2\n  \\<lbrakk>?x \\<in> set_tree t1; ?y \\<in> set_tree t2\\<rbrakk>\n  \\<Longrightarrow> ?x < ?y", "have \"bst r' \\<and> set_tree r' = set_tree r \\<union> set_tree t2\""], ["proof (prove)\nusing this:\n  t1 = \\<langle>l, x, r\\<rangle>\n  r' \\<in> set_pmf (mrbst_join r t2)\n  t' = \\<langle>l, x, r'\\<rangle>\n  t' \\<in> set_pmf (mrbst_join t1 t2)\n  bst t1\n  bst t2\n  \\<lbrakk>?x \\<in> set_tree t1; ?y \\<in> set_tree t2\\<rbrakk>\n  \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. bst r' \\<and> set_tree r' = set_tree r \\<union> set_tree t2", "by (intro less) auto"], ["proof (state)\nthis:\n  bst r' \\<and> set_tree r' = set_tree r \\<union> set_tree t2\n\ngoal (2 subgoals):\n 1. t' \\<in> set_pmf\n              (case t1 of\n               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                 map_pmf (Node l x) (mrbst_join r t2)) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n 2. t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                  (mrbst_join t1 l)) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "with * and less.prems"], ["proof (chain)\npicking this:\n  t1 = \\<langle>l, x, r\\<rangle>\n  r' \\<in> set_pmf (mrbst_join r t2)\n  t' = \\<langle>l, x, r'\\<rangle>\n  t' \\<in> set_pmf (mrbst_join t1 t2)\n  bst t1\n  bst t2\n  \\<lbrakk>?x \\<in> set_tree t1; ?y \\<in> set_tree t2\\<rbrakk>\n  \\<Longrightarrow> ?x < ?y\n  bst r' \\<and> set_tree r' = set_tree r \\<union> set_tree t2", "show ?thesis"], ["proof (prove)\nusing this:\n  t1 = \\<langle>l, x, r\\<rangle>\n  r' \\<in> set_pmf (mrbst_join r t2)\n  t' = \\<langle>l, x, r'\\<rangle>\n  t' \\<in> set_pmf (mrbst_join t1 t2)\n  bst t1\n  bst t2\n  \\<lbrakk>?x \\<in> set_tree t1; ?y \\<in> set_tree t2\\<rbrakk>\n  \\<Longrightarrow> ?x < ?y\n  bst r' \\<and> set_tree r' = set_tree r \\<union> set_tree t2\n\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "by auto"], ["proof (state)\nthis:\n  bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n\ngoal (1 subgoal):\n 1. t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                  (mrbst_join t1 l)) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                  (mrbst_join t1 l)) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "assume \"t' \\<in> set_pmf (case t2 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>) (mrbst_join t1 l))\""], ["proof (state)\nthis:\n  t' \\<in> set_pmf\n            (case t2 of\n             \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n               map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                (mrbst_join t1 l))\n\ngoal (1 subgoal):\n 1. t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                  (mrbst_join t1 l)) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "then"], ["proof (chain)\npicking this:\n  t' \\<in> set_pmf\n            (case t2 of\n             \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n               map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                (mrbst_join t1 l))", "obtain l x r l'\n          where *: \"t2 = \\<langle>l, x, r\\<rangle>\" \"l' \\<in> set_pmf (mrbst_join t1 l)\" \"t' = \\<langle>l', x, r\\<rangle>\""], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf\n            (case t2 of\n             \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n               map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                (mrbst_join t1 l))\n\ngoal (1 subgoal):\n 1. (\\<And>l x r l'.\n        \\<lbrakk>t2 = \\<langle>l, x, r\\<rangle>;\n         l' \\<in> set_pmf (mrbst_join t1 l);\n         t' = \\<langle>l', x, r\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using False"], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf\n            (case t2 of\n             \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n               map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                (mrbst_join t1 l))\n  \\<not> (t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle>)\n\ngoal (1 subgoal):\n 1. (\\<And>l x r l'.\n        \\<lbrakk>t2 = \\<langle>l, x, r\\<rangle>;\n         l' \\<in> set_pmf (mrbst_join t1 l);\n         t' = \\<langle>l', x, r\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto split: tree.splits)"], ["proof (state)\nthis:\n  t2 = \\<langle>l, x, r\\<rangle>\n  l' \\<in> set_pmf (mrbst_join t1 l)\n  t' = \\<langle>l', x, r\\<rangle>\n\ngoal (1 subgoal):\n 1. t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                  (mrbst_join t1 l)) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "from * and less.prems"], ["proof (chain)\npicking this:\n  t2 = \\<langle>l, x, r\\<rangle>\n  l' \\<in> set_pmf (mrbst_join t1 l)\n  t' = \\<langle>l', x, r\\<rangle>\n  t' \\<in> set_pmf (mrbst_join t1 t2)\n  bst t1\n  bst t2\n  \\<lbrakk>?x \\<in> set_tree t1; ?y \\<in> set_tree t2\\<rbrakk>\n  \\<Longrightarrow> ?x < ?y", "have \"bst l' \\<and> set_tree l' = set_tree t1 \\<union> set_tree l\""], ["proof (prove)\nusing this:\n  t2 = \\<langle>l, x, r\\<rangle>\n  l' \\<in> set_pmf (mrbst_join t1 l)\n  t' = \\<langle>l', x, r\\<rangle>\n  t' \\<in> set_pmf (mrbst_join t1 t2)\n  bst t1\n  bst t2\n  \\<lbrakk>?x \\<in> set_tree t1; ?y \\<in> set_tree t2\\<rbrakk>\n  \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. bst l' \\<and> set_tree l' = set_tree t1 \\<union> set_tree l", "by (intro less) auto"], ["proof (state)\nthis:\n  bst l' \\<and> set_tree l' = set_tree t1 \\<union> set_tree l\n\ngoal (1 subgoal):\n 1. t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                  (mrbst_join t1 l)) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "with * and less.prems"], ["proof (chain)\npicking this:\n  t2 = \\<langle>l, x, r\\<rangle>\n  l' \\<in> set_pmf (mrbst_join t1 l)\n  t' = \\<langle>l', x, r\\<rangle>\n  t' \\<in> set_pmf (mrbst_join t1 t2)\n  bst t1\n  bst t2\n  \\<lbrakk>?x \\<in> set_tree t1; ?y \\<in> set_tree t2\\<rbrakk>\n  \\<Longrightarrow> ?x < ?y\n  bst l' \\<and> set_tree l' = set_tree t1 \\<union> set_tree l", "show ?thesis"], ["proof (prove)\nusing this:\n  t2 = \\<langle>l, x, r\\<rangle>\n  l' \\<in> set_pmf (mrbst_join t1 l)\n  t' = \\<langle>l', x, r\\<rangle>\n  t' \\<in> set_pmf (mrbst_join t1 t2)\n  bst t1\n  bst t2\n  \\<lbrakk>?x \\<in> set_tree t1; ?y \\<in> set_tree t2\\<rbrakk>\n  \\<Longrightarrow> ?x < ?y\n  bst l' \\<and> set_tree l' = set_tree t1 \\<union> set_tree l\n\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "by auto"], ["proof (state)\nthis:\n  bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n\ngoal (1 subgoal):\n 1. t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle> \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "qed (insert less.prems, auto)"], ["proof (state)\nthis:\n  bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n\ngoal (2 subgoals):\n 1. bst t'\n 2. set_tree t' = set_tree t1 \\<union> set_tree t2", "thus \"bst t'\" \"set_tree t' = set_tree t1 \\<union> set_tree t2\""], ["proof (prove)\nusing this:\n  bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n\ngoal (1 subgoal):\n 1. bst t' &&& set_tree t' = set_tree t1 \\<union> set_tree t2", "by auto"], ["proof (state)\nthis:\n  bst t'\n  set_tree t' = set_tree t1 \\<union> set_tree t2\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Joining two random BSTs that satisfy the necessary preconditions again yields a random BST.\n\\<close>"], ["", "theorem mrbst_join_correct:\n  fixes A B :: \"'a :: linorder set\"\n  assumes \"finite A\" \"finite B\" \"\\<And>x y. x \\<in> A \\<Longrightarrow> y \\<in> B \\<Longrightarrow> x < y\"\n  shows   \"do {t1 \\<leftarrow> random_bst A; t2 \\<leftarrow> random_bst B; mrbst_join t1 t2} = random_bst (A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "from assms"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  \\<lbrakk>?x \\<in> A; ?y \\<in> B\\<rbrakk> \\<Longrightarrow> ?x < ?y", "have \"finite (A \\<union> B)\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  \\<lbrakk>?x \\<in> A; ?y \\<in> B\\<rbrakk> \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. finite (A \\<union> B)", "by simp"], ["proof (state)\nthis:\n  finite (A \\<union> B)\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "from this and assms"], ["proof (chain)\npicking this:\n  finite (A \\<union> B)\n  finite A\n  finite B\n  \\<lbrakk>?x \\<in> A; ?y \\<in> B\\<rbrakk> \\<Longrightarrow> ?x < ?y", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (A \\<union> B)\n  finite A\n  finite B\n  \\<lbrakk>?x \\<in> A; ?y \\<in> B\\<rbrakk> \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "proof (induction \"A \\<union> B\" arbitrary: A B rule: finite_psubset_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba;\n            \\<And>x y.\n               \\<lbrakk>x \\<in> Aa; y \\<in> Ba\\<rbrakk>\n               \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>t1.\n                                 random_bst Ba \\<bind> mrbst_join t1) =\n                             random_bst (Aa \\<union> Ba);\n        finite A; finite B;\n        \\<And>x y.\n           \\<lbrakk>x \\<in> A; y \\<in> B\\<rbrakk>\n           \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n                         random_bst (A \\<union> B)", "case (psubset A B)"], ["proof (state)\nthis:\n  finite (A \\<union> B)\n  \\<lbrakk>?A \\<union> ?B \\<subset> A \\<union> B; finite ?A; finite ?B;\n   \\<And>x y.\n      \\<lbrakk>x \\<in> ?A; y \\<in> ?B\\<rbrakk>\n      \\<Longrightarrow> x < y\\<rbrakk>\n  \\<Longrightarrow> random_bst ?A \\<bind>\n                    (\\<lambda>t1. random_bst ?B \\<bind> mrbst_join t1) =\n                    random_bst (?A \\<union> ?B)\n  finite A\n  finite B\n  \\<lbrakk>?x \\<in> A; ?y \\<in> B\\<rbrakk> \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba;\n            \\<And>x y.\n               \\<lbrakk>x \\<in> Aa; y \\<in> Ba\\<rbrakk>\n               \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>t1.\n                                 random_bst Ba \\<bind> mrbst_join t1) =\n                             random_bst (Aa \\<union> Ba);\n        finite A; finite B;\n        \\<And>x y.\n           \\<lbrakk>x \\<in> A; y \\<in> B\\<rbrakk>\n           \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n                         random_bst (A \\<union> B)", "define m n where \"m = card A\" and \"n = card B\""], ["proof (state)\nthis:\n  m = card A\n  n = card B\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba;\n            \\<And>x y.\n               \\<lbrakk>x \\<in> Aa; y \\<in> Ba\\<rbrakk>\n               \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>t1.\n                                 random_bst Ba \\<bind> mrbst_join t1) =\n                             random_bst (Aa \\<union> Ba);\n        finite A; finite B;\n        \\<And>x y.\n           \\<lbrakk>x \\<in> A; y \\<in> B\\<rbrakk>\n           \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n                         random_bst (A \\<union> B)", "define p where \"p = m / (m + n)\""], ["proof (state)\nthis:\n  p = real m / real (m + n)\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba;\n            \\<And>x y.\n               \\<lbrakk>x \\<in> Aa; y \\<in> Ba\\<rbrakk>\n               \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>t1.\n                                 random_bst Ba \\<bind> mrbst_join t1) =\n                             random_bst (Aa \\<union> Ba);\n        finite A; finite B;\n        \\<And>x y.\n           \\<lbrakk>x \\<in> A; y \\<in> B\\<rbrakk>\n           \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n                         random_bst (A \\<union> B)", "include monad_normalisation"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba;\n            \\<And>x y.\n               \\<lbrakk>x \\<in> Aa; y \\<in> Ba\\<rbrakk>\n               \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>t1.\n                                 random_bst Ba \\<bind> mrbst_join t1) =\n                             random_bst (Aa \\<union> Ba);\n        finite A; finite B;\n        \\<And>x y.\n           \\<lbrakk>x \\<in> A; y \\<in> B\\<rbrakk>\n           \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n                         random_bst (A \\<union> B)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "proof (cases \"A = {} \\<or> B = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A = {} \\<or> B = {} \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)\n 2. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "case True"], ["proof (state)\nthis:\n  A = {} \\<or> B = {}\n\ngoal (2 subgoals):\n 1. A = {} \\<or> B = {} \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)\n 2. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "thus ?thesis"], ["proof (prove)\nusing this:\n  A = {} \\<or> B = {}\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "by auto"], ["proof (state)\nthis:\n  random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n  random_bst (A \\<union> B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "case False"], ["proof (state)\nthis:\n  \\<not> (A = {} \\<or> B = {})\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "have AB: \"A \\<noteq> {}\" \"B \\<noteq> {}\" \"finite A\" \"finite B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A \\<noteq> {} &&& B \\<noteq> {}) &&& finite A &&& finite B", "using False psubset.prems"], ["proof (prove)\nusing this:\n  \\<not> (A = {} \\<or> B = {})\n  finite A\n  finite B\n  \\<lbrakk>?x \\<in> A; ?y \\<in> B\\<rbrakk> \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. (A \\<noteq> {} &&& B \\<noteq> {}) &&& finite A &&& finite B", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "have p_pos: \"A \\<noteq> {}\" if \"p > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "using \\<open>finite A\\<close> that"], ["proof (prove)\nusing this:\n  finite A\n  0 < p\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "using AB"], ["proof (prove)\nusing this:\n  finite A\n  0 < p\n  A \\<noteq> {}\n  B \\<noteq> {}\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by (auto simp: p_def m_def n_def)"], ["proof (state)\nthis:\n  0 < p \\<Longrightarrow> A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "have p_lt1: \"B \\<noteq> {}\" if \"p < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<noteq> {}", "using AB"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. B \\<noteq> {}", "by (auto simp: p_def m_def n_def)"], ["proof (state)\nthis:\n  p < 1 \\<Longrightarrow> B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "have \"do {t1 \\<leftarrow> random_bst A; t2 \\<leftarrow> random_bst B; mrbst_join t1 t2} =\n            do {t1 \\<leftarrow> random_bst A;\n                t2 \\<leftarrow> random_bst B;\n                b \\<leftarrow> bernoulli_pmf (size t1 / (size t1 + size t2));\n                if b then\n                  case t1 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>r'. \\<langle>l, x, r'\\<rangle>) (mrbst_join r t2)\n                else\n                  case t2 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>) (mrbst_join t1 l)\n               }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst A \\<bind>\n    (\\<lambda>t1.\n        random_bst B \\<bind>\n        (\\<lambda>t2.\n            bernoulli_pmf\n             (real (size t1) / real (size t1 + size t2)) \\<bind>\n            (\\<lambda>b.\n                if b\n                then case t1 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (Node l x) (mrbst_join r t2)\n                else case t2 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                        (mrbst_join t1 l))))", "using AB"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst A \\<bind>\n    (\\<lambda>t1.\n        random_bst B \\<bind>\n        (\\<lambda>t2.\n            bernoulli_pmf\n             (real (size t1) / real (size t1 + size t2)) \\<bind>\n            (\\<lambda>b.\n                if b\n                then case t1 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (Node l x) (mrbst_join r t2)\n                else case t2 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                        (mrbst_join t1 l))))", "by (intro bind_pmf_cong refl, subst mrbst_join_reduce) auto"], ["proof (state)\nthis:\n  random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          bernoulli_pmf (real (size t1) / real (size t1 + size t2)) \\<bind>\n          (\\<lambda>b.\n              if b\n              then case t1 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (Node l x) (mrbst_join r t2)\n              else case t2 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                      (mrbst_join t1 l))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          bernoulli_pmf (real (size t1) / real (size t1 + size t2)) \\<bind>\n          (\\<lambda>b.\n              if b\n              then case t1 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (Node l x) (mrbst_join r t2)\n              else case t2 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                      (mrbst_join t1 l))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "have \"\\<dots> = do {t1 \\<leftarrow> random_bst A;\n                          t2 \\<leftarrow> random_bst B;\n                          b \\<leftarrow> bernoulli_pmf p;\n                          if b then\n                            case t1 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>r'. \\<langle>l, x, r'\\<rangle>) (mrbst_join r t2)\n                          else\n                            case t2 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>) (mrbst_join t1 l)\n                         }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1.\n        random_bst B \\<bind>\n        (\\<lambda>t2.\n            bernoulli_pmf\n             (real (size t1) / real (size t1 + size t2)) \\<bind>\n            (\\<lambda>b.\n                if b\n                then case t1 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (Node l x) (mrbst_join r t2)\n                else case t2 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                        (mrbst_join t1 l)))) =\n    random_bst A \\<bind>\n    (\\<lambda>t1.\n        random_bst B \\<bind>\n        (\\<lambda>t2.\n            bernoulli_pmf p \\<bind>\n            (\\<lambda>b.\n                if b\n                then case t1 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (Node l x) (mrbst_join r t2)\n                else case t2 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                        (mrbst_join t1 l))))", "using AB"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1.\n        random_bst B \\<bind>\n        (\\<lambda>t2.\n            bernoulli_pmf\n             (real (size t1) / real (size t1 + size t2)) \\<bind>\n            (\\<lambda>b.\n                if b\n                then case t1 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (Node l x) (mrbst_join r t2)\n                else case t2 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                        (mrbst_join t1 l)))) =\n    random_bst A \\<bind>\n    (\\<lambda>t1.\n        random_bst B \\<bind>\n        (\\<lambda>t2.\n            bernoulli_pmf p \\<bind>\n            (\\<lambda>b.\n                if b\n                then case t1 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (Node l x) (mrbst_join r t2)\n                else case t2 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                        (mrbst_join t1 l))))", "by (intro bind_pmf_cong refl arg_cong[of _ _ bernoulli_pmf])\n                    (auto simp: p_def m_def n_def size_random_bst)"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          bernoulli_pmf (real (size t1) / real (size t1 + size t2)) \\<bind>\n          (\\<lambda>b.\n              if b\n              then case t1 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (Node l x) (mrbst_join r t2)\n              else case t2 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                      (mrbst_join t1 l)))) =\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          bernoulli_pmf p \\<bind>\n          (\\<lambda>b.\n              if b\n              then case t1 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (Node l x) (mrbst_join r t2)\n              else case t2 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                      (mrbst_join t1 l))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          bernoulli_pmf (real (size t1) / real (size t1 + size t2)) \\<bind>\n          (\\<lambda>b.\n              if b\n              then case t1 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (Node l x) (mrbst_join r t2)\n              else case t2 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                      (mrbst_join t1 l)))) =\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          bernoulli_pmf p \\<bind>\n          (\\<lambda>b.\n              if b\n              then case t1 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (Node l x) (mrbst_join r t2)\n              else case t2 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                      (mrbst_join t1 l))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "have \"\\<dots> = do {\n                        b \\<leftarrow> bernoulli_pmf p;\n                        if b then do {\n                          t1 \\<leftarrow> random_bst A;\n                          t2 \\<leftarrow> random_bst B;\n                          case t1 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>r'. \\<langle>l, x, r'\\<rangle>) (mrbst_join r t2)\n                        } else do {\n                          t1 \\<leftarrow> random_bst A;\n                          t2 \\<leftarrow> random_bst B;\n                          case t2 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>) (mrbst_join t1 l)\n                        }\n                      }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1.\n        random_bst B \\<bind>\n        (\\<lambda>t2.\n            bernoulli_pmf p \\<bind>\n            (\\<lambda>b.\n                if b\n                then case t1 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (Node l x) (mrbst_join r t2)\n                else case t2 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                        (mrbst_join t1 l)))) =\n    bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then random_bst A \\<bind>\n             (\\<lambda>t1.\n                 random_bst B \\<bind>\n                 (\\<lambda>t2.\n                     case t1 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (Node l x) (mrbst_join r t2)))\n        else random_bst A \\<bind>\n             (\\<lambda>t1.\n                 random_bst B \\<bind>\n                 (\\<lambda>t2.\n                     case t2 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                        (mrbst_join t1 l))))", "by simp"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          bernoulli_pmf p \\<bind>\n          (\\<lambda>b.\n              if b\n              then case t1 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (Node l x) (mrbst_join r t2)\n              else case t2 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                      (mrbst_join t1 l)))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then random_bst A \\<bind>\n           (\\<lambda>t1.\n               random_bst B \\<bind>\n               (\\<lambda>t2.\n                   case t1 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (Node l x) (mrbst_join r t2)))\n      else random_bst A \\<bind>\n           (\\<lambda>t1.\n               random_bst B \\<bind>\n               (\\<lambda>t2.\n                   case t2 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                      (mrbst_join t1 l))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          bernoulli_pmf p \\<bind>\n          (\\<lambda>b.\n              if b\n              then case t1 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (Node l x) (mrbst_join r t2)\n              else case t2 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                      (mrbst_join t1 l)))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then random_bst A \\<bind>\n           (\\<lambda>t1.\n               random_bst B \\<bind>\n               (\\<lambda>t2.\n                   case t1 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (Node l x) (mrbst_join r t2)))\n      else random_bst A \\<bind>\n           (\\<lambda>t1.\n               random_bst B \\<bind>\n               (\\<lambda>t2.\n                   case t2 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                      (mrbst_join t1 l))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "have \"\\<dots> = do {\n                        b \\<leftarrow> bernoulli_pmf p;\n                        if b then do {\n                          x \\<leftarrow> pmf_of_set A;\n                          l \\<leftarrow> random_bst {y\\<in>A \\<union> B. y < x};\n                          r \\<leftarrow> random_bst {y\\<in>A \\<union> B. y > x};\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        } else do {\n                          x \\<leftarrow> pmf_of_set B;\n                          l \\<leftarrow> random_bst {y\\<in>A \\<union> B. y < x};\n                          r \\<leftarrow> random_bst {y\\<in>A \\<union> B. y > x};\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        }\n                      }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then random_bst A \\<bind>\n             (\\<lambda>t1.\n                 random_bst B \\<bind>\n                 (\\<lambda>t2.\n                     case t1 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (Node l x) (mrbst_join r t2)))\n        else random_bst A \\<bind>\n             (\\<lambda>t1.\n                 random_bst B \\<bind>\n                 (\\<lambda>t2.\n                     case t2 of\n                     \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                       map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                        (mrbst_join t1 l)))) =\n    bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>x.\n                 random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))))", "proof (intro bind_pmf_cong refl if_cong, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t1 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf (Node l x) (mrbst_join r t2))) =\n                         pmf_of_set A \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t2 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', x, r\\<rangle>)\n                                    (mrbst_join t1 l))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))", "case (1 b)"], ["proof (state)\nthis:\n  b \\<in> set_pmf (bernoulli_pmf p)\n  b\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t1 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf (Node l x) (mrbst_join r t2))) =\n                         pmf_of_set A \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t2 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', x, r\\<rangle>)\n                                    (mrbst_join t1 l))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))", "hence [simp]: \"A \\<noteq> {}\""], ["proof (prove)\nusing this:\n  b \\<in> set_pmf (bernoulli_pmf p)\n  b\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "using p_pos"], ["proof (prove)\nusing this:\n  b \\<in> set_pmf (bernoulli_pmf p)\n  b\n  0 < p \\<Longrightarrow> A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t1 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf (Node l x) (mrbst_join r t2))) =\n                         pmf_of_set A \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t2 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', x, r\\<rangle>)\n                                    (mrbst_join t1 l))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))", "have \"do {t1 \\<leftarrow> random_bst A; t2 \\<leftarrow> random_bst B;\n                  case t1 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>r'. \\<langle>l, x, r'\\<rangle>) (mrbst_join r t2)} =\n              do {\n                x \\<leftarrow> pmf_of_set A;\n                l \\<leftarrow> random_bst {y\\<in>A. y < x};\n                r \\<leftarrow> do {r \\<leftarrow> random_bst {y\\<in>A. y > x}; t2 \\<leftarrow> random_bst B; mrbst_join r t2};\n                return_pmf \\<langle>l, x, r\\<rangle>\n              }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1.\n        random_bst B \\<bind>\n        (\\<lambda>t2.\n            case t1 of\n            \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n              map_pmf (Node l x) (mrbst_join r t2))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r. random_bst B \\<bind> mrbst_join r) \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "using AB"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1.\n        random_bst B \\<bind>\n        (\\<lambda>t2.\n            case t1 of\n            \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n              map_pmf (Node l x) (mrbst_join r t2))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r. random_bst B \\<bind> mrbst_join r) \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "by (subst random_bst_reduce) (auto simp: map_pmf_def)"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          case t1 of\n          \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n            map_pmf (Node l x) (mrbst_join r t2))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r. random_bst B \\<bind> mrbst_join r) \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t1 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf (Node l x) (mrbst_join r t2))) =\n                         pmf_of_set A \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t2 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', x, r\\<rangle>)\n                                    (mrbst_join t1 l))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))", "also"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          case t1 of\n          \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n            map_pmf (Node l x) (mrbst_join r t2))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r. random_bst B \\<bind> mrbst_join r) \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t1 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf (Node l x) (mrbst_join r t2))) =\n                         pmf_of_set A \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t2 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', x, r\\<rangle>)\n                                    (mrbst_join t1 l))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))", "have \"\\<dots> = do {\n                          x \\<leftarrow> pmf_of_set A;\n                          l \\<leftarrow> random_bst {y\\<in>A. y < x};\n                          r \\<leftarrow> random_bst ({y\\<in>A. y > x} \\<union> B);\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r. random_bst B \\<bind> mrbst_join r) \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l.\n            random_bst ({y \\<in> A. x < y} \\<union> B) \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "using AB psubset.prems"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  finite A\n  finite B\n  finite A\n  finite B\n  \\<lbrakk>?x \\<in> A; ?y \\<in> B\\<rbrakk> \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r. random_bst B \\<bind> mrbst_join r) \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l.\n            random_bst ({y \\<in> A. x < y} \\<union> B) \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "by (intro bind_pmf_cong refl psubset arg_cong[of _ _ random_bst]) auto"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r. random_bst B \\<bind> mrbst_join r) \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst ({y \\<in> A. x < y} \\<union> B) \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t1 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf (Node l x) (mrbst_join r t2))) =\n                         pmf_of_set A \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t2 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', x, r\\<rangle>)\n                                    (mrbst_join t1 l))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))", "also"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r. random_bst B \\<bind> mrbst_join r) \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst ({y \\<in> A. x < y} \\<union> B) \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t1 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf (Node l x) (mrbst_join r t2))) =\n                         pmf_of_set A \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t2 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', x, r\\<rangle>)\n                                    (mrbst_join t1 l))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))", "have \"\\<dots> = do {\n                          x \\<leftarrow> pmf_of_set A;\n                          l \\<leftarrow> random_bst {y\\<in>A \\<union> B. y < x};\n                          r \\<leftarrow> random_bst {y\\<in>A \\<union> B. y > x};\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l.\n            random_bst ({y \\<in> A. x < y} \\<union> B) \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "using AB psubset.prems"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  finite A\n  finite B\n  finite A\n  finite B\n  \\<lbrakk>?x \\<in> A; ?y \\<in> B\\<rbrakk> \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l.\n            random_bst ({y \\<in> A. x < y} \\<union> B) \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "by (intro bind_pmf_cong refl arg_cong[of _ _ random_bst]; force)"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst ({y \\<in> A. x < y} \\<union> B) \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t1 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf (Node l x) (mrbst_join r t2))) =\n                         pmf_of_set A \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t2 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', x, r\\<rangle>)\n                                    (mrbst_join t1 l))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))", "finally"], ["proof (chain)\npicking this:\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          case t1 of\n          \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n            map_pmf (Node l x) (mrbst_join r t2))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "show ?case"], ["proof (prove)\nusing this:\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          case t1 of\n          \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n            map_pmf (Node l x) (mrbst_join r t2))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1.\n        random_bst B \\<bind>\n        (\\<lambda>t2.\n            case t1 of\n            \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n              map_pmf (Node l x) (mrbst_join r t2))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "."], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          case t1 of\n          \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n            map_pmf (Node l x) (mrbst_join r t2))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t2 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', x, r\\<rangle>)\n                                    (mrbst_join t1 l))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t2 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', x, r\\<rangle>)\n                                    (mrbst_join t1 l))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))", "case (2 b)"], ["proof (state)\nthis:\n  b \\<in> set_pmf (bernoulli_pmf p)\n  \\<not> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t2 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', x, r\\<rangle>)\n                                    (mrbst_join t1 l))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))", "hence [simp]: \"B \\<noteq> {}\""], ["proof (prove)\nusing this:\n  b \\<in> set_pmf (bernoulli_pmf p)\n  \\<not> b\n\ngoal (1 subgoal):\n 1. B \\<noteq> {}", "using p_lt1"], ["proof (prove)\nusing this:\n  b \\<in> set_pmf (bernoulli_pmf p)\n  \\<not> b\n  p < 1 \\<Longrightarrow> B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. B \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t2 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', x, r\\<rangle>)\n                                    (mrbst_join t1 l))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))", "have \"do {t1 \\<leftarrow> random_bst A; t2 \\<leftarrow> random_bst B;\n                  case t2 of \\<langle>l, x, r\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>) (mrbst_join t1 l)} =\n              do {\n                x \\<leftarrow> pmf_of_set B;\n                l \\<leftarrow> do {t1 \\<leftarrow> random_bst A; l \\<leftarrow> random_bst {y\\<in>B. y < x}; mrbst_join t1 l};\n                r \\<leftarrow> random_bst {y\\<in>B. y > x};\n                return_pmf \\<langle>l, x, r\\<rangle>\n              }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1.\n        random_bst B \\<bind>\n        (\\<lambda>t2.\n            case t2 of\n            \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n              map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n               (mrbst_join t1 l))) =\n    pmf_of_set B \\<bind>\n    (\\<lambda>x.\n        random_bst A \\<bind>\n        (\\<lambda>t1.\n            random_bst {y \\<in> B. y < x} \\<bind> mrbst_join t1) \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> B. x < y} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "using AB"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1.\n        random_bst B \\<bind>\n        (\\<lambda>t2.\n            case t2 of\n            \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n              map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n               (mrbst_join t1 l))) =\n    pmf_of_set B \\<bind>\n    (\\<lambda>x.\n        random_bst A \\<bind>\n        (\\<lambda>t1.\n            random_bst {y \\<in> B. y < x} \\<bind> mrbst_join t1) \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> B. x < y} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "by (subst random_bst_reduce) (auto simp: map_pmf_def)"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          case t2 of\n          \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n            map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n             (mrbst_join t1 l))) =\n  pmf_of_set B \\<bind>\n  (\\<lambda>x.\n      random_bst A \\<bind>\n      (\\<lambda>t1.\n          random_bst {y \\<in> B. y < x} \\<bind> mrbst_join t1) \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t2 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', x, r\\<rangle>)\n                                    (mrbst_join t1 l))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))", "also"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          case t2 of\n          \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n            map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n             (mrbst_join t1 l))) =\n  pmf_of_set B \\<bind>\n  (\\<lambda>x.\n      random_bst A \\<bind>\n      (\\<lambda>t1.\n          random_bst {y \\<in> B. y < x} \\<bind> mrbst_join t1) \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t2 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', x, r\\<rangle>)\n                                    (mrbst_join t1 l))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))", "have \"\\<dots> = do {\n                          x \\<leftarrow> pmf_of_set B;\n                          l \\<leftarrow> random_bst (A \\<union> {y\\<in>B. y < x});\n                          r \\<leftarrow> random_bst {y\\<in>B. y > x};\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set B \\<bind>\n    (\\<lambda>x.\n        random_bst A \\<bind>\n        (\\<lambda>t1.\n            random_bst {y \\<in> B. y < x} \\<bind> mrbst_join t1) \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> B. x < y} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n    pmf_of_set B \\<bind>\n    (\\<lambda>x.\n        random_bst (A \\<union> {y \\<in> B. y < x}) \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> B. x < y} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "using AB psubset.prems"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  finite A\n  finite B\n  finite A\n  finite B\n  \\<lbrakk>?x \\<in> A; ?y \\<in> B\\<rbrakk> \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. pmf_of_set B \\<bind>\n    (\\<lambda>x.\n        random_bst A \\<bind>\n        (\\<lambda>t1.\n            random_bst {y \\<in> B. y < x} \\<bind> mrbst_join t1) \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> B. x < y} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n    pmf_of_set B \\<bind>\n    (\\<lambda>x.\n        random_bst (A \\<union> {y \\<in> B. y < x}) \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> B. x < y} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "by (intro bind_pmf_cong refl psubset arg_cong[of _ _ random_bst]) auto"], ["proof (state)\nthis:\n  pmf_of_set B \\<bind>\n  (\\<lambda>x.\n      random_bst A \\<bind>\n      (\\<lambda>t1.\n          random_bst {y \\<in> B. y < x} \\<bind> mrbst_join t1) \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n  pmf_of_set B \\<bind>\n  (\\<lambda>x.\n      random_bst (A \\<union> {y \\<in> B. y < x}) \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t2 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', x, r\\<rangle>)\n                                    (mrbst_join t1 l))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))", "also"], ["proof (state)\nthis:\n  pmf_of_set B \\<bind>\n  (\\<lambda>x.\n      random_bst A \\<bind>\n      (\\<lambda>t1.\n          random_bst {y \\<in> B. y < x} \\<bind> mrbst_join t1) \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n  pmf_of_set B \\<bind>\n  (\\<lambda>x.\n      random_bst (A \\<union> {y \\<in> B. y < x}) \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t2 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', x, r\\<rangle>)\n                                    (mrbst_join t1 l))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))", "have \"\\<dots> = do {\n                          x \\<leftarrow> pmf_of_set B;\n                          l \\<leftarrow> random_bst {y\\<in>A \\<union> B. y < x};\n                          r \\<leftarrow> random_bst {y\\<in>A \\<union> B. y > x};\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set B \\<bind>\n    (\\<lambda>x.\n        random_bst (A \\<union> {y \\<in> B. y < x}) \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> B. x < y} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n    pmf_of_set B \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "using AB psubset.prems"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  finite A\n  finite B\n  finite A\n  finite B\n  \\<lbrakk>?x \\<in> A; ?y \\<in> B\\<rbrakk> \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. pmf_of_set B \\<bind>\n    (\\<lambda>x.\n        random_bst (A \\<union> {y \\<in> B. y < x}) \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> B. x < y} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n    pmf_of_set B \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "by (intro bind_pmf_cong refl arg_cong[of _ _ random_bst]; force)"], ["proof (state)\nthis:\n  pmf_of_set B \\<bind>\n  (\\<lambda>x.\n      random_bst (A \\<union> {y \\<in> B. y < x}) \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n  pmf_of_set B \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind>\n                             (\\<lambda>t2.\n                                 case t2 of\n                                 \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', x, r\\<rangle>)\n                                    (mrbst_join t1 l))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>x.\n                             random_bst\n                              {y \\<in> A \\<union> B. y < x} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {y \\<in> A \\<union> B. x < y} \\<bind>\n                                 (\\<lambda>r.\n                                     return_pmf \\<langle>l, x, r\\<rangle>)))", "finally"], ["proof (chain)\npicking this:\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          case t2 of\n          \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n            map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n             (mrbst_join t1 l))) =\n  pmf_of_set B \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "show ?case"], ["proof (prove)\nusing this:\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          case t2 of\n          \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n            map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n             (mrbst_join t1 l))) =\n  pmf_of_set B \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1.\n        random_bst B \\<bind>\n        (\\<lambda>t2.\n            case t2 of\n            \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n              map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n               (mrbst_join t1 l))) =\n    pmf_of_set B \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "."], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>t1.\n      random_bst B \\<bind>\n      (\\<lambda>t2.\n          case t2 of\n          \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n            map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n             (mrbst_join t1 l))) =\n  pmf_of_set B \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then random_bst A \\<bind>\n           (\\<lambda>t1.\n               random_bst B \\<bind>\n               (\\<lambda>t2.\n                   case t1 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (Node l x) (mrbst_join r t2)))\n      else random_bst A \\<bind>\n           (\\<lambda>t1.\n               random_bst B \\<bind>\n               (\\<lambda>t2.\n                   case t2 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                      (mrbst_join t1 l)))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>x.\n               random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then random_bst A \\<bind>\n           (\\<lambda>t1.\n               random_bst B \\<bind>\n               (\\<lambda>t2.\n                   case t1 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (Node l x) (mrbst_join r t2)))\n      else random_bst A \\<bind>\n           (\\<lambda>t1.\n               random_bst B \\<bind>\n               (\\<lambda>t2.\n                   case t2 of\n                   \\<langle>l, x, r\\<rangle> \\<Rightarrow>\n                     map_pmf (\\<lambda>l'. \\<langle>l', x, r\\<rangle>)\n                      (mrbst_join t1 l)))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>x.\n               random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "have \"\\<dots> = do {\n                        b \\<leftarrow> bernoulli_pmf p;\n                        x \\<leftarrow> (if b then pmf_of_set A else pmf_of_set B);\n                        l \\<leftarrow> random_bst {y\\<in>A \\<union> B. y < x};\n                        r \\<leftarrow> random_bst {y\\<in>A \\<union> B. y > x};\n                        return_pmf \\<langle>l, x, r\\<rangle>\n                      }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>x.\n                 random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))) =\n    bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        (if b then pmf_of_set A else pmf_of_set B) \\<bind>\n        (\\<lambda>x.\n            random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n            (\\<lambda>l.\n                random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n                (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))))", "by (intro bind_pmf_cong) simp_all"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>x.\n               random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      (if b then pmf_of_set A else pmf_of_set B) \\<bind>\n      (\\<lambda>x.\n          random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n          (\\<lambda>l.\n              random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n              (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>x.\n               random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      (if b then pmf_of_set A else pmf_of_set B) \\<bind>\n      (\\<lambda>x.\n          random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n          (\\<lambda>l.\n              random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n              (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "have \"\\<dots> = do {\n                        x \\<leftarrow> do {b \\<leftarrow> bernoulli_pmf p; if b then pmf_of_set A else pmf_of_set B};\n                        l \\<leftarrow> random_bst {y\\<in>A \\<union> B. y < x};\n                        r \\<leftarrow> random_bst {y\\<in>A \\<union> B. y > x};\n                        return_pmf \\<langle>l, x, r\\<rangle>\n                      }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        (if b then pmf_of_set A else pmf_of_set B) \\<bind>\n        (\\<lambda>x.\n            random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n            (\\<lambda>l.\n                random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n                (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))) =\n    bernoulli_pmf p \\<bind>\n    (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B) \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "by simp"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      (if b then pmf_of_set A else pmf_of_set B) \\<bind>\n      (\\<lambda>x.\n          random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n          (\\<lambda>l.\n              random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n              (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B) \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      (if b then pmf_of_set A else pmf_of_set B) \\<bind>\n      (\\<lambda>x.\n          random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n          (\\<lambda>l.\n              random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n              (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B) \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "have \"do {b \\<leftarrow> bernoulli_pmf p; if b then pmf_of_set A else pmf_of_set B} =\n                   pmf_of_set (A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B) =\n    pmf_of_set (A \\<union> B)", "using AB psubset.prems"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  finite A\n  finite B\n  finite A\n  finite B\n  \\<lbrakk>?x \\<in> A; ?y \\<in> B\\<rbrakk> \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B) =\n    pmf_of_set (A \\<union> B)", "by (intro pmf_of_set_union_split) (auto simp: p_def m_def n_def)"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B) =\n  pmf_of_set (A \\<union> B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b. if b then pmf_of_set A else pmf_of_set B) =\n  pmf_of_set (A \\<union> B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "have \"do {\n                   x \\<leftarrow> pmf_of_set (A \\<union> B);\n                   l \\<leftarrow> random_bst {y\\<in>A \\<union> B. y < x};\n                   r \\<leftarrow> random_bst {y\\<in>A \\<union> B. y > x};\n                   return_pmf \\<langle>l, x, r\\<rangle>\n                 } = random_bst (A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set (A \\<union> B) \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n    random_bst (A \\<union> B)", "using AB"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. pmf_of_set (A \\<union> B) \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n    random_bst (A \\<union> B)", "by (intro random_bst_reduce [symmetric]) auto"], ["proof (state)\nthis:\n  pmf_of_set (A \\<union> B) \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A \\<union> B. y < x} \\<bind>\n      (\\<lambda>l.\n          random_bst {y \\<in> A \\<union> B. x < y} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n  random_bst (A \\<union> B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "finally"], ["proof (chain)\npicking this:\n  random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n  random_bst (A \\<union> B)", "show ?thesis"], ["proof (prove)\nusing this:\n  random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n  random_bst (A \\<union> B)\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n    random_bst (A \\<union> B)", "."], ["proof (state)\nthis:\n  random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n  random_bst (A \\<union> B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n  random_bst (A \\<union> B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_join t1) =\n  random_bst (A \\<union> B)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Pushdown\\<close>"], ["", "text \\<open>\n  The ``push down'' operation ``forgets'' information about the root of a tree in the following\n  sense: It takes a non-empty tree whose root is some known fixed value and whose children are\n  random BSTs and shuffles the root in such a way that the resulting tree is a random BST.\n\\<close>"], ["", "fun mrbst_push_down :: \"'a tree \\<Rightarrow> 'a \\<Rightarrow> 'a tree \\<Rightarrow> 'a tree pmf\" where\n  \"mrbst_push_down l x r =\n     do {\n       k \\<leftarrow> pmf_of_set {0..size l + size r};\n       if k < size l then\n         case l of\n           \\<langle>ll, y, lr\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>r'. \\<langle>ll, y, r'\\<rangle>) (mrbst_push_down lr x r)\n       else if k < size l + size r then\n         case r of\n           \\<langle>rl, y, rr\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>) (mrbst_push_down l x rl)\n       else\n         return_pmf \\<langle>l, x, r\\<rangle>\n     }\""], ["", "lemmas [simp del] = mrbst_push_down.simps"], ["", "lemma\n  assumes \"t' \\<in> set_pmf (mrbst_push_down t1 x t2)\" \"bst t1\" \"bst t2\"\n  assumes \"\\<And>y. y \\<in> set_tree t1 \\<Longrightarrow> y < x\" \"\\<And>y. y \\<in> set_tree t2 \\<Longrightarrow> y > x\"\n  shows   bst_mrbst_push_down: \"bst t'\"\n    and   set_mrbst_push_down: \"set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t' &&& set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. bst t'\n 2. set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "have \"bst t' \\<and> set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "using assms"], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf (mrbst_push_down t1 x t2)\n  bst t1\n  bst t2\n  ?y \\<in> set_tree t1 \\<Longrightarrow> ?y < x\n  ?y \\<in> set_tree t2 \\<Longrightarrow> x < ?y\n\ngoal (1 subgoal):\n 1. bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "proof (induction \"size t1 + size t2\" arbitrary: t1 t2 t' rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 t2 t'.\n       \\<lbrakk>\\<And>t1a t2a t'.\n                   \\<lbrakk>size t1a + size t2a < size t1 + size t2;\n                    t' \\<in> set_pmf (mrbst_push_down t1a x t2a); bst t1a;\n                    bst t2a;\n                    \\<And>y. y \\<in> set_tree t1a \\<Longrightarrow> y < x;\n                    \\<And>y.\n                       y \\<in> set_tree t2a \\<Longrightarrow> x < y\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     {x} \\<union> set_tree t1a \\<union>\n                                     set_tree t2a;\n        t' \\<in> set_pmf (mrbst_push_down t1 x t2); bst t1; bst t2;\n        \\<And>y. y \\<in> set_tree t1 \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> set_tree t2 \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         {x} \\<union> set_tree t1 \\<union> set_tree t2", "case (less t1 t2 t')"], ["proof (state)\nthis:\n  \\<lbrakk>size ?t1.0 + size ?t2.0 < size t1 + size t2;\n   ?t' \\<in> set_pmf (mrbst_push_down ?t1.0 x ?t2.0); bst ?t1.0; bst ?t2.0;\n   \\<And>y. y \\<in> set_tree ?t1.0 \\<Longrightarrow> y < x;\n   \\<And>y. y \\<in> set_tree ?t2.0 \\<Longrightarrow> x < y\\<rbrakk>\n  \\<Longrightarrow> bst ?t' \\<and>\n                    set_tree ?t' =\n                    {x} \\<union> set_tree ?t1.0 \\<union> set_tree ?t2.0\n  t' \\<in> set_pmf (mrbst_push_down t1 x t2)\n  bst t1\n  bst t2\n  ?y \\<in> set_tree t1 \\<Longrightarrow> ?y < x\n  ?y \\<in> set_tree t2 \\<Longrightarrow> x < ?y\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2 t'.\n       \\<lbrakk>\\<And>t1a t2a t'.\n                   \\<lbrakk>size t1a + size t2a < size t1 + size t2;\n                    t' \\<in> set_pmf (mrbst_push_down t1a x t2a); bst t1a;\n                    bst t2a;\n                    \\<And>y. y \\<in> set_tree t1a \\<Longrightarrow> y < x;\n                    \\<And>y.\n                       y \\<in> set_tree t2a \\<Longrightarrow> x < y\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     {x} \\<union> set_tree t1a \\<union>\n                                     set_tree t2a;\n        t' \\<in> set_pmf (mrbst_push_down t1 x t2); bst t1; bst t2;\n        \\<And>y. y \\<in> set_tree t1 \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> set_tree t2 \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         {x} \\<union> set_tree t1 \\<union> set_tree t2", "have \"t1 \\<noteq> \\<langle>\\<rangle> \\<and> t' \\<in> set_pmf (case t1 of \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                            map_pmf (Node l y) (mrbst_push_down r x t2)) \\<or>\n          t2 \\<noteq> \\<langle>\\<rangle> \\<and> t' \\<in> set_pmf (case t2 of \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                            map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>) (mrbst_push_down t1 x l)) \\<or>\n          t' = \\<langle>t1, x, t2\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t1 \\<noteq> \\<langle>\\<rangle> \\<and>\n    t' \\<in> set_pmf\n              (case t1 of\n               \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                 map_pmf (Node l y) (mrbst_push_down r x t2)) \\<or>\n    t2 \\<noteq> \\<langle>\\<rangle> \\<and>\n    t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>)\n                  (mrbst_push_down t1 x l)) \\<or>\n    t' = \\<langle>t1, x, t2\\<rangle>", "using less.prems"], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf (mrbst_push_down t1 x t2)\n  bst t1\n  bst t2\n  ?y \\<in> set_tree t1 \\<Longrightarrow> ?y < x\n  ?y \\<in> set_tree t2 \\<Longrightarrow> x < ?y\n\ngoal (1 subgoal):\n 1. t1 \\<noteq> \\<langle>\\<rangle> \\<and>\n    t' \\<in> set_pmf\n              (case t1 of\n               \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                 map_pmf (Node l y) (mrbst_push_down r x t2)) \\<or>\n    t2 \\<noteq> \\<langle>\\<rangle> \\<and>\n    t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>)\n                  (mrbst_push_down t1 x l)) \\<or>\n    t' = \\<langle>t1, x, t2\\<rangle>", "by (subst (asm) mrbst_push_down.simps) (auto split: if_splits)"], ["proof (state)\nthis:\n  t1 \\<noteq> \\<langle>\\<rangle> \\<and>\n  t' \\<in> set_pmf\n            (case t1 of\n             \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n               map_pmf (Node l y) (mrbst_push_down r x t2)) \\<or>\n  t2 \\<noteq> \\<langle>\\<rangle> \\<and>\n  t' \\<in> set_pmf\n            (case t2 of\n             \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n               map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>)\n                (mrbst_push_down t1 x l)) \\<or>\n  t' = \\<langle>t1, x, t2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2 t'.\n       \\<lbrakk>\\<And>t1a t2a t'.\n                   \\<lbrakk>size t1a + size t2a < size t1 + size t2;\n                    t' \\<in> set_pmf (mrbst_push_down t1a x t2a); bst t1a;\n                    bst t2a;\n                    \\<And>y. y \\<in> set_tree t1a \\<Longrightarrow> y < x;\n                    \\<And>y.\n                       y \\<in> set_tree t2a \\<Longrightarrow> x < y\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     {x} \\<union> set_tree t1a \\<union>\n                                     set_tree t2a;\n        t' \\<in> set_pmf (mrbst_push_down t1 x t2); bst t1; bst t2;\n        \\<And>y. y \\<in> set_tree t1 \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> set_tree t2 \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         {x} \\<union> set_tree t1 \\<union> set_tree t2", "thus ?case"], ["proof (prove)\nusing this:\n  t1 \\<noteq> \\<langle>\\<rangle> \\<and>\n  t' \\<in> set_pmf\n            (case t1 of\n             \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n               map_pmf (Node l y) (mrbst_push_down r x t2)) \\<or>\n  t2 \\<noteq> \\<langle>\\<rangle> \\<and>\n  t' \\<in> set_pmf\n            (case t2 of\n             \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n               map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>)\n                (mrbst_push_down t1 x l)) \\<or>\n  t' = \\<langle>t1, x, t2\\<rangle>\n\ngoal (1 subgoal):\n 1. bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "proof (elim disjE, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. t1 \\<noteq> \\<langle>\\<rangle> \\<and>\n    t' \\<in> set_pmf\n              (case t1 of\n               \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                 map_pmf (Node l y)\n                  (mrbst_push_down r x t2)) \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n 2. t2 \\<noteq> \\<langle>\\<rangle> \\<and>\n    t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>)\n                  (mrbst_push_down t1 x l)) \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n 3. t' = \\<langle>t1, x, t2\\<rangle> \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "case 1"], ["proof (state)\nthis:\n  t1 \\<noteq> \\<langle>\\<rangle> \\<and>\n  t' \\<in> set_pmf\n            (case t1 of\n             \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n               map_pmf (Node l y) (mrbst_push_down r x t2))\n\ngoal (3 subgoals):\n 1. t1 \\<noteq> \\<langle>\\<rangle> \\<and>\n    t' \\<in> set_pmf\n              (case t1 of\n               \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                 map_pmf (Node l y)\n                  (mrbst_push_down r x t2)) \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n 2. t2 \\<noteq> \\<langle>\\<rangle> \\<and>\n    t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>)\n                  (mrbst_push_down t1 x l)) \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n 3. t' = \\<langle>t1, x, t2\\<rangle> \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "then"], ["proof (chain)\npicking this:\n  t1 \\<noteq> \\<langle>\\<rangle> \\<and>\n  t' \\<in> set_pmf\n            (case t1 of\n             \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n               map_pmf (Node l y) (mrbst_push_down r x t2))", "obtain l y r r'\n        where *: \"t1 = \\<langle>l, y, r\\<rangle>\" \"r' \\<in> set_pmf (mrbst_push_down r x t2)\" \"t' = \\<langle>l, y, r'\\<rangle>\""], ["proof (prove)\nusing this:\n  t1 \\<noteq> \\<langle>\\<rangle> \\<and>\n  t' \\<in> set_pmf\n            (case t1 of\n             \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n               map_pmf (Node l y) (mrbst_push_down r x t2))\n\ngoal (1 subgoal):\n 1. (\\<And>l y r r'.\n        \\<lbrakk>t1 = \\<langle>l, y, r\\<rangle>;\n         r' \\<in> set_pmf (mrbst_push_down r x t2);\n         t' = \\<langle>l, y, r'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto split: tree.splits)"], ["proof (state)\nthis:\n  t1 = \\<langle>l, y, r\\<rangle>\n  r' \\<in> set_pmf (mrbst_push_down r x t2)\n  t' = \\<langle>l, y, r'\\<rangle>\n\ngoal (3 subgoals):\n 1. t1 \\<noteq> \\<langle>\\<rangle> \\<and>\n    t' \\<in> set_pmf\n              (case t1 of\n               \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                 map_pmf (Node l y)\n                  (mrbst_push_down r x t2)) \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n 2. t2 \\<noteq> \\<langle>\\<rangle> \\<and>\n    t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>)\n                  (mrbst_push_down t1 x l)) \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n 3. t' = \\<langle>t1, x, t2\\<rangle> \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "from * and less.prems"], ["proof (chain)\npicking this:\n  t1 = \\<langle>l, y, r\\<rangle>\n  r' \\<in> set_pmf (mrbst_push_down r x t2)\n  t' = \\<langle>l, y, r'\\<rangle>\n  t' \\<in> set_pmf (mrbst_push_down t1 x t2)\n  bst t1\n  bst t2\n  ?y \\<in> set_tree t1 \\<Longrightarrow> ?y < x\n  ?y \\<in> set_tree t2 \\<Longrightarrow> x < ?y", "have \"bst r' \\<and> set_tree r' = {x} \\<union> set_tree r \\<union> set_tree t2\""], ["proof (prove)\nusing this:\n  t1 = \\<langle>l, y, r\\<rangle>\n  r' \\<in> set_pmf (mrbst_push_down r x t2)\n  t' = \\<langle>l, y, r'\\<rangle>\n  t' \\<in> set_pmf (mrbst_push_down t1 x t2)\n  bst t1\n  bst t2\n  ?y \\<in> set_tree t1 \\<Longrightarrow> ?y < x\n  ?y \\<in> set_tree t2 \\<Longrightarrow> x < ?y\n\ngoal (1 subgoal):\n 1. bst r' \\<and> set_tree r' = {x} \\<union> set_tree r \\<union> set_tree t2", "by (intro less) auto"], ["proof (state)\nthis:\n  bst r' \\<and> set_tree r' = {x} \\<union> set_tree r \\<union> set_tree t2\n\ngoal (3 subgoals):\n 1. t1 \\<noteq> \\<langle>\\<rangle> \\<and>\n    t' \\<in> set_pmf\n              (case t1 of\n               \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                 map_pmf (Node l y)\n                  (mrbst_push_down r x t2)) \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n 2. t2 \\<noteq> \\<langle>\\<rangle> \\<and>\n    t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>)\n                  (mrbst_push_down t1 x l)) \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n 3. t' = \\<langle>t1, x, t2\\<rangle> \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "with * and less.prems"], ["proof (chain)\npicking this:\n  t1 = \\<langle>l, y, r\\<rangle>\n  r' \\<in> set_pmf (mrbst_push_down r x t2)\n  t' = \\<langle>l, y, r'\\<rangle>\n  t' \\<in> set_pmf (mrbst_push_down t1 x t2)\n  bst t1\n  bst t2\n  ?y \\<in> set_tree t1 \\<Longrightarrow> ?y < x\n  ?y \\<in> set_tree t2 \\<Longrightarrow> x < ?y\n  bst r' \\<and> set_tree r' = {x} \\<union> set_tree r \\<union> set_tree t2", "show ?case"], ["proof (prove)\nusing this:\n  t1 = \\<langle>l, y, r\\<rangle>\n  r' \\<in> set_pmf (mrbst_push_down r x t2)\n  t' = \\<langle>l, y, r'\\<rangle>\n  t' \\<in> set_pmf (mrbst_push_down t1 x t2)\n  bst t1\n  bst t2\n  ?y \\<in> set_tree t1 \\<Longrightarrow> ?y < x\n  ?y \\<in> set_tree t2 \\<Longrightarrow> x < ?y\n  bst r' \\<and> set_tree r' = {x} \\<union> set_tree r \\<union> set_tree t2\n\ngoal (1 subgoal):\n 1. bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "by force"], ["proof (state)\nthis:\n  bst t' \\<and> set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n\ngoal (2 subgoals):\n 1. t2 \\<noteq> \\<langle>\\<rangle> \\<and>\n    t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>)\n                  (mrbst_push_down t1 x l)) \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n 2. t' = \\<langle>t1, x, t2\\<rangle> \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. t2 \\<noteq> \\<langle>\\<rangle> \\<and>\n    t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>)\n                  (mrbst_push_down t1 x l)) \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n 2. t' = \\<langle>t1, x, t2\\<rangle> \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "case 2"], ["proof (state)\nthis:\n  t2 \\<noteq> \\<langle>\\<rangle> \\<and>\n  t' \\<in> set_pmf\n            (case t2 of\n             \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n               map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>)\n                (mrbst_push_down t1 x l))\n\ngoal (2 subgoals):\n 1. t2 \\<noteq> \\<langle>\\<rangle> \\<and>\n    t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>)\n                  (mrbst_push_down t1 x l)) \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n 2. t' = \\<langle>t1, x, t2\\<rangle> \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "then"], ["proof (chain)\npicking this:\n  t2 \\<noteq> \\<langle>\\<rangle> \\<and>\n  t' \\<in> set_pmf\n            (case t2 of\n             \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n               map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>)\n                (mrbst_push_down t1 x l))", "obtain l y r l'\n        where *: \"t2 = \\<langle>l, y, r\\<rangle>\" \"l' \\<in> set_pmf (mrbst_push_down t1 x l)\" \"t' = \\<langle>l', y, r\\<rangle>\""], ["proof (prove)\nusing this:\n  t2 \\<noteq> \\<langle>\\<rangle> \\<and>\n  t' \\<in> set_pmf\n            (case t2 of\n             \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n               map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>)\n                (mrbst_push_down t1 x l))\n\ngoal (1 subgoal):\n 1. (\\<And>l y r l'.\n        \\<lbrakk>t2 = \\<langle>l, y, r\\<rangle>;\n         l' \\<in> set_pmf (mrbst_push_down t1 x l);\n         t' = \\<langle>l', y, r\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto split: tree.splits)"], ["proof (state)\nthis:\n  t2 = \\<langle>l, y, r\\<rangle>\n  l' \\<in> set_pmf (mrbst_push_down t1 x l)\n  t' = \\<langle>l', y, r\\<rangle>\n\ngoal (2 subgoals):\n 1. t2 \\<noteq> \\<langle>\\<rangle> \\<and>\n    t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>)\n                  (mrbst_push_down t1 x l)) \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n 2. t' = \\<langle>t1, x, t2\\<rangle> \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "from * and less.prems"], ["proof (chain)\npicking this:\n  t2 = \\<langle>l, y, r\\<rangle>\n  l' \\<in> set_pmf (mrbst_push_down t1 x l)\n  t' = \\<langle>l', y, r\\<rangle>\n  t' \\<in> set_pmf (mrbst_push_down t1 x t2)\n  bst t1\n  bst t2\n  ?y \\<in> set_tree t1 \\<Longrightarrow> ?y < x\n  ?y \\<in> set_tree t2 \\<Longrightarrow> x < ?y", "have \"bst l' \\<and> set_tree l' = {x} \\<union> set_tree t1 \\<union> set_tree l\""], ["proof (prove)\nusing this:\n  t2 = \\<langle>l, y, r\\<rangle>\n  l' \\<in> set_pmf (mrbst_push_down t1 x l)\n  t' = \\<langle>l', y, r\\<rangle>\n  t' \\<in> set_pmf (mrbst_push_down t1 x t2)\n  bst t1\n  bst t2\n  ?y \\<in> set_tree t1 \\<Longrightarrow> ?y < x\n  ?y \\<in> set_tree t2 \\<Longrightarrow> x < ?y\n\ngoal (1 subgoal):\n 1. bst l' \\<and> set_tree l' = {x} \\<union> set_tree t1 \\<union> set_tree l", "by (intro less) auto"], ["proof (state)\nthis:\n  bst l' \\<and> set_tree l' = {x} \\<union> set_tree t1 \\<union> set_tree l\n\ngoal (2 subgoals):\n 1. t2 \\<noteq> \\<langle>\\<rangle> \\<and>\n    t' \\<in> set_pmf\n              (case t2 of\n               \\<langle>l, y, r\\<rangle> \\<Rightarrow>\n                 map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>)\n                  (mrbst_push_down t1 x l)) \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n 2. t' = \\<langle>t1, x, t2\\<rangle> \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "with * and less.prems"], ["proof (chain)\npicking this:\n  t2 = \\<langle>l, y, r\\<rangle>\n  l' \\<in> set_pmf (mrbst_push_down t1 x l)\n  t' = \\<langle>l', y, r\\<rangle>\n  t' \\<in> set_pmf (mrbst_push_down t1 x t2)\n  bst t1\n  bst t2\n  ?y \\<in> set_tree t1 \\<Longrightarrow> ?y < x\n  ?y \\<in> set_tree t2 \\<Longrightarrow> x < ?y\n  bst l' \\<and> set_tree l' = {x} \\<union> set_tree t1 \\<union> set_tree l", "show ?case"], ["proof (prove)\nusing this:\n  t2 = \\<langle>l, y, r\\<rangle>\n  l' \\<in> set_pmf (mrbst_push_down t1 x l)\n  t' = \\<langle>l', y, r\\<rangle>\n  t' \\<in> set_pmf (mrbst_push_down t1 x t2)\n  bst t1\n  bst t2\n  ?y \\<in> set_tree t1 \\<Longrightarrow> ?y < x\n  ?y \\<in> set_tree t2 \\<Longrightarrow> x < ?y\n  bst l' \\<and> set_tree l' = {x} \\<union> set_tree t1 \\<union> set_tree l\n\ngoal (1 subgoal):\n 1. bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "by force"], ["proof (state)\nthis:\n  bst t' \\<and> set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n\ngoal (1 subgoal):\n 1. t' = \\<langle>t1, x, t2\\<rangle> \\<Longrightarrow>\n    bst t' \\<and>\n    set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "qed (insert less.prems, auto)"], ["proof (state)\nthis:\n  bst t' \\<and> set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bst t' \\<and> set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n\ngoal (2 subgoals):\n 1. bst t'\n 2. set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "thus \"bst t'\" \"set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\""], ["proof (prove)\nusing this:\n  bst t' \\<and> set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n\ngoal (1 subgoal):\n 1. bst t' &&& set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2", "by auto"], ["proof (state)\nthis:\n  bst t'\n  set_tree t' = {x} \\<union> set_tree t1 \\<union> set_tree t2\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem mrbst_push_down_correct:\n  fixes A B :: \"'a :: linorder set\"\n  assumes \"finite A\" \"finite B\" \"\\<And>y. y \\<in> A \\<Longrightarrow> y < x\" \"\\<And>y. y \\<in> B \\<Longrightarrow> x < y\"\n  shows   \"do {l \\<leftarrow> random_bst A; r \\<leftarrow> random_bst B; mrbst_push_down l x r} =\n             random_bst ({x} \\<union> A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>l. random_bst B \\<bind> mrbst_push_down l x) =\n    random_bst ({x} \\<union> A \\<union> B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>l. random_bst B \\<bind> mrbst_push_down l x) =\n    random_bst ({x} \\<union> A \\<union> B)", "from assms"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  ?y \\<in> A \\<Longrightarrow> ?y < x\n  ?y \\<in> B \\<Longrightarrow> x < ?y", "have \"finite (A \\<union> B)\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  ?y \\<in> A \\<Longrightarrow> ?y < x\n  ?y \\<in> B \\<Longrightarrow> x < ?y\n\ngoal (1 subgoal):\n 1. finite (A \\<union> B)", "by simp"], ["proof (state)\nthis:\n  finite (A \\<union> B)\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>l. random_bst B \\<bind> mrbst_push_down l x) =\n    random_bst ({x} \\<union> A \\<union> B)", "from this and assms"], ["proof (chain)\npicking this:\n  finite (A \\<union> B)\n  finite A\n  finite B\n  ?y \\<in> A \\<Longrightarrow> ?y < x\n  ?y \\<in> B \\<Longrightarrow> x < ?y", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (A \\<union> B)\n  finite A\n  finite B\n  ?y \\<in> A \\<Longrightarrow> ?y < x\n  ?y \\<in> B \\<Longrightarrow> x < ?y\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>l. random_bst B \\<bind> mrbst_push_down l x) =\n    random_bst ({x} \\<union> A \\<union> B)", "proof (induction \"A \\<union> B\" arbitrary: A B rule: finite_psubset_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "case (psubset A B)"], ["proof (state)\nthis:\n  finite (A \\<union> B)\n  \\<lbrakk>?A \\<union> ?B \\<subset> A \\<union> B; finite ?A; finite ?B;\n   \\<And>y. y \\<in> ?A \\<Longrightarrow> y < x;\n   \\<And>y. y \\<in> ?B \\<Longrightarrow> x < y\\<rbrakk>\n  \\<Longrightarrow> random_bst ?A \\<bind>\n                    (\\<lambda>l.\n                        random_bst ?B \\<bind> mrbst_push_down l x) =\n                    random_bst ({x} \\<union> ?A \\<union> ?B)\n  finite A\n  finite B\n  ?y \\<in> A \\<Longrightarrow> ?y < x\n  ?y \\<in> B \\<Longrightarrow> x < ?y\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "define m n where \"m = card A\" and \"n = card B\""], ["proof (state)\nthis:\n  m = card A\n  n = card B\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "have A_ne: \"A \\<noteq> {}\" if \"m > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "using that"], ["proof (prove)\nusing this:\n  0 < m\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by (auto simp: m_def)"], ["proof (state)\nthis:\n  0 < m \\<Longrightarrow> A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "have B_ne: \"B \\<noteq> {}\" if \"n > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<noteq> {}", "using that"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. B \\<noteq> {}", "by (auto simp: n_def)"], ["proof (state)\nthis:\n  0 < n \\<Longrightarrow> B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "include monad_normalisation"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "have \"do {l \\<leftarrow> random_bst A; r \\<leftarrow> random_bst B; mrbst_push_down l x r} =\n          do {l \\<leftarrow> random_bst A;\n              r \\<leftarrow> random_bst B;\n              k \\<leftarrow> pmf_of_set {0..m + n};\n              if k < m then\n                case l of \\<langle>ll, y, lr\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>r'. \\<langle>ll, y, r'\\<rangle>) (mrbst_push_down lr x r)\n              else if k < m + n then\n                case r of \\<langle>rl, y, rr\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>) (mrbst_push_down l x rl)\n              else\n                return_pmf \\<langle>l, x, r\\<rangle>\n             }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>l. random_bst B \\<bind> mrbst_push_down l x) =\n    random_bst A \\<bind>\n    (\\<lambda>l.\n        random_bst B \\<bind>\n        (\\<lambda>r.\n            pmf_of_set {0..m + n} \\<bind>\n            (\\<lambda>k.\n                if k < m\n                then case l of\n                     \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n                       map_pmf (Node ll y) (mrbst_push_down lr x r)\n                else if k < m + n\n                     then case r of\n                          \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                            map_pmf\n                             (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>)\n                             (mrbst_push_down l x rl)\n                     else return_pmf \\<langle>l, x, r\\<rangle>)))", "using psubset.prems"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  ?y \\<in> A \\<Longrightarrow> ?y < x\n  ?y \\<in> B \\<Longrightarrow> x < ?y\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>l. random_bst B \\<bind> mrbst_push_down l x) =\n    random_bst A \\<bind>\n    (\\<lambda>l.\n        random_bst B \\<bind>\n        (\\<lambda>r.\n            pmf_of_set {0..m + n} \\<bind>\n            (\\<lambda>k.\n                if k < m\n                then case l of\n                     \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n                       map_pmf (Node ll y) (mrbst_push_down lr x r)\n                else if k < m + n\n                     then case r of\n                          \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                            map_pmf\n                             (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>)\n                             (mrbst_push_down l x rl)\n                     else return_pmf \\<langle>l, x, r\\<rangle>)))", "by (subst mrbst_push_down.simps, intro bind_pmf_cong refl)\n         (auto simp: size_random_bst m_def n_def)"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>l. random_bst B \\<bind> mrbst_push_down l x) =\n  random_bst A \\<bind>\n  (\\<lambda>l.\n      random_bst B \\<bind>\n      (\\<lambda>r.\n          pmf_of_set {0..m + n} \\<bind>\n          (\\<lambda>k.\n              if k < m\n              then case l of\n                   \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n                     map_pmf (Node ll y) (mrbst_push_down lr x r)\n              else if k < m + n\n                   then case r of\n                        \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                          map_pmf (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>)\n                           (mrbst_push_down l x rl)\n                   else return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "also"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>l. random_bst B \\<bind> mrbst_push_down l x) =\n  random_bst A \\<bind>\n  (\\<lambda>l.\n      random_bst B \\<bind>\n      (\\<lambda>r.\n          pmf_of_set {0..m + n} \\<bind>\n          (\\<lambda>k.\n              if k < m\n              then case l of\n                   \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n                     map_pmf (Node ll y) (mrbst_push_down lr x r)\n              else if k < m + n\n                   then case r of\n                        \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                          map_pmf (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>)\n                           (mrbst_push_down l x rl)\n                   else return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "have \"\\<dots> = do {k \\<leftarrow> pmf_of_set {0..m + n};\n                        if k < m then do {\n                          l \\<leftarrow> random_bst A;\n                          r \\<leftarrow> random_bst B;\n                          case l of \\<langle>ll, y, lr\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>r'. \\<langle>ll, y, r'\\<rangle>) (mrbst_push_down lr x r)\n                        } else if k < m + n then do {\n                          l \\<leftarrow> random_bst A;\n                          r \\<leftarrow> random_bst B;\n                          case r of \\<langle>rl, y, rr\\<rangle> \\<Rightarrow> map_pmf (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>) (mrbst_push_down l x rl)\n                        } else do {\n                          l \\<leftarrow> random_bst A;\n                          r \\<leftarrow> random_bst B;\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        }\n                       }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>l.\n        random_bst B \\<bind>\n        (\\<lambda>r.\n            pmf_of_set {0..m + n} \\<bind>\n            (\\<lambda>k.\n                if k < m\n                then case l of\n                     \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n                       map_pmf (Node ll y) (mrbst_push_down lr x r)\n                else if k < m + n\n                     then case r of\n                          \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                            map_pmf\n                             (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>)\n                             (mrbst_push_down l x rl)\n                     else return_pmf \\<langle>l, x, r\\<rangle>))) =\n    pmf_of_set {0..m + n} \\<bind>\n    (\\<lambda>k.\n        if k < m\n        then random_bst A \\<bind>\n             (\\<lambda>l.\n                 random_bst B \\<bind>\n                 (\\<lambda>r.\n                     case l of\n                     \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n                       map_pmf (Node ll y) (mrbst_push_down lr x r)))\n        else if k < m + n\n             then random_bst A \\<bind>\n                  (\\<lambda>l.\n                      random_bst B \\<bind>\n                      (\\<lambda>r.\n                          case r of\n                          \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                            map_pmf\n                             (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>)\n                             (mrbst_push_down l x rl)))\n             else random_bst A \\<bind>\n                  (\\<lambda>l.\n                      random_bst B \\<bind>\n                      (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "by (simp cong: if_cong)"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>l.\n      random_bst B \\<bind>\n      (\\<lambda>r.\n          pmf_of_set {0..m + n} \\<bind>\n          (\\<lambda>k.\n              if k < m\n              then case l of\n                   \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n                     map_pmf (Node ll y) (mrbst_push_down lr x r)\n              else if k < m + n\n                   then case r of\n                        \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                          map_pmf (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>)\n                           (mrbst_push_down l x rl)\n                   else return_pmf \\<langle>l, x, r\\<rangle>))) =\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then random_bst A \\<bind>\n           (\\<lambda>l.\n               random_bst B \\<bind>\n               (\\<lambda>r.\n                   case l of\n                   \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n                     map_pmf (Node ll y) (mrbst_push_down lr x r)))\n      else if k < m + n\n           then random_bst A \\<bind>\n                (\\<lambda>l.\n                    random_bst B \\<bind>\n                    (\\<lambda>r.\n                        case r of\n                        \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                          map_pmf (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>)\n                           (mrbst_push_down l x rl)))\n           else random_bst A \\<bind>\n                (\\<lambda>l.\n                    random_bst B \\<bind>\n                    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "also"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>l.\n      random_bst B \\<bind>\n      (\\<lambda>r.\n          pmf_of_set {0..m + n} \\<bind>\n          (\\<lambda>k.\n              if k < m\n              then case l of\n                   \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n                     map_pmf (Node ll y) (mrbst_push_down lr x r)\n              else if k < m + n\n                   then case r of\n                        \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                          map_pmf (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>)\n                           (mrbst_push_down l x rl)\n                   else return_pmf \\<langle>l, x, r\\<rangle>))) =\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then random_bst A \\<bind>\n           (\\<lambda>l.\n               random_bst B \\<bind>\n               (\\<lambda>r.\n                   case l of\n                   \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n                     map_pmf (Node ll y) (mrbst_push_down lr x r)))\n      else if k < m + n\n           then random_bst A \\<bind>\n                (\\<lambda>l.\n                    random_bst B \\<bind>\n                    (\\<lambda>r.\n                        case r of\n                        \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                          map_pmf (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>)\n                           (mrbst_push_down l x rl)))\n           else random_bst A \\<bind>\n                (\\<lambda>l.\n                    random_bst B \\<bind>\n                    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "have \"\\<dots> = do {k \\<leftarrow> pmf_of_set {0..m + n};\n                        if k < m then do {\n                          y \\<leftarrow> pmf_of_set A;\n                          ll \\<leftarrow> random_bst {z\\<in>A. z < y};\n                          r' \\<leftarrow> do {lr \\<leftarrow> random_bst {z\\<in>A. z > y};\n                                    r \\<leftarrow> random_bst B;\n                                    mrbst_push_down lr x r};\n                          return_pmf \\<langle>ll, y, r'\\<rangle>\n                        } else if k < m + n then do {\n                          y \\<leftarrow> pmf_of_set B;\n                          l' \\<leftarrow> do {l \\<leftarrow> random_bst A;\n                                    rl \\<leftarrow> random_bst {z\\<in>B. z < y};\n                                    mrbst_push_down l x rl};\n                          rr \\<leftarrow> random_bst {z\\<in>B. z > y};\n                          return_pmf \\<langle>l', y, rr\\<rangle>\n                        } else do {\n                          l \\<leftarrow> random_bst A;\n                          r \\<leftarrow> random_bst B;\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        }\n                       }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set {0..m + n} \\<bind>\n    (\\<lambda>k.\n        if k < m\n        then random_bst A \\<bind>\n             (\\<lambda>l.\n                 random_bst B \\<bind>\n                 (\\<lambda>r.\n                     case l of\n                     \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n                       map_pmf (Node ll y) (mrbst_push_down lr x r)))\n        else if k < m + n\n             then random_bst A \\<bind>\n                  (\\<lambda>l.\n                      random_bst B \\<bind>\n                      (\\<lambda>r.\n                          case r of\n                          \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                            map_pmf\n                             (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>)\n                             (mrbst_push_down l x rl)))\n             else random_bst A \\<bind>\n                  (\\<lambda>l.\n                      random_bst B \\<bind>\n                      (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n    pmf_of_set {0..m + n} \\<bind>\n    (\\<lambda>k.\n        if k < m\n        then pmf_of_set A \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A. z < y} \\<bind>\n                 (\\<lambda>ll.\n                     random_bst {z \\<in> A. y < z} \\<bind>\n                     (\\<lambda>lr.\n                         random_bst B \\<bind> mrbst_push_down lr x) \\<bind>\n                     (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n        else if k < m + n\n             then pmf_of_set B \\<bind>\n                  (\\<lambda>y.\n                      random_bst A \\<bind>\n                      (\\<lambda>l.\n                          random_bst {z \\<in> B. z < y} \\<bind>\n                          mrbst_push_down l x) \\<bind>\n                      (\\<lambda>l'.\n                          random_bst {z \\<in> B. y < z} \\<bind>\n                          (\\<lambda>rr.\n                              return_pmf \\<langle>l', y, rr\\<rangle>)))\n             else random_bst A \\<bind>\n                  (\\<lambda>l.\n                      random_bst B \\<bind>\n                      (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "proof (intro bind_pmf_cong refl if_cong, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind>\n                             (\\<lambda>r.\n                                 case l of\n                                 \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n                                   map_pmf (Node ll y)\n                                    (mrbst_push_down lr x r))) =\n                         pmf_of_set A \\<bind>\n                         (\\<lambda>y.\n                             random_bst {z \\<in> A. z < y} \\<bind>\n                             (\\<lambda>ll.\n                                 random_bst {z \\<in> A. y < z} \\<bind>\n                                 (\\<lambda>lr.\n                                     random_bst B \\<bind>\n                                     mrbst_push_down lr x) \\<bind>\n                                 (\\<lambda>r'.\n                                     return_pmf\n\\<langle>ll, y, r'\\<rangle>)))\n 2. \\<And>xa.\n       \\<lbrakk>xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m;\n        xa < m + n\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind>\n                             (\\<lambda>r.\n                                 case r of\n                                 \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', y, rr\\<rangle>)\n                                    (mrbst_push_down l x rl))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>y.\n                             random_bst A \\<bind>\n                             (\\<lambda>l.\n                                 random_bst {z \\<in> B. z < y} \\<bind>\n                                 mrbst_push_down l x) \\<bind>\n                             (\\<lambda>l'.\n                                 random_bst {z \\<in> B. y < z} \\<bind>\n                                 (\\<lambda>rr.\n                                     return_pmf\n\\<langle>l', y, rr\\<rangle>)))", "case (1 k)"], ["proof (state)\nthis:\n  k \\<in> set_pmf (pmf_of_set {0..m + n})\n  k < m\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind>\n                             (\\<lambda>r.\n                                 case l of\n                                 \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n                                   map_pmf (Node ll y)\n                                    (mrbst_push_down lr x r))) =\n                         pmf_of_set A \\<bind>\n                         (\\<lambda>y.\n                             random_bst {z \\<in> A. z < y} \\<bind>\n                             (\\<lambda>ll.\n                                 random_bst {z \\<in> A. y < z} \\<bind>\n                                 (\\<lambda>lr.\n                                     random_bst B \\<bind>\n                                     mrbst_push_down lr x) \\<bind>\n                                 (\\<lambda>r'.\n                                     return_pmf\n\\<langle>ll, y, r'\\<rangle>)))\n 2. \\<And>xa.\n       \\<lbrakk>xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m;\n        xa < m + n\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind>\n                             (\\<lambda>r.\n                                 case r of\n                                 \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', y, rr\\<rangle>)\n                                    (mrbst_push_down l x rl))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>y.\n                             random_bst A \\<bind>\n                             (\\<lambda>l.\n                                 random_bst {z \\<in> B. z < y} \\<bind>\n                                 mrbst_push_down l x) \\<bind>\n                             (\\<lambda>l'.\n                                 random_bst {z \\<in> B. y < z} \\<bind>\n                                 (\\<lambda>rr.\n                                     return_pmf\n\\<langle>l', y, rr\\<rangle>)))", "hence \"A \\<noteq> {}\""], ["proof (prove)\nusing this:\n  k \\<in> set_pmf (pmf_of_set {0..m + n})\n  k < m\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by (auto simp: m_def)"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind>\n                             (\\<lambda>r.\n                                 case l of\n                                 \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n                                   map_pmf (Node ll y)\n                                    (mrbst_push_down lr x r))) =\n                         pmf_of_set A \\<bind>\n                         (\\<lambda>y.\n                             random_bst {z \\<in> A. z < y} \\<bind>\n                             (\\<lambda>ll.\n                                 random_bst {z \\<in> A. y < z} \\<bind>\n                                 (\\<lambda>lr.\n                                     random_bst B \\<bind>\n                                     mrbst_push_down lr x) \\<bind>\n                                 (\\<lambda>r'.\n                                     return_pmf\n\\<langle>ll, y, r'\\<rangle>)))\n 2. \\<And>xa.\n       \\<lbrakk>xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m;\n        xa < m + n\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind>\n                             (\\<lambda>r.\n                                 case r of\n                                 \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', y, rr\\<rangle>)\n                                    (mrbst_push_down l x rl))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>y.\n                             random_bst A \\<bind>\n                             (\\<lambda>l.\n                                 random_bst {z \\<in> B. z < y} \\<bind>\n                                 mrbst_push_down l x) \\<bind>\n                             (\\<lambda>l'.\n                                 random_bst {z \\<in> B. y < z} \\<bind>\n                                 (\\<lambda>rr.\n                                     return_pmf\n\\<langle>l', y, rr\\<rangle>)))", "with \\<open>finite A\\<close>"], ["proof (chain)\npicking this:\n  finite A\n  A \\<noteq> {}", "show ?case"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>l.\n        random_bst B \\<bind>\n        (\\<lambda>r.\n            case l of\n            \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n              map_pmf (Node ll y) (mrbst_push_down lr x r))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>y.\n        random_bst {z \\<in> A. z < y} \\<bind>\n        (\\<lambda>ll.\n            random_bst {z \\<in> A. y < z} \\<bind>\n            (\\<lambda>lr. random_bst B \\<bind> mrbst_push_down lr x) \\<bind>\n            (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))", "by (simp add: random_bst_reduce map_pmf_def)"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>l.\n      random_bst B \\<bind>\n      (\\<lambda>r.\n          case l of\n          \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n            map_pmf (Node ll y) (mrbst_push_down lr x r))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>y.\n      random_bst {z \\<in> A. z < y} \\<bind>\n      (\\<lambda>ll.\n          random_bst {z \\<in> A. y < z} \\<bind>\n          (\\<lambda>lr. random_bst B \\<bind> mrbst_push_down lr x) \\<bind>\n          (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m;\n        xa < m + n\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind>\n                             (\\<lambda>r.\n                                 case r of\n                                 \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', y, rr\\<rangle>)\n                                    (mrbst_push_down l x rl))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>y.\n                             random_bst A \\<bind>\n                             (\\<lambda>l.\n                                 random_bst {z \\<in> B. z < y} \\<bind>\n                                 mrbst_push_down l x) \\<bind>\n                             (\\<lambda>l'.\n                                 random_bst {z \\<in> B. y < z} \\<bind>\n                                 (\\<lambda>rr.\n                                     return_pmf\n\\<langle>l', y, rr\\<rangle>)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m;\n        xa < m + n\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind>\n                             (\\<lambda>r.\n                                 case r of\n                                 \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', y, rr\\<rangle>)\n                                    (mrbst_push_down l x rl))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>y.\n                             random_bst A \\<bind>\n                             (\\<lambda>l.\n                                 random_bst {z \\<in> B. z < y} \\<bind>\n                                 mrbst_push_down l x) \\<bind>\n                             (\\<lambda>l'.\n                                 random_bst {z \\<in> B. y < z} \\<bind>\n                                 (\\<lambda>rr.\n                                     return_pmf\n\\<langle>l', y, rr\\<rangle>)))", "case (2 k)"], ["proof (state)\nthis:\n  k \\<in> set_pmf (pmf_of_set {0..m + n})\n  \\<not> k < m\n  k < m + n\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m;\n        xa < m + n\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind>\n                             (\\<lambda>r.\n                                 case r of\n                                 \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', y, rr\\<rangle>)\n                                    (mrbst_push_down l x rl))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>y.\n                             random_bst A \\<bind>\n                             (\\<lambda>l.\n                                 random_bst {z \\<in> B. z < y} \\<bind>\n                                 mrbst_push_down l x) \\<bind>\n                             (\\<lambda>l'.\n                                 random_bst {z \\<in> B. y < z} \\<bind>\n                                 (\\<lambda>rr.\n                                     return_pmf\n\\<langle>l', y, rr\\<rangle>)))", "hence \"B \\<noteq> {}\""], ["proof (prove)\nusing this:\n  k \\<in> set_pmf (pmf_of_set {0..m + n})\n  \\<not> k < m\n  k < m + n\n\ngoal (1 subgoal):\n 1. B \\<noteq> {}", "by (auto simp: m_def n_def)"], ["proof (state)\nthis:\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m;\n        xa < m + n\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind>\n                             (\\<lambda>r.\n                                 case r of\n                                 \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                                   map_pmf\n                                    (\\<lambda>l'.\n  \\<langle>l', y, rr\\<rangle>)\n                                    (mrbst_push_down l x rl))) =\n                         pmf_of_set B \\<bind>\n                         (\\<lambda>y.\n                             random_bst A \\<bind>\n                             (\\<lambda>l.\n                                 random_bst {z \\<in> B. z < y} \\<bind>\n                                 mrbst_push_down l x) \\<bind>\n                             (\\<lambda>l'.\n                                 random_bst {z \\<in> B. y < z} \\<bind>\n                                 (\\<lambda>rr.\n                                     return_pmf\n\\<langle>l', y, rr\\<rangle>)))", "with \\<open>finite B\\<close>"], ["proof (chain)\npicking this:\n  finite B\n  B \\<noteq> {}", "show ?case"], ["proof (prove)\nusing this:\n  finite B\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>l.\n        random_bst B \\<bind>\n        (\\<lambda>r.\n            case r of\n            \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n              map_pmf (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>)\n               (mrbst_push_down l x rl))) =\n    pmf_of_set B \\<bind>\n    (\\<lambda>y.\n        random_bst A \\<bind>\n        (\\<lambda>l.\n            random_bst {z \\<in> B. z < y} \\<bind>\n            mrbst_push_down l x) \\<bind>\n        (\\<lambda>l'.\n            random_bst {z \\<in> B. y < z} \\<bind>\n            (\\<lambda>rr. return_pmf \\<langle>l', y, rr\\<rangle>)))", "by (simp add: random_bst_reduce map_pmf_def)"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>l.\n      random_bst B \\<bind>\n      (\\<lambda>r.\n          case r of\n          \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n            map_pmf (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>)\n             (mrbst_push_down l x rl))) =\n  pmf_of_set B \\<bind>\n  (\\<lambda>y.\n      random_bst A \\<bind>\n      (\\<lambda>l.\n          random_bst {z \\<in> B. z < y} \\<bind> mrbst_push_down l x) \\<bind>\n      (\\<lambda>l'.\n          random_bst {z \\<in> B. y < z} \\<bind>\n          (\\<lambda>rr. return_pmf \\<langle>l', y, rr\\<rangle>)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then random_bst A \\<bind>\n           (\\<lambda>l.\n               random_bst B \\<bind>\n               (\\<lambda>r.\n                   case l of\n                   \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n                     map_pmf (Node ll y) (mrbst_push_down lr x r)))\n      else if k < m + n\n           then random_bst A \\<bind>\n                (\\<lambda>l.\n                    random_bst B \\<bind>\n                    (\\<lambda>r.\n                        case r of\n                        \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                          map_pmf (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>)\n                           (mrbst_push_down l x rl)))\n           else random_bst A \\<bind>\n                (\\<lambda>l.\n                    random_bst B \\<bind>\n                    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then pmf_of_set A \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A. z < y} \\<bind>\n               (\\<lambda>ll.\n                   random_bst {z \\<in> A. y < z} \\<bind>\n                   (\\<lambda>lr.\n                       random_bst B \\<bind> mrbst_push_down lr x) \\<bind>\n                   (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n      else if k < m + n\n           then pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst A \\<bind>\n                    (\\<lambda>l.\n                        random_bst {z \\<in> B. z < y} \\<bind>\n                        mrbst_push_down l x) \\<bind>\n                    (\\<lambda>l'.\n                        random_bst {z \\<in> B. y < z} \\<bind>\n                        (\\<lambda>rr.\n                            return_pmf \\<langle>l', y, rr\\<rangle>)))\n           else random_bst A \\<bind>\n                (\\<lambda>l.\n                    random_bst B \\<bind>\n                    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "also"], ["proof (state)\nthis:\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then random_bst A \\<bind>\n           (\\<lambda>l.\n               random_bst B \\<bind>\n               (\\<lambda>r.\n                   case l of\n                   \\<langle>ll, y, lr\\<rangle> \\<Rightarrow>\n                     map_pmf (Node ll y) (mrbst_push_down lr x r)))\n      else if k < m + n\n           then random_bst A \\<bind>\n                (\\<lambda>l.\n                    random_bst B \\<bind>\n                    (\\<lambda>r.\n                        case r of\n                        \\<langle>rl, y, rr\\<rangle> \\<Rightarrow>\n                          map_pmf (\\<lambda>l'. \\<langle>l', y, rr\\<rangle>)\n                           (mrbst_push_down l x rl)))\n           else random_bst A \\<bind>\n                (\\<lambda>l.\n                    random_bst B \\<bind>\n                    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then pmf_of_set A \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A. z < y} \\<bind>\n               (\\<lambda>ll.\n                   random_bst {z \\<in> A. y < z} \\<bind>\n                   (\\<lambda>lr.\n                       random_bst B \\<bind> mrbst_push_down lr x) \\<bind>\n                   (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n      else if k < m + n\n           then pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst A \\<bind>\n                    (\\<lambda>l.\n                        random_bst {z \\<in> B. z < y} \\<bind>\n                        mrbst_push_down l x) \\<bind>\n                    (\\<lambda>l'.\n                        random_bst {z \\<in> B. y < z} \\<bind>\n                        (\\<lambda>rr.\n                            return_pmf \\<langle>l', y, rr\\<rangle>)))\n           else random_bst A \\<bind>\n                (\\<lambda>l.\n                    random_bst B \\<bind>\n                    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "have \"\\<dots> = do {k \\<leftarrow> pmf_of_set {0..m + n};\n                        if k < m then do {\n                          y \\<leftarrow> pmf_of_set A;\n                          ll \\<leftarrow> random_bst {z\\<in>A. z < y};\n                          r' \\<leftarrow> random_bst ({x} \\<union> {z\\<in>A. z > y} \\<union> B);\n                          return_pmf \\<langle>ll, y, r'\\<rangle>\n                        } else if k < m + n then do {\n                          y \\<leftarrow> pmf_of_set B;\n                          l' \\<leftarrow> random_bst ({x} \\<union> A \\<union> {z\\<in>B. z < y});\n                          rr \\<leftarrow> random_bst {z\\<in>B. z > y};\n                          return_pmf \\<langle>l', y, rr\\<rangle>\n                        } else do {\n                          l \\<leftarrow> random_bst A;\n                          r \\<leftarrow> random_bst B;\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        }\n                       }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set {0..m + n} \\<bind>\n    (\\<lambda>k.\n        if k < m\n        then pmf_of_set A \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A. z < y} \\<bind>\n                 (\\<lambda>ll.\n                     random_bst {z \\<in> A. y < z} \\<bind>\n                     (\\<lambda>lr.\n                         random_bst B \\<bind> mrbst_push_down lr x) \\<bind>\n                     (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n        else if k < m + n\n             then pmf_of_set B \\<bind>\n                  (\\<lambda>y.\n                      random_bst A \\<bind>\n                      (\\<lambda>l.\n                          random_bst {z \\<in> B. z < y} \\<bind>\n                          mrbst_push_down l x) \\<bind>\n                      (\\<lambda>l'.\n                          random_bst {z \\<in> B. y < z} \\<bind>\n                          (\\<lambda>rr.\n                              return_pmf \\<langle>l', y, rr\\<rangle>)))\n             else random_bst A \\<bind>\n                  (\\<lambda>l.\n                      random_bst B \\<bind>\n                      (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n    pmf_of_set {0..m + n} \\<bind>\n    (\\<lambda>k.\n        if k < m\n        then pmf_of_set A \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A. z < y} \\<bind>\n                 (\\<lambda>ll.\n                     random_bst\n                      ({x} \\<union> {z \\<in> A. y < z} \\<union> B) \\<bind>\n                     (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n        else if k < m + n\n             then pmf_of_set B \\<bind>\n                  (\\<lambda>y.\n                      random_bst\n                       ({x} \\<union> A \\<union> {z \\<in> B. z < y}) \\<bind>\n                      (\\<lambda>l'.\n                          random_bst {z \\<in> B. y < z} \\<bind>\n                          (\\<lambda>rr.\n                              return_pmf \\<langle>l', y, rr\\<rangle>)))\n             else random_bst A \\<bind>\n                  (\\<lambda>l.\n                      random_bst B \\<bind>\n                      (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "using psubset.prems A_ne B_ne"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  ?y \\<in> A \\<Longrightarrow> ?y < x\n  ?y \\<in> B \\<Longrightarrow> x < ?y\n  0 < m \\<Longrightarrow> A \\<noteq> {}\n  0 < n \\<Longrightarrow> B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. pmf_of_set {0..m + n} \\<bind>\n    (\\<lambda>k.\n        if k < m\n        then pmf_of_set A \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A. z < y} \\<bind>\n                 (\\<lambda>ll.\n                     random_bst {z \\<in> A. y < z} \\<bind>\n                     (\\<lambda>lr.\n                         random_bst B \\<bind> mrbst_push_down lr x) \\<bind>\n                     (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n        else if k < m + n\n             then pmf_of_set B \\<bind>\n                  (\\<lambda>y.\n                      random_bst A \\<bind>\n                      (\\<lambda>l.\n                          random_bst {z \\<in> B. z < y} \\<bind>\n                          mrbst_push_down l x) \\<bind>\n                      (\\<lambda>l'.\n                          random_bst {z \\<in> B. y < z} \\<bind>\n                          (\\<lambda>rr.\n                              return_pmf \\<langle>l', y, rr\\<rangle>)))\n             else random_bst A \\<bind>\n                  (\\<lambda>l.\n                      random_bst B \\<bind>\n                      (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n    pmf_of_set {0..m + n} \\<bind>\n    (\\<lambda>k.\n        if k < m\n        then pmf_of_set A \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A. z < y} \\<bind>\n                 (\\<lambda>ll.\n                     random_bst\n                      ({x} \\<union> {z \\<in> A. y < z} \\<union> B) \\<bind>\n                     (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n        else if k < m + n\n             then pmf_of_set B \\<bind>\n                  (\\<lambda>y.\n                      random_bst\n                       ({x} \\<union> A \\<union> {z \\<in> B. z < y}) \\<bind>\n                      (\\<lambda>l'.\n                          random_bst {z \\<in> B. y < z} \\<bind>\n                          (\\<lambda>rr.\n                              return_pmf \\<langle>l', y, rr\\<rangle>)))\n             else random_bst A \\<bind>\n                  (\\<lambda>l.\n                      random_bst B \\<bind>\n                      (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "proof (intro bind_pmf_cong refl if_cong psubset)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>xa xaa xb.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa})\\<rbrakk>\n       \\<Longrightarrow> {z \\<in> A. xaa < z} \\<union> B\n                         \\<subset> A \\<union> B\n 2. \\<And>xa xaa xb.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa})\\<rbrakk>\n       \\<Longrightarrow> finite {z \\<in> A. xaa < z}\n 3. \\<And>xa xaa xb y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa});\n        y \\<in> {z \\<in> A. xaa < z}\\<rbrakk>\n       \\<Longrightarrow> y \\<in> A\n 4. \\<And>xa xaa xb y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa});\n        y \\<in> B\\<rbrakk>\n       \\<Longrightarrow> y \\<in> B\n 5. \\<And>xa xaa.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B)\\<rbrakk>\n       \\<Longrightarrow> A \\<union> {z \\<in> B. z < xaa}\n                         \\<subset> A \\<union> B\n 6. \\<And>xa xaa.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B)\\<rbrakk>\n       \\<Longrightarrow> finite {z \\<in> B. z < xaa}\n 7. \\<And>xa xaa y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B); y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> y \\<in> A\n 8. \\<And>xa xaa y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B);\n        y \\<in> {z \\<in> B. z < xaa}\\<rbrakk>\n       \\<Longrightarrow> y \\<in> B", "fix k y"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>xa xaa xb.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa})\\<rbrakk>\n       \\<Longrightarrow> {z \\<in> A. xaa < z} \\<union> B\n                         \\<subset> A \\<union> B\n 2. \\<And>xa xaa xb.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa})\\<rbrakk>\n       \\<Longrightarrow> finite {z \\<in> A. xaa < z}\n 3. \\<And>xa xaa xb y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa});\n        y \\<in> {z \\<in> A. xaa < z}\\<rbrakk>\n       \\<Longrightarrow> y \\<in> A\n 4. \\<And>xa xaa xb y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa});\n        y \\<in> B\\<rbrakk>\n       \\<Longrightarrow> y \\<in> B\n 5. \\<And>xa xaa.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B)\\<rbrakk>\n       \\<Longrightarrow> A \\<union> {z \\<in> B. z < xaa}\n                         \\<subset> A \\<union> B\n 6. \\<And>xa xaa.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B)\\<rbrakk>\n       \\<Longrightarrow> finite {z \\<in> B. z < xaa}\n 7. \\<And>xa xaa y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B); y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> y \\<in> A\n 8. \\<And>xa xaa y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B);\n        y \\<in> {z \\<in> B. z < xaa}\\<rbrakk>\n       \\<Longrightarrow> y \\<in> B", "assume \"k < m\" \"y \\<in> set_pmf (pmf_of_set A)\""], ["proof (state)\nthis:\n  k < m\n  y \\<in> set_pmf (pmf_of_set A)\n\ngoal (8 subgoals):\n 1. \\<And>xa xaa xb.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa})\\<rbrakk>\n       \\<Longrightarrow> {z \\<in> A. xaa < z} \\<union> B\n                         \\<subset> A \\<union> B\n 2. \\<And>xa xaa xb.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa})\\<rbrakk>\n       \\<Longrightarrow> finite {z \\<in> A. xaa < z}\n 3. \\<And>xa xaa xb y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa});\n        y \\<in> {z \\<in> A. xaa < z}\\<rbrakk>\n       \\<Longrightarrow> y \\<in> A\n 4. \\<And>xa xaa xb y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa});\n        y \\<in> B\\<rbrakk>\n       \\<Longrightarrow> y \\<in> B\n 5. \\<And>xa xaa.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B)\\<rbrakk>\n       \\<Longrightarrow> A \\<union> {z \\<in> B. z < xaa}\n                         \\<subset> A \\<union> B\n 6. \\<And>xa xaa.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B)\\<rbrakk>\n       \\<Longrightarrow> finite {z \\<in> B. z < xaa}\n 7. \\<And>xa xaa y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B); y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> y \\<in> A\n 8. \\<And>xa xaa y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B);\n        y \\<in> {z \\<in> B. z < xaa}\\<rbrakk>\n       \\<Longrightarrow> y \\<in> B", "thus \"{z\\<in>A. z > y} \\<union> B \\<subset> A \\<union> B\""], ["proof (prove)\nusing this:\n  k < m\n  y \\<in> set_pmf (pmf_of_set A)\n\ngoal (1 subgoal):\n 1. {z \\<in> A. y < z} \\<union> B \\<subset> A \\<union> B", "using psubset.prems A_ne"], ["proof (prove)\nusing this:\n  k < m\n  y \\<in> set_pmf (pmf_of_set A)\n  finite A\n  finite B\n  ?y \\<in> A \\<Longrightarrow> ?y < x\n  ?y \\<in> B \\<Longrightarrow> x < ?y\n  0 < m \\<Longrightarrow> A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. {z \\<in> A. y < z} \\<union> B \\<subset> A \\<union> B", "by (fastforce dest!: in_set_pmf_of_setD)"], ["proof (state)\nthis:\n  {z \\<in> A. y < z} \\<union> B \\<subset> A \\<union> B\n\ngoal (7 subgoals):\n 1. \\<And>xa xaa xb.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa})\\<rbrakk>\n       \\<Longrightarrow> finite {z \\<in> A. xaa < z}\n 2. \\<And>xa xaa xb y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa});\n        y \\<in> {z \\<in> A. xaa < z}\\<rbrakk>\n       \\<Longrightarrow> y \\<in> A\n 3. \\<And>xa xaa xb y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa});\n        y \\<in> B\\<rbrakk>\n       \\<Longrightarrow> y \\<in> B\n 4. \\<And>xa xaa.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B)\\<rbrakk>\n       \\<Longrightarrow> A \\<union> {z \\<in> B. z < xaa}\n                         \\<subset> A \\<union> B\n 5. \\<And>xa xaa.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B)\\<rbrakk>\n       \\<Longrightarrow> finite {z \\<in> B. z < xaa}\n 6. \\<And>xa xaa y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B); y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> y \\<in> A\n 7. \\<And>xa xaa y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B);\n        y \\<in> {z \\<in> B. z < xaa}\\<rbrakk>\n       \\<Longrightarrow> y \\<in> B", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>xa xaa xb.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa})\\<rbrakk>\n       \\<Longrightarrow> finite {z \\<in> A. xaa < z}\n 2. \\<And>xa xaa xb y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa});\n        y \\<in> {z \\<in> A. xaa < z}\\<rbrakk>\n       \\<Longrightarrow> y \\<in> A\n 3. \\<And>xa xaa xb y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa});\n        y \\<in> B\\<rbrakk>\n       \\<Longrightarrow> y \\<in> B\n 4. \\<And>xa xaa.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B)\\<rbrakk>\n       \\<Longrightarrow> A \\<union> {z \\<in> B. z < xaa}\n                         \\<subset> A \\<union> B\n 5. \\<And>xa xaa.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B)\\<rbrakk>\n       \\<Longrightarrow> finite {z \\<in> B. z < xaa}\n 6. \\<And>xa xaa y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B); y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> y \\<in> A\n 7. \\<And>xa xaa y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B);\n        y \\<in> {z \\<in> B. z < xaa}\\<rbrakk>\n       \\<Longrightarrow> y \\<in> B", "fix k y"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>xa xaa xb.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa})\\<rbrakk>\n       \\<Longrightarrow> finite {z \\<in> A. xaa < z}\n 2. \\<And>xa xaa xb y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa});\n        y \\<in> {z \\<in> A. xaa < z}\\<rbrakk>\n       \\<Longrightarrow> y \\<in> A\n 3. \\<And>xa xaa xb y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa});\n        y \\<in> B\\<rbrakk>\n       \\<Longrightarrow> y \\<in> B\n 4. \\<And>xa xaa.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B)\\<rbrakk>\n       \\<Longrightarrow> A \\<union> {z \\<in> B. z < xaa}\n                         \\<subset> A \\<union> B\n 5. \\<And>xa xaa.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B)\\<rbrakk>\n       \\<Longrightarrow> finite {z \\<in> B. z < xaa}\n 6. \\<And>xa xaa y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B); y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> y \\<in> A\n 7. \\<And>xa xaa y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B);\n        y \\<in> {z \\<in> B. z < xaa}\\<rbrakk>\n       \\<Longrightarrow> y \\<in> B", "assume \"\\<not>k < m\" \"k < m + n\" \"y \\<in> set_pmf (pmf_of_set B)\""], ["proof (state)\nthis:\n  \\<not> k < m\n  k < m + n\n  y \\<in> set_pmf (pmf_of_set B)\n\ngoal (7 subgoals):\n 1. \\<And>xa xaa xb.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa})\\<rbrakk>\n       \\<Longrightarrow> finite {z \\<in> A. xaa < z}\n 2. \\<And>xa xaa xb y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa});\n        y \\<in> {z \\<in> A. xaa < z}\\<rbrakk>\n       \\<Longrightarrow> y \\<in> A\n 3. \\<And>xa xaa xb y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa});\n        y \\<in> B\\<rbrakk>\n       \\<Longrightarrow> y \\<in> B\n 4. \\<And>xa xaa.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B)\\<rbrakk>\n       \\<Longrightarrow> A \\<union> {z \\<in> B. z < xaa}\n                         \\<subset> A \\<union> B\n 5. \\<And>xa xaa.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B)\\<rbrakk>\n       \\<Longrightarrow> finite {z \\<in> B. z < xaa}\n 6. \\<And>xa xaa y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B); y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> y \\<in> A\n 7. \\<And>xa xaa y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B);\n        y \\<in> {z \\<in> B. z < xaa}\\<rbrakk>\n       \\<Longrightarrow> y \\<in> B", "thus \"A \\<union> {z\\<in>B. z < y} \\<subset> A \\<union> B\""], ["proof (prove)\nusing this:\n  \\<not> k < m\n  k < m + n\n  y \\<in> set_pmf (pmf_of_set B)\n\ngoal (1 subgoal):\n 1. A \\<union> {z \\<in> B. z < y} \\<subset> A \\<union> B", "using psubset.prems B_ne"], ["proof (prove)\nusing this:\n  \\<not> k < m\n  k < m + n\n  y \\<in> set_pmf (pmf_of_set B)\n  finite A\n  finite B\n  ?y \\<in> A \\<Longrightarrow> ?y < x\n  ?y \\<in> B \\<Longrightarrow> x < ?y\n  0 < n \\<Longrightarrow> B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. A \\<union> {z \\<in> B. z < y} \\<subset> A \\<union> B", "by (fastforce dest!: in_set_pmf_of_setD)"], ["proof (state)\nthis:\n  A \\<union> {z \\<in> B. z < y} \\<subset> A \\<union> B\n\ngoal (6 subgoals):\n 1. \\<And>xa xaa xb.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa})\\<rbrakk>\n       \\<Longrightarrow> finite {z \\<in> A. xaa < z}\n 2. \\<And>xa xaa xb y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa});\n        y \\<in> {z \\<in> A. xaa < z}\\<rbrakk>\n       \\<Longrightarrow> y \\<in> A\n 3. \\<And>xa xaa xb y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); xa < m;\n        xaa \\<in> set_pmf (pmf_of_set A);\n        xb \\<in> set_pmf (random_bst {z \\<in> A. z < xaa});\n        y \\<in> B\\<rbrakk>\n       \\<Longrightarrow> y \\<in> B\n 4. \\<And>xa xaa.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B)\\<rbrakk>\n       \\<Longrightarrow> finite {z \\<in> B. z < xaa}\n 5. \\<And>xa xaa y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B); y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> y \\<in> A\n 6. \\<And>xa xaa y.\n       \\<lbrakk>finite A; finite B;\n        \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y;\n        0 < m \\<Longrightarrow> A \\<noteq> {};\n        0 < n \\<Longrightarrow> B \\<noteq> {};\n        xa \\<in> set_pmf (pmf_of_set {0..m + n}); \\<not> xa < m; xa < m + n;\n        xaa \\<in> set_pmf (pmf_of_set B);\n        y \\<in> {z \\<in> B. z < xaa}\\<rbrakk>\n       \\<Longrightarrow> y \\<in> B", "qed auto"], ["proof (state)\nthis:\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then pmf_of_set A \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A. z < y} \\<bind>\n               (\\<lambda>ll.\n                   random_bst {z \\<in> A. y < z} \\<bind>\n                   (\\<lambda>lr.\n                       random_bst B \\<bind> mrbst_push_down lr x) \\<bind>\n                   (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n      else if k < m + n\n           then pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst A \\<bind>\n                    (\\<lambda>l.\n                        random_bst {z \\<in> B. z < y} \\<bind>\n                        mrbst_push_down l x) \\<bind>\n                    (\\<lambda>l'.\n                        random_bst {z \\<in> B. y < z} \\<bind>\n                        (\\<lambda>rr.\n                            return_pmf \\<langle>l', y, rr\\<rangle>)))\n           else random_bst A \\<bind>\n                (\\<lambda>l.\n                    random_bst B \\<bind>\n                    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then pmf_of_set A \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A. z < y} \\<bind>\n               (\\<lambda>ll.\n                   random_bst\n                    ({x} \\<union> {z \\<in> A. y < z} \\<union> B) \\<bind>\n                   (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n      else if k < m + n\n           then pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst\n                     ({x} \\<union> A \\<union> {z \\<in> B. z < y}) \\<bind>\n                    (\\<lambda>l'.\n                        random_bst {z \\<in> B. y < z} \\<bind>\n                        (\\<lambda>rr.\n                            return_pmf \\<langle>l', y, rr\\<rangle>)))\n           else random_bst A \\<bind>\n                (\\<lambda>l.\n                    random_bst B \\<bind>\n                    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "also"], ["proof (state)\nthis:\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then pmf_of_set A \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A. z < y} \\<bind>\n               (\\<lambda>ll.\n                   random_bst {z \\<in> A. y < z} \\<bind>\n                   (\\<lambda>lr.\n                       random_bst B \\<bind> mrbst_push_down lr x) \\<bind>\n                   (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n      else if k < m + n\n           then pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst A \\<bind>\n                    (\\<lambda>l.\n                        random_bst {z \\<in> B. z < y} \\<bind>\n                        mrbst_push_down l x) \\<bind>\n                    (\\<lambda>l'.\n                        random_bst {z \\<in> B. y < z} \\<bind>\n                        (\\<lambda>rr.\n                            return_pmf \\<langle>l', y, rr\\<rangle>)))\n           else random_bst A \\<bind>\n                (\\<lambda>l.\n                    random_bst B \\<bind>\n                    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then pmf_of_set A \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A. z < y} \\<bind>\n               (\\<lambda>ll.\n                   random_bst\n                    ({x} \\<union> {z \\<in> A. y < z} \\<union> B) \\<bind>\n                   (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n      else if k < m + n\n           then pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst\n                     ({x} \\<union> A \\<union> {z \\<in> B. z < y}) \\<bind>\n                    (\\<lambda>l'.\n                        random_bst {z \\<in> B. y < z} \\<bind>\n                        (\\<lambda>rr.\n                            return_pmf \\<langle>l', y, rr\\<rangle>)))\n           else random_bst A \\<bind>\n                (\\<lambda>l.\n                    random_bst B \\<bind>\n                    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "have \"\\<dots> = do {k \\<leftarrow> pmf_of_set {0..m + n};\n                        if k < m then do {\n                          y \\<leftarrow> pmf_of_set A;\n                          ll \\<leftarrow> random_bst {z\\<in>{x} \\<union> A \\<union> B. z < y};\n                          r' \\<leftarrow> random_bst {z\\<in>{x} \\<union> A \\<union> B. z > y};\n                          return_pmf \\<langle>ll, y, r'\\<rangle>\n                        } else if k < m + n then do {\n                          y \\<leftarrow> pmf_of_set B;\n                          l' \\<leftarrow> random_bst {z\\<in>{x} \\<union> A \\<union> B. z < y};\n                          rr \\<leftarrow> random_bst {z\\<in>{x} \\<union> A \\<union> B. z > y};\n                          return_pmf \\<langle>l', y, rr\\<rangle>\n                        } else do {\n                          l \\<leftarrow> random_bst {z\\<in>{x} \\<union> A \\<union> B. z < x};\n                          r \\<leftarrow> random_bst {z\\<in>{x} \\<union> A \\<union> B. z > x};\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        }\n                       }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set {0..m + n} \\<bind>\n    (\\<lambda>k.\n        if k < m\n        then pmf_of_set A \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A. z < y} \\<bind>\n                 (\\<lambda>ll.\n                     random_bst\n                      ({x} \\<union> {z \\<in> A. y < z} \\<union> B) \\<bind>\n                     (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n        else if k < m + n\n             then pmf_of_set B \\<bind>\n                  (\\<lambda>y.\n                      random_bst\n                       ({x} \\<union> A \\<union> {z \\<in> B. z < y}) \\<bind>\n                      (\\<lambda>l'.\n                          random_bst {z \\<in> B. y < z} \\<bind>\n                          (\\<lambda>rr.\n                              return_pmf \\<langle>l', y, rr\\<rangle>)))\n             else random_bst A \\<bind>\n                  (\\<lambda>l.\n                      random_bst B \\<bind>\n                      (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n    pmf_of_set {0..m + n} \\<bind>\n    (\\<lambda>k.\n        if k < m\n        then pmf_of_set A \\<bind>\n             (\\<lambda>y.\n                 random_bst\n                  {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>ll.\n                     random_bst\n                      {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                     (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n        else if k < m + n\n             then pmf_of_set B \\<bind>\n                  (\\<lambda>y.\n                      random_bst\n                       {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                      (\\<lambda>l'.\n                          random_bst\n                           {z \\<in> {x} \\<union> A \\<union> B.\n                            y < z} \\<bind>\n                          (\\<lambda>rr.\n                              return_pmf \\<langle>l', y, rr\\<rangle>)))\n             else random_bst\n                   {z \\<in> {x} \\<union> A \\<union> B. z < x} \\<bind>\n                  (\\<lambda>l.\n                      random_bst\n                       {z \\<in> {x} \\<union> A \\<union> B. x < z} \\<bind>\n                      (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "using psubset.prems A_ne B_ne"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  ?y \\<in> A \\<Longrightarrow> ?y < x\n  ?y \\<in> B \\<Longrightarrow> x < ?y\n  0 < m \\<Longrightarrow> A \\<noteq> {}\n  0 < n \\<Longrightarrow> B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. pmf_of_set {0..m + n} \\<bind>\n    (\\<lambda>k.\n        if k < m\n        then pmf_of_set A \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A. z < y} \\<bind>\n                 (\\<lambda>ll.\n                     random_bst\n                      ({x} \\<union> {z \\<in> A. y < z} \\<union> B) \\<bind>\n                     (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n        else if k < m + n\n             then pmf_of_set B \\<bind>\n                  (\\<lambda>y.\n                      random_bst\n                       ({x} \\<union> A \\<union> {z \\<in> B. z < y}) \\<bind>\n                      (\\<lambda>l'.\n                          random_bst {z \\<in> B. y < z} \\<bind>\n                          (\\<lambda>rr.\n                              return_pmf \\<langle>l', y, rr\\<rangle>)))\n             else random_bst A \\<bind>\n                  (\\<lambda>l.\n                      random_bst B \\<bind>\n                      (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n    pmf_of_set {0..m + n} \\<bind>\n    (\\<lambda>k.\n        if k < m\n        then pmf_of_set A \\<bind>\n             (\\<lambda>y.\n                 random_bst\n                  {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>ll.\n                     random_bst\n                      {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                     (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n        else if k < m + n\n             then pmf_of_set B \\<bind>\n                  (\\<lambda>y.\n                      random_bst\n                       {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                      (\\<lambda>l'.\n                          random_bst\n                           {z \\<in> {x} \\<union> A \\<union> B.\n                            y < z} \\<bind>\n                          (\\<lambda>rr.\n                              return_pmf \\<langle>l', y, rr\\<rangle>)))\n             else random_bst\n                   {z \\<in> {x} \\<union> A \\<union> B. z < x} \\<bind>\n                  (\\<lambda>l.\n                      random_bst\n                       {z \\<in> {x} \\<union> A \\<union> B. x < z} \\<bind>\n                      (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))", "by (intro bind_pmf_cong if_cong refl arg_cong[of _ _ random_bst];\n          force dest: psubset.prems(3,4))"], ["proof (state)\nthis:\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then pmf_of_set A \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A. z < y} \\<bind>\n               (\\<lambda>ll.\n                   random_bst\n                    ({x} \\<union> {z \\<in> A. y < z} \\<union> B) \\<bind>\n                   (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n      else if k < m + n\n           then pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst\n                     ({x} \\<union> A \\<union> {z \\<in> B. z < y}) \\<bind>\n                    (\\<lambda>l'.\n                        random_bst {z \\<in> B. y < z} \\<bind>\n                        (\\<lambda>rr.\n                            return_pmf \\<langle>l', y, rr\\<rangle>)))\n           else random_bst A \\<bind>\n                (\\<lambda>l.\n                    random_bst B \\<bind>\n                    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then pmf_of_set A \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>ll.\n                   random_bst\n                    {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n      else if k < m + n\n           then pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst\n                     {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                    (\\<lambda>l'.\n                        random_bst\n                         {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                        (\\<lambda>rr.\n                            return_pmf \\<langle>l', y, rr\\<rangle>)))\n           else random_bst\n                 {z \\<in> {x} \\<union> A \\<union> B. z < x} \\<bind>\n                (\\<lambda>l.\n                    random_bst\n                     {z \\<in> {x} \\<union> A \\<union> B. x < z} \\<bind>\n                    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "also"], ["proof (state)\nthis:\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then pmf_of_set A \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A. z < y} \\<bind>\n               (\\<lambda>ll.\n                   random_bst\n                    ({x} \\<union> {z \\<in> A. y < z} \\<union> B) \\<bind>\n                   (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n      else if k < m + n\n           then pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst\n                     ({x} \\<union> A \\<union> {z \\<in> B. z < y}) \\<bind>\n                    (\\<lambda>l'.\n                        random_bst {z \\<in> B. y < z} \\<bind>\n                        (\\<lambda>rr.\n                            return_pmf \\<langle>l', y, rr\\<rangle>)))\n           else random_bst A \\<bind>\n                (\\<lambda>l.\n                    random_bst B \\<bind>\n                    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then pmf_of_set A \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>ll.\n                   random_bst\n                    {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n      else if k < m + n\n           then pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst\n                     {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                    (\\<lambda>l'.\n                        random_bst\n                         {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                        (\\<lambda>rr.\n                            return_pmf \\<langle>l', y, rr\\<rangle>)))\n           else random_bst\n                 {z \\<in> {x} \\<union> A \\<union> B. z < x} \\<bind>\n                (\\<lambda>l.\n                    random_bst\n                     {z \\<in> {x} \\<union> A \\<union> B. x < z} \\<bind>\n                    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "have \"\\<dots> = do {k \\<leftarrow> pmf_of_set {0..m + n};\n                        if k < m then do {\n                          y \\<leftarrow> pmf_of_set A;\n                          ll \\<leftarrow> random_bst {z\\<in>{x} \\<union> A \\<union> B. z < y};\n                          r' \\<leftarrow> random_bst {z\\<in>{x} \\<union> A \\<union> B. z > y};\n                          return_pmf \\<langle>ll, y, r'\\<rangle>\n                        } else if k < m + n then do {\n                          y \\<leftarrow> pmf_of_set B;\n                          l' \\<leftarrow> random_bst {z\\<in>{x} \\<union> A \\<union> B. z < y};\n                          rr \\<leftarrow> random_bst {z\\<in>{x} \\<union> A \\<union> B. z > y};\n                          return_pmf \\<langle>l', y, rr\\<rangle>\n                        } else do {\n                          y \\<leftarrow> pmf_of_set {x};\n                          l \\<leftarrow> random_bst {z\\<in>{x} \\<union> A \\<union> B. z < y};\n                          r \\<leftarrow> random_bst {z\\<in>{x} \\<union> A \\<union> B. z > y};\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        }\n                       }\" (is \"_ = ?X {0..m+n}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set {0..m + n} \\<bind>\n    (\\<lambda>k.\n        if k < m\n        then pmf_of_set A \\<bind>\n             (\\<lambda>y.\n                 random_bst\n                  {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>ll.\n                     random_bst\n                      {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                     (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n        else if k < m + n\n             then pmf_of_set B \\<bind>\n                  (\\<lambda>y.\n                      random_bst\n                       {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                      (\\<lambda>l'.\n                          random_bst\n                           {z \\<in> {x} \\<union> A \\<union> B.\n                            y < z} \\<bind>\n                          (\\<lambda>rr.\n                              return_pmf \\<langle>l', y, rr\\<rangle>)))\n             else random_bst\n                   {z \\<in> {x} \\<union> A \\<union> B. z < x} \\<bind>\n                  (\\<lambda>l.\n                      random_bst\n                       {z \\<in> {x} \\<union> A \\<union> B. x < z} \\<bind>\n                      (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n    pmf_of_set {0..m + n} \\<bind>\n    (\\<lambda>k.\n        if k < m\n        then pmf_of_set A \\<bind>\n             (\\<lambda>y.\n                 random_bst\n                  {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>ll.\n                     random_bst\n                      {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                     (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n        else if k < m + n\n             then pmf_of_set B \\<bind>\n                  (\\<lambda>y.\n                      random_bst\n                       {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                      (\\<lambda>l'.\n                          random_bst\n                           {z \\<in> {x} \\<union> A \\<union> B.\n                            y < z} \\<bind>\n                          (\\<lambda>rr.\n                              return_pmf \\<langle>l', y, rr\\<rangle>)))\n             else pmf_of_set {x} \\<bind>\n                  (\\<lambda>y.\n                      random_bst\n                       {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                      (\\<lambda>l.\n                          random_bst\n                           {z \\<in> {x} \\<union> A \\<union> B.\n                            y < z} \\<bind>\n                          (\\<lambda>r.\n                              return_pmf \\<langle>l, x, r\\<rangle>))))", "by (simp add: pmf_of_set_singleton cong: if_cong)"], ["proof (state)\nthis:\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then pmf_of_set A \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>ll.\n                   random_bst\n                    {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n      else if k < m + n\n           then pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst\n                     {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                    (\\<lambda>l'.\n                        random_bst\n                         {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                        (\\<lambda>rr.\n                            return_pmf \\<langle>l', y, rr\\<rangle>)))\n           else random_bst\n                 {z \\<in> {x} \\<union> A \\<union> B. z < x} \\<bind>\n                (\\<lambda>l.\n                    random_bst\n                     {z \\<in> {x} \\<union> A \\<union> B. x < z} \\<bind>\n                    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then pmf_of_set A \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>ll.\n                   random_bst\n                    {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n      else if k < m + n\n           then pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst\n                     {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                    (\\<lambda>l'.\n                        random_bst\n                         {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                        (\\<lambda>rr.\n                            return_pmf \\<langle>l', y, rr\\<rangle>)))\n           else pmf_of_set {x} \\<bind>\n                (\\<lambda>y.\n                    random_bst\n                     {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                    (\\<lambda>l.\n                        random_bst\n                         {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                        (\\<lambda>r.\n                            return_pmf \\<langle>l, x, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "also"], ["proof (state)\nthis:\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then pmf_of_set A \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>ll.\n                   random_bst\n                    {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n      else if k < m + n\n           then pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst\n                     {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                    (\\<lambda>l'.\n                        random_bst\n                         {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                        (\\<lambda>rr.\n                            return_pmf \\<langle>l', y, rr\\<rangle>)))\n           else random_bst\n                 {z \\<in> {x} \\<union> A \\<union> B. z < x} \\<bind>\n                (\\<lambda>l.\n                    random_bst\n                     {z \\<in> {x} \\<union> A \\<union> B. x < z} \\<bind>\n                    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))) =\n  pmf_of_set {0..m + n} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then pmf_of_set A \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>ll.\n                   random_bst\n                    {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n      else if k < m + n\n           then pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst\n                     {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                    (\\<lambda>l'.\n                        random_bst\n                         {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                        (\\<lambda>rr.\n                            return_pmf \\<langle>l', y, rr\\<rangle>)))\n           else pmf_of_set {x} \\<bind>\n                (\\<lambda>y.\n                    random_bst\n                     {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                    (\\<lambda>l.\n                        random_bst\n                         {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                        (\\<lambda>r.\n                            return_pmf \\<langle>l, x, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "have \"{0..m + n} = {..<card (A \\<union> B \\<union> {x})}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..m + n} = {..<card (A \\<union> B \\<union> {x})}", "using psubset.prems"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  ?y \\<in> A \\<Longrightarrow> ?y < x\n  ?y \\<in> B \\<Longrightarrow> x < ?y\n\ngoal (1 subgoal):\n 1. {0..m + n} = {..<card (A \\<union> B \\<union> {x})}", "by (subst card_Un_disjoint, simp, simp, force)+\n         (auto simp: m_def n_def)"], ["proof (state)\nthis:\n  {0..m + n} = {..<card (A \\<union> B \\<union> {x})}\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "also"], ["proof (state)\nthis:\n  {0..m + n} = {..<card (A \\<union> B \\<union> {x})}\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "have \"?X \\<dots> = do {y \\<leftarrow> pmf_of_set ({x} \\<union> A \\<union> B);\n                           l \\<leftarrow> random_bst {z\\<in>{x} \\<union> A \\<union> B. z < y};\n                           r \\<leftarrow> random_bst {z\\<in>{x} \\<union> A \\<union> B. z > y};\n                           return_pmf \\<langle>l, y, r\\<rangle>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set {..<card (A \\<union> B \\<union> {x})} \\<bind>\n    (\\<lambda>k.\n        if k < m\n        then pmf_of_set A \\<bind>\n             (\\<lambda>y.\n                 random_bst\n                  {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>ll.\n                     random_bst\n                      {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                     (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n        else if k < m + n\n             then pmf_of_set B \\<bind>\n                  (\\<lambda>y.\n                      random_bst\n                       {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                      (\\<lambda>l'.\n                          random_bst\n                           {z \\<in> {x} \\<union> A \\<union> B.\n                            y < z} \\<bind>\n                          (\\<lambda>rr.\n                              return_pmf \\<langle>l', y, rr\\<rangle>)))\n             else pmf_of_set {x} \\<bind>\n                  (\\<lambda>y.\n                      random_bst\n                       {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                      (\\<lambda>l.\n                          random_bst\n                           {z \\<in> {x} \\<union> A \\<union> B.\n                            y < z} \\<bind>\n                          (\\<lambda>r.\n                              return_pmf \\<langle>l, x, r\\<rangle>)))) =\n    pmf_of_set ({x} \\<union> A \\<union> B) \\<bind>\n    (\\<lambda>y.\n        random_bst {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n        (\\<lambda>l.\n            random_bst {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>)))", "unfolding m_def n_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set {..<card (A \\<union> B \\<union> {x})} \\<bind>\n    (\\<lambda>k.\n        if k < card A\n        then pmf_of_set A \\<bind>\n             (\\<lambda>y.\n                 random_bst\n                  {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>ll.\n                     random_bst\n                      {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                     (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n        else if k < card A + card B\n             then pmf_of_set B \\<bind>\n                  (\\<lambda>y.\n                      random_bst\n                       {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                      (\\<lambda>l'.\n                          random_bst\n                           {z \\<in> {x} \\<union> A \\<union> B.\n                            y < z} \\<bind>\n                          (\\<lambda>rr.\n                              return_pmf \\<langle>l', y, rr\\<rangle>)))\n             else pmf_of_set {x} \\<bind>\n                  (\\<lambda>y.\n                      random_bst\n                       {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                      (\\<lambda>l.\n                          random_bst\n                           {z \\<in> {x} \\<union> A \\<union> B.\n                            y < z} \\<bind>\n                          (\\<lambda>r.\n                              return_pmf \\<langle>l, x, r\\<rangle>)))) =\n    pmf_of_set ({x} \\<union> A \\<union> B) \\<bind>\n    (\\<lambda>y.\n        random_bst {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n        (\\<lambda>l.\n            random_bst {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>)))", "using psubset.prems"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  ?y \\<in> A \\<Longrightarrow> ?y < x\n  ?y \\<in> B \\<Longrightarrow> x < ?y\n\ngoal (1 subgoal):\n 1. pmf_of_set {..<card (A \\<union> B \\<union> {x})} \\<bind>\n    (\\<lambda>k.\n        if k < card A\n        then pmf_of_set A \\<bind>\n             (\\<lambda>y.\n                 random_bst\n                  {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>ll.\n                     random_bst\n                      {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                     (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n        else if k < card A + card B\n             then pmf_of_set B \\<bind>\n                  (\\<lambda>y.\n                      random_bst\n                       {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                      (\\<lambda>l'.\n                          random_bst\n                           {z \\<in> {x} \\<union> A \\<union> B.\n                            y < z} \\<bind>\n                          (\\<lambda>rr.\n                              return_pmf \\<langle>l', y, rr\\<rangle>)))\n             else pmf_of_set {x} \\<bind>\n                  (\\<lambda>y.\n                      random_bst\n                       {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                      (\\<lambda>l.\n                          random_bst\n                           {z \\<in> {x} \\<union> A \\<union> B.\n                            y < z} \\<bind>\n                          (\\<lambda>r.\n                              return_pmf \\<langle>l, x, r\\<rangle>)))) =\n    pmf_of_set ({x} \\<union> A \\<union> B) \\<bind>\n    (\\<lambda>y.\n        random_bst {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n        (\\<lambda>l.\n            random_bst {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>)))", "by (subst pmf_of_set_3way_split [symmetric])\n         (auto dest!: psubset.prems(3,4) cong: if_cong intro: bind_pmf_cong)"], ["proof (state)\nthis:\n  pmf_of_set {..<card (A \\<union> B \\<union> {x})} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then pmf_of_set A \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>ll.\n                   random_bst\n                    {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n      else if k < m + n\n           then pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst\n                     {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                    (\\<lambda>l'.\n                        random_bst\n                         {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                        (\\<lambda>rr.\n                            return_pmf \\<langle>l', y, rr\\<rangle>)))\n           else pmf_of_set {x} \\<bind>\n                (\\<lambda>y.\n                    random_bst\n                     {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                    (\\<lambda>l.\n                        random_bst\n                         {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                        (\\<lambda>r.\n                            return_pmf \\<langle>l, x, r\\<rangle>)))) =\n  pmf_of_set ({x} \\<union> A \\<union> B) \\<bind>\n  (\\<lambda>y.\n      random_bst {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n      (\\<lambda>l.\n          random_bst {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "also"], ["proof (state)\nthis:\n  pmf_of_set {..<card (A \\<union> B \\<union> {x})} \\<bind>\n  (\\<lambda>k.\n      if k < m\n      then pmf_of_set A \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>ll.\n                   random_bst\n                    {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r'. return_pmf \\<langle>ll, y, r'\\<rangle>)))\n      else if k < m + n\n           then pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst\n                     {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                    (\\<lambda>l'.\n                        random_bst\n                         {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                        (\\<lambda>rr.\n                            return_pmf \\<langle>l', y, rr\\<rangle>)))\n           else pmf_of_set {x} \\<bind>\n                (\\<lambda>y.\n                    random_bst\n                     {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n                    (\\<lambda>l.\n                        random_bst\n                         {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n                        (\\<lambda>r.\n                            return_pmf \\<langle>l, x, r\\<rangle>)))) =\n  pmf_of_set ({x} \\<union> A \\<union> B) \\<bind>\n  (\\<lambda>y.\n      random_bst {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n      (\\<lambda>l.\n          random_bst {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "have \"\\<dots> = random_bst ({x} \\<union> A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set ({x} \\<union> A \\<union> B) \\<bind>\n    (\\<lambda>y.\n        random_bst {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n        (\\<lambda>l.\n            random_bst {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))) =\n    random_bst ({x} \\<union> A \\<union> B)", "using psubset.prems"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  ?y \\<in> A \\<Longrightarrow> ?y < x\n  ?y \\<in> B \\<Longrightarrow> x < ?y\n\ngoal (1 subgoal):\n 1. pmf_of_set ({x} \\<union> A \\<union> B) \\<bind>\n    (\\<lambda>y.\n        random_bst {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n        (\\<lambda>l.\n            random_bst {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n            (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))) =\n    random_bst ({x} \\<union> A \\<union> B)", "by (simp add: random_bst_reduce)"], ["proof (state)\nthis:\n  pmf_of_set ({x} \\<union> A \\<union> B) \\<bind>\n  (\\<lambda>y.\n      random_bst {z \\<in> {x} \\<union> A \\<union> B. z < y} \\<bind>\n      (\\<lambda>l.\n          random_bst {z \\<in> {x} \\<union> A \\<union> B. y < z} \\<bind>\n          (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))) =\n  random_bst ({x} \\<union> A \\<union> B)\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           \\<lbrakk>Aa \\<union> Ba \\<subset> A \\<union> B; finite Aa;\n            finite Ba; \\<And>y. y \\<in> Aa \\<Longrightarrow> y < x;\n            \\<And>y. y \\<in> Ba \\<Longrightarrow> x < y\\<rbrakk>\n           \\<Longrightarrow> random_bst Aa \\<bind>\n                             (\\<lambda>l.\n                                 random_bst Ba \\<bind>\n                                 mrbst_push_down l x) =\n                             random_bst ({x} \\<union> Aa \\<union> Ba);\n        finite A; finite B; \\<And>y. y \\<in> A \\<Longrightarrow> y < x;\n        \\<And>y. y \\<in> B \\<Longrightarrow> x < y\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>l.\n                             random_bst B \\<bind> mrbst_push_down l x) =\n                         random_bst ({x} \\<union> A \\<union> B)", "finally"], ["proof (chain)\npicking this:\n  random_bst A \\<bind>\n  (\\<lambda>l. random_bst B \\<bind> mrbst_push_down l x) =\n  random_bst ({x} \\<union> A \\<union> B)", "show ?case"], ["proof (prove)\nusing this:\n  random_bst A \\<bind>\n  (\\<lambda>l. random_bst B \\<bind> mrbst_push_down l x) =\n  random_bst ({x} \\<union> A \\<union> B)\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>l. random_bst B \\<bind> mrbst_push_down l x) =\n    random_bst ({x} \\<union> A \\<union> B)", "."], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>l. random_bst B \\<bind> mrbst_push_down l x) =\n  random_bst ({x} \\<union> A \\<union> B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>l. random_bst B \\<bind> mrbst_push_down l x) =\n  random_bst ({x} \\<union> A \\<union> B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mrbst_push_down_correct':\n  assumes \"finite (A :: 'a :: linorder set)\" \"x \\<in> A\"\n  shows   \"do {l \\<leftarrow> random_bst {y\\<in>A. y < x}; r \\<leftarrow> random_bst {y\\<in>A. y > x}; mrbst_push_down l x r} =\n             random_bst A\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst {y \\<in> A. y < x} \\<bind>\n    (\\<lambda>l.\n        random_bst {y \\<in> A. x < y} \\<bind> mrbst_push_down l x) =\n    random_bst A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. random_bst {y \\<in> A. y < x} \\<bind>\n    (\\<lambda>l.\n        random_bst {y \\<in> A. x < y} \\<bind> mrbst_push_down l x) =\n    random_bst A", "have \"?lhs = random_bst ({x} \\<union> {y\\<in>A. y < x} \\<union> {y\\<in>A. y > x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst {y \\<in> A. y < x} \\<bind>\n    (\\<lambda>l.\n        random_bst {y \\<in> A. x < y} \\<bind> mrbst_push_down l x) =\n    random_bst ({x} \\<union> {y \\<in> A. y < x} \\<union> {y \\<in> A. x < y})", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. random_bst {y \\<in> A. y < x} \\<bind>\n    (\\<lambda>l.\n        random_bst {y \\<in> A. x < y} \\<bind> mrbst_push_down l x) =\n    random_bst ({x} \\<union> {y \\<in> A. y < x} \\<union> {y \\<in> A. x < y})", "by (intro mrbst_push_down_correct) auto"], ["proof (state)\nthis:\n  random_bst {y \\<in> A. y < x} \\<bind>\n  (\\<lambda>l. random_bst {y \\<in> A. x < y} \\<bind> mrbst_push_down l x) =\n  random_bst ({x} \\<union> {y \\<in> A. y < x} \\<union> {y \\<in> A. x < y})\n\ngoal (1 subgoal):\n 1. random_bst {y \\<in> A. y < x} \\<bind>\n    (\\<lambda>l.\n        random_bst {y \\<in> A. x < y} \\<bind> mrbst_push_down l x) =\n    random_bst A", "also"], ["proof (state)\nthis:\n  random_bst {y \\<in> A. y < x} \\<bind>\n  (\\<lambda>l. random_bst {y \\<in> A. x < y} \\<bind> mrbst_push_down l x) =\n  random_bst ({x} \\<union> {y \\<in> A. y < x} \\<union> {y \\<in> A. x < y})\n\ngoal (1 subgoal):\n 1. random_bst {y \\<in> A. y < x} \\<bind>\n    (\\<lambda>l.\n        random_bst {y \\<in> A. x < y} \\<bind> mrbst_push_down l x) =\n    random_bst A", "have \"{x} \\<union> {y\\<in>A. y < x} \\<union> {y\\<in>A. y > x} = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x} \\<union> {y \\<in> A. y < x} \\<union> {y \\<in> A. x < y} = A", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. {x} \\<union> {y \\<in> A. y < x} \\<union> {y \\<in> A. x < y} = A", "by auto"], ["proof (state)\nthis:\n  {x} \\<union> {y \\<in> A. y < x} \\<union> {y \\<in> A. x < y} = A\n\ngoal (1 subgoal):\n 1. random_bst {y \\<in> A. y < x} \\<bind>\n    (\\<lambda>l.\n        random_bst {y \\<in> A. x < y} \\<bind> mrbst_push_down l x) =\n    random_bst A", "finally"], ["proof (chain)\npicking this:\n  random_bst {y \\<in> A. y < x} \\<bind>\n  (\\<lambda>l. random_bst {y \\<in> A. x < y} \\<bind> mrbst_push_down l x) =\n  random_bst A", "show ?thesis"], ["proof (prove)\nusing this:\n  random_bst {y \\<in> A. y < x} \\<bind>\n  (\\<lambda>l. random_bst {y \\<in> A. x < y} \\<bind> mrbst_push_down l x) =\n  random_bst A\n\ngoal (1 subgoal):\n 1. random_bst {y \\<in> A. y < x} \\<bind>\n    (\\<lambda>l.\n        random_bst {y \\<in> A. x < y} \\<bind> mrbst_push_down l x) =\n    random_bst A", "."], ["proof (state)\nthis:\n  random_bst {y \\<in> A. y < x} \\<bind>\n  (\\<lambda>l. random_bst {y \\<in> A. x < y} \\<bind> mrbst_push_down l x) =\n  random_bst A\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Intersection and Difference\\<close>"], ["", "text \\<open>\n  The algorithms for intersection and difference of two trees are almost identical; the only\n  difference is that the ``if'' statement at the end of the recursive case is flipped. We\n  therefore introduce a generic intersection/difference operation first and prove its correctness\n  to avoid duplication.\n\\<close>"], ["", "fun mrbst_inter_diff where\n  \"mrbst_inter_diff _ \\<langle>\\<rangle> _ = return_pmf \\<langle>\\<rangle>\"\n| \"mrbst_inter_diff b \\<langle>l1, x, r1\\<rangle> t2 =\n     (case split_bst' x t2 of (sep, l2, r2) \\<Rightarrow>\n        do {\n          l \\<leftarrow> mrbst_inter_diff b l1 l2;\n          r \\<leftarrow> mrbst_inter_diff b r1 r2;\n          if sep = b then return_pmf \\<langle>l, x, r\\<rangle> else mrbst_join l r\n        })\""], ["", "lemma mrbst_inter_diff_reduce:\n  \"mrbst_inter_diff b \\<langle>l1, x, r1\\<rangle> =\n     (\\<lambda>t2. case split_bst' x t2 of (sep, l2, r2) \\<Rightarrow>\n        do {\n           l \\<leftarrow> mrbst_inter_diff b l1 l2;\n           r \\<leftarrow> mrbst_inter_diff b r1 r2;\n           if sep = b then return_pmf \\<langle>l, x, r\\<rangle> else mrbst_join l r\n         })\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_inter_diff b \\<langle>l1, x, r1\\<rangle> =\n    (\\<lambda>t2.\n        case split_bst' x t2 of\n        (sep, l2, r2) \\<Rightarrow>\n          mrbst_inter_diff b l1 l2 \\<bind>\n          (\\<lambda>l.\n              mrbst_inter_diff b r1 r2 \\<bind>\n              (\\<lambda>r.\n                  if sep = b then return_pmf \\<langle>l, x, r\\<rangle>\n                  else mrbst_join l r)))", "by (rule ext) simp"], ["", "lemma mrbst_inter_diff_Leaf_left [simp]:\n  \"mrbst_inter_diff b \\<langle>\\<rangle> = (\\<lambda>_. return_pmf \\<langle>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_inter_diff b \\<langle>\\<rangle> =\n    (\\<lambda>_. return_pmf \\<langle>\\<rangle>)", "by (simp add: fun_eq_iff)"], ["", "lemma mrbst_inter_diff_Leaf_right [simp]:\n  \"mrbst_inter_diff b (t1 :: 'a :: linorder tree) \\<langle>\\<rangle> = return_pmf (if b then \\<langle>\\<rangle> else t1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_inter_diff b t1 \\<langle>\\<rangle> =\n    return_pmf (if b then \\<langle>\\<rangle> else t1)", "by (induction t1) (auto simp: bind_return_pmf)"], ["", "lemma\n  fixes t1 t2 :: \"'a :: linorder tree\" and b :: bool\n  defines \"setop \\<equiv> (if b then (\\<inter>) else (-) :: 'a set \\<Rightarrow> _)\"\n  assumes \"t' \\<in> set_pmf (mrbst_inter_diff b t1 t2)\" \"bst t1\" \"bst t2\"\n  shows   bst_mrbst_inter_diff: \"bst t'\"\n    and   set_mrbst_inter_diff: \"set_tree t' = setop (set_tree t1) (set_tree t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t' &&& set_tree t' = setop (set_tree t1) (set_tree t2)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. bst t'\n 2. set_tree t' = setop (set_tree t1) (set_tree t2)", "write setop (infixl \"\\<diamondop>\" 80)"], ["proof (state)\ngoal (2 subgoals):\n 1. bst t'\n 2. set_tree t' = set_tree t1 \\<diamondop> set_tree t2", "have \"bst t' \\<and> set_tree t' = set_tree t1 \\<diamondop> set_tree t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<diamondop> set_tree t2", "using assms(2-)"], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf (mrbst_inter_diff b t1 t2)\n  bst t1\n  bst t2\n\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<diamondop> set_tree t2", "proof (induction t1 arbitrary: t2 t')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t2 t'.\n       \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b \\<langle>\\<rangle> t2);\n        bst \\<langle>\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree \\<langle>\\<rangle> \\<diamondop>\n                         set_tree t2\n 2. \\<And>t11 x2 t12 t2 t'.\n       \\<lbrakk>\\<And>t2 t'.\n                   \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t11 t2);\n                    bst t11; bst t2\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     set_tree t11 \\<diamondop> set_tree t2;\n        \\<And>t2 t'.\n           \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t12 t2); bst t12;\n            bst t2\\<rbrakk>\n           \\<Longrightarrow> bst t' \\<and>\n                             set_tree t' =\n                             set_tree t12 \\<diamondop> set_tree t2;\n        t' \\<in> set_pmf\n                  (mrbst_inter_diff b \\<langle>t11, x2, t12\\<rangle> t2);\n        bst \\<langle>t11, x2, t12\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree\n                          \\<langle>t11, x2, t12\\<rangle> \\<diamondop>\n                         set_tree t2", "case (Node l1 x r1 t2)"], ["proof (state)\nthis:\n  \\<lbrakk>?t' \\<in> set_pmf (mrbst_inter_diff b l1 ?t2.0); bst l1;\n   bst ?t2.0\\<rbrakk>\n  \\<Longrightarrow> bst ?t' \\<and>\n                    set_tree ?t' = set_tree l1 \\<diamondop> set_tree ?t2.0\n  \\<lbrakk>?t' \\<in> set_pmf (mrbst_inter_diff b r1 ?t2.0); bst r1;\n   bst ?t2.0\\<rbrakk>\n  \\<Longrightarrow> bst ?t' \\<and>\n                    set_tree ?t' = set_tree r1 \\<diamondop> set_tree ?t2.0\n  t' \\<in> set_pmf (mrbst_inter_diff b \\<langle>l1, x, r1\\<rangle> t2)\n  bst \\<langle>l1, x, r1\\<rangle>\n  bst t2\n\ngoal (2 subgoals):\n 1. \\<And>t2 t'.\n       \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b \\<langle>\\<rangle> t2);\n        bst \\<langle>\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree \\<langle>\\<rangle> \\<diamondop>\n                         set_tree t2\n 2. \\<And>t11 x2 t12 t2 t'.\n       \\<lbrakk>\\<And>t2 t'.\n                   \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t11 t2);\n                    bst t11; bst t2\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     set_tree t11 \\<diamondop> set_tree t2;\n        \\<And>t2 t'.\n           \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t12 t2); bst t12;\n            bst t2\\<rbrakk>\n           \\<Longrightarrow> bst t' \\<and>\n                             set_tree t' =\n                             set_tree t12 \\<diamondop> set_tree t2;\n        t' \\<in> set_pmf\n                  (mrbst_inter_diff b \\<langle>t11, x2, t12\\<rangle> t2);\n        bst \\<langle>t11, x2, t12\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree\n                          \\<langle>t11, x2, t12\\<rangle> \\<diamondop>\n                         set_tree t2", "note bst = \\<open>bst \\<langle>l1, x, r1\\<rangle>\\<close> \\<open>bst t2\\<close>"], ["proof (state)\nthis:\n  bst \\<langle>l1, x, r1\\<rangle>\n  bst t2\n\ngoal (2 subgoals):\n 1. \\<And>t2 t'.\n       \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b \\<langle>\\<rangle> t2);\n        bst \\<langle>\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree \\<langle>\\<rangle> \\<diamondop>\n                         set_tree t2\n 2. \\<And>t11 x2 t12 t2 t'.\n       \\<lbrakk>\\<And>t2 t'.\n                   \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t11 t2);\n                    bst t11; bst t2\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     set_tree t11 \\<diamondop> set_tree t2;\n        \\<And>t2 t'.\n           \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t12 t2); bst t12;\n            bst t2\\<rbrakk>\n           \\<Longrightarrow> bst t' \\<and>\n                             set_tree t' =\n                             set_tree t12 \\<diamondop> set_tree t2;\n        t' \\<in> set_pmf\n                  (mrbst_inter_diff b \\<langle>t11, x2, t12\\<rangle> t2);\n        bst \\<langle>t11, x2, t12\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree\n                          \\<langle>t11, x2, t12\\<rangle> \\<diamondop>\n                         set_tree t2", "define l2 r2 where \"l2 = fst (split_bst x t2)\" and \"r2 = snd (split_bst x t2)\""], ["proof (state)\nthis:\n  l2 = fst (split_bst x t2)\n  r2 = snd (split_bst x t2)\n\ngoal (2 subgoals):\n 1. \\<And>t2 t'.\n       \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b \\<langle>\\<rangle> t2);\n        bst \\<langle>\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree \\<langle>\\<rangle> \\<diamondop>\n                         set_tree t2\n 2. \\<And>t11 x2 t12 t2 t'.\n       \\<lbrakk>\\<And>t2 t'.\n                   \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t11 t2);\n                    bst t11; bst t2\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     set_tree t11 \\<diamondop> set_tree t2;\n        \\<And>t2 t'.\n           \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t12 t2); bst t12;\n            bst t2\\<rbrakk>\n           \\<Longrightarrow> bst t' \\<and>\n                             set_tree t' =\n                             set_tree t12 \\<diamondop> set_tree t2;\n        t' \\<in> set_pmf\n                  (mrbst_inter_diff b \\<langle>t11, x2, t12\\<rangle> t2);\n        bst \\<langle>t11, x2, t12\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree\n                          \\<langle>t11, x2, t12\\<rangle> \\<diamondop>\n                         set_tree t2", "obtain l r\n      where lr: \"l \\<in> set_pmf (mrbst_inter_diff b l1 l2)\" \"r \\<in> set_pmf (mrbst_inter_diff b r1 r2)\"\n        and t': \"t' \\<in> (if x \\<in> set_tree t2 \\<longleftrightarrow> b then {\\<langle>l, x, r\\<rangle>} else set_pmf (mrbst_join l r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l r.\n        \\<lbrakk>l \\<in> set_pmf (mrbst_inter_diff b l1 l2);\n         r \\<in> set_pmf (mrbst_inter_diff b r1 r2);\n         t' \\<in> (if (x \\<in> set_tree t2) = b\n                   then {\\<langle>l, x, r\\<rangle>}\n                   else set_pmf (mrbst_join l r))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Node.prems"], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf (mrbst_inter_diff b \\<langle>l1, x, r1\\<rangle> t2)\n  bst \\<langle>l1, x, r1\\<rangle>\n  bst t2\n\ngoal (1 subgoal):\n 1. (\\<And>l r.\n        \\<lbrakk>l \\<in> set_pmf (mrbst_inter_diff b l1 l2);\n         r \\<in> set_pmf (mrbst_inter_diff b r1 r2);\n         t' \\<in> (if (x \\<in> set_tree t2) = b\n                   then {\\<langle>l, x, r\\<rangle>}\n                   else set_pmf (mrbst_join l r))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force simp: case_prod_unfold l2_def r2_def isin_bst split: if_splits)"], ["proof (state)\nthis:\n  l \\<in> set_pmf (mrbst_inter_diff b l1 l2)\n  r \\<in> set_pmf (mrbst_inter_diff b r1 r2)\n  t' \\<in> (if (x \\<in> set_tree t2) = b then {\\<langle>l, x, r\\<rangle>}\n            else set_pmf (mrbst_join l r))\n\ngoal (2 subgoals):\n 1. \\<And>t2 t'.\n       \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b \\<langle>\\<rangle> t2);\n        bst \\<langle>\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree \\<langle>\\<rangle> \\<diamondop>\n                         set_tree t2\n 2. \\<And>t11 x2 t12 t2 t'.\n       \\<lbrakk>\\<And>t2 t'.\n                   \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t11 t2);\n                    bst t11; bst t2\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     set_tree t11 \\<diamondop> set_tree t2;\n        \\<And>t2 t'.\n           \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t12 t2); bst t12;\n            bst t2\\<rbrakk>\n           \\<Longrightarrow> bst t' \\<and>\n                             set_tree t' =\n                             set_tree t12 \\<diamondop> set_tree t2;\n        t' \\<in> set_pmf\n                  (mrbst_inter_diff b \\<langle>t11, x2, t12\\<rangle> t2);\n        bst \\<langle>t11, x2, t12\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree\n                          \\<langle>t11, x2, t12\\<rangle> \\<diamondop>\n                         set_tree t2", "from lr"], ["proof (chain)\npicking this:\n  l \\<in> set_pmf (mrbst_inter_diff b l1 l2)\n  r \\<in> set_pmf (mrbst_inter_diff b r1 r2)", "have lr': \"bst l \\<and> set_tree l = set_tree l1 \\<diamondop> set_tree l2\"\n                      \"bst r \\<and> set_tree r = set_tree r1 \\<diamondop> set_tree r2\""], ["proof (prove)\nusing this:\n  l \\<in> set_pmf (mrbst_inter_diff b l1 l2)\n  r \\<in> set_pmf (mrbst_inter_diff b r1 r2)\n\ngoal (1 subgoal):\n 1. bst l \\<and> set_tree l = set_tree l1 \\<diamondop> set_tree l2 &&&\n    bst r \\<and> set_tree r = set_tree r1 \\<diamondop> set_tree r2", "using Node.prems"], ["proof (prove)\nusing this:\n  l \\<in> set_pmf (mrbst_inter_diff b l1 l2)\n  r \\<in> set_pmf (mrbst_inter_diff b r1 r2)\n  t' \\<in> set_pmf (mrbst_inter_diff b \\<langle>l1, x, r1\\<rangle> t2)\n  bst \\<langle>l1, x, r1\\<rangle>\n  bst t2\n\ngoal (1 subgoal):\n 1. bst l \\<and> set_tree l = set_tree l1 \\<diamondop> set_tree l2 &&&\n    bst r \\<and> set_tree r = set_tree r1 \\<diamondop> set_tree r2", "by (intro Node.IH; force simp: l2_def r2_def)+"], ["proof (state)\nthis:\n  bst l \\<and> set_tree l = set_tree l1 \\<diamondop> set_tree l2\n  bst r \\<and> set_tree r = set_tree r1 \\<diamondop> set_tree r2\n\ngoal (2 subgoals):\n 1. \\<And>t2 t'.\n       \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b \\<langle>\\<rangle> t2);\n        bst \\<langle>\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree \\<langle>\\<rangle> \\<diamondop>\n                         set_tree t2\n 2. \\<And>t11 x2 t12 t2 t'.\n       \\<lbrakk>\\<And>t2 t'.\n                   \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t11 t2);\n                    bst t11; bst t2\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     set_tree t11 \\<diamondop> set_tree t2;\n        \\<And>t2 t'.\n           \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t12 t2); bst t12;\n            bst t2\\<rbrakk>\n           \\<Longrightarrow> bst t' \\<and>\n                             set_tree t' =\n                             set_tree t12 \\<diamondop> set_tree t2;\n        t' \\<in> set_pmf\n                  (mrbst_inter_diff b \\<langle>t11, x2, t12\\<rangle> t2);\n        bst \\<langle>t11, x2, t12\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree\n                          \\<langle>t11, x2, t12\\<rangle> \\<diamondop>\n                         set_tree t2", "have \"set_tree t' = set_tree l \\<union> set_tree r \\<union> (if x \\<in> set_tree t2 \\<longleftrightarrow> b then {x} else {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_tree t' =\n    set_tree l \\<union> set_tree r \\<union>\n    (if (x \\<in> set_tree t2) = b then {x} else {})", "proof (cases \"x \\<in> set_tree t2 \\<longleftrightarrow> b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (x \\<in> set_tree t2) = b \\<Longrightarrow>\n    set_tree t' =\n    set_tree l \\<union> set_tree r \\<union>\n    (if (x \\<in> set_tree t2) = b then {x} else {})\n 2. (x \\<in> set_tree t2) \\<noteq> b \\<Longrightarrow>\n    set_tree t' =\n    set_tree l \\<union> set_tree r \\<union>\n    (if (x \\<in> set_tree t2) = b then {x} else {})", "case False"], ["proof (state)\nthis:\n  (x \\<in> set_tree t2) \\<noteq> b\n\ngoal (2 subgoals):\n 1. (x \\<in> set_tree t2) = b \\<Longrightarrow>\n    set_tree t' =\n    set_tree l \\<union> set_tree r \\<union>\n    (if (x \\<in> set_tree t2) = b then {x} else {})\n 2. (x \\<in> set_tree t2) \\<noteq> b \\<Longrightarrow>\n    set_tree t' =\n    set_tree l \\<union> set_tree r \\<union>\n    (if (x \\<in> set_tree t2) = b then {x} else {})", "have \"x < y\" if \"x \\<in> set_tree l\" \"y \\<in> set_tree r\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. x < y", "using that lr' bst"], ["proof (prove)\nusing this:\n  x \\<in> set_tree l\n  y \\<in> set_tree r\n  bst l \\<and> set_tree l = set_tree l1 \\<diamondop> set_tree l2\n  bst r \\<and> set_tree r = set_tree r1 \\<diamondop> set_tree r2\n  bst \\<langle>l1, x__, r1\\<rangle>\n  bst t2\n\ngoal (1 subgoal):\n 1. x < y", "by (force simp: setop_def split: if_splits)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> set_tree l; ?y \\<in> set_tree r\\<rbrakk>\n  \\<Longrightarrow> ?x < ?y\n\ngoal (2 subgoals):\n 1. (x \\<in> set_tree t2) = b \\<Longrightarrow>\n    set_tree t' =\n    set_tree l \\<union> set_tree r \\<union>\n    (if (x \\<in> set_tree t2) = b then {x} else {})\n 2. (x \\<in> set_tree t2) \\<noteq> b \\<Longrightarrow>\n    set_tree t' =\n    set_tree l \\<union> set_tree r \\<union>\n    (if (x \\<in> set_tree t2) = b then {x} else {})", "hence set_t': \"set_tree t' = set_tree l \\<union> set_tree r\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> set_tree l; ?y \\<in> set_tree r\\<rbrakk>\n  \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. set_tree t' = set_tree l \\<union> set_tree r", "using t' set_mrbst_join[of t' l r] False lr'"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> set_tree l; ?y \\<in> set_tree r\\<rbrakk>\n  \\<Longrightarrow> ?x < ?y\n  t' \\<in> (if (x \\<in> set_tree t2) = b then {\\<langle>l, x, r\\<rangle>}\n            else set_pmf (mrbst_join l r))\n  \\<lbrakk>t' \\<in> set_pmf (mrbst_join l r); bst l; bst r;\n   \\<And>x y.\n      \\<lbrakk>x \\<in> set_tree l; y \\<in> set_tree r\\<rbrakk>\n      \\<Longrightarrow> x < y\\<rbrakk>\n  \\<Longrightarrow> set_tree t' = set_tree l \\<union> set_tree r\n  (x \\<in> set_tree t2) \\<noteq> b\n  bst l \\<and> set_tree l = set_tree l1 \\<diamondop> set_tree l2\n  bst r \\<and> set_tree r = set_tree r1 \\<diamondop> set_tree r2\n\ngoal (1 subgoal):\n 1. set_tree t' = set_tree l \\<union> set_tree r", "by auto"], ["proof (state)\nthis:\n  set_tree t' = set_tree l \\<union> set_tree r\n\ngoal (2 subgoals):\n 1. (x \\<in> set_tree t2) = b \\<Longrightarrow>\n    set_tree t' =\n    set_tree l \\<union> set_tree r \\<union>\n    (if (x \\<in> set_tree t2) = b then {x} else {})\n 2. (x \\<in> set_tree t2) \\<noteq> b \\<Longrightarrow>\n    set_tree t' =\n    set_tree l \\<union> set_tree r \\<union>\n    (if (x \\<in> set_tree t2) = b then {x} else {})", "with False"], ["proof (chain)\npicking this:\n  (x \\<in> set_tree t2) \\<noteq> b\n  set_tree t' = set_tree l \\<union> set_tree r", "show ?thesis"], ["proof (prove)\nusing this:\n  (x \\<in> set_tree t2) \\<noteq> b\n  set_tree t' = set_tree l \\<union> set_tree r\n\ngoal (1 subgoal):\n 1. set_tree t' =\n    set_tree l \\<union> set_tree r \\<union>\n    (if (x \\<in> set_tree t2) = b then {x} else {})", "by simp"], ["proof (state)\nthis:\n  set_tree t' =\n  set_tree l \\<union> set_tree r \\<union>\n  (if (x \\<in> set_tree t2) = b then {x} else {})\n\ngoal (1 subgoal):\n 1. (x \\<in> set_tree t2) = b \\<Longrightarrow>\n    set_tree t' =\n    set_tree l \\<union> set_tree r \\<union>\n    (if (x \\<in> set_tree t2) = b then {x} else {})", "qed (use t' in auto)"], ["proof (state)\nthis:\n  set_tree t' =\n  set_tree l \\<union> set_tree r \\<union>\n  (if (x \\<in> set_tree t2) = b then {x} else {})\n\ngoal (2 subgoals):\n 1. \\<And>t2 t'.\n       \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b \\<langle>\\<rangle> t2);\n        bst \\<langle>\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree \\<langle>\\<rangle> \\<diamondop>\n                         set_tree t2\n 2. \\<And>t11 x2 t12 t2 t'.\n       \\<lbrakk>\\<And>t2 t'.\n                   \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t11 t2);\n                    bst t11; bst t2\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     set_tree t11 \\<diamondop> set_tree t2;\n        \\<And>t2 t'.\n           \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t12 t2); bst t12;\n            bst t2\\<rbrakk>\n           \\<Longrightarrow> bst t' \\<and>\n                             set_tree t' =\n                             set_tree t12 \\<diamondop> set_tree t2;\n        t' \\<in> set_pmf\n                  (mrbst_inter_diff b \\<langle>t11, x2, t12\\<rangle> t2);\n        bst \\<langle>t11, x2, t12\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree\n                          \\<langle>t11, x2, t12\\<rangle> \\<diamondop>\n                         set_tree t2", "also"], ["proof (state)\nthis:\n  set_tree t' =\n  set_tree l \\<union> set_tree r \\<union>\n  (if (x \\<in> set_tree t2) = b then {x} else {})\n\ngoal (2 subgoals):\n 1. \\<And>t2 t'.\n       \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b \\<langle>\\<rangle> t2);\n        bst \\<langle>\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree \\<langle>\\<rangle> \\<diamondop>\n                         set_tree t2\n 2. \\<And>t11 x2 t12 t2 t'.\n       \\<lbrakk>\\<And>t2 t'.\n                   \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t11 t2);\n                    bst t11; bst t2\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     set_tree t11 \\<diamondop> set_tree t2;\n        \\<And>t2 t'.\n           \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t12 t2); bst t12;\n            bst t2\\<rbrakk>\n           \\<Longrightarrow> bst t' \\<and>\n                             set_tree t' =\n                             set_tree t12 \\<diamondop> set_tree t2;\n        t' \\<in> set_pmf\n                  (mrbst_inter_diff b \\<langle>t11, x2, t12\\<rangle> t2);\n        bst \\<langle>t11, x2, t12\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree\n                          \\<langle>t11, x2, t12\\<rangle> \\<diamondop>\n                         set_tree t2", "have \"\\<dots> = set_tree \\<langle>l1, x, r1\\<rangle> \\<diamondop> set_tree t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_tree l \\<union> set_tree r \\<union>\n    (if (x \\<in> set_tree t2) = b then {x} else {}) =\n    set_tree \\<langle>l1, x, r1\\<rangle> \\<diamondop> set_tree t2", "using lr' bst"], ["proof (prove)\nusing this:\n  bst l \\<and> set_tree l = set_tree l1 \\<diamondop> set_tree l2\n  bst r \\<and> set_tree r = set_tree r1 \\<diamondop> set_tree r2\n  bst \\<langle>l1, x, r1\\<rangle>\n  bst t2\n\ngoal (1 subgoal):\n 1. set_tree l \\<union> set_tree r \\<union>\n    (if (x \\<in> set_tree t2) = b then {x} else {}) =\n    set_tree \\<langle>l1, x, r1\\<rangle> \\<diamondop> set_tree t2", "by (auto simp: setop_def l2_def r2_def set_split_bst1 set_split_bst2)"], ["proof (state)\nthis:\n  set_tree l \\<union> set_tree r \\<union>\n  (if (x \\<in> set_tree t2) = b then {x} else {}) =\n  set_tree \\<langle>l1, x, r1\\<rangle> \\<diamondop> set_tree t2\n\ngoal (2 subgoals):\n 1. \\<And>t2 t'.\n       \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b \\<langle>\\<rangle> t2);\n        bst \\<langle>\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree \\<langle>\\<rangle> \\<diamondop>\n                         set_tree t2\n 2. \\<And>t11 x2 t12 t2 t'.\n       \\<lbrakk>\\<And>t2 t'.\n                   \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t11 t2);\n                    bst t11; bst t2\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     set_tree t11 \\<diamondop> set_tree t2;\n        \\<And>t2 t'.\n           \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t12 t2); bst t12;\n            bst t2\\<rbrakk>\n           \\<Longrightarrow> bst t' \\<and>\n                             set_tree t' =\n                             set_tree t12 \\<diamondop> set_tree t2;\n        t' \\<in> set_pmf\n                  (mrbst_inter_diff b \\<langle>t11, x2, t12\\<rangle> t2);\n        bst \\<langle>t11, x2, t12\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree\n                          \\<langle>t11, x2, t12\\<rangle> \\<diamondop>\n                         set_tree t2", "finally"], ["proof (chain)\npicking this:\n  set_tree t' =\n  set_tree \\<langle>l1, x, r1\\<rangle> \\<diamondop> set_tree t2", "have \"set_tree t' = set_tree \\<langle>l1, x, r1\\<rangle> \\<diamondop> set_tree t2\""], ["proof (prove)\nusing this:\n  set_tree t' =\n  set_tree \\<langle>l1, x, r1\\<rangle> \\<diamondop> set_tree t2\n\ngoal (1 subgoal):\n 1. set_tree t' =\n    set_tree \\<langle>l1, x, r1\\<rangle> \\<diamondop> set_tree t2", "."], ["proof (state)\nthis:\n  set_tree t' =\n  set_tree \\<langle>l1, x, r1\\<rangle> \\<diamondop> set_tree t2\n\ngoal (2 subgoals):\n 1. \\<And>t2 t'.\n       \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b \\<langle>\\<rangle> t2);\n        bst \\<langle>\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree \\<langle>\\<rangle> \\<diamondop>\n                         set_tree t2\n 2. \\<And>t11 x2 t12 t2 t'.\n       \\<lbrakk>\\<And>t2 t'.\n                   \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t11 t2);\n                    bst t11; bst t2\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     set_tree t11 \\<diamondop> set_tree t2;\n        \\<And>t2 t'.\n           \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t12 t2); bst t12;\n            bst t2\\<rbrakk>\n           \\<Longrightarrow> bst t' \\<and>\n                             set_tree t' =\n                             set_tree t12 \\<diamondop> set_tree t2;\n        t' \\<in> set_pmf\n                  (mrbst_inter_diff b \\<langle>t11, x2, t12\\<rangle> t2);\n        bst \\<langle>t11, x2, t12\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree\n                          \\<langle>t11, x2, t12\\<rangle> \\<diamondop>\n                         set_tree t2", "moreover"], ["proof (state)\nthis:\n  set_tree t' =\n  set_tree \\<langle>l1, x, r1\\<rangle> \\<diamondop> set_tree t2\n\ngoal (2 subgoals):\n 1. \\<And>t2 t'.\n       \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b \\<langle>\\<rangle> t2);\n        bst \\<langle>\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree \\<langle>\\<rangle> \\<diamondop>\n                         set_tree t2\n 2. \\<And>t11 x2 t12 t2 t'.\n       \\<lbrakk>\\<And>t2 t'.\n                   \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t11 t2);\n                    bst t11; bst t2\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     set_tree t11 \\<diamondop> set_tree t2;\n        \\<And>t2 t'.\n           \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t12 t2); bst t12;\n            bst t2\\<rbrakk>\n           \\<Longrightarrow> bst t' \\<and>\n                             set_tree t' =\n                             set_tree t12 \\<diamondop> set_tree t2;\n        t' \\<in> set_pmf\n                  (mrbst_inter_diff b \\<langle>t11, x2, t12\\<rangle> t2);\n        bst \\<langle>t11, x2, t12\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree\n                          \\<langle>t11, x2, t12\\<rangle> \\<diamondop>\n                         set_tree t2", "from lr' t' bst"], ["proof (chain)\npicking this:\n  bst l \\<and> set_tree l = set_tree l1 \\<diamondop> set_tree l2\n  bst r \\<and> set_tree r = set_tree r1 \\<diamondop> set_tree r2\n  t' \\<in> (if (x \\<in> set_tree t2) = b then {\\<langle>l, x, r\\<rangle>}\n            else set_pmf (mrbst_join l r))\n  bst \\<langle>l1, x, r1\\<rangle>\n  bst t2", "have \"bst t'\""], ["proof (prove)\nusing this:\n  bst l \\<and> set_tree l = set_tree l1 \\<diamondop> set_tree l2\n  bst r \\<and> set_tree r = set_tree r1 \\<diamondop> set_tree r2\n  t' \\<in> (if (x \\<in> set_tree t2) = b then {\\<langle>l, x, r\\<rangle>}\n            else set_pmf (mrbst_join l r))\n  bst \\<langle>l1, x, r1\\<rangle>\n  bst t2\n\ngoal (1 subgoal):\n 1. bst t'", "by (force split: if_splits simp: setop_def intro!: bst_mrbst_join[of t' l r])"], ["proof (state)\nthis:\n  bst t'\n\ngoal (2 subgoals):\n 1. \\<And>t2 t'.\n       \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b \\<langle>\\<rangle> t2);\n        bst \\<langle>\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree \\<langle>\\<rangle> \\<diamondop>\n                         set_tree t2\n 2. \\<And>t11 x2 t12 t2 t'.\n       \\<lbrakk>\\<And>t2 t'.\n                   \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t11 t2);\n                    bst t11; bst t2\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     set_tree t11 \\<diamondop> set_tree t2;\n        \\<And>t2 t'.\n           \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b t12 t2); bst t12;\n            bst t2\\<rbrakk>\n           \\<Longrightarrow> bst t' \\<and>\n                             set_tree t' =\n                             set_tree t12 \\<diamondop> set_tree t2;\n        t' \\<in> set_pmf\n                  (mrbst_inter_diff b \\<langle>t11, x2, t12\\<rangle> t2);\n        bst \\<langle>t11, x2, t12\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree\n                          \\<langle>t11, x2, t12\\<rangle> \\<diamondop>\n                         set_tree t2", "ultimately"], ["proof (chain)\npicking this:\n  set_tree t' =\n  set_tree \\<langle>l1, x, r1\\<rangle> \\<diamondop> set_tree t2\n  bst t'", "show ?case"], ["proof (prove)\nusing this:\n  set_tree t' =\n  set_tree \\<langle>l1, x, r1\\<rangle> \\<diamondop> set_tree t2\n  bst t'\n\ngoal (1 subgoal):\n 1. bst t' \\<and>\n    set_tree t' =\n    set_tree \\<langle>l1, x, r1\\<rangle> \\<diamondop> set_tree t2", "by auto"], ["proof (state)\nthis:\n  bst t' \\<and>\n  set_tree t' =\n  set_tree \\<langle>l1, x, r1\\<rangle> \\<diamondop> set_tree t2\n\ngoal (1 subgoal):\n 1. \\<And>t2 t'.\n       \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff b \\<langle>\\<rangle> t2);\n        bst \\<langle>\\<rangle>; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' =\n                         set_tree \\<langle>\\<rangle> \\<diamondop>\n                         set_tree t2", "qed (auto simp: setop_def)"], ["proof (state)\nthis:\n  bst t' \\<and> set_tree t' = set_tree t1 \\<diamondop> set_tree t2\n\ngoal (2 subgoals):\n 1. bst t'\n 2. set_tree t' = set_tree t1 \\<diamondop> set_tree t2", "thus \"bst t'\" and \"set_tree t' = set_tree t1 \\<diamondop> set_tree t2\""], ["proof (prove)\nusing this:\n  bst t' \\<and> set_tree t' = set_tree t1 \\<diamondop> set_tree t2\n\ngoal (1 subgoal):\n 1. bst t' &&& set_tree t' = set_tree t1 \\<diamondop> set_tree t2", "by auto"], ["proof (state)\nthis:\n  bst t'\n  set_tree t' = set_tree t1 \\<diamondop> set_tree t2\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem mrbst_inter_diff_correct:\n  fixes A B :: \"'a :: linorder set\" and b :: bool\n  defines \"setop \\<equiv> (if b then (\\<inter>) else (-) :: 'a set \\<Rightarrow> _)\"\n  assumes \"finite A\" \"finite B\"\n  shows   \"do {t1 \\<leftarrow> random_bst A; t2 \\<leftarrow> random_bst B; mrbst_inter_diff b t1 t2} =\n             random_bst (setop A B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (setop A B)", "using assms(2-)"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (setop A B)", "proof (induction A arbitrary: B rule: finite_psubset_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite A;\n        \\<And>B Ba.\n           \\<lbrakk>B \\<subset> A; finite Ba\\<rbrakk>\n           \\<Longrightarrow> random_bst B \\<bind>\n                             (\\<lambda>t1.\n                                 random_bst Ba \\<bind>\n                                 mrbst_inter_diff b t1) =\n                             random_bst (setop B Ba);\n        finite B\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind> mrbst_inter_diff b t1) =\n                         random_bst (setop A B)", "case (psubset A B)"], ["proof (state)\nthis:\n  finite A\n  \\<lbrakk>?B \\<subset> A; finite ?Ba\\<rbrakk>\n  \\<Longrightarrow> random_bst ?B \\<bind>\n                    (\\<lambda>t1.\n                        random_bst ?Ba \\<bind> mrbst_inter_diff b t1) =\n                    random_bst (setop ?B ?Ba)\n  finite B\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite A;\n        \\<And>B Ba.\n           \\<lbrakk>B \\<subset> A; finite Ba\\<rbrakk>\n           \\<Longrightarrow> random_bst B \\<bind>\n                             (\\<lambda>t1.\n                                 random_bst Ba \\<bind>\n                                 mrbst_inter_diff b t1) =\n                             random_bst (setop B Ba);\n        finite B\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind> mrbst_inter_diff b t1) =\n                         random_bst (setop A B)", "write setop (infixl \"\\<diamondop>\" 80)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite A;\n        \\<And>B Ba.\n           \\<lbrakk>B \\<subset> A; finite Ba\\<rbrakk>\n           \\<Longrightarrow> random_bst B \\<bind>\n                             (\\<lambda>t1.\n                                 random_bst Ba \\<bind>\n                                 mrbst_inter_diff b t1) =\n                             random_bst (B \\<diamondop> Ba);\n        finite B\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind> mrbst_inter_diff b t1) =\n                         random_bst (A \\<diamondop> B)", "include monad_normalisation"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite A;\n        \\<And>B Ba.\n           \\<lbrakk>B \\<subset> A; finite Ba\\<rbrakk>\n           \\<Longrightarrow> random_bst B \\<bind>\n                             (\\<lambda>t1.\n                                 random_bst Ba \\<bind>\n                                 mrbst_inter_diff b t1) =\n                             random_bst (B \\<diamondop> Ba);\n        finite B\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind> mrbst_inter_diff b t1) =\n                         random_bst (A \\<diamondop> B)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "proof (cases \"A = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A = {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)\n 2. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "case True"], ["proof (state)\nthis:\n  A = {}\n\ngoal (2 subgoals):\n 1. A = {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)\n 2. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "thus ?thesis"], ["proof (prove)\nusing this:\n  A = {}\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "by (auto simp: setop_def)"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n  random_bst (A \\<diamondop> B)\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "case False"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "define R1 R2 where \"R1 = (\\<lambda>x. random_bst {y\\<in>A. y < x})\" \"R2 = (\\<lambda>x. random_bst {y\\<in>A. y > x})\""], ["proof (state)\nthis:\n  R1 = (\\<lambda>x. random_bst {y \\<in> A. y < x})\n  R2 = (\\<lambda>x. random_bst {y \\<in> A. x < y})\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have A_eq: \"A = (A \\<inter> B) \\<union> (A - B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = A \\<inter> B \\<union> (A - B)", "by auto"], ["proof (state)\nthis:\n  A = A \\<inter> B \\<union> (A - B)\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have card_A_eq: \"card A = card (A \\<inter> B) + card (A - B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card A = card (A \\<inter> B) + card (A - B)", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. card A = card (A \\<inter> B) + card (A - B)", "by (subst A_eq, subst card_Un_disjoint) auto"], ["proof (state)\nthis:\n  card A = card (A \\<inter> B) + card (A - B)\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have eq: \"pmf_of_set A =\n                do {b \\<leftarrow> bernoulli_pmf (card (A \\<inter> B) / card A);\n                    if b then pmf_of_set (A \\<inter> B) else pmf_of_set (A - B)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A =\n    bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n    (\\<lambda>b.\n        if b then pmf_of_set (A \\<inter> B) else pmf_of_set (A - B))", "using psubset.prems False \\<open>finite A\\<close> A_eq card_A_eq"], ["proof (prove)\nusing this:\n  finite B\n  A \\<noteq> {}\n  finite A\n  A = A \\<inter> B \\<union> (A - B)\n  card A = card (A \\<inter> B) + card (A - B)\n\ngoal (1 subgoal):\n 1. pmf_of_set A =\n    bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n    (\\<lambda>b.\n        if b then pmf_of_set (A \\<inter> B) else pmf_of_set (A - B))", "by (subst A_eq, intro pmf_of_set_union_split [symmetric]) auto"], ["proof (state)\nthis:\n  pmf_of_set A =\n  bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n  (\\<lambda>b. if b then pmf_of_set (A \\<inter> B) else pmf_of_set (A - B))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have \"card A > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < card A", "using \\<open>finite A\\<close> \\<open>A \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < card A", "by (subst card_gt_0_iff) auto"], ["proof (state)\nthis:\n  0 < card A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have not_subset: \"\\<not>A \\<subseteq> B\" if \"card (A \\<inter> B) < card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> A \\<subseteq> B", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<Longrightarrow> False", "assume \"A \\<subseteq> B\""], ["proof (state)\nthis:\n  A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<Longrightarrow> False", "hence \"A \\<inter> B = A\""], ["proof (prove)\nusing this:\n  A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. A \\<inter> B = A", "by auto"], ["proof (state)\nthis:\n  A \\<inter> B = A\n\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<Longrightarrow> False", "with that"], ["proof (chain)\npicking this:\n  card (A \\<inter> B) < card A\n  A \\<inter> B = A", "show False"], ["proof (prove)\nusing this:\n  card (A \\<inter> B) < card A\n  A \\<inter> B = A\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card (A \\<inter> B) < card A \\<Longrightarrow> \\<not> A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have \"do {t1 \\<leftarrow> random_bst A; t2 \\<leftarrow> random_bst B; mrbst_inter_diff b t1 t2} =\n          do {\n            x \\<leftarrow> pmf_of_set A;\n            l1 \\<leftarrow> random_bst {y\\<in>A. y < x};\n            r1 \\<leftarrow> random_bst {y\\<in>A. y > x};\n            t2 \\<leftarrow> random_bst B;\n            let (l2, r2) = split_bst x t2;\n            l \\<leftarrow> mrbst_inter_diff b l1 l2;\n            r \\<leftarrow> mrbst_inter_diff b r1 r2;\n            if isin t2 x = b then return_pmf \\<langle>l, x, r\\<rangle> else mrbst_join l r\n          }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r1.\n                random_bst B \\<bind>\n                (\\<lambda>t2.\n                    let (l2, r2) = split_bst x t2\n                    in mrbst_inter_diff b l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_inter_diff b r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               if isin t2 x = b\n                               then return_pmf \\<langle>l, x, r\\<rangle>\n                               else mrbst_join l r))))))", "using \\<open>finite A\\<close> \\<open>A \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r1.\n                random_bst B \\<bind>\n                (\\<lambda>t2.\n                    let (l2, r2) = split_bst x t2\n                    in mrbst_inter_diff b l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_inter_diff b r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               if isin t2 x = b\n                               then return_pmf \\<langle>l, x, r\\<rangle>\n                               else mrbst_join l r))))))", "by (subst random_bst_reduce)\n         (auto simp: mrbst_inter_diff_reduce map_pmf_def split_bst'_altdef)"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r1.\n              random_bst B \\<bind>\n              (\\<lambda>t2.\n                  let (l2, r2) = split_bst x t2\n                  in mrbst_inter_diff b l1 l2 \\<bind>\n                     (\\<lambda>l.\n                         mrbst_inter_diff b r1 r2 \\<bind>\n                         (\\<lambda>r.\n                             if isin t2 x = b\n                             then return_pmf \\<langle>l, x, r\\<rangle>\n                             else mrbst_join l r))))))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "also"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r1.\n              random_bst B \\<bind>\n              (\\<lambda>t2.\n                  let (l2, r2) = split_bst x t2\n                  in mrbst_inter_diff b l1 l2 \\<bind>\n                     (\\<lambda>l.\n                         mrbst_inter_diff b r1 r2 \\<bind>\n                         (\\<lambda>r.\n                             if isin t2 x = b\n                             then return_pmf \\<langle>l, x, r\\<rangle>\n                             else mrbst_join l r))))))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have \"\\<dots> = do {\n                      x \\<leftarrow> pmf_of_set A;\n                      l1 \\<leftarrow> random_bst {y\\<in>A. y < x};\n                      r1 \\<leftarrow> random_bst {y\\<in>A. y > x};\n                      t2 \\<leftarrow> random_bst B;\n                      let (l2, r2) = split_bst x t2;\n                      l \\<leftarrow> mrbst_inter_diff b l1 l2;\n                      r \\<leftarrow> mrbst_inter_diff b r1 r2;\n                      if x \\<in> B = b then return_pmf \\<langle>l, x, r\\<rangle> else mrbst_join l r\n                    }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r1.\n                random_bst B \\<bind>\n                (\\<lambda>t2.\n                    let (l2, r2) = split_bst x t2\n                    in mrbst_inter_diff b l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_inter_diff b r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               if isin t2 x = b\n                               then return_pmf \\<langle>l, x, r\\<rangle>\n                               else mrbst_join l r)))))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r1.\n                random_bst B \\<bind>\n                (\\<lambda>t2.\n                    let (l2, r2) = split_bst x t2\n                    in mrbst_inter_diff b l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_inter_diff b r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               if (x \\<in> B) = b\n                               then return_pmf \\<langle>l, x, r\\<rangle>\n                               else mrbst_join l r))))))", "unfolding Let_def case_prod_unfold"], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r1.\n                random_bst B \\<bind>\n                (\\<lambda>t2.\n                    mrbst_inter_diff b l1 (fst (split_bst x t2)) \\<bind>\n                    (\\<lambda>l.\n                        mrbst_inter_diff b r1 (snd (split_bst x t2)) \\<bind>\n                        (\\<lambda>r.\n                            if isin t2 x = b\n                            then return_pmf \\<langle>l, x, r\\<rangle>\n                            else mrbst_join l r)))))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r1.\n                random_bst B \\<bind>\n                (\\<lambda>t2.\n                    mrbst_inter_diff b l1 (fst (split_bst x t2)) \\<bind>\n                    (\\<lambda>l.\n                        mrbst_inter_diff b r1 (snd (split_bst x t2)) \\<bind>\n                        (\\<lambda>r.\n                            if (x \\<in> B) = b\n                            then return_pmf \\<langle>l, x, r\\<rangle>\n                            else mrbst_join l r))))))", "using \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite B\n\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r1.\n                random_bst B \\<bind>\n                (\\<lambda>t2.\n                    mrbst_inter_diff b l1 (fst (split_bst x t2)) \\<bind>\n                    (\\<lambda>l.\n                        mrbst_inter_diff b r1 (snd (split_bst x t2)) \\<bind>\n                        (\\<lambda>r.\n                            if isin t2 x = b\n                            then return_pmf \\<langle>l, x, r\\<rangle>\n                            else mrbst_join l r)))))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r1.\n                random_bst B \\<bind>\n                (\\<lambda>t2.\n                    mrbst_inter_diff b l1 (fst (split_bst x t2)) \\<bind>\n                    (\\<lambda>l.\n                        mrbst_inter_diff b r1 (snd (split_bst x t2)) \\<bind>\n                        (\\<lambda>r.\n                            if (x \\<in> B) = b\n                            then return_pmf \\<langle>l, x, r\\<rangle>\n                            else mrbst_join l r))))))", "by (intro bind_pmf_cong refl) (auto simp: isin_random_bst)"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r1.\n              random_bst B \\<bind>\n              (\\<lambda>t2.\n                  let (l2, r2) = split_bst x t2\n                  in mrbst_inter_diff b l1 l2 \\<bind>\n                     (\\<lambda>l.\n                         mrbst_inter_diff b r1 r2 \\<bind>\n                         (\\<lambda>r.\n                             if isin t2 x = b\n                             then return_pmf \\<langle>l, x, r\\<rangle>\n                             else mrbst_join l r)))))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r1.\n              random_bst B \\<bind>\n              (\\<lambda>t2.\n                  let (l2, r2) = split_bst x t2\n                  in mrbst_inter_diff b l1 l2 \\<bind>\n                     (\\<lambda>l.\n                         mrbst_inter_diff b r1 r2 \\<bind>\n                         (\\<lambda>r.\n                             if (x \\<in> B) = b\n                             then return_pmf \\<langle>l, x, r\\<rangle>\n                             else mrbst_join l r))))))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "also"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r1.\n              random_bst B \\<bind>\n              (\\<lambda>t2.\n                  let (l2, r2) = split_bst x t2\n                  in mrbst_inter_diff b l1 l2 \\<bind>\n                     (\\<lambda>l.\n                         mrbst_inter_diff b r1 r2 \\<bind>\n                         (\\<lambda>r.\n                             if isin t2 x = b\n                             then return_pmf \\<langle>l, x, r\\<rangle>\n                             else mrbst_join l r)))))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r1.\n              random_bst B \\<bind>\n              (\\<lambda>t2.\n                  let (l2, r2) = split_bst x t2\n                  in mrbst_inter_diff b l1 l2 \\<bind>\n                     (\\<lambda>l.\n                         mrbst_inter_diff b r1 r2 \\<bind>\n                         (\\<lambda>r.\n                             if (x \\<in> B) = b\n                             then return_pmf \\<langle>l, x, r\\<rangle>\n                             else mrbst_join l r))))))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have \"\\<dots> = do {\n                      x \\<leftarrow> pmf_of_set A;\n                      l1 \\<leftarrow> random_bst {y\\<in>A. y < x};\n                      r1 \\<leftarrow> random_bst {y\\<in>A. y > x};\n                      (l2, r2) \\<leftarrow> map_pmf (split_bst x) (random_bst B);\n                      l \\<leftarrow> mrbst_inter_diff b l1 l2;\n                      r \\<leftarrow> mrbst_inter_diff b r1 r2;\n                      if x \\<in> B = b then return_pmf \\<langle>l, x, r\\<rangle> else mrbst_join l r\n                    }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r1.\n                random_bst B \\<bind>\n                (\\<lambda>t2.\n                    let (l2, r2) = split_bst x t2\n                    in mrbst_inter_diff b l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_inter_diff b r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               if (x \\<in> B) = b\n                               then return_pmf \\<langle>l, x, r\\<rangle>\n                               else mrbst_join l r)))))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r1.\n                map_pmf (split_bst x) (random_bst B) \\<bind>\n                (\\<lambda>(l2, r2).\n                    mrbst_inter_diff b l1 l2 \\<bind>\n                    (\\<lambda>l.\n                        mrbst_inter_diff b r1 r2 \\<bind>\n                        (\\<lambda>r.\n                            if (x \\<in> B) = b\n                            then return_pmf \\<langle>l, x, r\\<rangle>\n                            else mrbst_join l r))))))", "by (simp add: Let_def map_pmf_def)"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r1.\n              random_bst B \\<bind>\n              (\\<lambda>t2.\n                  let (l2, r2) = split_bst x t2\n                  in mrbst_inter_diff b l1 l2 \\<bind>\n                     (\\<lambda>l.\n                         mrbst_inter_diff b r1 r2 \\<bind>\n                         (\\<lambda>r.\n                             if (x \\<in> B) = b\n                             then return_pmf \\<langle>l, x, r\\<rangle>\n                             else mrbst_join l r)))))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r1.\n              map_pmf (split_bst x) (random_bst B) \\<bind>\n              (\\<lambda>(l2, r2).\n                  mrbst_inter_diff b l1 l2 \\<bind>\n                  (\\<lambda>l.\n                      mrbst_inter_diff b r1 r2 \\<bind>\n                      (\\<lambda>r.\n                          if (x \\<in> B) = b\n                          then return_pmf \\<langle>l, x, r\\<rangle>\n                          else mrbst_join l r))))))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "also"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r1.\n              random_bst B \\<bind>\n              (\\<lambda>t2.\n                  let (l2, r2) = split_bst x t2\n                  in mrbst_inter_diff b l1 l2 \\<bind>\n                     (\\<lambda>l.\n                         mrbst_inter_diff b r1 r2 \\<bind>\n                         (\\<lambda>r.\n                             if (x \\<in> B) = b\n                             then return_pmf \\<langle>l, x, r\\<rangle>\n                             else mrbst_join l r)))))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r1.\n              map_pmf (split_bst x) (random_bst B) \\<bind>\n              (\\<lambda>(l2, r2).\n                  mrbst_inter_diff b l1 l2 \\<bind>\n                  (\\<lambda>l.\n                      mrbst_inter_diff b r1 r2 \\<bind>\n                      (\\<lambda>r.\n                          if (x \\<in> B) = b\n                          then return_pmf \\<langle>l, x, r\\<rangle>\n                          else mrbst_join l r))))))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have \"\\<dots> = do {\n                      x \\<leftarrow> pmf_of_set A;\n                      l1 \\<leftarrow> random_bst {y\\<in>A. y < x};\n                      r1 \\<leftarrow> random_bst {y\\<in>A. y > x};\n                      (l2, r2) \\<leftarrow> pair_pmf (random_bst {y\\<in>B. y < x}) (random_bst {y\\<in>B. y > x});\n                      l \\<leftarrow> mrbst_inter_diff b l1 l2;\n                      r \\<leftarrow> mrbst_inter_diff b r1 r2;\n                      if x \\<in> B = b then return_pmf \\<langle>l, x, r\\<rangle> else mrbst_join l r\n                    }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r1.\n                map_pmf (split_bst x) (random_bst B) \\<bind>\n                (\\<lambda>(l2, r2).\n                    mrbst_inter_diff b l1 l2 \\<bind>\n                    (\\<lambda>l.\n                        mrbst_inter_diff b r1 r2 \\<bind>\n                        (\\<lambda>r.\n                            if (x \\<in> B) = b\n                            then return_pmf \\<langle>l, x, r\\<rangle>\n                            else mrbst_join l r)))))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r1.\n                pair_pmf (random_bst {y \\<in> B. y < x})\n                 (random_bst {y \\<in> B. x < y}) \\<bind>\n                (\\<lambda>(l2, r2).\n                    mrbst_inter_diff b l1 l2 \\<bind>\n                    (\\<lambda>l.\n                        mrbst_inter_diff b r1 r2 \\<bind>\n                        (\\<lambda>r.\n                            if (x \\<in> B) = b\n                            then return_pmf \\<langle>l, x, r\\<rangle>\n                            else mrbst_join l r))))))", "by (intro bind_pmf_cong refl split_random_bst \\<open>finite B\\<close>)"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r1.\n              map_pmf (split_bst x) (random_bst B) \\<bind>\n              (\\<lambda>(l2, r2).\n                  mrbst_inter_diff b l1 l2 \\<bind>\n                  (\\<lambda>l.\n                      mrbst_inter_diff b r1 r2 \\<bind>\n                      (\\<lambda>r.\n                          if (x \\<in> B) = b\n                          then return_pmf \\<langle>l, x, r\\<rangle>\n                          else mrbst_join l r)))))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r1.\n              pair_pmf (random_bst {y \\<in> B. y < x})\n               (random_bst {y \\<in> B. x < y}) \\<bind>\n              (\\<lambda>(l2, r2).\n                  mrbst_inter_diff b l1 l2 \\<bind>\n                  (\\<lambda>l.\n                      mrbst_inter_diff b r1 r2 \\<bind>\n                      (\\<lambda>r.\n                          if (x \\<in> B) = b\n                          then return_pmf \\<langle>l, x, r\\<rangle>\n                          else mrbst_join l r))))))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "also"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r1.\n              map_pmf (split_bst x) (random_bst B) \\<bind>\n              (\\<lambda>(l2, r2).\n                  mrbst_inter_diff b l1 l2 \\<bind>\n                  (\\<lambda>l.\n                      mrbst_inter_diff b r1 r2 \\<bind>\n                      (\\<lambda>r.\n                          if (x \\<in> B) = b\n                          then return_pmf \\<langle>l, x, r\\<rangle>\n                          else mrbst_join l r)))))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r1.\n              pair_pmf (random_bst {y \\<in> B. y < x})\n               (random_bst {y \\<in> B. x < y}) \\<bind>\n              (\\<lambda>(l2, r2).\n                  mrbst_inter_diff b l1 l2 \\<bind>\n                  (\\<lambda>l.\n                      mrbst_inter_diff b r1 r2 \\<bind>\n                      (\\<lambda>r.\n                          if (x \\<in> B) = b\n                          then return_pmf \\<langle>l, x, r\\<rangle>\n                          else mrbst_join l r))))))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have \"\\<dots> = do {\n                      x \\<leftarrow> pmf_of_set A;\n                      l1 \\<leftarrow> R1 x;\n                      r1 \\<leftarrow> R2 x;\n                      l2 \\<leftarrow> random_bst {y\\<in>B. y < x};\n                      r2 \\<leftarrow> random_bst {y\\<in>B. y > x};\n                      l \\<leftarrow> mrbst_inter_diff b l1 l2;\n                      r \\<leftarrow> mrbst_inter_diff b r1 r2;\n                      if x \\<in> B = b then return_pmf \\<langle>l, x, r\\<rangle> else mrbst_join l r\n                    }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r1.\n                pair_pmf (random_bst {y \\<in> B. y < x})\n                 (random_bst {y \\<in> B. x < y}) \\<bind>\n                (\\<lambda>(l2, r2).\n                    mrbst_inter_diff b l1 l2 \\<bind>\n                    (\\<lambda>l.\n                        mrbst_inter_diff b r1 r2 \\<bind>\n                        (\\<lambda>r.\n                            if (x \\<in> B) = b\n                            then return_pmf \\<langle>l, x, r\\<rangle>\n                            else mrbst_join l r)))))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        R1 x \\<bind>\n        (\\<lambda>l1.\n            R2 x \\<bind>\n            (\\<lambda>r1.\n                random_bst {y \\<in> B. y < x} \\<bind>\n                (\\<lambda>l2.\n                    random_bst {y \\<in> B. x < y} \\<bind>\n                    (\\<lambda>r2.\n                        mrbst_inter_diff b l1 l2 \\<bind>\n                        (\\<lambda>l.\n                            mrbst_inter_diff b r1 r2 \\<bind>\n                            (\\<lambda>r.\n                                if (x \\<in> B) = b\n                                then return_pmf \\<langle>l, x, r\\<rangle>\n                                else mrbst_join l r)))))))", "unfolding pair_pmf_def bind_assoc_pmf R1_R2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r1.\n                random_bst {y \\<in> B. y < x} \\<bind>\n                (\\<lambda>xa.\n                    random_bst {y \\<in> B. x < y} \\<bind>\n                    (\\<lambda>xb.\n                        return_pmf (xa, xb) \\<bind>\n                        (\\<lambda>(l2, r2).\n                            mrbst_inter_diff b l1 l2 \\<bind>\n                            (\\<lambda>l.\n                                mrbst_inter_diff b r1 r2 \\<bind>\n                                (\\<lambda>r.\n                                    if (x \\<in> B) = b\n                                    then return_pmf\n    \\<langle>l, x, r\\<rangle>\n                                    else mrbst_join l r)))))))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r1.\n                random_bst {y \\<in> B. y < x} \\<bind>\n                (\\<lambda>l2.\n                    random_bst {y \\<in> B. x < y} \\<bind>\n                    (\\<lambda>r2.\n                        mrbst_inter_diff b l1 l2 \\<bind>\n                        (\\<lambda>l.\n                            mrbst_inter_diff b r1 r2 \\<bind>\n                            (\\<lambda>r.\n                                if (x \\<in> B) = b\n                                then return_pmf \\<langle>l, x, r\\<rangle>\n                                else mrbst_join l r)))))))", "by simp"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r1.\n              pair_pmf (random_bst {y \\<in> B. y < x})\n               (random_bst {y \\<in> B. x < y}) \\<bind>\n              (\\<lambda>(l2, r2).\n                  mrbst_inter_diff b l1 l2 \\<bind>\n                  (\\<lambda>l.\n                      mrbst_inter_diff b r1 r2 \\<bind>\n                      (\\<lambda>r.\n                          if (x \\<in> B) = b\n                          then return_pmf \\<langle>l, x, r\\<rangle>\n                          else mrbst_join l r)))))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      R1 x \\<bind>\n      (\\<lambda>l1.\n          R2 x \\<bind>\n          (\\<lambda>r1.\n              random_bst {y \\<in> B. y < x} \\<bind>\n              (\\<lambda>l2.\n                  random_bst {y \\<in> B. x < y} \\<bind>\n                  (\\<lambda>r2.\n                      mrbst_inter_diff b l1 l2 \\<bind>\n                      (\\<lambda>l.\n                          mrbst_inter_diff b r1 r2 \\<bind>\n                          (\\<lambda>r.\n                              if (x \\<in> B) = b\n                              then return_pmf \\<langle>l, x, r\\<rangle>\n                              else mrbst_join l r)))))))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "also"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {y \\<in> A. y < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> A. x < y} \\<bind>\n          (\\<lambda>r1.\n              pair_pmf (random_bst {y \\<in> B. y < x})\n               (random_bst {y \\<in> B. x < y}) \\<bind>\n              (\\<lambda>(l2, r2).\n                  mrbst_inter_diff b l1 l2 \\<bind>\n                  (\\<lambda>l.\n                      mrbst_inter_diff b r1 r2 \\<bind>\n                      (\\<lambda>r.\n                          if (x \\<in> B) = b\n                          then return_pmf \\<langle>l, x, r\\<rangle>\n                          else mrbst_join l r)))))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      R1 x \\<bind>\n      (\\<lambda>l1.\n          R2 x \\<bind>\n          (\\<lambda>r1.\n              random_bst {y \\<in> B. y < x} \\<bind>\n              (\\<lambda>l2.\n                  random_bst {y \\<in> B. x < y} \\<bind>\n                  (\\<lambda>r2.\n                      mrbst_inter_diff b l1 l2 \\<bind>\n                      (\\<lambda>l.\n                          mrbst_inter_diff b r1 r2 \\<bind>\n                          (\\<lambda>r.\n                              if (x \\<in> B) = b\n                              then return_pmf \\<langle>l, x, r\\<rangle>\n                              else mrbst_join l r)))))))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have \"\\<dots> = do {\n                      x \\<leftarrow> pmf_of_set A;\n                      l \\<leftarrow> do {l1 \\<leftarrow> R1 x; l2 \\<leftarrow> random_bst {y\\<in>B. y < x}; mrbst_inter_diff b l1 l2};\n                      r \\<leftarrow> do {r1 \\<leftarrow> R2 x; r2 \\<leftarrow> random_bst {y\\<in>B. y > x}; mrbst_inter_diff b r1 r2};\n                      if x \\<in> B = b then return_pmf \\<langle>l, x, r\\<rangle> else mrbst_join l r\n                    }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        R1 x \\<bind>\n        (\\<lambda>l1.\n            R2 x \\<bind>\n            (\\<lambda>r1.\n                random_bst {y \\<in> B. y < x} \\<bind>\n                (\\<lambda>l2.\n                    random_bst {y \\<in> B. x < y} \\<bind>\n                    (\\<lambda>r2.\n                        mrbst_inter_diff b l1 l2 \\<bind>\n                        (\\<lambda>l.\n                            mrbst_inter_diff b r1 r2 \\<bind>\n                            (\\<lambda>r.\n                                if (x \\<in> B) = b\n                                then return_pmf \\<langle>l, x, r\\<rangle>\n                                else mrbst_join l r))))))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        R1 x \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> B. y < x} \\<bind>\n            mrbst_inter_diff b l1) \\<bind>\n        (\\<lambda>l.\n            R2 x \\<bind>\n            (\\<lambda>r1.\n                random_bst {y \\<in> B. x < y} \\<bind>\n                mrbst_inter_diff b r1) \\<bind>\n            (\\<lambda>r.\n                if (x \\<in> B) = b then return_pmf \\<langle>l, x, r\\<rangle>\n                else mrbst_join l r)))", "unfolding bind_assoc_pmf"], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        R1 x \\<bind>\n        (\\<lambda>l1.\n            R2 x \\<bind>\n            (\\<lambda>r1.\n                random_bst {y \\<in> B. y < x} \\<bind>\n                (\\<lambda>l2.\n                    random_bst {y \\<in> B. x < y} \\<bind>\n                    (\\<lambda>r2.\n                        mrbst_inter_diff b l1 l2 \\<bind>\n                        (\\<lambda>l.\n                            mrbst_inter_diff b r1 r2 \\<bind>\n                            (\\<lambda>r.\n                                if (x \\<in> B) = b\n                                then return_pmf \\<langle>l, x, r\\<rangle>\n                                else mrbst_join l r))))))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        R1 x \\<bind>\n        (\\<lambda>xa.\n            random_bst {y \\<in> B. y < x} \\<bind>\n            (\\<lambda>xb.\n                mrbst_inter_diff b xa xb \\<bind>\n                (\\<lambda>l.\n                    R2 x \\<bind>\n                    (\\<lambda>xa.\n                        random_bst {y \\<in> B. x < y} \\<bind>\n                        (\\<lambda>xb.\n                            mrbst_inter_diff b xa xb \\<bind>\n                            (\\<lambda>r.\n                                if (x \\<in> B) = b\n                                then return_pmf \\<langle>l, x, r\\<rangle>\n                                else mrbst_join l r)))))))", "by (intro bind_pmf_cong[OF refl]) simp"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      R1 x \\<bind>\n      (\\<lambda>l1.\n          R2 x \\<bind>\n          (\\<lambda>r1.\n              random_bst {y \\<in> B. y < x} \\<bind>\n              (\\<lambda>l2.\n                  random_bst {y \\<in> B. x < y} \\<bind>\n                  (\\<lambda>r2.\n                      mrbst_inter_diff b l1 l2 \\<bind>\n                      (\\<lambda>l.\n                          mrbst_inter_diff b r1 r2 \\<bind>\n                          (\\<lambda>r.\n                              if (x \\<in> B) = b\n                              then return_pmf \\<langle>l, x, r\\<rangle>\n                              else mrbst_join l r))))))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      R1 x \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> B. y < x} \\<bind>\n          mrbst_inter_diff b l1) \\<bind>\n      (\\<lambda>l.\n          R2 x \\<bind>\n          (\\<lambda>r1.\n              random_bst {y \\<in> B. x < y} \\<bind>\n              mrbst_inter_diff b r1) \\<bind>\n          (\\<lambda>r.\n              if (x \\<in> B) = b then return_pmf \\<langle>l, x, r\\<rangle>\n              else mrbst_join l r)))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "also"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      R1 x \\<bind>\n      (\\<lambda>l1.\n          R2 x \\<bind>\n          (\\<lambda>r1.\n              random_bst {y \\<in> B. y < x} \\<bind>\n              (\\<lambda>l2.\n                  random_bst {y \\<in> B. x < y} \\<bind>\n                  (\\<lambda>r2.\n                      mrbst_inter_diff b l1 l2 \\<bind>\n                      (\\<lambda>l.\n                          mrbst_inter_diff b r1 r2 \\<bind>\n                          (\\<lambda>r.\n                              if (x \\<in> B) = b\n                              then return_pmf \\<langle>l, x, r\\<rangle>\n                              else mrbst_join l r))))))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      R1 x \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> B. y < x} \\<bind>\n          mrbst_inter_diff b l1) \\<bind>\n      (\\<lambda>l.\n          R2 x \\<bind>\n          (\\<lambda>r1.\n              random_bst {y \\<in> B. x < y} \\<bind>\n              mrbst_inter_diff b r1) \\<bind>\n          (\\<lambda>r.\n              if (x \\<in> B) = b then return_pmf \\<langle>l, x, r\\<rangle>\n              else mrbst_join l r)))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have \"\\<dots> = do {\n                      x \\<leftarrow> pmf_of_set A;\n                      l \\<leftarrow> random_bst ({y\\<in>A. y < x} \\<diamondop> {y\\<in>B. y < x});\n                      r \\<leftarrow> random_bst ({y\\<in>A. y > x} \\<diamondop> {y\\<in>B. y > x});\n                      if x \\<in> B = b then return_pmf \\<langle>l, x, r\\<rangle> else mrbst_join l r\n                    }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        R1 x \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> B. y < x} \\<bind>\n            mrbst_inter_diff b l1) \\<bind>\n        (\\<lambda>l.\n            R2 x \\<bind>\n            (\\<lambda>r1.\n                random_bst {y \\<in> B. x < y} \\<bind>\n                mrbst_inter_diff b r1) \\<bind>\n            (\\<lambda>r.\n                if (x \\<in> B) = b then return_pmf \\<langle>l, x, r\\<rangle>\n                else mrbst_join l r))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst\n         ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n        (\\<lambda>l.\n            random_bst\n             ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n            (\\<lambda>r.\n                if (x \\<in> B) = b then return_pmf \\<langle>l, x, r\\<rangle>\n                else mrbst_join l r)))", "using \\<open>finite A\\<close> \\<open>finite B\\<close> \\<open>A \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        R1 x \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> B. y < x} \\<bind>\n            mrbst_inter_diff b l1) \\<bind>\n        (\\<lambda>l.\n            R2 x \\<bind>\n            (\\<lambda>r1.\n                random_bst {y \\<in> B. x < y} \\<bind>\n                mrbst_inter_diff b r1) \\<bind>\n            (\\<lambda>r.\n                if (x \\<in> B) = b then return_pmf \\<langle>l, x, r\\<rangle>\n                else mrbst_join l r))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst\n         ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n        (\\<lambda>l.\n            random_bst\n             ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n            (\\<lambda>r.\n                if (x \\<in> B) = b then return_pmf \\<langle>l, x, r\\<rangle>\n                else mrbst_join l r)))", "unfolding R1_R2_def"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {y \\<in> A. y < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {y \\<in> B. y < x} \\<bind>\n            mrbst_inter_diff b l1) \\<bind>\n        (\\<lambda>l.\n            random_bst {y \\<in> A. x < y} \\<bind>\n            (\\<lambda>r1.\n                random_bst {y \\<in> B. x < y} \\<bind>\n                mrbst_inter_diff b r1) \\<bind>\n            (\\<lambda>r.\n                if (x \\<in> B) = b then return_pmf \\<langle>l, x, r\\<rangle>\n                else mrbst_join l r))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst\n         ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n        (\\<lambda>l.\n            random_bst\n             ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n            (\\<lambda>r.\n                if (x \\<in> B) = b then return_pmf \\<langle>l, x, r\\<rangle>\n                else mrbst_join l r)))", "by (intro bind_pmf_cong refl psubset.IH) auto"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      R1 x \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> B. y < x} \\<bind>\n          mrbst_inter_diff b l1) \\<bind>\n      (\\<lambda>l.\n          R2 x \\<bind>\n          (\\<lambda>r1.\n              random_bst {y \\<in> B. x < y} \\<bind>\n              mrbst_inter_diff b r1) \\<bind>\n          (\\<lambda>r.\n              if (x \\<in> B) = b then return_pmf \\<langle>l, x, r\\<rangle>\n              else mrbst_join l r))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst\n       ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n      (\\<lambda>l.\n          random_bst\n           ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n          (\\<lambda>r.\n              if (x \\<in> B) = b then return_pmf \\<langle>l, x, r\\<rangle>\n              else mrbst_join l r)))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "also"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      R1 x \\<bind>\n      (\\<lambda>l1.\n          random_bst {y \\<in> B. y < x} \\<bind>\n          mrbst_inter_diff b l1) \\<bind>\n      (\\<lambda>l.\n          R2 x \\<bind>\n          (\\<lambda>r1.\n              random_bst {y \\<in> B. x < y} \\<bind>\n              mrbst_inter_diff b r1) \\<bind>\n          (\\<lambda>r.\n              if (x \\<in> B) = b then return_pmf \\<langle>l, x, r\\<rangle>\n              else mrbst_join l r))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst\n       ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n      (\\<lambda>l.\n          random_bst\n           ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n          (\\<lambda>r.\n              if (x \\<in> B) = b then return_pmf \\<langle>l, x, r\\<rangle>\n              else mrbst_join l r)))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have \"\\<dots> = do {\n                      x \\<leftarrow> pmf_of_set A;\n                      if x \\<in> B = b then do {\n                        l \\<leftarrow> random_bst ({y\\<in>A. y < x} \\<diamondop> {y\\<in>B. y < x});\n                        r \\<leftarrow> random_bst ({y\\<in>A. y > x} \\<diamondop> {y\\<in>B. y > x});\n                        return_pmf \\<langle>l, x, r\\<rangle>\n                      } else do {\n                        l \\<leftarrow> random_bst ({y\\<in>A. y < x} \\<diamondop> {y\\<in>B. y < x});\n                        r \\<leftarrow> random_bst ({y\\<in>A. y > x} \\<diamondop> {y\\<in>B. y > x});\n                        mrbst_join l r\n                      }\n                    }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst\n         ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n        (\\<lambda>l.\n            random_bst\n             ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n            (\\<lambda>r.\n                if (x \\<in> B) = b then return_pmf \\<langle>l, x, r\\<rangle>\n                else mrbst_join l r))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        if (x \\<in> B) = b\n        then random_bst\n              ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n             (\\<lambda>l.\n                 random_bst\n                  ({y \\<in> A. x < y} \\<diamondop>\n                   {y \\<in> B. x < y}) \\<bind>\n                 (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n        else random_bst\n              ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n             (\\<lambda>l.\n                 random_bst\n                  ({y \\<in> A. x < y} \\<diamondop>\n                   {y \\<in> B. x < y}) \\<bind>\n                 mrbst_join l))", "by simp"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst\n       ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n      (\\<lambda>l.\n          random_bst\n           ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n          (\\<lambda>r.\n              if (x \\<in> B) = b then return_pmf \\<langle>l, x, r\\<rangle>\n              else mrbst_join l r))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      if (x \\<in> B) = b\n      then random_bst\n            ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n           (\\<lambda>l.\n               random_bst\n                ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n               (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n      else random_bst\n            ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n           (\\<lambda>l.\n               random_bst\n                ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n               mrbst_join l))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "also"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst\n       ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n      (\\<lambda>l.\n          random_bst\n           ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n          (\\<lambda>r.\n              if (x \\<in> B) = b then return_pmf \\<langle>l, x, r\\<rangle>\n              else mrbst_join l r))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      if (x \\<in> B) = b\n      then random_bst\n            ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n           (\\<lambda>l.\n               random_bst\n                ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n               (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n      else random_bst\n            ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n           (\\<lambda>l.\n               random_bst\n                ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n               mrbst_join l))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have \"\\<dots> = do {\n                      x \\<leftarrow> pmf_of_set A;\n                      if x \\<in> B = b then do {\n                        l \\<leftarrow> random_bst ({y\\<in>A. y < x} \\<diamondop> {y\\<in>B. y < x});\n                        r \\<leftarrow> random_bst ({y\\<in>A. y > x} \\<diamondop> {y\\<in>B. y > x});\n                        return_pmf \\<langle>l, x, r\\<rangle>\n                      } else do {\n                        random_bst ({y\\<in>A. y < x} \\<diamondop> {y\\<in>B. y < x} \\<union> {y\\<in>A. y > x} \\<diamondop> {y\\<in>B. y > x})\n                      }\n                    }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        if (x \\<in> B) = b\n        then random_bst\n              ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n             (\\<lambda>l.\n                 random_bst\n                  ({y \\<in> A. x < y} \\<diamondop>\n                   {y \\<in> B. x < y}) \\<bind>\n                 (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n        else random_bst\n              ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n             (\\<lambda>l.\n                 random_bst\n                  ({y \\<in> A. x < y} \\<diamondop>\n                   {y \\<in> B. x < y}) \\<bind>\n                 mrbst_join l)) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        if (x \\<in> B) = b\n        then random_bst\n              ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n             (\\<lambda>l.\n                 random_bst\n                  ({y \\<in> A. x < y} \\<diamondop>\n                   {y \\<in> B. x < y}) \\<bind>\n                 (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n        else random_bst\n              ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x} \\<union>\n               {y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}))", "using \\<open>finite A\\<close> \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        if (x \\<in> B) = b\n        then random_bst\n              ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n             (\\<lambda>l.\n                 random_bst\n                  ({y \\<in> A. x < y} \\<diamondop>\n                   {y \\<in> B. x < y}) \\<bind>\n                 (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n        else random_bst\n              ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n             (\\<lambda>l.\n                 random_bst\n                  ({y \\<in> A. x < y} \\<diamondop>\n                   {y \\<in> B. x < y}) \\<bind>\n                 mrbst_join l)) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        if (x \\<in> B) = b\n        then random_bst\n              ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n             (\\<lambda>l.\n                 random_bst\n                  ({y \\<in> A. x < y} \\<diamondop>\n                   {y \\<in> B. x < y}) \\<bind>\n                 (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n        else random_bst\n              ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x} \\<union>\n               {y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}))", "by (intro bind_pmf_cong refl mrbst_join_correct if_cong) (auto simp: setop_def)"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      if (x \\<in> B) = b\n      then random_bst\n            ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n           (\\<lambda>l.\n               random_bst\n                ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n               (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n      else random_bst\n            ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n           (\\<lambda>l.\n               random_bst\n                ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n               mrbst_join l)) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      if (x \\<in> B) = b\n      then random_bst\n            ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n           (\\<lambda>l.\n               random_bst\n                ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n               (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n      else random_bst\n            ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x} \\<union>\n             {y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "also"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      if (x \\<in> B) = b\n      then random_bst\n            ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n           (\\<lambda>l.\n               random_bst\n                ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n               (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n      else random_bst\n            ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n           (\\<lambda>l.\n               random_bst\n                ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n               mrbst_join l)) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      if (x \\<in> B) = b\n      then random_bst\n            ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n           (\\<lambda>l.\n               random_bst\n                ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n               (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n      else random_bst\n            ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x} \\<union>\n             {y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have \"\\<dots> = do {\n                      x \\<leftarrow> pmf_of_set A;\n                      if x \\<in> B = b then do {\n                        l \\<leftarrow> random_bst ({y\\<in>A \\<diamondop> B. y < x});\n                        r \\<leftarrow> random_bst ({y\\<in>A \\<diamondop> B. y > x});\n                        return_pmf \\<langle>l, x, r\\<rangle>\n                      } else do {\n                        random_bst (A \\<diamondop> B)\n                      }\n                    }\" (is \"_ = pmf_of_set A \\<bind> ?f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        if (x \\<in> B) = b\n        then random_bst\n              ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n             (\\<lambda>l.\n                 random_bst\n                  ({y \\<in> A. x < y} \\<diamondop>\n                   {y \\<in> B. x < y}) \\<bind>\n                 (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n        else random_bst\n              ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x} \\<union>\n               {y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y})) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        if (x \\<in> B) = b\n        then random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n             (\\<lambda>l.\n                 random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                 (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n        else random_bst (A \\<diamondop> B))", "using \\<open>finite A\\<close> \\<open>A \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        if (x \\<in> B) = b\n        then random_bst\n              ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n             (\\<lambda>l.\n                 random_bst\n                  ({y \\<in> A. x < y} \\<diamondop>\n                   {y \\<in> B. x < y}) \\<bind>\n                 (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n        else random_bst\n              ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x} \\<union>\n               {y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y})) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        if (x \\<in> B) = b\n        then random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n             (\\<lambda>l.\n                 random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                 (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n        else random_bst (A \\<diamondop> B))", "by (intro bind_pmf_cong refl if_cong arg_cong[of _ _ random_bst])\n         (auto simp: order.strict_iff_order setop_def)"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      if (x \\<in> B) = b\n      then random_bst\n            ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n           (\\<lambda>l.\n               random_bst\n                ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n               (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n      else random_bst\n            ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x} \\<union>\n             {y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y})) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      if (x \\<in> B) = b\n      then random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n           (\\<lambda>l.\n               random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n               (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n      else random_bst (A \\<diamondop> B))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "also"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      if (x \\<in> B) = b\n      then random_bst\n            ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x}) \\<bind>\n           (\\<lambda>l.\n               random_bst\n                ({y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y}) \\<bind>\n               (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n      else random_bst\n            ({y \\<in> A. y < x} \\<diamondop> {y \\<in> B. y < x} \\<union>\n             {y \\<in> A. x < y} \\<diamondop> {y \\<in> B. x < y})) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      if (x \\<in> B) = b\n      then random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n           (\\<lambda>l.\n               random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n               (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n      else random_bst (A \\<diamondop> B))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have \"\\<dots> = do {\n                      b' \\<leftarrow> bernoulli_pmf (card (A \\<inter> B) / card A);\n                      x \\<leftarrow> (if b' then pmf_of_set (A \\<inter> B) else pmf_of_set (A - B));\n                      if b' = b then do {\n                        l \\<leftarrow> random_bst ({y\\<in>A \\<diamondop> B. y < x});\n                        r \\<leftarrow> random_bst ({y\\<in>A \\<diamondop> B. y > x});\n                        return_pmf \\<langle>l, x, r\\<rangle>\n                      } else do {\n                        random_bst (A \\<diamondop> B)\n                      }\n                    }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        if (x \\<in> B) = b\n        then random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n             (\\<lambda>l.\n                 random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                 (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n        else random_bst (A \\<diamondop> B)) =\n    bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n    (\\<lambda>b'.\n        (if b' then pmf_of_set (A \\<inter> B)\n         else pmf_of_set (A - B)) \\<bind>\n        (\\<lambda>x.\n            if b' = b\n            then random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n            else random_bst (A \\<diamondop> B)))", "unfolding bind_assoc_pmf eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n    (\\<lambda>x.\n        (if x then pmf_of_set (A \\<inter> B)\n         else pmf_of_set (A - B)) \\<bind>\n        (\\<lambda>x.\n            if (x \\<in> B) = b\n            then random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n            else random_bst (A \\<diamondop> B))) =\n    bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n    (\\<lambda>b'.\n        (if b' then pmf_of_set (A \\<inter> B)\n         else pmf_of_set (A - B)) \\<bind>\n        (\\<lambda>x.\n            if b' = b\n            then random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n            else random_bst (A \\<diamondop> B)))", "using \\<open>card A > 0\\<close> \\<open>finite A\\<close> \\<open>finite B\\<close> not_subset"], ["proof (prove)\nusing this:\n  0 < card A\n  finite A\n  finite B\n  card (A \\<inter> B) < card A \\<Longrightarrow> \\<not> A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n    (\\<lambda>x.\n        (if x then pmf_of_set (A \\<inter> B)\n         else pmf_of_set (A - B)) \\<bind>\n        (\\<lambda>x.\n            if (x \\<in> B) = b\n            then random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n            else random_bst (A \\<diamondop> B))) =\n    bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n    (\\<lambda>b'.\n        (if b' then pmf_of_set (A \\<inter> B)\n         else pmf_of_set (A - B)) \\<bind>\n        (\\<lambda>x.\n            if b' = b\n            then random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n            else random_bst (A \\<diamondop> B)))", "by (intro bind_pmf_cong refl if_cong)\n         (auto intro: bind_pmf_cong split: if_splits simp: divide_simps card_gt_0_iff\n               dest!: in_set_pmf_of_setD)"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      if (x \\<in> B) = b\n      then random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n           (\\<lambda>l.\n               random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n               (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n      else random_bst (A \\<diamondop> B)) =\n  bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n  (\\<lambda>b'.\n      (if b' then pmf_of_set (A \\<inter> B) else pmf_of_set (A - B)) \\<bind>\n      (\\<lambda>x.\n          if b' = b\n          then random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n          else random_bst (A \\<diamondop> B)))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "also"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      if (x \\<in> B) = b\n      then random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n           (\\<lambda>l.\n               random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n               (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n      else random_bst (A \\<diamondop> B)) =\n  bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n  (\\<lambda>b'.\n      (if b' then pmf_of_set (A \\<inter> B) else pmf_of_set (A - B)) \\<bind>\n      (\\<lambda>x.\n          if b' = b\n          then random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n          else random_bst (A \\<diamondop> B)))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have \"\\<dots> = do {\n                      b' \\<leftarrow> bernoulli_pmf (card (A \\<inter> B) / card A);\n                      if b' = b then do {\n                        x \\<leftarrow> pmf_of_set (A \\<diamondop> B);\n                        l \\<leftarrow> random_bst ({y\\<in>A \\<diamondop> B. y < x});\n                        r \\<leftarrow> random_bst ({y\\<in>A \\<diamondop> B. y > x});\n                        return_pmf \\<langle>l, x, r\\<rangle>\n                      } else do {\n                        random_bst (A \\<diamondop> B)\n                      }\n                    }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n    (\\<lambda>b'.\n        (if b' then pmf_of_set (A \\<inter> B)\n         else pmf_of_set (A - B)) \\<bind>\n        (\\<lambda>x.\n            if b' = b\n            then random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n            else random_bst (A \\<diamondop> B))) =\n    bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n    (\\<lambda>b'.\n        if b' = b\n        then pmf_of_set (A \\<diamondop> B) \\<bind>\n             (\\<lambda>x.\n                 random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else random_bst (A \\<diamondop> B))", "by (intro bind_pmf_cong) (auto simp: setop_def)"], ["proof (state)\nthis:\n  bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n  (\\<lambda>b'.\n      (if b' then pmf_of_set (A \\<inter> B) else pmf_of_set (A - B)) \\<bind>\n      (\\<lambda>x.\n          if b' = b\n          then random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n          else random_bst (A \\<diamondop> B))) =\n  bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n  (\\<lambda>b'.\n      if b' = b\n      then pmf_of_set (A \\<diamondop> B) \\<bind>\n           (\\<lambda>x.\n               random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<diamondop> B))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "also"], ["proof (state)\nthis:\n  bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n  (\\<lambda>b'.\n      (if b' then pmf_of_set (A \\<inter> B) else pmf_of_set (A - B)) \\<bind>\n      (\\<lambda>x.\n          if b' = b\n          then random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n          else random_bst (A \\<diamondop> B))) =\n  bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n  (\\<lambda>b'.\n      if b' = b\n      then pmf_of_set (A \\<diamondop> B) \\<bind>\n           (\\<lambda>x.\n               random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<diamondop> B))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have \"\\<dots> = do {\n                      b' \\<leftarrow> bernoulli_pmf (card (A \\<inter> B) / card A);\n                      if b' = b then do {\n                        random_bst (A \\<diamondop> B)\n                      } else do {\n                        random_bst (A \\<diamondop> B)\n                      }\n                    }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n    (\\<lambda>b'.\n        if b' = b\n        then pmf_of_set (A \\<diamondop> B) \\<bind>\n             (\\<lambda>x.\n                 random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else random_bst (A \\<diamondop> B)) =\n    bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n    (\\<lambda>b'.\n        if b' = b then random_bst (A \\<diamondop> B)\n        else random_bst (A \\<diamondop> B))", "using \\<open>finite A\\<close> \\<open>finite B\\<close> \\<open>A \\<noteq> {}\\<close> not_subset \\<open>card A > 0\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  card (A \\<inter> B) < card A \\<Longrightarrow> \\<not> A \\<subseteq> B\n  0 < card A\n\ngoal (1 subgoal):\n 1. bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n    (\\<lambda>b'.\n        if b' = b\n        then pmf_of_set (A \\<diamondop> B) \\<bind>\n             (\\<lambda>x.\n                 random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else random_bst (A \\<diamondop> B)) =\n    bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n    (\\<lambda>b'.\n        if b' = b then random_bst (A \\<diamondop> B)\n        else random_bst (A \\<diamondop> B))", "by (intro bind_pmf_cong refl if_cong random_bst_reduce [symmetric])\n         (auto simp: setop_def field_simps)"], ["proof (state)\nthis:\n  bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n  (\\<lambda>b'.\n      if b' = b\n      then pmf_of_set (A \\<diamondop> B) \\<bind>\n           (\\<lambda>x.\n               random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<diamondop> B)) =\n  bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n  (\\<lambda>b'.\n      if b' = b then random_bst (A \\<diamondop> B)\n      else random_bst (A \\<diamondop> B))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "also"], ["proof (state)\nthis:\n  bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n  (\\<lambda>b'.\n      if b' = b\n      then pmf_of_set (A \\<diamondop> B) \\<bind>\n           (\\<lambda>x.\n               random_bst {y \\<in> A \\<diamondop> B. y < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {y \\<in> A \\<diamondop> B. x < y} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<diamondop> B)) =\n  bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n  (\\<lambda>b'.\n      if b' = b then random_bst (A \\<diamondop> B)\n      else random_bst (A \\<diamondop> B))\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "have \"\\<dots> = random_bst (A \\<diamondop> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n    (\\<lambda>b'.\n        if b' = b then random_bst (A \\<diamondop> B)\n        else random_bst (A \\<diamondop> B)) =\n    random_bst (A \\<diamondop> B)", "by simp"], ["proof (state)\nthis:\n  bernoulli_pmf (real (card (A \\<inter> B)) / real (card A)) \\<bind>\n  (\\<lambda>b'.\n      if b' = b then random_bst (A \\<diamondop> B)\n      else random_bst (A \\<diamondop> B)) =\n  random_bst (A \\<diamondop> B)\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "finally"], ["proof (chain)\npicking this:\n  random_bst A \\<bind>\n  (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n  random_bst (A \\<diamondop> B)", "show ?thesis"], ["proof (prove)\nusing this:\n  random_bst A \\<bind>\n  (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n  random_bst (A \\<diamondop> B)\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n    random_bst (A \\<diamondop> B)", "."], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n  random_bst (A \\<diamondop> B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  random_bst A \\<bind>\n  (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff b t1) =\n  random_bst (A \\<diamondop> B)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We now derive the intersection and difference from the generic operation:\n\\<close>"], ["", "fun mrbst_inter where\n  \"mrbst_inter \\<langle>\\<rangle> _ = return_pmf \\<langle>\\<rangle>\"\n| \"mrbst_inter \\<langle>l1, x, r1\\<rangle> t2 =\n     (case split_bst' x t2 of (sep, l2, r2) \\<Rightarrow>\n        do {\n          l \\<leftarrow> mrbst_inter l1 l2;\n          r \\<leftarrow> mrbst_inter r1 r2;\n          if sep then return_pmf \\<langle>l, x, r\\<rangle> else mrbst_join l r\n        })\""], ["", "lemma mrbst_inter_Leaf_left [simp]:\n  \"mrbst_inter \\<langle>\\<rangle> = (\\<lambda>_. return_pmf \\<langle>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_inter \\<langle>\\<rangle> =\n    (\\<lambda>_. return_pmf \\<langle>\\<rangle>)", "by (simp add: fun_eq_iff)"], ["", "lemma mrbst_inter_Leaf_right [simp]:\n  \"mrbst_inter (t1 :: 'a :: linorder tree) \\<langle>\\<rangle> = return_pmf \\<langle>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_inter t1 \\<langle>\\<rangle> = return_pmf \\<langle>\\<rangle>", "by (induction t1) (auto simp: bind_return_pmf)"], ["", "lemma mrbst_inter_reduce:\n  \"mrbst_inter \\<langle>l1, x, r1\\<rangle> =\n     (\\<lambda>t2. case split_bst' x t2 of (sep, l2, r2) \\<Rightarrow>\n        do {\n           l \\<leftarrow> mrbst_inter l1 l2;\n           r \\<leftarrow> mrbst_inter r1 r2;\n           if sep then return_pmf \\<langle>l, x, r\\<rangle> else mrbst_join l r\n         })\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_inter \\<langle>l1, x, r1\\<rangle> =\n    (\\<lambda>t2.\n        case split_bst' x t2 of\n        (sep, l2, r2) \\<Rightarrow>\n          mrbst_inter l1 l2 \\<bind>\n          (\\<lambda>l.\n              mrbst_inter r1 r2 \\<bind>\n              (\\<lambda>r.\n                  if sep then return_pmf \\<langle>l, x, r\\<rangle>\n                  else mrbst_join l r)))", "by (rule ext) simp"], ["", "lemma mrbst_inter_altdef: \"mrbst_inter = mrbst_inter_diff True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_inter = mrbst_inter_diff True", "proof (intro ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa. mrbst_inter x xa = mrbst_inter_diff True x xa", "fix t1 t2 :: \"'a tree\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa. mrbst_inter x xa = mrbst_inter_diff True x xa", "show \"mrbst_inter t1 t2 = mrbst_inter_diff True t1 t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_inter t1 t2 = mrbst_inter_diff True t1 t2", "by (induction t1 arbitrary: t2) auto"], ["proof (state)\nthis:\n  mrbst_inter t1 t2 = mrbst_inter_diff True t1 t2\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary\n  fixes t1 t2 :: \"'a :: linorder tree\"\n  assumes \"t' \\<in> set_pmf (mrbst_inter t1 t2)\" \"bst t1\" \"bst t2\"\n  shows   bst_mrbst_inter: \"bst t'\"\n    and   set_mrbst_inter: \"set_tree t' = set_tree t1 \\<inter> set_tree t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t' &&& set_tree t' = set_tree t1 \\<inter> set_tree t2", "using bst_mrbst_inter_diff[of t' True t1 t2] set_mrbst_inter_diff[of t' True t1 t2] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff True t1 t2); bst t1;\n   bst t2\\<rbrakk>\n  \\<Longrightarrow> bst t'\n  \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff True t1 t2); bst t1;\n   bst t2\\<rbrakk>\n  \\<Longrightarrow> set_tree t' =\n                    (if True then (\\<inter>) else (-)) (set_tree t1)\n                     (set_tree t2)\n  t' \\<in> set_pmf (mrbst_inter t1 t2)\n  bst t1\n  bst t2\n\ngoal (1 subgoal):\n 1. bst t' &&& set_tree t' = set_tree t1 \\<inter> set_tree t2", "by (simp_all add: mrbst_inter_altdef)"], ["", "corollary mrbst_inter_correct:\n  fixes A B :: \"'a :: linorder set\"\n  assumes \"finite A\" \"finite B\"\n  shows   \"do {t1 \\<leftarrow> random_bst A; t2 \\<leftarrow> random_bst B; mrbst_inter t1 t2} = random_bst (A \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter t1) =\n    random_bst (A \\<inter> B)", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter t1) =\n    random_bst (A \\<inter> B)", "unfolding mrbst_inter_altdef"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff True t1) =\n    random_bst (A \\<inter> B)", "by (subst mrbst_inter_diff_correct) simp_all"], ["", "fun mrbst_diff where\n  \"mrbst_diff \\<langle>\\<rangle> _ = return_pmf \\<langle>\\<rangle>\"\n| \"mrbst_diff \\<langle>l1, x, r1\\<rangle> t2 =\n     (case split_bst' x t2 of (sep, l2, r2) \\<Rightarrow>\n        do {\n          l \\<leftarrow> mrbst_diff l1 l2;\n          r \\<leftarrow> mrbst_diff r1 r2;\n          if sep then mrbst_join l r else return_pmf \\<langle>l, x, r\\<rangle>\n        })\""], ["", "lemma mrbst_diff_Leaf_left [simp]:\n  \"mrbst_diff \\<langle>\\<rangle> = (\\<lambda>_. return_pmf \\<langle>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_diff \\<langle>\\<rangle> =\n    (\\<lambda>_. return_pmf \\<langle>\\<rangle>)", "by (simp add: fun_eq_iff)"], ["", "lemma mrbst_diff_Leaf_right [simp]:\n  \"mrbst_diff (t1 :: 'a :: linorder tree) \\<langle>\\<rangle> = return_pmf t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_diff t1 \\<langle>\\<rangle> = return_pmf t1", "by (induction t1) (auto simp: bind_return_pmf)"], ["", "lemma mrbst_diff_reduce:\n  \"mrbst_diff \\<langle>l1, x, r1\\<rangle> =\n     (\\<lambda>t2. case split_bst' x t2 of (sep, l2, r2) \\<Rightarrow>\n        do {\n           l \\<leftarrow> mrbst_diff l1 l2;\n           r \\<leftarrow> mrbst_diff r1 r2;\n           if sep then mrbst_join l r else return_pmf \\<langle>l, x, r\\<rangle>\n         })\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_diff \\<langle>l1, x, r1\\<rangle> =\n    (\\<lambda>t2.\n        case split_bst' x t2 of\n        (sep, l2, r2) \\<Rightarrow>\n          mrbst_diff l1 l2 \\<bind>\n          (\\<lambda>l.\n              mrbst_diff r1 r2 \\<bind>\n              (\\<lambda>r.\n                  if sep then mrbst_join l r\n                  else return_pmf \\<langle>l, x, r\\<rangle>)))", "by (rule ext) simp"], ["", "lemma If_not: \"(if \\<not>b then x else y) = (if b then y else x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<not> b then x else y) = (if b then y else x)", "by auto"], ["", "lemma mrbst_diff_altdef: \"mrbst_diff = mrbst_inter_diff False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_diff = mrbst_inter_diff False", "proof (intro ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa. mrbst_diff x xa = mrbst_inter_diff False x xa", "fix t1 t2 :: \"'a tree\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa. mrbst_diff x xa = mrbst_inter_diff False x xa", "show \"mrbst_diff t1 t2 = mrbst_inter_diff False t1 t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_diff t1 t2 = mrbst_inter_diff False t1 t2", "by (induction t1 arbitrary: t2) (auto simp: If_not)"], ["proof (state)\nthis:\n  mrbst_diff t1 t2 = mrbst_inter_diff False t1 t2\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary\n  fixes t1 t2 :: \"'a :: linorder tree\"\n  assumes \"t' \\<in> set_pmf (mrbst_diff t1 t2)\" \"bst t1\" \"bst t2\"\n  shows   bst_mrbst_diff: \"bst t'\"\n    and   set_mrbst_diff: \"set_tree t' = set_tree t1 - set_tree t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t' &&& set_tree t' = set_tree t1 - set_tree t2", "using bst_mrbst_inter_diff[of t' False t1 t2] set_mrbst_inter_diff[of t' False t1 t2] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff False t1 t2); bst t1;\n   bst t2\\<rbrakk>\n  \\<Longrightarrow> bst t'\n  \\<lbrakk>t' \\<in> set_pmf (mrbst_inter_diff False t1 t2); bst t1;\n   bst t2\\<rbrakk>\n  \\<Longrightarrow> set_tree t' =\n                    (if False then (\\<inter>) else (-)) (set_tree t1)\n                     (set_tree t2)\n  t' \\<in> set_pmf (mrbst_diff t1 t2)\n  bst t1\n  bst t2\n\ngoal (1 subgoal):\n 1. bst t' &&& set_tree t' = set_tree t1 - set_tree t2", "by (simp_all add: mrbst_diff_altdef)"], ["", "corollary mrbst_diff_correct:\n  fixes A B :: \"'a :: linorder set\"\n  assumes \"finite A\" \"finite B\"\n  shows   \"do {t1 \\<leftarrow> random_bst A; t2 \\<leftarrow> random_bst B; mrbst_diff t1 t2} = random_bst (A - B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_diff t1) =\n    random_bst (A - B)", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_diff t1) =\n    random_bst (A - B)", "unfolding mrbst_diff_altdef"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_inter_diff False t1) =\n    random_bst (A - B)", "by (subst mrbst_inter_diff_correct) simp_all"], ["", "subsection \\<open>Union\\<close>"], ["", "text \\<open>\n  The algorithm for the union of two trees is by far the most complicated one. It involves a \n\\<close>"], ["", "(*<*)"], ["", "context\n  notes\n    case_prod_unfold [termination_simp]\n    if_splits [split]\nbegin"], ["", "(*>*)"], ["", "fun mrbst_union where\n  \"mrbst_union \\<langle>\\<rangle> t2 = return_pmf t2\"\n| \"mrbst_union t1 \\<langle>\\<rangle> = return_pmf t1\"\n| \"mrbst_union \\<langle>l1, x, r1\\<rangle> \\<langle>l2, y, r2\\<rangle> =\n     do {\n       let m = size \\<langle>l1, x, r1\\<rangle>; let n = size \\<langle>l2, y, r2\\<rangle>;\n       b \\<leftarrow> bernoulli_pmf (m / (m + n));\n       if b then do {\n         let (l2', r2') = split_bst x \\<langle>l2, y, r2\\<rangle>;\n         l \\<leftarrow> mrbst_union l1 l2';\n         r \\<leftarrow> mrbst_union r1 r2';\n         return_pmf \\<langle>l, x, r\\<rangle>\n       } else do {\n         let (sep, l1', r1') = split_bst' y \\<langle>l1, x, r1\\<rangle>;\n         l \\<leftarrow> mrbst_union l1' l2;\n         r \\<leftarrow> mrbst_union r1' r2;\n         if sep then\n           mrbst_push_down l y r\n         else\n           return_pmf \\<langle>l, y, r\\<rangle>\n       }\n     }\""], ["", "(*<*)"], ["", "end"], ["", "(*>*)"], ["", "lemma mrbst_union_Leaf_left [simp]: \"mrbst_union \\<langle>\\<rangle> = return_pmf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_union \\<langle>\\<rangle> = return_pmf", "by (rule ext) simp"], ["", "lemma mrbst_union_Leaf_right [simp]: \"mrbst_union t1 \\<langle>\\<rangle> = return_pmf t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_union t1 \\<langle>\\<rangle> = return_pmf t1", "by (cases t1) simp_all"], ["", "lemma\n  fixes t1 t2 :: \"'a :: linorder tree\" and b :: bool\n  assumes \"t' \\<in> set_pmf (mrbst_union t1 t2)\" \"bst t1\" \"bst t2\"\n  shows   bst_mrbst_union: \"bst t'\"\n    and   set_mrbst_union: \"set_tree t' = set_tree t1 \\<union> set_tree t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t' &&& set_tree t' = set_tree t1 \\<union> set_tree t2", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. bst t'\n 2. set_tree t' = set_tree t1 \\<union> set_tree t2", "have \"bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "using assms"], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf (mrbst_union t1 t2)\n  bst t1\n  bst t2\n\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "proof (induction \"size t1 + size t2\" arbitrary: t1 t2 t' rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 t2 t'.\n       \\<lbrakk>\\<And>t1a t2a t'.\n                   \\<lbrakk>size t1a + size t2a < size t1 + size t2;\n                    t' \\<in> set_pmf (mrbst_union t1a t2a); bst t1a;\n                    bst t2a\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     set_tree t1a \\<union> set_tree t2a;\n        t' \\<in> set_pmf (mrbst_union t1 t2); bst t1; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' = set_tree t1 \\<union> set_tree t2", "case (less t1 t2 t')"], ["proof (state)\nthis:\n  \\<lbrakk>size ?t1.0 + size ?t2.0 < size t1 + size t2;\n   ?t' \\<in> set_pmf (mrbst_union ?t1.0 ?t2.0); bst ?t1.0;\n   bst ?t2.0\\<rbrakk>\n  \\<Longrightarrow> bst ?t' \\<and>\n                    set_tree ?t' = set_tree ?t1.0 \\<union> set_tree ?t2.0\n  t' \\<in> set_pmf (mrbst_union t1 t2)\n  bst t1\n  bst t2\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2 t'.\n       \\<lbrakk>\\<And>t1a t2a t'.\n                   \\<lbrakk>size t1a + size t2a < size t1 + size t2;\n                    t' \\<in> set_pmf (mrbst_union t1a t2a); bst t1a;\n                    bst t2a\\<rbrakk>\n                   \\<Longrightarrow> bst t' \\<and>\n                                     set_tree t' =\n                                     set_tree t1a \\<union> set_tree t2a;\n        t' \\<in> set_pmf (mrbst_union t1 t2); bst t1; bst t2\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' = set_tree t1 \\<union> set_tree t2", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "proof (cases \"t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle> \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n 2. \\<not> (t1 = \\<langle>\\<rangle> \\<or>\n            t2 = \\<langle>\\<rangle>) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "case False"], ["proof (state)\nthis:\n  \\<not> (t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle>)\n\ngoal (2 subgoals):\n 1. t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle> \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n 2. \\<not> (t1 = \\<langle>\\<rangle> \\<or>\n            t2 = \\<langle>\\<rangle>) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "then"], ["proof (chain)\npicking this:\n  \\<not> (t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle>)", "obtain l1 x r1 l2 y r2 where t1: \"t1 = \\<langle>l1, x, r1\\<rangle>\" and t2: \"t2 = \\<langle>l2, y, r2\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<not> (t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle>)\n\ngoal (1 subgoal):\n 1. (\\<And>l1 x r1 l2 y r2.\n        \\<lbrakk>t1 = \\<langle>l1, x, r1\\<rangle>;\n         t2 = \\<langle>l2, y, r2\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases t1; cases t2) auto"], ["proof (state)\nthis:\n  t1 = \\<langle>l1, x, r1\\<rangle>\n  t2 = \\<langle>l2, y, r2\\<rangle>\n\ngoal (2 subgoals):\n 1. t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle> \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n 2. \\<not> (t1 = \\<langle>\\<rangle> \\<or>\n            t2 = \\<langle>\\<rangle>) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "from less.prems"], ["proof (chain)\npicking this:\n  t' \\<in> set_pmf (mrbst_union t1 t2)\n  bst t1\n  bst t2", "consider l r where\n        \"l \\<in> set_pmf (mrbst_union l1 (fst (split_bst x t2)))\"\n        \"r \\<in> set_pmf (mrbst_union r1 (snd (split_bst x t2)))\"\n        \"t' = \\<langle>l, x, r\\<rangle>\"\n      | l r where\n        \"l \\<in> set_pmf (mrbst_union (fst (split_bst y t1)) l2)\"\n        \"r \\<in> set_pmf (mrbst_union (snd (split_bst y t1)) r2)\"\n        \"t' \\<in> (if isin \\<langle>l1, x, r1\\<rangle> y then set_pmf (mrbst_push_down l y r) else {\\<langle>l, y, r\\<rangle>})\""], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf (mrbst_union t1 t2)\n  bst t1\n  bst t2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>l r.\n                \\<lbrakk>l \\<in> set_pmf\n                                  (mrbst_union l1 (fst (split_bst x t2)));\n                 r \\<in> set_pmf (mrbst_union r1 (snd (split_bst x t2)));\n                 t' = \\<langle>l, x, r\\<rangle>\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<And>l r.\n        \\<lbrakk>l \\<in> set_pmf (mrbst_union (fst (split_bst y t1)) l2);\n         r \\<in> set_pmf (mrbst_union (snd (split_bst y t1)) r2);\n         t' \\<in> (if isin \\<langle>l1, x, r1\\<rangle> y\n                   then set_pmf (mrbst_push_down l y r)\n                   else {\\<langle>l, y, r\\<rangle>})\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (auto simp: case_prod_unfold t1 t2 Let_def\n                 simp del: split_bst.simps split_bst'.simps isin.simps split: if_splits)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>l r.\n              \\<lbrakk>l \\<in> set_pmf\n                                (mrbst_union l1 (fst (split_bst x t2)));\n               r \\<in> set_pmf (mrbst_union r1 (snd (split_bst x t2)));\n               t' = \\<langle>l, x, r\\<rangle>\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   \\<And>l r.\n      \\<lbrakk>l \\<in> set_pmf (mrbst_union (fst (split_bst y t1)) l2);\n       r \\<in> set_pmf (mrbst_union (snd (split_bst y t1)) r2);\n       t' \\<in> (if isin \\<langle>l1, x, r1\\<rangle> y\n                 then set_pmf (mrbst_push_down l y r)\n                 else {\\<langle>l, y, r\\<rangle>})\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle> \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n 2. \\<not> (t1 = \\<langle>\\<rangle> \\<or>\n            t2 = \\<langle>\\<rangle>) \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>l r.\n              \\<lbrakk>l \\<in> set_pmf\n                                (mrbst_union l1 (fst (split_bst x t2)));\n               r \\<in> set_pmf (mrbst_union r1 (snd (split_bst x t2)));\n               t' = \\<langle>l, x, r\\<rangle>\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   \\<And>l r.\n      \\<lbrakk>l \\<in> set_pmf (mrbst_union (fst (split_bst y t1)) l2);\n       r \\<in> set_pmf (mrbst_union (snd (split_bst y t1)) r2);\n       t' \\<in> (if isin \\<langle>l1, x, r1\\<rangle> y\n                 then set_pmf (mrbst_push_down l y r)\n                 else {\\<langle>l, y, r\\<rangle>})\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l r.\n       \\<lbrakk>l \\<in> set_pmf (mrbst_union l1 (fst (split_bst x t2)));\n        r \\<in> set_pmf (mrbst_union r1 (snd (split_bst x t2)));\n        t' = \\<langle>l, x, r\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' = set_tree t1 \\<union> set_tree t2\n 2. \\<And>l r.\n       \\<lbrakk>l \\<in> set_pmf (mrbst_union (fst (split_bst y t1)) l2);\n        r \\<in> set_pmf (mrbst_union (snd (split_bst y t1)) r2);\n        t' \\<in> (if isin \\<langle>l1, x, r1\\<rangle> y\n                  then set_pmf (mrbst_push_down l y r)\n                  else {\\<langle>l, y, r\\<rangle>})\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' = set_tree t1 \\<union> set_tree t2", "case 1"], ["proof (state)\nthis:\n  l \\<in> set_pmf (mrbst_union l1 (fst (split_bst x t2)))\n  r \\<in> set_pmf (mrbst_union r1 (snd (split_bst x t2)))\n  t' = \\<langle>l, x, r\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>l r.\n       \\<lbrakk>l \\<in> set_pmf (mrbst_union l1 (fst (split_bst x t2)));\n        r \\<in> set_pmf (mrbst_union r1 (snd (split_bst x t2)));\n        t' = \\<langle>l, x, r\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' = set_tree t1 \\<union> set_tree t2\n 2. \\<And>l r.\n       \\<lbrakk>l \\<in> set_pmf (mrbst_union (fst (split_bst y t1)) l2);\n        r \\<in> set_pmf (mrbst_union (snd (split_bst y t1)) r2);\n        t' \\<in> (if isin \\<langle>l1, x, r1\\<rangle> y\n                  then set_pmf (mrbst_push_down l y r)\n                  else {\\<langle>l, y, r\\<rangle>})\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' = set_tree t1 \\<union> set_tree t2", "hence lr: \"bst l \\<and> set_tree l = set_tree l1 \\<union> set_tree (fst (split_bst x t2))\"\n                  \"bst r \\<and> set_tree r = set_tree r1 \\<union> set_tree (snd (split_bst x t2))\""], ["proof (prove)\nusing this:\n  l \\<in> set_pmf (mrbst_union l1 (fst (split_bst x t2)))\n  r \\<in> set_pmf (mrbst_union r1 (snd (split_bst x t2)))\n  t' = \\<langle>l, x, r\\<rangle>\n\ngoal (1 subgoal):\n 1. bst l \\<and>\n    set_tree l = set_tree l1 \\<union> set_tree (fst (split_bst x t2)) &&&\n    bst r \\<and>\n    set_tree r = set_tree r1 \\<union> set_tree (snd (split_bst x t2))", "using less.prems size_split_bst[of x t2]"], ["proof (prove)\nusing this:\n  l \\<in> set_pmf (mrbst_union l1 (fst (split_bst x t2)))\n  r \\<in> set_pmf (mrbst_union r1 (snd (split_bst x t2)))\n  t' = \\<langle>l, x, r\\<rangle>\n  t' \\<in> set_pmf (mrbst_union t1 t2)\n  bst t1\n  bst t2\n  size (fst (split_bst x t2)) \\<le> size t2\n  size (snd (split_bst x t2)) \\<le> size t2\n\ngoal (1 subgoal):\n 1. bst l \\<and>\n    set_tree l = set_tree l1 \\<union> set_tree (fst (split_bst x t2)) &&&\n    bst r \\<and>\n    set_tree r = set_tree r1 \\<union> set_tree (snd (split_bst x t2))", "by (intro less; force simp: t1)+"], ["proof (state)\nthis:\n  bst l \\<and>\n  set_tree l = set_tree l1 \\<union> set_tree (fst (split_bst x t2))\n  bst r \\<and>\n  set_tree r = set_tree r1 \\<union> set_tree (snd (split_bst x t2))\n\ngoal (2 subgoals):\n 1. \\<And>l r.\n       \\<lbrakk>l \\<in> set_pmf (mrbst_union l1 (fst (split_bst x t2)));\n        r \\<in> set_pmf (mrbst_union r1 (snd (split_bst x t2)));\n        t' = \\<langle>l, x, r\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' = set_tree t1 \\<union> set_tree t2\n 2. \\<And>l r.\n       \\<lbrakk>l \\<in> set_pmf (mrbst_union (fst (split_bst y t1)) l2);\n        r \\<in> set_pmf (mrbst_union (snd (split_bst y t1)) r2);\n        t' \\<in> (if isin \\<langle>l1, x, r1\\<rangle> y\n                  then set_pmf (mrbst_push_down l y r)\n                  else {\\<langle>l, y, r\\<rangle>})\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' = set_tree t1 \\<union> set_tree t2", "thus ?thesis"], ["proof (prove)\nusing this:\n  bst l \\<and>\n  set_tree l = set_tree l1 \\<union> set_tree (fst (split_bst x t2))\n  bst r \\<and>\n  set_tree r = set_tree r1 \\<union> set_tree (snd (split_bst x t2))\n\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "using 1 less.prems"], ["proof (prove)\nusing this:\n  bst l \\<and>\n  set_tree l = set_tree l1 \\<union> set_tree (fst (split_bst x t2))\n  bst r \\<and>\n  set_tree r = set_tree r1 \\<union> set_tree (snd (split_bst x t2))\n  l \\<in> set_pmf (mrbst_union l1 (fst (split_bst x t2)))\n  r \\<in> set_pmf (mrbst_union r1 (snd (split_bst x t2)))\n  t' = \\<langle>l, x, r\\<rangle>\n  t' \\<in> set_pmf (mrbst_union t1 t2)\n  bst t1\n  bst t2\n\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "by (auto simp: t1 set_split_bst1 set_split_bst2)"], ["proof (state)\nthis:\n  bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n\ngoal (1 subgoal):\n 1. \\<And>l r.\n       \\<lbrakk>l \\<in> set_pmf (mrbst_union (fst (split_bst y t1)) l2);\n        r \\<in> set_pmf (mrbst_union (snd (split_bst y t1)) r2);\n        t' \\<in> (if isin \\<langle>l1, x, r1\\<rangle> y\n                  then set_pmf (mrbst_push_down l y r)\n                  else {\\<langle>l, y, r\\<rangle>})\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' = set_tree t1 \\<union> set_tree t2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l r.\n       \\<lbrakk>l \\<in> set_pmf (mrbst_union (fst (split_bst y t1)) l2);\n        r \\<in> set_pmf (mrbst_union (snd (split_bst y t1)) r2);\n        t' \\<in> (if isin \\<langle>l1, x, r1\\<rangle> y\n                  then set_pmf (mrbst_push_down l y r)\n                  else {\\<langle>l, y, r\\<rangle>})\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' = set_tree t1 \\<union> set_tree t2", "case 2"], ["proof (state)\nthis:\n  l \\<in> set_pmf (mrbst_union (fst (split_bst y t1)) l2)\n  r \\<in> set_pmf (mrbst_union (snd (split_bst y t1)) r2)\n  t' \\<in> (if isin \\<langle>l1, x, r1\\<rangle> y\n            then set_pmf (mrbst_push_down l y r)\n            else {\\<langle>l, y, r\\<rangle>})\n\ngoal (1 subgoal):\n 1. \\<And>l r.\n       \\<lbrakk>l \\<in> set_pmf (mrbst_union (fst (split_bst y t1)) l2);\n        r \\<in> set_pmf (mrbst_union (snd (split_bst y t1)) r2);\n        t' \\<in> (if isin \\<langle>l1, x, r1\\<rangle> y\n                  then set_pmf (mrbst_push_down l y r)\n                  else {\\<langle>l, y, r\\<rangle>})\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' = set_tree t1 \\<union> set_tree t2", "hence lr: \"bst l \\<and> set_tree l = set_tree (fst (split_bst y t1)) \\<union> set_tree l2\"\n                  \"bst r \\<and> set_tree r = set_tree (snd (split_bst y t1)) \\<union> set_tree r2\""], ["proof (prove)\nusing this:\n  l \\<in> set_pmf (mrbst_union (fst (split_bst y t1)) l2)\n  r \\<in> set_pmf (mrbst_union (snd (split_bst y t1)) r2)\n  t' \\<in> (if isin \\<langle>l1, x, r1\\<rangle> y\n            then set_pmf (mrbst_push_down l y r)\n            else {\\<langle>l, y, r\\<rangle>})\n\ngoal (1 subgoal):\n 1. bst l \\<and>\n    set_tree l = set_tree (fst (split_bst y t1)) \\<union> set_tree l2 &&&\n    bst r \\<and>\n    set_tree r = set_tree (snd (split_bst y t1)) \\<union> set_tree r2", "using less.prems size_split_bst[of y t1]"], ["proof (prove)\nusing this:\n  l \\<in> set_pmf (mrbst_union (fst (split_bst y t1)) l2)\n  r \\<in> set_pmf (mrbst_union (snd (split_bst y t1)) r2)\n  t' \\<in> (if isin \\<langle>l1, x, r1\\<rangle> y\n            then set_pmf (mrbst_push_down l y r)\n            else {\\<langle>l, y, r\\<rangle>})\n  t' \\<in> set_pmf (mrbst_union t1 t2)\n  bst t1\n  bst t2\n  size (fst (split_bst y t1)) \\<le> size t1\n  size (snd (split_bst y t1)) \\<le> size t1\n\ngoal (1 subgoal):\n 1. bst l \\<and>\n    set_tree l = set_tree (fst (split_bst y t1)) \\<union> set_tree l2 &&&\n    bst r \\<and>\n    set_tree r = set_tree (snd (split_bst y t1)) \\<union> set_tree r2", "by (intro less; force simp: t2)+"], ["proof (state)\nthis:\n  bst l \\<and>\n  set_tree l = set_tree (fst (split_bst y t1)) \\<union> set_tree l2\n  bst r \\<and>\n  set_tree r = set_tree (snd (split_bst y t1)) \\<union> set_tree r2\n\ngoal (1 subgoal):\n 1. \\<And>l r.\n       \\<lbrakk>l \\<in> set_pmf (mrbst_union (fst (split_bst y t1)) l2);\n        r \\<in> set_pmf (mrbst_union (snd (split_bst y t1)) r2);\n        t' \\<in> (if isin \\<langle>l1, x, r1\\<rangle> y\n                  then set_pmf (mrbst_push_down l y r)\n                  else {\\<langle>l, y, r\\<rangle>})\\<rbrakk>\n       \\<Longrightarrow> bst t' \\<and>\n                         set_tree t' = set_tree t1 \\<union> set_tree t2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "proof (cases \"isin \\<langle>l1, x, r1\\<rangle> y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. isin \\<langle>l1, x, r1\\<rangle> y \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n 2. \\<not> isin \\<langle>l1, x, r1\\<rangle> y \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "case False"], ["proof (state)\nthis:\n  \\<not> isin \\<langle>l1, x, r1\\<rangle> y\n\ngoal (2 subgoals):\n 1. isin \\<langle>l1, x, r1\\<rangle> y \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n 2. \\<not> isin \\<langle>l1, x, r1\\<rangle> y \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> isin \\<langle>l1, x, r1\\<rangle> y\n\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "using 2 less.prems lr"], ["proof (prove)\nusing this:\n  \\<not> isin \\<langle>l1, x, r1\\<rangle> y\n  l \\<in> set_pmf (mrbst_union (fst (split_bst y t1)) l2)\n  r \\<in> set_pmf (mrbst_union (snd (split_bst y t1)) r2)\n  t' \\<in> (if isin \\<langle>l1, x, r1\\<rangle> y\n            then set_pmf (mrbst_push_down l y r)\n            else {\\<langle>l, y, r\\<rangle>})\n  t' \\<in> set_pmf (mrbst_union t1 t2)\n  bst t1\n  bst t2\n  bst l \\<and>\n  set_tree l = set_tree (fst (split_bst y t1)) \\<union> set_tree l2\n  bst r \\<and>\n  set_tree r = set_tree (snd (split_bst y t1)) \\<union> set_tree r2\n\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "by (auto simp del: isin.simps simp: t2 set_split_bst1 set_split_bst2)"], ["proof (state)\nthis:\n  bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n\ngoal (1 subgoal):\n 1. isin \\<langle>l1, x, r1\\<rangle> y \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. isin \\<langle>l1, x, r1\\<rangle> y \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "case True"], ["proof (state)\nthis:\n  isin \\<langle>l1, x, r1\\<rangle> y\n\ngoal (1 subgoal):\n 1. isin \\<langle>l1, x, r1\\<rangle> y \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "have bst': \"\\<forall>z\\<in>set_tree l. z < y\" \"\\<forall>z\\<in>set_tree r. z > y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>set_tree l. z < y &&& \\<forall>z\\<in>set_tree r. y < z", "using lr less.prems"], ["proof (prove)\nusing this:\n  bst l \\<and>\n  set_tree l = set_tree (fst (split_bst y t1)) \\<union> set_tree l2\n  bst r \\<and>\n  set_tree r = set_tree (snd (split_bst y t1)) \\<union> set_tree r2\n  t' \\<in> set_pmf (mrbst_union t1 t2)\n  bst t1\n  bst t2\n\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>set_tree l. z < y &&& \\<forall>z\\<in>set_tree r. y < z", "by (auto simp: set_split_bst1 set_split_bst2 t2)"], ["proof (state)\nthis:\n  \\<forall>z\\<in>set_tree l. z < y\n  \\<forall>z\\<in>set_tree r. y < z\n\ngoal (1 subgoal):\n 1. isin \\<langle>l1, x, r1\\<rangle> y \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "from True and 2"], ["proof (chain)\npicking this:\n  isin \\<langle>l1, x, r1\\<rangle> y\n  l \\<in> set_pmf (mrbst_union (fst (split_bst y t1)) l2)\n  r \\<in> set_pmf (mrbst_union (snd (split_bst y t1)) r2)\n  t' \\<in> (if isin \\<langle>l1, x, r1\\<rangle> y\n            then set_pmf (mrbst_push_down l y r)\n            else {\\<langle>l, y, r\\<rangle>})", "have t': \"t' \\<in> set_pmf (mrbst_push_down l y r)\""], ["proof (prove)\nusing this:\n  isin \\<langle>l1, x, r1\\<rangle> y\n  l \\<in> set_pmf (mrbst_union (fst (split_bst y t1)) l2)\n  r \\<in> set_pmf (mrbst_union (snd (split_bst y t1)) r2)\n  t' \\<in> (if isin \\<langle>l1, x, r1\\<rangle> y\n            then set_pmf (mrbst_push_down l y r)\n            else {\\<langle>l, y, r\\<rangle>})\n\ngoal (1 subgoal):\n 1. t' \\<in> set_pmf (mrbst_push_down l y r)", "by (auto simp del: isin.simps)"], ["proof (state)\nthis:\n  t' \\<in> set_pmf (mrbst_push_down l y r)\n\ngoal (1 subgoal):\n 1. isin \\<langle>l1, x, r1\\<rangle> y \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "from t'"], ["proof (chain)\npicking this:\n  t' \\<in> set_pmf (mrbst_push_down l y r)", "have \"bst t'\""], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf (mrbst_push_down l y r)\n\ngoal (1 subgoal):\n 1. bst t'", "by (rule bst_mrbst_push_down) (use lr bst' in auto)"], ["proof (state)\nthis:\n  bst t'\n\ngoal (1 subgoal):\n 1. isin \\<langle>l1, x, r1\\<rangle> y \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "moreover"], ["proof (state)\nthis:\n  bst t'\n\ngoal (1 subgoal):\n 1. isin \\<langle>l1, x, r1\\<rangle> y \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "from t'"], ["proof (chain)\npicking this:\n  t' \\<in> set_pmf (mrbst_push_down l y r)", "have \"set_tree t' = {y} \\<union> set_tree l \\<union> set_tree r\""], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf (mrbst_push_down l y r)\n\ngoal (1 subgoal):\n 1. set_tree t' = {y} \\<union> set_tree l \\<union> set_tree r", "by (rule set_mrbst_push_down) (use lr bst' in auto)"], ["proof (state)\nthis:\n  set_tree t' = {y} \\<union> set_tree l \\<union> set_tree r\n\ngoal (1 subgoal):\n 1. isin \\<langle>l1, x, r1\\<rangle> y \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "ultimately"], ["proof (chain)\npicking this:\n  bst t'\n  set_tree t' = {y} \\<union> set_tree l \\<union> set_tree r", "show ?thesis"], ["proof (prove)\nusing this:\n  bst t'\n  set_tree t' = {y} \\<union> set_tree l \\<union> set_tree r\n\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "using less.prems lr"], ["proof (prove)\nusing this:\n  bst t'\n  set_tree t' = {y} \\<union> set_tree l \\<union> set_tree r\n  t' \\<in> set_pmf (mrbst_union t1 t2)\n  bst t1\n  bst t2\n  bst l \\<and>\n  set_tree l = set_tree (fst (split_bst y t1)) \\<union> set_tree l2\n  bst r \\<and>\n  set_tree r = set_tree (snd (split_bst y t1)) \\<union> set_tree r2\n\ngoal (1 subgoal):\n 1. bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "by (auto simp del: isin.simps simp: t2 set_split_bst1 set_split_bst2)"], ["proof (state)\nthis:\n  bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n\ngoal (1 subgoal):\n 1. t1 = \\<langle>\\<rangle> \\<or> t2 = \\<langle>\\<rangle> \\<Longrightarrow>\n    bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2", "qed (use less.prems in auto)"], ["proof (state)\nthis:\n  bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n\ngoal (2 subgoals):\n 1. bst t'\n 2. set_tree t' = set_tree t1 \\<union> set_tree t2", "thus \"bst t'\" and \"set_tree t' = set_tree t1 \\<union> set_tree t2\""], ["proof (prove)\nusing this:\n  bst t' \\<and> set_tree t' = set_tree t1 \\<union> set_tree t2\n\ngoal (1 subgoal):\n 1. bst t' &&& set_tree t' = set_tree t1 \\<union> set_tree t2", "by auto"], ["proof (state)\nthis:\n  bst t'\n  set_tree t' = set_tree t1 \\<union> set_tree t2\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem mrbst_union_correct:\n  assumes \"finite A\" \"finite B\"\n  shows   \"do {t1 \\<leftarrow> random_bst A; t2 \\<leftarrow> random_bst B; mrbst_union t1 t2} =\n             random_bst (A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "from assms"], ["proof (chain)\npicking this:\n  finite A\n  finite B", "have \"finite (A \\<union> B)\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. finite (A \\<union> B)", "by simp"], ["proof (state)\nthis:\n  finite (A \\<union> B)\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite (A \\<union> B)\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "proof (induction \"A \\<union> B\" arbitrary: A B rule: finite_psubset_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           Aa \\<union> Ba \\<subset> A \\<union> B \\<Longrightarrow>\n           random_bst Aa \\<bind>\n           (\\<lambda>t1. random_bst Ba \\<bind> mrbst_union t1) =\n           random_bst (Aa \\<union> Ba)\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind> mrbst_union t1) =\n                         random_bst (A \\<union> B)", "case (psubset A B)"], ["proof (state)\nthis:\n  finite (A \\<union> B)\n  ?A \\<union> ?B \\<subset> A \\<union> B \\<Longrightarrow>\n  random_bst ?A \\<bind>\n  (\\<lambda>t1. random_bst ?B \\<bind> mrbst_union t1) =\n  random_bst (?A \\<union> ?B)\n\ngoal (1 subgoal):\n 1. \\<And>A B.\n       \\<lbrakk>finite (A \\<union> B);\n        \\<And>Aa Ba.\n           Aa \\<union> Ba \\<subset> A \\<union> B \\<Longrightarrow>\n           random_bst Aa \\<bind>\n           (\\<lambda>t1. random_bst Ba \\<bind> mrbst_union t1) =\n           random_bst (Aa \\<union> Ba)\\<rbrakk>\n       \\<Longrightarrow> random_bst A \\<bind>\n                         (\\<lambda>t1.\n                             random_bst B \\<bind> mrbst_union t1) =\n                         random_bst (A \\<union> B)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "proof (cases \"A = {} \\<or> B = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A = {} \\<or> B = {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)\n 2. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "case True"], ["proof (state)\nthis:\n  A = {} \\<or> B = {}\n\ngoal (2 subgoals):\n 1. A = {} \\<or> B = {} \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)\n 2. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "thus ?thesis"], ["proof (prove)\nusing this:\n  A = {} \\<or> B = {}\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "including monad_normalisation"], ["proof (prove)\nusing this:\n  A = {} \\<or> B = {}\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "by auto"], ["proof (state)\nthis:\n  random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n  random_bst (A \\<union> B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "case False"], ["proof (state)\nthis:\n  \\<not> (A = {} \\<or> B = {})\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "with psubset.hyps"], ["proof (chain)\npicking this:\n  finite (A \\<union> B)\n  ?A \\<union> ?B \\<subset> A \\<union> B \\<Longrightarrow>\n  random_bst ?A \\<bind>\n  (\\<lambda>t1. random_bst ?B \\<bind> mrbst_union t1) =\n  random_bst (?A \\<union> ?B)\n  \\<not> (A = {} \\<or> B = {})", "have AB: \"finite A\" \"finite B\" \"A \\<noteq> {}\" \"B \\<noteq> {}\""], ["proof (prove)\nusing this:\n  finite (A \\<union> B)\n  ?A \\<union> ?B \\<subset> A \\<union> B \\<Longrightarrow>\n  random_bst ?A \\<bind>\n  (\\<lambda>t1. random_bst ?B \\<bind> mrbst_union t1) =\n  random_bst (?A \\<union> ?B)\n  \\<not> (A = {} \\<or> B = {})\n\ngoal (1 subgoal):\n 1. (finite A &&& finite B) &&& A \\<noteq> {} &&& B \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "define m n l where \"m = card A\" and \"n = card B\" and \"l = card (A \\<inter> B)\""], ["proof (state)\nthis:\n  m = card A\n  n = card B\n  l = card (A \\<inter> B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "define p q where \"p = m / (m + n)\" and \"q = l / n\""], ["proof (state)\nthis:\n  p = real m / real (m + n)\n  q = real l / real n\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "define r where \"r = p / (1 - (1 - p) * q)\""], ["proof (state)\nthis:\n  r = p / (1 - (1 - p) * q)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "from AB"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}", "have mn: \"m > 0\" \"n > 0\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < m &&& 0 < n", "by (auto simp: m_def n_def)"], ["proof (state)\nthis:\n  0 < m\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have pq: \"p \\<in> {0..1}\" \"q \\<in> {0..1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> {0..1} &&& q \\<in> {0..1}", "using AB"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. p \\<in> {0..1} &&& q \\<in> {0..1}", "by (auto simp: p_def q_def m_def n_def l_def divide_simps intro: card_mono)"], ["proof (state)\nthis:\n  p \\<in> {0..1}\n  q \\<in> {0..1}\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "moreover"], ["proof (state)\nthis:\n  p \\<in> {0..1}\n  q \\<in> {0..1}\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"p \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<noteq> 0", "using AB"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0", "by (auto simp: p_def m_def n_def divide_simps add_nonneg_eq_0_iff)"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "ultimately"], ["proof (chain)\npicking this:\n  p \\<in> {0..1}\n  q \\<in> {0..1}\n  p \\<noteq> 0", "have \"p > 0\""], ["proof (prove)\nusing this:\n  p \\<in> {0..1}\n  q \\<in> {0..1}\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < p", "by auto"], ["proof (state)\nthis:\n  0 < p\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"B - A = B - (A \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B - A = B - A \\<inter> B", "by auto"], ["proof (state)\nthis:\n  B - A = B - A \\<inter> B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  B - A = B - A \\<inter> B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"card \\<dots> = n - l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (B - A \\<inter> B) = n - l", "using AB"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. card (B - A \\<inter> B) = n - l", "unfolding n_def l_def"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. card (B - A \\<inter> B) = card B - card (A \\<inter> B)", "by (intro card_Diff_subset) auto"], ["proof (state)\nthis:\n  card (B - A \\<inter> B) = n - l\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "finally"], ["proof (chain)\npicking this:\n  card (B - A) = n - l", "have [simp]: \"card (B - A) = n - l\""], ["proof (prove)\nusing this:\n  card (B - A) = n - l\n\ngoal (1 subgoal):\n 1. card (B - A) = n - l", "."], ["proof (state)\nthis:\n  card (B - A) = n - l\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "from AB"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}", "have \"l \\<le> n\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. l \\<le> n", "unfolding l_def n_def"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. card (A \\<inter> B) \\<le> card B", "by (intro card_mono) auto"], ["proof (state)\nthis:\n  l \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"p \\<le> 1 - (1 - p) * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<le> 1 - (1 - p) * q", "using mn \\<open>l \\<le> n\\<close>"], ["proof (prove)\nusing this:\n  0 < m\n  0 < n\n  l \\<le> n\n\ngoal (1 subgoal):\n 1. p \\<le> 1 - (1 - p) * q", "by (auto simp: p_def q_def divide_simps)"], ["proof (state)\nthis:\n  p \\<le> 1 - (1 - p) * q\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "hence r_aux: \"(1 - p) * q \\<in> {0..1 - p}\""], ["proof (prove)\nusing this:\n  p \\<le> 1 - (1 - p) * q\n\ngoal (1 subgoal):\n 1. (1 - p) * q \\<in> {0..1 - p}", "using pq"], ["proof (prove)\nusing this:\n  p \\<le> 1 - (1 - p) * q\n  p \\<in> {0..1}\n  q \\<in> {0..1}\n\ngoal (1 subgoal):\n 1. (1 - p) * q \\<in> {0..1 - p}", "by auto"], ["proof (state)\nthis:\n  (1 - p) * q \\<in> {0..1 - p}\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "include monad_normalisation"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "define RA1 RA2 RB1 RB2\n        where \"RA1 = (\\<lambda>x. random_bst {z\\<in>A. z < x})\" and \"RA2 = (\\<lambda>x. random_bst {z\\<in>A. z > x})\"\n          and \"RB1 = (\\<lambda>x. random_bst {z\\<in>B. z < x})\" and \"RB2 = (\\<lambda>x. random_bst {z\\<in>B. z > x})\""], ["proof (state)\nthis:\n  RA1 = (\\<lambda>x. random_bst {z \\<in> A. z < x})\n  RA2 = (\\<lambda>x. random_bst {z \\<in> A. x < z})\n  RB1 = (\\<lambda>x. random_bst {z \\<in> B. z < x})\n  RB2 = (\\<lambda>x. random_bst {z \\<in> B. x < z})\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"do {t1 \\<leftarrow> random_bst A; t2 \\<leftarrow> random_bst B; mrbst_union t1 t2} =\n              do {\n                x \\<leftarrow> pmf_of_set A;\n                l1 \\<leftarrow> random_bst {z\\<in>A. z < x};\n                r1 \\<leftarrow> random_bst {z\\<in>A. z > x};\n                y \\<leftarrow> pmf_of_set B;\n                l2 \\<leftarrow> random_bst {z\\<in>B. z < y};\n                r2 \\<leftarrow> random_bst {z\\<in>B. z > y};\n                let m = size \\<langle>l1, x, r1\\<rangle>;\n                let n = size \\<langle>l2, y, r2\\<rangle>;\n                b \\<leftarrow> bernoulli_pmf (m / (m + n));\n                if b then do {\n                  l \\<leftarrow> mrbst_union l1 (fst (split_bst x \\<langle>l2, y, r2\\<rangle>));\n                  r \\<leftarrow> mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>));\n                  return_pmf \\<langle>l, x, r\\<rangle>\n                } else do {\n                  l \\<leftarrow> mrbst_union (fst (split_bst y \\<langle>l1, x, r1\\<rangle>)) l2;\n                  r \\<leftarrow> mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2;\n                  if isin \\<langle>l1, x, r1\\<rangle> y then\n                    mrbst_push_down l y r\n                  else\n                    return_pmf \\<langle>l, y, r\\<rangle>\n                }\n              }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {z \\<in> A. z < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {z \\<in> A. x < z} \\<bind>\n            (\\<lambda>r1.\n                pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst {z \\<in> B. z < y} \\<bind>\n                    (\\<lambda>l2.\n                        random_bst {z \\<in> B. y < z} \\<bind>\n                        (\\<lambda>r2.\n                            let xa = size \\<langle>l1, x, r1\\<rangle>;\n                                xb = size \\<langle>l2, y, r2\\<rangle>\n                            in bernoulli_pmf\n                                (real xa / (real xa + real xb)) \\<bind>\n                               (\\<lambda>b.\n                                   if b\n                                   then mrbst_union l1\n   (fst (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n  (\\<lambda>l.\n      mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n      (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n                                   else mrbst_union\n   (fst (split_bst y \\<langle>l1, x, r1\\<rangle>)) l2 \\<bind>\n  (\\<lambda>l.\n      mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2 \\<bind>\n      (\\<lambda>r.\n          if isin \\<langle>l1, x, r1\\<rangle> y then mrbst_push_down l y r\n          else return_pmf \\<langle>l, y, r\\<rangle>)))))))))", "using AB"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {z \\<in> A. z < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {z \\<in> A. x < z} \\<bind>\n            (\\<lambda>r1.\n                pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst {z \\<in> B. z < y} \\<bind>\n                    (\\<lambda>l2.\n                        random_bst {z \\<in> B. y < z} \\<bind>\n                        (\\<lambda>r2.\n                            let xa = size \\<langle>l1, x, r1\\<rangle>;\n                                xb = size \\<langle>l2, y, r2\\<rangle>\n                            in bernoulli_pmf\n                                (real xa / (real xa + real xb)) \\<bind>\n                               (\\<lambda>b.\n                                   if b\n                                   then mrbst_union l1\n   (fst (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n  (\\<lambda>l.\n      mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n      (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n                                   else mrbst_union\n   (fst (split_bst y \\<langle>l1, x, r1\\<rangle>)) l2 \\<bind>\n  (\\<lambda>l.\n      mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2 \\<bind>\n      (\\<lambda>r.\n          if isin \\<langle>l1, x, r1\\<rangle> y then mrbst_push_down l y r\n          else return_pmf \\<langle>l, y, r\\<rangle>)))))))))", "by (simp add: random_bst_reduce split_bst'_altdef Let_def case_prod_unfold cong: if_cong)"], ["proof (state)\nthis:\n  random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {z \\<in> A. z < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {z \\<in> A. x < z} \\<bind>\n          (\\<lambda>r1.\n              pmf_of_set B \\<bind>\n              (\\<lambda>y.\n                  random_bst {z \\<in> B. z < y} \\<bind>\n                  (\\<lambda>l2.\n                      random_bst {z \\<in> B. y < z} \\<bind>\n                      (\\<lambda>r2.\n                          let xa = size \\<langle>l1, x, r1\\<rangle>;\n                              xb = size \\<langle>l2, y, r2\\<rangle>\n                          in bernoulli_pmf\n                              (real xa / (real xa + real xb)) \\<bind>\n                             (\\<lambda>b.\n                                 if b\n                                 then mrbst_union l1\n (fst (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n(\\<lambda>l.\n    mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n                                 else mrbst_union\n (fst (split_bst y \\<langle>l1, x, r1\\<rangle>)) l2 \\<bind>\n(\\<lambda>l.\n    mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2 \\<bind>\n    (\\<lambda>r.\n        if isin \\<langle>l1, x, r1\\<rangle> y then mrbst_push_down l y r\n        else return_pmf \\<langle>l, y, r\\<rangle>)))))))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {z \\<in> A. z < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {z \\<in> A. x < z} \\<bind>\n          (\\<lambda>r1.\n              pmf_of_set B \\<bind>\n              (\\<lambda>y.\n                  random_bst {z \\<in> B. z < y} \\<bind>\n                  (\\<lambda>l2.\n                      random_bst {z \\<in> B. y < z} \\<bind>\n                      (\\<lambda>r2.\n                          let xa = size \\<langle>l1, x, r1\\<rangle>;\n                              xb = size \\<langle>l2, y, r2\\<rangle>\n                          in bernoulli_pmf\n                              (real xa / (real xa + real xb)) \\<bind>\n                             (\\<lambda>b.\n                                 if b\n                                 then mrbst_union l1\n (fst (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n(\\<lambda>l.\n    mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n                                 else mrbst_union\n (fst (split_bst y \\<langle>l1, x, r1\\<rangle>)) l2 \\<bind>\n(\\<lambda>l.\n    mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2 \\<bind>\n    (\\<lambda>r.\n        if isin \\<langle>l1, x, r1\\<rangle> y then mrbst_push_down l y r\n        else return_pmf \\<langle>l, y, r\\<rangle>)))))))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"\\<dots> = do {\n                        x \\<leftarrow> pmf_of_set A;\n                        l1 \\<leftarrow> random_bst {z\\<in>A. z < x};\n                        r1 \\<leftarrow> random_bst {z\\<in>A. z > x};\n                        y \\<leftarrow> pmf_of_set B;\n                        l2 \\<leftarrow> random_bst {z\\<in>B. z < y};\n                        r2 \\<leftarrow> random_bst {z\\<in>B. z > y};\n                        b \\<leftarrow> bernoulli_pmf p;\n                        if b then do {\n                          l \\<leftarrow> mrbst_union l1 (fst (split_bst x \\<langle>l2, y, r2\\<rangle>));\n                          r \\<leftarrow> mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>));\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        } else do {\n                          l \\<leftarrow> mrbst_union (fst (split_bst y \\<langle>l1, x, r1\\<rangle>)) l2;\n                          r \\<leftarrow> mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2;\n                          if y \\<in> A then\n                            mrbst_push_down l y r\n                          else\n                            return_pmf \\<langle>l, y, r\\<rangle>\n                        }\n                      }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {z \\<in> A. z < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {z \\<in> A. x < z} \\<bind>\n            (\\<lambda>r1.\n                pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst {z \\<in> B. z < y} \\<bind>\n                    (\\<lambda>l2.\n                        random_bst {z \\<in> B. y < z} \\<bind>\n                        (\\<lambda>r2.\n                            let xa = size \\<langle>l1, x, r1\\<rangle>;\n                                xb = size \\<langle>l2, y, r2\\<rangle>\n                            in bernoulli_pmf\n                                (real xa / (real xa + real xb)) \\<bind>\n                               (\\<lambda>b.\n                                   if b\n                                   then mrbst_union l1\n   (fst (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n  (\\<lambda>l.\n      mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n      (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n                                   else mrbst_union\n   (fst (split_bst y \\<langle>l1, x, r1\\<rangle>)) l2 \\<bind>\n  (\\<lambda>l.\n      mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2 \\<bind>\n      (\\<lambda>r.\n          if isin \\<langle>l1, x, r1\\<rangle> y then mrbst_push_down l y r\n          else return_pmf \\<langle>l, y, r\\<rangle>))))))))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {z \\<in> A. z < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {z \\<in> A. x < z} \\<bind>\n            (\\<lambda>r1.\n                pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst {z \\<in> B. z < y} \\<bind>\n                    (\\<lambda>l2.\n                        random_bst {z \\<in> B. y < z} \\<bind>\n                        (\\<lambda>r2.\n                            bernoulli_pmf p \\<bind>\n                            (\\<lambda>b.\n                                if b\n                                then mrbst_union l1\n(fst (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n                                     (\\<lambda>l.\n   mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n                                else mrbst_union\n(fst (split_bst y \\<langle>l1, x, r1\\<rangle>)) l2 \\<bind>\n                                     (\\<lambda>l.\n   mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2 \\<bind>\n   (\\<lambda>r.\n       if y \\<in> A then mrbst_push_down l y r\n       else return_pmf \\<langle>l, y, r\\<rangle>)))))))))", "unfolding Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {z \\<in> A. z < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {z \\<in> A. x < z} \\<bind>\n            (\\<lambda>r1.\n                pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst {z \\<in> B. z < y} \\<bind>\n                    (\\<lambda>l2.\n                        random_bst {z \\<in> B. y < z} \\<bind>\n                        (\\<lambda>r2.\n                            bernoulli_pmf\n                             (real (size \\<langle>l1, x, r1\\<rangle>) /\n                              (real (size \\<langle>l1, x, r1\\<rangle>) +\n                               real\n                                (size \\<langle>l2, y, r2\\<rangle>))) \\<bind>\n                            (\\<lambda>b.\n                                if b\n                                then mrbst_union l1\n(fst (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n                                     (\\<lambda>l.\n   mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n                                else mrbst_union\n(fst (split_bst y \\<langle>l1, x, r1\\<rangle>)) l2 \\<bind>\n                                     (\\<lambda>l.\n   mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2 \\<bind>\n   (\\<lambda>r.\n       if isin \\<langle>l1, x, r1\\<rangle> y then mrbst_push_down l y r\n       else return_pmf \\<langle>l, y, r\\<rangle>))))))))) =\n    pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {z \\<in> A. z < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {z \\<in> A. x < z} \\<bind>\n            (\\<lambda>r1.\n                pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst {z \\<in> B. z < y} \\<bind>\n                    (\\<lambda>l2.\n                        random_bst {z \\<in> B. y < z} \\<bind>\n                        (\\<lambda>r2.\n                            bernoulli_pmf p \\<bind>\n                            (\\<lambda>b.\n                                if b\n                                then mrbst_union l1\n(fst (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n                                     (\\<lambda>l.\n   mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n                                else mrbst_union\n(fst (split_bst y \\<langle>l1, x, r1\\<rangle>)) l2 \\<bind>\n                                     (\\<lambda>l.\n   mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2 \\<bind>\n   (\\<lambda>r.\n       if y \\<in> A then mrbst_push_down l y r\n       else return_pmf \\<langle>l, y, r\\<rangle>)))))))))", "proof (intro bind_pmf_cong refl if_cong)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x xa xb xc xd xe.\n       \\<lbrakk>x \\<in> set_pmf (pmf_of_set A);\n        xa \\<in> set_pmf (random_bst {z \\<in> A. z < x});\n        xb \\<in> set_pmf (random_bst {z \\<in> A. x < z});\n        xc \\<in> set_pmf (pmf_of_set B);\n        xd \\<in> set_pmf (random_bst {z \\<in> B. z < xc});\n        xe \\<in> set_pmf (random_bst {z \\<in> B. xc < z})\\<rbrakk>\n       \\<Longrightarrow> bernoulli_pmf\n                          (real (size \\<langle>xa, x, xb\\<rangle>) /\n                           (real (size \\<langle>xa, x, xb\\<rangle>) +\n                            real (size \\<langle>xd, xc, xe\\<rangle>))) =\n                         bernoulli_pmf p\n 2. \\<And>x xa xb xc xd xe xf xg xh.\n       \\<lbrakk>x \\<in> set_pmf (pmf_of_set A);\n        xa \\<in> set_pmf (random_bst {z \\<in> A. z < x});\n        xb \\<in> set_pmf (random_bst {z \\<in> A. x < z});\n        xc \\<in> set_pmf (pmf_of_set B);\n        xd \\<in> set_pmf (random_bst {z \\<in> B. z < xc});\n        xe \\<in> set_pmf (random_bst {z \\<in> B. xc < z});\n        xf \\<in> set_pmf (bernoulli_pmf p); \\<not> xf;\n        xg \\<in> set_pmf\n                  (mrbst_union\n                    (fst (split_bst xc \\<langle>xa, x, xb\\<rangle>)) xd);\n        xh \\<in> set_pmf\n                  (mrbst_union\n                    (snd (split_bst xc \\<langle>xa, x, xb\\<rangle>))\n                    xe)\\<rbrakk>\n       \\<Longrightarrow> isin \\<langle>xa, x, xb\\<rangle> xc = (xc \\<in> A)", "fix l1 x r1 y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x xa xb xc xd xe.\n       \\<lbrakk>x \\<in> set_pmf (pmf_of_set A);\n        xa \\<in> set_pmf (random_bst {z \\<in> A. z < x});\n        xb \\<in> set_pmf (random_bst {z \\<in> A. x < z});\n        xc \\<in> set_pmf (pmf_of_set B);\n        xd \\<in> set_pmf (random_bst {z \\<in> B. z < xc});\n        xe \\<in> set_pmf (random_bst {z \\<in> B. xc < z})\\<rbrakk>\n       \\<Longrightarrow> bernoulli_pmf\n                          (real (size \\<langle>xa, x, xb\\<rangle>) /\n                           (real (size \\<langle>xa, x, xb\\<rangle>) +\n                            real (size \\<langle>xd, xc, xe\\<rangle>))) =\n                         bernoulli_pmf p\n 2. \\<And>x xa xb xc xd xe xf xg xh.\n       \\<lbrakk>x \\<in> set_pmf (pmf_of_set A);\n        xa \\<in> set_pmf (random_bst {z \\<in> A. z < x});\n        xb \\<in> set_pmf (random_bst {z \\<in> A. x < z});\n        xc \\<in> set_pmf (pmf_of_set B);\n        xd \\<in> set_pmf (random_bst {z \\<in> B. z < xc});\n        xe \\<in> set_pmf (random_bst {z \\<in> B. xc < z});\n        xf \\<in> set_pmf (bernoulli_pmf p); \\<not> xf;\n        xg \\<in> set_pmf\n                  (mrbst_union\n                    (fst (split_bst xc \\<langle>xa, x, xb\\<rangle>)) xd);\n        xh \\<in> set_pmf\n                  (mrbst_union\n                    (snd (split_bst xc \\<langle>xa, x, xb\\<rangle>))\n                    xe)\\<rbrakk>\n       \\<Longrightarrow> isin \\<langle>xa, x, xb\\<rangle> xc = (xc \\<in> A)", "assume \"l1 \\<in> set_pmf (random_bst {z\\<in>A. z < x})\" \"r1 \\<in> set_pmf (random_bst {z\\<in>A. z > x})\"\n               \"x \\<in> set_pmf (pmf_of_set A)\""], ["proof (state)\nthis:\n  l1 \\<in> set_pmf (random_bst {z \\<in> A. z < x})\n  r1 \\<in> set_pmf (random_bst {z \\<in> A. x < z})\n  x \\<in> set_pmf (pmf_of_set A)\n\ngoal (2 subgoals):\n 1. \\<And>x xa xb xc xd xe.\n       \\<lbrakk>x \\<in> set_pmf (pmf_of_set A);\n        xa \\<in> set_pmf (random_bst {z \\<in> A. z < x});\n        xb \\<in> set_pmf (random_bst {z \\<in> A. x < z});\n        xc \\<in> set_pmf (pmf_of_set B);\n        xd \\<in> set_pmf (random_bst {z \\<in> B. z < xc});\n        xe \\<in> set_pmf (random_bst {z \\<in> B. xc < z})\\<rbrakk>\n       \\<Longrightarrow> bernoulli_pmf\n                          (real (size \\<langle>xa, x, xb\\<rangle>) /\n                           (real (size \\<langle>xa, x, xb\\<rangle>) +\n                            real (size \\<langle>xd, xc, xe\\<rangle>))) =\n                         bernoulli_pmf p\n 2. \\<And>x xa xb xc xd xe xf xg xh.\n       \\<lbrakk>x \\<in> set_pmf (pmf_of_set A);\n        xa \\<in> set_pmf (random_bst {z \\<in> A. z < x});\n        xb \\<in> set_pmf (random_bst {z \\<in> A. x < z});\n        xc \\<in> set_pmf (pmf_of_set B);\n        xd \\<in> set_pmf (random_bst {z \\<in> B. z < xc});\n        xe \\<in> set_pmf (random_bst {z \\<in> B. xc < z});\n        xf \\<in> set_pmf (bernoulli_pmf p); \\<not> xf;\n        xg \\<in> set_pmf\n                  (mrbst_union\n                    (fst (split_bst xc \\<langle>xa, x, xb\\<rangle>)) xd);\n        xh \\<in> set_pmf\n                  (mrbst_union\n                    (snd (split_bst xc \\<langle>xa, x, xb\\<rangle>))\n                    xe)\\<rbrakk>\n       \\<Longrightarrow> isin \\<langle>xa, x, xb\\<rangle> xc = (xc \\<in> A)", "thus \"isin \\<langle>l1, x, r1\\<rangle> y \\<longleftrightarrow> (y \\<in> A)\""], ["proof (prove)\nusing this:\n  l1 \\<in> set_pmf (random_bst {z \\<in> A. z < x})\n  r1 \\<in> set_pmf (random_bst {z \\<in> A. x < z})\n  x \\<in> set_pmf (pmf_of_set A)\n\ngoal (1 subgoal):\n 1. isin \\<langle>l1, x, r1\\<rangle> y = (y \\<in> A)", "using AB"], ["proof (prove)\nusing this:\n  l1 \\<in> set_pmf (random_bst {z \\<in> A. z < x})\n  r1 \\<in> set_pmf (random_bst {z \\<in> A. x < z})\n  x \\<in> set_pmf (pmf_of_set A)\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. isin \\<langle>l1, x, r1\\<rangle> y = (y \\<in> A)", "by (subst isin_bst) (auto simp: bst_random_bst set_random_bst)"], ["proof (state)\nthis:\n  isin \\<langle>l1, x, r1\\<rangle> y = (y \\<in> A)\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb xc xd xe.\n       \\<lbrakk>x \\<in> set_pmf (pmf_of_set A);\n        xa \\<in> set_pmf (random_bst {z \\<in> A. z < x});\n        xb \\<in> set_pmf (random_bst {z \\<in> A. x < z});\n        xc \\<in> set_pmf (pmf_of_set B);\n        xd \\<in> set_pmf (random_bst {z \\<in> B. z < xc});\n        xe \\<in> set_pmf (random_bst {z \\<in> B. xc < z})\\<rbrakk>\n       \\<Longrightarrow> bernoulli_pmf\n                          (real (size \\<langle>xa, x, xb\\<rangle>) /\n                           (real (size \\<langle>xa, x, xb\\<rangle>) +\n                            real (size \\<langle>xd, xc, xe\\<rangle>))) =\n                         bernoulli_pmf p", "qed (insert AB,\n           auto simp: size_random_bst m_def n_def p_def isin_random_bst dest!: card_3way_split)"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {z \\<in> A. z < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {z \\<in> A. x < z} \\<bind>\n          (\\<lambda>r1.\n              pmf_of_set B \\<bind>\n              (\\<lambda>y.\n                  random_bst {z \\<in> B. z < y} \\<bind>\n                  (\\<lambda>l2.\n                      random_bst {z \\<in> B. y < z} \\<bind>\n                      (\\<lambda>r2.\n                          let xa = size \\<langle>l1, x, r1\\<rangle>;\n                              xb = size \\<langle>l2, y, r2\\<rangle>\n                          in bernoulli_pmf\n                              (real xa / (real xa + real xb)) \\<bind>\n                             (\\<lambda>b.\n                                 if b\n                                 then mrbst_union l1\n (fst (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n(\\<lambda>l.\n    mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n                                 else mrbst_union\n (fst (split_bst y \\<langle>l1, x, r1\\<rangle>)) l2 \\<bind>\n(\\<lambda>l.\n    mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2 \\<bind>\n    (\\<lambda>r.\n        if isin \\<langle>l1, x, r1\\<rangle> y then mrbst_push_down l y r\n        else return_pmf \\<langle>l, y, r\\<rangle>))))))))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {z \\<in> A. z < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {z \\<in> A. x < z} \\<bind>\n          (\\<lambda>r1.\n              pmf_of_set B \\<bind>\n              (\\<lambda>y.\n                  random_bst {z \\<in> B. z < y} \\<bind>\n                  (\\<lambda>l2.\n                      random_bst {z \\<in> B. y < z} \\<bind>\n                      (\\<lambda>r2.\n                          bernoulli_pmf p \\<bind>\n                          (\\<lambda>b.\n                              if b\n                              then mrbst_union l1\n                                    (fst\n(split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n                                   (\\<lambda>l.\n mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n                              else mrbst_union\n                                    (fst\n(split_bst y \\<langle>l1, x, r1\\<rangle>))\n                                    l2 \\<bind>\n                                   (\\<lambda>l.\n mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2 \\<bind>\n (\\<lambda>r.\n     if y \\<in> A then mrbst_push_down l y r\n     else return_pmf \\<langle>l, y, r\\<rangle>)))))))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {z \\<in> A. z < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {z \\<in> A. x < z} \\<bind>\n          (\\<lambda>r1.\n              pmf_of_set B \\<bind>\n              (\\<lambda>y.\n                  random_bst {z \\<in> B. z < y} \\<bind>\n                  (\\<lambda>l2.\n                      random_bst {z \\<in> B. y < z} \\<bind>\n                      (\\<lambda>r2.\n                          let xa = size \\<langle>l1, x, r1\\<rangle>;\n                              xb = size \\<langle>l2, y, r2\\<rangle>\n                          in bernoulli_pmf\n                              (real xa / (real xa + real xb)) \\<bind>\n                             (\\<lambda>b.\n                                 if b\n                                 then mrbst_union l1\n (fst (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n(\\<lambda>l.\n    mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n    (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n                                 else mrbst_union\n (fst (split_bst y \\<langle>l1, x, r1\\<rangle>)) l2 \\<bind>\n(\\<lambda>l.\n    mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2 \\<bind>\n    (\\<lambda>r.\n        if isin \\<langle>l1, x, r1\\<rangle> y then mrbst_push_down l y r\n        else return_pmf \\<langle>l, y, r\\<rangle>))))))))) =\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {z \\<in> A. z < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {z \\<in> A. x < z} \\<bind>\n          (\\<lambda>r1.\n              pmf_of_set B \\<bind>\n              (\\<lambda>y.\n                  random_bst {z \\<in> B. z < y} \\<bind>\n                  (\\<lambda>l2.\n                      random_bst {z \\<in> B. y < z} \\<bind>\n                      (\\<lambda>r2.\n                          bernoulli_pmf p \\<bind>\n                          (\\<lambda>b.\n                              if b\n                              then mrbst_union l1\n                                    (fst\n(split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n                                   (\\<lambda>l.\n mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n                              else mrbst_union\n                                    (fst\n(split_bst y \\<langle>l1, x, r1\\<rangle>))\n                                    l2 \\<bind>\n                                   (\\<lambda>l.\n mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2 \\<bind>\n (\\<lambda>r.\n     if y \\<in> A then mrbst_push_down l y r\n     else return_pmf \\<langle>l, y, r\\<rangle>)))))))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"\\<dots> = do {\n                        b \\<leftarrow> bernoulli_pmf p;\n                        if b then do {\n                          x \\<leftarrow> pmf_of_set A;\n                          (l1, r1) \\<leftarrow> pair_pmf (random_bst {z\\<in>A. z < x}) (random_bst {z\\<in>A. z > x});\n                          (l2, r2) \\<leftarrow> map_pmf (split_bst x) (random_bst B);\n                          l \\<leftarrow> mrbst_union l1 l2;\n                          r \\<leftarrow> mrbst_union r1 r2;\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        } else do {\n                          y \\<leftarrow> pmf_of_set B;\n                          (l1, r1) \\<leftarrow> map_pmf (split_bst y) (random_bst A);\n                          (l2, r2) \\<leftarrow> pair_pmf (random_bst {z\\<in>B. z < y}) (random_bst {z\\<in>B. z > y});\n                          l \\<leftarrow> mrbst_union l1 l2;\n                          r \\<leftarrow> mrbst_union r1 r2;\n                          if y \\<in> A then\n                            mrbst_push_down l y r\n                          else\n                            return_pmf \\<langle>l, y, r\\<rangle>\n                        }\n                      }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {z \\<in> A. z < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {z \\<in> A. x < z} \\<bind>\n            (\\<lambda>r1.\n                pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst {z \\<in> B. z < y} \\<bind>\n                    (\\<lambda>l2.\n                        random_bst {z \\<in> B. y < z} \\<bind>\n                        (\\<lambda>r2.\n                            bernoulli_pmf p \\<bind>\n                            (\\<lambda>b.\n                                if b\n                                then mrbst_union l1\n(fst (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n                                     (\\<lambda>l.\n   mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n                                else mrbst_union\n(fst (split_bst y \\<langle>l1, x, r1\\<rangle>)) l2 \\<bind>\n                                     (\\<lambda>l.\n   mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2 \\<bind>\n   (\\<lambda>r.\n       if y \\<in> A then mrbst_push_down l y r\n       else return_pmf \\<langle>l, y, r\\<rangle>))))))))) =\n    bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 pair_pmf (random_bst {z \\<in> A. z < x})\n                  (random_bst {z \\<in> A. x < z}) \\<bind>\n                 (\\<lambda>(l1, r1).\n                     map_pmf (split_bst x) (random_bst B) \\<bind>\n                     (\\<lambda>(l2, r2).\n                         mrbst_union l1 l2 \\<bind>\n                         (\\<lambda>l.\n                             mrbst_union r1 r2 \\<bind>\n                             (\\<lambda>r.\n                                 return_pmf \\<langle>l, x, r\\<rangle>)))))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>y.\n                 map_pmf (split_bst y) (random_bst A) \\<bind>\n                 (\\<lambda>(l1, r1).\n                     pair_pmf (random_bst {z \\<in> B. z < y})\n                      (random_bst {z \\<in> B. y < z}) \\<bind>\n                     (\\<lambda>(l2, r2).\n                         mrbst_union l1 l2 \\<bind>\n                         (\\<lambda>l.\n                             mrbst_union r1 r2 \\<bind>\n                             (\\<lambda>r.\n                                 if y \\<in> A then mrbst_push_down l y r\n                                 else return_pmf\n \\<langle>l, y, r\\<rangle>))))))", "using AB"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. pmf_of_set A \\<bind>\n    (\\<lambda>x.\n        random_bst {z \\<in> A. z < x} \\<bind>\n        (\\<lambda>l1.\n            random_bst {z \\<in> A. x < z} \\<bind>\n            (\\<lambda>r1.\n                pmf_of_set B \\<bind>\n                (\\<lambda>y.\n                    random_bst {z \\<in> B. z < y} \\<bind>\n                    (\\<lambda>l2.\n                        random_bst {z \\<in> B. y < z} \\<bind>\n                        (\\<lambda>r2.\n                            bernoulli_pmf p \\<bind>\n                            (\\<lambda>b.\n                                if b\n                                then mrbst_union l1\n(fst (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n                                     (\\<lambda>l.\n   mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n                                else mrbst_union\n(fst (split_bst y \\<langle>l1, x, r1\\<rangle>)) l2 \\<bind>\n                                     (\\<lambda>l.\n   mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2 \\<bind>\n   (\\<lambda>r.\n       if y \\<in> A then mrbst_push_down l y r\n       else return_pmf \\<langle>l, y, r\\<rangle>))))))))) =\n    bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 pair_pmf (random_bst {z \\<in> A. z < x})\n                  (random_bst {z \\<in> A. x < z}) \\<bind>\n                 (\\<lambda>(l1, r1).\n                     map_pmf (split_bst x) (random_bst B) \\<bind>\n                     (\\<lambda>(l2, r2).\n                         mrbst_union l1 l2 \\<bind>\n                         (\\<lambda>l.\n                             mrbst_union r1 r2 \\<bind>\n                             (\\<lambda>r.\n                                 return_pmf \\<langle>l, x, r\\<rangle>)))))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>y.\n                 map_pmf (split_bst y) (random_bst A) \\<bind>\n                 (\\<lambda>(l1, r1).\n                     pair_pmf (random_bst {z \\<in> B. z < y})\n                      (random_bst {z \\<in> B. y < z}) \\<bind>\n                     (\\<lambda>(l2, r2).\n                         mrbst_union l1 l2 \\<bind>\n                         (\\<lambda>l.\n                             mrbst_union r1 r2 \\<bind>\n                             (\\<lambda>r.\n                                 if y \\<in> A then mrbst_push_down l y r\n                                 else return_pmf\n \\<langle>l, y, r\\<rangle>))))))", "by (simp add: random_bst_reduce map_pmf_def case_prod_unfold pair_pmf_def cong: if_cong)"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {z \\<in> A. z < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {z \\<in> A. x < z} \\<bind>\n          (\\<lambda>r1.\n              pmf_of_set B \\<bind>\n              (\\<lambda>y.\n                  random_bst {z \\<in> B. z < y} \\<bind>\n                  (\\<lambda>l2.\n                      random_bst {z \\<in> B. y < z} \\<bind>\n                      (\\<lambda>r2.\n                          bernoulli_pmf p \\<bind>\n                          (\\<lambda>b.\n                              if b\n                              then mrbst_union l1\n                                    (fst\n(split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n                                   (\\<lambda>l.\n mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n                              else mrbst_union\n                                    (fst\n(split_bst y \\<langle>l1, x, r1\\<rangle>))\n                                    l2 \\<bind>\n                                   (\\<lambda>l.\n mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2 \\<bind>\n (\\<lambda>r.\n     if y \\<in> A then mrbst_push_down l y r\n     else return_pmf \\<langle>l, y, r\\<rangle>))))))))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               pair_pmf (random_bst {z \\<in> A. z < x})\n                (random_bst {z \\<in> A. x < z}) \\<bind>\n               (\\<lambda>(l1, r1).\n                   map_pmf (split_bst x) (random_bst B) \\<bind>\n                   (\\<lambda>(l2, r2).\n                       mrbst_union l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_union r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               return_pmf \\<langle>l, x, r\\<rangle>)))))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               map_pmf (split_bst y) (random_bst A) \\<bind>\n               (\\<lambda>(l1, r1).\n                   pair_pmf (random_bst {z \\<in> B. z < y})\n                    (random_bst {z \\<in> B. y < z}) \\<bind>\n                   (\\<lambda>(l2, r2).\n                       mrbst_union l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_union r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               if y \\<in> A then mrbst_push_down l y r\n                               else return_pmf\n                                     \\<langle>l, y, r\\<rangle>))))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  pmf_of_set A \\<bind>\n  (\\<lambda>x.\n      random_bst {z \\<in> A. z < x} \\<bind>\n      (\\<lambda>l1.\n          random_bst {z \\<in> A. x < z} \\<bind>\n          (\\<lambda>r1.\n              pmf_of_set B \\<bind>\n              (\\<lambda>y.\n                  random_bst {z \\<in> B. z < y} \\<bind>\n                  (\\<lambda>l2.\n                      random_bst {z \\<in> B. y < z} \\<bind>\n                      (\\<lambda>r2.\n                          bernoulli_pmf p \\<bind>\n                          (\\<lambda>b.\n                              if b\n                              then mrbst_union l1\n                                    (fst\n(split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n                                   (\\<lambda>l.\n mrbst_union r1 (snd (split_bst x \\<langle>l2, y, r2\\<rangle>)) \\<bind>\n (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>))\n                              else mrbst_union\n                                    (fst\n(split_bst y \\<langle>l1, x, r1\\<rangle>))\n                                    l2 \\<bind>\n                                   (\\<lambda>l.\n mrbst_union (snd (split_bst y \\<langle>l1, x, r1\\<rangle>)) r2 \\<bind>\n (\\<lambda>r.\n     if y \\<in> A then mrbst_push_down l y r\n     else return_pmf \\<langle>l, y, r\\<rangle>))))))))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               pair_pmf (random_bst {z \\<in> A. z < x})\n                (random_bst {z \\<in> A. x < z}) \\<bind>\n               (\\<lambda>(l1, r1).\n                   map_pmf (split_bst x) (random_bst B) \\<bind>\n                   (\\<lambda>(l2, r2).\n                       mrbst_union l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_union r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               return_pmf \\<langle>l, x, r\\<rangle>)))))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               map_pmf (split_bst y) (random_bst A) \\<bind>\n               (\\<lambda>(l1, r1).\n                   pair_pmf (random_bst {z \\<in> B. z < y})\n                    (random_bst {z \\<in> B. y < z}) \\<bind>\n                   (\\<lambda>(l2, r2).\n                       mrbst_union l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_union r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               if y \\<in> A then mrbst_push_down l y r\n                               else return_pmf\n                                     \\<langle>l, y, r\\<rangle>))))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"\\<dots> = do {\n                        b \\<leftarrow> bernoulli_pmf p;\n                        if b then do {\n                          x \\<leftarrow> pmf_of_set A;\n                          (l1, r1) \\<leftarrow> pair_pmf (RA1 x) (RA2 x);\n                          (l2, r2) \\<leftarrow> pair_pmf (RB1 x) (RB2 x);\n                          l \\<leftarrow> mrbst_union l1 l2;\n                          r \\<leftarrow> mrbst_union r1 r2;\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        } else do {\n                          y \\<leftarrow> pmf_of_set B;\n                          (l1, r1) \\<leftarrow> pair_pmf (RA1 y) (RA2 y);\n                          (l2, r2) \\<leftarrow> pair_pmf (RB1 y) (RB2 y);\n                          l \\<leftarrow> mrbst_union l1 l2;\n                          r \\<leftarrow> mrbst_union r1 r2;\n                          if y \\<in> A then\n                            mrbst_push_down l y r\n                          else\n                            return_pmf \\<langle>l, y, r\\<rangle>\n                        }\n                      }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 pair_pmf (random_bst {z \\<in> A. z < x})\n                  (random_bst {z \\<in> A. x < z}) \\<bind>\n                 (\\<lambda>(l1, r1).\n                     map_pmf (split_bst x) (random_bst B) \\<bind>\n                     (\\<lambda>(l2, r2).\n                         mrbst_union l1 l2 \\<bind>\n                         (\\<lambda>l.\n                             mrbst_union r1 r2 \\<bind>\n                             (\\<lambda>r.\n                                 return_pmf \\<langle>l, x, r\\<rangle>)))))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>y.\n                 map_pmf (split_bst y) (random_bst A) \\<bind>\n                 (\\<lambda>(l1, r1).\n                     pair_pmf (random_bst {z \\<in> B. z < y})\n                      (random_bst {z \\<in> B. y < z}) \\<bind>\n                     (\\<lambda>(l2, r2).\n                         mrbst_union l1 l2 \\<bind>\n                         (\\<lambda>l.\n                             mrbst_union r1 r2 \\<bind>\n                             (\\<lambda>r.\n                                 if y \\<in> A then mrbst_push_down l y r\n                                 else return_pmf\n \\<langle>l, y, r\\<rangle>)))))) =\n    bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 pair_pmf (RA1 x) (RA2 x) \\<bind>\n                 (\\<lambda>(l1, r1).\n                     pair_pmf (RB1 x) (RB2 x) \\<bind>\n                     (\\<lambda>(l2, r2).\n                         mrbst_union l1 l2 \\<bind>\n                         (\\<lambda>l.\n                             mrbst_union r1 r2 \\<bind>\n                             (\\<lambda>r.\n                                 return_pmf \\<langle>l, x, r\\<rangle>)))))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>y.\n                 pair_pmf (RA1 y) (RA2 y) \\<bind>\n                 (\\<lambda>(l1, r1).\n                     pair_pmf (RB1 y) (RB2 y) \\<bind>\n                     (\\<lambda>(l2, r2).\n                         mrbst_union l1 l2 \\<bind>\n                         (\\<lambda>l.\n                             mrbst_union r1 r2 \\<bind>\n                             (\\<lambda>r.\n                                 if y \\<in> A then mrbst_push_down l y r\n                                 else return_pmf\n \\<langle>l, y, r\\<rangle>))))))", "unfolding case_prod_unfold RA1_def RA2_def RB1_def RB2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 pair_pmf (random_bst {z \\<in> A. z < x})\n                  (random_bst {z \\<in> A. x < z}) \\<bind>\n                 (\\<lambda>p.\n                     map_pmf (split_bst x) (random_bst B) \\<bind>\n                     (\\<lambda>pa.\n                         mrbst_union (fst p) (fst pa) \\<bind>\n                         (\\<lambda>l.\n                             mrbst_union (snd p) (snd pa) \\<bind>\n                             (\\<lambda>r.\n                                 return_pmf \\<langle>l, x, r\\<rangle>)))))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>y.\n                 map_pmf (split_bst y) (random_bst A) \\<bind>\n                 (\\<lambda>p.\n                     pair_pmf (random_bst {z \\<in> B. z < y})\n                      (random_bst {z \\<in> B. y < z}) \\<bind>\n                     (\\<lambda>pa.\n                         mrbst_union (fst p) (fst pa) \\<bind>\n                         (\\<lambda>l.\n                             mrbst_union (snd p) (snd pa) \\<bind>\n                             (\\<lambda>r.\n                                 if y \\<in> A then mrbst_push_down l y r\n                                 else return_pmf\n \\<langle>l, y, r\\<rangle>)))))) =\n    bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 pair_pmf (random_bst {z \\<in> A. z < x})\n                  (random_bst {z \\<in> A. x < z}) \\<bind>\n                 (\\<lambda>p.\n                     pair_pmf (random_bst {z \\<in> B. z < x})\n                      (random_bst {z \\<in> B. x < z}) \\<bind>\n                     (\\<lambda>pa.\n                         mrbst_union (fst p) (fst pa) \\<bind>\n                         (\\<lambda>l.\n                             mrbst_union (snd p) (snd pa) \\<bind>\n                             (\\<lambda>r.\n                                 return_pmf \\<langle>l, x, r\\<rangle>)))))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>y.\n                 pair_pmf (random_bst {z \\<in> A. z < y})\n                  (random_bst {z \\<in> A. y < z}) \\<bind>\n                 (\\<lambda>p.\n                     pair_pmf (random_bst {z \\<in> B. z < y})\n                      (random_bst {z \\<in> B. y < z}) \\<bind>\n                     (\\<lambda>pa.\n                         mrbst_union (fst p) (fst pa) \\<bind>\n                         (\\<lambda>l.\n                             mrbst_union (snd p) (snd pa) \\<bind>\n                             (\\<lambda>r.\n                                 if y \\<in> A then mrbst_push_down l y r\n                                 else return_pmf\n \\<langle>l, y, r\\<rangle>))))))", "by (intro bind_pmf_cong refl if_cong split_random_bst AB)"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               pair_pmf (random_bst {z \\<in> A. z < x})\n                (random_bst {z \\<in> A. x < z}) \\<bind>\n               (\\<lambda>(l1, r1).\n                   map_pmf (split_bst x) (random_bst B) \\<bind>\n                   (\\<lambda>(l2, r2).\n                       mrbst_union l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_union r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               return_pmf \\<langle>l, x, r\\<rangle>)))))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               map_pmf (split_bst y) (random_bst A) \\<bind>\n               (\\<lambda>(l1, r1).\n                   pair_pmf (random_bst {z \\<in> B. z < y})\n                    (random_bst {z \\<in> B. y < z}) \\<bind>\n                   (\\<lambda>(l2, r2).\n                       mrbst_union l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_union r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               if y \\<in> A then mrbst_push_down l y r\n                               else return_pmf\n                                     \\<langle>l, y, r\\<rangle>)))))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               pair_pmf (RA1 x) (RA2 x) \\<bind>\n               (\\<lambda>(l1, r1).\n                   pair_pmf (RB1 x) (RB2 x) \\<bind>\n                   (\\<lambda>(l2, r2).\n                       mrbst_union l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_union r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               return_pmf \\<langle>l, x, r\\<rangle>)))))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               pair_pmf (RA1 y) (RA2 y) \\<bind>\n               (\\<lambda>(l1, r1).\n                   pair_pmf (RB1 y) (RB2 y) \\<bind>\n                   (\\<lambda>(l2, r2).\n                       mrbst_union l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_union r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               if y \\<in> A then mrbst_push_down l y r\n                               else return_pmf\n                                     \\<langle>l, y, r\\<rangle>))))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               pair_pmf (random_bst {z \\<in> A. z < x})\n                (random_bst {z \\<in> A. x < z}) \\<bind>\n               (\\<lambda>(l1, r1).\n                   map_pmf (split_bst x) (random_bst B) \\<bind>\n                   (\\<lambda>(l2, r2).\n                       mrbst_union l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_union r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               return_pmf \\<langle>l, x, r\\<rangle>)))))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               map_pmf (split_bst y) (random_bst A) \\<bind>\n               (\\<lambda>(l1, r1).\n                   pair_pmf (random_bst {z \\<in> B. z < y})\n                    (random_bst {z \\<in> B. y < z}) \\<bind>\n                   (\\<lambda>(l2, r2).\n                       mrbst_union l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_union r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               if y \\<in> A then mrbst_push_down l y r\n                               else return_pmf\n                                     \\<langle>l, y, r\\<rangle>)))))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               pair_pmf (RA1 x) (RA2 x) \\<bind>\n               (\\<lambda>(l1, r1).\n                   pair_pmf (RB1 x) (RB2 x) \\<bind>\n                   (\\<lambda>(l2, r2).\n                       mrbst_union l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_union r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               return_pmf \\<langle>l, x, r\\<rangle>)))))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               pair_pmf (RA1 y) (RA2 y) \\<bind>\n               (\\<lambda>(l1, r1).\n                   pair_pmf (RB1 y) (RB2 y) \\<bind>\n                   (\\<lambda>(l2, r2).\n                       mrbst_union l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_union r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               if y \\<in> A then mrbst_push_down l y r\n                               else return_pmf\n                                     \\<langle>l, y, r\\<rangle>))))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"\\<dots> = do {\n                        b \\<leftarrow> bernoulli_pmf p;\n                        if b then do {\n                          x \\<leftarrow> pmf_of_set A;\n                          l \\<leftarrow> do {l1 \\<leftarrow> RA1 x; l2 \\<leftarrow> RB1 x; mrbst_union l1 l2};\n                          r \\<leftarrow> do {r1 \\<leftarrow> RA2 x; r2 \\<leftarrow> RB2 x; mrbst_union r1 r2};\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        } else do {\n                          y \\<leftarrow> pmf_of_set B;\n                          l \\<leftarrow> do {l1 \\<leftarrow> RA1 y; l2 \\<leftarrow> RB1 y; mrbst_union l1 l2};\n                          r \\<leftarrow> do {r1 \\<leftarrow> RA2 y; r2 \\<leftarrow> RB2 y; mrbst_union r1 r2};\n                          if y \\<in> A then\n                            mrbst_push_down l y r\n                          else\n                            return_pmf \\<langle>l, y, r\\<rangle>\n                        }\n                      }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 pair_pmf (RA1 x) (RA2 x) \\<bind>\n                 (\\<lambda>(l1, r1).\n                     pair_pmf (RB1 x) (RB2 x) \\<bind>\n                     (\\<lambda>(l2, r2).\n                         mrbst_union l1 l2 \\<bind>\n                         (\\<lambda>l.\n                             mrbst_union r1 r2 \\<bind>\n                             (\\<lambda>r.\n                                 return_pmf \\<langle>l, x, r\\<rangle>)))))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>y.\n                 pair_pmf (RA1 y) (RA2 y) \\<bind>\n                 (\\<lambda>(l1, r1).\n                     pair_pmf (RB1 y) (RB2 y) \\<bind>\n                     (\\<lambda>(l2, r2).\n                         mrbst_union l1 l2 \\<bind>\n                         (\\<lambda>l.\n                             mrbst_union r1 r2 \\<bind>\n                             (\\<lambda>r.\n                                 if y \\<in> A then mrbst_push_down l y r\n                                 else return_pmf\n \\<langle>l, y, r\\<rangle>)))))) =\n    bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 RA1 x \\<bind>\n                 (\\<lambda>l1. RB1 x \\<bind> mrbst_union l1) \\<bind>\n                 (\\<lambda>l.\n                     RA2 x \\<bind>\n                     (\\<lambda>r1. RB2 x \\<bind> mrbst_union r1) \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>y.\n                 RA1 y \\<bind>\n                 (\\<lambda>l1. RB1 y \\<bind> mrbst_union l1) \\<bind>\n                 (\\<lambda>l.\n                     RA2 y \\<bind>\n                     (\\<lambda>r1. RB2 y \\<bind> mrbst_union r1) \\<bind>\n                     (\\<lambda>r.\n                         if y \\<in> A then mrbst_push_down l y r\n                         else return_pmf \\<langle>l, y, r\\<rangle>))))", "by (simp add: pair_pmf_def cong: if_cong)"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               pair_pmf (RA1 x) (RA2 x) \\<bind>\n               (\\<lambda>(l1, r1).\n                   pair_pmf (RB1 x) (RB2 x) \\<bind>\n                   (\\<lambda>(l2, r2).\n                       mrbst_union l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_union r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               return_pmf \\<langle>l, x, r\\<rangle>)))))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               pair_pmf (RA1 y) (RA2 y) \\<bind>\n               (\\<lambda>(l1, r1).\n                   pair_pmf (RB1 y) (RB2 y) \\<bind>\n                   (\\<lambda>(l2, r2).\n                       mrbst_union l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_union r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               if y \\<in> A then mrbst_push_down l y r\n                               else return_pmf\n                                     \\<langle>l, y, r\\<rangle>)))))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               RA1 x \\<bind>\n               (\\<lambda>l1. RB1 x \\<bind> mrbst_union l1) \\<bind>\n               (\\<lambda>l.\n                   RA2 x \\<bind>\n                   (\\<lambda>r1. RB2 x \\<bind> mrbst_union r1) \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               RA1 y \\<bind>\n               (\\<lambda>l1. RB1 y \\<bind> mrbst_union l1) \\<bind>\n               (\\<lambda>l.\n                   RA2 y \\<bind>\n                   (\\<lambda>r1. RB2 y \\<bind> mrbst_union r1) \\<bind>\n                   (\\<lambda>r.\n                       if y \\<in> A then mrbst_push_down l y r\n                       else return_pmf \\<langle>l, y, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               pair_pmf (RA1 x) (RA2 x) \\<bind>\n               (\\<lambda>(l1, r1).\n                   pair_pmf (RB1 x) (RB2 x) \\<bind>\n                   (\\<lambda>(l2, r2).\n                       mrbst_union l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_union r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               return_pmf \\<langle>l, x, r\\<rangle>)))))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               pair_pmf (RA1 y) (RA2 y) \\<bind>\n               (\\<lambda>(l1, r1).\n                   pair_pmf (RB1 y) (RB2 y) \\<bind>\n                   (\\<lambda>(l2, r2).\n                       mrbst_union l1 l2 \\<bind>\n                       (\\<lambda>l.\n                           mrbst_union r1 r2 \\<bind>\n                           (\\<lambda>r.\n                               if y \\<in> A then mrbst_push_down l y r\n                               else return_pmf\n                                     \\<langle>l, y, r\\<rangle>)))))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               RA1 x \\<bind>\n               (\\<lambda>l1. RB1 x \\<bind> mrbst_union l1) \\<bind>\n               (\\<lambda>l.\n                   RA2 x \\<bind>\n                   (\\<lambda>r1. RB2 x \\<bind> mrbst_union r1) \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               RA1 y \\<bind>\n               (\\<lambda>l1. RB1 y \\<bind> mrbst_union l1) \\<bind>\n               (\\<lambda>l.\n                   RA2 y \\<bind>\n                   (\\<lambda>r1. RB2 y \\<bind> mrbst_union r1) \\<bind>\n                   (\\<lambda>r.\n                       if y \\<in> A then mrbst_push_down l y r\n                       else return_pmf \\<langle>l, y, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"\\<dots> = do {\n                        b \\<leftarrow> bernoulli_pmf p;\n                        if b then do {\n                          x \\<leftarrow> pmf_of_set A;\n                          l \\<leftarrow> random_bst ({z\\<in>A. z < x} \\<union> {z\\<in>B. z < x});\n                          r \\<leftarrow> random_bst ({z\\<in>A. z > x} \\<union> {z\\<in>B. z > x});\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        } else do {\n                          y \\<leftarrow> pmf_of_set B;\n                          l \\<leftarrow> random_bst ({z\\<in>A. z < y} \\<union> {z\\<in>B. z < y});\n                          r \\<leftarrow> random_bst ({z\\<in>A. z > y} \\<union> {z\\<in>B. z > y});\n                          if y \\<in> A then\n                            mrbst_push_down l y r\n                          else\n                            return_pmf \\<langle>l, y, r\\<rangle>\n                        }\n                      }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 RA1 x \\<bind>\n                 (\\<lambda>l1. RB1 x \\<bind> mrbst_union l1) \\<bind>\n                 (\\<lambda>l.\n                     RA2 x \\<bind>\n                     (\\<lambda>r1. RB2 x \\<bind> mrbst_union r1) \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>y.\n                 RA1 y \\<bind>\n                 (\\<lambda>l1. RB1 y \\<bind> mrbst_union l1) \\<bind>\n                 (\\<lambda>l.\n                     RA2 y \\<bind>\n                     (\\<lambda>r1. RB2 y \\<bind> mrbst_union r1) \\<bind>\n                     (\\<lambda>r.\n                         if y \\<in> A then mrbst_push_down l y r\n                         else return_pmf \\<langle>l, y, r\\<rangle>)))) =\n    bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 random_bst\n                  ({z \\<in> A. z < x} \\<union> {z \\<in> B. z < x}) \\<bind>\n                 (\\<lambda>l.\n                     random_bst\n                      ({z \\<in> A. x < z} \\<union>\n                       {z \\<in> B. x < z}) \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>y.\n                 random_bst\n                  ({z \\<in> A. z < y} \\<union> {z \\<in> B. z < y}) \\<bind>\n                 (\\<lambda>l.\n                     random_bst\n                      ({z \\<in> A. y < z} \\<union>\n                       {z \\<in> B. y < z}) \\<bind>\n                     (\\<lambda>r.\n                         if y \\<in> A then mrbst_push_down l y r\n                         else return_pmf \\<langle>l, y, r\\<rangle>))))", "unfolding RA1_def RA2_def RB1_def RB2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 random_bst {z \\<in> A. z < x} \\<bind>\n                 (\\<lambda>l1.\n                     random_bst {z \\<in> B. z < x} \\<bind>\n                     mrbst_union l1) \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A. x < z} \\<bind>\n                     (\\<lambda>r1.\n                         random_bst {z \\<in> B. x < z} \\<bind>\n                         mrbst_union r1) \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A. z < y} \\<bind>\n                 (\\<lambda>l1.\n                     random_bst {z \\<in> B. z < y} \\<bind>\n                     mrbst_union l1) \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A. y < z} \\<bind>\n                     (\\<lambda>r1.\n                         random_bst {z \\<in> B. y < z} \\<bind>\n                         mrbst_union r1) \\<bind>\n                     (\\<lambda>r.\n                         if y \\<in> A then mrbst_push_down l y r\n                         else return_pmf \\<langle>l, y, r\\<rangle>)))) =\n    bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 random_bst\n                  ({z \\<in> A. z < x} \\<union> {z \\<in> B. z < x}) \\<bind>\n                 (\\<lambda>l.\n                     random_bst\n                      ({z \\<in> A. x < z} \\<union>\n                       {z \\<in> B. x < z}) \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>y.\n                 random_bst\n                  ({z \\<in> A. z < y} \\<union> {z \\<in> B. z < y}) \\<bind>\n                 (\\<lambda>l.\n                     random_bst\n                      ({z \\<in> A. y < z} \\<union>\n                       {z \\<in> B. y < z}) \\<bind>\n                     (\\<lambda>r.\n                         if y \\<in> A then mrbst_push_down l y r\n                         else return_pmf \\<langle>l, y, r\\<rangle>))))", "using AB"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 random_bst {z \\<in> A. z < x} \\<bind>\n                 (\\<lambda>l1.\n                     random_bst {z \\<in> B. z < x} \\<bind>\n                     mrbst_union l1) \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A. x < z} \\<bind>\n                     (\\<lambda>r1.\n                         random_bst {z \\<in> B. x < z} \\<bind>\n                         mrbst_union r1) \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A. z < y} \\<bind>\n                 (\\<lambda>l1.\n                     random_bst {z \\<in> B. z < y} \\<bind>\n                     mrbst_union l1) \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A. y < z} \\<bind>\n                     (\\<lambda>r1.\n                         random_bst {z \\<in> B. y < z} \\<bind>\n                         mrbst_union r1) \\<bind>\n                     (\\<lambda>r.\n                         if y \\<in> A then mrbst_push_down l y r\n                         else return_pmf \\<langle>l, y, r\\<rangle>)))) =\n    bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 random_bst\n                  ({z \\<in> A. z < x} \\<union> {z \\<in> B. z < x}) \\<bind>\n                 (\\<lambda>l.\n                     random_bst\n                      ({z \\<in> A. x < z} \\<union>\n                       {z \\<in> B. x < z}) \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>y.\n                 random_bst\n                  ({z \\<in> A. z < y} \\<union> {z \\<in> B. z < y}) \\<bind>\n                 (\\<lambda>l.\n                     random_bst\n                      ({z \\<in> A. y < z} \\<union>\n                       {z \\<in> B. y < z}) \\<bind>\n                     (\\<lambda>r.\n                         if y \\<in> A then mrbst_push_down l y r\n                         else return_pmf \\<langle>l, y, r\\<rangle>))))", "by (intro bind_pmf_cong if_cong refl psubset) auto"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               RA1 x \\<bind>\n               (\\<lambda>l1. RB1 x \\<bind> mrbst_union l1) \\<bind>\n               (\\<lambda>l.\n                   RA2 x \\<bind>\n                   (\\<lambda>r1. RB2 x \\<bind> mrbst_union r1) \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               RA1 y \\<bind>\n               (\\<lambda>l1. RB1 y \\<bind> mrbst_union l1) \\<bind>\n               (\\<lambda>l.\n                   RA2 y \\<bind>\n                   (\\<lambda>r1. RB2 y \\<bind> mrbst_union r1) \\<bind>\n                   (\\<lambda>r.\n                       if y \\<in> A then mrbst_push_down l y r\n                       else return_pmf \\<langle>l, y, r\\<rangle>)))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               random_bst\n                ({z \\<in> A. z < x} \\<union> {z \\<in> B. z < x}) \\<bind>\n               (\\<lambda>l.\n                   random_bst\n                    ({z \\<in> A. x < z} \\<union> {z \\<in> B. x < z}) \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               random_bst\n                ({z \\<in> A. z < y} \\<union> {z \\<in> B. z < y}) \\<bind>\n               (\\<lambda>l.\n                   random_bst\n                    ({z \\<in> A. y < z} \\<union> {z \\<in> B. y < z}) \\<bind>\n                   (\\<lambda>r.\n                       if y \\<in> A then mrbst_push_down l y r\n                       else return_pmf \\<langle>l, y, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               RA1 x \\<bind>\n               (\\<lambda>l1. RB1 x \\<bind> mrbst_union l1) \\<bind>\n               (\\<lambda>l.\n                   RA2 x \\<bind>\n                   (\\<lambda>r1. RB2 x \\<bind> mrbst_union r1) \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               RA1 y \\<bind>\n               (\\<lambda>l1. RB1 y \\<bind> mrbst_union l1) \\<bind>\n               (\\<lambda>l.\n                   RA2 y \\<bind>\n                   (\\<lambda>r1. RB2 y \\<bind> mrbst_union r1) \\<bind>\n                   (\\<lambda>r.\n                       if y \\<in> A then mrbst_push_down l y r\n                       else return_pmf \\<langle>l, y, r\\<rangle>)))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               random_bst\n                ({z \\<in> A. z < x} \\<union> {z \\<in> B. z < x}) \\<bind>\n               (\\<lambda>l.\n                   random_bst\n                    ({z \\<in> A. x < z} \\<union> {z \\<in> B. x < z}) \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               random_bst\n                ({z \\<in> A. z < y} \\<union> {z \\<in> B. z < y}) \\<bind>\n               (\\<lambda>l.\n                   random_bst\n                    ({z \\<in> A. y < z} \\<union> {z \\<in> B. y < z}) \\<bind>\n                   (\\<lambda>r.\n                       if y \\<in> A then mrbst_push_down l y r\n                       else return_pmf \\<langle>l, y, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"\\<dots> = do {\n                        b \\<leftarrow> bernoulli_pmf p;\n                        if b then do {\n                          x \\<leftarrow> pmf_of_set A;\n                          l \\<leftarrow> random_bst {z\\<in>A \\<union> B. z < x};\n                          r \\<leftarrow> random_bst {z\\<in>A \\<union> B. z > x};\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        } else do {\n                          y \\<leftarrow> pmf_of_set B;\n                          l \\<leftarrow> random_bst {z\\<in>A \\<union> B. z < y};\n                          r \\<leftarrow> random_bst {z\\<in>A \\<union> B. z > y};\n                          if y \\<in> A then\n                            mrbst_push_down l y r\n                          else\n                            return_pmf \\<langle>l, y, r\\<rangle>\n                        }\n                      }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 random_bst\n                  ({z \\<in> A. z < x} \\<union> {z \\<in> B. z < x}) \\<bind>\n                 (\\<lambda>l.\n                     random_bst\n                      ({z \\<in> A. x < z} \\<union>\n                       {z \\<in> B. x < z}) \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>y.\n                 random_bst\n                  ({z \\<in> A. z < y} \\<union> {z \\<in> B. z < y}) \\<bind>\n                 (\\<lambda>l.\n                     random_bst\n                      ({z \\<in> A. y < z} \\<union>\n                       {z \\<in> B. y < z}) \\<bind>\n                     (\\<lambda>r.\n                         if y \\<in> A then mrbst_push_down l y r\n                         else return_pmf \\<langle>l, y, r\\<rangle>)))) =\n    bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                     (\\<lambda>r.\n                         if y \\<in> A then mrbst_push_down l y r\n                         else return_pmf \\<langle>l, y, r\\<rangle>))))", "by (intro bind_pmf_cong if_cong refl arg_cong[of _ _ random_bst]) auto"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               random_bst\n                ({z \\<in> A. z < x} \\<union> {z \\<in> B. z < x}) \\<bind>\n               (\\<lambda>l.\n                   random_bst\n                    ({z \\<in> A. x < z} \\<union> {z \\<in> B. x < z}) \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               random_bst\n                ({z \\<in> A. z < y} \\<union> {z \\<in> B. z < y}) \\<bind>\n               (\\<lambda>l.\n                   random_bst\n                    ({z \\<in> A. y < z} \\<union> {z \\<in> B. y < z}) \\<bind>\n                   (\\<lambda>r.\n                       if y \\<in> A then mrbst_push_down l y r\n                       else return_pmf \\<langle>l, y, r\\<rangle>)))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r.\n                       if y \\<in> A then mrbst_push_down l y r\n                       else return_pmf \\<langle>l, y, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               random_bst\n                ({z \\<in> A. z < x} \\<union> {z \\<in> B. z < x}) \\<bind>\n               (\\<lambda>l.\n                   random_bst\n                    ({z \\<in> A. x < z} \\<union> {z \\<in> B. x < z}) \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               random_bst\n                ({z \\<in> A. z < y} \\<union> {z \\<in> B. z < y}) \\<bind>\n               (\\<lambda>l.\n                   random_bst\n                    ({z \\<in> A. y < z} \\<union> {z \\<in> B. y < z}) \\<bind>\n                   (\\<lambda>r.\n                       if y \\<in> A then mrbst_push_down l y r\n                       else return_pmf \\<langle>l, y, r\\<rangle>)))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r.\n                       if y \\<in> A then mrbst_push_down l y r\n                       else return_pmf \\<langle>l, y, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"\\<dots> = do {\n                        b \\<leftarrow> bernoulli_pmf p;\n                        if b then do {\n                          x \\<leftarrow> pmf_of_set A;\n                          l \\<leftarrow> random_bst {z\\<in>A \\<union> B. z < x};\n                          r \\<leftarrow> random_bst {z\\<in>A \\<union> B. z > x};\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        } else do {\n                          b' \\<leftarrow> bernoulli_pmf q;\n                          if b' then do {\n                            y \\<leftarrow> pmf_of_set (A \\<inter> B);\n                            random_bst (A \\<union> B)\n                          } else do {\n                            y \\<leftarrow> pmf_of_set (B - A);\n                            l \\<leftarrow> random_bst {z\\<in>A \\<union> B. z < y};\n                            r \\<leftarrow> random_bst {z\\<in>A \\<union> B. z > y};\n                            return_pmf \\<langle>l, y, r\\<rangle>\n                          }\n                        }\n                      }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else pmf_of_set B \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                     (\\<lambda>r.\n                         if y \\<in> A then mrbst_push_down l y r\n                         else return_pmf \\<langle>l, y, r\\<rangle>)))) =\n    bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else bernoulli_pmf q \\<bind>\n             (\\<lambda>b'.\n                 if b'\n                 then pmf_of_set (A \\<inter> B) \\<bind>\n                      (\\<lambda>y. random_bst (A \\<union> B))\n                 else pmf_of_set (B - A) \\<bind>\n                      (\\<lambda>y.\n                          random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                          (\\<lambda>l.\n                              random_bst\n                               {z \\<in> A \\<union> B. y < z} \\<bind>\n                              (\\<lambda>r.\n                                  return_pmf \\<langle>l, y, r\\<rangle>)))))", "proof (intro bind_pmf_cong refl if_cong, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set B \\<bind>\n                         (\\<lambda>y.\n                             random_bst\n                              {z \\<in> A \\<union> B. z < y} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {z \\<in> A \\<union> B. y < z} \\<bind>\n                                 (\\<lambda>r.\n                                     if y \\<in> A then mrbst_push_down l y r\n                                     else return_pmf\n     \\<langle>l, y, r\\<rangle>))) =\n                         bernoulli_pmf q \\<bind>\n                         (\\<lambda>b'.\n                             if b'\n                             then pmf_of_set (A \\<inter> B) \\<bind>\n                                  (\\<lambda>y. random_bst (A \\<union> B))\n                             else pmf_of_set (B - A) \\<bind>\n                                  (\\<lambda>y.\nrandom_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n(\\<lambda>l.\n    random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n    (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))", "case (1 b)"], ["proof (state)\nthis:\n  b \\<in> set_pmf (bernoulli_pmf p)\n  \\<not> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set B \\<bind>\n                         (\\<lambda>y.\n                             random_bst\n                              {z \\<in> A \\<union> B. z < y} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {z \\<in> A \\<union> B. y < z} \\<bind>\n                                 (\\<lambda>r.\n                                     if y \\<in> A then mrbst_push_down l y r\n                                     else return_pmf\n     \\<langle>l, y, r\\<rangle>))) =\n                         bernoulli_pmf q \\<bind>\n                         (\\<lambda>b'.\n                             if b'\n                             then pmf_of_set (A \\<inter> B) \\<bind>\n                                  (\\<lambda>y. random_bst (A \\<union> B))\n                             else pmf_of_set (B - A) \\<bind>\n                                  (\\<lambda>y.\nrandom_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n(\\<lambda>l.\n    random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n    (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))", "have q_pos: \"A \\<inter> B \\<noteq> {}\" if \"q > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> B \\<noteq> {}", "using that"], ["proof (prove)\nusing this:\n  0 < q\n\ngoal (1 subgoal):\n 1. A \\<inter> B \\<noteq> {}", "by (auto simp: q_def l_def)"], ["proof (state)\nthis:\n  0 < q \\<Longrightarrow> A \\<inter> B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set B \\<bind>\n                         (\\<lambda>y.\n                             random_bst\n                              {z \\<in> A \\<union> B. z < y} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {z \\<in> A \\<union> B. y < z} \\<bind>\n                                 (\\<lambda>r.\n                                     if y \\<in> A then mrbst_push_down l y r\n                                     else return_pmf\n     \\<langle>l, y, r\\<rangle>))) =\n                         bernoulli_pmf q \\<bind>\n                         (\\<lambda>b'.\n                             if b'\n                             then pmf_of_set (A \\<inter> B) \\<bind>\n                                  (\\<lambda>y. random_bst (A \\<union> B))\n                             else pmf_of_set (B - A) \\<bind>\n                                  (\\<lambda>y.\nrandom_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n(\\<lambda>l.\n    random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n    (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))", "have q_lt1: \"B - A \\<noteq> {}\" if \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B - A \\<noteq> {}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. B - A = {} \\<Longrightarrow> False", "assume \"B - A = {}\""], ["proof (state)\nthis:\n  B - A = {}\n\ngoal (1 subgoal):\n 1. B - A = {} \\<Longrightarrow> False", "hence \"A \\<inter> B = B\""], ["proof (prove)\nusing this:\n  B - A = {}\n\ngoal (1 subgoal):\n 1. A \\<inter> B = B", "by auto"], ["proof (state)\nthis:\n  A \\<inter> B = B\n\ngoal (1 subgoal):\n 1. B - A = {} \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  A \\<inter> B = B\n\ngoal (1 subgoal):\n 1. False", "using that AB"], ["proof (prove)\nusing this:\n  A \\<inter> B = B\n  q < 1\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: q_def l_def n_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q < 1 \\<Longrightarrow> B - A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set B \\<bind>\n                         (\\<lambda>y.\n                             random_bst\n                              {z \\<in> A \\<union> B. z < y} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {z \\<in> A \\<union> B. y < z} \\<bind>\n                                 (\\<lambda>r.\n                                     if y \\<in> A then mrbst_push_down l y r\n                                     else return_pmf\n     \\<langle>l, y, r\\<rangle>))) =\n                         bernoulli_pmf q \\<bind>\n                         (\\<lambda>b'.\n                             if b'\n                             then pmf_of_set (A \\<inter> B) \\<bind>\n                                  (\\<lambda>y. random_bst (A \\<union> B))\n                             else pmf_of_set (B - A) \\<bind>\n                                  (\\<lambda>y.\nrandom_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n(\\<lambda>l.\n    random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n    (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))", "have eq: \"pmf_of_set B = do {b' \\<leftarrow> bernoulli_pmf q;\n                                     if b' then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set B =\n    bernoulli_pmf q \\<bind>\n    (\\<lambda>b'.\n        if b' then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A))", "using AB"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. pmf_of_set B =\n    bernoulli_pmf q \\<bind>\n    (\\<lambda>b'.\n        if b' then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A))", "by (intro pmf_of_set_split_inter_diff [symmetric])\n                      (auto simp: q_def l_def n_def)"], ["proof (state)\nthis:\n  pmf_of_set B =\n  bernoulli_pmf q \\<bind>\n  (\\<lambda>b'.\n      if b' then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set B \\<bind>\n                         (\\<lambda>y.\n                             random_bst\n                              {z \\<in> A \\<union> B. z < y} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {z \\<in> A \\<union> B. y < z} \\<bind>\n                                 (\\<lambda>r.\n                                     if y \\<in> A then mrbst_push_down l y r\n                                     else return_pmf\n     \\<langle>l, y, r\\<rangle>))) =\n                         bernoulli_pmf q \\<bind>\n                         (\\<lambda>b'.\n                             if b'\n                             then pmf_of_set (A \\<inter> B) \\<bind>\n                                  (\\<lambda>y. random_bst (A \\<union> B))\n                             else pmf_of_set (B - A) \\<bind>\n                                  (\\<lambda>y.\nrandom_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n(\\<lambda>l.\n    random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n    (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))", "have \"do {y \\<leftarrow> pmf_of_set B;\n                  l \\<leftarrow> random_bst {z\\<in>A \\<union> B. z < y};\n                  r \\<leftarrow> random_bst {z\\<in>A \\<union> B. z > y};\n                  if y \\<in> A then\n                    mrbst_push_down l y r\n                  else\n                    return_pmf \\<langle>l, y, r\\<rangle>\n                 } =\n              do {\n                b' \\<leftarrow> bernoulli_pmf q;\n                y \\<leftarrow> (if b' then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A));\n                l \\<leftarrow> random_bst {z\\<in>A \\<union> B. z < y};\n                r \\<leftarrow> random_bst {z\\<in>A \\<union> B. z > y};\n                if b' then\n                  mrbst_push_down l y r\n                else\n                  return_pmf \\<langle>l, y, r\\<rangle>\n              }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf_of_set B \\<bind>\n    (\\<lambda>y.\n        random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n        (\\<lambda>l.\n            random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n            (\\<lambda>r.\n                if y \\<in> A then mrbst_push_down l y r\n                else return_pmf \\<langle>l, y, r\\<rangle>))) =\n    bernoulli_pmf q \\<bind>\n    (\\<lambda>b'.\n        (if b' then pmf_of_set (A \\<inter> B)\n         else pmf_of_set (B - A)) \\<bind>\n        (\\<lambda>y.\n            random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n            (\\<lambda>l.\n                random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                (\\<lambda>r.\n                    if b' then mrbst_push_down l y r\n                    else return_pmf \\<langle>l, y, r\\<rangle>))))", "unfolding eq bind_assoc_pmf"], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf q \\<bind>\n    (\\<lambda>x.\n        (if x then pmf_of_set (A \\<inter> B)\n         else pmf_of_set (B - A)) \\<bind>\n        (\\<lambda>y.\n            random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n            (\\<lambda>l.\n                random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                (\\<lambda>r.\n                    if y \\<in> A then mrbst_push_down l y r\n                    else return_pmf \\<langle>l, y, r\\<rangle>)))) =\n    bernoulli_pmf q \\<bind>\n    (\\<lambda>b'.\n        (if b' then pmf_of_set (A \\<inter> B)\n         else pmf_of_set (B - A)) \\<bind>\n        (\\<lambda>y.\n            random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n            (\\<lambda>l.\n                random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                (\\<lambda>r.\n                    if b' then mrbst_push_down l y r\n                    else return_pmf \\<langle>l, y, r\\<rangle>))))", "using AB q_pos q_lt1"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n  0 < q \\<Longrightarrow> A \\<inter> B \\<noteq> {}\n  q < 1 \\<Longrightarrow> B - A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. bernoulli_pmf q \\<bind>\n    (\\<lambda>x.\n        (if x then pmf_of_set (A \\<inter> B)\n         else pmf_of_set (B - A)) \\<bind>\n        (\\<lambda>y.\n            random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n            (\\<lambda>l.\n                random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                (\\<lambda>r.\n                    if y \\<in> A then mrbst_push_down l y r\n                    else return_pmf \\<langle>l, y, r\\<rangle>)))) =\n    bernoulli_pmf q \\<bind>\n    (\\<lambda>b'.\n        (if b' then pmf_of_set (A \\<inter> B)\n         else pmf_of_set (B - A)) \\<bind>\n        (\\<lambda>y.\n            random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n            (\\<lambda>l.\n                random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                (\\<lambda>r.\n                    if b' then mrbst_push_down l y r\n                    else return_pmf \\<langle>l, y, r\\<rangle>))))", "by (intro bind_pmf_cong refl if_cong) (auto split: if_splits)"], ["proof (state)\nthis:\n  pmf_of_set B \\<bind>\n  (\\<lambda>y.\n      random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n      (\\<lambda>l.\n          random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n          (\\<lambda>r.\n              if y \\<in> A then mrbst_push_down l y r\n              else return_pmf \\<langle>l, y, r\\<rangle>))) =\n  bernoulli_pmf q \\<bind>\n  (\\<lambda>b'.\n      (if b' then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)) \\<bind>\n      (\\<lambda>y.\n          random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n          (\\<lambda>l.\n              random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n              (\\<lambda>r.\n                  if b' then mrbst_push_down l y r\n                  else return_pmf \\<langle>l, y, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set B \\<bind>\n                         (\\<lambda>y.\n                             random_bst\n                              {z \\<in> A \\<union> B. z < y} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {z \\<in> A \\<union> B. y < z} \\<bind>\n                                 (\\<lambda>r.\n                                     if y \\<in> A then mrbst_push_down l y r\n                                     else return_pmf\n     \\<langle>l, y, r\\<rangle>))) =\n                         bernoulli_pmf q \\<bind>\n                         (\\<lambda>b'.\n                             if b'\n                             then pmf_of_set (A \\<inter> B) \\<bind>\n                                  (\\<lambda>y. random_bst (A \\<union> B))\n                             else pmf_of_set (B - A) \\<bind>\n                                  (\\<lambda>y.\nrandom_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n(\\<lambda>l.\n    random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n    (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))", "also"], ["proof (state)\nthis:\n  pmf_of_set B \\<bind>\n  (\\<lambda>y.\n      random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n      (\\<lambda>l.\n          random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n          (\\<lambda>r.\n              if y \\<in> A then mrbst_push_down l y r\n              else return_pmf \\<langle>l, y, r\\<rangle>))) =\n  bernoulli_pmf q \\<bind>\n  (\\<lambda>b'.\n      (if b' then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)) \\<bind>\n      (\\<lambda>y.\n          random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n          (\\<lambda>l.\n              random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n              (\\<lambda>r.\n                  if b' then mrbst_push_down l y r\n                  else return_pmf \\<langle>l, y, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set B \\<bind>\n                         (\\<lambda>y.\n                             random_bst\n                              {z \\<in> A \\<union> B. z < y} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {z \\<in> A \\<union> B. y < z} \\<bind>\n                                 (\\<lambda>r.\n                                     if y \\<in> A then mrbst_push_down l y r\n                                     else return_pmf\n     \\<langle>l, y, r\\<rangle>))) =\n                         bernoulli_pmf q \\<bind>\n                         (\\<lambda>b'.\n                             if b'\n                             then pmf_of_set (A \\<inter> B) \\<bind>\n                                  (\\<lambda>y. random_bst (A \\<union> B))\n                             else pmf_of_set (B - A) \\<bind>\n                                  (\\<lambda>y.\nrandom_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n(\\<lambda>l.\n    random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n    (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))", "have \"\\<dots> = do {\n                          b' \\<leftarrow> bernoulli_pmf q;\n                          if b' then do {\n                            y \\<leftarrow> pmf_of_set (A \\<inter> B);\n                            do {l \\<leftarrow> random_bst {z\\<in>A \\<union> B. z < y};\n                                r \\<leftarrow> random_bst {z\\<in>A \\<union> B. z > y};\n                                mrbst_push_down l y r}\n                          } else do {\n                            y \\<leftarrow> pmf_of_set (B - A);\n                            l \\<leftarrow> random_bst {z\\<in>A \\<union> B. z < y};\n                            r \\<leftarrow> random_bst {z\\<in>A \\<union> B. z > y};\n                            return_pmf \\<langle>l, y, r\\<rangle>\n                          }\n                        }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf q \\<bind>\n    (\\<lambda>b'.\n        (if b' then pmf_of_set (A \\<inter> B)\n         else pmf_of_set (B - A)) \\<bind>\n        (\\<lambda>y.\n            random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n            (\\<lambda>l.\n                random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                (\\<lambda>r.\n                    if b' then mrbst_push_down l y r\n                    else return_pmf \\<langle>l, y, r\\<rangle>)))) =\n    bernoulli_pmf q \\<bind>\n    (\\<lambda>b'.\n        if b'\n        then pmf_of_set (A \\<inter> B) \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                     mrbst_push_down l y))\n        else pmf_of_set (B - A) \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))", "by (simp cong: if_cong)"], ["proof (state)\nthis:\n  bernoulli_pmf q \\<bind>\n  (\\<lambda>b'.\n      (if b' then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)) \\<bind>\n      (\\<lambda>y.\n          random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n          (\\<lambda>l.\n              random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n              (\\<lambda>r.\n                  if b' then mrbst_push_down l y r\n                  else return_pmf \\<langle>l, y, r\\<rangle>)))) =\n  bernoulli_pmf q \\<bind>\n  (\\<lambda>b'.\n      if b'\n      then pmf_of_set (A \\<inter> B) \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                   mrbst_push_down l y))\n      else pmf_of_set (B - A) \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set B \\<bind>\n                         (\\<lambda>y.\n                             random_bst\n                              {z \\<in> A \\<union> B. z < y} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {z \\<in> A \\<union> B. y < z} \\<bind>\n                                 (\\<lambda>r.\n                                     if y \\<in> A then mrbst_push_down l y r\n                                     else return_pmf\n     \\<langle>l, y, r\\<rangle>))) =\n                         bernoulli_pmf q \\<bind>\n                         (\\<lambda>b'.\n                             if b'\n                             then pmf_of_set (A \\<inter> B) \\<bind>\n                                  (\\<lambda>y. random_bst (A \\<union> B))\n                             else pmf_of_set (B - A) \\<bind>\n                                  (\\<lambda>y.\nrandom_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n(\\<lambda>l.\n    random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n    (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))", "also"], ["proof (state)\nthis:\n  bernoulli_pmf q \\<bind>\n  (\\<lambda>b'.\n      (if b' then pmf_of_set (A \\<inter> B) else pmf_of_set (B - A)) \\<bind>\n      (\\<lambda>y.\n          random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n          (\\<lambda>l.\n              random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n              (\\<lambda>r.\n                  if b' then mrbst_push_down l y r\n                  else return_pmf \\<langle>l, y, r\\<rangle>)))) =\n  bernoulli_pmf q \\<bind>\n  (\\<lambda>b'.\n      if b'\n      then pmf_of_set (A \\<inter> B) \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                   mrbst_push_down l y))\n      else pmf_of_set (B - A) \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set B \\<bind>\n                         (\\<lambda>y.\n                             random_bst\n                              {z \\<in> A \\<union> B. z < y} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {z \\<in> A \\<union> B. y < z} \\<bind>\n                                 (\\<lambda>r.\n                                     if y \\<in> A then mrbst_push_down l y r\n                                     else return_pmf\n     \\<langle>l, y, r\\<rangle>))) =\n                         bernoulli_pmf q \\<bind>\n                         (\\<lambda>b'.\n                             if b'\n                             then pmf_of_set (A \\<inter> B) \\<bind>\n                                  (\\<lambda>y. random_bst (A \\<union> B))\n                             else pmf_of_set (B - A) \\<bind>\n                                  (\\<lambda>y.\nrandom_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n(\\<lambda>l.\n    random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n    (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))", "have \"\\<dots> = do {\n                          b' \\<leftarrow> bernoulli_pmf q;\n                          if b' then do {\n                            y \\<leftarrow> pmf_of_set (A \\<inter> B);\n                            random_bst (A \\<union> B)\n                          } else do {\n                            y \\<leftarrow> pmf_of_set (B - A);\n                            l \\<leftarrow> random_bst {z\\<in>A \\<union> B. z < y};\n                            r \\<leftarrow> random_bst {z\\<in>A \\<union> B. z > y};\n                            return_pmf \\<langle>l, y, r\\<rangle>\n                          }\n                        }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf q \\<bind>\n    (\\<lambda>b'.\n        if b'\n        then pmf_of_set (A \\<inter> B) \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                     mrbst_push_down l y))\n        else pmf_of_set (B - A) \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>)))) =\n    bernoulli_pmf q \\<bind>\n    (\\<lambda>b'.\n        if b'\n        then pmf_of_set (A \\<inter> B) \\<bind>\n             (\\<lambda>y. random_bst (A \\<union> B))\n        else pmf_of_set (B - A) \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))", "using AB q_pos"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n  0 < q \\<Longrightarrow> A \\<inter> B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. bernoulli_pmf q \\<bind>\n    (\\<lambda>b'.\n        if b'\n        then pmf_of_set (A \\<inter> B) \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                     mrbst_push_down l y))\n        else pmf_of_set (B - A) \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>)))) =\n    bernoulli_pmf q \\<bind>\n    (\\<lambda>b'.\n        if b'\n        then pmf_of_set (A \\<inter> B) \\<bind>\n             (\\<lambda>y. random_bst (A \\<union> B))\n        else pmf_of_set (B - A) \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))", "by (intro bind_pmf_cong if_cong refl mrbst_push_down_correct') auto"], ["proof (state)\nthis:\n  bernoulli_pmf q \\<bind>\n  (\\<lambda>b'.\n      if b'\n      then pmf_of_set (A \\<inter> B) \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                   mrbst_push_down l y))\n      else pmf_of_set (B - A) \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>)))) =\n  bernoulli_pmf q \\<bind>\n  (\\<lambda>b'.\n      if b'\n      then pmf_of_set (A \\<inter> B) \\<bind>\n           (\\<lambda>y. random_bst (A \\<union> B))\n      else pmf_of_set (B - A) \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set_pmf (bernoulli_pmf p); \\<not> x\\<rbrakk>\n       \\<Longrightarrow> pmf_of_set B \\<bind>\n                         (\\<lambda>y.\n                             random_bst\n                              {z \\<in> A \\<union> B. z < y} \\<bind>\n                             (\\<lambda>l.\n                                 random_bst\n                                  {z \\<in> A \\<union> B. y < z} \\<bind>\n                                 (\\<lambda>r.\n                                     if y \\<in> A then mrbst_push_down l y r\n                                     else return_pmf\n     \\<langle>l, y, r\\<rangle>))) =\n                         bernoulli_pmf q \\<bind>\n                         (\\<lambda>b'.\n                             if b'\n                             then pmf_of_set (A \\<inter> B) \\<bind>\n                                  (\\<lambda>y. random_bst (A \\<union> B))\n                             else pmf_of_set (B - A) \\<bind>\n                                  (\\<lambda>y.\nrandom_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n(\\<lambda>l.\n    random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n    (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))", "finally"], ["proof (chain)\npicking this:\n  pmf_of_set B \\<bind>\n  (\\<lambda>y.\n      random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n      (\\<lambda>l.\n          random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n          (\\<lambda>r.\n              if y \\<in> A then mrbst_push_down l y r\n              else return_pmf \\<langle>l, y, r\\<rangle>))) =\n  bernoulli_pmf q \\<bind>\n  (\\<lambda>b'.\n      if b'\n      then pmf_of_set (A \\<inter> B) \\<bind>\n           (\\<lambda>y. random_bst (A \\<union> B))\n      else pmf_of_set (B - A) \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))", "show ?case"], ["proof (prove)\nusing this:\n  pmf_of_set B \\<bind>\n  (\\<lambda>y.\n      random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n      (\\<lambda>l.\n          random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n          (\\<lambda>r.\n              if y \\<in> A then mrbst_push_down l y r\n              else return_pmf \\<langle>l, y, r\\<rangle>))) =\n  bernoulli_pmf q \\<bind>\n  (\\<lambda>b'.\n      if b'\n      then pmf_of_set (A \\<inter> B) \\<bind>\n           (\\<lambda>y. random_bst (A \\<union> B))\n      else pmf_of_set (B - A) \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))\n\ngoal (1 subgoal):\n 1. pmf_of_set B \\<bind>\n    (\\<lambda>y.\n        random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n        (\\<lambda>l.\n            random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n            (\\<lambda>r.\n                if y \\<in> A then mrbst_push_down l y r\n                else return_pmf \\<langle>l, y, r\\<rangle>))) =\n    bernoulli_pmf q \\<bind>\n    (\\<lambda>b'.\n        if b'\n        then pmf_of_set (A \\<inter> B) \\<bind>\n             (\\<lambda>y. random_bst (A \\<union> B))\n        else pmf_of_set (B - A) \\<bind>\n             (\\<lambda>y.\n                 random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))", "."], ["proof (state)\nthis:\n  pmf_of_set B \\<bind>\n  (\\<lambda>y.\n      random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n      (\\<lambda>l.\n          random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n          (\\<lambda>r.\n              if y \\<in> A then mrbst_push_down l y r\n              else return_pmf \\<langle>l, y, r\\<rangle>))) =\n  bernoulli_pmf q \\<bind>\n  (\\<lambda>b'.\n      if b'\n      then pmf_of_set (A \\<inter> B) \\<bind>\n           (\\<lambda>y. random_bst (A \\<union> B))\n      else pmf_of_set (B - A) \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, y, r\\<rangle>))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r.\n                       if y \\<in> A then mrbst_push_down l y r\n                       else return_pmf \\<langle>l, y, r\\<rangle>)))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else bernoulli_pmf q \\<bind>\n           (\\<lambda>b'.\n               if b'\n               then pmf_of_set (A \\<inter> B) \\<bind>\n                    (\\<lambda>y. random_bst (A \\<union> B))\n               else pmf_of_set (B - A) \\<bind>\n                    (\\<lambda>y.\n                        random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                        (\\<lambda>l.\n                            random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                            (\\<lambda>r.\n                                return_pmf \\<langle>l, y, r\\<rangle>)))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else pmf_of_set B \\<bind>\n           (\\<lambda>y.\n               random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                   (\\<lambda>r.\n                       if y \\<in> A then mrbst_push_down l y r\n                       else return_pmf \\<langle>l, y, r\\<rangle>)))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else bernoulli_pmf q \\<bind>\n           (\\<lambda>b'.\n               if b'\n               then pmf_of_set (A \\<inter> B) \\<bind>\n                    (\\<lambda>y. random_bst (A \\<union> B))\n               else pmf_of_set (B - A) \\<bind>\n                    (\\<lambda>y.\n                        random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                        (\\<lambda>l.\n                            random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                            (\\<lambda>r.\n                                return_pmf \\<langle>l, y, r\\<rangle>)))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"\\<dots> = do {\n                        b \\<leftarrow> bernoulli_pmf p;\n                        b' \\<leftarrow> bernoulli_pmf q;\n                        if b then do {\n                          x \\<leftarrow> pmf_of_set A;\n                          l \\<leftarrow> random_bst {z\\<in>A \\<union> B. z < x};\n                          r \\<leftarrow> random_bst {z\\<in>A \\<union> B. z > x};\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        } else if b' then do {\n                            random_bst (A \\<union> B)\n                        } else do {\n                          y \\<leftarrow> pmf_of_set (B - A);\n                          l \\<leftarrow> random_bst {z\\<in>A \\<union> B. z < y};\n                          r \\<leftarrow> random_bst {z\\<in>A \\<union> B. z > y};\n                          return_pmf \\<langle>l, y, r\\<rangle>\n                        }\n                      }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set A \\<bind>\n             (\\<lambda>x.\n                 random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else bernoulli_pmf q \\<bind>\n             (\\<lambda>b'.\n                 if b'\n                 then pmf_of_set (A \\<inter> B) \\<bind>\n                      (\\<lambda>y. random_bst (A \\<union> B))\n                 else pmf_of_set (B - A) \\<bind>\n                      (\\<lambda>y.\n                          random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                          (\\<lambda>l.\n                              random_bst\n                               {z \\<in> A \\<union> B. y < z} \\<bind>\n                              (\\<lambda>r.\n                                  return_pmf\n                                   \\<langle>l, y, r\\<rangle>))))) =\n    bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        bernoulli_pmf q \\<bind>\n        (\\<lambda>b'.\n            if b\n            then pmf_of_set A \\<bind>\n                 (\\<lambda>x.\n                     random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                     (\\<lambda>l.\n                         random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                         (\\<lambda>r.\n                             return_pmf \\<langle>l, x, r\\<rangle>)))\n            else if b' then random_bst (A \\<union> B)\n                 else pmf_of_set (B - A) \\<bind>\n                      (\\<lambda>y.\n                          random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                          (\\<lambda>l.\n                              random_bst\n                               {z \\<in> A \\<union> B. y < z} \\<bind>\n                              (\\<lambda>r.\n                                  return_pmf \\<langle>l, y, r\\<rangle>)))))", "by (simp cong: if_cong)"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else bernoulli_pmf q \\<bind>\n           (\\<lambda>b'.\n               if b'\n               then pmf_of_set (A \\<inter> B) \\<bind>\n                    (\\<lambda>y. random_bst (A \\<union> B))\n               else pmf_of_set (B - A) \\<bind>\n                    (\\<lambda>y.\n                        random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                        (\\<lambda>l.\n                            random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                            (\\<lambda>r.\n                                return_pmf \\<langle>l, y, r\\<rangle>))))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      bernoulli_pmf q \\<bind>\n      (\\<lambda>b'.\n          if b\n          then pmf_of_set A \\<bind>\n               (\\<lambda>x.\n                   random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                   (\\<lambda>l.\n                       random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                       (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n          else if b' then random_bst (A \\<union> B)\n               else pmf_of_set (B - A) \\<bind>\n                    (\\<lambda>y.\n                        random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                        (\\<lambda>l.\n                            random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                            (\\<lambda>r.\n                                return_pmf \\<langle>l, y, r\\<rangle>)))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set A \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else bernoulli_pmf q \\<bind>\n           (\\<lambda>b'.\n               if b'\n               then pmf_of_set (A \\<inter> B) \\<bind>\n                    (\\<lambda>y. random_bst (A \\<union> B))\n               else pmf_of_set (B - A) \\<bind>\n                    (\\<lambda>y.\n                        random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                        (\\<lambda>l.\n                            random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                            (\\<lambda>r.\n                                return_pmf \\<langle>l, y, r\\<rangle>))))) =\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      bernoulli_pmf q \\<bind>\n      (\\<lambda>b'.\n          if b\n          then pmf_of_set A \\<bind>\n               (\\<lambda>x.\n                   random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                   (\\<lambda>l.\n                       random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                       (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n          else if b' then random_bst (A \\<union> B)\n               else pmf_of_set (B - A) \\<bind>\n                    (\\<lambda>y.\n                        random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                        (\\<lambda>l.\n                            random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                            (\\<lambda>r.\n                                return_pmf \\<langle>l, y, r\\<rangle>)))))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"\\<dots> = do {\n                        (b, b') \\<leftarrow> pair_pmf (bernoulli_pmf p) (bernoulli_pmf q);\n                        if b \\<or> \\<not>b' then do {\n                          x \\<leftarrow> (if b then pmf_of_set A else pmf_of_set (B - A));\n                          l \\<leftarrow> random_bst {z\\<in>A \\<union> B. z < x};\n                          r \\<leftarrow> random_bst {z\\<in>A \\<union> B. z > x};\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        } else do {\n                            random_bst (A \\<union> B)\n                        }\n                      }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        bernoulli_pmf q \\<bind>\n        (\\<lambda>b'.\n            if b\n            then pmf_of_set A \\<bind>\n                 (\\<lambda>x.\n                     random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                     (\\<lambda>l.\n                         random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                         (\\<lambda>r.\n                             return_pmf \\<langle>l, x, r\\<rangle>)))\n            else if b' then random_bst (A \\<union> B)\n                 else pmf_of_set (B - A) \\<bind>\n                      (\\<lambda>y.\n                          random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                          (\\<lambda>l.\n                              random_bst\n                               {z \\<in> A \\<union> B. y < z} \\<bind>\n                              (\\<lambda>r.\n                                  return_pmf\n                                   \\<langle>l, y, r\\<rangle>))))) =\n    pair_pmf (bernoulli_pmf p) (bernoulli_pmf q) \\<bind>\n    (\\<lambda>(b, b').\n        if b \\<or> \\<not> b'\n        then (if b then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n             (\\<lambda>x.\n                 random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else random_bst (A \\<union> B))", "unfolding pair_pmf_def bind_assoc_pmf"], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf p \\<bind>\n    (\\<lambda>b.\n        bernoulli_pmf q \\<bind>\n        (\\<lambda>b'.\n            if b\n            then pmf_of_set A \\<bind>\n                 (\\<lambda>x.\n                     random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                     (\\<lambda>l.\n                         random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                         (\\<lambda>r.\n                             return_pmf \\<langle>l, x, r\\<rangle>)))\n            else if b' then random_bst (A \\<union> B)\n                 else pmf_of_set (B - A) \\<bind>\n                      (\\<lambda>y.\n                          random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                          (\\<lambda>l.\n                              random_bst\n                               {z \\<in> A \\<union> B. y < z} \\<bind>\n                              (\\<lambda>r.\n                                  return_pmf\n                                   \\<langle>l, y, r\\<rangle>))))) =\n    bernoulli_pmf p \\<bind>\n    (\\<lambda>x.\n        bernoulli_pmf q \\<bind>\n        (\\<lambda>xa.\n            return_pmf (x, xa) \\<bind>\n            (\\<lambda>(b, b').\n                if b \\<or> \\<not> b'\n                then (if b then pmf_of_set A\n                      else pmf_of_set (B - A)) \\<bind>\n                     (\\<lambda>x.\n                         random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                         (\\<lambda>l.\n                             random_bst\n                              {z \\<in> A \\<union> B. x < z} \\<bind>\n                             (\\<lambda>r.\n                                 return_pmf \\<langle>l, x, r\\<rangle>)))\n                else random_bst (A \\<union> B))))", "by (intro bind_pmf_cong) auto"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      bernoulli_pmf q \\<bind>\n      (\\<lambda>b'.\n          if b\n          then pmf_of_set A \\<bind>\n               (\\<lambda>x.\n                   random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                   (\\<lambda>l.\n                       random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                       (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n          else if b' then random_bst (A \\<union> B)\n               else pmf_of_set (B - A) \\<bind>\n                    (\\<lambda>y.\n                        random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                        (\\<lambda>l.\n                            random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                            (\\<lambda>r.\n                                return_pmf \\<langle>l, y, r\\<rangle>))))) =\n  pair_pmf (bernoulli_pmf p) (bernoulli_pmf q) \\<bind>\n  (\\<lambda>(b, b').\n      if b \\<or> \\<not> b'\n      then (if b then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<union> B))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  bernoulli_pmf p \\<bind>\n  (\\<lambda>b.\n      bernoulli_pmf q \\<bind>\n      (\\<lambda>b'.\n          if b\n          then pmf_of_set A \\<bind>\n               (\\<lambda>x.\n                   random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                   (\\<lambda>l.\n                       random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                       (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n          else if b' then random_bst (A \\<union> B)\n               else pmf_of_set (B - A) \\<bind>\n                    (\\<lambda>y.\n                        random_bst {z \\<in> A \\<union> B. z < y} \\<bind>\n                        (\\<lambda>l.\n                            random_bst {z \\<in> A \\<union> B. y < z} \\<bind>\n                            (\\<lambda>r.\n                                return_pmf \\<langle>l, y, r\\<rangle>))))) =\n  pair_pmf (bernoulli_pmf p) (bernoulli_pmf q) \\<bind>\n  (\\<lambda>(b, b').\n      if b \\<or> \\<not> b'\n      then (if b then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<union> B))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"\\<dots> = do {\n                        (b, b') \\<leftarrow> map_pmf (\\<lambda>(b, b'). (b \\<or> \\<not>b', b))\n                                    (pair_pmf (bernoulli_pmf p) (bernoulli_pmf q));\n                        if b then do {\n                          x \\<leftarrow> (if b' then pmf_of_set A else pmf_of_set (B - A));\n                          l \\<leftarrow> random_bst {z\\<in>A \\<union> B. z < x};\n                          r \\<leftarrow> random_bst {z\\<in>A \\<union> B. z > x};\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        } else do {\n                            random_bst (A \\<union> B)\n                        }\n                      }\" (is \"_ = bind_pmf _ ?f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. pair_pmf (bernoulli_pmf p) (bernoulli_pmf q) \\<bind>\n    (\\<lambda>(b, b').\n        if b \\<or> \\<not> b'\n        then (if b then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n             (\\<lambda>x.\n                 random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else random_bst (A \\<union> B)) =\n    map_pmf (\\<lambda>(b, b'). (b \\<or> \\<not> b', b))\n     (pair_pmf (bernoulli_pmf p) (bernoulli_pmf q)) \\<bind>\n    (\\<lambda>(b, b').\n        if b\n        then (if b' then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n             (\\<lambda>x.\n                 random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else random_bst (A \\<union> B))", "by (simp add: bind_map_pmf case_prod_unfold cong: if_cong)"], ["proof (state)\nthis:\n  pair_pmf (bernoulli_pmf p) (bernoulli_pmf q) \\<bind>\n  (\\<lambda>(b, b').\n      if b \\<or> \\<not> b'\n      then (if b then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<union> B)) =\n  map_pmf (\\<lambda>(b, b'). (b \\<or> \\<not> b', b))\n   (pair_pmf (bernoulli_pmf p) (bernoulli_pmf q)) \\<bind>\n  (\\<lambda>(b, b').\n      if b\n      then (if b' then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<union> B))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  pair_pmf (bernoulli_pmf p) (bernoulli_pmf q) \\<bind>\n  (\\<lambda>(b, b').\n      if b \\<or> \\<not> b'\n      then (if b then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<union> B)) =\n  map_pmf (\\<lambda>(b, b'). (b \\<or> \\<not> b', b))\n   (pair_pmf (bernoulli_pmf p) (bernoulli_pmf q)) \\<bind>\n  (\\<lambda>(b, b').\n      if b\n      then (if b' then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<union> B))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"map_pmf (\\<lambda>(b, b'). (b \\<or> \\<not>b', b))\n                   (pair_pmf (bernoulli_pmf p) (bernoulli_pmf q)) =\n                 do {\n                   b \\<leftarrow> bernoulli_pmf (1 - (1 - p) * q);\n                   b' \\<leftarrow> (if b then bernoulli_pmf r else return_pmf False);\n                   return_pmf (b, b')\n                 }\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. map_pmf (\\<lambda>(b, b'). (b \\<or> \\<not> b', b))\n     (pair_pmf (bernoulli_pmf p) (bernoulli_pmf q)) =\n    bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n    (\\<lambda>b.\n        (if b then bernoulli_pmf r else return_pmf False) \\<bind>\n        (\\<lambda>b'. return_pmf (b, b')))", "proof (intro pmf_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (map_pmf (\\<lambda>(b, b'). (b \\<or> \\<not> b', b))\n             (pair_pmf (bernoulli_pmf p) (bernoulli_pmf q)))\n        i =\n       pmf (bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n            (\\<lambda>b.\n                (if b then bernoulli_pmf r else return_pmf False) \\<bind>\n                (\\<lambda>b'. return_pmf (b, b'))))\n        i", "fix bb' :: \"bool \\<times> bool\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (map_pmf (\\<lambda>(b, b'). (b \\<or> \\<not> b', b))\n             (pair_pmf (bernoulli_pmf p) (bernoulli_pmf q)))\n        i =\n       pmf (bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n            (\\<lambda>b.\n                (if b then bernoulli_pmf r else return_pmf False) \\<bind>\n                (\\<lambda>b'. return_pmf (b, b'))))\n        i", "obtain b b' where [simp]: \"bb' = (b, b')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b b'. bb' = (b, b') \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases bb')"], ["proof (state)\nthis:\n  bb' = (b, b')\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       pmf (map_pmf (\\<lambda>(b, b'). (b \\<or> \\<not> b', b))\n             (pair_pmf (bernoulli_pmf p) (bernoulli_pmf q)))\n        i =\n       pmf (bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n            (\\<lambda>b.\n                (if b then bernoulli_pmf r else return_pmf False) \\<bind>\n                (\\<lambda>b'. return_pmf (b, b'))))\n        i", "thus \"pmf ?lhs bb' = pmf ?rhs bb'\""], ["proof (prove)\nusing this:\n  bb' = (b, b')\n\ngoal (1 subgoal):\n 1. pmf (map_pmf (\\<lambda>(b, b'). (b \\<or> \\<not> b', b))\n          (pair_pmf (bernoulli_pmf p) (bernoulli_pmf q)))\n     bb' =\n    pmf (bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n         (\\<lambda>b.\n             (if b then bernoulli_pmf r else return_pmf False) \\<bind>\n             (\\<lambda>b'. return_pmf (b, b'))))\n     bb'", "using pq r_aux \\<open>p > 0\\<close>"], ["proof (prove)\nusing this:\n  bb' = (b, b')\n  p \\<in> {0..1}\n  q \\<in> {0..1}\n  (1 - p) * q \\<in> {0..1 - p}\n  0 < p\n\ngoal (1 subgoal):\n 1. pmf (map_pmf (\\<lambda>(b, b'). (b \\<or> \\<not> b', b))\n          (pair_pmf (bernoulli_pmf p) (bernoulli_pmf q)))\n     bb' =\n    pmf (bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n         (\\<lambda>b.\n             (if b then bernoulli_pmf r else return_pmf False) \\<bind>\n             (\\<lambda>b'. return_pmf (b, b'))))\n     bb'", "by (cases b; cases b')\n             (auto simp: pmf_map pmf_bind_bernoulli measure_measure_pmf_finite \n                         vimage_bool_pair pmf_pair r_def field_simps)"], ["proof (state)\nthis:\n  pmf (map_pmf (\\<lambda>(b, b'). (b \\<or> \\<not> b', b))\n        (pair_pmf (bernoulli_pmf p) (bernoulli_pmf q)))\n   bb' =\n  pmf (bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n       (\\<lambda>b.\n           (if b then bernoulli_pmf r else return_pmf False) \\<bind>\n           (\\<lambda>b'. return_pmf (b, b'))))\n   bb'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  map_pmf (\\<lambda>(b, b'). (b \\<or> \\<not> b', b))\n   (pair_pmf (bernoulli_pmf p) (bernoulli_pmf q)) =\n  bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n  (\\<lambda>b.\n      (if b then bernoulli_pmf r else return_pmf False) \\<bind>\n      (\\<lambda>b'. return_pmf (b, b')))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  map_pmf (\\<lambda>(b, b'). (b \\<or> \\<not> b', b))\n   (pair_pmf (bernoulli_pmf p) (bernoulli_pmf q)) =\n  bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n  (\\<lambda>b.\n      (if b then bernoulli_pmf r else return_pmf False) \\<bind>\n      (\\<lambda>b'. return_pmf (b, b')))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"\\<dots> \\<bind> ?f = do {\n                              b \\<leftarrow> bernoulli_pmf (1 - (1 - p) * q);\n                              if b then do {\n                                x \\<leftarrow> do {b' \\<leftarrow> bernoulli_pmf r;\n                                         if b' then pmf_of_set A else pmf_of_set (B - A)};\n                                l \\<leftarrow> random_bst {z\\<in>A \\<union> B. z < x};\n                                r \\<leftarrow> random_bst {z\\<in>A \\<union> B. z > x};\n                                return_pmf \\<langle>l, x, r\\<rangle>\n                              } else do {\n                                random_bst (A \\<union> B)\n                              }\n                            }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n    (\\<lambda>b.\n        (if b then bernoulli_pmf r else return_pmf False) \\<bind>\n        (\\<lambda>b'. return_pmf (b, b'))) \\<bind>\n    (\\<lambda>(b, b').\n        if b\n        then (if b' then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n             (\\<lambda>x.\n                 random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else random_bst (A \\<union> B)) =\n    bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n    (\\<lambda>b.\n        if b\n        then bernoulli_pmf r \\<bind>\n             (\\<lambda>b'.\n                 if b' then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n             (\\<lambda>x.\n                 random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else random_bst (A \\<union> B))", "by (simp cong: if_cong)"], ["proof (state)\nthis:\n  bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n  (\\<lambda>b.\n      (if b then bernoulli_pmf r else return_pmf False) \\<bind>\n      (\\<lambda>b'. return_pmf (b, b'))) \\<bind>\n  (\\<lambda>(b, b').\n      if b\n      then (if b' then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<union> B)) =\n  bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n  (\\<lambda>b.\n      if b\n      then bernoulli_pmf r \\<bind>\n           (\\<lambda>b'.\n               if b' then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<union> B))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n  (\\<lambda>b.\n      (if b then bernoulli_pmf r else return_pmf False) \\<bind>\n      (\\<lambda>b'. return_pmf (b, b'))) \\<bind>\n  (\\<lambda>(b, b').\n      if b\n      then (if b' then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<union> B)) =\n  bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n  (\\<lambda>b.\n      if b\n      then bernoulli_pmf r \\<bind>\n           (\\<lambda>b'.\n               if b' then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<union> B))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"\\<dots> = do {\n                        b \\<leftarrow> bernoulli_pmf (1 - (1 - p) * q);\n                        if b then do {\n                          x \\<leftarrow> pmf_of_set (A \\<union> (B - A));\n                          l \\<leftarrow> random_bst {z\\<in>A \\<union> B. z < x};\n                          r \\<leftarrow> random_bst {z\\<in>A \\<union> B. z > x};\n                          return_pmf \\<langle>l, x, r\\<rangle>\n                        } else do {\n                          random_bst (A \\<union> B)\n                        }\n                      }\" (is \"_ = ?f (A \\<union> (B - A))\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n    (\\<lambda>b.\n        if b\n        then bernoulli_pmf r \\<bind>\n             (\\<lambda>b'.\n                 if b' then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n             (\\<lambda>x.\n                 random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else random_bst (A \\<union> B)) =\n    bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set (A \\<union> (B - A)) \\<bind>\n             (\\<lambda>x.\n                 random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else random_bst (A \\<union> B))", "using AB pq \\<open>l \\<le> n\\<close> mn"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n  p \\<in> {0..1}\n  q \\<in> {0..1}\n  l \\<le> n\n  0 < m\n  0 < n\n\ngoal (1 subgoal):\n 1. bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n    (\\<lambda>b.\n        if b\n        then bernoulli_pmf r \\<bind>\n             (\\<lambda>b'.\n                 if b' then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n             (\\<lambda>x.\n                 random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else random_bst (A \\<union> B)) =\n    bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set (A \\<union> (B - A)) \\<bind>\n             (\\<lambda>x.\n                 random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else random_bst (A \\<union> B))", "by (intro bind_pmf_cong if_cong refl pmf_of_set_union_split)\n           (auto simp: m_def [symmetric] n_def [symmetric] r_def p_def q_def divide_simps)"], ["proof (state)\nthis:\n  bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n  (\\<lambda>b.\n      if b\n      then bernoulli_pmf r \\<bind>\n           (\\<lambda>b'.\n               if b' then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<union> B)) =\n  bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set (A \\<union> (B - A)) \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<union> B))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n  (\\<lambda>b.\n      if b\n      then bernoulli_pmf r \\<bind>\n           (\\<lambda>b'.\n               if b' then pmf_of_set A else pmf_of_set (B - A)) \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<union> B)) =\n  bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set (A \\<union> (B - A)) \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<union> B))\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"A \\<union> (B - A) = A \\<union> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<union> (B - A) = A \\<union> B", "by auto"], ["proof (state)\nthis:\n  A \\<union> (B - A) = A \\<union> B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "also"], ["proof (state)\nthis:\n  A \\<union> (B - A) = A \\<union> B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "have \"?f \\<dots> = random_bst (A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set (A \\<union> B) \\<bind>\n             (\\<lambda>x.\n                 random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else random_bst (A \\<union> B)) =\n    random_bst (A \\<union> B)", "using AB"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n    (\\<lambda>b.\n        if b\n        then pmf_of_set (A \\<union> B) \\<bind>\n             (\\<lambda>x.\n                 random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n                 (\\<lambda>l.\n                     random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                     (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n        else random_bst (A \\<union> B)) =\n    random_bst (A \\<union> B)", "by (simp add: random_bst_reduce cong: if_cong)"], ["proof (state)\nthis:\n  bernoulli_pmf (1 - (1 - p) * q) \\<bind>\n  (\\<lambda>b.\n      if b\n      then pmf_of_set (A \\<union> B) \\<bind>\n           (\\<lambda>x.\n               random_bst {z \\<in> A \\<union> B. z < x} \\<bind>\n               (\\<lambda>l.\n                   random_bst {z \\<in> A \\<union> B. x < z} \\<bind>\n                   (\\<lambda>r. return_pmf \\<langle>l, x, r\\<rangle>)))\n      else random_bst (A \\<union> B)) =\n  random_bst (A \\<union> B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> B = {}) \\<Longrightarrow>\n    random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "finally"], ["proof (chain)\npicking this:\n  random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n  random_bst (A \\<union> B)", "show ?thesis"], ["proof (prove)\nusing this:\n  random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n  random_bst (A \\<union> B)\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind>\n    (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n    random_bst (A \\<union> B)", "."], ["proof (state)\nthis:\n  random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n  random_bst (A \\<union> B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n  random_bst (A \\<union> B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  random_bst A \\<bind> (\\<lambda>t1. random_bst B \\<bind> mrbst_union t1) =\n  random_bst (A \\<union> B)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Insertion and Deletion\\<close>"], ["", "text \\<open>\n  The insertion and deletion operations are simple special cases of the union\n  and difference operations where one of the trees is a singleton tree.\n\\<close>"], ["", "fun mrbst_insert where\n  \"mrbst_insert x \\<langle>\\<rangle> = return_pmf \\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle>\"\n| \"mrbst_insert x \\<langle>l, y, r\\<rangle> =\n     do {\n       b \\<leftarrow> bernoulli_pmf (1 / real (size l + size r + 2));\n       if b then do {\n         let (l', r') = split_bst x \\<langle>l, y, r\\<rangle>;\n         return_pmf \\<langle>l', x, r'\\<rangle>\n       } else if x < y then do {\n         map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>) (mrbst_insert x l)\n       } else if x > y then do {\n         map_pmf (\\<lambda>r'. \\<langle>l, y, r'\\<rangle>) (mrbst_insert x r)\n       } else do {\n         mrbst_push_down l y r\n       }\n     }\""], ["", "lemma mrbst_insert_altdef: \"mrbst_insert x t = mrbst_union \\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_insert x t =\n    mrbst_union \\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle>\n     t", "by (induction x t rule: mrbst_insert.induct)\n     (simp_all add: Let_def map_pmf_def bind_return_pmf case_prod_unfold cong: if_cong)"], ["", "corollary\n  fixes t :: \"'a :: linorder tree\"\n  assumes \"t' \\<in> set_pmf (mrbst_insert x t)\" \"bst t\"\n  shows   bst_mrbst_insert: \"bst t'\"\n    and   set_mrbst_insert: \"set_tree t' = insert x (set_tree t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t' &&& set_tree t' = insert x (set_tree t)", "using bst_mrbst_union[of t' \"\\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle>\" t] set_mrbst_union[of t' \"\\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle>\" t] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>t' \\<in> set_pmf\n                     (mrbst_union\n                       \\<langle>\\<langle>\\<rangle>, x,\n                        \\<langle>\\<rangle>\\<rangle>\n                       t);\n   bst \\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle>;\n   bst t\\<rbrakk>\n  \\<Longrightarrow> bst t'\n  \\<lbrakk>t' \\<in> set_pmf\n                     (mrbst_union\n                       \\<langle>\\<langle>\\<rangle>, x,\n                        \\<langle>\\<rangle>\\<rangle>\n                       t);\n   bst \\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle>;\n   bst t\\<rbrakk>\n  \\<Longrightarrow> set_tree t' =\n                    set_tree\n                     \\<langle>\\<langle>\\<rangle>, x,\n                      \\<langle>\\<rangle>\\<rangle> \\<union>\n                    set_tree t\n  t' \\<in> set_pmf (mrbst_insert x t)\n  bst t\n\ngoal (1 subgoal):\n 1. bst t' &&& set_tree t' = insert x (set_tree t)", "by (simp_all add: mrbst_insert_altdef)"], ["", "corollary mrbst_insert_correct:\n  assumes \"finite A\"\n  shows   \"random_bst A \\<bind> mrbst_insert x = random_bst (insert x A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_bst A \\<bind> mrbst_insert x = random_bst (insert x A)", "using mrbst_union_correct[of \"{x}\" A] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite {x}; finite A\\<rbrakk>\n  \\<Longrightarrow> random_bst {x} \\<bind>\n                    (\\<lambda>t1. random_bst A \\<bind> mrbst_union t1) =\n                    random_bst ({x} \\<union> A)\n  finite A\n\ngoal (1 subgoal):\n 1. random_bst A \\<bind> mrbst_insert x = random_bst (insert x A)", "by (simp add: mrbst_insert_altdef[abs_def] bind_return_pmf)"], ["", "fun mrbst_delete :: \"'a :: ord \\<Rightarrow> 'a tree \\<Rightarrow> 'a tree pmf\" where\n  \"mrbst_delete x \\<langle>\\<rangle> = return_pmf \\<langle>\\<rangle>\"\n| \"mrbst_delete x \\<langle>l, y, r\\<rangle> = (\n     if x < y then\n       map_pmf (\\<lambda>l'. \\<langle>l', y, r\\<rangle>) (mrbst_delete x l)\n     else if x > y then\n       map_pmf (\\<lambda>r'. \\<langle>l, y, r'\\<rangle>) (mrbst_delete x r)\n     else \n       mrbst_join l r)\""], ["", "lemma mrbst_delete_altdef: \"mrbst_delete x t = mrbst_diff t \\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mrbst_delete x t =\n    mrbst_diff t \\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle>", "by (induction t) (auto simp: bind_return_pmf map_pmf_def)"], ["", "corollary\n  fixes t :: \"'a :: linorder tree\"\n  assumes \"t' \\<in> set_pmf (mrbst_delete x t)\" \"bst t\"\n  shows   bst_mrbst_delete: \"bst t'\"\n    and   set_mrbst_delete: \"set_tree t' = set_tree t - {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bst t' &&& set_tree t' = set_tree t - {x}", "using bst_mrbst_diff[of t' t \"\\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle>\"] set_mrbst_diff[of t' t \"\\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle>\"] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>t' \\<in> set_pmf\n                     (mrbst_diff t\n                       \\<langle>\\<langle>\\<rangle>, x,\n                        \\<langle>\\<rangle>\\<rangle>);\n   bst t;\n   bst \\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> bst t'\n  \\<lbrakk>t' \\<in> set_pmf\n                     (mrbst_diff t\n                       \\<langle>\\<langle>\\<rangle>, x,\n                        \\<langle>\\<rangle>\\<rangle>);\n   bst t;\n   bst \\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> set_tree t' =\n                    set_tree t -\n                    set_tree\n                     \\<langle>\\<langle>\\<rangle>, x,\n                      \\<langle>\\<rangle>\\<rangle>\n  t' \\<in> set_pmf (mrbst_delete x t)\n  bst t\n\ngoal (1 subgoal):\n 1. bst t' &&& set_tree t' = set_tree t - {x}", "by (simp_all add: mrbst_delete_altdef)"], ["", "corollary mrbst_delete_correct:\n  \"finite A \\<Longrightarrow> do {t \\<leftarrow> random_bst A; mrbst_delete x t} = random_bst (A - {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow>\n    random_bst A \\<bind> mrbst_delete x = random_bst (A - {x})", "using mrbst_diff_correct[of A \"{x}\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite A; finite {x}\\<rbrakk>\n  \\<Longrightarrow> random_bst A \\<bind>\n                    (\\<lambda>t1. random_bst {x} \\<bind> mrbst_diff t1) =\n                    random_bst (A - {x})\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow>\n    random_bst A \\<bind> mrbst_delete x = random_bst (A - {x})", "by (simp add: mrbst_delete_altdef bind_return_pmf)"], ["", "end"]]}