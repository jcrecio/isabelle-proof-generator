{"file_name": "/home/qj213/afp-2021-10-22/thys/Hoare_Time/Discussion.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Hoare_Time", "problem_names": ["lemma assumes s: \"\\<Turnstile>\\<^sub>3 { em P'} c { em Q' }\"\nshows  \"\\<Turnstile>\\<^sub>2 { P' } c { Q' }\""], "translations": [["", "lemma assumes s: \"\\<Turnstile>\\<^sub>3 { em P'} c { em Q' }\"\nshows  \"\\<Turnstile>\\<^sub>2 { P' } c { Q' }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>2 {P'} c {Q'}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>2 {P'} c {Q'}", "from s"], ["proof (chain)\npicking this:\n  \\<Turnstile>\\<^sub>3 {em P'} c { em Q'}", "have s': \"\\<And>ps n. em P' (ps, n) \\<Longrightarrow> (\\<exists>ps' m. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and> m \\<le> n \\<and> em Q' (ps', n - m))\""], ["proof (prove)\nusing this:\n  \\<Turnstile>\\<^sub>3 {em P'} c { em Q'}\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       em P' (ps, n) \\<Longrightarrow>\n       \\<exists>ps' m.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n          m \\<le> n \\<and> em Q' (ps', n - m)", "unfolding hoare3_valid_def"], ["proof (prove)\nusing this:\n  \\<forall>ps n.\n     em P' (ps, n) \\<longrightarrow>\n     (\\<exists>ps' m.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n         m \\<le> n \\<and> em Q' (ps', n - m))\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       em P' (ps, n) \\<Longrightarrow>\n       \\<exists>ps' m.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n          m \\<le> n \\<and> em Q' (ps', n - m)", "by auto"], ["proof (state)\nthis:\n  em P' (?ps, ?n) \\<Longrightarrow>\n  \\<exists>ps' m.\n     (c, ?ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n     m \\<le> ?n \\<and> em Q' (ps', ?n - m)\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>2 {P'} c {Q'}", "{"], ["proof (state)\nthis:\n  em P' (?ps, ?n) \\<Longrightarrow>\n  \\<exists>ps' m.\n     (c, ?ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n     m \\<le> ?n \\<and> em Q' (ps', ?n - m)\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>2 {P'} c {Q'}", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>2 {P'} c {Q'}", "assume P': \"P' s < \\<infinity>\""], ["proof (state)\nthis:\n  P' s < \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>2 {P'} c {Q'}", "then"], ["proof (chain)\npicking this:\n  P' s < \\<infinity>", "obtain n where n: \"P' s = enat n\""], ["proof (prove)\nusing this:\n  P' s < \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<And>n. P' s = enat n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  P' s = enat n\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>2 {P'} c {Q'}", "with P'"], ["proof (chain)\npicking this:\n  P' s < \\<infinity>\n  P' s = enat n", "have \"em P' (part s, n)\""], ["proof (prove)\nusing this:\n  P' s < \\<infinity>\n  P' s = enat n\n\ngoal (1 subgoal):\n 1. em P' (part s, n)", "unfolding em_def"], ["proof (prove)\nusing this:\n  P' s < \\<infinity>\n  P' s = enat n\n\ngoal (1 subgoal):\n 1. case (part s, n) of\n    (ps, n) \\<Rightarrow>\n      P' (Partial_Evaluation.emb ps (\\<lambda>_. 0)) \\<le> enat n", "by auto"], ["proof (state)\nthis:\n  em P' (part s, n)\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>2 {P'} c {Q'}", "with s'"], ["proof (chain)\npicking this:\n  em P' (?ps, ?n) \\<Longrightarrow>\n  \\<exists>ps' m.\n     (c, ?ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n     m \\<le> ?n \\<and> em Q' (ps', ?n - m)\n  em P' (part s, n)", "obtain ps' m where c: \"(c, part s) \\<Rightarrow>\\<^sub>A m \\<Down> ps'\" and m: \"m \\<le> n\" and Q': \"em Q' (ps', n - m)\""], ["proof (prove)\nusing this:\n  em P' (?ps, ?n) \\<Longrightarrow>\n  \\<exists>ps' m.\n     (c, ?ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n     m \\<le> ?n \\<and> em Q' (ps', ?n - m)\n  em P' (part s, n)\n\ngoal (1 subgoal):\n 1. (\\<And>m ps'.\n        \\<lbrakk>(c, part s) \\<Rightarrow>\\<^sub>A m \\<Down> ps'; m \\<le> n;\n         em Q' (ps', n - m)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (c, part s) \\<Rightarrow>\\<^sub>A m \\<Down> ps'\n  m \\<le> n\n  em Q' (ps', n - m)\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>2 {P'} c {Q'}", "from Q'"], ["proof (chain)\npicking this:\n  em Q' (ps', n - m)", "have q: \"Q' (emb ps' (\\<lambda>_. 0)) \\<le> enat ( n - m)\""], ["proof (prove)\nusing this:\n  em Q' (ps', n - m)\n\ngoal (1 subgoal):\n 1. Q' (Partial_Evaluation.emb ps' (\\<lambda>_. 0)) \\<le> enat (n - m)", "unfolding em_def"], ["proof (prove)\nusing this:\n  case (ps', n - m) of\n  (ps, n) \\<Rightarrow>\n    Q' (Partial_Evaluation.emb ps (\\<lambda>_. 0)) \\<le> enat n\n\ngoal (1 subgoal):\n 1. Q' (Partial_Evaluation.emb ps' (\\<lambda>_. 0)) \\<le> enat (n - m)", "by auto"], ["proof (state)\nthis:\n  Q' (Partial_Evaluation.emb ps' (\\<lambda>_. 0)) \\<le> enat (n - m)\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>2 {P'} c {Q'}", "thm full_to_part  part_to_full"], ["proof (state)\nthis:\n  Q' (Partial_Evaluation.emb ps' (\\<lambda>_. 0)) \\<le> enat (n - m)\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>2 {P'} c {Q'}", "have i: \"(c, s) \\<Rightarrow> m \\<Down> emb ps' (\\<lambda>_. 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, s) \\<Rightarrow> m \\<Down> Partial_Evaluation.emb ps'\n                                    (\\<lambda>_. 0)", "using  part_to_full'[OF c]"], ["proof (prove)\nusing this:\n  (c, Partial_Evaluation.emb (part s)\n       ?s) \\<Rightarrow> m \\<Down> Partial_Evaluation.emb ps' ?s\n\ngoal (1 subgoal):\n 1. (c, s) \\<Rightarrow> m \\<Down> Partial_Evaluation.emb ps'\n                                    (\\<lambda>_. 0)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (c, s) \\<Rightarrow> m \\<Down> Partial_Evaluation.emb ps' (\\<lambda>_. 0)\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>2 {P'} c {Q'}", "have ii: \"enat m + Q' (emb ps' (\\<lambda>_. 0)) \\<le> P' s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat m + Q' (Partial_Evaluation.emb ps' (\\<lambda>_. 0)) \\<le> P' s", "unfolding  n"], ["proof (prove)\ngoal (1 subgoal):\n 1. enat m + Q' (Partial_Evaluation.emb ps' (\\<lambda>_. 0)) \\<le> enat n", "using q m"], ["proof (prove)\nusing this:\n  Q' (Partial_Evaluation.emb ps' (\\<lambda>_. 0)) \\<le> enat (n - m)\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. enat m + Q' (Partial_Evaluation.emb ps' (\\<lambda>_. 0)) \\<le> enat n", "using enat_ile"], ["proof (prove)\nusing this:\n  Q' (Partial_Evaluation.emb ps' (\\<lambda>_. 0)) \\<le> enat (n - m)\n  m \\<le> n\n  ?n \\<le> enat ?m \\<Longrightarrow> \\<exists>k. ?n = enat k\n\ngoal (1 subgoal):\n 1. enat m + Q' (Partial_Evaluation.emb ps' (\\<lambda>_. 0)) \\<le> enat n", "by fastforce"], ["proof (state)\nthis:\n  enat m + Q' (Partial_Evaluation.emb ps' (\\<lambda>_. 0)) \\<le> P' s\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>2 {P'} c {Q'}", "from i ii"], ["proof (chain)\npicking this:\n  (c, s) \\<Rightarrow> m \\<Down> Partial_Evaluation.emb ps' (\\<lambda>_. 0)\n  enat m + Q' (Partial_Evaluation.emb ps' (\\<lambda>_. 0)) \\<le> P' s", "have \"(\\<exists>t p. (c, s) \\<Rightarrow> p \\<Down> t \\<and> enat p + Q' t \\<le> P' s)\""], ["proof (prove)\nusing this:\n  (c, s) \\<Rightarrow> m \\<Down> Partial_Evaluation.emb ps' (\\<lambda>_. 0)\n  enat m + Q' (Partial_Evaluation.emb ps' (\\<lambda>_. 0)) \\<le> P' s\n\ngoal (1 subgoal):\n 1. \\<exists>t p.\n       (c, s) \\<Rightarrow> p \\<Down> t \\<and> enat p + Q' t \\<le> P' s", "by auto"], ["proof (state)\nthis:\n  \\<exists>t p.\n     (c, s) \\<Rightarrow> p \\<Down> t \\<and> enat p + Q' t \\<le> P' s\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>2 {P'} c {Q'}", "}"], ["proof (state)\nthis:\n  P' ?s2 < \\<infinity> \\<Longrightarrow>\n  \\<exists>t p.\n     (c, ?s2) \\<Rightarrow> p \\<Down> t \\<and> enat p + Q' t \\<le> P' ?s2\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>2 {P'} c {Q'}", "then"], ["proof (chain)\npicking this:\n  P' ?s2 < \\<infinity> \\<Longrightarrow>\n  \\<exists>t p.\n     (c, ?s2) \\<Rightarrow> p \\<Down> t \\<and> enat p + Q' t \\<le> P' ?s2", "show ?thesis"], ["proof (prove)\nusing this:\n  P' ?s2 < \\<infinity> \\<Longrightarrow>\n  \\<exists>t p.\n     (c, ?s2) \\<Rightarrow> p \\<Down> t \\<and> enat p + Q' t \\<le> P' ?s2\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>2 {P'} c {Q'}", "unfolding hoare2_valid_def"], ["proof (prove)\nusing this:\n  P' ?s2 < \\<infinity> \\<Longrightarrow>\n  \\<exists>t p.\n     (c, ?s2) \\<Rightarrow> p \\<Down> t \\<and> enat p + Q' t \\<le> P' ?s2\n\ngoal (1 subgoal):\n 1. \\<forall>s.\n       P' s < \\<infinity> \\<longrightarrow>\n       (\\<exists>t p.\n           (c, s) \\<Rightarrow> p \\<Down> t \\<and> enat p + Q' t \\<le> P' s)", "by blast"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>2 {P'} c {Q'}\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}