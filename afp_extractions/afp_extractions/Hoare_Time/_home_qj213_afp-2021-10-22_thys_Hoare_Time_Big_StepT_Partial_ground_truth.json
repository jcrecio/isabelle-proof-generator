{"file_name": "/home/qj213/afp-2021-10-22/thys/Hoare_Time/Big_StepT_Partial.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Hoare_Time", "problem_names": ["lemma restrictI: \"\\<forall>x\\<in>S. s1 x = s2 x \\<Longrightarrow> restrict S s1 = restrict S s2\"", "lemma restrictE: \"restrict S s1 = restrict S s2 \\<Longrightarrow> s1 = s2 on S\"", "lemma dom_restrict[simp]: \"dom (restrict S s) = S\"", "lemma restrict_less_part: \"restrict S t \\<preceq> part t\"", "lemma subState: \"x \\<preceq> y \\<Longrightarrow> v \\<in> dom x \\<Longrightarrow> x v = y v\"", "lemma  fixes ps:: partstate\n    and s::state\n  assumes \"vars a \\<subseteq> dom ps\" \"ps \\<preceq> part s\"\n  shows emb_update: \"emb [x \\<mapsto> paval a ps] s = (emb ps s) (x := aval a (emb ps s))\"", "lemma paval_aval2: \"vars a \\<subseteq> dom ps \\<Longrightarrow> ps \\<preceq> part s \\<Longrightarrow> paval a ps = aval a s\"", "lemma  fixes ps:: partstate\n    and s::state\n  assumes \"vars a \\<subseteq> dom ps\" \"ps \\<preceq> part s\"\n  shows emb_update2: \"emb (ps(x \\<mapsto> paval a ps)) s = (emb ps s)(x := aval a (emb ps s))\"", "lemmas big_step_t_part_induct = big_step_t_part.induct[split_format(complete)]", "lemma big_step_t3_post_dom_conv: \"(c,ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps' \\<Longrightarrow> dom ps' = dom ps\"", "lemma add_update_distrib: \"ps1 x1 = Some y \\<Longrightarrow> ps1 ## ps2 \\<Longrightarrow> vars x2 \\<subseteq> dom ps1 \\<Longrightarrow> ps1(x1 \\<mapsto> paval x2 ps1) + ps2  = (ps1 + ps2)(x1 \\<mapsto> paval x2 ps1)\"", "lemma paval_extend:  \"ps1 ## ps2 \\<Longrightarrow> vars a \\<subseteq> dom ps1 \\<Longrightarrow> paval a (ps1 + ps2) = paval a ps1\"", "lemma pbval_extend: \"ps1 ## ps2 \\<Longrightarrow> vars b \\<subseteq> dom ps1 \\<Longrightarrow> pbval b (ps1 + ps2) = pbval b ps1\"", "lemma Framer: \"(C, ps1) \\<Rightarrow>\\<^sub>A m \\<Down> ps1' \\<Longrightarrow> ps1 ## ps2 \\<Longrightarrow> (C, ps1 + ps2) \\<Rightarrow>\\<^sub>A m \\<Down>  ps1'+ps2\"", "lemma Framer2: \"(C, ps1) \\<Rightarrow>\\<^sub>A m \\<Down> ps1' \\<Longrightarrow> ps1 ## ps2 \\<Longrightarrow> ps = ps1 + ps2 \\<Longrightarrow> ps' = ps1'+ps2 \\<Longrightarrow> (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \"", "lemma paval_aval_part: \"paval a (part s) = aval a s\"", "lemma pbval_bval_part: \"pbval b (part s) = bval b s\"", "lemma part_paval_aval: \"part (s(x := aval a s)) = part s(x \\<mapsto> paval a (part s))\"", "lemma full_to_part: \"(C, s) \\<Rightarrow> m \\<Down> s' \\<Longrightarrow>  (C, part s) \\<Rightarrow>\\<^sub>A m \\<Down> part s' \"", "lemma part_to_full': \"(C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<Longrightarrow> (C, emb ps s) \\<Rightarrow> m \\<Down> emb ps' s\"", "lemma part_to_full: \"(C, part s) \\<Rightarrow>\\<^sub>A m \\<Down> part s' \\<Longrightarrow> (C, s) \\<Rightarrow> m \\<Down> s'\"", "lemma part_full_equiv: \"(C, s) \\<Rightarrow> m \\<Down> s' \\<longleftrightarrow> (C, part s) \\<Rightarrow>\\<^sub>A m \\<Down> part s'\"", "lemma big_step_t3_gt0: \"(C, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps' \\<Longrightarrow> x > 0\"", "lemma big_step_t3_same: \"(C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' ==>  ps = ps' on UNIV - lvars C\"", "lemma avalDirekt3_correct: \" (x ::= N v, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<Longrightarrow> paval' a ps = Some v \\<Longrightarrow>  (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps'\"", "lemma\n  fixes h :: \"(vname \\<Rightarrow> val option) * nat\"\n  shows \"(P ** Q ** H) h = (Q ** H ** P) h\"", "lemma separate_othogonal_commuted': assumes\n    \"\\<And>ps n. P (ps,n) \\<Longrightarrow> ps = 0\"\n    \"\\<And>ps n. Q (ps,n) \\<Longrightarrow> n = 0\"\n  shows \"(P ** Q) s \\<longleftrightarrow> P (0,snd s) \\<and> Q (fst s,0)\"", "lemma separate_othogonal_commuted: assumes\n    \"\\<And>ps n. P (ps,n) \\<Longrightarrow> ps = 0\"\n    \"\\<And>ps n. Q (ps,n) \\<Longrightarrow> n = 0\"\n  shows \"(P ** Q) (ps,n) \\<longleftrightarrow> P (0,n) \\<and> Q (ps,0)\"", "lemma separate_othogonal: assumes\n    \"\\<And>ps n. P (ps,n) \\<Longrightarrow> n = 0\"\n    \"\\<And>ps n. Q (ps,n) \\<Longrightarrow> ps = 0\"\n  shows \"(P ** Q) (ps,n) \\<longleftrightarrow> P (ps,0) \\<and> Q (0,n)\"", "lemma assumes \"  ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>* (\\<lambda>(s, c). s = 0 \\<and> c = Suc 0)) (ps, n)\"\nshows \"\\<exists> n'. P (ps, n') \\<and> vars b \\<subseteq> dom ps \\<and> n = Suc n'\"", "lemma sep_reorder_dollar_aux:  \n    \"NO_MATCH ($X) A \\<Longrightarrow> ($B ** A) = (A ** $B)\"   \n    \"($X ** $Y) = $(X+Y)\"", "lemmas sep_reorder_dollar = sep_conj_assoc sep_reorder_dollar_aux", "lemma stardiff: assumes \"(P \\<and>* $m) (ps, n)\"\n  shows  P: \"P (ps, n - m)\" and \"m\\<le>n\"", "lemma [simp]: \"(Q ** $0) = Q\"", "lemma orthogonal_split: assumes \"(embP Q \\<and>* $ n) = (embP P \\<and>* $ m)\"   \n  shows \"(Q = P \\<and> n = m) \\<or> Q = (\\<lambda>s. False) \\<and> P = (\\<lambda>s. False)\"", "lemma F: assumes \"(embP Q \\<and>* $ n) = (embP P \\<and>* $ m)\"   \n  obtains (blub) \"Q = P\" and \"n = m\" |\n          (da)  \"Q = (\\<lambda>s. False)\" and \"P = (\\<lambda>s. False)\"", "lemma T: assumes \"(embP Q \\<and>* $ n) = (embP P \\<and>* $ m)\"   \n  obtains (blub) x::nat where \"Q = P\" and \"n = m\" and \"x=x\" |\n          (da)  \"Q = (\\<lambda>s. False)\" and \"P = (\\<lambda>s. False)\"", "lemma \"(x \\<hookrightarrow> -) (s,n) \\<Longrightarrow> x \\<in> dom s\"", "lemma cnv_I: \"cnv x x\"", "lemma Frame'_conv: \"Frame P Q F = Frame' (P ** \\<box>) \\<box> (Q ** \\<box>) F\"", "lemma Frame'I: \"Frame' (P ** \\<box>) \\<box> (Q ** \\<box>) F \\<Longrightarrow> cnv F F' \\<Longrightarrow> Frame P Q F'\"", "lemma FrameD: assumes \"Frame P Q F\" \" P s \"\n  shows \"(F ** Q) s\"", "lemma Frame'_match: \"Frame' (P ** P') \\<box> Q F \\<Longrightarrow> Frame' (x \\<hookrightarrow> v ** P) P' (x \\<hookrightarrow> v ** Q) F\"", "lemma R: assumes \"\\<And>s. (A imp B) s\" shows \"((A ** $n) imp (B ** $n)) s\"", "lemma Frame'_matchdollar:  assumes \"Frame' (P ** P' ** $(n-m)) \\<box> Q F\" and nm: \"n\\<ge>m\"\n  shows \"Frame' ($n ** P) P' ($m ** Q) F\"", "lemma Frame'_nomatch: \" Frame' P (p ** P') (x \\<hookrightarrow> v ** Q) F\\<Longrightarrow> Frame' (p ** P) P' (x \\<hookrightarrow> v ** Q) F\"", "lemma Frame'_nomatchempty: \" Frame' P P' (x \\<hookrightarrow> v ** Q) F\\<Longrightarrow> Frame' (\\<box> ** P) P' (x \\<hookrightarrow> v ** Q) F\"", "lemma Frame'_end: \" Frame' P \\<box> \\<box> P\"", "lemma symeval_c: \"symeval P (N v) v\"", "lemma symeval_v: assumes \"Frame P (x \\<hookrightarrow> v) F\"\n  shows \"symeval P (V x) v\"", "lemma symeval_plus: assumes \"symeval P e1 v1\" \"symeval P e2 v2\"\n  shows \"symeval P (Plus e1 e2) (v1+v2)\"", "lemma symevalb_c: \"symevalb P (Bc v) v\"", "lemma symevalb_and: assumes \"symevalb P e1 v1\" \"symevalb P e2 v2\"\n  shows \"symevalb P (And e1 e2) (v1 \\<and> v2)\"", "lemma symevalb_not:  assumes \"symevalb P e v\"\n  shows \"symevalb P (Not e) (\\<not> v)\"", "lemma symevalb_less: assumes \"symeval P e1 v1\" \"symeval P e2 v2\"\n  shows \"symevalb P (Less e1 e2) (v1 < v2)\"", "lemmas symeval = symeval_c symeval_v symeval_plus symevalb_c symevalb_and symevalb_not symevalb_less"], "translations": [["", "lemma restrictI: \"\\<forall>x\\<in>S. s1 x = s2 x \\<Longrightarrow> restrict S s1 = restrict S s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s1 = s2 on S \\<Longrightarrow> restrict S s1 = restrict S s2", "unfolding restrict_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. s1 = s2 on S \\<Longrightarrow>\n    (\\<lambda>x. if x \\<in> S then Some (s1 x) else None) =\n    (\\<lambda>x. if x \\<in> S then Some (s2 x) else None)", "by fastforce"], ["", "lemma restrictE: \"restrict S s1 = restrict S s2 \\<Longrightarrow> s1 = s2 on S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict S s1 = restrict S s2 \\<Longrightarrow> s1 = s2 on S", "unfolding restrict_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. if x \\<in> S then Some (s1 x) else None) =\n    (\\<lambda>x. if x \\<in> S then Some (s2 x) else None) \\<Longrightarrow>\n    s1 = s2 on S", "by (meson option.inject)"], ["", "lemma dom_restrict[simp]: \"dom (restrict S s) = S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom (restrict S s) = S", "unfolding restrict_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dom (\\<lambda>x. if x \\<in> S then Some (s x) else None) = S", "using domIff"], ["proof (prove)\nusing this:\n  (?a \\<in> dom ?m) = (?m ?a \\<noteq> None)\n\ngoal (1 subgoal):\n 1. dom (\\<lambda>x. if x \\<in> S then Some (s x) else None) = S", "by fastforce"], ["", "lemma restrict_less_part: \"restrict S t \\<preceq> part t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict S t \\<preceq> part t", "unfolding restrict_def map_le_substate_conv[symmetric] map_le_def part_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a. if a \\<in> S then Some (t a) else None) =\n    \\<lambda>a. Some (t a)\n    on dom (\\<lambda>x. if x \\<in> S then Some (t x) else None)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a y.\n       (if a \\<in> S then Some (t a) else None) = Some y \\<Longrightarrow>\n       a \\<in> S", "by (metis option.simps(3))"], ["", "paragraph \\<open>Heap helper functions\\<close>"], ["", "fun lmaps_to_expr :: \"aexp \\<Rightarrow> val \\<Rightarrow> assn2\" where\n  \"lmaps_to_expr a v = (%(s,c). dom s = vars a \\<and> paval a s = v \\<and> c = 0)\""], ["", "fun lmaps_to_expr_x :: \"vname \\<Rightarrow> aexp \\<Rightarrow> val \\<Rightarrow> assn2\" where\n  \"lmaps_to_expr_x x a v = (%(s,c). dom s = vars a \\<union> {x} \\<and> paval a s = v \\<and> c = 0)\""], ["", "lemma subState: \"x \\<preceq> y \\<Longrightarrow> v \\<in> dom x \\<Longrightarrow> x v = y v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<preceq> y; v \\<in> dom x\\<rbrakk>\n    \\<Longrightarrow> x v = y v", "unfolding map_le_substate_conv[symmetric] map_le_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y on dom x; v \\<in> dom x\\<rbrakk>\n    \\<Longrightarrow> x v = y v", "by blast"], ["", "lemma  fixes ps:: partstate\n    and s::state\n  assumes \"vars a \\<subseteq> dom ps\" \"ps \\<preceq> part s\"\n  shows emb_update: \"emb [x \\<mapsto> paval a ps] s = (emb ps s) (x := aval a (emb ps s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emb [x \\<mapsto> paval a ps] s = (emb ps s)(x := aval a (emb ps s))", "using assms"], ["proof (prove)\nusing this:\n  vars a \\<subseteq> dom ps\n  ps \\<preceq> part s\n\ngoal (1 subgoal):\n 1. emb [x \\<mapsto> paval a ps] s = (emb ps s)(x := aval a (emb ps s))", "unfolding emb_def"], ["proof (prove)\nusing this:\n  vars a \\<subseteq> dom ps\n  ps \\<preceq> part s\n\ngoal (1 subgoal):\n 1. (\\<lambda>v.\n        case [x \\<mapsto> paval a ps] v of None \\<Rightarrow> s v\n        | Some r \\<Rightarrow> r) =\n    (\\<lambda>v.\n        case ps v of None \\<Rightarrow> s v | Some r \\<Rightarrow> r)\n    (x := aval a\n           (\\<lambda>v.\n               case ps v of None \\<Rightarrow> s v\n               | Some r \\<Rightarrow> r))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars a \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>v.\n                          case if v = x then Some (paval a ps) else None of\n                          None \\<Rightarrow> s v | Some r \\<Rightarrow> r) =\n                      (\\<lambda>v.\n                          case ps v of None \\<Rightarrow> s v\n                          | Some r \\<Rightarrow> r)\n                      (x := aval a\n                             (\\<lambda>v.\n                                 case ps v of None \\<Rightarrow> s v\n                                 | Some r \\<Rightarrow> r))", "apply (rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>vars a \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n       \\<Longrightarrow> (case if v = x then Some (paval a ps) else None of\n                          None \\<Rightarrow> s v | Some r \\<Rightarrow> r) =\n                         ((\\<lambda>v.\n                              case ps v of None \\<Rightarrow> s v\n                              | Some r \\<Rightarrow> r)\n                          (x := aval a\n                                 (\\<lambda>v.\n                                     case ps v of None \\<Rightarrow> s v\n                                     | Some r \\<Rightarrow> r)))\n                          v", "apply(case_tac \"v=x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>vars a \\<subseteq> dom ps; ps \\<preceq> part s;\n        v = x\\<rbrakk>\n       \\<Longrightarrow> (case if v = x then Some (paval a ps) else None of\n                          None \\<Rightarrow> s v | Some r \\<Rightarrow> r) =\n                         ((\\<lambda>v.\n                              case ps v of None \\<Rightarrow> s v\n                              | Some r \\<Rightarrow> r)\n                          (x := aval a\n                                 (\\<lambda>v.\n                                     case ps v of None \\<Rightarrow> s v\n                                     | Some r \\<Rightarrow> r)))\n                          v\n 2. \\<And>v.\n       \\<lbrakk>vars a \\<subseteq> dom ps; ps \\<preceq> part s;\n        v \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (case if v = x then Some (paval a ps) else None of\n                          None \\<Rightarrow> s v | Some r \\<Rightarrow> r) =\n                         ((\\<lambda>v.\n                              case ps v of None \\<Rightarrow> s v\n                              | Some r \\<Rightarrow> r)\n                          (x := aval a\n                                 (\\<lambda>v.\n                                     case ps v of None \\<Rightarrow> s v\n                                     | Some r \\<Rightarrow> r)))\n                          v", "apply(simp add: paval_aval)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>vars a \\<subseteq> dom ps; ps \\<preceq> part s;\n        v \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (case if v = x then Some (paval a ps) else None of\n                          None \\<Rightarrow> s v | Some r \\<Rightarrow> r) =\n                         ((\\<lambda>v.\n                              case ps v of None \\<Rightarrow> s v\n                              | Some r \\<Rightarrow> r)\n                          (x := aval a\n                                 (\\<lambda>v.\n                                     case ps v of None \\<Rightarrow> s v\n                                     | Some r \\<Rightarrow> r)))\n                          v", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>vars a \\<subseteq> dom ps; ps \\<preceq> part s;\n        v \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> s v =\n                         (case ps v of None \\<Rightarrow> s v\n                          | Some r \\<Rightarrow> r)", "unfolding part_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>vars a \\<subseteq> dom ps;\n        ps \\<preceq> (\\<lambda>v. Some (s v)); v \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> s v =\n                         (case ps v of None \\<Rightarrow> s v\n                          | Some r \\<Rightarrow> r)", "apply(case_tac \"v \\<in> dom ps\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>vars a \\<subseteq> dom ps;\n        ps \\<preceq> (\\<lambda>v. Some (s v)); v \\<noteq> x;\n        v \\<in> dom ps\\<rbrakk>\n       \\<Longrightarrow> s v =\n                         (case ps v of None \\<Rightarrow> s v\n                          | Some r \\<Rightarrow> r)\n 2. \\<And>v.\n       \\<lbrakk>vars a \\<subseteq> dom ps;\n        ps \\<preceq> (\\<lambda>v. Some (s v)); v \\<noteq> x;\n        v \\<notin> dom ps\\<rbrakk>\n       \\<Longrightarrow> s v =\n                         (case ps v of None \\<Rightarrow> s v\n                          | Some r \\<Rightarrow> r)", "using subState"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<preceq> ?y; ?v \\<in> dom ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ?v = ?y ?v\n\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>vars a \\<subseteq> dom ps;\n        ps \\<preceq> (\\<lambda>v. Some (s v)); v \\<noteq> x;\n        v \\<in> dom ps\\<rbrakk>\n       \\<Longrightarrow> s v =\n                         (case ps v of None \\<Rightarrow> s v\n                          | Some r \\<Rightarrow> r)\n 2. \\<And>v.\n       \\<lbrakk>vars a \\<subseteq> dom ps;\n        ps \\<preceq> (\\<lambda>v. Some (s v)); v \\<noteq> x;\n        v \\<notin> dom ps\\<rbrakk>\n       \\<Longrightarrow> s v =\n                         (case ps v of None \\<Rightarrow> s v\n                          | Some r \\<Rightarrow> r)", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>vars a \\<subseteq> dom ps;\n        ps \\<preceq> (\\<lambda>v. Some (s v)); v \\<noteq> x;\n        v \\<notin> dom ps\\<rbrakk>\n       \\<Longrightarrow> s v =\n                         (case ps v of None \\<Rightarrow> s v\n                          | Some r \\<Rightarrow> r)", "by (simp add: domIff)"], ["", "lemma paval_aval2: \"vars a \\<subseteq> dom ps \\<Longrightarrow> ps \\<preceq> part s \\<Longrightarrow> paval a ps = aval a s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars a \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n    \\<Longrightarrow> paval a ps = aval a s", "apply(induct a)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>vars (N x) \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n       \\<Longrightarrow> paval (N x) ps = aval (N x) s\n 2. \\<And>x.\n       \\<lbrakk>vars (V x) \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n       \\<Longrightarrow> paval (V x) ps = aval (V x) s\n 3. \\<And>a1 a2.\n       \\<lbrakk>\\<lbrakk>vars a1 \\<subseteq> dom ps;\n                 ps \\<preceq> part s\\<rbrakk>\n                \\<Longrightarrow> paval a1 ps = aval a1 s;\n        \\<lbrakk>vars a2 \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n        \\<Longrightarrow> paval a2 ps = aval a2 s;\n        vars (Plus a1 a2) \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n       \\<Longrightarrow> paval (Plus a1 a2) ps = aval (Plus a1 a2) s\n 4. \\<And>a1 a2.\n       \\<lbrakk>\\<lbrakk>vars a1 \\<subseteq> dom ps;\n                 ps \\<preceq> part s\\<rbrakk>\n                \\<Longrightarrow> paval a1 ps = aval a1 s;\n        \\<lbrakk>vars a2 \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n        \\<Longrightarrow> paval a2 ps = aval a2 s;\n        vars (Times a1 a2) \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n       \\<Longrightarrow> paval (Times a1 a2) ps = aval (Times a1 a2) s\n 5. \\<And>a1 a2.\n       \\<lbrakk>\\<lbrakk>vars a1 \\<subseteq> dom ps;\n                 ps \\<preceq> part s\\<rbrakk>\n                \\<Longrightarrow> paval a1 ps = aval a1 s;\n        \\<lbrakk>vars a2 \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n        \\<Longrightarrow> paval a2 ps = aval a2 s;\n        vars (Div a1 a2) \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n       \\<Longrightarrow> paval (Div a1 a2) ps = aval (Div a1 a2) s", "using subState"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<preceq> ?y; ?v \\<in> dom ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ?v = ?y ?v\n\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>vars (N x) \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n       \\<Longrightarrow> paval (N x) ps = aval (N x) s\n 2. \\<And>x.\n       \\<lbrakk>vars (V x) \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n       \\<Longrightarrow> paval (V x) ps = aval (V x) s\n 3. \\<And>a1 a2.\n       \\<lbrakk>\\<lbrakk>vars a1 \\<subseteq> dom ps;\n                 ps \\<preceq> part s\\<rbrakk>\n                \\<Longrightarrow> paval a1 ps = aval a1 s;\n        \\<lbrakk>vars a2 \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n        \\<Longrightarrow> paval a2 ps = aval a2 s;\n        vars (Plus a1 a2) \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n       \\<Longrightarrow> paval (Plus a1 a2) ps = aval (Plus a1 a2) s\n 4. \\<And>a1 a2.\n       \\<lbrakk>\\<lbrakk>vars a1 \\<subseteq> dom ps;\n                 ps \\<preceq> part s\\<rbrakk>\n                \\<Longrightarrow> paval a1 ps = aval a1 s;\n        \\<lbrakk>vars a2 \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n        \\<Longrightarrow> paval a2 ps = aval a2 s;\n        vars (Times a1 a2) \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n       \\<Longrightarrow> paval (Times a1 a2) ps = aval (Times a1 a2) s\n 5. \\<And>a1 a2.\n       \\<lbrakk>\\<lbrakk>vars a1 \\<subseteq> dom ps;\n                 ps \\<preceq> part s\\<rbrakk>\n                \\<Longrightarrow> paval a1 ps = aval a1 s;\n        \\<lbrakk>vars a2 \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n        \\<Longrightarrow> paval a2 ps = aval a2 s;\n        vars (Div a1 a2) \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n       \\<Longrightarrow> paval (Div a1 a2) ps = aval (Div a1 a2) s", "unfolding part_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<preceq> ?y; ?v \\<in> dom ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ?v = ?y ?v\n\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>vars (N x) \\<subseteq> dom ps;\n        ps \\<preceq> (\\<lambda>v. Some (s v))\\<rbrakk>\n       \\<Longrightarrow> paval (N x) ps = aval (N x) s\n 2. \\<And>x.\n       \\<lbrakk>vars (V x) \\<subseteq> dom ps;\n        ps \\<preceq> (\\<lambda>v. Some (s v))\\<rbrakk>\n       \\<Longrightarrow> paval (V x) ps = aval (V x) s\n 3. \\<And>a1 a2.\n       \\<lbrakk>\\<lbrakk>vars a1 \\<subseteq> dom ps;\n                 ps \\<preceq> (\\<lambda>v. Some (s v))\\<rbrakk>\n                \\<Longrightarrow> paval a1 ps = aval a1 s;\n        \\<lbrakk>vars a2 \\<subseteq> dom ps;\n         ps \\<preceq> (\\<lambda>v. Some (s v))\\<rbrakk>\n        \\<Longrightarrow> paval a2 ps = aval a2 s;\n        vars (Plus a1 a2) \\<subseteq> dom ps;\n        ps \\<preceq> (\\<lambda>v. Some (s v))\\<rbrakk>\n       \\<Longrightarrow> paval (Plus a1 a2) ps = aval (Plus a1 a2) s\n 4. \\<And>a1 a2.\n       \\<lbrakk>\\<lbrakk>vars a1 \\<subseteq> dom ps;\n                 ps \\<preceq> (\\<lambda>v. Some (s v))\\<rbrakk>\n                \\<Longrightarrow> paval a1 ps = aval a1 s;\n        \\<lbrakk>vars a2 \\<subseteq> dom ps;\n         ps \\<preceq> (\\<lambda>v. Some (s v))\\<rbrakk>\n        \\<Longrightarrow> paval a2 ps = aval a2 s;\n        vars (Times a1 a2) \\<subseteq> dom ps;\n        ps \\<preceq> (\\<lambda>v. Some (s v))\\<rbrakk>\n       \\<Longrightarrow> paval (Times a1 a2) ps = aval (Times a1 a2) s\n 5. \\<And>a1 a2.\n       \\<lbrakk>\\<lbrakk>vars a1 \\<subseteq> dom ps;\n                 ps \\<preceq> (\\<lambda>v. Some (s v))\\<rbrakk>\n                \\<Longrightarrow> paval a1 ps = aval a1 s;\n        \\<lbrakk>vars a2 \\<subseteq> dom ps;\n         ps \\<preceq> (\\<lambda>v. Some (s v))\\<rbrakk>\n        \\<Longrightarrow> paval a2 ps = aval a2 s;\n        vars (Div a1 a2) \\<subseteq> dom ps;\n        ps \\<preceq> (\\<lambda>v. Some (s v))\\<rbrakk>\n       \\<Longrightarrow> paval (Div a1 a2) ps = aval (Div a1 a2) s", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>ps \\<preceq> (\\<lambda>v. Some (s v));\n        \\<And>x y v.\n           \\<lbrakk>x \\<preceq> y; v \\<in> dom x\\<rbrakk>\n           \\<Longrightarrow> x v = y v;\n        ps x = Some y\\<rbrakk>\n       \\<Longrightarrow> y = s x", "by fastforce"], ["", "lemma  fixes ps:: partstate\n    and s::state\n  assumes \"vars a \\<subseteq> dom ps\" \"ps \\<preceq> part s\"\n  shows emb_update2: \"emb (ps(x \\<mapsto> paval a ps)) s = (emb ps s)(x := aval a (emb ps s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emb (ps(x \\<mapsto> paval a ps)) s = (emb ps s)(x := aval a (emb ps s))", "using assms"], ["proof (prove)\nusing this:\n  vars a \\<subseteq> dom ps\n  ps \\<preceq> part s\n\ngoal (1 subgoal):\n 1. emb (ps(x \\<mapsto> paval a ps)) s = (emb ps s)(x := aval a (emb ps s))", "unfolding emb_def"], ["proof (prove)\nusing this:\n  vars a \\<subseteq> dom ps\n  ps \\<preceq> part s\n\ngoal (1 subgoal):\n 1. (\\<lambda>v.\n        case (ps(x \\<mapsto> paval a ps)) v of None \\<Rightarrow> s v\n        | Some r \\<Rightarrow> r) =\n    (\\<lambda>v.\n        case ps v of None \\<Rightarrow> s v | Some r \\<Rightarrow> r)\n    (x := aval a\n           (\\<lambda>v.\n               case ps v of None \\<Rightarrow> s v\n               | Some r \\<Rightarrow> r))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars a \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>v.\n                          case if v = x then Some (paval a ps) else ps v of\n                          None \\<Rightarrow> s v | Some r \\<Rightarrow> r) =\n                      (\\<lambda>v.\n                          case ps v of None \\<Rightarrow> s v\n                          | Some r \\<Rightarrow> r)\n                      (x := aval a\n                             (\\<lambda>v.\n                                 case ps v of None \\<Rightarrow> s v\n                                 | Some r \\<Rightarrow> r))", "apply (rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>vars a \\<subseteq> dom ps; ps \\<preceq> part s\\<rbrakk>\n       \\<Longrightarrow> (case if v = x then Some (paval a ps) else ps v of\n                          None \\<Rightarrow> s v | Some r \\<Rightarrow> r) =\n                         ((\\<lambda>v.\n                              case ps v of None \\<Rightarrow> s v\n                              | Some r \\<Rightarrow> r)\n                          (x := aval a\n                                 (\\<lambda>v.\n                                     case ps v of None \\<Rightarrow> s v\n                                     | Some r \\<Rightarrow> r)))\n                          v", "apply(case_tac \"v=x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>vars a \\<subseteq> dom ps; ps \\<preceq> part s;\n        v = x\\<rbrakk>\n       \\<Longrightarrow> (case if v = x then Some (paval a ps) else ps v of\n                          None \\<Rightarrow> s v | Some r \\<Rightarrow> r) =\n                         ((\\<lambda>v.\n                              case ps v of None \\<Rightarrow> s v\n                              | Some r \\<Rightarrow> r)\n                          (x := aval a\n                                 (\\<lambda>v.\n                                     case ps v of None \\<Rightarrow> s v\n                                     | Some r \\<Rightarrow> r)))\n                          v\n 2. \\<And>v.\n       \\<lbrakk>vars a \\<subseteq> dom ps; ps \\<preceq> part s;\n        v \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (case if v = x then Some (paval a ps) else ps v of\n                          None \\<Rightarrow> s v | Some r \\<Rightarrow> r) =\n                         ((\\<lambda>v.\n                              case ps v of None \\<Rightarrow> s v\n                              | Some r \\<Rightarrow> r)\n                          (x := aval a\n                                 (\\<lambda>v.\n                                     case ps v of None \\<Rightarrow> s v\n                                     | Some r \\<Rightarrow> r)))\n                          v", "apply(simp add: paval_aval)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>vars a \\<subseteq> dom ps; ps \\<preceq> part s;\n        v \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (case if v = x then Some (paval a ps) else ps v of\n                          None \\<Rightarrow> s v | Some r \\<Rightarrow> r) =\n                         ((\\<lambda>v.\n                              case ps v of None \\<Rightarrow> s v\n                              | Some r \\<Rightarrow> r)\n                          (x := aval a\n                                 (\\<lambda>v.\n                                     case ps v of None \\<Rightarrow> s v\n                                     | Some r \\<Rightarrow> r)))\n                          v", "by (simp)"], ["", "subsubsection \"Big step Semantics on partial states\""], ["", "inductive\n  big_step_t_part :: \"com \\<times> partstate \\<Rightarrow> nat \\<Rightarrow> partstate \\<Rightarrow> bool\"  (\"_ \\<Rightarrow>\\<^sub>A _ \\<Down> _\" 55)\nwhere\nSkip: \"(SKIP,s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s\" |\nAssign: \"\\<lbrakk> vars a \\<union> {x} \\<subseteq> dom ps; paval a ps = v ; ps' = ps(x \\<mapsto> v) \\<rbrakk> \\<Longrightarrow> (x ::= a,ps) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps'\" |\n\nSeq: \"\\<lbrakk> (c1,s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;  (c2,s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 ; z=x+y \\<rbrakk> \\<Longrightarrow> (c1;;c2, s1) \\<Rightarrow>\\<^sub>A z \\<Down> s3\" |\n\nIfTrue: \"\\<lbrakk> vars b \\<subseteq> dom ps ; dom ps' = dom ps ; pbval b ps;  (c1,ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps'; y=x+1 \\<rbrakk> \\<Longrightarrow> (IF b THEN c1 ELSE c2, ps) \\<Rightarrow>\\<^sub>A y \\<Down> ps'\" |\nIfFalse: \"\\<lbrakk> vars b \\<subseteq> dom ps ; dom ps' = dom ps ; \\<not> pbval b ps;  (c2,ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps'; y=x+1  \\<rbrakk> \\<Longrightarrow> (IF b THEN c1 ELSE c2, ps) \\<Rightarrow>\\<^sub>A y \\<Down> ps'\" |\nWhileFalse: \"\\<lbrakk> vars b \\<subseteq> dom s; \\<not> pbval b s \\<rbrakk> \\<Longrightarrow> (WHILE b DO c,s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s\" |\nWhileTrue: \"\\<lbrakk> pbval b s1; vars b \\<subseteq> dom s1;  (c,s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;  (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3; 1+x+y=z  \\<rbrakk> \n          \\<Longrightarrow> (WHILE b DO c, s1) \\<Rightarrow>\\<^sub>A z \\<Down> s3\""], ["", "declare big_step_t_part.intros [intro]"], ["", "inductive_cases Skip_tE3[elim!]: \"(SKIP,s) \\<Rightarrow>\\<^sub>A x \\<Down> t\""], ["", "thm Skip_tE3"], ["", "inductive_cases Assign_tE3[elim!]: \"(x ::= a,s) \\<Rightarrow>\\<^sub>A p \\<Down> t\""], ["", "thm Assign_tE3"], ["", "inductive_cases Seq_tE3[elim!]: \"(c1;;c2,s1) \\<Rightarrow>\\<^sub>A p \\<Down> s3\""], ["", "thm Seq_tE3"], ["", "inductive_cases If_tE3[elim!]: \"(IF b THEN c1 ELSE c2,s) \\<Rightarrow>\\<^sub>A x \\<Down> t\""], ["", "thm If_tE3"], ["", "inductive_cases While_tE3[elim]: \"(WHILE b DO c,s) \\<Rightarrow>\\<^sub>A x \\<Down> t\""], ["", "thm While_tE3"], ["", "lemmas big_step_t_part_induct = big_step_t_part.induct[split_format(complete)]"], ["", "lemma big_step_t3_post_dom_conv: \"(c,ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps' \\<Longrightarrow> dom ps' = dom ps\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps' \\<Longrightarrow>\n    dom ps' = dom ps", "apply(induct rule: big_step_t_part_induct)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>s. dom s = dom s\n 2. \\<And>a x ps v ps'.\n       \\<lbrakk>vars a \\<union> {x} \\<subseteq> dom ps; paval a ps = v;\n        ps' = ps(x \\<mapsto> v)\\<rbrakk>\n       \\<Longrightarrow> dom ps' = dom ps\n 3. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        dom s2 = dom s1; (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        dom s3 = dom s2; z = x + y\\<rbrakk>\n       \\<Longrightarrow> dom s3 = dom s1\n 4. \\<And>b ps ps' c1 x y c2.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps'; dom ps' = dom ps;\n        y = x + 1\\<rbrakk>\n       \\<Longrightarrow> dom ps' = dom ps\n 5. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        dom ps' = dom ps; y = x + 1\\<rbrakk>\n       \\<Longrightarrow> dom ps' = dom ps\n 6. \\<And>b s c.\n       \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s\\<rbrakk>\n       \\<Longrightarrow> dom s = dom s\n 7. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2; dom s2 = dom s1;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        dom s3 = dom s2; 1 + x + y = z\\<rbrakk>\n       \\<Longrightarrow> dom s3 = dom s1", "apply (auto simp: sep_disj_fun_def plus_fun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x ps y xa ya.\n       \\<lbrakk>vars a \\<subseteq> dom ps; ps x = Some y;\n        (if xa = x then Some (paval a ps) else ps xa) = Some ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. ps xa = Some y", "apply metis"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma add_update_distrib: \"ps1 x1 = Some y \\<Longrightarrow> ps1 ## ps2 \\<Longrightarrow> vars x2 \\<subseteq> dom ps1 \\<Longrightarrow> ps1(x1 \\<mapsto> paval x2 ps1) + ps2  = (ps1 + ps2)(x1 \\<mapsto> paval x2 ps1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps1 x1 = Some y; ps1 ## ps2;\n     vars x2 \\<subseteq> dom ps1\\<rbrakk>\n    \\<Longrightarrow> ps1(x1 \\<mapsto> paval x2 ps1) + ps2 = (ps1 + ps2)(x1 \n                      \\<mapsto> paval x2 ps1)", "apply (rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>ps1 x1 = Some y; ps1 ## ps2;\n        vars x2 \\<subseteq> dom ps1\\<rbrakk>\n       \\<Longrightarrow> (ps1(x1 \\<mapsto> paval x2 ps1) + ps2) x =\n                         ((ps1 + ps2)(x1 \\<mapsto> paval x2 ps1)) x", "apply (auto simp: sep_disj_fun_def plus_fun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ya.\n       \\<lbrakk>ps1 x1 = Some y; domain ps1 \\<inter> domain ps2 = {};\n        vars x2 \\<subseteq> dom ps1; ps2 x1 = Some ya\\<rbrakk>\n       \\<Longrightarrow> ya = paval x2 ps1", "by (metis disjoint_iff_not_equal domI domain_conv)"], ["", "lemma paval_extend:  \"ps1 ## ps2 \\<Longrightarrow> vars a \\<subseteq> dom ps1 \\<Longrightarrow> paval a (ps1 + ps2) = paval a ps1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps1 ## ps2; vars a \\<subseteq> dom ps1\\<rbrakk>\n    \\<Longrightarrow> paval a (ps1 + ps2) = paval a ps1", "apply(induct a)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>ps1 ## ps2; vars (N x) \\<subseteq> dom ps1\\<rbrakk>\n       \\<Longrightarrow> paval (N x) (ps1 + ps2) = paval (N x) ps1\n 2. \\<And>x.\n       \\<lbrakk>ps1 ## ps2; vars (V x) \\<subseteq> dom ps1\\<rbrakk>\n       \\<Longrightarrow> paval (V x) (ps1 + ps2) = paval (V x) ps1\n 3. \\<And>a1 a2.\n       \\<lbrakk>\\<lbrakk>ps1 ## ps2; vars a1 \\<subseteq> dom ps1\\<rbrakk>\n                \\<Longrightarrow> paval a1 (ps1 + ps2) = paval a1 ps1;\n        \\<lbrakk>ps1 ## ps2; vars a2 \\<subseteq> dom ps1\\<rbrakk>\n        \\<Longrightarrow> paval a2 (ps1 + ps2) = paval a2 ps1;\n        ps1 ## ps2; vars (Plus a1 a2) \\<subseteq> dom ps1\\<rbrakk>\n       \\<Longrightarrow> paval (Plus a1 a2) (ps1 + ps2) =\n                         paval (Plus a1 a2) ps1\n 4. \\<And>a1 a2.\n       \\<lbrakk>\\<lbrakk>ps1 ## ps2; vars a1 \\<subseteq> dom ps1\\<rbrakk>\n                \\<Longrightarrow> paval a1 (ps1 + ps2) = paval a1 ps1;\n        \\<lbrakk>ps1 ## ps2; vars a2 \\<subseteq> dom ps1\\<rbrakk>\n        \\<Longrightarrow> paval a2 (ps1 + ps2) = paval a2 ps1;\n        ps1 ## ps2; vars (Times a1 a2) \\<subseteq> dom ps1\\<rbrakk>\n       \\<Longrightarrow> paval (Times a1 a2) (ps1 + ps2) =\n                         paval (Times a1 a2) ps1\n 5. \\<And>a1 a2.\n       \\<lbrakk>\\<lbrakk>ps1 ## ps2; vars a1 \\<subseteq> dom ps1\\<rbrakk>\n                \\<Longrightarrow> paval a1 (ps1 + ps2) = paval a1 ps1;\n        \\<lbrakk>ps1 ## ps2; vars a2 \\<subseteq> dom ps1\\<rbrakk>\n        \\<Longrightarrow> paval a2 (ps1 + ps2) = paval a2 ps1;\n        ps1 ## ps2; vars (Div a1 a2) \\<subseteq> dom ps1\\<rbrakk>\n       \\<Longrightarrow> paval (Div a1 a2) (ps1 + ps2) =\n                         paval (Div a1 a2) ps1", "apply (auto simp: sep_disj_fun_def domain_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>dom ps1 \\<inter> dom ps2 = {}; ps1 x = Some y\\<rbrakk>\n       \\<Longrightarrow> the ((ps1 + ps2) x) = y", "by (metis domI map_add_comm map_add_dom_app_simps(1) option.sel plus_fun_conv)"], ["", "lemma pbval_extend: \"ps1 ## ps2 \\<Longrightarrow> vars b \\<subseteq> dom ps1 \\<Longrightarrow> pbval b (ps1 + ps2) = pbval b ps1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps1 ## ps2; vars b \\<subseteq> dom ps1\\<rbrakk>\n    \\<Longrightarrow> pbval b (ps1 + ps2) = pbval b ps1", "apply(induct b)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>ps1 ## ps2; vars (Bc x) \\<subseteq> dom ps1\\<rbrakk>\n       \\<Longrightarrow> pbval (Bc x) (ps1 + ps2) = pbval (Bc x) ps1\n 2. \\<And>b.\n       \\<lbrakk>\\<lbrakk>ps1 ## ps2; vars b \\<subseteq> dom ps1\\<rbrakk>\n                \\<Longrightarrow> pbval b (ps1 + ps2) = pbval b ps1;\n        ps1 ## ps2; vars (bexp.Not b) \\<subseteq> dom ps1\\<rbrakk>\n       \\<Longrightarrow> pbval (bexp.Not b) (ps1 + ps2) =\n                         pbval (bexp.Not b) ps1\n 3. \\<And>b1 b2.\n       \\<lbrakk>\\<lbrakk>ps1 ## ps2; vars b1 \\<subseteq> dom ps1\\<rbrakk>\n                \\<Longrightarrow> pbval b1 (ps1 + ps2) = pbval b1 ps1;\n        \\<lbrakk>ps1 ## ps2; vars b2 \\<subseteq> dom ps1\\<rbrakk>\n        \\<Longrightarrow> pbval b2 (ps1 + ps2) = pbval b2 ps1;\n        ps1 ## ps2; vars (And b1 b2) \\<subseteq> dom ps1\\<rbrakk>\n       \\<Longrightarrow> pbval (And b1 b2) (ps1 + ps2) =\n                         pbval (And b1 b2) ps1\n 4. \\<And>x1a x2a.\n       \\<lbrakk>ps1 ## ps2; vars (Less x1a x2a) \\<subseteq> dom ps1\\<rbrakk>\n       \\<Longrightarrow> pbval (Less x1a x2a) (ps1 + ps2) =\n                         pbval (Less x1a x2a) ps1", "by (auto simp: paval_extend)"], ["", "lemma Framer: \"(C, ps1) \\<Rightarrow>\\<^sub>A m \\<Down> ps1' \\<Longrightarrow> ps1 ## ps2 \\<Longrightarrow> (C, ps1 + ps2) \\<Rightarrow>\\<^sub>A m \\<Down>  ps1'+ps2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(C, ps1) \\<Rightarrow>\\<^sub>A m \\<Down> ps1';\n     ps1 ## ps2\\<rbrakk>\n    \\<Longrightarrow> (C, ps1 +\n                          ps2) \\<Rightarrow>\\<^sub>A m \\<Down> ps1' + ps2", "proof (induct rule: big_step_t_part_induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>s.\n       s ## ps2 \\<Longrightarrow>\n       (SKIP, s + ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n 2. \\<And>a x ps v ps'.\n       \\<lbrakk>vars a \\<union> {x} \\<subseteq> dom ps; paval a ps = v;\n        ps' = ps(x \\<mapsto> v); ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (x ::= a,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps' + ps2\n 3. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 4. \\<And>b ps ps' c1 x y c2.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 5. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 6. \\<And>b s c.\n       \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s;\n        s ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n 7. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "case (Skip s)"], ["proof (state)\nthis:\n  s ## ps2\n\ngoal (7 subgoals):\n 1. \\<And>s.\n       s ## ps2 \\<Longrightarrow>\n       (SKIP, s + ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n 2. \\<And>a x ps v ps'.\n       \\<lbrakk>vars a \\<union> {x} \\<subseteq> dom ps; paval a ps = v;\n        ps' = ps(x \\<mapsto> v); ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (x ::= a,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps' + ps2\n 3. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 4. \\<And>b ps ps' c1 x y c2.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 5. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 6. \\<And>b s c.\n       \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s;\n        s ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n 7. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "then"], ["proof (chain)\npicking this:\n  s ## ps2", "show ?case"], ["proof (prove)\nusing this:\n  s ## ps2\n\ngoal (1 subgoal):\n 1. (SKIP, s + ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2", "by (auto simp: big_step_t_part.Skip)"], ["proof (state)\nthis:\n  (SKIP, s + ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n\ngoal (6 subgoals):\n 1. \\<And>a x ps v ps'.\n       \\<lbrakk>vars a \\<union> {x} \\<subseteq> dom ps; paval a ps = v;\n        ps' = ps(x \\<mapsto> v); ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (x ::= a,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps' + ps2\n 2. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 3. \\<And>b ps ps' c1 x y c2.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 4. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 5. \\<And>b s c.\n       \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s;\n        s ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n 6. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>a x ps v ps'.\n       \\<lbrakk>vars a \\<union> {x} \\<subseteq> dom ps; paval a ps = v;\n        ps' = ps(x \\<mapsto> v); ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (x ::= a,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps' + ps2\n 2. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 3. \\<And>b ps ps' c1 x y c2.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 4. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 5. \\<And>b s c.\n       \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s;\n        s ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n 6. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "case (Assign a x ps v ps')"], ["proof (state)\nthis:\n  vars a \\<union> {x} \\<subseteq> dom ps\n  paval a ps = v\n  ps' = ps(x \\<mapsto> v)\n  ps ## ps2\n\ngoal (6 subgoals):\n 1. \\<And>a x ps v ps'.\n       \\<lbrakk>vars a \\<union> {x} \\<subseteq> dom ps; paval a ps = v;\n        ps' = ps(x \\<mapsto> v); ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (x ::= a,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps' + ps2\n 2. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 3. \\<And>b ps ps' c1 x y c2.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 4. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 5. \\<And>b s c.\n       \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s;\n        s ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n 6. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ::= a, ps + ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps' + ps2", "apply(rule big_step_t_part.Assign)"], ["proof (prove)\ngoal (3 subgoals):\n 1. vars a \\<union> {x} \\<subseteq> dom (ps + ps2)\n 2. paval a (ps + ps2) = ?v\n 3. ps' + ps2 = (ps + ps2)(x \\<mapsto> ?v)", "using Assign"], ["proof (prove)\nusing this:\n  vars a \\<union> {x} \\<subseteq> dom ps\n  paval a ps = v\n  ps' = ps(x \\<mapsto> v)\n  ps ## ps2\n\ngoal (3 subgoals):\n 1. vars a \\<union> {x} \\<subseteq> dom (ps + ps2)\n 2. paval a (ps + ps2) = ?v\n 3. ps' + ps2 = (ps + ps2)(x \\<mapsto> ?v)", "apply (auto simp: plus_fun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>ps' = ps(x \\<mapsto> paval a ps); ps ## ps2; v = paval a ps;\n        vars a \\<subseteq> dom ps; ps x = Some y\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>b.\n                             if ps2 b = None\n                             then if b = x then Some (paval a ps) else ps b\n                             else ps2 b) =\n                         (\\<lambda>a. if ps2 a = None then ps a else ps2 a)\n                         (x \\<mapsto>\n                         paval a\n                          (\\<lambda>a.\n                              if ps2 a = None then ps a else ps2 a))", "apply(rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y xa.\n       \\<lbrakk>ps' = ps(x \\<mapsto> paval a ps); ps ## ps2; v = paval a ps;\n        vars a \\<subseteq> dom ps; ps x = Some y\\<rbrakk>\n       \\<Longrightarrow> (if ps2 xa = None\n                          then if xa = x then Some (paval a ps) else ps xa\n                          else ps2 xa) =\n                         ((\\<lambda>a. if ps2 a = None then ps a else ps2 a)\n                          (x \\<mapsto>\n                          paval a\n                           (\\<lambda>a.\n                               if ps2 a = None then ps a else ps2 a)))\n                          xa", "apply(case_tac \"xa=x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y xa.\n       \\<lbrakk>ps' = ps(x \\<mapsto> paval a ps); ps ## ps2; v = paval a ps;\n        vars a \\<subseteq> dom ps; ps x = Some y; xa = x\\<rbrakk>\n       \\<Longrightarrow> (if ps2 xa = None\n                          then if xa = x then Some (paval a ps) else ps xa\n                          else ps2 xa) =\n                         ((\\<lambda>a. if ps2 a = None then ps a else ps2 a)\n                          (x \\<mapsto>\n                          paval a\n                           (\\<lambda>a.\n                               if ps2 a = None then ps a else ps2 a)))\n                          xa\n 2. \\<And>y xa.\n       \\<lbrakk>ps' = ps(x \\<mapsto> paval a ps); ps ## ps2; v = paval a ps;\n        vars a \\<subseteq> dom ps; ps x = Some y; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (if ps2 xa = None\n                          then if xa = x then Some (paval a ps) else ps xa\n                          else ps2 xa) =\n                         ((\\<lambda>a. if ps2 a = None then ps a else ps2 a)\n                          (x \\<mapsto>\n                          paval a\n                           (\\<lambda>a.\n                               if ps2 a = None then ps a else ps2 a)))\n                          xa", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps' = ps(x \\<mapsto> paval a ps); ps ## ps2; v = paval a ps;\n     vars a \\<subseteq> dom ps; ps x = Some y_; xa_ = x\\<rbrakk>\n    \\<Longrightarrow> (if ps2 xa_ = None\n                       then if xa_ = x then Some (paval a ps) else ps xa_\n                       else ps2 xa_) =\n                      ((\\<lambda>a. if ps2 a = None then ps a else ps2 a)(x \n                       \\<mapsto>\n                       paval a\n                        (\\<lambda>a. if ps2 a = None then ps a else ps2 a)))\n                       xa_", "apply (auto simp: )"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ps' = ps(x \\<mapsto> paval a ps); ps ## ps2; v = paval a ps;\n     vars a \\<subseteq> dom ps; ps x = Some y_; xa_ = x;\n     ps2 x = None\\<rbrakk>\n    \\<Longrightarrow> paval a ps =\n                      paval a\n                       (\\<lambda>a. if ps2 a = None then ps a else ps2 a)\n 2. \\<And>ya.\n       \\<lbrakk>ps' = ps(x \\<mapsto> paval a ps); ps ## ps2; v = paval a ps;\n        vars a \\<subseteq> dom ps; ps x = Some y_; xa_ = x;\n        ps2 x = Some ya\\<rbrakk>\n       \\<Longrightarrow> ya =\n                         paval a\n                          (\\<lambda>a. if ps2 a = None then ps a else ps2 a)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps' = ps(x \\<mapsto> paval a ps); ps ## ps2; v = paval a ps;\n     vars a \\<subseteq> dom ps; ps x = Some y_; xa_ = x;\n     ps2 x = None\\<rbrakk>\n    \\<Longrightarrow> paval a ps =\n                      paval a\n                       (\\<lambda>a. if ps2 a = None then ps a else ps2 a)", "using paval_extend[unfolded plus_fun_def]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?ps1.0 ## ?ps2.0; vars ?a \\<subseteq> dom ?ps1.0\\<rbrakk>\n  \\<Longrightarrow> paval ?a\n                     (\\<lambda>x.\n                         if ?ps2.0 x = none then ?ps1.0 x else ?ps2.0 x) =\n                    paval ?a ?ps1.0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ps' = ps(x \\<mapsto> paval a ps); ps ## ps2; v = paval a ps;\n     vars a \\<subseteq> dom ps; ps x = Some y_; xa_ = x;\n     ps2 x = None\\<rbrakk>\n    \\<Longrightarrow> paval a ps =\n                      paval a\n                       (\\<lambda>a. if ps2 a = None then ps a else ps2 a)", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ya.\n       \\<lbrakk>ps' = ps(x \\<mapsto> paval a ps); ps ## ps2; v = paval a ps;\n        vars a \\<subseteq> dom ps; ps x = Some y_; xa_ = x;\n        ps2 x = Some ya\\<rbrakk>\n       \\<Longrightarrow> ya =\n                         paval a\n                          (\\<lambda>a. if ps2 a = None then ps a else ps2 a)", "unfolding sep_disj_fun_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ya.\n       \\<lbrakk>ps' = ps(x \\<mapsto> paval a ps);\n        domain ps \\<inter> domain ps2 = {}; v = paval a ps;\n        vars a \\<subseteq> dom ps; ps x = Some y_; xa_ = x;\n        ps2 x = Some ya\\<rbrakk>\n       \\<Longrightarrow> ya =\n                         paval a\n                          (\\<lambda>a. if ps2 a = None then ps a else ps2 a)", "by (metis disjoint_iff_not_equal domI domain_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y xa.\n       \\<lbrakk>ps' = ps(x \\<mapsto> paval a ps); ps ## ps2; v = paval a ps;\n        vars a \\<subseteq> dom ps; ps x = Some y; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (if ps2 xa = None\n                          then if xa = x then Some (paval a ps) else ps xa\n                          else ps2 xa) =\n                         ((\\<lambda>a. if ps2 a = None then ps a else ps2 a)\n                          (x \\<mapsto>\n                          paval a\n                           (\\<lambda>a.\n                               if ps2 a = None then ps a else ps2 a)))\n                          xa", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps' = ps(x \\<mapsto> paval a ps); ps ## ps2; v = paval a ps;\n     vars a \\<subseteq> dom ps; ps x = Some y_; xa_ \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> (if ps2 xa_ = None\n                       then if xa_ = x then Some (paval a ps) else ps xa_\n                       else ps2 xa_) =\n                      ((\\<lambda>a. if ps2 a = None then ps a else ps2 a)(x \n                       \\<mapsto>\n                       paval a\n                        (\\<lambda>a. if ps2 a = None then ps a else ps2 a)))\n                       xa_", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (x ::= a, ps + ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps' + ps2\n\ngoal (5 subgoals):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 2. \\<And>b ps ps' c1 x y c2.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 3. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 4. \\<And>b s c.\n       \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s;\n        s ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n 5. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 2. \\<And>b ps ps' c1 x y c2.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 3. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 4. \\<And>b s c.\n       \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s;\n        s ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n 5. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "case (IfTrue b ps ps' c1 x y c2)"], ["proof (state)\nthis:\n  vars b \\<subseteq> dom ps\n  dom ps' = dom ps\n  pbval b ps\n  (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps'\n  ps ## ps2 \\<Longrightarrow>\n  (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2\n  y = x + 1\n  ps ## ps2\n\ngoal (5 subgoals):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 2. \\<And>b ps ps' c1 x y c2.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 3. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 4. \\<And>b s c.\n       \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s;\n        s ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n 5. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "then"], ["proof (chain)\npicking this:\n  vars b \\<subseteq> dom ps\n  dom ps' = dom ps\n  pbval b ps\n  (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps'\n  ps ## ps2 \\<Longrightarrow>\n  (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2\n  y = x + 1\n  ps ## ps2", "show ?case"], ["proof (prove)\nusing this:\n  vars b \\<subseteq> dom ps\n  dom ps' = dom ps\n  pbval b ps\n  (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps'\n  ps ## ps2 \\<Longrightarrow>\n  (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2\n  y = x + 1\n  ps ## ps2\n\ngoal (1 subgoal):\n 1. (IF b THEN c1 ELSE c2,\n     ps + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2", "apply (auto )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n     (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2\\<rbrakk>\n    \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                       ps +\n                       ps2) \\<Rightarrow>\\<^sub>A Suc x \\<Down> ps' + ps2", "apply(subst big_step_t_part.IfTrue)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n     (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2\\<rbrakk>\n    \\<Longrightarrow> vars b \\<subseteq> dom (ps + ps2)\n 2. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n     (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2\\<rbrakk>\n    \\<Longrightarrow> dom (ps' + ps2) = dom (ps + ps2)\n 3. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n     (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2\\<rbrakk>\n    \\<Longrightarrow> pbval b (ps + ps2)\n 4. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n     (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2\\<rbrakk>\n    \\<Longrightarrow> (c1,\n                       ps + ps2) \\<Rightarrow>\\<^sub>A ?x7 \\<Down> ps' + ps2\n 5. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n     (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2\\<rbrakk>\n    \\<Longrightarrow> Suc x = ?x7 + 1\n 6. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n     (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2\\<rbrakk>\n    \\<Longrightarrow> True", "apply (auto simp: pbval_extend)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n        ps ## ps2; xa \\<in> vars b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (ps + ps2) xa = Some y\n 2. \\<And>xa ya.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n        ps ## ps2; (ps' + ps2) xa = Some ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (ps + ps2) xa = Some y\n 3. \\<And>xa ya.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n        ps ## ps2; (ps + ps2) xa = Some ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (ps' + ps2) xa = Some y", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n     (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2; xa_ \\<in> vars b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. (ps + ps2) xa_ = Some y", "by (auto simp: plus_fun_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n        ps ## ps2; (ps' + ps2) xa = Some ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (ps + ps2) xa = Some y\n 2. \\<And>xa ya.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n        ps ## ps2; (ps + ps2) xa = Some ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (ps' + ps2) xa = Some y", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n     (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2; (ps' + ps2) xa_ = Some ya_\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. (ps + ps2) xa_ = Some y", "by (auto simp: plus_fun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n        ps ## ps2; (ps + ps2) xa = Some ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (ps' + ps2) xa = Some y", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n     (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c1, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2; (ps + ps2) xa_ = Some ya_\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. (ps' + ps2) xa_ = Some y", "by (auto simp: plus_fun_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (IF b THEN c1 ELSE c2, ps + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n\ngoal (4 subgoals):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 2. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 3. \\<And>b s c.\n       \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s;\n        s ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n 4. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 2. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 3. \\<And>b s c.\n       \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s;\n        s ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n 4. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "case (IfFalse b ps ps' c2 x y c1)"], ["proof (state)\nthis:\n  vars b \\<subseteq> dom ps\n  dom ps' = dom ps\n  \\<not> pbval b ps\n  (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps'\n  ps ## ps2 \\<Longrightarrow>\n  (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2\n  y = x + 1\n  ps ## ps2\n\ngoal (4 subgoals):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 2. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps ## ps2 \\<Longrightarrow>\n        (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2;\n        y = x + 1; ps ## ps2\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          ps +\n                          ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n 3. \\<And>b s c.\n       \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s;\n        s ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n 4. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "then"], ["proof (chain)\npicking this:\n  vars b \\<subseteq> dom ps\n  dom ps' = dom ps\n  \\<not> pbval b ps\n  (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps'\n  ps ## ps2 \\<Longrightarrow>\n  (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2\n  y = x + 1\n  ps ## ps2", "show ?case"], ["proof (prove)\nusing this:\n  vars b \\<subseteq> dom ps\n  dom ps' = dom ps\n  \\<not> pbval b ps\n  (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps'\n  ps ## ps2 \\<Longrightarrow>\n  (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2\n  y = x + 1\n  ps ## ps2\n\ngoal (1 subgoal):\n 1. (IF b THEN c1 ELSE c2,\n     ps + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2", "apply (auto )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; \\<not> pbval b ps;\n     (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2\\<rbrakk>\n    \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                       ps +\n                       ps2) \\<Rightarrow>\\<^sub>A Suc x \\<Down> ps' + ps2", "apply(subst big_step_t_part.IfFalse)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; \\<not> pbval b ps;\n     (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2\\<rbrakk>\n    \\<Longrightarrow> vars b \\<subseteq> dom (ps + ps2)\n 2. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; \\<not> pbval b ps;\n     (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2\\<rbrakk>\n    \\<Longrightarrow> dom (ps' + ps2) = dom (ps + ps2)\n 3. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; \\<not> pbval b ps;\n     (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2\\<rbrakk>\n    \\<Longrightarrow> \\<not> pbval b (ps + ps2)\n 4. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; \\<not> pbval b ps;\n     (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2\\<rbrakk>\n    \\<Longrightarrow> (c2,\n                       ps + ps2) \\<Rightarrow>\\<^sub>A ?x7 \\<Down> ps' + ps2\n 5. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; \\<not> pbval b ps;\n     (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2\\<rbrakk>\n    \\<Longrightarrow> Suc x = ?x7 + 1\n 6. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; \\<not> pbval b ps;\n     (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2\\<rbrakk>\n    \\<Longrightarrow> True", "apply (auto simp: pbval_extend)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n        ps ## ps2; xa \\<in> vars b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (ps + ps2) xa = Some y\n 2. \\<And>xa ya.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n        ps ## ps2; (ps' + ps2) xa = Some ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (ps + ps2) xa = Some y\n 3. \\<And>xa ya.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n        ps ## ps2; (ps + ps2) xa = Some ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (ps' + ps2) xa = Some y", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; \\<not> pbval b ps;\n     (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2; xa_ \\<in> vars b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. (ps + ps2) xa_ = Some y", "by (auto simp: plus_fun_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n        ps ## ps2; (ps' + ps2) xa = Some ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (ps + ps2) xa = Some y\n 2. \\<And>xa ya.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n        ps ## ps2; (ps + ps2) xa = Some ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (ps' + ps2) xa = Some y", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; \\<not> pbval b ps;\n     (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2; (ps' + ps2) xa_ = Some ya_\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. (ps + ps2) xa_ = Some y", "by (auto simp: plus_fun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n        ps ## ps2; (ps + ps2) xa = Some ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (ps' + ps2) xa = Some y", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; \\<not> pbval b ps;\n     (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n     (c2, ps + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> ps' + ps2; y = Suc x;\n     ps ## ps2; (ps + ps2) xa_ = Some ya_\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. (ps' + ps2) xa_ = Some y", "by (auto simp: plus_fun_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (IF b THEN c1 ELSE c2, ps + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> ps' + ps2\n\ngoal (3 subgoals):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 2. \\<And>b s c.\n       \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s;\n        s ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n 3. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 2. \\<And>b s c.\n       \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s;\n        s ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n 3. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "case (WhileFalse b s c)"], ["proof (state)\nthis:\n  vars b \\<subseteq> dom s\n  \\<not> pbval b s\n  s ## ps2\n\ngoal (3 subgoals):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 2. \\<And>b s c.\n       \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s;\n        s ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s +\n                          ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n 3. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "then"], ["proof (chain)\npicking this:\n  vars b \\<subseteq> dom s\n  \\<not> pbval b s\n  s ## ps2", "show ?case"], ["proof (prove)\nusing this:\n  vars b \\<subseteq> dom s\n  \\<not> pbval b s\n  s ## ps2\n\ngoal (1 subgoal):\n 1. (WHILE b DO c, s + ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2", "apply(subst big_step_t_part.WhileFalse)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s; s ## ps2\\<rbrakk>\n    \\<Longrightarrow> vars b \\<subseteq> dom (s + ps2)\n 2. \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s; s ## ps2\\<rbrakk>\n    \\<Longrightarrow> \\<not> pbval b (s + ps2)\n 3. \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s; s ## ps2\\<rbrakk>\n    \\<Longrightarrow> True", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s; s ## ps2\\<rbrakk>\n    \\<Longrightarrow> vars b \\<subseteq> dom (s + ps2)", "by (auto simp: plus_fun_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s; s ## ps2\\<rbrakk>\n    \\<Longrightarrow> \\<not> pbval b (s + ps2)\n 2. \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s; s ## ps2\\<rbrakk>\n    \\<Longrightarrow> True", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s; s ## ps2\\<rbrakk>\n    \\<Longrightarrow> \\<not> pbval b (s + ps2)", "by (auto simp: pbval_extend)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s; s ## ps2\\<rbrakk>\n    \\<Longrightarrow> True", "by auto"], ["proof (state)\nthis:\n  (WHILE b DO c, s + ps2) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> s + ps2\n\ngoal (2 subgoals):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 2. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 2. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "case (WhileTrue b s1 c x s2 y s3 z)"], ["proof (state)\nthis:\n  pbval b s1\n  vars b \\<subseteq> dom s1\n  (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2\n  s1 ## ps2 \\<Longrightarrow>\n  (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2\n  (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3\n  s2 ## ps2 \\<Longrightarrow>\n  (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2\n  1 + x + y = z\n  s1 ## ps2\n\ngoal (2 subgoals):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 2. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "from big_step_t3_post_dom_conv[OF WhileTrue(3)]"], ["proof (chain)\npicking this:\n  dom s2 = dom s1", "have \"dom s2 = dom s1\""], ["proof (prove)\nusing this:\n  dom s2 = dom s1\n\ngoal (1 subgoal):\n 1. dom s2 = dom s1", "by auto"], ["proof (state)\nthis:\n  dom s2 = dom s1\n\ngoal (2 subgoals):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 2. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "with WhileTrue(8)"], ["proof (chain)\npicking this:\n  s1 ## ps2\n  dom s2 = dom s1", "have \"s2 ## ps2\""], ["proof (prove)\nusing this:\n  s1 ## ps2\n  dom s2 = dom s1\n\ngoal (1 subgoal):\n 1. s2 ## ps2", "unfolding sep_disj_fun_def domain_conv"], ["proof (prove)\nusing this:\n  dom s1 \\<inter> dom ps2 = {}\n  dom s2 = dom s1\n\ngoal (1 subgoal):\n 1. dom s2 \\<inter> dom ps2 = {}", "by auto"], ["proof (state)\nthis:\n  s2 ## ps2\n\ngoal (2 subgoals):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n 2. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        1 + x + y = z; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "with WhileTrue"], ["proof (chain)\npicking this:\n  pbval b s1\n  vars b \\<subseteq> dom s1\n  (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2\n  s1 ## ps2 \\<Longrightarrow>\n  (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2\n  (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3\n  s2 ## ps2 \\<Longrightarrow>\n  (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2\n  1 + x + y = z\n  s1 ## ps2\n  s2 ## ps2", "show ?case"], ["proof (prove)\nusing this:\n  pbval b s1\n  vars b \\<subseteq> dom s1\n  (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2\n  s1 ## ps2 \\<Longrightarrow>\n  (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2\n  (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3\n  s2 ## ps2 \\<Longrightarrow>\n  (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2\n  1 + x + y = z\n  s1 ## ps2\n  s2 ## ps2\n\ngoal (1 subgoal):\n 1. (WHILE b DO c, s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> (WHILE b DO c,\n                       s1 +\n                       ps2) \\<Rightarrow>\\<^sub>A Suc\n             (x + y) \\<Down> s3 + ps2", "apply(subst big_step_t_part.WhileTrue)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> pbval b (s1 + ps2)\n 2. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> vars b \\<subseteq> dom (s1 + ps2)\n 3. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> (c, s1 +\n                          ps2) \\<Rightarrow>\\<^sub>A ?x12 \\<Down> ?s2.12\n 4. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> (WHILE b DO c,\n                       ?s2.12) \\<Rightarrow>\\<^sub>A ?y12 \\<Down> s3 + ps2\n 5. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> 1 + ?x12 + ?y12 = Suc (x + y)\n 6. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> True", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> pbval b (s1 + ps2)", "by (auto simp: pbval_extend)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> vars b \\<subseteq> dom (s1 + ps2)\n 2. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> (c, s1 +\n                          ps2) \\<Rightarrow>\\<^sub>A ?x12 \\<Down> ?s2.12\n 3. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> (WHILE b DO c,\n                       ?s2.12) \\<Rightarrow>\\<^sub>A ?y12 \\<Down> s3 + ps2\n 4. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> 1 + ?x12 + ?y12 = Suc (x + y)\n 5. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> True", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> vars b \\<subseteq> dom (s1 + ps2)", "by (auto simp: plus_fun_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> (c, s1 +\n                          ps2) \\<Rightarrow>\\<^sub>A ?x12 \\<Down> ?s2.12\n 2. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> (WHILE b DO c,\n                       ?s2.12) \\<Rightarrow>\\<^sub>A ?y12 \\<Down> s3 + ps2\n 3. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> 1 + ?x12 + ?y12 = Suc (x + y)\n 4. \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n     (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     (c, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     (WHILE b DO c, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     s1 ## ps2; s2 ## ps2; z = Suc (x + y)\\<rbrakk>\n    \\<Longrightarrow> True", "apply (auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (WHILE b DO c, s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n\ngoal (1 subgoal):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "case (Seq c1 s1 x s2 c2 y s3 z)"], ["proof (state)\nthis:\n  (c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2\n  s1 ## ps2 \\<Longrightarrow>\n  (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2\n  (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3\n  s2 ## ps2 \\<Longrightarrow>\n  (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2\n  z = x + y\n  s1 ## ps2\n\ngoal (1 subgoal):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "from big_step_t3_post_dom_conv[OF Seq(1)]"], ["proof (chain)\npicking this:\n  dom s2 = dom s1", "have \"dom s2 = dom s1\""], ["proof (prove)\nusing this:\n  dom s2 = dom s1\n\ngoal (1 subgoal):\n 1. dom s2 = dom s1", "by auto"], ["proof (state)\nthis:\n  dom s2 = dom s1\n\ngoal (1 subgoal):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "with Seq(6)"], ["proof (chain)\npicking this:\n  s1 ## ps2\n  dom s2 = dom s1", "have \"s2 ## ps2\""], ["proof (prove)\nusing this:\n  s1 ## ps2\n  dom s2 = dom s1\n\ngoal (1 subgoal):\n 1. s2 ## ps2", "unfolding sep_disj_fun_def domain_conv"], ["proof (prove)\nusing this:\n  dom s1 \\<inter> dom ps2 = {}\n  dom s2 = dom s1\n\ngoal (1 subgoal):\n 1. dom s2 \\<inter> dom ps2 = {}", "by auto"], ["proof (state)\nthis:\n  s2 ## ps2\n\ngoal (1 subgoal):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 ## ps2 \\<Longrightarrow>\n        (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 ## ps2 \\<Longrightarrow>\n        (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n        z = x + y; s1 ## ps2\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "with Seq"], ["proof (chain)\npicking this:\n  (c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2\n  s1 ## ps2 \\<Longrightarrow>\n  (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2\n  (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3\n  s2 ## ps2 \\<Longrightarrow>\n  (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2\n  z = x + y\n  s1 ## ps2\n  s2 ## ps2", "show ?case"], ["proof (prove)\nusing this:\n  (c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2\n  s1 ## ps2 \\<Longrightarrow>\n  (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2\n  (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3\n  s2 ## ps2 \\<Longrightarrow>\n  (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2\n  z = x + y\n  s1 ## ps2\n  s2 ## ps2\n\ngoal (1 subgoal):\n 1. (c1;; c2, s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2", "apply (subst big_step_t_part.Seq)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     s1 ## ps2 \\<Longrightarrow>\n     (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     s2 ## ps2 \\<Longrightarrow>\n     (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     z = x + y; s1 ## ps2; s2 ## ps2\\<rbrakk>\n    \\<Longrightarrow> (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A ?x7 \\<Down> ?s2.7\n 2. \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     s1 ## ps2 \\<Longrightarrow>\n     (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     s2 ## ps2 \\<Longrightarrow>\n     (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     z = x + y; s1 ## ps2; s2 ## ps2\\<rbrakk>\n    \\<Longrightarrow> (c2, ?s2.7) \\<Rightarrow>\\<^sub>A ?y7 \\<Down> s3 + ps2\n 3. \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     s1 ## ps2 \\<Longrightarrow>\n     (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     s2 ## ps2 \\<Longrightarrow>\n     (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     z = x + y; s1 ## ps2; s2 ## ps2\\<rbrakk>\n    \\<Longrightarrow> z = ?x7 + ?y7\n 4. \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n     s1 ## ps2 \\<Longrightarrow>\n     (c1, s1 + ps2) \\<Rightarrow>\\<^sub>A x \\<Down> s2 + ps2;\n     (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n     s2 ## ps2 \\<Longrightarrow>\n     (c2, s2 + ps2) \\<Rightarrow>\\<^sub>A y \\<Down> s3 + ps2;\n     z = x + y; s1 ## ps2; s2 ## ps2\\<rbrakk>\n    \\<Longrightarrow> True", "by auto"], ["proof (state)\nthis:\n  (c1;; c2, s1 + ps2) \\<Rightarrow>\\<^sub>A z \\<Down> s3 + ps2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Framer2: \"(C, ps1) \\<Rightarrow>\\<^sub>A m \\<Down> ps1' \\<Longrightarrow> ps1 ## ps2 \\<Longrightarrow> ps = ps1 + ps2 \\<Longrightarrow> ps' = ps1'+ps2 \\<Longrightarrow> (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(C, ps1) \\<Rightarrow>\\<^sub>A m \\<Down> ps1'; ps1 ## ps2;\n     ps = ps1 + ps2; ps' = ps1' + ps2\\<rbrakk>\n    \\<Longrightarrow> (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps'", "using Framer"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?C, ?ps1.0) \\<Rightarrow>\\<^sub>A ?m \\<Down> ?ps1';\n   ?ps1.0 ## ?ps2.0\\<rbrakk>\n  \\<Longrightarrow> (?C,\n                     ?ps1.0 +\n                     ?ps2.0) \\<Rightarrow>\\<^sub>A ?m \\<Down> ?ps1' + ?ps2.0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(C, ps1) \\<Rightarrow>\\<^sub>A m \\<Down> ps1'; ps1 ## ps2;\n     ps = ps1 + ps2; ps' = ps1' + ps2\\<rbrakk>\n    \\<Longrightarrow> (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps'", "by auto"], ["", "(* connection to bigstep2 *)"], ["", "subsubsection \\<open>Relation to BigStep Semantic on full states\\<close>"], ["", "lemma paval_aval_part: \"paval a (part s) = aval a s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. paval a (part s) = aval a s", "apply(induct a)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x. paval (N x) (part s) = aval (N x) s\n 2. \\<And>x. paval (V x) (part s) = aval (V x) s\n 3. \\<And>a1 a2.\n       \\<lbrakk>paval a1 (part s) = aval a1 s;\n        paval a2 (part s) = aval a2 s\\<rbrakk>\n       \\<Longrightarrow> paval (Plus a1 a2) (part s) = aval (Plus a1 a2) s\n 4. \\<And>a1 a2.\n       \\<lbrakk>paval a1 (part s) = aval a1 s;\n        paval a2 (part s) = aval a2 s\\<rbrakk>\n       \\<Longrightarrow> paval (Times a1 a2) (part s) = aval (Times a1 a2) s\n 5. \\<And>a1 a2.\n       \\<lbrakk>paval a1 (part s) = aval a1 s;\n        paval a2 (part s) = aval a2 s\\<rbrakk>\n       \\<Longrightarrow> paval (Div a1 a2) (part s) = aval (Div a1 a2) s", "by (auto simp: part_def)"], ["", "lemma pbval_bval_part: \"pbval b (part s) = bval b s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pbval b (part s) = bval b s", "apply(induct b)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x. pbval (Bc x) (part s) = bval (Bc x) s\n 2. \\<And>b.\n       pbval b (part s) = bval b s \\<Longrightarrow>\n       pbval (bexp.Not b) (part s) = bval (bexp.Not b) s\n 3. \\<And>b1 b2.\n       \\<lbrakk>pbval b1 (part s) = bval b1 s;\n        pbval b2 (part s) = bval b2 s\\<rbrakk>\n       \\<Longrightarrow> pbval (And b1 b2) (part s) = bval (And b1 b2) s\n 4. \\<And>x1a x2a. pbval (Less x1a x2a) (part s) = bval (Less x1a x2a) s", "by (auto simp: paval_aval_part)"], ["", "lemma part_paval_aval: \"part (s(x := aval a s)) = part s(x \\<mapsto> paval a (part s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part (s(x := aval a s)) = part s(x \\<mapsto> paval a (part s))", "apply(rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       part (s(x := aval a s)) xa =\n       (part s(x \\<mapsto> paval a (part s))) xa", "apply(case_tac \"xa=x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa = x \\<Longrightarrow>\n       part (s(x := aval a s)) xa =\n       (part s(x \\<mapsto> paval a (part s))) xa\n 2. \\<And>xa.\n       xa \\<noteq> x \\<Longrightarrow>\n       part (s(x := aval a s)) xa =\n       (part s(x \\<mapsto> paval a (part s))) xa", "unfolding part_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa = x \\<Longrightarrow>\n       Some ((s(x := aval a s)) xa) =\n       ((\\<lambda>v. Some (s v))(x \\<mapsto>\n        paval a (\\<lambda>v. Some (s v))))\n        xa\n 2. \\<And>xa.\n       xa \\<noteq> x \\<Longrightarrow>\n       Some ((s(x := aval a s)) xa) =\n       ((\\<lambda>v. Some (s v))(x \\<mapsto>\n        paval a (\\<lambda>v. Some (s v))))\n        xa", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. aval a s = paval a (\\<lambda>v. Some (s v))", "by (metis (full_types) domIff map_le_def map_le_substate_conv option.distinct(1) part_def paval_aval2 subsetI)"], ["", "lemma full_to_part: \"(C, s) \\<Rightarrow> m \\<Down> s' \\<Longrightarrow>  (C, part s) \\<Rightarrow>\\<^sub>A m \\<Down> part s' \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, s) \\<Rightarrow> m \\<Down> s' \\<Longrightarrow>\n    (C, part s) \\<Rightarrow>\\<^sub>A m \\<Down> part s'", "apply(induct rule: big_step_t_induct)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>s. (SKIP, part s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> part s\n 2. \\<And>x a s.\n       (x ::= a,\n        part s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> part (s(x := aval a s))\n 3. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow> x \\<Down> s2;\n        (c1, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (c2, s2) \\<Rightarrow> y \\<Down> s3;\n        (c2, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        z = x + y\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          part s1) \\<Rightarrow>\\<^sub>A z \\<Down> part s3\n 4. \\<And>b s c1 x t y c2.\n       \\<lbrakk>bval b s; (c1, s) \\<Rightarrow> x \\<Down> t;\n        (c1, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A y \\<Down> part t\n 5. \\<And>b s c2 x t y c1.\n       \\<lbrakk>\\<not> bval b s; (c2, s) \\<Rightarrow> x \\<Down> t;\n        (c2, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A y \\<Down> part t\n 6. \\<And>b s c.\n       \\<not> bval b s \\<Longrightarrow>\n       (WHILE b DO c, part s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> part s\n 7. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        1 + x + y = z\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part s1) \\<Rightarrow>\\<^sub>A z \\<Down> part s3", "using Skip"], ["proof (prove)\nusing this:\n  (SKIP, ?s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ?s\n\ngoal (7 subgoals):\n 1. \\<And>s. (SKIP, part s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> part s\n 2. \\<And>x a s.\n       (x ::= a,\n        part s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> part (s(x := aval a s))\n 3. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow> x \\<Down> s2;\n        (c1, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (c2, s2) \\<Rightarrow> y \\<Down> s3;\n        (c2, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        z = x + y\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          part s1) \\<Rightarrow>\\<^sub>A z \\<Down> part s3\n 4. \\<And>b s c1 x t y c2.\n       \\<lbrakk>bval b s; (c1, s) \\<Rightarrow> x \\<Down> t;\n        (c1, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A y \\<Down> part t\n 5. \\<And>b s c2 x t y c1.\n       \\<lbrakk>\\<not> bval b s; (c2, s) \\<Rightarrow> x \\<Down> t;\n        (c2, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A y \\<Down> part t\n 6. \\<And>b s c.\n       \\<not> bval b s \\<Longrightarrow>\n       (WHILE b DO c, part s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> part s\n 7. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        1 + x + y = z\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part s1) \\<Rightarrow>\\<^sub>A z \\<Down> part s3", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x a s.\n       (x ::= a,\n        part s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> part (s(x := aval a s))\n 2. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow> x \\<Down> s2;\n        (c1, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (c2, s2) \\<Rightarrow> y \\<Down> s3;\n        (c2, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        z = x + y\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          part s1) \\<Rightarrow>\\<^sub>A z \\<Down> part s3\n 3. \\<And>b s c1 x t y c2.\n       \\<lbrakk>bval b s; (c1, s) \\<Rightarrow> x \\<Down> t;\n        (c1, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A y \\<Down> part t\n 4. \\<And>b s c2 x t y c1.\n       \\<lbrakk>\\<not> bval b s; (c2, s) \\<Rightarrow> x \\<Down> t;\n        (c2, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A y \\<Down> part t\n 5. \\<And>b s c.\n       \\<not> bval b s \\<Longrightarrow>\n       (WHILE b DO c, part s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> part s\n 6. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        1 + x + y = z\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part s1) \\<Rightarrow>\\<^sub>A z \\<Down> part s3", "apply (subst Assign)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>x a s. vars a \\<union> {x} \\<subseteq> dom (part s)\n 2. \\<And>x a s. paval a (part s) = ?v10 x a s\n 3. \\<And>x a s. part (s(x := aval a s)) = part s(x \\<mapsto> ?v10 x a s)\n 4. \\<And>x a s. True\n 5. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow> x \\<Down> s2;\n        (c1, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (c2, s2) \\<Rightarrow> y \\<Down> s3;\n        (c2, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        z = x + y\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          part s1) \\<Rightarrow>\\<^sub>A z \\<Down> part s3\n 6. \\<And>b s c1 x t y c2.\n       \\<lbrakk>bval b s; (c1, s) \\<Rightarrow> x \\<Down> t;\n        (c1, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A y \\<Down> part t\n 7. \\<And>b s c2 x t y c1.\n       \\<lbrakk>\\<not> bval b s; (c2, s) \\<Rightarrow> x \\<Down> t;\n        (c2, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A y \\<Down> part t\n 8. \\<And>b s c.\n       \\<not> bval b s \\<Longrightarrow>\n       (WHILE b DO c, part s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> part s\n 9. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        1 + x + y = z\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part s1) \\<Rightarrow>\\<^sub>A z \\<Down> part s3", "using part_paval_aval"], ["proof (prove)\nusing this:\n  part (?s(?x := aval ?a ?s)) = part ?s(?x \\<mapsto> paval ?a (part ?s))\n\ngoal (9 subgoals):\n 1. \\<And>x a s. vars a \\<union> {x} \\<subseteq> dom (part s)\n 2. \\<And>x a s. paval a (part s) = ?v10 x a s\n 3. \\<And>x a s. part (s(x := aval a s)) = part s(x \\<mapsto> ?v10 x a s)\n 4. \\<And>x a s. True\n 5. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow> x \\<Down> s2;\n        (c1, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (c2, s2) \\<Rightarrow> y \\<Down> s3;\n        (c2, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        z = x + y\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          part s1) \\<Rightarrow>\\<^sub>A z \\<Down> part s3\n 6. \\<And>b s c1 x t y c2.\n       \\<lbrakk>bval b s; (c1, s) \\<Rightarrow> x \\<Down> t;\n        (c1, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A y \\<Down> part t\n 7. \\<And>b s c2 x t y c1.\n       \\<lbrakk>\\<not> bval b s; (c2, s) \\<Rightarrow> x \\<Down> t;\n        (c2, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A y \\<Down> part t\n 8. \\<And>b s c.\n       \\<not> bval b s \\<Longrightarrow>\n       (WHILE b DO c, part s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> part s\n 9. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        1 + x + y = z\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part s1) \\<Rightarrow>\\<^sub>A z \\<Down> part s3", "apply(simp_all add: )"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow> x \\<Down> s2;\n        (c1, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (c2, s2) \\<Rightarrow> y \\<Down> s3;\n        (c2, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3; z = x + y;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          part\n                           s1) \\<Rightarrow>\\<^sub>A x + y \\<Down> part s3\n 2. \\<And>b s c1 x t y c2.\n       \\<lbrakk>bval b s; (c1, s) \\<Rightarrow> x \\<Down> t;\n        (c1, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t; y = Suc x;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A Suc x \\<Down> part t\n 3. \\<And>b s c2 x t y c1.\n       \\<lbrakk>\\<not> bval b s; (c2, s) \\<Rightarrow> x \\<Down> t;\n        (c2, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t; y = Suc x;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A Suc x \\<Down> part t\n 4. \\<And>b s c.\n       \\<lbrakk>\\<not> bval b s;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> part s\n 5. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        Suc (x + y) = z;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part s1) \\<Rightarrow>\\<^sub>A z \\<Down> part s3", "apply(rule Seq)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow> x \\<Down> s2;\n        (c1, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (c2, s2) \\<Rightarrow> y \\<Down> s3;\n        (c2, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3; z = x + y;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (c1,\n                          part\n                           s1) \\<Rightarrow>\\<^sub>A ?x31 c1 s1 x s2 c2 y s3\n                z \\<Down> ?s2.31 c1 s1 x s2 c2 y s3 z\n 2. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow> x \\<Down> s2;\n        (c1, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (c2, s2) \\<Rightarrow> y \\<Down> s3;\n        (c2, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3; z = x + y;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (c2,\n                          ?s2.31 c1 s1 x s2 c2 y s3\n                           z) \\<Rightarrow>\\<^sub>A ?y31 c1 s1 x s2 c2 y s3\n               z \\<Down> part s3\n 3. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow> x \\<Down> s2;\n        (c1, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (c2, s2) \\<Rightarrow> y \\<Down> s3;\n        (c2, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3; z = x + y;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> x + y =\n                         ?x31 c1 s1 x s2 c2 y s3 z +\n                         ?y31 c1 s1 x s2 c2 y s3 z\n 4. \\<And>b s c1 x t y c2.\n       \\<lbrakk>bval b s; (c1, s) \\<Rightarrow> x \\<Down> t;\n        (c1, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t; y = Suc x;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A Suc x \\<Down> part t\n 5. \\<And>b s c2 x t y c1.\n       \\<lbrakk>\\<not> bval b s; (c2, s) \\<Rightarrow> x \\<Down> t;\n        (c2, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t; y = Suc x;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A Suc x \\<Down> part t\n 6. \\<And>b s c.\n       \\<lbrakk>\\<not> bval b s;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> part s\n 7. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        Suc (x + y) = z;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part s1) \\<Rightarrow>\\<^sub>A z \\<Down> part s3", "apply auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b s c1 x t c2.\n       \\<lbrakk>bval b s; (c1, s) \\<Rightarrow> x \\<Down> t;\n        (c1, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A Suc x \\<Down> part t\n 2. \\<And>b s c2 x t c1.\n       \\<lbrakk>\\<not> bval b s; (c2, s) \\<Rightarrow> x \\<Down> t;\n        (c2, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A Suc x \\<Down> part t\n 3. \\<And>b s c.\n       \\<lbrakk>\\<not> bval b s;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> part s\n 4. \\<And>b s1 c x s2 y s3.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part\n                           s1) \\<Rightarrow>\\<^sub>A Suc\n                (x + y) \\<Down> part s3", "apply(rule IfTrue)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>b s c1 x t c2.\n       \\<lbrakk>bval b s; (c1, s) \\<Rightarrow> x \\<Down> t;\n        (c1, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> vars b \\<subseteq> dom (part s)\n 2. \\<And>b s c1 x t c2.\n       \\<lbrakk>bval b s; (c1, s) \\<Rightarrow> x \\<Down> t;\n        (c1, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> dom (part t) = dom (part s)\n 3. \\<And>b s c1 x t c2.\n       \\<lbrakk>bval b s; (c1, s) \\<Rightarrow> x \\<Down> t;\n        (c1, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> pbval b (part s)\n 4. \\<And>b s c1 x t c2.\n       \\<lbrakk>bval b s; (c1, s) \\<Rightarrow> x \\<Down> t;\n        (c1, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (c1,\n                          part\n                           s) \\<Rightarrow>\\<^sub>A ?x40 b s c1 x t\n               c2 \\<Down> part t\n 5. \\<And>b s c1 x t c2.\n       \\<lbrakk>bval b s; (c1, s) \\<Rightarrow> x \\<Down> t;\n        (c1, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> Suc x = ?x40 b s c1 x t c2 + 1\n 6. \\<And>b s c2 x t c1.\n       \\<lbrakk>\\<not> bval b s; (c2, s) \\<Rightarrow> x \\<Down> t;\n        (c2, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A Suc x \\<Down> part t\n 7. \\<And>b s c.\n       \\<lbrakk>\\<not> bval b s;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> part s\n 8. \\<And>b s1 c x s2 y s3.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part\n                           s1) \\<Rightarrow>\\<^sub>A Suc\n                (x + y) \\<Down> part s3", "apply (auto simp: pbval_bval_part)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b s c2 x t c1.\n       \\<lbrakk>\\<not> bval b s; (c2, s) \\<Rightarrow> x \\<Down> t;\n        (c2, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          part s) \\<Rightarrow>\\<^sub>A Suc x \\<Down> part t\n 2. \\<And>b s c.\n       \\<lbrakk>\\<not> bval b s;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> part s\n 3. \\<And>b s1 c x s2 y s3.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part\n                           s1) \\<Rightarrow>\\<^sub>A Suc\n                (x + y) \\<Down> part s3", "apply(rule IfFalse)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>b s c2 x t c1.\n       \\<lbrakk>\\<not> bval b s; (c2, s) \\<Rightarrow> x \\<Down> t;\n        (c2, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> vars b \\<subseteq> dom (part s)\n 2. \\<And>b s c2 x t c1.\n       \\<lbrakk>\\<not> bval b s; (c2, s) \\<Rightarrow> x \\<Down> t;\n        (c2, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> dom (part t) = dom (part s)\n 3. \\<And>b s c2 x t c1.\n       \\<lbrakk>\\<not> bval b s; (c2, s) \\<Rightarrow> x \\<Down> t;\n        (c2, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> \\<not> pbval b (part s)\n 4. \\<And>b s c2 x t c1.\n       \\<lbrakk>\\<not> bval b s; (c2, s) \\<Rightarrow> x \\<Down> t;\n        (c2, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (c2,\n                          part\n                           s) \\<Rightarrow>\\<^sub>A ?x47 b s c2 x t\n               c1 \\<Down> part t\n 5. \\<And>b s c2 x t c1.\n       \\<lbrakk>\\<not> bval b s; (c2, s) \\<Rightarrow> x \\<Down> t;\n        (c2, part s) \\<Rightarrow>\\<^sub>A x \\<Down> part t;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> Suc x = ?x47 b s c2 x t c1 + 1\n 6. \\<And>b s c.\n       \\<lbrakk>\\<not> bval b s;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> part s\n 7. \\<And>b s1 c x s2 y s3.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part\n                           s1) \\<Rightarrow>\\<^sub>A Suc\n                (x + y) \\<Down> part s3", "apply (auto simp: pbval_bval_part)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b s c.\n       \\<lbrakk>\\<not> bval b s;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> part s\n 2. \\<And>b s1 c x s2 y s3.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part\n                           s1) \\<Rightarrow>\\<^sub>A Suc\n                (x + y) \\<Down> part s3", "apply(rule WhileFalse)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b s c.\n       \\<lbrakk>\\<not> bval b s;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> vars b \\<subseteq> dom (part s)\n 2. \\<And>b s c.\n       \\<lbrakk>\\<not> bval b s;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> \\<not> pbval b (part s)\n 3. \\<And>b s1 c x s2 y s3.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part\n                           s1) \\<Rightarrow>\\<^sub>A Suc\n                (x + y) \\<Down> part s3", "apply (auto simp: pbval_bval_part)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b s1 c x s2 y s3.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          part\n                           s1) \\<Rightarrow>\\<^sub>A Suc\n                (x + y) \\<Down> part s3", "apply(rule WhileTrue)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>b s1 c x s2 y s3.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> pbval b (part s1)\n 2. \\<And>b s1 c x s2 y s3.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> vars b \\<subseteq> dom (part s1)\n 3. \\<And>b s1 c x s2 y s3.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (c, part\n                              s1) \\<Rightarrow>\\<^sub>A ?x57 b s1 c x s2 y\n                   s3 \\<Down> ?s2.57 b s1 c x s2 y s3\n 4. \\<And>b s1 c x s2 y s3.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          ?s2.57 b s1 c x s2 y\n                           s3) \\<Rightarrow>\\<^sub>A ?y57 b s1 c x s2 y\n                s3 \\<Down> part s3\n 5. \\<And>b s1 c x s2 y s3.\n       \\<lbrakk>bval b s1; (c, s1) \\<Rightarrow> x \\<Down> s2;\n        (c, part s1) \\<Rightarrow>\\<^sub>A x \\<Down> part s2;\n        (WHILE b DO c, s2) \\<Rightarrow> y \\<Down> s3;\n        (WHILE b DO c, part s2) \\<Rightarrow>\\<^sub>A y \\<Down> part s3;\n        \\<And>s x a.\n           part (s(x := aval a s)) = part s(x \\<mapsto>\n           paval a (part s))\\<rbrakk>\n       \\<Longrightarrow> 1 + ?x57 b s1 c x s2 y s3 + ?y57 b s1 c x s2 y s3 =\n                         Suc (x + y)", "apply (auto simp: pbval_bval_part)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma part_to_full': \"(C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<Longrightarrow> (C, emb ps s) \\<Rightarrow> m \\<Down> emb ps' s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<Longrightarrow>\n    (C, emb ps s) \\<Rightarrow> m \\<Down> emb ps' s", "proof (induct rule: big_step_t_part_induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>sa. (SKIP, emb sa s) \\<Rightarrow> Suc 0 \\<Down> emb sa s\n 2. \\<And>a x ps v ps'.\n       \\<lbrakk>vars a \\<union> {x} \\<subseteq> dom ps; paval a ps = v;\n        ps' = ps(x \\<mapsto> v)\\<rbrakk>\n       \\<Longrightarrow> (x ::= a,\n                          emb ps s) \\<Rightarrow> Suc 0 \\<Down> emb ps' s\n 3. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        (c1, emb s1 s) \\<Rightarrow> x \\<Down> emb s2 s;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        (c2, emb s2 s) \\<Rightarrow> y \\<Down> emb s3 s; z = x + y\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          emb s1 s) \\<Rightarrow> z \\<Down> emb s3 s\n 4. \\<And>b ps ps' c1 x y c2.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c1, emb ps s) \\<Rightarrow> x \\<Down> emb ps' s; y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          emb ps s) \\<Rightarrow> y \\<Down> emb ps' s\n 5. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c2, emb ps s) \\<Rightarrow> x \\<Down> emb ps' s; y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          emb ps s) \\<Rightarrow> y \\<Down> emb ps' s\n 6. \\<And>b sa c.\n       \\<lbrakk>vars b \\<subseteq> dom sa; \\<not> pbval b sa\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          emb sa s) \\<Rightarrow> Suc 0 \\<Down> emb sa s\n 7. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        (c, emb s1 s) \\<Rightarrow> x \\<Down> emb s2 s;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        (WHILE b DO c, emb s2 s) \\<Rightarrow> y \\<Down> emb s3 s;\n        1 + x + y = z\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          emb s1 s) \\<Rightarrow> z \\<Down> emb s3 s", "case (Assign a x ps v ps')"], ["proof (state)\nthis:\n  vars a \\<union> {x} \\<subseteq> dom ps\n  paval a ps = v\n  ps' = ps(x \\<mapsto> v)\n\ngoal (7 subgoals):\n 1. \\<And>sa. (SKIP, emb sa s) \\<Rightarrow> Suc 0 \\<Down> emb sa s\n 2. \\<And>a x ps v ps'.\n       \\<lbrakk>vars a \\<union> {x} \\<subseteq> dom ps; paval a ps = v;\n        ps' = ps(x \\<mapsto> v)\\<rbrakk>\n       \\<Longrightarrow> (x ::= a,\n                          emb ps s) \\<Rightarrow> Suc 0 \\<Down> emb ps' s\n 3. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        (c1, emb s1 s) \\<Rightarrow> x \\<Down> emb s2 s;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        (c2, emb s2 s) \\<Rightarrow> y \\<Down> emb s3 s; z = x + y\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          emb s1 s) \\<Rightarrow> z \\<Down> emb s3 s\n 4. \\<And>b ps ps' c1 x y c2.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c1, emb ps s) \\<Rightarrow> x \\<Down> emb ps' s; y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          emb ps s) \\<Rightarrow> y \\<Down> emb ps' s\n 5. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c2, emb ps s) \\<Rightarrow> x \\<Down> emb ps' s; y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          emb ps s) \\<Rightarrow> y \\<Down> emb ps' s\n 6. \\<And>b sa c.\n       \\<lbrakk>vars b \\<subseteq> dom sa; \\<not> pbval b sa\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          emb sa s) \\<Rightarrow> Suc 0 \\<Down> emb sa s\n 7. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        (c, emb s1 s) \\<Rightarrow> x \\<Down> emb s2 s;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        (WHILE b DO c, emb s2 s) \\<Rightarrow> y \\<Down> emb s3 s;\n        1 + x + y = z\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          emb s1 s) \\<Rightarrow> z \\<Down> emb s3 s", "have z: \"paval a ps = aval a (emb ps s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. paval a ps = aval a (emb ps s)", "apply(rule paval_aval_vars)"], ["proof (prove)\ngoal (1 subgoal):\n 1. vars a \\<subseteq> dom ps", "using Assign(1)"], ["proof (prove)\nusing this:\n  vars a \\<union> {x} \\<subseteq> dom ps\n\ngoal (1 subgoal):\n 1. vars a \\<subseteq> dom ps", "by auto"], ["proof (state)\nthis:\n  paval a ps = aval a (emb ps s)\n\ngoal (7 subgoals):\n 1. \\<And>sa. (SKIP, emb sa s) \\<Rightarrow> Suc 0 \\<Down> emb sa s\n 2. \\<And>a x ps v ps'.\n       \\<lbrakk>vars a \\<union> {x} \\<subseteq> dom ps; paval a ps = v;\n        ps' = ps(x \\<mapsto> v)\\<rbrakk>\n       \\<Longrightarrow> (x ::= a,\n                          emb ps s) \\<Rightarrow> Suc 0 \\<Down> emb ps' s\n 3. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        (c1, emb s1 s) \\<Rightarrow> x \\<Down> emb s2 s;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        (c2, emb s2 s) \\<Rightarrow> y \\<Down> emb s3 s; z = x + y\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          emb s1 s) \\<Rightarrow> z \\<Down> emb s3 s\n 4. \\<And>b ps ps' c1 x y c2.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c1, emb ps s) \\<Rightarrow> x \\<Down> emb ps' s; y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          emb ps s) \\<Rightarrow> y \\<Down> emb ps' s\n 5. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c2, emb ps s) \\<Rightarrow> x \\<Down> emb ps' s; y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          emb ps s) \\<Rightarrow> y \\<Down> emb ps' s\n 6. \\<And>b sa c.\n       \\<lbrakk>vars b \\<subseteq> dom sa; \\<not> pbval b sa\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          emb sa s) \\<Rightarrow> Suc 0 \\<Down> emb sa s\n 7. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        (c, emb s1 s) \\<Rightarrow> x \\<Down> emb s2 s;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        (WHILE b DO c, emb s2 s) \\<Rightarrow> y \\<Down> emb s3 s;\n        1 + x + y = z\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          emb s1 s) \\<Rightarrow> z \\<Down> emb s3 s", "have g :\"emb ps' s = (emb ps s)(x:=aval a (emb ps s) )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emb ps' s = (emb ps s)(x := aval a (emb ps s))", "apply(simp only: Assign z[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. emb (ps(x \\<mapsto> v)) s = (emb ps s)(x := v)", "unfolding emb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>va.\n        case (ps(x \\<mapsto> v)) va of None \\<Rightarrow> s va\n        | Some r \\<Rightarrow> r) =\n    (\\<lambda>v.\n        case ps v of None \\<Rightarrow> s v | Some r \\<Rightarrow> r)\n    (x := v)", "by auto"], ["proof (state)\nthis:\n  emb ps' s = (emb ps s)(x := aval a (emb ps s))\n\ngoal (7 subgoals):\n 1. \\<And>sa. (SKIP, emb sa s) \\<Rightarrow> Suc 0 \\<Down> emb sa s\n 2. \\<And>a x ps v ps'.\n       \\<lbrakk>vars a \\<union> {x} \\<subseteq> dom ps; paval a ps = v;\n        ps' = ps(x \\<mapsto> v)\\<rbrakk>\n       \\<Longrightarrow> (x ::= a,\n                          emb ps s) \\<Rightarrow> Suc 0 \\<Down> emb ps' s\n 3. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        (c1, emb s1 s) \\<Rightarrow> x \\<Down> emb s2 s;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        (c2, emb s2 s) \\<Rightarrow> y \\<Down> emb s3 s; z = x + y\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          emb s1 s) \\<Rightarrow> z \\<Down> emb s3 s\n 4. \\<And>b ps ps' c1 x y c2.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c1, emb ps s) \\<Rightarrow> x \\<Down> emb ps' s; y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          emb ps s) \\<Rightarrow> y \\<Down> emb ps' s\n 5. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c2, emb ps s) \\<Rightarrow> x \\<Down> emb ps' s; y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          emb ps s) \\<Rightarrow> y \\<Down> emb ps' s\n 6. \\<And>b sa c.\n       \\<lbrakk>vars b \\<subseteq> dom sa; \\<not> pbval b sa\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          emb sa s) \\<Rightarrow> Suc 0 \\<Down> emb sa s\n 7. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        (c, emb s1 s) \\<Rightarrow> x \\<Down> emb s2 s;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        (WHILE b DO c, emb s2 s) \\<Rightarrow> y \\<Down> emb s3 s;\n        1 + x + y = z\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          emb s1 s) \\<Rightarrow> z \\<Down> emb s3 s", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ::= a, emb ps s) \\<Rightarrow> Suc 0 \\<Down> emb ps' s", "apply(simp only: g)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ::= a, emb ps s) \\<Rightarrow> Suc 0 \\<Down> (emb ps s)\n    (x := aval a (emb ps s))", "by(rule big_step_t.Assign)"], ["proof (state)\nthis:\n  (x ::= a, emb ps s) \\<Rightarrow> Suc 0 \\<Down> emb ps' s\n\ngoal (6 subgoals):\n 1. \\<And>sa. (SKIP, emb sa s) \\<Rightarrow> Suc 0 \\<Down> emb sa s\n 2. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        (c1, emb s1 s) \\<Rightarrow> x \\<Down> emb s2 s;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        (c2, emb s2 s) \\<Rightarrow> y \\<Down> emb s3 s; z = x + y\\<rbrakk>\n       \\<Longrightarrow> (c1;; c2,\n                          emb s1 s) \\<Rightarrow> z \\<Down> emb s3 s\n 3. \\<And>b ps ps' c1 x y c2.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c1, emb ps s) \\<Rightarrow> x \\<Down> emb ps' s; y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          emb ps s) \\<Rightarrow> y \\<Down> emb ps' s\n 4. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        (c2, emb ps s) \\<Rightarrow> x \\<Down> emb ps' s; y = x + 1\\<rbrakk>\n       \\<Longrightarrow> (IF b THEN c1 ELSE c2,\n                          emb ps s) \\<Rightarrow> y \\<Down> emb ps' s\n 5. \\<And>b sa c.\n       \\<lbrakk>vars b \\<subseteq> dom sa; \\<not> pbval b sa\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          emb sa s) \\<Rightarrow> Suc 0 \\<Down> emb sa s\n 6. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        (c, emb s1 s) \\<Rightarrow> x \\<Down> emb s2 s;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        (WHILE b DO c, emb s2 s) \\<Rightarrow> y \\<Down> emb s3 s;\n        1 + x + y = z\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c,\n                          emb s1 s) \\<Rightarrow> z \\<Down> emb s3 s", "qed (auto simp: pbval_bval_vars[symmetric])"], ["", "lemma part_to_full: \"(C, part s) \\<Rightarrow>\\<^sub>A m \\<Down> part s' \\<Longrightarrow> (C, s) \\<Rightarrow> m \\<Down> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, part s) \\<Rightarrow>\\<^sub>A m \\<Down> part s' \\<Longrightarrow>\n    (C, s) \\<Rightarrow> m \\<Down> s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (C, part s) \\<Rightarrow>\\<^sub>A m \\<Down> part s' \\<Longrightarrow>\n    (C, s) \\<Rightarrow> m \\<Down> s'", "assume \"(C, part s) \\<Rightarrow>\\<^sub>A m \\<Down> part s'\""], ["proof (state)\nthis:\n  (C, part s) \\<Rightarrow>\\<^sub>A m \\<Down> part s'\n\ngoal (1 subgoal):\n 1. (C, part s) \\<Rightarrow>\\<^sub>A m \\<Down> part s' \\<Longrightarrow>\n    (C, s) \\<Rightarrow> m \\<Down> s'", "then"], ["proof (chain)\npicking this:\n  (C, part s) \\<Rightarrow>\\<^sub>A m \\<Down> part s'", "have \"(C, emb (part s) s) \\<Rightarrow> m \\<Down> emb (part s') s\""], ["proof (prove)\nusing this:\n  (C, part s) \\<Rightarrow>\\<^sub>A m \\<Down> part s'\n\ngoal (1 subgoal):\n 1. (C, emb (part s) s) \\<Rightarrow> m \\<Down> emb (part s') s", "by (rule part_to_full')"], ["proof (state)\nthis:\n  (C, emb (part s) s) \\<Rightarrow> m \\<Down> emb (part s') s\n\ngoal (1 subgoal):\n 1. (C, part s) \\<Rightarrow>\\<^sub>A m \\<Down> part s' \\<Longrightarrow>\n    (C, s) \\<Rightarrow> m \\<Down> s'", "then"], ["proof (chain)\npicking this:\n  (C, emb (part s) s) \\<Rightarrow> m \\<Down> emb (part s') s", "show \"(C, s) \\<Rightarrow> m \\<Down> s'\""], ["proof (prove)\nusing this:\n  (C, emb (part s) s) \\<Rightarrow> m \\<Down> emb (part s') s\n\ngoal (1 subgoal):\n 1. (C, s) \\<Rightarrow> m \\<Down> s'", "by auto"], ["proof (state)\nthis:\n  (C, s) \\<Rightarrow> m \\<Down> s'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma part_full_equiv: \"(C, s) \\<Rightarrow> m \\<Down> s' \\<longleftrightarrow> (C, part s) \\<Rightarrow>\\<^sub>A m \\<Down> part s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, s) \\<Rightarrow> m \\<Down> s' =\n    (C, part s) \\<Rightarrow>\\<^sub>A m \\<Down> part s'", "using part_to_full full_to_part"], ["proof (prove)\nusing this:\n  (?C, part ?s) \\<Rightarrow>\\<^sub>A ?m \\<Down> part ?s' \\<Longrightarrow>\n  (?C, ?s) \\<Rightarrow> ?m \\<Down> ?s'\n  (?C, ?s) \\<Rightarrow> ?m \\<Down> ?s' \\<Longrightarrow>\n  (?C, part ?s) \\<Rightarrow>\\<^sub>A ?m \\<Down> part ?s'\n\ngoal (1 subgoal):\n 1. (C, s) \\<Rightarrow> m \\<Down> s' =\n    (C, part s) \\<Rightarrow>\\<^sub>A m \\<Down> part s'", "by metis"], ["", "subsubsection \\<open>more properties\\<close>"], ["", "lemma big_step_t3_gt0: \"(C, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps' \\<Longrightarrow> x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps' \\<Longrightarrow> 0 < x", "apply(induct rule: big_step_t_part_induct)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>s. 0 < Suc 0\n 2. \\<And>a x ps v ps'.\n       \\<lbrakk>vars a \\<union> {x} \\<subseteq> dom ps; paval a ps = v;\n        ps' = ps(x \\<mapsto> v)\\<rbrakk>\n       \\<Longrightarrow> 0 < Suc 0\n 3. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2; 0 < x;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3; 0 < y;\n        z = x + y\\<rbrakk>\n       \\<Longrightarrow> 0 < z\n 4. \\<And>b ps ps' c1 x y c2.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps'; 0 < x;\n        y = x + 1\\<rbrakk>\n       \\<Longrightarrow> 0 < y\n 5. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        0 < x; y = x + 1\\<rbrakk>\n       \\<Longrightarrow> 0 < y\n 6. \\<And>b s c.\n       \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s\\<rbrakk>\n       \\<Longrightarrow> 0 < Suc 0\n 7. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2; 0 < x;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3; 0 < y;\n        1 + x + y = z\\<rbrakk>\n       \\<Longrightarrow> 0 < z", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma big_step_t3_same: \"(C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' ==>  ps = ps' on UNIV - lvars C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<Longrightarrow>\n    ps = ps' on UNIV - lvars C", "apply(induct rule: big_step_t_part_induct)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>s. s = s on UNIV - lvars SKIP\n 2. \\<And>a x ps v ps'.\n       \\<lbrakk>vars a \\<union> {x} \\<subseteq> dom ps; paval a ps = v;\n        ps' = ps(x \\<mapsto> v)\\<rbrakk>\n       \\<Longrightarrow> ps = ps' on UNIV - lvars (x ::= a)\n 3. \\<And>c1 s1 x s2 c2 y s3 z.\n       \\<lbrakk>(c1, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 = s2 on UNIV - lvars c1;\n        (c2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 = s3 on UNIV - lvars c2; z = x + y\\<rbrakk>\n       \\<Longrightarrow> s1 = s3 on UNIV - lvars (c1;; c2)\n 4. \\<And>b ps ps' c1 x y c2.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps; pbval b ps;\n        (c1, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps = ps' on UNIV - lvars c1; y = x + 1\\<rbrakk>\n       \\<Longrightarrow> ps = ps' on UNIV - lvars (IF b THEN c1 ELSE c2)\n 5. \\<And>b ps ps' c2 x y c1.\n       \\<lbrakk>vars b \\<subseteq> dom ps; dom ps' = dom ps;\n        \\<not> pbval b ps; (c2, ps) \\<Rightarrow>\\<^sub>A x \\<Down> ps';\n        ps = ps' on UNIV - lvars c2; y = x + 1\\<rbrakk>\n       \\<Longrightarrow> ps = ps' on UNIV - lvars (IF b THEN c1 ELSE c2)\n 6. \\<And>b s c.\n       \\<lbrakk>vars b \\<subseteq> dom s; \\<not> pbval b s\\<rbrakk>\n       \\<Longrightarrow> s = s on UNIV - lvars (WHILE b DO c)\n 7. \\<And>b s1 c x s2 y s3 z.\n       \\<lbrakk>pbval b s1; vars b \\<subseteq> dom s1;\n        (c, s1) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        s1 = s2 on UNIV - lvars c;\n        (WHILE b DO c, s2) \\<Rightarrow>\\<^sub>A y \\<Down> s3;\n        s2 = s3 on UNIV - lvars (WHILE b DO c); 1 + x + y = z\\<rbrakk>\n       \\<Longrightarrow> s1 = s3 on UNIV - lvars (WHILE b DO c)", "by (auto simp: sep_disj_fun_def plus_fun_def)"], ["", "lemma avalDirekt3_correct: \" (x ::= N v, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<Longrightarrow> paval' a ps = Some v \\<Longrightarrow>  (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x ::= N v, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps';\n     paval' a ps = Some v\\<rbrakk>\n    \\<Longrightarrow> (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps'", "apply(auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>paval' a ps = Some v; ps' = ps(x \\<mapsto> v); m = Suc 0;\n        ps x = Some y\\<rbrakk>\n       \\<Longrightarrow> (x ::= a,\n                          ps) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps\n                         (x \\<mapsto> v)", "apply(subst Assign)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>paval' a ps = Some v; ps' = ps(x \\<mapsto> v); m = Suc 0;\n        ps x = Some y\\<rbrakk>\n       \\<Longrightarrow> vars a \\<union> {x} \\<subseteq> dom ps\n 2. \\<And>y.\n       \\<lbrakk>paval' a ps = Some v; ps' = ps(x \\<mapsto> v); m = Suc 0;\n        ps x = Some y\\<rbrakk>\n       \\<Longrightarrow> paval a ps = ?v6 y\n 3. \\<And>y.\n       \\<lbrakk>paval' a ps = Some v; ps' = ps(x \\<mapsto> v); m = Suc 0;\n        ps x = Some y\\<rbrakk>\n       \\<Longrightarrow> ps(x \\<mapsto> v) = ps(x \\<mapsto> ?v6 y)\n 4. \\<And>y.\n       \\<lbrakk>paval' a ps = Some v; ps' = ps(x \\<mapsto> v); m = Suc 0;\n        ps x = Some y\\<rbrakk>\n       \\<Longrightarrow> True", "by (auto simp: paval_paval' paval'dom)"], ["", "subsection \\<open>Partial State\\<close>"], ["", "(* partialstate and nat is a separation algebra ! *)"], ["", "lemma\n  fixes h :: \"(vname \\<Rightarrow> val option) * nat\"\n  shows \"(P ** Q ** H) h = (Q ** H ** P) h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<and>* Q \\<and>* H) h = (Q \\<and>* H \\<and>* P) h", "by (simp add: sep_conj_ac)"], ["", "lemma separate_othogonal_commuted': assumes\n    \"\\<And>ps n. P (ps,n) \\<Longrightarrow> ps = 0\"\n    \"\\<And>ps n. Q (ps,n) \\<Longrightarrow> n = 0\"\n  shows \"(P ** Q) s \\<longleftrightarrow> P (0,snd s) \\<and> Q (fst s,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<and>* Q) s = (P (0::'a, snd s) \\<and> Q (fst s, 0::'b))", "using assms"], ["proof (prove)\nusing this:\n  P (?ps, ?n) \\<Longrightarrow> ?ps = (0::'a)\n  Q (?ps, ?n) \\<Longrightarrow> ?n = (0::'b)\n\ngoal (1 subgoal):\n 1. (P \\<and>* Q) s = (P (0::'a, snd s) \\<and> Q (fst s, 0::'b))", "unfolding sep_conj_def"], ["proof (prove)\nusing this:\n  P (?ps, ?n) \\<Longrightarrow> ?ps = (0::'a)\n  Q (?ps, ?n) \\<Longrightarrow> ?n = (0::'b)\n\ngoal (1 subgoal):\n 1. (\\<exists>x y. x ## y \\<and> s = x + y \\<and> P x \\<and> Q y) =\n    (P (0::'a, snd s) \\<and> Q (fst s, 0::'b))", "by force"], ["", "lemma separate_othogonal_commuted: assumes\n    \"\\<And>ps n. P (ps,n) \\<Longrightarrow> ps = 0\"\n    \"\\<And>ps n. Q (ps,n) \\<Longrightarrow> n = 0\"\n  shows \"(P ** Q) (ps,n) \\<longleftrightarrow> P (0,n) \\<and> Q (ps,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<and>* Q) (ps, n) = (P (0::'a, n) \\<and> Q (ps, 0::'b))", "using assms"], ["proof (prove)\nusing this:\n  P (?ps, ?n) \\<Longrightarrow> ?ps = (0::'a)\n  Q (?ps, ?n) \\<Longrightarrow> ?n = (0::'b)\n\ngoal (1 subgoal):\n 1. (P \\<and>* Q) (ps, n) = (P (0::'a, n) \\<and> Q (ps, 0::'b))", "unfolding sep_conj_def"], ["proof (prove)\nusing this:\n  P (?ps, ?n) \\<Longrightarrow> ?ps = (0::'a)\n  Q (?ps, ?n) \\<Longrightarrow> ?n = (0::'b)\n\ngoal (1 subgoal):\n 1. (\\<exists>x y. x ## y \\<and> (ps, n) = x + y \\<and> P x \\<and> Q y) =\n    (P (0::'a, n) \\<and> Q (ps, 0::'b))", "by force"], ["", "lemma separate_othogonal: assumes\n    \"\\<And>ps n. P (ps,n) \\<Longrightarrow> n = 0\"\n    \"\\<And>ps n. Q (ps,n) \\<Longrightarrow> ps = 0\"\n  shows \"(P ** Q) (ps,n) \\<longleftrightarrow> P (ps,0) \\<and> Q (0,n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<and>* Q) (ps, n) = (P (ps, 0::'b) \\<and> Q (0::'a, n))", "using assms"], ["proof (prove)\nusing this:\n  P (?ps, ?n) \\<Longrightarrow> ?n = (0::'b)\n  Q (?ps, ?n) \\<Longrightarrow> ?ps = (0::'a)\n\ngoal (1 subgoal):\n 1. (P \\<and>* Q) (ps, n) = (P (ps, 0::'b) \\<and> Q (0::'a, n))", "unfolding sep_conj_def"], ["proof (prove)\nusing this:\n  P (?ps, ?n) \\<Longrightarrow> ?n = (0::'b)\n  Q (?ps, ?n) \\<Longrightarrow> ?ps = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<exists>x y. x ## y \\<and> (ps, n) = x + y \\<and> P x \\<and> Q y) =\n    (P (ps, 0::'b) \\<and> Q (0::'a, n))", "by force"], ["", "lemma assumes \"  ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>* (\\<lambda>(s, c). s = 0 \\<and> c = Suc 0)) (ps, n)\"\nshows \"\\<exists> n'. P (ps, n') \\<and> vars b \\<subseteq> dom ps \\<and> n = Suc n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n'.\n       P (ps, n') \\<and> vars b \\<subseteq> dom ps \\<and> n = Suc n'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n'.\n       P (ps, n') \\<and> vars b \\<subseteq> dom ps \\<and> n = Suc n'", "from assms"], ["proof (chain)\npicking this:\n  ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n   (\\<lambda>(s, c). s = 0 \\<and> c = Suc 0))\n   (ps, n)", "obtain x y where \" x ## y\" and \"(ps, n) = x + y\" \n      and 2: \"(case x of (s, n) \\<Rightarrow> P (s, n) \\<and> vars b \\<subseteq>  dom s)\"\n      and \"(case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = Suc 0)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n   (\\<lambda>(s, c). s = 0 \\<and> c = Suc 0))\n   (ps, n)\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x ## y; (ps, n) = x + y;\n         case x of\n         (s, n) \\<Rightarrow> P (s, n) \\<and> vars b \\<subseteq> dom s;\n         case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = Suc 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding sep_conj_def"], ["proof (prove)\nusing this:\n  \\<exists>x y.\n     x ## y \\<and>\n     (ps, n) = x + y \\<and>\n     (case x of\n      (s, n) \\<Rightarrow> P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>\n     (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = Suc 0)\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x ## y; (ps, n) = x + y;\n         case x of\n         (s, n) \\<Rightarrow> P (s, n) \\<and> vars b \\<subseteq> dom s;\n         case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = Suc 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x ## y\n  (ps, n) = x + y\n  case x of (s, n) \\<Rightarrow> P (s, n) \\<and> vars b \\<subseteq> dom s\n  case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = Suc 0\n\ngoal (1 subgoal):\n 1. \\<exists>n'.\n       P (ps, n') \\<and> vars b \\<subseteq> dom ps \\<and> n = Suc n'", "then"], ["proof (chain)\npicking this:\n  x ## y\n  (ps, n) = x + y\n  case x of (s, n) \\<Rightarrow> P (s, n) \\<and> vars b \\<subseteq> dom s\n  case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = Suc 0", "have \"y = (0, Suc 0)\" and f: \"fst x = ps\" and n: \"n = snd x + Suc 0\""], ["proof (prove)\nusing this:\n  x ## y\n  (ps, n) = x + y\n  case x of (s, n) \\<Rightarrow> P (s, n) \\<and> vars b \\<subseteq> dom s\n  case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = Suc 0\n\ngoal (1 subgoal):\n 1. y = (0, Suc 0) &&& fst x = ps &&& n = snd x + Suc 0", "by auto"], ["proof (state)\nthis:\n  y = (0, Suc 0)\n  fst x = ps\n  n = snd x + Suc 0\n\ngoal (1 subgoal):\n 1. \\<exists>n'.\n       P (ps, n') \\<and> vars b \\<subseteq> dom ps \\<and> n = Suc n'", "with 2"], ["proof (chain)\npicking this:\n  case x of (s, n) \\<Rightarrow> P (s, n) \\<and> vars b \\<subseteq> dom s\n  y = (0, Suc 0)\n  fst x = ps\n  n = snd x + Suc 0", "have \"P (ps, snd x) \\<and> vars b \\<subseteq> dom ps \\<and> n = Suc (snd x)\""], ["proof (prove)\nusing this:\n  case x of (s, n) \\<Rightarrow> P (s, n) \\<and> vars b \\<subseteq> dom s\n  y = (0, Suc 0)\n  fst x = ps\n  n = snd x + Suc 0\n\ngoal (1 subgoal):\n 1. P (ps, snd x) \\<and> vars b \\<subseteq> dom ps \\<and> n = Suc (snd x)", "by auto"], ["proof (state)\nthis:\n  P (ps, snd x) \\<and> vars b \\<subseteq> dom ps \\<and> n = Suc (snd x)\n\ngoal (1 subgoal):\n 1. \\<exists>n'.\n       P (ps, n') \\<and> vars b \\<subseteq> dom ps \\<and> n = Suc n'", "then"], ["proof (chain)\npicking this:\n  P (ps, snd x) \\<and> vars b \\<subseteq> dom ps \\<and> n = Suc (snd x)", "show ?thesis"], ["proof (prove)\nusing this:\n  P (ps, snd x) \\<and> vars b \\<subseteq> dom ps \\<and> n = Suc (snd x)\n\ngoal (1 subgoal):\n 1. \\<exists>n'.\n       P (ps, n') \\<and> vars b \\<subseteq> dom ps \\<and> n = Suc n'", "by simp"], ["proof (state)\nthis:\n  \\<exists>n'. P (ps, n') \\<and> vars b \\<subseteq> dom ps \\<and> n = Suc n'\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Dollar and Pointsto\\<close>"], ["", "definition dollar :: \"nat \\<Rightarrow> assn2\" (\"$\") where\n  \"dollar q = (%(s,c). s = 0 \\<and> c=q)\""], ["", "lemma sep_reorder_dollar_aux:  \n    \"NO_MATCH ($X) A \\<Longrightarrow> ($B ** A) = (A ** $B)\"   \n    \"($X ** $Y) = $(X+Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (NO_MATCH ($ X) A \\<Longrightarrow>\n     ($ B \\<and>* A) = (A \\<and>* $ B)) &&&\n    ($ X \\<and>* $ Y) = $ (X + Y)", "apply (auto simp: sep_simplify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($ X \\<and>* $ Y) = $ (X + Y)", "unfolding dollar_def sep_conj_def sep_disj_prod_def sep_disj_nat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>h.\n        \\<exists>x y.\n           (fst x ## fst y \\<and> True) \\<and>\n           h = x + y \\<and>\n           (case x of (s, c) \\<Rightarrow> s = 0 \\<and> c = X) \\<and>\n           (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = Y)) =\n    (\\<lambda>(s, c). s = 0 \\<and> c = X + Y)", "by auto"], ["", "lemmas sep_reorder_dollar = sep_conj_assoc sep_reorder_dollar_aux"], ["", "lemma stardiff: assumes \"(P \\<and>* $m) (ps, n)\"\n  shows  P: \"P (ps, n - m)\" and \"m\\<le>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (ps, n - m) &&& m \\<le> n", "using assms"], ["proof (prove)\nusing this:\n  (P \\<and>* $ m) (ps, n)\n\ngoal (1 subgoal):\n 1. P (ps, n - m) &&& m \\<le> n", "unfolding sep_conj_def dollar_def"], ["proof (prove)\nusing this:\n  \\<exists>x y.\n     x ## y \\<and>\n     (ps, n) = x + y \\<and>\n     P x \\<and> (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = m)\n\ngoal (1 subgoal):\n 1. P (ps, n - m) &&& m \\<le> n", "by auto"], ["", "lemma [simp]: \"(Q ** $0) = Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Q \\<and>* $ 0) = Q", "unfolding dollar_def sep_conj_def sep_disj_prod_def sep_disj_nat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>h.\n        \\<exists>x y.\n           (fst x ## fst y \\<and> True) \\<and>\n           h = x + y \\<and>\n           Q x \\<and> (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = 0)) =\n    Q", "by auto"], ["", "definition embP :: \"(partstate \\<Rightarrow> bool) \\<Rightarrow> partstate \\<times> nat \\<Rightarrow> bool\" where \"embP P = (%(s,n). P s \\<and> n = 0)\""], ["", "lemma orthogonal_split: assumes \"(embP Q \\<and>* $ n) = (embP P \\<and>* $ m)\"   \n  shows \"(Q = P \\<and> n = m) \\<or> Q = (\\<lambda>s. False) \\<and> P = (\\<lambda>s. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q = P \\<and> n = m \\<or>\n    Q = (\\<lambda>s. False) \\<and> P = (\\<lambda>s. False)", "using assms"], ["proof (prove)\nusing this:\n  (embP Q \\<and>* $ n) = (embP P \\<and>* $ m)\n\ngoal (1 subgoal):\n 1. Q = P \\<and> n = m \\<or>\n    Q = (\\<lambda>s. False) \\<and> P = (\\<lambda>s. False)", "unfolding embP_def dollar_def"], ["proof (prove)\nusing this:\n  ((\\<lambda>(s, n). Q s \\<and> n = 0) \\<and>*\n   (\\<lambda>(s, c). s = 0 \\<and> c = n)) =\n  ((\\<lambda>(s, n). P s \\<and> n = 0) \\<and>*\n   (\\<lambda>(s, c). s = 0 \\<and> c = m))\n\ngoal (1 subgoal):\n 1. Q = P \\<and> n = m \\<or>\n    Q = (\\<lambda>s. False) \\<and> P = (\\<lambda>s. False)", "apply (auto intro!: ext)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>s x.\n       \\<lbrakk>((\\<lambda>(s, n). Q s \\<and> n = 0) \\<and>*\n                 (\\<lambda>(s, c). s = 0 \\<and> c = n)) =\n                ((\\<lambda>(s, n). P s \\<and> n = 0) \\<and>*\n                 (\\<lambda>(s, c). s = 0 \\<and> c = m));\n        Q s; Q x\\<rbrakk>\n       \\<Longrightarrow> P x\n 2. \\<And>s x.\n       \\<lbrakk>((\\<lambda>(s, n). Q s \\<and> n = 0) \\<and>*\n                 (\\<lambda>(s, c). s = 0 \\<and> c = n)) =\n                ((\\<lambda>(s, n). P s \\<and> n = 0) \\<and>*\n                 (\\<lambda>(s, c). s = 0 \\<and> c = m));\n        Q s; P x\\<rbrakk>\n       \\<Longrightarrow> Q x\n 3. \\<And>s.\n       \\<lbrakk>((\\<lambda>(s, n). Q s \\<and> n = 0) \\<and>*\n                 (\\<lambda>(s, c). s = 0 \\<and> c = n)) =\n                ((\\<lambda>(s, n). P s \\<and> n = 0) \\<and>*\n                 (\\<lambda>(s, c). s = 0 \\<and> c = m));\n        n \\<noteq> m; Q s\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>s x.\n       \\<lbrakk>((\\<lambda>(s, n). Q s \\<and> n = 0) \\<and>*\n                 (\\<lambda>(s, c). s = 0 \\<and> c = n)) =\n                ((\\<lambda>(s, n). P s \\<and> n = 0) \\<and>*\n                 (\\<lambda>(s, c). s = 0 \\<and> c = m));\n        P s; Q x\\<rbrakk>\n       \\<Longrightarrow> P x\n 5. \\<And>s x.\n       \\<lbrakk>((\\<lambda>(s, n). Q s \\<and> n = 0) \\<and>*\n                 (\\<lambda>(s, c). s = 0 \\<and> c = n)) =\n                ((\\<lambda>(s, n). P s \\<and> n = 0) \\<and>*\n                 (\\<lambda>(s, c). s = 0 \\<and> c = m));\n        P s; P x\\<rbrakk>\n       \\<Longrightarrow> Q x\n 6. \\<And>s.\n       \\<lbrakk>((\\<lambda>(s, n). Q s \\<and> n = 0) \\<and>*\n                 (\\<lambda>(s, c). s = 0 \\<and> c = n)) =\n                ((\\<lambda>(s, n). P s \\<and> n = 0) \\<and>*\n                 (\\<lambda>(s, c). s = 0 \\<and> c = m));\n        n \\<noteq> m; P s\\<rbrakk>\n       \\<Longrightarrow> False", "unfolding sep_conj_def"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>s x.\n       \\<lbrakk>(\\<lambda>h.\n                    \\<exists>x y.\n                       x ## y \\<and>\n                       h = x + y \\<and>\n                       (case x of\n                        (s, n) \\<Rightarrow> Q s \\<and> n = 0) \\<and>\n                       (case y of\n                        (s, c) \\<Rightarrow> s = 0 \\<and> c = n)) =\n                (\\<lambda>h.\n                    \\<exists>x y.\n                       x ## y \\<and>\n                       h = x + y \\<and>\n                       (case x of\n                        (s, n) \\<Rightarrow> P s \\<and> n = 0) \\<and>\n                       (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = m));\n        Q s; Q x\\<rbrakk>\n       \\<Longrightarrow> P x\n 2. \\<And>s x.\n       \\<lbrakk>(\\<lambda>h.\n                    \\<exists>x y.\n                       x ## y \\<and>\n                       h = x + y \\<and>\n                       (case x of\n                        (s, n) \\<Rightarrow> Q s \\<and> n = 0) \\<and>\n                       (case y of\n                        (s, c) \\<Rightarrow> s = 0 \\<and> c = n)) =\n                (\\<lambda>h.\n                    \\<exists>x y.\n                       x ## y \\<and>\n                       h = x + y \\<and>\n                       (case x of\n                        (s, n) \\<Rightarrow> P s \\<and> n = 0) \\<and>\n                       (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = m));\n        Q s; P x\\<rbrakk>\n       \\<Longrightarrow> Q x\n 3. \\<And>s.\n       \\<lbrakk>(\\<lambda>h.\n                    \\<exists>x y.\n                       x ## y \\<and>\n                       h = x + y \\<and>\n                       (case x of\n                        (s, n) \\<Rightarrow> Q s \\<and> n = 0) \\<and>\n                       (case y of\n                        (s, c) \\<Rightarrow> s = 0 \\<and> c = n)) =\n                (\\<lambda>h.\n                    \\<exists>x y.\n                       x ## y \\<and>\n                       h = x + y \\<and>\n                       (case x of\n                        (s, n) \\<Rightarrow> P s \\<and> n = 0) \\<and>\n                       (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = m));\n        n \\<noteq> m; Q s\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>s x.\n       \\<lbrakk>(\\<lambda>h.\n                    \\<exists>x y.\n                       x ## y \\<and>\n                       h = x + y \\<and>\n                       (case x of\n                        (s, n) \\<Rightarrow> Q s \\<and> n = 0) \\<and>\n                       (case y of\n                        (s, c) \\<Rightarrow> s = 0 \\<and> c = n)) =\n                (\\<lambda>h.\n                    \\<exists>x y.\n                       x ## y \\<and>\n                       h = x + y \\<and>\n                       (case x of\n                        (s, n) \\<Rightarrow> P s \\<and> n = 0) \\<and>\n                       (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = m));\n        P s; Q x\\<rbrakk>\n       \\<Longrightarrow> P x\n 5. \\<And>s x.\n       \\<lbrakk>(\\<lambda>h.\n                    \\<exists>x y.\n                       x ## y \\<and>\n                       h = x + y \\<and>\n                       (case x of\n                        (s, n) \\<Rightarrow> Q s \\<and> n = 0) \\<and>\n                       (case y of\n                        (s, c) \\<Rightarrow> s = 0 \\<and> c = n)) =\n                (\\<lambda>h.\n                    \\<exists>x y.\n                       x ## y \\<and>\n                       h = x + y \\<and>\n                       (case x of\n                        (s, n) \\<Rightarrow> P s \\<and> n = 0) \\<and>\n                       (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = m));\n        P s; P x\\<rbrakk>\n       \\<Longrightarrow> Q x\n 6. \\<And>s.\n       \\<lbrakk>(\\<lambda>h.\n                    \\<exists>x y.\n                       x ## y \\<and>\n                       h = x + y \\<and>\n                       (case x of\n                        (s, n) \\<Rightarrow> Q s \\<and> n = 0) \\<and>\n                       (case y of\n                        (s, c) \\<Rightarrow> s = 0 \\<and> c = n)) =\n                (\\<lambda>h.\n                    \\<exists>x y.\n                       x ## y \\<and>\n                       h = x + y \\<and>\n                       (case x of\n                        (s, n) \\<Rightarrow> P s \\<and> n = 0) \\<and>\n                       (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = m));\n        n \\<noteq> m; P s\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>s x.\n       \\<lbrakk>(\\<lambda>h. \\<exists>a. h = (a, n) \\<and> Q a) =\n                (\\<lambda>h. \\<exists>a. h = (a, m) \\<and> P a);\n        Q s; Q x\\<rbrakk>\n       \\<Longrightarrow> P x\n 2. \\<And>s x.\n       \\<lbrakk>(\\<lambda>h. \\<exists>a. h = (a, n) \\<and> Q a) =\n                (\\<lambda>h. \\<exists>a. h = (a, m) \\<and> P a);\n        Q s; P x\\<rbrakk>\n       \\<Longrightarrow> Q x\n 3. \\<And>s.\n       \\<lbrakk>(\\<lambda>h. \\<exists>a. h = (a, n) \\<and> Q a) =\n                (\\<lambda>h. \\<exists>a. h = (a, m) \\<and> P a);\n        n \\<noteq> m; Q s\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>s x.\n       \\<lbrakk>(\\<lambda>h. \\<exists>a. h = (a, n) \\<and> Q a) =\n                (\\<lambda>h. \\<exists>a. h = (a, m) \\<and> P a);\n        P s; Q x\\<rbrakk>\n       \\<Longrightarrow> P x\n 5. \\<And>s x.\n       \\<lbrakk>(\\<lambda>h. \\<exists>a. h = (a, n) \\<and> Q a) =\n                (\\<lambda>h. \\<exists>a. h = (a, m) \\<and> P a);\n        P s; P x\\<rbrakk>\n       \\<Longrightarrow> Q x\n 6. \\<And>s.\n       \\<lbrakk>(\\<lambda>h. \\<exists>a. h = (a, n) \\<and> Q a) =\n                (\\<lambda>h. \\<exists>a. h = (a, m) \\<and> P a);\n        n \\<noteq> m; P s\\<rbrakk>\n       \\<Longrightarrow> False", "unfolding  sep_disj_prod_def  plus_prod_def"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>s x.\n       \\<lbrakk>(\\<lambda>h. \\<exists>a. h = (a, n) \\<and> Q a) =\n                (\\<lambda>h. \\<exists>a. h = (a, m) \\<and> P a);\n        Q s; Q x\\<rbrakk>\n       \\<Longrightarrow> P x\n 2. \\<And>s x.\n       \\<lbrakk>(\\<lambda>h. \\<exists>a. h = (a, n) \\<and> Q a) =\n                (\\<lambda>h. \\<exists>a. h = (a, m) \\<and> P a);\n        Q s; P x\\<rbrakk>\n       \\<Longrightarrow> Q x\n 3. \\<And>s.\n       \\<lbrakk>(\\<lambda>h. \\<exists>a. h = (a, n) \\<and> Q a) =\n                (\\<lambda>h. \\<exists>a. h = (a, m) \\<and> P a);\n        n \\<noteq> m; Q s\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>s x.\n       \\<lbrakk>(\\<lambda>h. \\<exists>a. h = (a, n) \\<and> Q a) =\n                (\\<lambda>h. \\<exists>a. h = (a, m) \\<and> P a);\n        P s; Q x\\<rbrakk>\n       \\<Longrightarrow> P x\n 5. \\<And>s x.\n       \\<lbrakk>(\\<lambda>h. \\<exists>a. h = (a, n) \\<and> Q a) =\n                (\\<lambda>h. \\<exists>a. h = (a, m) \\<and> P a);\n        P s; P x\\<rbrakk>\n       \\<Longrightarrow> Q x\n 6. \\<And>s.\n       \\<lbrakk>(\\<lambda>h. \\<exists>a. h = (a, n) \\<and> Q a) =\n                (\\<lambda>h. \\<exists>a. h = (a, m) \\<and> P a);\n        n \\<noteq> m; P s\\<rbrakk>\n       \\<Longrightarrow> False", "apply (metis fst_conv snd_conv)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(* how to set up case rules *)"], ["", "lemma F: assumes \"(embP Q \\<and>* $ n) = (embP P \\<and>* $ m)\"   \n  obtains (blub) \"Q = P\" and \"n = m\" |\n          (da)  \"Q = (\\<lambda>s. False)\" and \"P = (\\<lambda>s. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Q = P; n = m\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>Q = (\\<lambda>s. False); P = (\\<lambda>s. False)\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms orthogonal_split"], ["proof (prove)\nusing this:\n  (embP Q \\<and>* $ n) = (embP P \\<and>* $ m)\n  (embP ?Q \\<and>* $ ?n) = (embP ?P \\<and>* $ ?m) \\<Longrightarrow>\n  ?Q = ?P \\<and> ?n = ?m \\<or>\n  ?Q = (\\<lambda>s. False) \\<and> ?P = (\\<lambda>s. False)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Q = P; n = m\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>Q = (\\<lambda>s. False); P = (\\<lambda>s. False)\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["", "lemma T: assumes \"(embP Q \\<and>* $ n) = (embP P \\<and>* $ m)\"   \n  obtains (blub) x::nat where \"Q = P\" and \"n = m\" and \"x=x\" |\n          (da)  \"Q = (\\<lambda>s. False)\" and \"P = (\\<lambda>s. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>Q = P; n = m; x = x\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<lbrakk>Q = (\\<lambda>s. False); P = (\\<lambda>s. False)\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms orthogonal_split"], ["proof (prove)\nusing this:\n  (embP Q \\<and>* $ n) = (embP P \\<and>* $ m)\n  (embP ?Q \\<and>* $ ?n) = (embP ?P \\<and>* $ ?m) \\<Longrightarrow>\n  ?Q = ?P \\<and> ?n = ?m \\<or>\n  ?Q = (\\<lambda>s. False) \\<and> ?P = (\\<lambda>s. False)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>Q = P; n = m; x = x\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<lbrakk>Q = (\\<lambda>s. False); P = (\\<lambda>s. False)\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["", "definition pointsto :: \"vname \\<Rightarrow> val \\<Rightarrow> assn2\"  (\"_ \\<hookrightarrow> _\" [56,51] 56) where\n  \"v \\<hookrightarrow> n = (%(s,c). s = [v \\<mapsto> n] \\<and> c=0)\""], ["", "(* If you don't mind syntax ambiguity: *)"], ["", "notation pred_ex (binder \"\\<exists>\" 10)"], ["", "definition maps_to_ex :: \"vname \\<Rightarrow> assn2\" (\"_ \\<hookrightarrow> -\" [56] 56)\n  where \"x \\<hookrightarrow> - \\<equiv> \\<exists>y. x \\<hookrightarrow> y\""], ["", "fun lmaps_to_ex :: \"vname set \\<Rightarrow> assn2\" where\n  \"lmaps_to_ex xs = (%(s,c). dom s = xs \\<and> c = 0)\""], ["", "lemma \"(x \\<hookrightarrow> -) (s,n) \\<Longrightarrow> x \\<in> dom s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<hookrightarrow> -) (s, n) \\<Longrightarrow> x \\<in> dom s", "unfolding maps_to_ex_def pointsto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       case (s, n) of\n       (s, c) \\<Rightarrow>\n         s = [x \\<mapsto> xa] \\<and> c = 0 \\<Longrightarrow>\n    x \\<in> dom s", "by auto"], ["", "fun lmaps_to_axpr :: \"bexp \\<Rightarrow> bool \\<Rightarrow> assnp\" where\n  \"lmaps_to_axpr b bv = (%ps. vars b \\<subseteq> dom ps \\<and> pbval b ps = bv )\""], ["", "definition lmaps_to_axpr' :: \"bexp \\<Rightarrow> bool \\<Rightarrow> assnp\" where\n  \"lmaps_to_axpr' b bv = lmaps_to_axpr b bv\""], ["", "subsection \\<open>Frame Inference\\<close>"], ["", "definition Frame where \"Frame P Q F \\<equiv>    \\<forall>s. (P imp (Q ** F)) s\""], ["", "definition Frame' where \"Frame' P P' Q F \\<equiv> \\<forall>s. (( P' ** P) imp (Q ** F)) s\""], ["", "definition cnv where \"cnv x y == x = y\""], ["", "lemma cnv_I: \"cnv x x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnv x x", "unfolding cnv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = x", "by simp"], ["", "lemma Frame'_conv: \"Frame P Q F = Frame' (P ** \\<box>) \\<box> (Q ** \\<box>) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Frame P Q F = Frame' (P \\<and>* \\<box>) \\<box> (Q \\<and>* \\<box>) F", "unfolding Frame_def Frame'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s. P s \\<longrightarrow> (Q \\<and>* F) s) =\n    (\\<forall>s.\n        (\\<box> \\<and>* P \\<and>* \\<box>) s \\<longrightarrow>\n        ((Q \\<and>* \\<box>) \\<and>* F) s)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Frame'I: \"Frame' (P ** \\<box>) \\<box> (Q ** \\<box>) F \\<Longrightarrow> cnv F F' \\<Longrightarrow> Frame P Q F'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Frame' (P \\<and>* \\<box>) \\<box> (Q \\<and>* \\<box>) F;\n     cnv F F'\\<rbrakk>\n    \\<Longrightarrow> Frame P Q F'", "unfolding Frame_def Frame'_def cnv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>s.\n                (\\<box> \\<and>* P \\<and>* \\<box>) s \\<longrightarrow>\n                ((Q \\<and>* \\<box>) \\<and>* F) s;\n     F = F'\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s. P s \\<longrightarrow> (Q \\<and>* F') s", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma FrameD: assumes \"Frame P Q F\" \" P s \"\n  shows \"(F ** Q) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (F \\<and>* Q) s", "using assms"], ["proof (prove)\nusing this:\n  Frame P Q F\n  P s\n\ngoal (1 subgoal):\n 1. (F \\<and>* Q) s", "unfolding Frame_def"], ["proof (prove)\nusing this:\n  \\<forall>s. P s \\<longrightarrow> (Q \\<and>* F) s\n  P s\n\ngoal (1 subgoal):\n 1. (F \\<and>* Q) s", "by (auto simp: sep_conj_commute)"], ["", "lemma Frame'_match: \"Frame' (P ** P') \\<box> Q F \\<Longrightarrow> Frame' (x \\<hookrightarrow> v ** P) P' (x \\<hookrightarrow> v ** Q) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Frame' (P \\<and>* P') \\<box> Q F \\<Longrightarrow>\n    Frame' (x \\<hookrightarrow> v \\<and>* P) P'\n     (x \\<hookrightarrow> v \\<and>* Q) F", "unfolding Frame_def Frame'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       (\\<box> \\<and>* P \\<and>* P') s \\<longrightarrow>\n       (Q \\<and>* F) s \\<Longrightarrow>\n    \\<forall>s.\n       (P' \\<and>* x \\<hookrightarrow> v \\<and>* P) s \\<longrightarrow>\n       ((x \\<hookrightarrow> v \\<and>* Q) \\<and>* F) s", "apply (auto simp: sep_conj_ac)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<forall>a b.\n                   (P \\<and>* P') (a, b) \\<longrightarrow>\n                   (F \\<and>* Q) (a, b);\n        (P \\<and>* P' \\<and>* x \\<hookrightarrow> v) (a, b)\\<rbrakk>\n       \\<Longrightarrow> (F \\<and>* Q \\<and>* x \\<hookrightarrow> v) (a, b)", "by (metis (no_types, hide_lams) prod.collapse sep.mult_assoc sep_conj_impl1)"], ["", "lemma R: assumes \"\\<And>s. (A imp B) s\" shows \"((A ** $n) imp (B ** $n)) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A \\<and>* $ n) s \\<longrightarrow> (B \\<and>* $ n) s", "proof (safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. (A \\<and>* $ n) s \\<Longrightarrow> (B \\<and>* $ n) s", "assume \"(A \\<and>* $ n) s\""], ["proof (state)\nthis:\n  (A \\<and>* $ n) s\n\ngoal (1 subgoal):\n 1. (A \\<and>* $ n) s \\<Longrightarrow> (B \\<and>* $ n) s", "then"], ["proof (chain)\npicking this:\n  (A \\<and>* $ n) s", "obtain h1 h2 where A: \"A h1\"  and n: \"$n h2\" and disj: \"h1 ## h2\" \"s = h1+h2\""], ["proof (prove)\nusing this:\n  (A \\<and>* $ n) s\n\ngoal (1 subgoal):\n 1. (\\<And>h1 h2.\n        \\<lbrakk>A h1; $ n h2; h1 ## h2; s = h1 + h2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding sep_conj_def"], ["proof (prove)\nusing this:\n  \\<exists>x y. x ## y \\<and> s = x + y \\<and> A x \\<and> $ n y\n\ngoal (1 subgoal):\n 1. (\\<And>h1 h2.\n        \\<lbrakk>A h1; $ n h2; h1 ## h2; s = h1 + h2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  A h1\n  $ n h2\n  h1 ## h2\n  s = h1 + h2\n\ngoal (1 subgoal):\n 1. (A \\<and>* $ n) s \\<Longrightarrow> (B \\<and>* $ n) s", "from assms A"], ["proof (chain)\npicking this:\n  A ?s \\<longrightarrow> B ?s\n  A h1", "have B: \"B h1\""], ["proof (prove)\nusing this:\n  A ?s \\<longrightarrow> B ?s\n  A h1\n\ngoal (1 subgoal):\n 1. B h1", "by auto"], ["proof (state)\nthis:\n  B h1\n\ngoal (1 subgoal):\n 1. (A \\<and>* $ n) s \\<Longrightarrow> (B \\<and>* $ n) s", "show \"(B ** $n) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (B \\<and>* $ n) s", "using B n disj"], ["proof (prove)\nusing this:\n  B h1\n  $ n h2\n  h1 ## h2\n  s = h1 + h2\n\ngoal (1 subgoal):\n 1. (B \\<and>* $ n) s", "unfolding sep_conj_def"], ["proof (prove)\nusing this:\n  B h1\n  $ n h2\n  h1 ## h2\n  s = h1 + h2\n\ngoal (1 subgoal):\n 1. \\<exists>x y. x ## y \\<and> s = x + y \\<and> B x \\<and> $ n y", "by blast"], ["proof (state)\nthis:\n  (B \\<and>* $ n) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Frame'_matchdollar:  assumes \"Frame' (P ** P' ** $(n-m)) \\<box> Q F\" and nm: \"n\\<ge>m\"\n  shows \"Frame' ($n ** P) P' ($m ** Q) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Frame' ($ n \\<and>* P) P' ($ m \\<and>* Q) F", "using assms(1)"], ["proof (prove)\nusing this:\n  Frame' (P \\<and>* P' \\<and>* $ (n - m)) \\<box> Q F\n\ngoal (1 subgoal):\n 1. Frame' ($ n \\<and>* P) P' ($ m \\<and>* Q) F", "unfolding Frame_def Frame'_def"], ["proof (prove)\nusing this:\n  \\<forall>s.\n     (\\<box> \\<and>* P \\<and>* P' \\<and>* $ (n - m)) s \\<longrightarrow>\n     (Q \\<and>* F) s\n\ngoal (1 subgoal):\n 1. \\<forall>s.\n       (P' \\<and>* $ n \\<and>* P) s \\<longrightarrow>\n       (($ m \\<and>* Q) \\<and>* F) s", "apply (auto simp: sep_conj_ac)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<forall>a b.\n                   (P \\<and>* P' \\<and>* $ (n - m)) (a, b) \\<longrightarrow>\n                   (F \\<and>* Q) (a, b);\n        (P \\<and>* P' \\<and>* $ n) (a, b)\\<rbrakk>\n       \\<Longrightarrow> (F \\<and>* Q \\<and>* $ m) (a, b)", "proof (goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<forall>a b.\n                   (P \\<and>* P' \\<and>* $ (n - m)) (a, b) \\<longrightarrow>\n                   (F \\<and>* Q) (a, b);\n        (P \\<and>* P' \\<and>* $ n) (a, b)\\<rbrakk>\n       \\<Longrightarrow> (F \\<and>* Q \\<and>* $ m) (a, b)", "case (1 a b)"], ["proof (state)\nthis:\n  \\<forall>a b.\n     (P \\<and>* P' \\<and>* $ (n - m)) (a, b) \\<longrightarrow>\n     (F \\<and>* Q) (a, b)\n  (P \\<and>* P' \\<and>* $ n) (a, b)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<forall>a b.\n                   (P \\<and>* P' \\<and>* $ (n - m)) (a, b) \\<longrightarrow>\n                   (F \\<and>* Q) (a, b);\n        (P \\<and>* P' \\<and>* $ n) (a, b)\\<rbrakk>\n       \\<Longrightarrow> (F \\<and>* Q \\<and>* $ m) (a, b)", "have g: \"((P \\<and>* P' \\<and>* $ n) imp (F \\<and>* Q \\<and>* $ m)) (a, b)\n        \\<longleftrightarrow> (((P \\<and>* P' \\<and>* $(n-m)) ** $m) imp ((F \\<and>* Q) \\<and>* $ m)) (a, b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((P \\<and>* P' \\<and>* $ n) (a, b) \\<longrightarrow>\n     (F \\<and>* Q \\<and>* $ m) (a, b)) =\n    (((P \\<and>* P' \\<and>* $ (n - m)) \\<and>* $ m) (a, b) \\<longrightarrow>\n     ((F \\<and>* Q) \\<and>* $ m) (a, b))", "by(simp add: nm sep_reorder_dollar)"], ["proof (state)\nthis:\n  ((P \\<and>* P' \\<and>* $ n) (a, b) \\<longrightarrow>\n   (F \\<and>* Q \\<and>* $ m) (a, b)) =\n  (((P \\<and>* P' \\<and>* $ (n - m)) \\<and>* $ m) (a, b) \\<longrightarrow>\n   ((F \\<and>* Q) \\<and>* $ m) (a, b))\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<forall>a b.\n                   (P \\<and>* P' \\<and>* $ (n - m)) (a, b) \\<longrightarrow>\n                   (F \\<and>* Q) (a, b);\n        (P \\<and>* P' \\<and>* $ n) (a, b)\\<rbrakk>\n       \\<Longrightarrow> (F \\<and>* Q \\<and>* $ m) (a, b)", "have \"((P \\<and>* P' \\<and>* $ n) imp (F \\<and>* Q \\<and>* $ m)) (a, b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<and>* P' \\<and>* $ n) (a, b) \\<longrightarrow>\n    (F \\<and>* Q \\<and>* $ m) (a, b)", "apply(subst g)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((P \\<and>* P' \\<and>* $ (n - m)) \\<and>* $ m) (a, b) \\<longrightarrow>\n    ((F \\<and>* Q) \\<and>* $ m) (a, b)", "apply(rule R)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       (P \\<and>* P' \\<and>* $ (n - m)) s \\<longrightarrow> (F \\<and>* Q) s", "using 1(1)"], ["proof (prove)\nusing this:\n  \\<forall>a b.\n     (P \\<and>* P' \\<and>* $ (n - m)) (a, b) \\<longrightarrow>\n     (F \\<and>* Q) (a, b)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       (P \\<and>* P' \\<and>* $ (n - m)) s \\<longrightarrow> (F \\<and>* Q) s", "by auto"], ["proof (state)\nthis:\n  (P \\<and>* P' \\<and>* $ n) (a, b) \\<longrightarrow>\n  (F \\<and>* Q \\<and>* $ m) (a, b)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<forall>a b.\n                   (P \\<and>* P' \\<and>* $ (n - m)) (a, b) \\<longrightarrow>\n                   (F \\<and>* Q) (a, b);\n        (P \\<and>* P' \\<and>* $ n) (a, b)\\<rbrakk>\n       \\<Longrightarrow> (F \\<and>* Q \\<and>* $ m) (a, b)", "then"], ["proof (chain)\npicking this:\n  (P \\<and>* P' \\<and>* $ n) (a, b) \\<longrightarrow>\n  (F \\<and>* Q \\<and>* $ m) (a, b)", "have \"(P \\<and>* P' \\<and>* $ n) (a, b) \\<longrightarrow> (F \\<and>* Q \\<and>* $ m) (a, b)\""], ["proof (prove)\nusing this:\n  (P \\<and>* P' \\<and>* $ n) (a, b) \\<longrightarrow>\n  (F \\<and>* Q \\<and>* $ m) (a, b)\n\ngoal (1 subgoal):\n 1. (P \\<and>* P' \\<and>* $ n) (a, b) \\<longrightarrow>\n    (F \\<and>* Q \\<and>* $ m) (a, b)", "by blast"], ["proof (state)\nthis:\n  (P \\<and>* P' \\<and>* $ n) (a, b) \\<longrightarrow>\n  (F \\<and>* Q \\<and>* $ m) (a, b)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<forall>a b.\n                   (P \\<and>* P' \\<and>* $ (n - m)) (a, b) \\<longrightarrow>\n                   (F \\<and>* Q) (a, b);\n        (P \\<and>* P' \\<and>* $ n) (a, b)\\<rbrakk>\n       \\<Longrightarrow> (F \\<and>* Q \\<and>* $ m) (a, b)", "then"], ["proof (chain)\npicking this:\n  (P \\<and>* P' \\<and>* $ n) (a, b) \\<longrightarrow>\n  (F \\<and>* Q \\<and>* $ m) (a, b)", "show ?case"], ["proof (prove)\nusing this:\n  (P \\<and>* P' \\<and>* $ n) (a, b) \\<longrightarrow>\n  (F \\<and>* Q \\<and>* $ m) (a, b)\n\ngoal (1 subgoal):\n 1. (F \\<and>* Q \\<and>* $ m) (a, b)", "using 1(2)"], ["proof (prove)\nusing this:\n  (P \\<and>* P' \\<and>* $ n) (a, b) \\<longrightarrow>\n  (F \\<and>* Q \\<and>* $ m) (a, b)\n  (P \\<and>* P' \\<and>* $ n) (a, b)\n\ngoal (1 subgoal):\n 1. (F \\<and>* Q \\<and>* $ m) (a, b)", "by auto"], ["proof (state)\nthis:\n  (F \\<and>* Q \\<and>* $ m) (a, b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Frame'_nomatch: \" Frame' P (p ** P') (x \\<hookrightarrow> v ** Q) F\\<Longrightarrow> Frame' (p ** P) P' (x \\<hookrightarrow> v ** Q) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Frame' P (p \\<and>* P') (x \\<hookrightarrow> v \\<and>* Q)\n     F \\<Longrightarrow>\n    Frame' (p \\<and>* P) P' (x \\<hookrightarrow> v \\<and>* Q) F", "unfolding  Frame'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       ((p \\<and>* P') \\<and>* P) s \\<longrightarrow>\n       ((x \\<hookrightarrow> v \\<and>* Q) \\<and>* F) s \\<Longrightarrow>\n    \\<forall>s.\n       (P' \\<and>* p \\<and>* P) s \\<longrightarrow>\n       ((x \\<hookrightarrow> v \\<and>* Q) \\<and>* F) s", "by (auto simp: sep_conj_ac)"], ["", "lemma Frame'_nomatchempty: \" Frame' P P' (x \\<hookrightarrow> v ** Q) F\\<Longrightarrow> Frame' (\\<box> ** P) P' (x \\<hookrightarrow> v ** Q) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Frame' P P' (x \\<hookrightarrow> v \\<and>* Q) F \\<Longrightarrow>\n    Frame' (\\<box> \\<and>* P) P' (x \\<hookrightarrow> v \\<and>* Q) F", "unfolding  Frame'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       (P' \\<and>* P) s \\<longrightarrow>\n       ((x \\<hookrightarrow> v \\<and>* Q) \\<and>* F) s \\<Longrightarrow>\n    \\<forall>s.\n       (P' \\<and>* \\<box> \\<and>* P) s \\<longrightarrow>\n       ((x \\<hookrightarrow> v \\<and>* Q) \\<and>* F) s", "by (auto simp: sep_conj_ac)"], ["", "(* this will only be reached after a Frame'_match move, where P' is \\<box> *)"], ["", "lemma Frame'_end: \" Frame' P \\<box> \\<box> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Frame' P \\<box> \\<box> P", "unfolding  Frame'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s. (\\<box> \\<and>* P) s \\<longrightarrow> (\\<box> \\<and>* P) s", "by (auto simp: sep_conj_ac)"], ["", "schematic_goal \"Frame (x \\<hookrightarrow> v1 \\<and>* y \\<hookrightarrow> v2)  (x \\<hookrightarrow> ?v) ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Frame (x \\<hookrightarrow> v1 \\<and>* y \\<hookrightarrow> v2)\n     (x \\<hookrightarrow> ?v) ?F", "apply(rule Frame'I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Frame'\n     ((x \\<hookrightarrow> v1 \\<and>* y \\<hookrightarrow> v2) \\<and>*\n      \\<box>)\n     \\<box> (x \\<hookrightarrow> ?v \\<and>* \\<box>) ?F4\n 2. cnv ?F4 ?F", "apply(simp only: sep_conj_assoc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Frame'\n     (x \\<hookrightarrow> v1 \\<and>* y \\<hookrightarrow> v2 \\<and>* \\<box>)\n     \\<box> (x \\<hookrightarrow> ?v \\<and>* \\<box>) ?F4\n 2. cnv ?F4 ?F", "apply(rule Frame'_match)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Frame' ((y \\<hookrightarrow> v2 \\<and>* \\<box>) \\<and>* \\<box>) \\<box>\n     \\<box> ?F4\n 2. cnv ?F4 ?F", "apply(rule Frame'_end)"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnv ((y \\<hookrightarrow> v2 \\<and>* \\<box>) \\<and>* \\<box>) ?F", "apply(simp only: sep_conj_ac sep_conj_empty' sep_conj_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnv (y \\<hookrightarrow> v2) ?F", "apply(rule cnv_I)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "schematic_goal \"Frame (x \\<hookrightarrow> v1 \\<and>* y \\<hookrightarrow> v2)  (y \\<hookrightarrow> ?v) ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Frame (x \\<hookrightarrow> v1 \\<and>* y \\<hookrightarrow> v2)\n     (y \\<hookrightarrow> ?v) ?F", "apply(rule Frame'I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Frame'\n     ((x \\<hookrightarrow> v1 \\<and>* y \\<hookrightarrow> v2) \\<and>*\n      \\<box>)\n     \\<box> (y \\<hookrightarrow> ?v \\<and>* \\<box>) ?F4\n 2. cnv ?F4 ?F", "apply(simp only: sep_conj_assoc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Frame'\n     (x \\<hookrightarrow> v1 \\<and>* y \\<hookrightarrow> v2 \\<and>* \\<box>)\n     \\<box> (y \\<hookrightarrow> ?v \\<and>* \\<box>) ?F4\n 2. cnv ?F4 ?F", "apply(rule Frame'_end Frame'_match Frame'_nomatchempty Frame'_nomatch; (simp only: sep_conj_assoc)?)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnv (\\<box> \\<and>* x \\<hookrightarrow> v1 \\<and>* \\<box>) ?F", "apply(simp only: sep_conj_ac sep_conj_empty' sep_conj_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnv (x \\<hookrightarrow> v1) ?F", "apply(rule cnv_I)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "method frame_inference_init = (rule Frame'I, (simp only: sep_conj_assoc)?)"], ["", "method frame_inference_solve = (rule Frame'_matchdollar Frame'_end Frame'_match Frame'_nomatchempty Frame'_nomatch; (simp only: sep_conj_assoc)?)+"], ["", "method frame_inference_cleanup = ( (simp only: sep_conj_ac sep_conj_empty' sep_conj_empty)?; rule cnv_I)"], ["", "method frame_inference = (frame_inference_init, (frame_inference_solve; fail), (frame_inference_cleanup; fail))"], ["", "method frame_inference_debug = (frame_inference_init, frame_inference_solve)"], ["", "subsubsection \\<open>tests\\<close>"], ["", "schematic_goal \"Frame (x \\<hookrightarrow> v1 \\<and>* y \\<hookrightarrow> v2)  (y \\<hookrightarrow> ?v) ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Frame (x \\<hookrightarrow> v1 \\<and>* y \\<hookrightarrow> v2)\n     (y \\<hookrightarrow> ?v) ?F", "by frame_inference"], ["", "schematic_goal \"Frame (x \\<hookrightarrow> v1 ** P ** \\<box> ** y \\<hookrightarrow> v2 \\<and>* z \\<hookrightarrow> v2 ** Q)  (z \\<hookrightarrow> ?v ** y \\<hookrightarrow> ?v2) ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Frame\n     (x \\<hookrightarrow> v1 \\<and>*\n      P \\<and>*\n      \\<box> \\<and>*\n      y \\<hookrightarrow> v2 \\<and>* z \\<hookrightarrow> v2 \\<and>* Q)\n     (z \\<hookrightarrow> ?v \\<and>* y \\<hookrightarrow> ?v2) ?F", "by frame_inference"], ["", "(* with dollar *)"], ["", "schematic_goal \" 1 \\<le> v \\<Longrightarrow> Frame ($ (2 * v) \\<and>* ''x'' \\<hookrightarrow> int v) ($ 1 \\<and>* ''x'' \\<hookrightarrow> ?d) ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> v \\<Longrightarrow>\n    Frame ($ (2 * v) \\<and>* ''x'' \\<hookrightarrow> int v)\n     ($ 1 \\<and>* ''x'' \\<hookrightarrow> ?d) ?F", "apply(rule Frame'I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. 1 \\<le> v \\<Longrightarrow>\n    Frame'\n     (($ (2 * v) \\<and>* ''x'' \\<hookrightarrow> int v) \\<and>* \\<box>)\n     \\<box> (($ 1 \\<and>* ''x'' \\<hookrightarrow> ?d) \\<and>* \\<box>) ?F4\n 2. 1 \\<le> v \\<Longrightarrow> cnv ?F4 ?F", "apply(simp only: sep_conj_assoc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. 1 \\<le> v \\<Longrightarrow>\n    Frame' ($ (2 * v) \\<and>* ''x'' \\<hookrightarrow> int v \\<and>* \\<box>)\n     \\<box> ($ 1 \\<and>* ''x'' \\<hookrightarrow> ?d \\<and>* \\<box>) ?F4\n 2. 1 \\<le> v \\<Longrightarrow> cnv ?F4 ?F", "apply(rule  Frame'_matchdollar Frame'_end Frame'_match Frame'_nomatchempty Frame'_nomatch; (simp only: sep_conj_assoc)?)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> v \\<Longrightarrow>\n    cnv (\\<box> \\<and>* \\<box> \\<and>* $ (2 * v - 1) \\<and>* \\<box>) ?F", "apply (simp only: sep_conj_ac sep_conj_empty' sep_conj_empty)?"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> v \\<Longrightarrow> cnv ($ (2 * v - 1)) ?F", "apply (rule cnv_I)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "schematic_goal \" 0 < v \\<Longrightarrow> Frame ($ (2 * v) \\<and>* ''x'' \\<hookrightarrow> int v) ($ 1 \\<and>* ''x'' \\<hookrightarrow> ?d) ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < v \\<Longrightarrow>\n    Frame ($ (2 * v) \\<and>* ''x'' \\<hookrightarrow> int v)\n     ($ 1 \\<and>* ''x'' \\<hookrightarrow> ?d) ?F", "apply frame_inference"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Expression evaluation\\<close>"], ["", "definition symeval where \"symeval P e v \\<equiv> (\\<forall>s n. P (s,n) \\<longrightarrow> paval' e s = Some v)\""], ["", "definition symevalb where \"symevalb P e v \\<equiv> (\\<forall>s n. P (s,n) \\<longrightarrow> pbval' e s = Some v)\""], ["", "lemma symeval_c: \"symeval P (N v) v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symeval P (N v) v", "unfolding symeval_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s n. P (s, n) \\<longrightarrow> paval' (N v) s = Some v", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma symeval_v: assumes \"Frame P (x \\<hookrightarrow> v) F\"\n  shows \"symeval P (V x) v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symeval P (V x) v", "unfolding symeval_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s n. P (s, n) \\<longrightarrow> paval' (V x) s = Some v", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s n. P (s, n) \\<Longrightarrow> s x = Some v", "apply (drule FrameD[OF assms])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s n.\n       (F \\<and>* x \\<hookrightarrow> v) (s, n) \\<Longrightarrow>\n       s x = Some v", "unfolding sep_conj_def pointsto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s n.\n       \\<exists>xa y.\n          xa ## y \\<and>\n          (s, n) = xa + y \\<and>\n          F xa \\<and>\n          (case y of\n           (s, c) \\<Rightarrow>\n             s = [x \\<mapsto> v] \\<and> c = 0) \\<Longrightarrow>\n       s x = Some v", "apply (auto simp: plus_fun_conv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma symeval_plus: assumes \"symeval P e1 v1\" \"symeval P e2 v2\"\n  shows \"symeval P (Plus e1 e2) (v1+v2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symeval P (Plus e1 e2) (v1 + v2)", "using assms"], ["proof (prove)\nusing this:\n  symeval P e1 v1\n  symeval P e2 v2\n\ngoal (1 subgoal):\n 1. symeval P (Plus e1 e2) (v1 + v2)", "unfolding symeval_def"], ["proof (prove)\nusing this:\n  \\<forall>s n. P (s, n) \\<longrightarrow> paval' e1 s = Some v1\n  \\<forall>s n. P (s, n) \\<longrightarrow> paval' e2 s = Some v2\n\ngoal (1 subgoal):\n 1. \\<forall>s n.\n       P (s, n) \\<longrightarrow> paval' (Plus e1 e2) s = Some (v1 + v2)", "by auto"], ["", "lemma symevalb_c: \"symevalb P (Bc v) v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symevalb P (Bc v) v", "unfolding symevalb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s n. P (s, n) \\<longrightarrow> pbval' (Bc v) s = Some v", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma symevalb_and: assumes \"symevalb P e1 v1\" \"symevalb P e2 v2\"\n  shows \"symevalb P (And e1 e2) (v1 \\<and> v2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symevalb P (And e1 e2) (v1 \\<and> v2)", "using assms"], ["proof (prove)\nusing this:\n  symevalb P e1 v1\n  symevalb P e2 v2\n\ngoal (1 subgoal):\n 1. symevalb P (And e1 e2) (v1 \\<and> v2)", "unfolding symevalb_def"], ["proof (prove)\nusing this:\n  \\<forall>s n. P (s, n) \\<longrightarrow> pbval' e1 s = Some v1\n  \\<forall>s n. P (s, n) \\<longrightarrow> pbval' e2 s = Some v2\n\ngoal (1 subgoal):\n 1. \\<forall>s n.\n       P (s, n) \\<longrightarrow> pbval' (And e1 e2) s = Some (v1 \\<and> v2)", "by auto"], ["", "lemma symevalb_not:  assumes \"symevalb P e v\"\n  shows \"symevalb P (Not e) (\\<not> v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symevalb P (bexp.Not e) (\\<not> v)", "using assms"], ["proof (prove)\nusing this:\n  symevalb P e v\n\ngoal (1 subgoal):\n 1. symevalb P (bexp.Not e) (\\<not> v)", "unfolding symevalb_def"], ["proof (prove)\nusing this:\n  \\<forall>s n. P (s, n) \\<longrightarrow> pbval' e s = Some v\n\ngoal (1 subgoal):\n 1. \\<forall>s n.\n       P (s, n) \\<longrightarrow> pbval' (bexp.Not e) s = Some (\\<not> v)", "by auto"], ["", "lemma symevalb_less: assumes \"symeval P e1 v1\" \"symeval P e2 v2\"\n  shows \"symevalb P (Less e1 e2) (v1 < v2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symevalb P (Less e1 e2) (v1 < v2)", "using assms"], ["proof (prove)\nusing this:\n  symeval P e1 v1\n  symeval P e2 v2\n\ngoal (1 subgoal):\n 1. symevalb P (Less e1 e2) (v1 < v2)", "unfolding symevalb_def symeval_def"], ["proof (prove)\nusing this:\n  \\<forall>s n. P (s, n) \\<longrightarrow> paval' e1 s = Some v1\n  \\<forall>s n. P (s, n) \\<longrightarrow> paval' e2 s = Some v2\n\ngoal (1 subgoal):\n 1. \\<forall>s n.\n       P (s, n) \\<longrightarrow> pbval' (Less e1 e2) s = Some (v1 < v2)", "by auto"], ["", "lemmas symeval = symeval_c symeval_v symeval_plus symevalb_c symevalb_and symevalb_not symevalb_less"], ["", "schematic_goal \"symevalb ( (x \\<hookrightarrow> v1) ** (y \\<hookrightarrow> v2) ) (Less (Plus (V x) (V y)) (N 5)) ?g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symevalb (x \\<hookrightarrow> v1 \\<and>* y \\<hookrightarrow> v2)\n     (Less (Plus (V x) (V y)) (N 5)) ?g", "apply(rule symeval | frame_inference)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}