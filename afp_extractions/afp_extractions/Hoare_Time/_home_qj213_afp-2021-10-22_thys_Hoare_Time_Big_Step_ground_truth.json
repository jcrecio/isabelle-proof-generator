{"file_name": "/home/qj213/afp-2021-10-22/thys/Hoare_Time/Big_Step.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Hoare_Time", "problem_names": ["lemmas big_step_induct = big_step.induct[split_format(complete)]", "lemma \"(IF b THEN SKIP ELSE SKIP, s) \\<Rightarrow> t \\<Longrightarrow> t = s\"", "lemma assumes \"(IF b THEN SKIP ELSE SKIP, s) \\<Rightarrow> t\"\nshows \"t = s\"", "lemma assign_simp:\n  \"(x ::= a,s) \\<Rightarrow> s' \\<longleftrightarrow> (s' = s(x := aval a s))\"", "lemma Seq_assoc:\n  \"(c1;; c2;; c3, s) \\<Rightarrow> s' \\<longleftrightarrow> (c1;; (c2;; c3), s) \\<Rightarrow> s'\"", "lemma unfold_while:\n  \"(WHILE b DO c) \\<sim> (IF b THEN c;; WHILE b DO c ELSE SKIP)\" (is \"?w \\<sim> ?iw\")", "lemma while_unfold:\n  \"(WHILE b DO c) \\<sim> (IF b THEN c;; WHILE b DO c ELSE SKIP)\"", "lemma triv_if:\n  \"(IF b THEN c ELSE c) \\<sim> c\"", "lemma commute_if:\n  \"(IF b1 THEN (IF b2 THEN c11 ELSE c12) ELSE c2) \n   \\<sim> \n   (IF b2 THEN (IF b1 THEN c11 ELSE c2) ELSE (IF b1 THEN c12 ELSE c2))\"", "lemma sim_while_cong_aux:\n  \"(WHILE b DO c,s) \\<Rightarrow> t  \\<Longrightarrow> c \\<sim> c' \\<Longrightarrow>  (WHILE b DO c',s) \\<Rightarrow> t\"", "lemma sim_while_cong: \"c \\<sim> c' \\<Longrightarrow> WHILE b DO c \\<sim> WHILE b DO c'\"", "lemma sim_refl:  \"c \\<sim> c\"", "lemma sim_sym:   \"(c \\<sim> c') = (c' \\<sim> c)\"", "lemma sim_trans: \"c \\<sim> c' \\<Longrightarrow> c' \\<sim> c'' \\<Longrightarrow> c \\<sim> c''\"", "theorem big_step_determ: \"\\<lbrakk> (c,s) \\<Rightarrow> t; (c,s) \\<Rightarrow> u \\<rbrakk> \\<Longrightarrow> u = t\"", "theorem\n  \"(c,s) \\<Rightarrow> t  \\<Longrightarrow>  (c,s) \\<Rightarrow> t'  \\<Longrightarrow>  t' = t\""], "translations": [["", "lemmas big_step_induct = big_step.induct[split_format(complete)]"], ["", "thm big_step_induct"], ["", "text \\<open>\n@{thm [display] big_step_induct [no_vars]}\n\\<close>"], ["", "subsection \"Rule inversion\""], ["", "text\\<open>What can we deduce from @{prop \"(SKIP,s) \\<Rightarrow> t\"} ?\nThat @{prop \"s = t\"}. This is how we can automatically prove it:\\<close>"], ["", "inductive_cases SkipE[elim!]: \"(SKIP,s) \\<Rightarrow> t\""], ["", "thm SkipE"], ["", "text\\<open>This is an \\emph{elimination rule}. The [elim] attribute tells auto,\nblast and friends (but not simp!) to use it automatically; [elim!] means that\nit is applied eagerly.\n\nSimilarly for the other commands:\\<close>"], ["", "inductive_cases AssignE[elim!]: \"(x ::= a,s) \\<Rightarrow> t\""], ["", "thm AssignE"], ["", "inductive_cases SeqE[elim!]: \"(c1;;c2,s1) \\<Rightarrow> s3\""], ["", "thm SeqE"], ["", "inductive_cases IfE[elim!]: \"(IF b THEN c1 ELSE c2,s) \\<Rightarrow> t\""], ["", "thm IfE"], ["", "inductive_cases WhileE[elim]: \"(WHILE b DO c,s) \\<Rightarrow> t\""], ["", "thm WhileE"], ["", "text\\<open>Only [elim]: [elim!] would not terminate.\\<close>"], ["", "text\\<open>An automatic example:\\<close>"], ["", "lemma \"(IF b THEN SKIP ELSE SKIP, s) \\<Rightarrow> t \\<Longrightarrow> t = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (IF b THEN SKIP ELSE SKIP, s) \\<Rightarrow> t \\<Longrightarrow> t = s", "by blast"], ["", "text\\<open>Rule inversion by hand via the ``cases'' method:\\<close>"], ["", "lemma assumes \"(IF b THEN SKIP ELSE SKIP, s) \\<Rightarrow> t\"\nshows \"t = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = s", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. t = s", "from assms"], ["proof (chain)\npicking this:\n  (IF b THEN SKIP ELSE SKIP, s) \\<Rightarrow> t", "show ?thesis"], ["proof (prove)\nusing this:\n  (IF b THEN SKIP ELSE SKIP, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. t = s", "proof cases  \\<comment> \\<open>inverting assms\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>bval b s; (SKIP, s) \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> t = s\n 2. \\<lbrakk>\\<not> bval b s; (SKIP, s) \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> t = s", "case IfTrue"], ["proof (state)\nthis:\n  bval b s\n  (SKIP, s) \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>bval b s; (SKIP, s) \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> t = s\n 2. \\<lbrakk>\\<not> bval b s; (SKIP, s) \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> t = s", "thm IfTrue"], ["proof (state)\nthis:\n  bval b s\n  (SKIP, s) \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>bval b s; (SKIP, s) \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> t = s\n 2. \\<lbrakk>\\<not> bval b s; (SKIP, s) \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> t = s", "thus ?thesis"], ["proof (prove)\nusing this:\n  bval b s\n  (SKIP, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. t = s", "by blast"], ["proof (state)\nthis:\n  t = s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> bval b s; (SKIP, s) \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> t = s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> bval b s; (SKIP, s) \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> t = s", "case IfFalse"], ["proof (state)\nthis:\n  \\<not> bval b s\n  (SKIP, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> bval b s; (SKIP, s) \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> t = s", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> bval b s\n  (SKIP, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. t = s", "by blast"], ["proof (state)\nthis:\n  t = s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t = s\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Using rule inversion to prove simplification rules: *)"], ["", "lemma assign_simp:\n  \"(x ::= a,s) \\<Rightarrow> s' \\<longleftrightarrow> (s' = s(x := aval a s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ::= a, s) \\<Rightarrow> s' = (s' = s(x := aval a s))", "by auto"], ["", "text \\<open>An example combining rule inversion and derivations\\<close>"], ["", "lemma Seq_assoc:\n  \"(c1;; c2;; c3, s) \\<Rightarrow> s' \\<longleftrightarrow> (c1;; (c2;; c3), s) \\<Rightarrow> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c1;; c2;; c3, s) \\<Rightarrow> s' =\n    (c1;; (c2;; c3), s) \\<Rightarrow> s'", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (c1;; c2;; c3, s) \\<Rightarrow> s' \\<Longrightarrow>\n    (c1;; (c2;; c3), s) \\<Rightarrow> s'\n 2. (c1;; (c2;; c3), s) \\<Rightarrow> s' \\<Longrightarrow>\n    (c1;; c2;; c3, s) \\<Rightarrow> s'", "assume \"(c1;; c2;; c3, s) \\<Rightarrow> s'\""], ["proof (state)\nthis:\n  (c1;; c2;; c3, s) \\<Rightarrow> s'\n\ngoal (2 subgoals):\n 1. (c1;; c2;; c3, s) \\<Rightarrow> s' \\<Longrightarrow>\n    (c1;; (c2;; c3), s) \\<Rightarrow> s'\n 2. (c1;; (c2;; c3), s) \\<Rightarrow> s' \\<Longrightarrow>\n    (c1;; c2;; c3, s) \\<Rightarrow> s'", "then"], ["proof (chain)\npicking this:\n  (c1;; c2;; c3, s) \\<Rightarrow> s'", "obtain s1 s2 where\n    c1: \"(c1, s) \\<Rightarrow> s1\" and\n    c2: \"(c2, s1) \\<Rightarrow> s2\" and\n    c3: \"(c3, s2) \\<Rightarrow> s'\""], ["proof (prove)\nusing this:\n  (c1;; c2;; c3, s) \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. (\\<And>s1 s2.\n        \\<lbrakk>(c1, s) \\<Rightarrow> s1; (c2, s1) \\<Rightarrow> s2;\n         (c3, s2) \\<Rightarrow> s'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (c1, s) \\<Rightarrow> s1\n  (c2, s1) \\<Rightarrow> s2\n  (c3, s2) \\<Rightarrow> s'\n\ngoal (2 subgoals):\n 1. (c1;; c2;; c3, s) \\<Rightarrow> s' \\<Longrightarrow>\n    (c1;; (c2;; c3), s) \\<Rightarrow> s'\n 2. (c1;; (c2;; c3), s) \\<Rightarrow> s' \\<Longrightarrow>\n    (c1;; c2;; c3, s) \\<Rightarrow> s'", "from c2 c3"], ["proof (chain)\npicking this:\n  (c2, s1) \\<Rightarrow> s2\n  (c3, s2) \\<Rightarrow> s'", "have \"(c2;; c3, s1) \\<Rightarrow> s'\""], ["proof (prove)\nusing this:\n  (c2, s1) \\<Rightarrow> s2\n  (c3, s2) \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. (c2;; c3, s1) \\<Rightarrow> s'", "by (rule Seq)"], ["proof (state)\nthis:\n  (c2;; c3, s1) \\<Rightarrow> s'\n\ngoal (2 subgoals):\n 1. (c1;; c2;; c3, s) \\<Rightarrow> s' \\<Longrightarrow>\n    (c1;; (c2;; c3), s) \\<Rightarrow> s'\n 2. (c1;; (c2;; c3), s) \\<Rightarrow> s' \\<Longrightarrow>\n    (c1;; c2;; c3, s) \\<Rightarrow> s'", "with c1"], ["proof (chain)\npicking this:\n  (c1, s) \\<Rightarrow> s1\n  (c2;; c3, s1) \\<Rightarrow> s'", "show \"(c1;; (c2;; c3), s) \\<Rightarrow> s'\""], ["proof (prove)\nusing this:\n  (c1, s) \\<Rightarrow> s1\n  (c2;; c3, s1) \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. (c1;; (c2;; c3), s) \\<Rightarrow> s'", "by (rule Seq)"], ["proof (state)\nthis:\n  (c1;; (c2;; c3), s) \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. (c1;; (c2;; c3), s) \\<Rightarrow> s' \\<Longrightarrow>\n    (c1;; c2;; c3, s) \\<Rightarrow> s'", "next\n  \\<comment> \\<open>The other direction is analogous\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. (c1;; (c2;; c3), s) \\<Rightarrow> s' \\<Longrightarrow>\n    (c1;; c2;; c3, s) \\<Rightarrow> s'", "assume \"(c1;; (c2;; c3), s) \\<Rightarrow> s'\""], ["proof (state)\nthis:\n  (c1;; (c2;; c3), s) \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. (c1;; (c2;; c3), s) \\<Rightarrow> s' \\<Longrightarrow>\n    (c1;; c2;; c3, s) \\<Rightarrow> s'", "thus \"(c1;; c2;; c3, s) \\<Rightarrow> s'\""], ["proof (prove)\nusing this:\n  (c1;; (c2;; c3), s) \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. (c1;; c2;; c3, s) \\<Rightarrow> s'", "by auto"], ["proof (state)\nthis:\n  (c1;; c2;; c3, s) \\<Rightarrow> s'\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Command Equivalence\""], ["", "text \\<open>\n  We call two statements \\<open>c\\<close> and \\<open>c'\\<close> equivalent wrt.\\ the\n  big-step semantics when \\emph{\\<open>c\\<close> started in \\<open>s\\<close> terminates\n  in \\<open>s'\\<close> iff \\<open>c'\\<close> started in the same \\<open>s\\<close> also terminates\n  in the same \\<open>s'\\<close>}. Formally:\n\\<close>"], ["", "abbreviation\n  equiv_c :: \"com \\<Rightarrow> com \\<Rightarrow> bool\" (infix \"\\<sim>\" 50) where\n  \"c \\<sim> c' \\<equiv> (\\<forall>s t. (c,s) \\<Rightarrow> t  =  (c',s) \\<Rightarrow> t)\""], ["", "text \\<open>\nWarning: \\<open>\\<sim>\\<close> is the symbol written \\verb!\\ < s i m >! (without spaces).\n\n  As an example, we show that loop unfolding is an equivalence\n  transformation on programs:\n\\<close>"], ["", "lemma unfold_while:\n  \"(WHILE b DO c) \\<sim> (IF b THEN c;; WHILE b DO c ELSE SKIP)\" (is \"?w \\<sim> ?iw\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "proof -\n  \\<comment> \\<open>to show the equivalence, we look at the derivation tree for\\<close>\n  \\<comment> \\<open>each side and from that construct a derivation tree for the other side\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "fix s t"], ["proof (state)\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "assume \"(?w, s) \\<Rightarrow> t\"\n    \\<comment> \\<open>as a first thing we note that, if @{text b} is @{text False} in state @{text s},\\<close>\n    \\<comment> \\<open>then both statements do nothing:\\<close>"], ["proof (state)\nthis:\n  (WHILE b DO c, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "{"], ["proof (state)\nthis:\n  (WHILE b DO c, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "assume \"\\<not>bval b s\""], ["proof (state)\nthis:\n  \\<not> bval b s\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "hence \"t = s\""], ["proof (prove)\nusing this:\n  \\<not> bval b s\n\ngoal (1 subgoal):\n 1. t = s", "using \\<open>(?w,s) \\<Rightarrow> t\\<close>"], ["proof (prove)\nusing this:\n  \\<not> bval b s\n  (WHILE b DO c, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. t = s", "by blast"], ["proof (state)\nthis:\n  t = s\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "hence \"(?iw, s) \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  t = s\n\ngoal (1 subgoal):\n 1. (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t", "using \\<open>\\<not>bval b s\\<close>"], ["proof (prove)\nusing this:\n  t = s\n  \\<not> bval b s\n\ngoal (1 subgoal):\n 1. (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t", "by blast"], ["proof (state)\nthis:\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "}"], ["proof (state)\nthis:\n  \\<not> bval b s \\<Longrightarrow>\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "moreover\n    \\<comment> \\<open>on the other hand, if @{text b} is @{text True} in state @{text s},\\<close>\n    \\<comment> \\<open>then only the @{text WhileTrue} rule can have been used to derive @{text \"(?w, s) \\<Rightarrow> t\"}\\<close>"], ["proof (state)\nthis:\n  \\<not> bval b s \\<Longrightarrow>\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "{"], ["proof (state)\nthis:\n  \\<not> bval b s \\<Longrightarrow>\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "assume \"bval b s\""], ["proof (state)\nthis:\n  bval b s\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "with \\<open>(?w, s) \\<Rightarrow> t\\<close>"], ["proof (chain)\npicking this:\n  (WHILE b DO c, s) \\<Rightarrow> t\n  bval b s", "obtain s' where\n        \"(c, s) \\<Rightarrow> s'\" and \"(?w, s') \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  (WHILE b DO c, s) \\<Rightarrow> t\n  bval b s\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>(c, s) \\<Rightarrow> s';\n         (WHILE b DO c, s') \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto\n      \\<comment> \\<open>now we can build a derivation tree for the @{text IF}\\<close>\n      \\<comment> \\<open>first, the body of the True-branch:\\<close>"], ["proof (state)\nthis:\n  (c, s) \\<Rightarrow> s'\n  (WHILE b DO c, s') \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "hence \"(c;; ?w, s) \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  (c, s) \\<Rightarrow> s'\n  (WHILE b DO c, s') \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. (c;; WHILE b DO c, s) \\<Rightarrow> t", "by (rule Seq)\n      \\<comment> \\<open>then the whole @{text IF}\\<close>"], ["proof (state)\nthis:\n  (c;; WHILE b DO c, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "with \\<open>bval b s\\<close>"], ["proof (chain)\npicking this:\n  bval b s\n  (c;; WHILE b DO c, s) \\<Rightarrow> t", "have \"(?iw, s) \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  bval b s\n  (c;; WHILE b DO c, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t", "by (rule IfTrue)"], ["proof (state)\nthis:\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "}"], ["proof (state)\nthis:\n  bval b s \\<Longrightarrow>\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "ultimately\n    \\<comment> \\<open>both cases together give us what we want:\\<close>"], ["proof (chain)\npicking this:\n  \\<not> bval b s \\<Longrightarrow>\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t\n  bval b s \\<Longrightarrow>\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t", "have \"(?iw, s) \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<not> bval b s \\<Longrightarrow>\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t\n  bval b s \\<Longrightarrow>\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t", "by blast"], ["proof (state)\nthis:\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "}"], ["proof (state)\nthis:\n  (WHILE b DO c, ?s2) \\<Rightarrow> ?t2 \\<Longrightarrow>\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, ?s2) \\<Rightarrow> ?t2\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "moreover\n  \\<comment> \\<open>now the other direction:\\<close>"], ["proof (state)\nthis:\n  (WHILE b DO c, ?s2) \\<Rightarrow> ?t2 \\<Longrightarrow>\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, ?s2) \\<Rightarrow> ?t2\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "{"], ["proof (state)\nthis:\n  (WHILE b DO c, ?s2) \\<Rightarrow> ?t2 \\<Longrightarrow>\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, ?s2) \\<Rightarrow> ?t2\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "fix s t"], ["proof (state)\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "assume \"(?iw, s) \\<Rightarrow> t\"\n    \\<comment> \\<open>again, if @{text b} is @{text False} in state @{text s}, then the False-branch\\<close>\n    \\<comment> \\<open>of the @{text IF} is executed, and both statements do nothing:\\<close>"], ["proof (state)\nthis:\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "{"], ["proof (state)\nthis:\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "assume \"\\<not>bval b s\""], ["proof (state)\nthis:\n  \\<not> bval b s\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "hence \"s = t\""], ["proof (prove)\nusing this:\n  \\<not> bval b s\n\ngoal (1 subgoal):\n 1. s = t", "using \\<open>(?iw, s) \\<Rightarrow> t\\<close>"], ["proof (prove)\nusing this:\n  \\<not> bval b s\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. s = t", "by blast"], ["proof (state)\nthis:\n  s = t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "hence \"(?w, s) \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  s = t\n\ngoal (1 subgoal):\n 1. (WHILE b DO c, s) \\<Rightarrow> t", "using \\<open>\\<not>bval b s\\<close>"], ["proof (prove)\nusing this:\n  s = t\n  \\<not> bval b s\n\ngoal (1 subgoal):\n 1. (WHILE b DO c, s) \\<Rightarrow> t", "by blast"], ["proof (state)\nthis:\n  (WHILE b DO c, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "}"], ["proof (state)\nthis:\n  \\<not> bval b s \\<Longrightarrow> (WHILE b DO c, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "moreover\n    \\<comment> \\<open>on the other hand, if @{text b} is @{text True} in state @{text s},\\<close>\n    \\<comment> \\<open>then this time only the @{text IfTrue} rule can have be used\\<close>"], ["proof (state)\nthis:\n  \\<not> bval b s \\<Longrightarrow> (WHILE b DO c, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "{"], ["proof (state)\nthis:\n  \\<not> bval b s \\<Longrightarrow> (WHILE b DO c, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "assume \"bval b s\""], ["proof (state)\nthis:\n  bval b s\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "with \\<open>(?iw, s) \\<Rightarrow> t\\<close>"], ["proof (chain)\npicking this:\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t\n  bval b s", "have \"(c;; ?w, s) \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, s) \\<Rightarrow> t\n  bval b s\n\ngoal (1 subgoal):\n 1. (c;; WHILE b DO c, s) \\<Rightarrow> t", "by auto\n      \\<comment> \\<open>and for this, only the Seq-rule is applicable:\\<close>"], ["proof (state)\nthis:\n  (c;; WHILE b DO c, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "then"], ["proof (chain)\npicking this:\n  (c;; WHILE b DO c, s) \\<Rightarrow> t", "obtain s' where\n        \"(c, s) \\<Rightarrow> s'\" and \"(?w, s') \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  (c;; WHILE b DO c, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>(c, s) \\<Rightarrow> s';\n         (WHILE b DO c, s') \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto\n      \\<comment> \\<open>with this information, we can build a derivation tree for the @{text WHILE}\\<close>"], ["proof (state)\nthis:\n  (c, s) \\<Rightarrow> s'\n  (WHILE b DO c, s') \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "with \\<open>bval b s\\<close>"], ["proof (chain)\npicking this:\n  bval b s\n  (c, s) \\<Rightarrow> s'\n  (WHILE b DO c, s') \\<Rightarrow> t", "have \"(?w, s) \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  bval b s\n  (c, s) \\<Rightarrow> s'\n  (WHILE b DO c, s') \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. (WHILE b DO c, s) \\<Rightarrow> t", "by (rule WhileTrue)"], ["proof (state)\nthis:\n  (WHILE b DO c, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "}"], ["proof (state)\nthis:\n  bval b s \\<Longrightarrow> (WHILE b DO c, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "ultimately\n    \\<comment> \\<open>both cases together again give us what we want:\\<close>"], ["proof (chain)\npicking this:\n  \\<not> bval b s \\<Longrightarrow> (WHILE b DO c, s) \\<Rightarrow> t\n  bval b s \\<Longrightarrow> (WHILE b DO c, s) \\<Rightarrow> t", "have \"(?w, s) \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<not> bval b s \\<Longrightarrow> (WHILE b DO c, s) \\<Rightarrow> t\n  bval b s \\<Longrightarrow> (WHILE b DO c, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. (WHILE b DO c, s) \\<Rightarrow> t", "by blast"], ["proof (state)\nthis:\n  (WHILE b DO c, s) \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "}"], ["proof (state)\nthis:\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, ?s2) \\<Rightarrow>\n  ?t2 \\<Longrightarrow>\n  (WHILE b DO c, ?s2) \\<Rightarrow> ?t2\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "ultimately"], ["proof (chain)\npicking this:\n  (WHILE b DO c, ?s2) \\<Rightarrow> ?t2 \\<Longrightarrow>\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, ?s2) \\<Rightarrow> ?t2\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, ?s2) \\<Rightarrow>\n  ?t2 \\<Longrightarrow>\n  (WHILE b DO c, ?s2) \\<Rightarrow> ?t2", "show ?thesis"], ["proof (prove)\nusing this:\n  (WHILE b DO c, ?s2) \\<Rightarrow> ?t2 \\<Longrightarrow>\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, ?s2) \\<Rightarrow> ?t2\n  (IF b THEN c;; WHILE b DO c ELSE SKIP, ?s2) \\<Rightarrow>\n  ?t2 \\<Longrightarrow>\n  (WHILE b DO c, ?s2) \\<Rightarrow> ?t2\n\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "by blast"], ["proof (state)\nthis:\n  WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Luckily, such lengthy proofs are seldom necessary.  Isabelle can\nprove many such facts automatically.\\<close>"], ["", "lemma while_unfold:\n  \"(WHILE b DO c) \\<sim> (IF b THEN c;; WHILE b DO c ELSE SKIP)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WHILE b DO c \\<sim> IF b THEN c;; WHILE b DO c ELSE SKIP", "by blast"], ["", "lemma triv_if:\n  \"(IF b THEN c ELSE c) \\<sim> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. IF b THEN c ELSE c \\<sim> c", "by blast"], ["", "lemma commute_if:\n  \"(IF b1 THEN (IF b2 THEN c11 ELSE c12) ELSE c2) \n   \\<sim> \n   (IF b2 THEN (IF b1 THEN c11 ELSE c2) ELSE (IF b1 THEN c12 ELSE c2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. IF b1 THEN IF b2 THEN c11 ELSE c12 ELSE c2 \\<sim>\n    IF b2 THEN IF b1 THEN c11 ELSE c2 ELSE IF b1 THEN c12 ELSE c2", "by blast"], ["", "lemma sim_while_cong_aux:\n  \"(WHILE b DO c,s) \\<Rightarrow> t  \\<Longrightarrow> c \\<sim> c' \\<Longrightarrow>  (WHILE b DO c',s) \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(WHILE b DO c, s) \\<Rightarrow> t; c \\<sim> c'\\<rbrakk>\n    \\<Longrightarrow> (WHILE b DO c', s) \\<Rightarrow> t", "apply(induction \"WHILE b DO c\" s t arbitrary: b c rule: big_step_induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b s c.\n       \\<lbrakk>\\<not> bval b s; c \\<sim> c'\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c', s) \\<Rightarrow> s\n 2. \\<And>b s\\<^sub>1 c s\\<^sub>2 s\\<^sub>3.\n       \\<lbrakk>bval b s\\<^sub>1; (c, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>b ca.\n           \\<lbrakk>c = WHILE b DO ca; ca \\<sim> c'\\<rbrakk>\n           \\<Longrightarrow> (WHILE b DO c', s\\<^sub>1) \\<Rightarrow>\n                             s\\<^sub>2;\n        (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        c \\<sim> c' \\<Longrightarrow>\n        (WHILE b DO c', s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        c \\<sim> c'\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c', s\\<^sub>1) \\<Rightarrow> s\\<^sub>3", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b s\\<^sub>1 c s\\<^sub>2 s\\<^sub>3.\n       \\<lbrakk>bval b s\\<^sub>1; (c, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>b ca.\n           \\<lbrakk>c = WHILE b DO ca; ca \\<sim> c'\\<rbrakk>\n           \\<Longrightarrow> (WHILE b DO c', s\\<^sub>1) \\<Rightarrow>\n                             s\\<^sub>2;\n        (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        c \\<sim> c' \\<Longrightarrow>\n        (WHILE b DO c', s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        c \\<sim> c'\\<rbrakk>\n       \\<Longrightarrow> (WHILE b DO c', s\\<^sub>1) \\<Rightarrow> s\\<^sub>3", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma sim_while_cong: \"c \\<sim> c' \\<Longrightarrow> WHILE b DO c \\<sim> WHILE b DO c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<sim> c' \\<Longrightarrow> WHILE b DO c \\<sim> WHILE b DO c'", "by (metis sim_while_cong_aux)"], ["", "text \\<open>Command equivalence is an equivalence relation, i.e.\\ it is\nreflexive, symmetric, and transitive. Because we used an abbreviation\nabove, Isabelle derives this automatically.\\<close>"], ["", "lemma sim_refl:  \"c \\<sim> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<sim> c", "by simp"], ["", "lemma sim_sym:   \"(c \\<sim> c') = (c' \\<sim> c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c \\<sim> c') = (c' \\<sim> c)", "by auto"], ["", "lemma sim_trans: \"c \\<sim> c' \\<Longrightarrow> c' \\<sim> c'' \\<Longrightarrow> c \\<sim> c''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<sim> c'; c' \\<sim> c''\\<rbrakk>\n    \\<Longrightarrow> c \\<sim> c''", "by auto"], ["", "subsection \"Execution is deterministic\""], ["", "text \\<open>This proof is automatic.\\<close>"], ["", "theorem big_step_determ: \"\\<lbrakk> (c,s) \\<Rightarrow> t; (c,s) \\<Rightarrow> u \\<rbrakk> \\<Longrightarrow> u = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(c, s) \\<Rightarrow> t; (c, s) \\<Rightarrow> u\\<rbrakk>\n    \\<Longrightarrow> u = t", "by (induction arbitrary: u rule: big_step.induct) blast+"], ["", "text \\<open>\n  This is the proof as you might present it in a lecture. The remaining\n  cases are simple enough to be proved automatically:\n\\<close>"], ["", "theorem\n  \"(c,s) \\<Rightarrow> t  \\<Longrightarrow>  (c,s) \\<Rightarrow> t'  \\<Longrightarrow>  t' = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(c, s) \\<Rightarrow> t; (c, s) \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> t' = t", "proof (induction arbitrary: t' rule: big_step.induct)\n  \\<comment> \\<open>the only interesting case, @{text WhileTrue}:\\<close>"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>s t'. (SKIP, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s\n 2. \\<And>x a s t'.\n       (x ::= a, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s(x := aval a s)\n 3. \\<And>c\\<^sub>1 s\\<^sub>1 s\\<^sub>2 c\\<^sub>2 s\\<^sub>3 t'.\n       \\<lbrakk>(c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>t'.\n           (c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>2;\n        (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        \\<And>t'.\n           (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>3;\n        (c\\<^sub>1;; c\\<^sub>2, s\\<^sub>1) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\\<^sub>3\n 4. \\<And>b s c\\<^sub>1 t c\\<^sub>2 t'.\n       \\<lbrakk>bval b s; (c\\<^sub>1, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>1, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 5. \\<And>b s c\\<^sub>2 t c\\<^sub>1 t'.\n       \\<lbrakk>\\<not> bval b s; (c\\<^sub>2, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>2, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 6. \\<And>b s c t'.\n       \\<lbrakk>\\<not> bval b s; (WHILE b DO c, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\n 7. \\<And>b s\\<^sub>1 c s\\<^sub>2 s\\<^sub>3 t'.\n       \\<lbrakk>bval b s\\<^sub>1; (c, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>t'.\n           (c, s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow> t' = s\\<^sub>2;\n        (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        \\<And>t'.\n           (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>3;\n        (WHILE b DO c, s\\<^sub>1) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\\<^sub>3", "fix b c s s\\<^sub>1 t t'\n  \\<comment> \\<open>The assumptions of the rule:\\<close>"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>s t'. (SKIP, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s\n 2. \\<And>x a s t'.\n       (x ::= a, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s(x := aval a s)\n 3. \\<And>c\\<^sub>1 s\\<^sub>1 s\\<^sub>2 c\\<^sub>2 s\\<^sub>3 t'.\n       \\<lbrakk>(c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>t'.\n           (c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>2;\n        (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        \\<And>t'.\n           (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>3;\n        (c\\<^sub>1;; c\\<^sub>2, s\\<^sub>1) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\\<^sub>3\n 4. \\<And>b s c\\<^sub>1 t c\\<^sub>2 t'.\n       \\<lbrakk>bval b s; (c\\<^sub>1, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>1, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 5. \\<And>b s c\\<^sub>2 t c\\<^sub>1 t'.\n       \\<lbrakk>\\<not> bval b s; (c\\<^sub>2, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>2, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 6. \\<And>b s c t'.\n       \\<lbrakk>\\<not> bval b s; (WHILE b DO c, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\n 7. \\<And>b s\\<^sub>1 c s\\<^sub>2 s\\<^sub>3 t'.\n       \\<lbrakk>bval b s\\<^sub>1; (c, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>t'.\n           (c, s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow> t' = s\\<^sub>2;\n        (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        \\<And>t'.\n           (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>3;\n        (WHILE b DO c, s\\<^sub>1) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\\<^sub>3", "assume \"bval b s\" and \"(c,s) \\<Rightarrow> s\\<^sub>1\" and \"(WHILE b DO c,s\\<^sub>1) \\<Rightarrow> t\"\n  \\<comment> \\<open>Ind.Hyp; note the @{text\"\\<And>\"} because of arbitrary:\\<close>"], ["proof (state)\nthis:\n  bval b s\n  (c, s) \\<Rightarrow> s\\<^sub>1\n  (WHILE b DO c, s\\<^sub>1) \\<Rightarrow> t\n\ngoal (7 subgoals):\n 1. \\<And>s t'. (SKIP, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s\n 2. \\<And>x a s t'.\n       (x ::= a, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s(x := aval a s)\n 3. \\<And>c\\<^sub>1 s\\<^sub>1 s\\<^sub>2 c\\<^sub>2 s\\<^sub>3 t'.\n       \\<lbrakk>(c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>t'.\n           (c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>2;\n        (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        \\<And>t'.\n           (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>3;\n        (c\\<^sub>1;; c\\<^sub>2, s\\<^sub>1) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\\<^sub>3\n 4. \\<And>b s c\\<^sub>1 t c\\<^sub>2 t'.\n       \\<lbrakk>bval b s; (c\\<^sub>1, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>1, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 5. \\<And>b s c\\<^sub>2 t c\\<^sub>1 t'.\n       \\<lbrakk>\\<not> bval b s; (c\\<^sub>2, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>2, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 6. \\<And>b s c t'.\n       \\<lbrakk>\\<not> bval b s; (WHILE b DO c, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\n 7. \\<And>b s\\<^sub>1 c s\\<^sub>2 s\\<^sub>3 t'.\n       \\<lbrakk>bval b s\\<^sub>1; (c, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>t'.\n           (c, s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow> t' = s\\<^sub>2;\n        (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        \\<And>t'.\n           (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>3;\n        (WHILE b DO c, s\\<^sub>1) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\\<^sub>3", "assume IHc: \"\\<And>t'. (c,s) \\<Rightarrow> t' \\<Longrightarrow> t' = s\\<^sub>1\""], ["proof (state)\nthis:\n  (c, s) \\<Rightarrow> ?t' \\<Longrightarrow> ?t' = s\\<^sub>1\n\ngoal (7 subgoals):\n 1. \\<And>s t'. (SKIP, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s\n 2. \\<And>x a s t'.\n       (x ::= a, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s(x := aval a s)\n 3. \\<And>c\\<^sub>1 s\\<^sub>1 s\\<^sub>2 c\\<^sub>2 s\\<^sub>3 t'.\n       \\<lbrakk>(c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>t'.\n           (c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>2;\n        (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        \\<And>t'.\n           (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>3;\n        (c\\<^sub>1;; c\\<^sub>2, s\\<^sub>1) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\\<^sub>3\n 4. \\<And>b s c\\<^sub>1 t c\\<^sub>2 t'.\n       \\<lbrakk>bval b s; (c\\<^sub>1, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>1, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 5. \\<And>b s c\\<^sub>2 t c\\<^sub>1 t'.\n       \\<lbrakk>\\<not> bval b s; (c\\<^sub>2, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>2, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 6. \\<And>b s c t'.\n       \\<lbrakk>\\<not> bval b s; (WHILE b DO c, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\n 7. \\<And>b s\\<^sub>1 c s\\<^sub>2 s\\<^sub>3 t'.\n       \\<lbrakk>bval b s\\<^sub>1; (c, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>t'.\n           (c, s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow> t' = s\\<^sub>2;\n        (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        \\<And>t'.\n           (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>3;\n        (WHILE b DO c, s\\<^sub>1) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\\<^sub>3", "assume IHw: \"\\<And>t'. (WHILE b DO c,s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow> t' = t\"\n  \\<comment> \\<open>Premise of implication:\\<close>"], ["proof (state)\nthis:\n  (WHILE b DO c, s\\<^sub>1) \\<Rightarrow> ?t' \\<Longrightarrow> ?t' = t\n\ngoal (7 subgoals):\n 1. \\<And>s t'. (SKIP, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s\n 2. \\<And>x a s t'.\n       (x ::= a, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s(x := aval a s)\n 3. \\<And>c\\<^sub>1 s\\<^sub>1 s\\<^sub>2 c\\<^sub>2 s\\<^sub>3 t'.\n       \\<lbrakk>(c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>t'.\n           (c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>2;\n        (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        \\<And>t'.\n           (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>3;\n        (c\\<^sub>1;; c\\<^sub>2, s\\<^sub>1) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\\<^sub>3\n 4. \\<And>b s c\\<^sub>1 t c\\<^sub>2 t'.\n       \\<lbrakk>bval b s; (c\\<^sub>1, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>1, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 5. \\<And>b s c\\<^sub>2 t c\\<^sub>1 t'.\n       \\<lbrakk>\\<not> bval b s; (c\\<^sub>2, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>2, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 6. \\<And>b s c t'.\n       \\<lbrakk>\\<not> bval b s; (WHILE b DO c, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\n 7. \\<And>b s\\<^sub>1 c s\\<^sub>2 s\\<^sub>3 t'.\n       \\<lbrakk>bval b s\\<^sub>1; (c, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>t'.\n           (c, s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow> t' = s\\<^sub>2;\n        (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        \\<And>t'.\n           (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>3;\n        (WHILE b DO c, s\\<^sub>1) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\\<^sub>3", "assume \"(WHILE b DO c,s) \\<Rightarrow> t'\""], ["proof (state)\nthis:\n  (WHILE b DO c, s) \\<Rightarrow> t'\n\ngoal (7 subgoals):\n 1. \\<And>s t'. (SKIP, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s\n 2. \\<And>x a s t'.\n       (x ::= a, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s(x := aval a s)\n 3. \\<And>c\\<^sub>1 s\\<^sub>1 s\\<^sub>2 c\\<^sub>2 s\\<^sub>3 t'.\n       \\<lbrakk>(c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>t'.\n           (c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>2;\n        (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        \\<And>t'.\n           (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>3;\n        (c\\<^sub>1;; c\\<^sub>2, s\\<^sub>1) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\\<^sub>3\n 4. \\<And>b s c\\<^sub>1 t c\\<^sub>2 t'.\n       \\<lbrakk>bval b s; (c\\<^sub>1, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>1, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 5. \\<And>b s c\\<^sub>2 t c\\<^sub>1 t'.\n       \\<lbrakk>\\<not> bval b s; (c\\<^sub>2, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>2, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 6. \\<And>b s c t'.\n       \\<lbrakk>\\<not> bval b s; (WHILE b DO c, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\n 7. \\<And>b s\\<^sub>1 c s\\<^sub>2 s\\<^sub>3 t'.\n       \\<lbrakk>bval b s\\<^sub>1; (c, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>t'.\n           (c, s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow> t' = s\\<^sub>2;\n        (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        \\<And>t'.\n           (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>3;\n        (WHILE b DO c, s\\<^sub>1) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\\<^sub>3", "with \\<open>bval b s\\<close>"], ["proof (chain)\npicking this:\n  bval b s\n  (WHILE b DO c, s) \\<Rightarrow> t'", "obtain s\\<^sub>1' where\n      c: \"(c,s) \\<Rightarrow> s\\<^sub>1'\" and\n      w: \"(WHILE b DO c,s\\<^sub>1') \\<Rightarrow> t'\""], ["proof (prove)\nusing this:\n  bval b s\n  (WHILE b DO c, s) \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. (\\<And>s\\<^sub>1'.\n        \\<lbrakk>(c, s) \\<Rightarrow> s\\<^sub>1';\n         (WHILE b DO c, s\\<^sub>1') \\<Rightarrow> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (c, s) \\<Rightarrow> s\\<^sub>1'\n  (WHILE b DO c, s\\<^sub>1') \\<Rightarrow> t'\n\ngoal (7 subgoals):\n 1. \\<And>s t'. (SKIP, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s\n 2. \\<And>x a s t'.\n       (x ::= a, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s(x := aval a s)\n 3. \\<And>c\\<^sub>1 s\\<^sub>1 s\\<^sub>2 c\\<^sub>2 s\\<^sub>3 t'.\n       \\<lbrakk>(c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>t'.\n           (c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>2;\n        (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        \\<And>t'.\n           (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>3;\n        (c\\<^sub>1;; c\\<^sub>2, s\\<^sub>1) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\\<^sub>3\n 4. \\<And>b s c\\<^sub>1 t c\\<^sub>2 t'.\n       \\<lbrakk>bval b s; (c\\<^sub>1, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>1, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 5. \\<And>b s c\\<^sub>2 t c\\<^sub>1 t'.\n       \\<lbrakk>\\<not> bval b s; (c\\<^sub>2, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>2, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 6. \\<And>b s c t'.\n       \\<lbrakk>\\<not> bval b s; (WHILE b DO c, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\n 7. \\<And>b s\\<^sub>1 c s\\<^sub>2 s\\<^sub>3 t'.\n       \\<lbrakk>bval b s\\<^sub>1; (c, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>t'.\n           (c, s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow> t' = s\\<^sub>2;\n        (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        \\<And>t'.\n           (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>3;\n        (WHILE b DO c, s\\<^sub>1) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\\<^sub>3", "from c IHc"], ["proof (chain)\npicking this:\n  (c, s) \\<Rightarrow> s\\<^sub>1'\n  (c, s) \\<Rightarrow> ?t' \\<Longrightarrow> ?t' = s\\<^sub>1", "have \"s\\<^sub>1' = s\\<^sub>1\""], ["proof (prove)\nusing this:\n  (c, s) \\<Rightarrow> s\\<^sub>1'\n  (c, s) \\<Rightarrow> ?t' \\<Longrightarrow> ?t' = s\\<^sub>1\n\ngoal (1 subgoal):\n 1. s\\<^sub>1' = s\\<^sub>1", "by blast"], ["proof (state)\nthis:\n  s\\<^sub>1' = s\\<^sub>1\n\ngoal (7 subgoals):\n 1. \\<And>s t'. (SKIP, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s\n 2. \\<And>x a s t'.\n       (x ::= a, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s(x := aval a s)\n 3. \\<And>c\\<^sub>1 s\\<^sub>1 s\\<^sub>2 c\\<^sub>2 s\\<^sub>3 t'.\n       \\<lbrakk>(c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>t'.\n           (c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>2;\n        (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        \\<And>t'.\n           (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>3;\n        (c\\<^sub>1;; c\\<^sub>2, s\\<^sub>1) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\\<^sub>3\n 4. \\<And>b s c\\<^sub>1 t c\\<^sub>2 t'.\n       \\<lbrakk>bval b s; (c\\<^sub>1, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>1, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 5. \\<And>b s c\\<^sub>2 t c\\<^sub>1 t'.\n       \\<lbrakk>\\<not> bval b s; (c\\<^sub>2, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>2, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 6. \\<And>b s c t'.\n       \\<lbrakk>\\<not> bval b s; (WHILE b DO c, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\n 7. \\<And>b s\\<^sub>1 c s\\<^sub>2 s\\<^sub>3 t'.\n       \\<lbrakk>bval b s\\<^sub>1; (c, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>t'.\n           (c, s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow> t' = s\\<^sub>2;\n        (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        \\<And>t'.\n           (WHILE b DO c, s\\<^sub>2) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>3;\n        (WHILE b DO c, s\\<^sub>1) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\\<^sub>3", "with w IHw"], ["proof (chain)\npicking this:\n  (WHILE b DO c, s\\<^sub>1') \\<Rightarrow> t'\n  (WHILE b DO c, s\\<^sub>1) \\<Rightarrow> ?t' \\<Longrightarrow> ?t' = t\n  s\\<^sub>1' = s\\<^sub>1", "show \"t' = t\""], ["proof (prove)\nusing this:\n  (WHILE b DO c, s\\<^sub>1') \\<Rightarrow> t'\n  (WHILE b DO c, s\\<^sub>1) \\<Rightarrow> ?t' \\<Longrightarrow> ?t' = t\n  s\\<^sub>1' = s\\<^sub>1\n\ngoal (1 subgoal):\n 1. t' = t", "by blast"], ["proof (state)\nthis:\n  t' = t\n\ngoal (6 subgoals):\n 1. \\<And>s t'. (SKIP, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s\n 2. \\<And>x a s t'.\n       (x ::= a, s) \\<Rightarrow> t' \\<Longrightarrow> t' = s(x := aval a s)\n 3. \\<And>c\\<^sub>1 s\\<^sub>1 s\\<^sub>2 c\\<^sub>2 s\\<^sub>3 t'.\n       \\<lbrakk>(c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> s\\<^sub>2;\n        \\<And>t'.\n           (c\\<^sub>1, s\\<^sub>1) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>2;\n        (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> s\\<^sub>3;\n        \\<And>t'.\n           (c\\<^sub>2, s\\<^sub>2) \\<Rightarrow> t' \\<Longrightarrow>\n           t' = s\\<^sub>3;\n        (c\\<^sub>1;; c\\<^sub>2, s\\<^sub>1) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s\\<^sub>3\n 4. \\<And>b s c\\<^sub>1 t c\\<^sub>2 t'.\n       \\<lbrakk>bval b s; (c\\<^sub>1, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>1, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 5. \\<And>b s c\\<^sub>2 t c\\<^sub>1 t'.\n       \\<lbrakk>\\<not> bval b s; (c\\<^sub>2, s) \\<Rightarrow> t;\n        \\<And>t'. (c\\<^sub>2, s) \\<Rightarrow> t' \\<Longrightarrow> t' = t;\n        (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = t\n 6. \\<And>b s c t'.\n       \\<lbrakk>\\<not> bval b s; (WHILE b DO c, s) \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = s", "qed blast+ \\<comment> \\<open>prove the rest automatically\\<close>"], ["", "end"]]}