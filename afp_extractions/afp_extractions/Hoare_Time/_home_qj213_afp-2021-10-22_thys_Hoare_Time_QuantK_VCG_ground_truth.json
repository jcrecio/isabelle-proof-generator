{"file_name": "/home/qj213/afp-2021-10-22/thys/Hoare_Time/QuantK_VCG.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Hoare_Time", "problem_names": ["lemma mydivcode: \"k>0 \\<Longrightarrow> D\\<ge>k \\<Longrightarrow> mydiv D k = Suc (mydiv (D-k) k)\"", "lemma mydivcode1: \"mydiv 0 k = 0\"", "lemma mydivcode2: \"k>0 \\<Longrightarrow> 0<D \\<Longrightarrow> D<k \\<Longrightarrow> mydiv D k = Suc 0\"", "lemma mydiv_mono: \"a\\<le>b \\<Longrightarrow> mydiv a k \\<le> mydiv b k\"", "lemma mydiv_cancel: \"0 < k \\<Longrightarrow> mydiv (k * i) k = i\"", "lemma assumes k: \"k>0\" and B: \"B \\<le> k*A\"\n  shows mydiv_le_E: \"mydiv B k \\<le> A\"", "lemma mydiv_mult_leq: \"0 < k \\<Longrightarrow> l\\<le>k \\<Longrightarrow> mydiv (l*A) k \\<le> A\"", "lemma mydiv_cancel3: \"0 < k \\<Longrightarrow> i \\<le> k * mydiv i k\"", "lemma ediv_enat[simp]: \"ediv (enat a) k = enat (mydiv a k)\"", "lemma ediv_mydiv[simp]: \"ediv (enat a) k \\<le> enat f \\<longleftrightarrow> mydiv a k \\<le> f\"", "lemma ediv_mono: \"a\\<le>b \\<Longrightarrow> ediv a k \\<le> ediv b k\"", "lemma ediv_cancel2: \"k>0 \\<Longrightarrow> ediv (enat k * x) k = x\"", "lemma ediv_cancel3: \"k>0 \\<Longrightarrow> A \\<le> enat k * ediv A k\"", "lemma vc_sound: \"vc C Q \\<Longrightarrow>  \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C { Q }\"", "lemma vc_sound': \"\\<lbrakk>vc C Q ; (\\<forall>s. pre C Q s \\<le> P s) \\<rbrakk> \\<Longrightarrow>  \\<turnstile>\\<^sub>2\\<^sub>' {P} strip C { Q }\"", "lemma vc_sound'': \"\\<lbrakk>vc C Q' ; (\\<forall>s.  pre C Q' s \\<le> k * P s)  ; (\\<And>s. enat k * Q s \\<le> Q' s); k>0 \\<rbrakk> \\<Longrightarrow>  \\<turnstile>\\<^sub>2\\<^sub>' {P} strip C { Q }\"", "lemma pre_mono: assumes \"\\<And>s. P' s \\<le> P s\" \n  shows \"\\<And>s. pre C P' s \\<le> pre C P s\"", "lemma vc_mono: assumes \"\\<And>s. P' s \\<le> P s\" \n  shows \"vc C P \\<Longrightarrow> vc C P'\"", "lemma \"\\<turnstile>\\<^sub>2\\<^sub>' { P } c { Q } \\<Longrightarrow> \\<exists>C. strip C = c \\<and> vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)\"\n  (is \"_ \\<Longrightarrow>   \\<exists>C. ?G P c Q C\")", "lemma \"\\<turnstile>\\<^sub>Z { P } c { Q } \\<Longrightarrow> \\<exists>C. strip C = c \\<and> vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)\"\n  (is \"_ \\<Longrightarrow>   \\<exists>C. ?G P c Q C\")"], "translations": [["", "lemma mydivcode: \"k>0 \\<Longrightarrow> D\\<ge>k \\<Longrightarrow> mydiv D k = Suc (mydiv (D-k) k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k; k \\<le> D\\<rbrakk>\n    \\<Longrightarrow> mydiv D k = Suc (mydiv (D - k) k)", "unfolding mydiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k; k \\<le> D\\<rbrakk>\n    \\<Longrightarrow> (if k dvd D then D div k else D div k + 1) =\n                      Suc (if k dvd D - k then (D - k) div k\n                           else (D - k) div k + 1)", "apply (auto simp add: le_div_geq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k; k \\<le> D; k dvd D - k\\<rbrakk>\n    \\<Longrightarrow> k dvd D", "using dvd_minus_self"], ["proof (prove)\nusing this:\n  (?m dvd ?n - ?m) = (?n < ?m \\<or> ?m dvd ?n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k; k \\<le> D; k dvd D - k\\<rbrakk>\n    \\<Longrightarrow> k dvd D", "by auto"], ["", "lemma mydivcode1: \"mydiv 0 k = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mydiv 0 k = 0", "unfolding mydiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if k dvd 0 then 0 div k else 0 div k + 1) = 0", "by auto"], ["", "lemma mydivcode2: \"k>0 \\<Longrightarrow> 0<D \\<Longrightarrow> D<k \\<Longrightarrow> mydiv D k = Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k; 0 < D; D < k\\<rbrakk>\n    \\<Longrightarrow> mydiv D k = Suc 0", "unfolding mydiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k; 0 < D; D < k\\<rbrakk>\n    \\<Longrightarrow> (if k dvd D then D div k else D div k + 1) = Suc 0", "by auto"], ["", "lemma mydiv_mono: \"a\\<le>b \\<Longrightarrow> mydiv a k \\<le> mydiv b k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> mydiv a k \\<le> mydiv b k", "unfolding mydiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow>\n    (if k dvd a then a div k else a div k + 1)\n    \\<le> (if k dvd b then b div k else b div k + 1)", "apply(cases \"k dvd a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<le> b; k dvd a\\<rbrakk>\n    \\<Longrightarrow> (if k dvd a then a div k else a div k + 1)\n                      \\<le> (if k dvd b then b div k else b div k + 1)\n 2. \\<lbrakk>a \\<le> b; \\<not> k dvd a\\<rbrakk>\n    \\<Longrightarrow> (if k dvd a then a div k else a div k + 1)\n                      \\<le> (if k dvd b then b div k else b div k + 1)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; k dvd a\\<rbrakk>\n    \\<Longrightarrow> (if k dvd a then a div k else a div k + 1)\n                      \\<le> (if k dvd b then b div k else b div k + 1)", "apply(cases \"k dvd b\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<le> b; k dvd a; k dvd b\\<rbrakk>\n    \\<Longrightarrow> (if k dvd a then a div k else a div k + 1)\n                      \\<le> (if k dvd b then b div k else b div k + 1)\n 2. \\<lbrakk>a \\<le> b; k dvd a; \\<not> k dvd b\\<rbrakk>\n    \\<Longrightarrow> (if k dvd a then a div k else a div k + 1)\n                      \\<le> (if k dvd b then b div k else b div k + 1)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<le> b; k dvd a; k dvd b\\<rbrakk>\n    \\<Longrightarrow> a div k \\<le> b div k\n 2. \\<lbrakk>a \\<le> b; k dvd a; \\<not> k dvd b\\<rbrakk>\n    \\<Longrightarrow> a div k \\<le> Suc (b div k)", "apply (auto simp add: div_le_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; k dvd a; \\<not> k dvd b\\<rbrakk>\n    \\<Longrightarrow> a div k \\<le> Suc (b div k)", "using div_le_mono le_Suc_eq"], ["proof (prove)\nusing this:\n  ?m \\<le> ?n \\<Longrightarrow> ?m div ?k \\<le> ?n div ?k\n  (?m \\<le> Suc ?n) = (?m \\<le> ?n \\<or> ?m = Suc ?n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; k dvd a; \\<not> k dvd b\\<rbrakk>\n    \\<Longrightarrow> a div k \\<le> Suc (b div k)", "by blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; \\<not> k dvd a\\<rbrakk>\n    \\<Longrightarrow> (if k dvd a then a div k else a div k + 1)\n                      \\<le> (if k dvd b then b div k else b div k + 1)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; \\<not> k dvd a\\<rbrakk>\n    \\<Longrightarrow> (if k dvd a then a div k else a div k + 1)\n                      \\<le> (if k dvd b then b div k else b div k + 1)", "apply(cases \"k dvd b\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<le> b; \\<not> k dvd a; k dvd b\\<rbrakk>\n    \\<Longrightarrow> (if k dvd a then a div k else a div k + 1)\n                      \\<le> (if k dvd b then b div k else b div k + 1)\n 2. \\<lbrakk>a \\<le> b; \\<not> k dvd a; \\<not> k dvd b\\<rbrakk>\n    \\<Longrightarrow> (if k dvd a then a div k else a div k + 1)\n                      \\<le> (if k dvd b then b div k else b div k + 1)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<le> b; \\<not> k dvd a; k dvd b\\<rbrakk>\n    \\<Longrightarrow> Suc (a div k) \\<le> b div k\n 2. \\<lbrakk>a \\<le> b; \\<not> k dvd a; \\<not> k dvd b\\<rbrakk>\n    \\<Longrightarrow> a div k \\<le> b div k", "apply (auto simp add: div_le_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; \\<not> k dvd a; k dvd b\\<rbrakk>\n    \\<Longrightarrow> Suc (a div k) \\<le> b div k", "by (metis Suc_leI add.right_neutral div_le_mono div_mult_mod_eq dvd_imp_mod_0 le_add1 le_antisym less_le)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mydiv_cancel: \"0 < k \\<Longrightarrow> mydiv (k * i) k = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow> mydiv (k * i) k = i", "unfolding mydiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow>\n    (if k dvd k * i then k * i div k else k * i div k + 1) = i", "by auto"], ["", "lemma assumes k: \"k>0\" and B: \"B \\<le> k*A\"\n  shows mydiv_le_E: \"mydiv B k \\<le> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mydiv B k \\<le> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mydiv B k \\<le> A", "from mydiv_mono[OF B] and k mydiv_cancel"], ["proof (chain)\npicking this:\n  mydiv B ?k \\<le> mydiv (k * A) ?k\n  0 < k\n  0 < ?k \\<Longrightarrow> mydiv (?k * ?i) ?k = ?i", "show ?thesis"], ["proof (prove)\nusing this:\n  mydiv B ?k \\<le> mydiv (k * A) ?k\n  0 < k\n  0 < ?k \\<Longrightarrow> mydiv (?k * ?i) ?k = ?i\n\ngoal (1 subgoal):\n 1. mydiv B k \\<le> A", "by metis"], ["proof (state)\nthis:\n  mydiv B k \\<le> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mydiv_mult_leq: \"0 < k \\<Longrightarrow> l\\<le>k \\<Longrightarrow> mydiv (l*A) k \\<le> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k; l \\<le> k\\<rbrakk>\n    \\<Longrightarrow> mydiv (l * A) k \\<le> A", "by(simp add: mydiv_le_E)"], ["", "lemma mydiv_cancel3: \"0 < k \\<Longrightarrow> i \\<le> k * mydiv i k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow> i \\<le> k * mydiv i k", "by (auto simp add: mydiv_def dividend_less_times_div le_eq_less_or_eq)"], ["", "definition \"ediv a k = (if a=\\<infinity> then \\<infinity> else enat (mydiv (THE i. a=enat i) k))\""], ["", "lemma ediv_enat[simp]: \"ediv (enat a) k = enat (mydiv a k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ediv (enat a) k = enat (mydiv a k)", "unfolding ediv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if enat a = \\<infinity> then \\<infinity>\n     else enat (mydiv (THE i. enat a = enat i) k)) =\n    enat (mydiv a k)", "by auto"], ["", "lemma ediv_mydiv[simp]: \"ediv (enat a) k \\<le> enat f \\<longleftrightarrow> mydiv a k \\<le> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ediv (enat a) k \\<le> enat f) = (mydiv a k \\<le> f)", "unfolding ediv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((if enat a = \\<infinity> then \\<infinity>\n      else enat (mydiv (THE i. enat a = enat i) k))\n     \\<le> enat f) =\n    (mydiv a k \\<le> f)", "by auto"], ["", "lemma ediv_mono: \"a\\<le>b \\<Longrightarrow> ediv a k \\<le> ediv b k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> ediv a k \\<le> ediv b k", "unfolding ediv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow>\n    (if a = \\<infinity> then \\<infinity>\n     else enat (mydiv (THE i. a = enat i) k))\n    \\<le> (if b = \\<infinity> then \\<infinity>\n           else enat (mydiv (THE i. b = enat i) k))", "by (auto simp add: mydiv_mono)"], ["", "lemma ediv_cancel2: \"k>0 \\<Longrightarrow> ediv (enat k * x) k = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow> ediv (enat k * x) k = x", "unfolding ediv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow>\n    (if enat k * x = \\<infinity> then \\<infinity>\n     else enat (mydiv (THE i. enat k * x = enat i) k)) =\n    x", "apply(cases \"x=\\<infinity>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < k; x = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> (if enat k * x = \\<infinity> then \\<infinity>\n                       else enat (mydiv (THE i. enat k * x = enat i) k)) =\n                      x\n 2. \\<lbrakk>0 < k; x \\<noteq> \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> (if enat k * x = \\<infinity> then \\<infinity>\n                       else enat (mydiv (THE i. enat k * x = enat i) k)) =\n                      x", "using mydiv_cancel"], ["proof (prove)\nusing this:\n  0 < ?k \\<Longrightarrow> mydiv (?k * ?i) ?k = ?i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < k; x = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> (if enat k * x = \\<infinity> then \\<infinity>\n                       else enat (mydiv (THE i. enat k * x = enat i) k)) =\n                      x\n 2. \\<lbrakk>0 < k; x \\<noteq> \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> (if enat k * x = \\<infinity> then \\<infinity>\n                       else enat (mydiv (THE i. enat k * x = enat i) k)) =\n                      x", "by auto"], ["", "lemma ediv_cancel3: \"k>0 \\<Longrightarrow> A \\<le> enat k * ediv A k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow> A \\<le> enat k * ediv A k", "unfolding ediv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow>\n    A \\<le> enat k *\n            (if A = \\<infinity> then \\<infinity>\n             else enat (mydiv (THE i. A = enat i) k))", "apply(cases \"A=\\<infinity>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < k; A = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> A \\<le> enat k *\n                              (if A = \\<infinity> then \\<infinity>\n                               else enat (mydiv (THE i. A = enat i) k))\n 2. \\<lbrakk>0 < k; A \\<noteq> \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> A \\<le> enat k *\n                              (if A = \\<infinity> then \\<infinity>\n                               else enat (mydiv (THE i. A = enat i) k))", "using mydiv_cancel3"], ["proof (prove)\nusing this:\n  0 < ?k \\<Longrightarrow> ?i \\<le> ?k * mydiv ?i ?k\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < k; A = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> A \\<le> enat k *\n                              (if A = \\<infinity> then \\<infinity>\n                               else enat (mydiv (THE i. A = enat i) k))\n 2. \\<lbrakk>0 < k; A \\<noteq> \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> A \\<le> enat k *\n                              (if A = \\<infinity> then \\<infinity>\n                               else enat (mydiv (THE i. A = enat i) k))", "by auto"], ["", "subsubsection \"Definition of VCG\""], ["", "datatype acom =\n  Askip                  (\"SKIP\") |\n  Aassign vname aexp     (\"(_ ::= _)\" [1000, 61] 61) |\n  Aseq   acom acom       (\"_;;/ _\"  [60, 61] 60) | \n  Aif bexp acom acom     (\"(IF _/ THEN _/ ELSE _)\"  [0, 0, 61] 61) |\n  Awhile qassn bexp acom  (\"({_}/ WHILE _/ DO _)\"  [0, 0, 61] 61)\n |  Abst nat acom  (\"({_}/ Ab _)\"  [0, 61] 61)"], ["", "notation com.SKIP (\"SKIP\")"], ["", "fun strip :: \"acom \\<Rightarrow> com\" where\n\"strip SKIP = SKIP\" |\n\"strip (x ::= a) = (x ::= a)\" |\n\"strip (C\\<^sub>1;; C\\<^sub>2) = (strip C\\<^sub>1;; strip C\\<^sub>2)\" |\n\"strip (IF b THEN C\\<^sub>1 ELSE C\\<^sub>2) = (IF b THEN strip C\\<^sub>1 ELSE strip C\\<^sub>2)\" |\n\"strip ({_} WHILE b DO C) = (WHILE b DO strip C)\" |\n\"strip ({_} Ab C) = strip C\""], ["", "fun pre :: \"acom \\<Rightarrow> qassn \\<Rightarrow> qassn\" where\n\"pre SKIP Q = (\\<lambda>s. eSuc (Q s))\" |\n\"pre (x ::= a) Q = (\\<lambda>s. eSuc (Q (s[a/x])))\" |\n\"pre (C\\<^sub>1;; C\\<^sub>2) Q = pre C\\<^sub>1 (pre C\\<^sub>2 Q)\" |\n\"pre (IF b THEN C\\<^sub>1 ELSE C\\<^sub>2) Q =\n  (\\<lambda>s. eSuc (if bval b s then pre C\\<^sub>1 Q s  else pre C\\<^sub>2 Q s  ))\" |\n\"pre ({P} WHILE b DO C) Q = (%s. P s + 1)\" |\n\"pre ({k} Ab C) Q = (\\<lambda>s. ediv (pre C (\\<lambda>s. k*Q s) s) k)\""], ["", "text \\<open>In contrast to @{term pre}, @{term vc} produces a formula that is independent of the state:\\<close>"], ["", "fun vc :: \"acom \\<Rightarrow> qassn \\<Rightarrow> bool\" where\n\"vc SKIP Q = True\" |\n\"vc (x ::= a) Q = True\" |\n\"vc (C\\<^sub>1 ;; C\\<^sub>2) Q = ((vc C\\<^sub>1 (pre C\\<^sub>2 Q)) \\<and> (vc C\\<^sub>2 Q) )\" |\n\"vc (IF b THEN C\\<^sub>1 ELSE C\\<^sub>2) Q = (vc C\\<^sub>1 Q \\<and> vc C\\<^sub>2 Q)\" |  \n\"vc ({I} WHILE b DO C) Q =  ( (\\<forall>s.  (pre C (\\<lambda>s. I s + 1) s \\<le> I s + \\<up>(bval b s)) \\<and> ( Q s \\<le> I s + \\<up> (\\<not> bval b s))) \\<and> vc C (%s. I s + 1))\" |\n\"vc ({k} Ab C) Q = (vc C (\\<lambda>s. enat k* Q s) \\<and> k>0 \\<^cancel>\\<open>\\<and> (\\<forall>s. pre C (\\<lambda>s. enat k * Q s) s \\<le> enat k * ediv (pre C (\\<lambda>s. enat k * Q s) s) k)\\<close>)\""], ["", "subsubsection \"Soundness of VCG\""], ["", "lemma vc_sound: \"vc C Q \\<Longrightarrow>  \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C { Q }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vc C Q \\<Longrightarrow>\n    \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q}", "proof (induct C arbitrary: Q)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>Q.\n       vc SKIP Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre SKIP Q} strip SKIP {Q}\n 2. \\<And>x1 x2 Q.\n       vc (x1 ::= x2) Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre (x1 ::= x2) Q} strip (x1 ::= x2)\n                                    {Q}\n 3. \\<And>C1 C2 Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C1 Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q};\n        \\<And>Q.\n           vc C2 Q \\<Longrightarrow>\n           \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q};\n        vc (C1;; C2) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre (C1;; C2) Q}\n                strip (C1;; C2) {Q}\n 4. \\<And>x1 C1 C2 Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C1 Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q};\n        \\<And>Q.\n           vc C2 Q \\<Longrightarrow>\n           \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q};\n        vc (IF x1 THEN C1 ELSE C2) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre\n                  (IF x1 THEN C1 ELSE C2) Q}\n                strip (IF x1 THEN C1 ELSE C2) {Q}\n 5. \\<And>x1 x2 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} WHILE x2 DO C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre\n                  ({x1} WHILE x2 DO C) Q}\n                strip ({x1} WHILE x2 DO C) {Q}\n 6. \\<And>x1 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} Ab C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre ({x1} Ab C) Q}\n                strip ({x1} Ab C) {Q}", "case (Aif b C1 C2)"], ["proof (state)\nthis:\n  vc C1 ?Q \\<Longrightarrow>\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 ?Q} strip C1 {?Q}\n  vc C2 ?Q \\<Longrightarrow>\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 ?Q} strip C2 {?Q}\n  vc (IF b THEN C1 ELSE C2) Q\n\ngoal (6 subgoals):\n 1. \\<And>Q.\n       vc SKIP Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre SKIP Q} strip SKIP {Q}\n 2. \\<And>x1 x2 Q.\n       vc (x1 ::= x2) Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre (x1 ::= x2) Q} strip (x1 ::= x2)\n                                    {Q}\n 3. \\<And>C1 C2 Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C1 Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q};\n        \\<And>Q.\n           vc C2 Q \\<Longrightarrow>\n           \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q};\n        vc (C1;; C2) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre (C1;; C2) Q}\n                strip (C1;; C2) {Q}\n 4. \\<And>x1 C1 C2 Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C1 Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q};\n        \\<And>Q.\n           vc C2 Q \\<Longrightarrow>\n           \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q};\n        vc (IF x1 THEN C1 ELSE C2) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre\n                  (IF x1 THEN C1 ELSE C2) Q}\n                strip (IF x1 THEN C1 ELSE C2) {Q}\n 5. \\<And>x1 x2 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} WHILE x2 DO C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre\n                  ({x1} WHILE x2 DO C) Q}\n                strip ({x1} WHILE x2 DO C) {Q}\n 6. \\<And>x1 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} Ab C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre ({x1} Ab C) Q}\n                strip ({x1} Ab C) {Q}", "then"], ["proof (chain)\npicking this:\n  vc C1 ?Q \\<Longrightarrow>\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 ?Q} strip C1 {?Q}\n  vc C2 ?Q \\<Longrightarrow>\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 ?Q} strip C2 {?Q}\n  vc (IF b THEN C1 ELSE C2) Q", "have Aif1: \"\\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q}\" and Aif2: \"\\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q}\""], ["proof (prove)\nusing this:\n  vc C1 ?Q \\<Longrightarrow>\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 ?Q} strip C1 {?Q}\n  vc C2 ?Q \\<Longrightarrow>\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 ?Q} strip C2 {?Q}\n  vc (IF b THEN C1 ELSE C2) Q\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q} &&&\n    \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q}", "by auto"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q}\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q}\n\ngoal (6 subgoals):\n 1. \\<And>Q.\n       vc SKIP Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre SKIP Q} strip SKIP {Q}\n 2. \\<And>x1 x2 Q.\n       vc (x1 ::= x2) Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre (x1 ::= x2) Q} strip (x1 ::= x2)\n                                    {Q}\n 3. \\<And>C1 C2 Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C1 Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q};\n        \\<And>Q.\n           vc C2 Q \\<Longrightarrow>\n           \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q};\n        vc (C1;; C2) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre (C1;; C2) Q}\n                strip (C1;; C2) {Q}\n 4. \\<And>x1 C1 C2 Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C1 Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q};\n        \\<And>Q.\n           vc C2 Q \\<Longrightarrow>\n           \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q};\n        vc (IF x1 THEN C1 ELSE C2) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre\n                  (IF x1 THEN C1 ELSE C2) Q}\n                strip (IF x1 THEN C1 ELSE C2) {Q}\n 5. \\<And>x1 x2 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} WHILE x2 DO C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre\n                  ({x1} WHILE x2 DO C) Q}\n                strip ({x1} WHILE x2 DO C) {Q}\n 6. \\<And>x1 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} Ab C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre ({x1} Ab C) Q}\n                strip ({x1} Ab C) {Q}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {pre (IF b THEN C1 ELSE C2) Q}\n                                 strip (IF b THEN C1 ELSE C2) {Q}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>a.\n                                     eSuc\n(if bval b a then pre C1 Q a else pre C2 Q a)}\n                                 IF b THEN strip C1 ELSE strip C2 {Q}", "apply(rule hoareQ.conseq[where k=1])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {?P} IF b THEN strip C1 ELSE strip C2 {?Q}\n 2. \\<And>s.\n       ?P s\n       \\<le> enat 1 * eSuc (if bval b s then pre C1 Q s else pre C2 Q s)\n 3. \\<And>s. enat 1 * Q s \\<le> ?Q s\n 4. 0 < 1", "apply(rule hoareQ.If[where P=\"%s. if bval b s then pre C1 Q s else pre C2 Q s\" and Q=\"Q\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n                                     (if bval b s then pre C1 Q s\nelse pre C2 Q s) +\n                                     \\<up> (bval b s)}\n                                 strip C1 {Q}\n 2. \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n                                     (if bval b s then pre C1 Q s\nelse pre C2 Q s) +\n                                     \\<up> (\\<not> bval b s)}\n                                 strip C2 {Q}\n 3. \\<And>s.\n       eSuc (if bval b s then pre C1 Q s else pre C2 Q s)\n       \\<le> enat 1 * eSuc (if bval b s then pre C1 Q s else pre C2 Q s)\n 4. \\<And>s. enat 1 * Q s \\<le> Q s\n 5. 0 < 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n                                     (if bval b s then pre C1 Q s\nelse pre C2 Q s) +\n                                     \\<up> (bval b s)}\n                                 strip C1 {Q}", "apply(rule hoareQ.conseq[where k=1])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {?P} strip C1 {?Q}\n 2. \\<And>s.\n       ?P s\n       \\<le> enat 1 *\n             ((if bval b s then pre C1 Q s else pre C2 Q s) +\n              \\<up> (bval b s))\n 3. \\<And>s. enat 1 * Q s \\<le> ?Q s\n 4. 0 < 1", "apply (fact Aif1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       pre C1 Q s\n       \\<le> enat 1 *\n             ((if bval b s then pre C1 Q s else pre C2 Q s) +\n              \\<up> (bval b s))\n 2. \\<And>s. enat 1 * Q s \\<le> Q s\n 3. 0 < 1", "subgoal for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre C1 Q s\n    \\<le> enat 1 *\n          ((if bval b s then pre C1 Q s else pre C2 Q s) + \\<up> (bval b s))", "apply(cases \"bval b s\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. bval b s \\<Longrightarrow>\n    pre C1 Q s\n    \\<le> enat 1 *\n          ((if bval b s then pre C1 Q s else pre C2 Q s) + \\<up> (bval b s))\n 2. \\<not> bval b s \\<Longrightarrow>\n    pre C1 Q s\n    \\<le> enat 1 *\n          ((if bval b s then pre C1 Q s else pre C2 Q s) + \\<up> (bval b s))", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s. enat 1 * Q s \\<le> Q s\n 2. 0 < 1", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n                                     (if bval b s then pre C1 Q s\nelse pre C2 Q s) +\n                                     \\<up> (\\<not> bval b s)}\n                                 strip C2 {Q}\n 2. \\<And>s.\n       eSuc (if bval b s then pre C1 Q s else pre C2 Q s)\n       \\<le> enat 1 * eSuc (if bval b s then pre C1 Q s else pre C2 Q s)\n 3. \\<And>s. enat 1 * Q s \\<le> Q s\n 4. 0 < 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n                                     (if bval b s then pre C1 Q s\nelse pre C2 Q s) +\n                                     \\<up> (\\<not> bval b s)}\n                                 strip C2 {Q}", "apply(rule hoareQ.conseq[where k=1])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {?P} strip C2 {?Q}\n 2. \\<And>s.\n       ?P s\n       \\<le> enat 1 *\n             ((if bval b s then pre C1 Q s else pre C2 Q s) +\n              \\<up> (\\<not> bval b s))\n 3. \\<And>s. enat 1 * Q s \\<le> ?Q s\n 4. 0 < 1", "apply (fact Aif2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       pre C2 Q s\n       \\<le> enat 1 *\n             ((if bval b s then pre C1 Q s else pre C2 Q s) +\n              \\<up> (\\<not> bval b s))\n 2. \\<And>s. enat 1 * Q s \\<le> Q s\n 3. 0 < 1", "subgoal for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre C2 Q s\n    \\<le> enat 1 *\n          ((if bval b s then pre C1 Q s else pre C2 Q s) +\n           \\<up> (\\<not> bval b s))", "apply(cases \"bval b s\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. bval b s \\<Longrightarrow>\n    pre C2 Q s\n    \\<le> enat 1 *\n          ((if bval b s then pre C1 Q s else pre C2 Q s) +\n           \\<up> (\\<not> bval b s))\n 2. \\<not> bval b s \\<Longrightarrow>\n    pre C2 Q s\n    \\<le> enat 1 *\n          ((if bval b s then pre C1 Q s else pre C2 Q s) +\n           \\<up> (\\<not> bval b s))", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s. enat 1 * Q s \\<le> Q s\n 2. 0 < 1", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       eSuc (if bval b s then pre C1 Q s else pre C2 Q s)\n       \\<le> enat 1 * eSuc (if bval b s then pre C1 Q s else pre C2 Q s)\n 2. \\<And>s. enat 1 * Q s \\<le> Q s\n 3. 0 < 1", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre (IF b THEN C1 ELSE C2) Q}\n                               strip (IF b THEN C1 ELSE C2) {Q}\n\ngoal (5 subgoals):\n 1. \\<And>Q.\n       vc SKIP Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre SKIP Q} strip SKIP {Q}\n 2. \\<And>x1 x2 Q.\n       vc (x1 ::= x2) Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre (x1 ::= x2) Q} strip (x1 ::= x2)\n                                    {Q}\n 3. \\<And>C1 C2 Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C1 Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q};\n        \\<And>Q.\n           vc C2 Q \\<Longrightarrow>\n           \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q};\n        vc (C1;; C2) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre (C1;; C2) Q}\n                strip (C1;; C2) {Q}\n 4. \\<And>x1 x2 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} WHILE x2 DO C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre\n                  ({x1} WHILE x2 DO C) Q}\n                strip ({x1} WHILE x2 DO C) {Q}\n 5. \\<And>x1 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} Ab C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre ({x1} Ab C) Q}\n                strip ({x1} Ab C) {Q}", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>Q.\n       vc SKIP Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre SKIP Q} strip SKIP {Q}\n 2. \\<And>x1 x2 Q.\n       vc (x1 ::= x2) Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre (x1 ::= x2) Q} strip (x1 ::= x2)\n                                    {Q}\n 3. \\<And>C1 C2 Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C1 Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q};\n        \\<And>Q.\n           vc C2 Q \\<Longrightarrow>\n           \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q};\n        vc (C1;; C2) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre (C1;; C2) Q}\n                strip (C1;; C2) {Q}\n 4. \\<And>x1 x2 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} WHILE x2 DO C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre\n                  ({x1} WHILE x2 DO C) Q}\n                strip ({x1} WHILE x2 DO C) {Q}\n 5. \\<And>x1 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} Ab C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre ({x1} Ab C) Q}\n                strip ({x1} Ab C) {Q}", "case (Awhile I b C)"], ["proof (state)\nthis:\n  vc C ?Q \\<Longrightarrow>\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C ?Q} strip C {?Q}\n  vc ({I} WHILE b DO C) Q\n\ngoal (5 subgoals):\n 1. \\<And>Q.\n       vc SKIP Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre SKIP Q} strip SKIP {Q}\n 2. \\<And>x1 x2 Q.\n       vc (x1 ::= x2) Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre (x1 ::= x2) Q} strip (x1 ::= x2)\n                                    {Q}\n 3. \\<And>C1 C2 Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C1 Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q};\n        \\<And>Q.\n           vc C2 Q \\<Longrightarrow>\n           \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q};\n        vc (C1;; C2) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre (C1;; C2) Q}\n                strip (C1;; C2) {Q}\n 4. \\<And>x1 x2 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} WHILE x2 DO C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre\n                  ({x1} WHILE x2 DO C) Q}\n                strip ({x1} WHILE x2 DO C) {Q}\n 5. \\<And>x1 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} Ab C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre ({x1} Ab C) Q}\n                strip ({x1} Ab C) {Q}", "then"], ["proof (chain)\npicking this:\n  vc C ?Q \\<Longrightarrow>\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C ?Q} strip C {?Q}\n  vc ({I} WHILE b DO C) Q", "have i: \"(\\<And>Q. vc C Q \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q})\"\n   and ii': \" \\<forall>s. pre C (\\<lambda>s. I s + 1) s \\<le> I s + \\<up> (bval b s)\" \n   and ii'': \"\\<And>s. Q s \\<le>  I s + \\<up> (\\<not> bval b s)\" \n     and iii: \"vc C (\\<lambda>s. I s + 1)\""], ["proof (prove)\nusing this:\n  vc C ?Q \\<Longrightarrow>\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C ?Q} strip C {?Q}\n  vc ({I} WHILE b DO C) Q\n\ngoal (1 subgoal):\n 1. ((\\<And>Q.\n         vc C Q \\<Longrightarrow>\n         \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q}) &&&\n     \\<forall>s.\n        pre C (\\<lambda>s. I s + 1) s \\<le> I s + \\<up> (bval b s)) &&&\n    (\\<And>s. Q s \\<le> I s + \\<up> (\\<not> bval b s)) &&&\n    vc C (\\<lambda>s. I s + 1)", "by auto"], ["proof (state)\nthis:\n  vc C ?Q \\<Longrightarrow>\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C ?Q} strip C {?Q}\n  \\<forall>s. pre C (\\<lambda>s. I s + 1) s \\<le> I s + \\<up> (bval b s)\n  Q ?s \\<le> I ?s + \\<up> (\\<not> bval b ?s)\n  vc C (\\<lambda>s. I s + 1)\n\ngoal (5 subgoals):\n 1. \\<And>Q.\n       vc SKIP Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre SKIP Q} strip SKIP {Q}\n 2. \\<And>x1 x2 Q.\n       vc (x1 ::= x2) Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre (x1 ::= x2) Q} strip (x1 ::= x2)\n                                    {Q}\n 3. \\<And>C1 C2 Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C1 Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q};\n        \\<And>Q.\n           vc C2 Q \\<Longrightarrow>\n           \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q};\n        vc (C1;; C2) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre (C1;; C2) Q}\n                strip (C1;; C2) {Q}\n 4. \\<And>x1 x2 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} WHILE x2 DO C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre\n                  ({x1} WHILE x2 DO C) Q}\n                strip ({x1} WHILE x2 DO C) {Q}\n 5. \\<And>x1 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} Ab C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre ({x1} Ab C) Q}\n                strip ({x1} Ab C) {Q}", "from i iii"], ["proof (chain)\npicking this:\n  vc C ?Q \\<Longrightarrow>\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C ?Q} strip C {?Q}\n  vc C (\\<lambda>s. I s + 1)", "have  A: \"\\<turnstile>\\<^sub>2\\<^sub>' {pre C (\\<lambda>s. I s + 1)} strip C {(\\<lambda>s. I s + 1)}\""], ["proof (prove)\nusing this:\n  vc C ?Q \\<Longrightarrow>\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C ?Q} strip C {?Q}\n  vc C (\\<lambda>s. I s + 1)\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {pre C (\\<lambda>s. I s + 1)} strip C\n                                 {\\<lambda>s. I s + 1}", "by auto"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C (\\<lambda>s. I s + 1)} strip C\n                               {\\<lambda>s. I s + 1}\n\ngoal (5 subgoals):\n 1. \\<And>Q.\n       vc SKIP Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre SKIP Q} strip SKIP {Q}\n 2. \\<And>x1 x2 Q.\n       vc (x1 ::= x2) Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre (x1 ::= x2) Q} strip (x1 ::= x2)\n                                    {Q}\n 3. \\<And>C1 C2 Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C1 Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q};\n        \\<And>Q.\n           vc C2 Q \\<Longrightarrow>\n           \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q};\n        vc (C1;; C2) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre (C1;; C2) Q}\n                strip (C1;; C2) {Q}\n 4. \\<And>x1 x2 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} WHILE x2 DO C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre\n                  ({x1} WHILE x2 DO C) Q}\n                strip ({x1} WHILE x2 DO C) {Q}\n 5. \\<And>x1 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} Ab C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre ({x1} Ab C) Q}\n                strip ({x1} Ab C) {Q}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {pre ({I} WHILE b DO C) Q}\n                                 strip ({I} WHILE b DO C) {Q}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>a. I a + 1} WHILE b DO strip C\n                                 {Q}", "apply(rule conseq[where k=1])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {?P} WHILE b DO strip C {?Q}\n 2. \\<And>s. ?P s \\<le> enat 1 * (I s + 1)\n 3. \\<And>s. enat 1 * Q s \\<le> ?Q s\n 4. 0 < 1", "apply(rule While[where I=I])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s. I s + \\<up> (bval b s)}\n                                 strip C {\\<lambda>t. I t + 1}\n 2. \\<And>s. I s + 1 \\<le> enat 1 * (I s + 1)\n 3. \\<And>s. enat 1 * Q s \\<le> I s + \\<up> (\\<not> bval b s)\n 4. 0 < 1", "apply(rule weakenpre)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {?P7} strip C {\\<lambda>t. I t + 1}\n 2. \\<forall>s. ?P7 s \\<le> I s + \\<up> (bval b s)\n 3. \\<And>s. I s + 1 \\<le> enat 1 * (I s + 1)\n 4. \\<And>s. enat 1 * Q s \\<le> I s + \\<up> (\\<not> bval b s)\n 5. 0 < 1", "apply(rule A)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<forall>s. pre C (\\<lambda>s. I s + 1) s \\<le> I s + \\<up> (bval b s)\n 2. \\<And>s. I s + 1 \\<le> enat 1 * (I s + 1)\n 3. \\<And>s. enat 1 * Q s \\<le> I s + \\<up> (\\<not> bval b s)\n 4. 0 < 1", "apply(rule ii')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s. I s + 1 \\<le> enat 1 * (I s + 1)\n 2. \\<And>s. enat 1 * Q s \\<le> I s + \\<up> (\\<not> bval b s)\n 3. 0 < 1", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s. enat 1 * Q s \\<le> I s + \\<up> (\\<not> bval b s)\n 2. 0 < 1", "using ii''"], ["proof (prove)\nusing this:\n  Q ?s \\<le> I ?s + \\<up> (\\<not> bval b ?s)\n\ngoal (2 subgoals):\n 1. \\<And>s. enat 1 * Q s \\<le> I s + \\<up> (\\<not> bval b s)\n 2. 0 < 1", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre ({I} WHILE b DO C) Q}\n                               strip ({I} WHILE b DO C) {Q}\n\ngoal (4 subgoals):\n 1. \\<And>Q.\n       vc SKIP Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre SKIP Q} strip SKIP {Q}\n 2. \\<And>x1 x2 Q.\n       vc (x1 ::= x2) Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre (x1 ::= x2) Q} strip (x1 ::= x2)\n                                    {Q}\n 3. \\<And>C1 C2 Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C1 Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q};\n        \\<And>Q.\n           vc C2 Q \\<Longrightarrow>\n           \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q};\n        vc (C1;; C2) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre (C1;; C2) Q}\n                strip (C1;; C2) {Q}\n 4. \\<And>x1 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} Ab C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre ({x1} Ab C) Q}\n                strip ({x1} Ab C) {Q}", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>Q.\n       vc SKIP Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre SKIP Q} strip SKIP {Q}\n 2. \\<And>x1 x2 Q.\n       vc (x1 ::= x2) Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre (x1 ::= x2) Q} strip (x1 ::= x2)\n                                    {Q}\n 3. \\<And>C1 C2 Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C1 Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q};\n        \\<And>Q.\n           vc C2 Q \\<Longrightarrow>\n           \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q};\n        vc (C1;; C2) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre (C1;; C2) Q}\n                strip (C1;; C2) {Q}\n 4. \\<And>x1 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} Ab C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre ({x1} Ab C) Q}\n                strip ({x1} Ab C) {Q}", "case (Abst k C)"], ["proof (state)\nthis:\n  vc C ?Q \\<Longrightarrow>\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C ?Q} strip C {?Q}\n  vc ({k} Ab C) Q\n\ngoal (4 subgoals):\n 1. \\<And>Q.\n       vc SKIP Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre SKIP Q} strip SKIP {Q}\n 2. \\<And>x1 x2 Q.\n       vc (x1 ::= x2) Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre (x1 ::= x2) Q} strip (x1 ::= x2)\n                                    {Q}\n 3. \\<And>C1 C2 Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C1 Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q};\n        \\<And>Q.\n           vc C2 Q \\<Longrightarrow>\n           \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q};\n        vc (C1;; C2) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre (C1;; C2) Q}\n                strip (C1;; C2) {Q}\n 4. \\<And>x1 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} Ab C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre ({x1} Ab C) Q}\n                strip ({x1} Ab C) {Q}", "then"], ["proof (chain)\npicking this:\n  vc C ?Q \\<Longrightarrow>\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C ?Q} strip C {?Q}\n  vc ({k} Ab C) Q", "have vc: \"vc C (\\<lambda>s. k* Q s)\" and k: \"k>0\""], ["proof (prove)\nusing this:\n  vc C ?Q \\<Longrightarrow>\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C ?Q} strip C {?Q}\n  vc ({k} Ab C) Q\n\ngoal (1 subgoal):\n 1. vc C (\\<lambda>s. enat k * Q s) &&& 0 < k", "by auto"], ["proof (state)\nthis:\n  vc C (\\<lambda>s. enat k * Q s)\n  0 < k\n\ngoal (4 subgoals):\n 1. \\<And>Q.\n       vc SKIP Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre SKIP Q} strip SKIP {Q}\n 2. \\<And>x1 x2 Q.\n       vc (x1 ::= x2) Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre (x1 ::= x2) Q} strip (x1 ::= x2)\n                                    {Q}\n 3. \\<And>C1 C2 Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C1 Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q};\n        \\<And>Q.\n           vc C2 Q \\<Longrightarrow>\n           \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q};\n        vc (C1;; C2) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre (C1;; C2) Q}\n                strip (C1;; C2) {Q}\n 4. \\<And>x1 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} Ab C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre ({x1} Ab C) Q}\n                strip ({x1} Ab C) {Q}", "from Abst(1) vc"], ["proof (chain)\npicking this:\n  vc C ?Q \\<Longrightarrow>\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C ?Q} strip C {?Q}\n  vc C (\\<lambda>s. enat k * Q s)", "have C: \"\\<turnstile>\\<^sub>2\\<^sub>' {pre C (%s. k*Q s)} strip C {(%s. k*Q s)}\""], ["proof (prove)\nusing this:\n  vc C ?Q \\<Longrightarrow>\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C ?Q} strip C {?Q}\n  vc C (\\<lambda>s. enat k * Q s)\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {pre C (\\<lambda>s. enat k * Q s)} strip C\n                                 {\\<lambda>s. enat k * Q s}", "by auto"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre C (\\<lambda>s. enat k * Q s)} strip C\n                               {\\<lambda>s. enat k * Q s}\n\ngoal (4 subgoals):\n 1. \\<And>Q.\n       vc SKIP Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre SKIP Q} strip SKIP {Q}\n 2. \\<And>x1 x2 Q.\n       vc (x1 ::= x2) Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre (x1 ::= x2) Q} strip (x1 ::= x2)\n                                    {Q}\n 3. \\<And>C1 C2 Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C1 Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q};\n        \\<And>Q.\n           vc C2 Q \\<Longrightarrow>\n           \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q};\n        vc (C1;; C2) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre (C1;; C2) Q}\n                strip (C1;; C2) {Q}\n 4. \\<And>x1 C Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C Q} strip C {Q};\n        vc ({x1} Ab C) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre ({x1} Ab C) Q}\n                strip ({x1} Ab C) {Q}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {pre ({k} Ab C) Q} strip ({k} Ab C) {Q}", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>a.\n                                     ediv\n(pre C (\\<lambda>s. enat k * Q s) a) k}\n                                 strip C {Q}", "apply(rule conseq)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {?P} strip C {?Q}\n 2. \\<And>s.\n       ?P s \\<le> enat ?k * ediv (pre C (\\<lambda>s. enat k * Q s) s) k\n 3. \\<And>s. enat ?k * Q s \\<le> ?Q s\n 4. 0 < ?k", "apply(rule C)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       pre C (\\<lambda>s. enat k * Q s) s\n       \\<le> enat ?k * ediv (pre C (\\<lambda>s. enat k * Q s) s) k\n 2. \\<And>s. enat ?k * Q s \\<le> enat k * Q s\n 3. 0 < ?k", "using k"], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       pre C (\\<lambda>s. enat k * Q s) s\n       \\<le> enat ?k * ediv (pre C (\\<lambda>s. enat k * Q s) s) k\n 2. \\<And>s. enat ?k * Q s \\<le> enat k * Q s\n 3. 0 < ?k", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < k \\<Longrightarrow>\n       pre C (\\<lambda>s. enat k * Q s) s\n       \\<le> enat k * ediv (pre C (\\<lambda>s. enat k * Q s) s) k", "using ediv_cancel3"], ["proof (prove)\nusing this:\n  0 < ?k \\<Longrightarrow> ?A \\<le> enat ?k * ediv ?A ?k\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < k \\<Longrightarrow>\n       pre C (\\<lambda>s. enat k * Q s) s\n       \\<le> enat k * ediv (pre C (\\<lambda>s. enat k * Q s) s) k", "by auto"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>2\\<^sub>' {pre ({k} Ab C) Q} strip ({k} Ab C) {Q}\n\ngoal (3 subgoals):\n 1. \\<And>Q.\n       vc SKIP Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre SKIP Q} strip SKIP {Q}\n 2. \\<And>x1 x2 Q.\n       vc (x1 ::= x2) Q \\<Longrightarrow>\n       \\<turnstile>\\<^sub>2\\<^sub>' {pre (x1 ::= x2) Q} strip (x1 ::= x2)\n                                    {Q}\n 3. \\<And>C1 C2 Q.\n       \\<lbrakk>\\<And>Q.\n                   vc C1 Q \\<Longrightarrow>\n                   \\<turnstile>\\<^sub>2\\<^sub>' {pre C1 Q} strip C1 {Q};\n        \\<And>Q.\n           vc C2 Q \\<Longrightarrow>\n           \\<turnstile>\\<^sub>2\\<^sub>' {pre C2 Q} strip C2 {Q};\n        vc (C1;; C2) Q\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {pre (C1;; C2) Q}\n                strip (C1;; C2) {Q}", "qed (auto intro: hoareQ.Skip hoareQ.Assign hoareQ.Seq )"], ["", "lemma vc_sound': \"\\<lbrakk>vc C Q ; (\\<forall>s. pre C Q s \\<le> P s) \\<rbrakk> \\<Longrightarrow>  \\<turnstile>\\<^sub>2\\<^sub>' {P} strip C { Q }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vc C Q; \\<forall>s. pre C Q s \\<le> P s\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {P} strip C {Q}", "apply(rule hoareQ.conseq[where k=1])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>vc C Q; \\<forall>s. pre C Q s \\<le> P s\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {?P} strip C {?Q}\n 2. \\<And>s.\n       \\<lbrakk>vc C Q; \\<forall>s. pre C Q s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> ?P s \\<le> enat 1 * P s\n 3. \\<And>s.\n       \\<lbrakk>vc C Q; \\<forall>s. pre C Q s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> enat 1 * Q s \\<le> ?Q s\n 4. \\<lbrakk>vc C Q; \\<forall>s. pre C Q s \\<le> P s\\<rbrakk>\n    \\<Longrightarrow> 0 < 1", "apply(rule vc_sound)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>vc C Q; \\<forall>s. pre C Q s \\<le> P s\\<rbrakk>\n    \\<Longrightarrow> vc C ?Q\n 2. \\<And>s.\n       \\<lbrakk>vc C Q; \\<forall>s. pre C Q s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> pre C ?Q s \\<le> enat 1 * P s\n 3. \\<And>s.\n       \\<lbrakk>vc C Q; \\<forall>s. pre C Q s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> enat 1 * Q s \\<le> ?Q s\n 4. \\<lbrakk>vc C Q; \\<forall>s. pre C Q s \\<le> P s\\<rbrakk>\n    \\<Longrightarrow> 0 < 1", "by auto"], ["", "lemma vc_sound'': \"\\<lbrakk>vc C Q' ; (\\<forall>s.  pre C Q' s \\<le> k * P s)  ; (\\<And>s. enat k * Q s \\<le> Q' s); k>0 \\<rbrakk> \\<Longrightarrow>  \\<turnstile>\\<^sub>2\\<^sub>' {P} strip C { Q }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vc C Q'; \\<forall>s. pre C Q' s \\<le> enat k * P s;\n     \\<And>s. enat k * Q s \\<le> Q' s; 0 < k\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {P} strip C {Q}", "apply(rule hoareQ.conseq )"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>vc C Q'; \\<forall>s. pre C Q' s \\<le> enat k * P s;\n     \\<And>s. enat k * Q s \\<le> Q' s; 0 < k\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>2\\<^sub>' {?P} strip C {?Q}\n 2. \\<And>s.\n       \\<lbrakk>vc C Q'; \\<forall>s. pre C Q' s \\<le> enat k * P s;\n        \\<And>s. enat k * Q s \\<le> Q' s; 0 < k\\<rbrakk>\n       \\<Longrightarrow> ?P s \\<le> enat ?k * P s\n 3. \\<And>s.\n       \\<lbrakk>vc C Q'; \\<forall>s. pre C Q' s \\<le> enat k * P s;\n        \\<And>s. enat k * Q s \\<le> Q' s; 0 < k\\<rbrakk>\n       \\<Longrightarrow> enat ?k * Q s \\<le> ?Q s\n 4. \\<lbrakk>vc C Q'; \\<forall>s. pre C Q' s \\<le> enat k * P s;\n     \\<And>s. enat k * Q s \\<le> Q' s; 0 < k\\<rbrakk>\n    \\<Longrightarrow> 0 < ?k", "apply(rule vc_sound)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>vc C Q'; \\<forall>s. pre C Q' s \\<le> enat k * P s;\n     \\<And>s. enat k * Q s \\<le> Q' s; 0 < k\\<rbrakk>\n    \\<Longrightarrow> vc C ?Q\n 2. \\<And>s.\n       \\<lbrakk>vc C Q'; \\<forall>s. pre C Q' s \\<le> enat k * P s;\n        \\<And>s. enat k * Q s \\<le> Q' s; 0 < k\\<rbrakk>\n       \\<Longrightarrow> pre C ?Q s \\<le> enat ?k * P s\n 3. \\<And>s.\n       \\<lbrakk>vc C Q'; \\<forall>s. pre C Q' s \\<le> enat k * P s;\n        \\<And>s. enat k * Q s \\<le> Q' s; 0 < k\\<rbrakk>\n       \\<Longrightarrow> enat ?k * Q s \\<le> ?Q s\n 4. \\<lbrakk>vc C Q'; \\<forall>s. pre C Q' s \\<le> enat k * P s;\n     \\<And>s. enat k * Q s \\<le> Q' s; 0 < k\\<rbrakk>\n    \\<Longrightarrow> 0 < ?k", "by auto"], ["", "subsubsection \"Completeness\""], ["", "lemma pre_mono: assumes \"\\<And>s. P' s \\<le> P s\" \n  shows \"\\<And>s. pre C P' s \\<le> pre C P s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. pre C P' s \\<le> pre C P s", "using assms"], ["proof (prove)\nusing this:\n  P' ?s \\<le> P ?s\n\ngoal (1 subgoal):\n 1. \\<And>s. pre C P' s \\<le> pre C P s", "by (induct C arbitrary: P P', auto simp: ediv_mono mult_left_mono )"], ["", "lemma vc_mono: assumes \"\\<And>s. P' s \\<le> P s\" \n  shows \"vc C P \\<Longrightarrow> vc C P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vc C P \\<Longrightarrow> vc C P'", "using assms"], ["proof (prove)\nusing this:\n  P' ?s \\<le> P ?s\n\ngoal (1 subgoal):\n 1. vc C P \\<Longrightarrow> vc C P'", "proof (induct C arbitrary: P P')"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>vc SKIP P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc SKIP P'\n 2. \\<And>x1 x2 P P'.\n       \\<lbrakk>vc (x1 ::= x2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (x1 ::= x2) P'\n 3. \\<And>C1 C2 P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C1 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C1 P';\n        \\<And>P P'.\n           \\<lbrakk>vc C2 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n           \\<Longrightarrow> vc C2 P';\n        vc (C1;; C2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (C1;; C2) P'\n 4. \\<And>x1 C1 C2 P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C1 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C1 P';\n        \\<And>P P'.\n           \\<lbrakk>vc C2 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n           \\<Longrightarrow> vc C2 P';\n        vc (IF x1 THEN C1 ELSE C2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (IF x1 THEN C1 ELSE C2) P'\n 5. \\<And>x1 x2 C P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C P';\n        vc ({x1} WHILE x2 DO C) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc ({x1} WHILE x2 DO C) P'\n 6. \\<And>x1 C P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C P';\n        vc ({x1} Ab C) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc ({x1} Ab C) P'", "case (Awhile I b C Q)"], ["proof (state)\nthis:\n  \\<lbrakk>vc C ?P; \\<And>s. ?P' s \\<le> ?P s\\<rbrakk>\n  \\<Longrightarrow> vc C ?P'\n  vc ({I} WHILE b DO C) Q\n  P' ?s \\<le> Q ?s\n\ngoal (6 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>vc SKIP P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc SKIP P'\n 2. \\<And>x1 x2 P P'.\n       \\<lbrakk>vc (x1 ::= x2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (x1 ::= x2) P'\n 3. \\<And>C1 C2 P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C1 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C1 P';\n        \\<And>P P'.\n           \\<lbrakk>vc C2 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n           \\<Longrightarrow> vc C2 P';\n        vc (C1;; C2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (C1;; C2) P'\n 4. \\<And>x1 C1 C2 P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C1 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C1 P';\n        \\<And>P P'.\n           \\<lbrakk>vc C2 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n           \\<Longrightarrow> vc C2 P';\n        vc (IF x1 THEN C1 ELSE C2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (IF x1 THEN C1 ELSE C2) P'\n 5. \\<And>x1 x2 C P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C P';\n        vc ({x1} WHILE x2 DO C) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc ({x1} WHILE x2 DO C) P'\n 6. \\<And>x1 C P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C P';\n        vc ({x1} Ab C) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc ({x1} Ab C) P'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>vc C ?P; \\<And>s. ?P' s \\<le> ?P s\\<rbrakk>\n  \\<Longrightarrow> vc C ?P'\n  vc ({I} WHILE b DO C) Q\n  P' ?s \\<le> Q ?s\n\ngoal (1 subgoal):\n 1. vc ({I} WHILE b DO C) P'", "apply (auto simp: pre_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C P';\n        \\<And>s. P' s \\<le> Q s;\n        \\<forall>s.\n           pre C (\\<lambda>s. I s + 1) s \\<le> I s + \\<up> (bval b s) \\<and>\n           Q s \\<le> I s + \\<up> (\\<not> bval b s);\n        vc C (\\<lambda>s. I s + 1)\\<rbrakk>\n       \\<Longrightarrow> P' s \\<le> I s + \\<up> (\\<not> bval b s)", "using order.trans"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?c\\<rbrakk> \\<Longrightarrow> ?a \\<le> ?c\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C P';\n        \\<And>s. P' s \\<le> Q s;\n        \\<forall>s.\n           pre C (\\<lambda>s. I s + 1) s \\<le> I s + \\<up> (bval b s) \\<and>\n           Q s \\<le> I s + \\<up> (\\<not> bval b s);\n        vc C (\\<lambda>s. I s + 1)\\<rbrakk>\n       \\<Longrightarrow> P' s \\<le> I s + \\<up> (\\<not> bval b s)", "by blast"], ["proof (state)\nthis:\n  vc ({I} WHILE b DO C) P'\n\ngoal (5 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>vc SKIP P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc SKIP P'\n 2. \\<And>x1 x2 P P'.\n       \\<lbrakk>vc (x1 ::= x2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (x1 ::= x2) P'\n 3. \\<And>C1 C2 P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C1 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C1 P';\n        \\<And>P P'.\n           \\<lbrakk>vc C2 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n           \\<Longrightarrow> vc C2 P';\n        vc (C1;; C2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (C1;; C2) P'\n 4. \\<And>x1 C1 C2 P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C1 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C1 P';\n        \\<And>P P'.\n           \\<lbrakk>vc C2 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n           \\<Longrightarrow> vc C2 P';\n        vc (IF x1 THEN C1 ELSE C2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (IF x1 THEN C1 ELSE C2) P'\n 5. \\<And>x1 C P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C P';\n        vc ({x1} Ab C) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc ({x1} Ab C) P'", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>vc SKIP P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc SKIP P'\n 2. \\<And>x1 x2 P P'.\n       \\<lbrakk>vc (x1 ::= x2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (x1 ::= x2) P'\n 3. \\<And>C1 C2 P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C1 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C1 P';\n        \\<And>P P'.\n           \\<lbrakk>vc C2 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n           \\<Longrightarrow> vc C2 P';\n        vc (C1;; C2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (C1;; C2) P'\n 4. \\<And>x1 C1 C2 P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C1 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C1 P';\n        \\<And>P P'.\n           \\<lbrakk>vc C2 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n           \\<Longrightarrow> vc C2 P';\n        vc (IF x1 THEN C1 ELSE C2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (IF x1 THEN C1 ELSE C2) P'\n 5. \\<And>x1 C P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C P';\n        vc ({x1} Ab C) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc ({x1} Ab C) P'", "case (Abst x1 C)"], ["proof (state)\nthis:\n  \\<lbrakk>vc C ?P; \\<And>s. ?P' s \\<le> ?P s\\<rbrakk>\n  \\<Longrightarrow> vc C ?P'\n  vc ({x1} Ab C) P\n  P' ?s \\<le> P ?s\n\ngoal (5 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>vc SKIP P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc SKIP P'\n 2. \\<And>x1 x2 P P'.\n       \\<lbrakk>vc (x1 ::= x2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (x1 ::= x2) P'\n 3. \\<And>C1 C2 P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C1 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C1 P';\n        \\<And>P P'.\n           \\<lbrakk>vc C2 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n           \\<Longrightarrow> vc C2 P';\n        vc (C1;; C2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (C1;; C2) P'\n 4. \\<And>x1 C1 C2 P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C1 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C1 P';\n        \\<And>P P'.\n           \\<lbrakk>vc C2 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n           \\<Longrightarrow> vc C2 P';\n        vc (IF x1 THEN C1 ELSE C2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (IF x1 THEN C1 ELSE C2) P'\n 5. \\<And>x1 C P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C P';\n        vc ({x1} Ab C) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc ({x1} Ab C) P'", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>vc C ?P; \\<And>s. ?P' s \\<le> ?P s\\<rbrakk>\n  \\<Longrightarrow> vc C ?P'\n  vc ({x1} Ab C) P\n  P' ?s \\<le> P ?s", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>vc C ?P; \\<And>s. ?P' s \\<le> ?P s\\<rbrakk>\n  \\<Longrightarrow> vc C ?P'\n  vc ({x1} Ab C) P\n  P' ?s \\<le> P ?s\n\ngoal (1 subgoal):\n 1. vc ({x1} Ab C) P'", "by (auto simp: mult_left_mono)"], ["proof (state)\nthis:\n  vc ({x1} Ab C) P'\n\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>vc SKIP P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc SKIP P'\n 2. \\<And>x1 x2 P P'.\n       \\<lbrakk>vc (x1 ::= x2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (x1 ::= x2) P'\n 3. \\<And>C1 C2 P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C1 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C1 P';\n        \\<And>P P'.\n           \\<lbrakk>vc C2 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n           \\<Longrightarrow> vc C2 P';\n        vc (C1;; C2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (C1;; C2) P'\n 4. \\<And>x1 C1 C2 P P'.\n       \\<lbrakk>\\<And>P P'.\n                   \\<lbrakk>vc C1 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n                   \\<Longrightarrow> vc C1 P';\n        \\<And>P P'.\n           \\<lbrakk>vc C2 P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n           \\<Longrightarrow> vc C2 P';\n        vc (IF x1 THEN C1 ELSE C2) P; \\<And>s. P' s \\<le> P s\\<rbrakk>\n       \\<Longrightarrow> vc (IF x1 THEN C1 ELSE C2) P'", "qed (auto simp: pre_mono)"], ["", "lemma \"\\<turnstile>\\<^sub>2\\<^sub>' { P } c { Q } \\<Longrightarrow> \\<exists>C. strip C = c \\<and> vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)\"\n  (is \"_ \\<Longrightarrow>   \\<exists>C. ?G P c Q C\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q} \\<Longrightarrow>\n    \\<exists>C.\n       strip C = c \\<and> vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "proof (induction rule: hoareQ.induct)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 6. \\<And>P c Q k P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> enat k * P' s; \\<And>s. enat k * Q' s \\<le> Q s;\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)", "case (conseq P c Q k P' Q')"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q}\n  P ?s \\<le> enat k * P' ?s\n  enat k * Q' ?s \\<le> Q ?s\n  0 < k\n  \\<exists>C.\n     strip C = c \\<and> vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)\n\ngoal (6 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 6. \\<And>P c Q k P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> enat k * P' s; \\<And>s. enat k * Q' s \\<le> Q s;\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)", "then"], ["proof (chain)\npicking this:\n  \\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q}\n  P ?s \\<le> enat k * P' ?s\n  enat k * Q' ?s \\<le> Q ?s\n  0 < k\n  \\<exists>C.\n     strip C = c \\<and> vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "obtain C where strip: \"strip C = c\" and vc: \"vc C Q\" and pre: \"\\<And>s. pre C Q s \\<le> P s\""], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q}\n  P ?s \\<le> enat k * P' ?s\n  enat k * Q' ?s \\<le> Q ?s\n  0 < k\n  \\<exists>C.\n     strip C = c \\<and> vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>strip C = c; vc C Q; \\<And>s. pre C Q s \\<le> P s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  strip C = c\n  vc C Q\n  pre C Q ?s \\<le> P ?s\n\ngoal (6 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 6. \\<And>P c Q k P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> enat k * P' s; \\<And>s. enat k * Q' s \\<le> Q s;\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)", "{"], ["proof (state)\nthis:\n  strip C = c\n  vc C Q\n  pre C Q ?s \\<le> P ?s\n\ngoal (6 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 6. \\<And>P c Q k P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> enat k * P' s; \\<And>s. enat k * Q' s \\<le> Q s;\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)", "fix s"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 6. \\<And>P c Q k P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> enat k * P' s; \\<And>s. enat k * Q' s \\<le> Q s;\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)", "have \"pre C (\\<lambda>s. enat k * Q' s) s \\<le> pre C Q s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre C (\\<lambda>s. enat k * Q' s) s \\<le> pre C Q s", "using pre_mono conseq(3)"], ["proof (prove)\nusing this:\n  (\\<And>s. ?P' s \\<le> ?P s) \\<Longrightarrow>\n  pre ?C ?P' ?s \\<le> pre ?C ?P ?s\n  enat k * Q' ?s \\<le> Q ?s\n\ngoal (1 subgoal):\n 1. pre C (\\<lambda>s. enat k * Q' s) s \\<le> pre C Q s", "by simp"], ["proof (state)\nthis:\n  pre C (\\<lambda>s. enat k * Q' s) s \\<le> pre C Q s\n\ngoal (6 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 6. \\<And>P c Q k P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> enat k * P' s; \\<And>s. enat k * Q' s \\<le> Q s;\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)", "also"], ["proof (state)\nthis:\n  pre C (\\<lambda>s. enat k * Q' s) s \\<le> pre C Q s\n\ngoal (6 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 6. \\<And>P c Q k P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> enat k * P' s; \\<And>s. enat k * Q' s \\<le> Q s;\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)", "from pre conseq(2)"], ["proof (chain)\npicking this:\n  pre C Q ?s \\<le> P ?s\n  P ?s \\<le> enat k * P' ?s", "have \"\\<dots>  \\<le> enat k * P' s\""], ["proof (prove)\nusing this:\n  pre C Q ?s \\<le> P ?s\n  P ?s \\<le> enat k * P' ?s\n\ngoal (1 subgoal):\n 1. pre C Q s \\<le> enat k * P' s", "using order.trans"], ["proof (prove)\nusing this:\n  pre C Q ?s \\<le> P ?s\n  P ?s \\<le> enat k * P' ?s\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?c\\<rbrakk> \\<Longrightarrow> ?a \\<le> ?c\n\ngoal (1 subgoal):\n 1. pre C Q s \\<le> enat k * P' s", "by blast"], ["proof (state)\nthis:\n  pre C Q s \\<le> enat k * P' s\n\ngoal (6 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 6. \\<And>P c Q k P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> enat k * P' s; \\<And>s. enat k * Q' s \\<le> Q s;\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)", "finally"], ["proof (chain)\npicking this:\n  pre C (\\<lambda>s. enat k * Q' s) s \\<le> enat k * P' s", "have  \"pre C (\\<lambda>s. enat k * Q' s) s  \\<le> enat k * P' s\""], ["proof (prove)\nusing this:\n  pre C (\\<lambda>s. enat k * Q' s) s \\<le> enat k * P' s\n\ngoal (1 subgoal):\n 1. pre C (\\<lambda>s. enat k * Q' s) s \\<le> enat k * P' s", "by auto"], ["proof (state)\nthis:\n  pre C (\\<lambda>s. enat k * Q' s) s \\<le> enat k * P' s\n\ngoal (6 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 6. \\<And>P c Q k P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> enat k * P' s; \\<And>s. enat k * Q' s \\<le> Q s;\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)", "then"], ["proof (chain)\npicking this:\n  pre C (\\<lambda>s. enat k * Q' s) s \\<le> enat k * P' s", "have  \"ediv (pre C (\\<lambda>s. enat k * Q' s) s) k  \\<le> ediv (enat k * P' s) k\""], ["proof (prove)\nusing this:\n  pre C (\\<lambda>s. enat k * Q' s) s \\<le> enat k * P' s\n\ngoal (1 subgoal):\n 1. ediv (pre C (\\<lambda>s. enat k * Q' s) s) k\n    \\<le> ediv (enat k * P' s) k", "using ediv_mono"], ["proof (prove)\nusing this:\n  pre C (\\<lambda>s. enat k * Q' s) s \\<le> enat k * P' s\n  ?a \\<le> ?b \\<Longrightarrow> ediv ?a ?k \\<le> ediv ?b ?k\n\ngoal (1 subgoal):\n 1. ediv (pre C (\\<lambda>s. enat k * Q' s) s) k\n    \\<le> ediv (enat k * P' s) k", "by auto"], ["proof (state)\nthis:\n  ediv (pre C (\\<lambda>s. enat k * Q' s) s) k \\<le> ediv (enat k * P' s) k\n\ngoal (6 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 6. \\<And>P c Q k P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> enat k * P' s; \\<And>s. enat k * Q' s \\<le> Q s;\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)", "moreover"], ["proof (state)\nthis:\n  ediv (pre C (\\<lambda>s. enat k * Q' s) s) k \\<le> ediv (enat k * P' s) k\n\ngoal (6 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 6. \\<And>P c Q k P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> enat k * P' s; \\<And>s. enat k * Q' s \\<le> Q s;\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)", "note  ediv_cancel2[OF conseq(4)]"], ["proof (state)\nthis:\n  ediv (enat k * ?x) k = ?x\n\ngoal (6 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 6. \\<And>P c Q k P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> enat k * P' s; \\<And>s. enat k * Q' s \\<le> Q s;\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)", "ultimately"], ["proof (chain)\npicking this:\n  ediv (pre C (\\<lambda>s. enat k * Q' s) s) k \\<le> ediv (enat k * P' s) k\n  ediv (enat k * ?x) k = ?x", "have \"ediv (pre C (\\<lambda>s. enat k * Q' s) s) k \\<le> P' s\""], ["proof (prove)\nusing this:\n  ediv (pre C (\\<lambda>s. enat k * Q' s) s) k \\<le> ediv (enat k * P' s) k\n  ediv (enat k * ?x) k = ?x\n\ngoal (1 subgoal):\n 1. ediv (pre C (\\<lambda>s. enat k * Q' s) s) k \\<le> P' s", "by simp"], ["proof (state)\nthis:\n  ediv (pre C (\\<lambda>s. enat k * Q' s) s) k \\<le> P' s\n\ngoal (6 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 6. \\<And>P c Q k P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> enat k * P' s; \\<And>s. enat k * Q' s \\<le> Q s;\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)", "}"], ["proof (state)\nthis:\n  ediv (pre C (\\<lambda>s. enat k * Q' s) ?s2) k \\<le> P' ?s2\n\ngoal (6 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 6. \\<And>P c Q k P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> enat k * P' s; \\<And>s. enat k * Q' s \\<le> Q s;\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)", "note compensate=this"], ["proof (state)\nthis:\n  ediv (pre C (\\<lambda>s. enat k * Q' s) ?s2) k \\<le> P' ?s2\n\ngoal (6 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 6. \\<And>P c Q k P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> enat k * P' s; \\<And>s. enat k * Q' s \\<le> Q s;\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       strip C = c \\<and> vc C Q' \\<and> (\\<forall>s. pre C Q' s \\<le> P' s)", "apply(rule exI[where x=\"{k} Ab C\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. strip ({k} Ab C) = c \\<and>\n    vc ({k} Ab C) Q' \\<and> (\\<forall>s. pre ({k} Ab C) Q' s \\<le> P' s)", "apply(safe)"], ["proof (prove)\ngoal (3 subgoals):\n 1. strip ({k} Ab C) = c\n 2. vc ({k} Ab C) Q'\n 3. \\<And>s. pre ({k} Ab C) Q' s \\<le> P' s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. strip ({k} Ab C) = c", "using strip"], ["proof (prove)\nusing this:\n  strip C = c\n\ngoal (1 subgoal):\n 1. strip ({k} Ab C) = c", "by simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. vc ({k} Ab C) Q'\n 2. \\<And>s. pre ({k} Ab C) Q' s \\<le> P' s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. vc ({k} Ab C) Q'", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. vc C (\\<lambda>s. enat k * Q' s) \\<and> 0 < k", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. vc C (\\<lambda>s. enat k * Q' s)\n 2. 0 < k", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. vc C (\\<lambda>s. enat k * Q' s)", "using vc vc_mono conseq(3)"], ["proof (prove)\nusing this:\n  vc C Q\n  \\<lbrakk>\\<And>s. ?P' s \\<le> ?P s; vc ?C ?P\\<rbrakk>\n  \\<Longrightarrow> vc ?C ?P'\n  enat k * Q' ?s \\<le> Q ?s\n\ngoal (1 subgoal):\n 1. vc C (\\<lambda>s. enat k * Q' s)", "by force"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k", "by fact"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. pre ({k} Ab C) Q' s \\<le> P' s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre ({k} Ab C) Q' s_ \\<le> P' s_", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. ediv (pre C (\\<lambda>s. enat k * Q' s) s_) k \\<le> P' s_", "using compensate"], ["proof (prove)\nusing this:\n  ediv (pre C (\\<lambda>s. enat k * Q' s) ?s2) k \\<le> P' ?s2\n\ngoal (1 subgoal):\n 1. ediv (pre C (\\<lambda>s. enat k * Q' s) s_) k \\<le> P' s_", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>C.\n     strip C = c \\<and> vc C Q' \\<and> (\\<forall>s. pre C Q' s \\<le> P' s)\n\ngoal (5 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "case (Skip P)"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "show ?case (is \"\\<exists>C. ?C C\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       strip C = SKIP \\<and>\n       vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. strip ?C = SKIP \\<and>\n    vc ?C P \\<and> (\\<forall>s. pre ?C P s \\<le> eSuc (P s))", "show \"?C Askip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strip SKIP = SKIP \\<and>\n    vc SKIP P \\<and> (\\<forall>s. pre SKIP P s \\<le> eSuc (P s))", "by auto"], ["proof (state)\nthis:\n  strip SKIP = SKIP \\<and>\n  vc SKIP P \\<and> (\\<forall>s. pre SKIP P s \\<le> eSuc (P s))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>C.\n     strip C = SKIP \\<and>\n     vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n\ngoal (4 subgoals):\n 1. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 2. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 3. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 4. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 2. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 3. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 4. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "case (Assign P a x)"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 2. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 3. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 4. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "show ?case (is \"\\<exists>C. ?C C\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       strip C = x ::= a \\<and>\n       vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. strip ?C = x ::= a \\<and>\n    vc ?C P \\<and> (\\<forall>s. pre ?C P s \\<le> eSuc (P (s[a/x])))", "show \"?C(Aassign x a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strip (x ::= a) = x ::= a \\<and>\n    vc (x ::= a) P \\<and>\n    (\\<forall>s. pre (x ::= a) P s \\<le> eSuc (P (s[a/x])))", "by auto"], ["proof (state)\nthis:\n  strip (x ::= a) = x ::= a \\<and>\n  vc (x ::= a) P \\<and>\n  (\\<forall>s. pre (x ::= a) P s \\<le> eSuc (P (s[a/x])))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>C.\n     strip C = x ::= a \\<and>\n     vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n\ngoal (3 subgoals):\n 1. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 2. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 3. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 2. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 3. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "case (If P b c\\<^sub>1 Q c\\<^sub>2)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s. P s + \\<up> (bval b s)}\n                               c\\<^sub>1 {Q}\n  \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s. P s + \\<up> (\\<not> bval b s)}\n                               c\\<^sub>2 {Q}\n  \\<exists>C.\n     strip C = c\\<^sub>1 \\<and>\n     vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s))\n  \\<exists>C.\n     strip C = c\\<^sub>2 \\<and>\n     vc C Q \\<and>\n     (\\<forall>s. pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\n\ngoal (3 subgoals):\n 1. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 2. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 3. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "from If(3)"], ["proof (chain)\npicking this:\n  \\<exists>C.\n     strip C = c\\<^sub>1 \\<and>\n     vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s))", "obtain C1 where strip1: \"strip C1 = c\\<^sub>1\" and vc1: \"vc C1 Q\"\n        and pre1: \"(\\<And>s. pre C1 Q s \\<le> (P s + \\<up>(bval b s)))\""], ["proof (prove)\nusing this:\n  \\<exists>C.\n     strip C = c\\<^sub>1 \\<and>\n     vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s))\n\ngoal (1 subgoal):\n 1. (\\<And>C1.\n        \\<lbrakk>strip C1 = c\\<^sub>1; vc C1 Q;\n         \\<And>s. pre C1 Q s \\<le> P s + \\<up> (bval b s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  strip C1 = c\\<^sub>1\n  vc C1 Q\n  pre C1 Q ?s \\<le> P ?s + \\<up> (bval b ?s)\n\ngoal (3 subgoals):\n 1. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 2. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 3. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "from If(4)"], ["proof (chain)\npicking this:\n  \\<exists>C.\n     strip C = c\\<^sub>2 \\<and>\n     vc C Q \\<and>\n     (\\<forall>s. pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))", "obtain C2 where strip2: \"strip C2 = c\\<^sub>2\" and vc2: \"vc C2 Q\"\n        and pre2: \"(\\<And>s. pre C2 (\\<lambda>s. Q s) s \\<le> (P s + \\<up>(\\<not> bval b s)))\""], ["proof (prove)\nusing this:\n  \\<exists>C.\n     strip C = c\\<^sub>2 \\<and>\n     vc C Q \\<and>\n     (\\<forall>s. pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\n\ngoal (1 subgoal):\n 1. (\\<And>C2.\n        \\<lbrakk>strip C2 = c\\<^sub>2; vc C2 Q;\n         \\<And>s. pre C2 Q s \\<le> P s + \\<up> (\\<not> bval b s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  strip C2 = c\\<^sub>2\n  vc C2 Q\n  pre C2 Q ?s \\<le> P ?s + \\<up> (\\<not> bval b ?s)\n\ngoal (3 subgoals):\n 1. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           P s + \\<up> (bval b s)}\n       c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n   P s + \\<up> (\\<not> bval b s)}\n                                     c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 2. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 3. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       strip C = IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n       vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> eSuc (P s))", "apply(rule exI[where x=\"IF b THEN C1 ELSE C2\"], safe)"], ["proof (prove)\ngoal (3 subgoals):\n 1. strip (IF b THEN C1 ELSE C2) = IF b THEN c\\<^sub>1 ELSE c\\<^sub>2\n 2. vc (IF b THEN C1 ELSE C2) Q\n 3. \\<And>s. pre (IF b THEN C1 ELSE C2) Q s \\<le> eSuc (P s)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. strip (IF b THEN C1 ELSE C2) = IF b THEN c\\<^sub>1 ELSE c\\<^sub>2", "using strip1 strip2"], ["proof (prove)\nusing this:\n  strip C1 = c\\<^sub>1\n  strip C2 = c\\<^sub>2\n\ngoal (1 subgoal):\n 1. strip (IF b THEN C1 ELSE C2) = IF b THEN c\\<^sub>1 ELSE c\\<^sub>2", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. vc (IF b THEN C1 ELSE C2) Q\n 2. \\<And>s. pre (IF b THEN C1 ELSE C2) Q s \\<le> eSuc (P s)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. vc (IF b THEN C1 ELSE C2) Q", "using vc1 vc2"], ["proof (prove)\nusing this:\n  vc C1 Q\n  vc C2 Q\n\ngoal (1 subgoal):\n 1. vc (IF b THEN C1 ELSE C2) Q", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. pre (IF b THEN C1 ELSE C2) Q s \\<le> eSuc (P s)", "subgoal for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre (IF b THEN C1 ELSE C2) Q s \\<le> eSuc (P s)", "using pre1[of s] pre2[of s]"], ["proof (prove)\nusing this:\n  pre C1 Q s \\<le> P s + \\<up> (bval b s)\n  pre C2 Q s \\<le> P s + \\<up> (\\<not> bval b s)\n\ngoal (1 subgoal):\n 1. pre (IF b THEN C1 ELSE C2) Q s \\<le> eSuc (P s)", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>C.\n     strip C = IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n     vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n\ngoal (2 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "case (Seq P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2}\n  \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3}\n  \\<exists>C.\n     strip C = c\\<^sub>1 \\<and>\n     vc C P\\<^sub>2 \\<and> (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s)\n  \\<exists>C.\n     strip C = c\\<^sub>2 \\<and>\n     vc C P\\<^sub>3 \\<and> (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\n\ngoal (2 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "from Seq(3)"], ["proof (chain)\npicking this:\n  \\<exists>C.\n     strip C = c\\<^sub>1 \\<and>\n     vc C P\\<^sub>2 \\<and> (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s)", "obtain C1 where strip1: \"strip C1 = c\\<^sub>1\" and vc1: \"vc C1 P\\<^sub>2\"\n      and pre1: \"(\\<forall>s. pre C1 P\\<^sub>2 s \\<le>   P\\<^sub>1 s)\""], ["proof (prove)\nusing this:\n  \\<exists>C.\n     strip C = c\\<^sub>1 \\<and>\n     vc C P\\<^sub>2 \\<and> (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s)\n\ngoal (1 subgoal):\n 1. (\\<And>C1.\n        \\<lbrakk>strip C1 = c\\<^sub>1; vc C1 P\\<^sub>2;\n         \\<forall>s. pre C1 P\\<^sub>2 s \\<le> P\\<^sub>1 s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  strip C1 = c\\<^sub>1\n  vc C1 P\\<^sub>2\n  \\<forall>s. pre C1 P\\<^sub>2 s \\<le> P\\<^sub>1 s\n\ngoal (2 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "from Seq(4)"], ["proof (chain)\npicking this:\n  \\<exists>C.\n     strip C = c\\<^sub>2 \\<and>\n     vc C P\\<^sub>3 \\<and> (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)", "obtain C2 where strip2: \"strip C2 = c\\<^sub>2\" and vc2: \"vc C2 P\\<^sub>3\"\n      and pre2: \"\\<And>s. pre C2 P\\<^sub>3 s \\<le>   P\\<^sub>2 s\""], ["proof (prove)\nusing this:\n  \\<exists>C.\n     strip C = c\\<^sub>2 \\<and>\n     vc C P\\<^sub>3 \\<and> (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\n\ngoal (1 subgoal):\n 1. (\\<And>C2.\n        \\<lbrakk>strip C2 = c\\<^sub>2; vc C2 P\\<^sub>3;\n         \\<And>s. pre C2 P\\<^sub>3 s \\<le> P\\<^sub>2 s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  strip C2 = c\\<^sub>2\n  vc C2 P\\<^sub>3\n  pre C2 P\\<^sub>3 ?s \\<le> P\\<^sub>2 ?s\n\ngoal (2 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "{"], ["proof (state)\nthis:\n  strip C2 = c\\<^sub>2\n  vc C2 P\\<^sub>3\n  pre C2 P\\<^sub>3 ?s \\<le> P\\<^sub>2 ?s\n\ngoal (2 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "fix s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "have \"pre C1 (pre C2 P\\<^sub>3) s \\<le> P\\<^sub>1 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre C1 (pre C2 P\\<^sub>3) s \\<le> P\\<^sub>1 s", "apply(rule order.trans[where b=\"pre C1 P\\<^sub>2 s\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. pre C1 (pre C2 P\\<^sub>3) s \\<le> pre C1 P\\<^sub>2 s\n 2. pre C1 P\\<^sub>2 s \\<le> P\\<^sub>1 s", "apply(rule pre_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s. pre C2 P\\<^sub>3 s \\<le> P\\<^sub>2 s\n 2. pre C1 P\\<^sub>2 s \\<le> P\\<^sub>1 s", "using pre2"], ["proof (prove)\nusing this:\n  pre C2 P\\<^sub>3 ?s \\<le> P\\<^sub>2 ?s\n\ngoal (2 subgoals):\n 1. \\<And>s. pre C2 P\\<^sub>3 s \\<le> P\\<^sub>2 s\n 2. pre C1 P\\<^sub>2 s \\<le> P\\<^sub>1 s", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre C1 P\\<^sub>2 s \\<le> P\\<^sub>1 s", "using pre1"], ["proof (prove)\nusing this:\n  \\<forall>s. pre C1 P\\<^sub>2 s \\<le> P\\<^sub>1 s\n\ngoal (1 subgoal):\n 1. pre C1 P\\<^sub>2 s \\<le> P\\<^sub>1 s", "by simp"], ["proof (state)\nthis:\n  pre C1 (pre C2 P\\<^sub>3) s \\<le> P\\<^sub>1 s\n\ngoal (2 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "}"], ["proof (state)\nthis:\n  pre C1 (pre C2 P\\<^sub>3) ?s2 \\<le> P\\<^sub>1 ?s2\n\ngoal (2 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "note pre = this"], ["proof (state)\nthis:\n  pre C1 (pre C2 P\\<^sub>3) ?s2 \\<le> P\\<^sub>1 ?s2\n\ngoal (2 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>1} c\\<^sub>1\n       {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>2\\<^sub>' {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n       vc C P\\<^sub>3 \\<and>\n       (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)", "apply(rule exI[where x=\"C1 ;; C2\"], safe)"], ["proof (prove)\ngoal (3 subgoals):\n 1. strip (C1;; C2) = c\\<^sub>1;; c\\<^sub>2\n 2. vc (C1;; C2) P\\<^sub>3\n 3. \\<And>s. pre (C1;; C2) P\\<^sub>3 s \\<le> P\\<^sub>1 s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. strip (C1;; C2) = c\\<^sub>1;; c\\<^sub>2", "using strip1 strip2"], ["proof (prove)\nusing this:\n  strip C1 = c\\<^sub>1\n  strip C2 = c\\<^sub>2\n\ngoal (1 subgoal):\n 1. strip (C1;; C2) = c\\<^sub>1;; c\\<^sub>2", "by simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. vc (C1;; C2) P\\<^sub>3\n 2. \\<And>s. pre (C1;; C2) P\\<^sub>3 s \\<le> P\\<^sub>1 s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. vc (C1;; C2) P\\<^sub>3", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. vc C1 (pre C2 P\\<^sub>3) \\<and> vc C2 P\\<^sub>3", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. vc C1 (pre C2 P\\<^sub>3)\n 2. vc C2 P\\<^sub>3", "using vc1 vc2 vc_mono pre2"], ["proof (prove)\nusing this:\n  vc C1 P\\<^sub>2\n  vc C2 P\\<^sub>3\n  \\<lbrakk>\\<And>s. ?P' s \\<le> ?P s; vc ?C ?P\\<rbrakk>\n  \\<Longrightarrow> vc ?C ?P'\n  pre C2 P\\<^sub>3 ?s \\<le> P\\<^sub>2 ?s\n\ngoal (2 subgoals):\n 1. vc C1 (pre C2 P\\<^sub>3)\n 2. vc C2 P\\<^sub>3", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. pre (C1;; C2) P\\<^sub>3 s \\<le> P\\<^sub>1 s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre (C1;; C2) P\\<^sub>3 s_ \\<le> P\\<^sub>1 s_", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre C1 (pre C2 P\\<^sub>3) s_ \\<le> P\\<^sub>1 s_", "using  pre"], ["proof (prove)\nusing this:\n  pre C1 (pre C2 P\\<^sub>3) ?s2 \\<le> P\\<^sub>1 ?s2\n\ngoal (1 subgoal):\n 1. pre C1 (pre C2 P\\<^sub>3) s_ \\<le> P\\<^sub>1 s_", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>C.\n     strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n     vc C P\\<^sub>3 \\<and> (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n\ngoal (1 subgoal):\n 1. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "case (While I b c)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s. I s + \\<up> (bval b s)} c\n                               {\\<lambda>t. I t + 1}\n  \\<exists>C.\n     strip C = c \\<and>\n     vc C (\\<lambda>a. I a + 1) \\<and>\n     (\\<forall>s.\n         pre C (\\<lambda>a. I a + 1) s \\<le> I s + \\<up> (bval b s))\n\ngoal (1 subgoal):\n 1. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "from While(2)"], ["proof (chain)\npicking this:\n  \\<exists>C.\n     strip C = c \\<and>\n     vc C (\\<lambda>a. I a + 1) \\<and>\n     (\\<forall>s.\n         pre C (\\<lambda>a. I a + 1) s \\<le> I s + \\<up> (bval b s))", "obtain C where strip: \"strip C = c\" and vc: \"vc C (\\<lambda>a. I a + 1)\"\n    and pre: \"\\<And>s. pre C (\\<lambda>a. I a + 1) s \\<le> I s + \\<up> (bval b s)\""], ["proof (prove)\nusing this:\n  \\<exists>C.\n     strip C = c \\<and>\n     vc C (\\<lambda>a. I a + 1) \\<and>\n     (\\<forall>s.\n         pre C (\\<lambda>a. I a + 1) s \\<le> I s + \\<up> (bval b s))\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>strip C = c; vc C (\\<lambda>a. I a + 1);\n         \\<And>s.\n            pre C (\\<lambda>a. I a + 1) s\n            \\<le> I s + \\<up> (bval b s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  strip C = c\n  vc C (\\<lambda>a. I a + 1)\n  pre C (\\<lambda>a. I a + 1) ?s \\<le> I ?s + \\<up> (bval b ?s)\n\ngoal (1 subgoal):\n 1. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>2\\<^sub>' {\\<lambda>s.\n           I s + \\<up> (bval b s)}\n       c {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       strip C = WHILE b DO c \\<and>\n       vc C (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) \\<and>\n       (\\<forall>s.\n           pre C (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) s\n           \\<le> I s + 1)", "apply(rule exI[where x=\"{I} WHILE b DO C\"], safe)"], ["proof (prove)\ngoal (3 subgoals):\n 1. strip ({I} WHILE b DO C) = WHILE b DO c\n 2. vc ({I} WHILE b DO C) (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n 3. \\<And>s.\n       pre ({I} WHILE b DO C) (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) s\n       \\<le> I s + 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. strip ({I} WHILE b DO C) = WHILE b DO c", "using strip"], ["proof (prove)\nusing this:\n  strip C = c\n\ngoal (1 subgoal):\n 1. strip ({I} WHILE b DO C) = WHILE b DO c", "by simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. vc ({I} WHILE b DO C) (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n 2. \\<And>s.\n       pre ({I} WHILE b DO C) (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) s\n       \\<le> I s + 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. vc ({I} WHILE b DO C) (\\<lambda>a. I a + \\<up> (\\<not> bval b a))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s.\n        pre C (\\<lambda>s. I s + 1) s \\<le> I s + \\<up> (bval b s)) \\<and>\n    vc C (\\<lambda>s. I s + 1)", "using pre vc"], ["proof (prove)\nusing this:\n  pre C (\\<lambda>a. I a + 1) ?s \\<le> I ?s + \\<up> (bval b ?s)\n  vc C (\\<lambda>a. I a + 1)\n\ngoal (1 subgoal):\n 1. (\\<forall>s.\n        pre C (\\<lambda>s. I s + 1) s \\<le> I s + \\<up> (bval b s)) \\<and>\n    vc C (\\<lambda>s. I s + 1)", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       pre ({I} WHILE b DO C) (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) s\n       \\<le> I s + 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre ({I} WHILE b DO C) (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) s_\n    \\<le> I s_ + 1", "by simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>C.\n     strip C = WHILE b DO c \\<and>\n     vc C (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) \\<and>\n     (\\<forall>s.\n         pre C (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) s \\<le> I s + 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \"\\<turnstile>\\<^sub>Z { P } c { Q } \\<Longrightarrow> \\<exists>C. strip C = c \\<and> vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)\"\n  (is \"_ \\<Longrightarrow>   \\<exists>C. ?G P c Q C\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>Z {P} c {Q} \\<Longrightarrow>\n    \\<exists>C.\n       strip C = c \\<and> vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "proof (induction rule: hoareQ'.induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (bval b s)}\n                                     c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (\\<not> bval b s)}\n                             c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 6. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 7. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "case (ZSkip P)"], ["proof (state)\nthis:\n  \n\ngoal (7 subgoals):\n 1. \\<And>P.\n       \\<exists>C.\n          strip C = SKIP \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n 2. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (bval b s)}\n                                     c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (\\<not> bval b s)}\n                             c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 4. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 5. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 6. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 7. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "show ?case (is \"\\<exists>C. ?C C\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       strip C = SKIP \\<and>\n       vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. strip ?C = SKIP \\<and>\n    vc ?C P \\<and> (\\<forall>s. pre ?C P s \\<le> eSuc (P s))", "show \"?C Askip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strip SKIP = SKIP \\<and>\n    vc SKIP P \\<and> (\\<forall>s. pre SKIP P s \\<le> eSuc (P s))", "by auto"], ["proof (state)\nthis:\n  strip SKIP = SKIP \\<and>\n  vc SKIP P \\<and> (\\<forall>s. pre SKIP P s \\<le> eSuc (P s))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>C.\n     strip C = SKIP \\<and>\n     vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P s))\n\ngoal (6 subgoals):\n 1. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 2. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (bval b s)}\n                                     c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (\\<not> bval b s)}\n                             c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 3. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 4. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 5. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 6. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 2. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (bval b s)}\n                                     c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (\\<not> bval b s)}\n                             c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 3. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 4. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 5. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 6. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "case (ZAssign P a x)"], ["proof (state)\nthis:\n  \n\ngoal (6 subgoals):\n 1. \\<And>P a x.\n       \\<exists>C.\n          strip C = x ::= a \\<and>\n          vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n 2. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (bval b s)}\n                                     c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (\\<not> bval b s)}\n                             c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 3. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 4. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 5. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 6. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "show ?case (is \"\\<exists>C. ?C C\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       strip C = x ::= a \\<and>\n       vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. strip ?C = x ::= a \\<and>\n    vc ?C P \\<and> (\\<forall>s. pre ?C P s \\<le> eSuc (P (s[a/x])))", "show \"?C(Aassign x a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strip (x ::= a) = x ::= a \\<and>\n    vc (x ::= a) P \\<and>\n    (\\<forall>s. pre (x ::= a) P s \\<le> eSuc (P (s[a/x])))", "by simp"], ["proof (state)\nthis:\n  strip (x ::= a) = x ::= a \\<and>\n  vc (x ::= a) P \\<and>\n  (\\<forall>s. pre (x ::= a) P s \\<le> eSuc (P (s[a/x])))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>C.\n     strip C = x ::= a \\<and>\n     vc C P \\<and> (\\<forall>s. pre C P s \\<le> eSuc (P (s[a/x])))\n\ngoal (5 subgoals):\n 1. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (bval b s)}\n                                     c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (\\<not> bval b s)}\n                             c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 2. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 3. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 4. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 5. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (bval b s)}\n                                     c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (\\<not> bval b s)}\n                             c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 2. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 3. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 4. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 5. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "case (ZIf P b c\\<^sub>1 Q c\\<^sub>2)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (bval b s)} c\\<^sub>1 {Q}\n  \\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (\\<not> bval b s)} c\\<^sub>2\n                       {Q}\n  \\<exists>C.\n     strip C = c\\<^sub>1 \\<and>\n     vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s))\n  \\<exists>C.\n     strip C = c\\<^sub>2 \\<and>\n     vc C Q \\<and>\n     (\\<forall>s. pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\n\ngoal (5 subgoals):\n 1. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (bval b s)}\n                                     c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (\\<not> bval b s)}\n                             c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 2. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 3. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 4. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 5. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "from ZIf(3)"], ["proof (chain)\npicking this:\n  \\<exists>C.\n     strip C = c\\<^sub>1 \\<and>\n     vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s))", "obtain C1 where strip1: \"strip C1 = c\\<^sub>1\" and vc1: \"vc C1 Q\" and pre1: \"(\\<And>s. pre C1 Q s \\<le> P s + \\<up> (bval b s))\""], ["proof (prove)\nusing this:\n  \\<exists>C.\n     strip C = c\\<^sub>1 \\<and>\n     vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s))\n\ngoal (1 subgoal):\n 1. (\\<And>C1.\n        \\<lbrakk>strip C1 = c\\<^sub>1; vc C1 Q;\n         \\<And>s. pre C1 Q s \\<le> P s + \\<up> (bval b s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  strip C1 = c\\<^sub>1\n  vc C1 Q\n  pre C1 Q ?s \\<le> P ?s + \\<up> (bval b ?s)\n\ngoal (5 subgoals):\n 1. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (bval b s)}\n                                     c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (\\<not> bval b s)}\n                             c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 2. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 3. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 4. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 5. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "from ZIf(4)"], ["proof (chain)\npicking this:\n  \\<exists>C.\n     strip C = c\\<^sub>2 \\<and>\n     vc C Q \\<and>\n     (\\<forall>s. pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))", "obtain C2 where strip2: \"strip C2 = c\\<^sub>2\" and vc2: \"vc C2 Q\" and pre2: \"(\\<And>s. pre C2 Q s \\<le> P s + \\<up> (\\<not> bval b s))\""], ["proof (prove)\nusing this:\n  \\<exists>C.\n     strip C = c\\<^sub>2 \\<and>\n     vc C Q \\<and>\n     (\\<forall>s. pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\n\ngoal (1 subgoal):\n 1. (\\<And>C2.\n        \\<lbrakk>strip C2 = c\\<^sub>2; vc C2 Q;\n         \\<And>s. pre C2 Q s \\<le> P s + \\<up> (\\<not> bval b s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  strip C2 = c\\<^sub>2\n  vc C2 Q\n  pre C2 Q ?s \\<le> P ?s + \\<up> (\\<not> bval b ?s)\n\ngoal (5 subgoals):\n 1. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (bval b s)}\n                                     c\\<^sub>1 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s. pre C Q s \\<le> P s + \\<up> (bval b s));\n        \\<turnstile>\\<^sub>Z {\\<lambda>s. P s + \\<up> (\\<not> bval b s)}\n                             c\\<^sub>2 {Q};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C Q \\<and>\n           (\\<forall>s.\n               pre C Q s \\<le> P s + \\<up> (\\<not> bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C =\n                            IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n                            vc C Q \\<and>\n                            (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n 2. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 3. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 4. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 5. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       strip C = IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n       vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> eSuc (P s))", "apply(rule exI[where x=\"IF b THEN C1 ELSE C2\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. strip (IF b THEN C1 ELSE C2) = IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n    vc (IF b THEN C1 ELSE C2) Q \\<and>\n    (\\<forall>s. pre (IF b THEN C1 ELSE C2) Q s \\<le> eSuc (P s))", "apply(safe)"], ["proof (prove)\ngoal (3 subgoals):\n 1. strip (IF b THEN C1 ELSE C2) = IF b THEN c\\<^sub>1 ELSE c\\<^sub>2\n 2. vc (IF b THEN C1 ELSE C2) Q\n 3. \\<And>s. pre (IF b THEN C1 ELSE C2) Q s \\<le> eSuc (P s)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. strip (IF b THEN C1 ELSE C2) = IF b THEN c\\<^sub>1 ELSE c\\<^sub>2", "using strip1 strip2"], ["proof (prove)\nusing this:\n  strip C1 = c\\<^sub>1\n  strip C2 = c\\<^sub>2\n\ngoal (1 subgoal):\n 1. strip (IF b THEN C1 ELSE C2) = IF b THEN c\\<^sub>1 ELSE c\\<^sub>2", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. vc (IF b THEN C1 ELSE C2) Q\n 2. \\<And>s. pre (IF b THEN C1 ELSE C2) Q s \\<le> eSuc (P s)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. vc (IF b THEN C1 ELSE C2) Q", "using vc1 vc2"], ["proof (prove)\nusing this:\n  vc C1 Q\n  vc C2 Q\n\ngoal (1 subgoal):\n 1. vc (IF b THEN C1 ELSE C2) Q", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. pre (IF b THEN C1 ELSE C2) Q s \\<le> eSuc (P s)", "subgoal for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre (IF b THEN C1 ELSE C2) Q s \\<le> eSuc (P s)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. bval b s \\<Longrightarrow> pre C1 Q s \\<le> P s\n 2. \\<not> bval b s \\<Longrightarrow> pre C2 Q s \\<le> P s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. bval b s \\<Longrightarrow> pre C1 Q s \\<le> P s", "using pre1[of s]"], ["proof (prove)\nusing this:\n  pre C1 Q s \\<le> P s + \\<up> (bval b s)\n\ngoal (1 subgoal):\n 1. bval b s \\<Longrightarrow> pre C1 Q s \\<le> P s", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> bval b s \\<Longrightarrow> pre C2 Q s \\<le> P s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> bval b s \\<Longrightarrow> pre C2 Q s \\<le> P s", "using pre2[of s]"], ["proof (prove)\nusing this:\n  pre C2 Q s \\<le> P s + \\<up> (\\<not> bval b s)\n\ngoal (1 subgoal):\n 1. \\<not> bval b s \\<Longrightarrow> pre C2 Q s \\<le> P s", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>C.\n     strip C = IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 \\<and>\n     vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> eSuc (P s))\n\ngoal (4 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 3. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 4. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 3. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 4. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "case (ZSeq P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2}\n  \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3}\n  \\<exists>C.\n     strip C = c\\<^sub>1 \\<and>\n     vc C P\\<^sub>2 \\<and> (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s)\n  \\<exists>C.\n     strip C = c\\<^sub>2 \\<and>\n     vc C P\\<^sub>3 \\<and> (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\n\ngoal (4 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 3. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 4. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "from ZSeq(3)"], ["proof (chain)\npicking this:\n  \\<exists>C.\n     strip C = c\\<^sub>1 \\<and>\n     vc C P\\<^sub>2 \\<and> (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s)", "obtain C1 where strip1: \"strip C1 = c\\<^sub>1\" and vc1: \"vc C1 P\\<^sub>2\" and pre1: \"(\\<forall>s. pre C1 P\\<^sub>2 s \\<le> P\\<^sub>1 s)\""], ["proof (prove)\nusing this:\n  \\<exists>C.\n     strip C = c\\<^sub>1 \\<and>\n     vc C P\\<^sub>2 \\<and> (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s)\n\ngoal (1 subgoal):\n 1. (\\<And>C1.\n        \\<lbrakk>strip C1 = c\\<^sub>1; vc C1 P\\<^sub>2;\n         \\<forall>s. pre C1 P\\<^sub>2 s \\<le> P\\<^sub>1 s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  strip C1 = c\\<^sub>1\n  vc C1 P\\<^sub>2\n  \\<forall>s. pre C1 P\\<^sub>2 s \\<le> P\\<^sub>1 s\n\ngoal (4 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 3. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 4. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "from ZSeq(4)"], ["proof (chain)\npicking this:\n  \\<exists>C.\n     strip C = c\\<^sub>2 \\<and>\n     vc C P\\<^sub>3 \\<and> (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)", "obtain C2 where strip2: \"strip C2 = c\\<^sub>2\" and vc2: \"vc C2 P\\<^sub>3\" and pre2: \"(\\<forall>s. pre C2 P\\<^sub>3 s \\<le> P\\<^sub>2 s)\""], ["proof (prove)\nusing this:\n  \\<exists>C.\n     strip C = c\\<^sub>2 \\<and>\n     vc C P\\<^sub>3 \\<and> (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\n\ngoal (1 subgoal):\n 1. (\\<And>C2.\n        \\<lbrakk>strip C2 = c\\<^sub>2; vc C2 P\\<^sub>3;\n         \\<forall>s. pre C2 P\\<^sub>3 s \\<le> P\\<^sub>2 s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  strip C2 = c\\<^sub>2\n  vc C2 P\\<^sub>3\n  \\<forall>s. pre C2 P\\<^sub>3 s \\<le> P\\<^sub>2 s\n\ngoal (4 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 3. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 4. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "{"], ["proof (state)\nthis:\n  strip C2 = c\\<^sub>2\n  vc C2 P\\<^sub>3\n  \\<forall>s. pre C2 P\\<^sub>3 s \\<le> P\\<^sub>2 s\n\ngoal (4 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 3. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 4. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "fix s"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 3. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 4. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "have \"pre C1 (pre C2 P\\<^sub>3) s \\<le> P\\<^sub>1 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre C1 (pre C2 P\\<^sub>3) s \\<le> P\\<^sub>1 s", "apply(rule order.trans[where b=\"pre C1 P\\<^sub>2 s\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. pre C1 (pre C2 P\\<^sub>3) s \\<le> pre C1 P\\<^sub>2 s\n 2. pre C1 P\\<^sub>2 s \\<le> P\\<^sub>1 s", "apply(rule pre_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s. pre C2 P\\<^sub>3 s \\<le> P\\<^sub>2 s\n 2. pre C1 P\\<^sub>2 s \\<le> P\\<^sub>1 s", "using pre2"], ["proof (prove)\nusing this:\n  \\<forall>s. pre C2 P\\<^sub>3 s \\<le> P\\<^sub>2 s\n\ngoal (2 subgoals):\n 1. \\<And>s. pre C2 P\\<^sub>3 s \\<le> P\\<^sub>2 s\n 2. pre C1 P\\<^sub>2 s \\<le> P\\<^sub>1 s", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre C1 P\\<^sub>2 s \\<le> P\\<^sub>1 s", "using pre1"], ["proof (prove)\nusing this:\n  \\<forall>s. pre C1 P\\<^sub>2 s \\<le> P\\<^sub>1 s\n\ngoal (1 subgoal):\n 1. pre C1 P\\<^sub>2 s \\<le> P\\<^sub>1 s", "by simp"], ["proof (state)\nthis:\n  pre C1 (pre C2 P\\<^sub>3) s \\<le> P\\<^sub>1 s\n\ngoal (4 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 3. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 4. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "}"], ["proof (state)\nthis:\n  pre C1 (pre C2 P\\<^sub>3) ?s2 \\<le> P\\<^sub>1 ?s2\n\ngoal (4 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 3. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 4. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "note pre = this"], ["proof (state)\nthis:\n  pre C1 (pre C2 P\\<^sub>3) ?s2 \\<le> P\\<^sub>1 ?s2\n\ngoal (4 subgoals):\n 1. \\<And>P\\<^sub>1 c\\<^sub>1 P\\<^sub>2 c\\<^sub>2 P\\<^sub>3.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P\\<^sub>1} c\\<^sub>1 {P\\<^sub>2};\n        \\<exists>C.\n           strip C = c\\<^sub>1 \\<and>\n           vc C P\\<^sub>2 \\<and>\n           (\\<forall>s. pre C P\\<^sub>2 s \\<le> P\\<^sub>1 s);\n        \\<turnstile>\\<^sub>Z {P\\<^sub>2} c\\<^sub>2 {P\\<^sub>3};\n        \\<exists>C.\n           strip C = c\\<^sub>2 \\<and>\n           vc C P\\<^sub>3 \\<and>\n           (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>2 s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n                            vc C P\\<^sub>3 \\<and>\n                            (\\<forall>s.\n                                pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n 2. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 3. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 4. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n       vc C P\\<^sub>3 \\<and>\n       (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)", "apply(rule exI[where x=\"C1 ;; C2\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. strip (C1;; C2) = c\\<^sub>1;; c\\<^sub>2 \\<and>\n    vc (C1;; C2) P\\<^sub>3 \\<and>\n    (\\<forall>s. pre (C1;; C2) P\\<^sub>3 s \\<le> P\\<^sub>1 s)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. strip (C1;; C2) = c\\<^sub>1;; c\\<^sub>2\n 2. vc (C1;; C2) P\\<^sub>3\n 3. \\<And>s. pre (C1;; C2) P\\<^sub>3 s \\<le> P\\<^sub>1 s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. strip (C1;; C2) = c\\<^sub>1;; c\\<^sub>2", "using strip1 strip2"], ["proof (prove)\nusing this:\n  strip C1 = c\\<^sub>1\n  strip C2 = c\\<^sub>2\n\ngoal (1 subgoal):\n 1. strip (C1;; C2) = c\\<^sub>1;; c\\<^sub>2", "by simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. vc (C1;; C2) P\\<^sub>3\n 2. \\<And>s. pre (C1;; C2) P\\<^sub>3 s \\<le> P\\<^sub>1 s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. vc (C1;; C2) P\\<^sub>3", "using vc1 vc2 vc_mono pre2"], ["proof (prove)\nusing this:\n  vc C1 P\\<^sub>2\n  vc C2 P\\<^sub>3\n  \\<lbrakk>\\<And>s. ?P' s \\<le> ?P s; vc ?C ?P\\<rbrakk>\n  \\<Longrightarrow> vc ?C ?P'\n  \\<forall>s. pre C2 P\\<^sub>3 s \\<le> P\\<^sub>2 s\n\ngoal (1 subgoal):\n 1. vc (C1;; C2) P\\<^sub>3", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. pre (C1;; C2) P\\<^sub>3 s \\<le> P\\<^sub>1 s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre (C1;; C2) P\\<^sub>3 s_ \\<le> P\\<^sub>1 s_", "using pre"], ["proof (prove)\nusing this:\n  pre C1 (pre C2 P\\<^sub>3) ?s2 \\<le> P\\<^sub>1 ?s2\n\ngoal (1 subgoal):\n 1. pre (C1;; C2) P\\<^sub>3 s_ \\<le> P\\<^sub>1 s_", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>C.\n     strip C = c\\<^sub>1;; c\\<^sub>2 \\<and>\n     vc C P\\<^sub>3 \\<and> (\\<forall>s. pre C P\\<^sub>3 s \\<le> P\\<^sub>1 s)\n\ngoal (3 subgoals):\n 1. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 2. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 3. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 2. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 3. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "case (ZWhile I b c)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                       {\\<lambda>t. I t + 1}\n  \\<exists>C.\n     strip C = c \\<and>\n     vc C (\\<lambda>a. I a + 1) \\<and>\n     (\\<forall>s.\n         pre C (\\<lambda>a. I a + 1) s \\<le> I s + \\<up> (bval b s))\n\ngoal (3 subgoals):\n 1. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 2. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 3. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "from ZWhile(2)"], ["proof (chain)\npicking this:\n  \\<exists>C.\n     strip C = c \\<and>\n     vc C (\\<lambda>a. I a + 1) \\<and>\n     (\\<forall>s.\n         pre C (\\<lambda>a. I a + 1) s \\<le> I s + \\<up> (bval b s))", "obtain C where strip: \"strip C = c\" and vc: \"vc C (\\<lambda>a. I a + 1)\"\n    and pre: \"\\<And>s. pre C (\\<lambda>a. I a + 1) s \\<le> I s + \\<up> (bval b s)\""], ["proof (prove)\nusing this:\n  \\<exists>C.\n     strip C = c \\<and>\n     vc C (\\<lambda>a. I a + 1) \\<and>\n     (\\<forall>s.\n         pre C (\\<lambda>a. I a + 1) s \\<le> I s + \\<up> (bval b s))\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>strip C = c; vc C (\\<lambda>a. I a + 1);\n         \\<And>s.\n            pre C (\\<lambda>a. I a + 1) s\n            \\<le> I s + \\<up> (bval b s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  strip C = c\n  vc C (\\<lambda>a. I a + 1)\n  pre C (\\<lambda>a. I a + 1) ?s \\<le> I ?s + \\<up> (bval b ?s)\n\ngoal (3 subgoals):\n 1. \\<And>I b c.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. I s + \\<up> (bval b s)} c\n                                     {\\<lambda>t. I t + 1};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. I a + 1) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. I a + 1) s\n               \\<le> I s + \\<up> (bval b s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = WHILE b DO c \\<and>\n                            vc C\n                             (\\<lambda>a.\n                                 I a + \\<up> (\\<not> bval b a)) \\<and>\n                            (\\<forall>s.\n                                pre C\n                                 (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n                                 s\n                                \\<le> I s + 1)\n 2. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 3. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       strip C = WHILE b DO c \\<and>\n       vc C (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) \\<and>\n       (\\<forall>s.\n           pre C (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) s\n           \\<le> I s + 1)", "apply(rule exI[where x=\"{I} WHILE b DO C\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. strip ({I} WHILE b DO C) = WHILE b DO c \\<and>\n    vc ({I} WHILE b DO C) (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) \\<and>\n    (\\<forall>s.\n        pre ({I} WHILE b DO C) (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) s\n        \\<le> I s + 1)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. strip ({I} WHILE b DO C) = WHILE b DO c\n 2. vc ({I} WHILE b DO C) (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n 3. \\<And>s.\n       pre ({I} WHILE b DO C) (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) s\n       \\<le> I s + 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. strip ({I} WHILE b DO C) = WHILE b DO c", "using strip"], ["proof (prove)\nusing this:\n  strip C = c\n\ngoal (1 subgoal):\n 1. strip ({I} WHILE b DO C) = WHILE b DO c", "by simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. vc ({I} WHILE b DO C) (\\<lambda>a. I a + \\<up> (\\<not> bval b a))\n 2. \\<And>s.\n       pre ({I} WHILE b DO C) (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) s\n       \\<le> I s + 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. vc ({I} WHILE b DO C) (\\<lambda>a. I a + \\<up> (\\<not> bval b a))", "using pre vc"], ["proof (prove)\nusing this:\n  pre C (\\<lambda>a. I a + 1) ?s \\<le> I ?s + \\<up> (bval b ?s)\n  vc C (\\<lambda>a. I a + 1)\n\ngoal (1 subgoal):\n 1. vc ({I} WHILE b DO C) (\\<lambda>a. I a + \\<up> (\\<not> bval b a))", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       pre ({I} WHILE b DO C) (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) s\n       \\<le> I s + 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre ({I} WHILE b DO C) (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) s_\n    \\<le> I s_ + 1", "by simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>C.\n     strip C = WHILE b DO c \\<and>\n     vc C (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) \\<and>\n     (\\<forall>s.\n         pre C (\\<lambda>a. I a + \\<up> (\\<not> bval b a)) s \\<le> I s + 1)\n\ngoal (2 subgoals):\n 1. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 2. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 2. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "case (Zconseq' P c Q P' Q')"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>Z {P} c {Q}\n  P ?s \\<le> P' ?s\n  Q' ?s \\<le> Q ?s\n  \\<exists>C.\n     strip C = c \\<and> vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)\n\ngoal (2 subgoals):\n 1. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 2. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "then"], ["proof (chain)\npicking this:\n  \\<turnstile>\\<^sub>Z {P} c {Q}\n  P ?s \\<le> P' ?s\n  Q' ?s \\<le> Q ?s\n  \\<exists>C.\n     strip C = c \\<and> vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "obtain C where \"strip C = c\" and vc: \"vc C Q\" and pre: \"\\<And>s. pre C Q s \\<le> P s\""], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>Z {P} c {Q}\n  P ?s \\<le> P' ?s\n  Q' ?s \\<le> Q ?s\n  \\<exists>C.\n     strip C = c \\<and> vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>strip C = c; vc C Q; \\<And>s. pre C Q s \\<le> P s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  strip C = c\n  vc C Q\n  pre C Q ?s \\<le> P ?s\n\ngoal (2 subgoals):\n 1. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 2. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "from pre_mono[OF Zconseq'(3)]"], ["proof (chain)\npicking this:\n  pre ?C (\\<lambda>s. Q' (?s1 s)) ?s \\<le> pre ?C (\\<lambda>s. Q (?s1 s)) ?s", "have 1: \"\\<And>s. pre C Q' s \\<le> pre C Q s\""], ["proof (prove)\nusing this:\n  pre ?C (\\<lambda>s. Q' (?s1 s)) ?s \\<le> pre ?C (\\<lambda>s. Q (?s1 s)) ?s\n\ngoal (1 subgoal):\n 1. \\<And>s. pre C Q' s \\<le> pre C Q s", "by auto"], ["proof (state)\nthis:\n  pre C Q' ?s \\<le> pre C Q ?s\n\ngoal (2 subgoals):\n 1. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {P} c {Q};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s);\n        \\<And>s. P s \\<le> P' s; \\<And>s. Q' s \\<le> Q s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q' \\<and>\n                            (\\<forall>s. pre C Q' s \\<le> P' s)\n 2. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       strip C = c \\<and> vc C Q' \\<and> (\\<forall>s. pre C Q' s \\<le> P' s)", "apply(rule exI[where x=C])"], ["proof (prove)\ngoal (1 subgoal):\n 1. strip C = c \\<and> vc C Q' \\<and> (\\<forall>s. pre C Q' s \\<le> P' s)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. strip C = c\n 2. vc C Q'\n 3. \\<And>s. pre C Q' s \\<le> P' s", "apply fact"], ["proof (prove)\ngoal (2 subgoals):\n 1. vc C Q'\n 2. \\<And>s. pre C Q' s \\<le> P' s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. vc C Q'", "using vc Zconseq'(3) vc_mono"], ["proof (prove)\nusing this:\n  vc C Q\n  Q' ?s \\<le> Q ?s\n  \\<lbrakk>\\<And>s. ?P' s \\<le> ?P s; vc ?C ?P\\<rbrakk>\n  \\<Longrightarrow> vc ?C ?P'\n\ngoal (1 subgoal):\n 1. vc C Q'", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. pre C Q' s \\<le> P' s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre C Q' s_ \\<le> P' s_", "using pre Zconseq'(2) 1"], ["proof (prove)\nusing this:\n  pre C Q ?s \\<le> P ?s\n  P ?s \\<le> P' ?s\n  pre C Q' ?s \\<le> pre C Q ?s\n\ngoal (1 subgoal):\n 1. pre C Q' s_ \\<le> P' s_", "using order.trans"], ["proof (prove)\nusing this:\n  pre C Q ?s \\<le> P ?s\n  P ?s \\<le> P' ?s\n  pre C Q' ?s \\<le> pre C Q ?s\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?c\\<rbrakk> \\<Longrightarrow> ?a \\<le> ?c\n\ngoal (1 subgoal):\n 1. pre C Q' s_ \\<le> P' s_", "by metis"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>C.\n     strip C = c \\<and> vc C Q' \\<and> (\\<forall>s. pre C Q' s \\<le> P' s)\n\ngoal (1 subgoal):\n 1. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "case (Zconst k P c Q)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                       {\\<lambda>s. enat k * Q s}\n  0 < k\n  \\<exists>C.\n     strip C = c \\<and>\n     vc C (\\<lambda>a. enat k * Q a) \\<and>\n     (\\<forall>s. pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s)\n\ngoal (1 subgoal):\n 1. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "then"], ["proof (chain)\npicking this:\n  \\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                       {\\<lambda>s. enat k * Q s}\n  0 < k\n  \\<exists>C.\n     strip C = c \\<and>\n     vc C (\\<lambda>a. enat k * Q a) \\<and>\n     (\\<forall>s. pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s)", "obtain C where strip: \"strip C = c\" and vc: \"vc C (\\<lambda>a. enat k * Q a)\" \n    and k: \"k>0\" and pre: \"\\<And>s. pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s\""], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                       {\\<lambda>s. enat k * Q s}\n  0 < k\n  \\<exists>C.\n     strip C = c \\<and>\n     vc C (\\<lambda>a. enat k * Q a) \\<and>\n     (\\<forall>s. pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>strip C = c; vc C (\\<lambda>a. enat k * Q a); 0 < k;\n         \\<And>s.\n            pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  strip C = c\n  vc C (\\<lambda>a. enat k * Q a)\n  0 < k\n  pre C (\\<lambda>a. enat k * Q a) ?s \\<le> enat k * P ?s\n\ngoal (1 subgoal):\n 1. \\<And>k P c Q.\n       \\<lbrakk>\\<turnstile>\\<^sub>Z {\\<lambda>s. enat k * P s} c\n                                     {\\<lambda>s. enat k * Q s};\n        \\<exists>C.\n           strip C = c \\<and>\n           vc C (\\<lambda>a. enat k * Q a) \\<and>\n           (\\<forall>s.\n               pre C (\\<lambda>a. enat k * Q a) s \\<le> enat k * P s);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            strip C = c \\<and>\n                            vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       strip C = c \\<and> vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)", "apply(rule exI[where x=\"{k} Ab C\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. strip ({k} Ab C) = c \\<and>\n    vc ({k} Ab C) Q \\<and> (\\<forall>s. pre ({k} Ab C) Q s \\<le> P s)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. strip ({k} Ab C) = c\n 2. vc ({k} Ab C) Q\n 3. \\<And>s. pre ({k} Ab C) Q s \\<le> P s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. strip ({k} Ab C) = c", "using strip"], ["proof (prove)\nusing this:\n  strip C = c\n\ngoal (1 subgoal):\n 1. strip ({k} Ab C) = c", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. vc ({k} Ab C) Q\n 2. \\<And>s. pre ({k} Ab C) Q s \\<le> P s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. vc ({k} Ab C) Q", "using vc k"], ["proof (prove)\nusing this:\n  vc C (\\<lambda>a. enat k * Q a)\n  0 < k\n\ngoal (1 subgoal):\n 1. vc ({k} Ab C) Q", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. pre ({k} Ab C) Q s \\<le> P s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre ({k} Ab C) Q s_ \\<le> P s_", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. ediv (pre C (\\<lambda>s. enat k * Q s) s_) k \\<le> P s_", "using ediv_mono[OF pre] ediv_cancel2[OF k]"], ["proof (prove)\nusing this:\n  ediv (pre C (\\<lambda>a. enat k * Q a) ?s1) ?k\n  \\<le> ediv (enat k * P ?s1) ?k\n  ediv (enat k * ?x) k = ?x\n\ngoal (1 subgoal):\n 1. ediv (pre C (\\<lambda>s. enat k * Q s) s_) k \\<le> P s_", "by metis"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>C.\n     strip C = c \\<and> vc C Q \\<and> (\\<forall>s. pre C Q s \\<le> P s)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}