{"file_name": "/home/qj213/afp-2021-10-22/thys/Hoare_Time/SepLogK_Hoare.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Hoare_Time", "problem_names": ["lemma \"A4 x a Q (ps,n) \\<Longrightarrow> A2 x a Q (ps,n)\"", "lemma \"A2 x a Q (ps,n) \\<Longrightarrow> A4 x a Q (ps,n)\"", "lemma E_extendsR: \"\\<turnstile>\\<^sub>3\\<^sub>a { P } c { F } \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' { P } c { F }\"", "lemma E_extendsS: \"\\<turnstile>\\<^sub>3\\<^sub>b { P } c { F } \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' { P } c { F }\"", "lemma Skip':  \"P = (F ** $1) \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' { P } SKIP { F }\"", "lemma \"( (\\<forall>ps n. P (ps,n)\n \\<longrightarrow> (\\<exists>ps' ps'' m e e'. ((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'') \n     \\<and> ps' ## ps'' \\<and>  n =  e + e' + m\n     \\<and> Q (ps',e))))\n  \\<longleftrightarrow>   (\\<forall>ps n. P (ps,n) \\<longrightarrow> (\\<exists>ps' m e . ((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps')   \\<and>  n = e  + m \\<and> (Q ** (\\<lambda>_. True)) (ps',e)))\"", "theorem hoareT_sound2_part: assumes \"\\<turnstile>\\<^sub>3\\<^sub>' { P }c{ Q  }\"\n  shows \"\\<Turnstile>\\<^sub>3\\<^sub>' { P } c { Q }\"", "lemma hoareT_sound2_partR: \"\\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q} \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} c {Q}\"", "lemma Frame_R:  assumes \"\\<turnstile>\\<^sub>3\\<^sub>' { P } C { Q  }\" \"Frame P' P F\"\n             shows \"\\<turnstile>\\<^sub>3\\<^sub>' { P' } C { Q ** F } \"", "lemma strengthen_post: assumes \"\\<turnstile>\\<^sub>3\\<^sub>' {P}c{Q}\" \"\\<And>s. Q s \\<Longrightarrow> Q' s\"\n  shows \"\\<turnstile>\\<^sub>3\\<^sub>' {P}c{ Q'}\"", "lemmas strongAssign = Assign''''[OF _ strengthen_post, OF _ Frame_R, OF _ Assign''']", "lemma weakenpre:  \"\\<lbrakk> \\<turnstile>\\<^sub>3\\<^sub>' {P}c{Q} ; \\<And>s. P' s \\<Longrightarrow> P s  \\<rbrakk> \\<Longrightarrow>\n           \\<turnstile>\\<^sub>3\\<^sub>' {P'}c{ Q}\"", "lemma weakenpreR:  \"\\<lbrakk> \\<turnstile>\\<^sub>3\\<^sub>a {P}c{Q} ; \\<And>s. P' s \\<Longrightarrow> P s  \\<rbrakk> \\<Longrightarrow>\n           \\<turnstile>\\<^sub>3\\<^sub>a {P'}c{ Q}\"", "lemma wp3Skip[simp]: \"wp\\<^sub>3\\<^sub>' SKIP Q = (Q ** $1)\"", "lemma wp3Assign[simp]: \"wp\\<^sub>3\\<^sub>' (x ::= e) Q = ((\\<lambda>(ps,t). vars e \\<union> {x} \\<subseteq> dom ps \\<and> Q (ps(x \\<mapsto> paval e ps),t)) ** $1)\"", "lemma wpt_Seq[simp]: \"wp\\<^sub>3\\<^sub>' (c\\<^sub>1;;c\\<^sub>2) Q = wp\\<^sub>3\\<^sub>' c\\<^sub>1 (wp\\<^sub>3\\<^sub>' c\\<^sub>2 Q)\"", "lemma wp3If[simp]:\n \"wp\\<^sub>3\\<^sub>' (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2) Q = ((\\<lambda>(ps,t). vars b \\<subseteq> dom ps \\<and> wp\\<^sub>3\\<^sub>' (if pbval b ps then c\\<^sub>1 else c\\<^sub>2) Q (ps,t)) ** $1)\"", "lemma sFTrue: assumes \"pbval b ps\" \"vars b \\<subseteq> dom ps\"\n  shows \"wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) = ((\\<lambda>(ps, n). vars b \\<subseteq> dom ps \\<and> (if pbval b ps then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (ps, n) else Q (ps, n))) \\<and>* $ 1) (ps, n)\"\n    (is \"?wp = (?I \\<and>* $ 1) _\")", "lemma sFFalse: assumes \"~ pbval b ps\" \"vars b \\<subseteq> dom ps\"\n  shows \"wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) = ((\\<lambda>(ps, n). vars b \\<subseteq> dom ps \\<and> (if pbval b ps then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (ps, n) else Q (ps, n))) \\<and>* $ 1) (ps, n)\"\n    (is \"?wp = (?I \\<and>* $ 1) _\")", "lemma sF': \"wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps,n) = ((\\<lambda>(ps, n). vars b \\<subseteq> dom ps \\<and> (if pbval b ps then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (ps, n) else Q (ps, n))) \\<and>* $ 1) (ps,n)\"", "lemma sF: \"wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q s = ((\\<lambda>(ps, n). vars b \\<subseteq> dom ps \\<and> (if pbval b ps then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (ps, n) else Q (ps, n))) \\<and>* $ 1) s\"", "lemma strengthen_postR: assumes \"\\<turnstile>\\<^sub>3\\<^sub>a {P}c{Q}\" \"\\<And>s. Q s \\<Longrightarrow> Q' s\"\n  shows \"\\<turnstile>\\<^sub>3\\<^sub>a {P}c{ Q'}\"", "lemma assumes \"\\<And>Q. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c {Q}\"\n  shows WhileWpisPre: \"\\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q} WHILE b DO c { Q}\"", "lemma wpT_is_pre: \"\\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c { Q}\"", "lemma hoare3o_valid_alt: \"\\<Turnstile>\\<^sub>3\\<^sub>' { P } c { Q }  \\<Longrightarrow>\n    (\\<exists> k>0. (\\<forall>ps n. P (ps,n div k)\n \\<longrightarrow> (\\<exists>ps' ps'' m e e'. ((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'') \n     \\<and> ps' ## ps'' \\<and> n = e + e' + m\n     \\<and> Q (ps',e div k))))\"", "lemma valid_alternative_with_GC: assumes \"(\\<forall>ps n. P (ps,n)\n \\<longrightarrow> (\\<exists>ps' ps'' m e e'. ((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'') \n     \\<and> ps' ## ps'' \\<and> n = e + e' + m\n     \\<and> Q (ps',e))) \" shows \"(\\<forall>ps n. P (ps,n)    \n \\<longrightarrow> (\\<exists>ps'  m e . ((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps'  ) \n      \\<and> n = e + m \\<and> (Q ** sep_true) (ps',e)))\"", "lemma hoare3o_valid_GC: \"\\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q } \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q ** sep_true}\"", "lemma hoare3a_sound_GC: \"\\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q} \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q ** sep_true}\"", "lemma valid_wp: \"\\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow> (\\<exists>k>0. \\<forall>s n. P (s, n) \\<longrightarrow> wp\\<^sub>3\\<^sub>' c (\\<lambda>(ps, n). (Q ** sep_true) (ps, n div k)) (s, k * n))\"", "theorem completeness: \"\\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>b {P} c { Q ** sep_true}\"", "lemma completenessR: \"\\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q ** sep_true}\""], "translations": [["", "lemma \"A4 x a Q (ps,n) \\<Longrightarrow> A2 x a Q (ps,n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A4 x a Q (ps, n) \\<Longrightarrow> A2 x a Q (ps, n)", "unfolding A4_def A2_def sep_conj_def dollar_def sep_impl_def pointsto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xa y.\n       xa ## y \\<and>\n       (ps, n) = xa + y \\<and>\n       (case xa of\n        (ps, t) \\<Rightarrow>\n          x \\<in> dom ps \\<and>\n          vars a \\<subseteq> dom ps \\<and>\n          Q (ps(x \\<mapsto> paval a ps), t)) \\<and>\n       (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = 1) \\<Longrightarrow>\n    \\<exists>xa.\n       (\\<exists>xaa y.\n           xaa ## y \\<and>\n           (ps, n) = xaa + y \\<and>\n           (\\<exists>xa.\n               case xaa of\n               (s, c) \\<Rightarrow>\n                 s = [x \\<mapsto> xa] \\<and> c = 0) \\<and>\n           (\\<exists>xaa ya.\n               xaa ## ya \\<and>\n               y = xaa + ya \\<and>\n               (\\<forall>h'.\n                   xaa ## h' \\<and>\n                   (case h' of\n                    (s, c) \\<Rightarrow>\n                      s = [x \\<mapsto> xa] \\<and> c = 0) \\<longrightarrow>\n                   Q (xaa + h')) \\<and>\n               (case ya of (s, c) \\<Rightarrow> s = 0 \\<and> c = 1))) \\<and>\n       (\\<exists>x y.\n           x ## y \\<and>\n           (ps, n) = x + y \\<and>\n           True \\<and>\n           (case y of\n            (ps, n) \\<Rightarrow>\n              vars a \\<subseteq> dom ps \\<and> paval a ps = xa))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b y.\n       \\<lbrakk>n = Suc b; ps x = Some y; vars a \\<subseteq> dom ps;\n        Q (ps(x \\<mapsto> paval a ps), b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>a ba aa.\n                                a ## aa \\<and>\n                                ps = a + aa \\<and>\n                                (\\<exists>bb.\n                                    Suc b = ba + bb \\<and>\n                                    (\\<exists>xa.\n  a = [x \\<mapsto> xa]) \\<and>\n                                    ba = 0 \\<and>\n                                    (\\<exists>b.\n  bb = Suc b \\<and>\n  (aa ## [x \\<mapsto> xa] \\<longrightarrow>\n   Q (aa + [x \\<mapsto> xa], b))))) \\<and>\n                            (\\<exists>aa ba ab.\n                                aa ## ab \\<and>\n                                ps = aa + ab \\<and>\n                                (\\<exists>bb. Suc b = ba + bb) \\<and>\n                                vars a \\<subseteq> dom ab \\<and>\n                                paval a ab = xa)", "apply(rule exI[where x=\"paval a ps\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b y.\n       \\<lbrakk>n = Suc b; ps x = Some y; vars a \\<subseteq> dom ps;\n        Q (ps(x \\<mapsto> paval a ps), b)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>aa ba ab.\n                             aa ## ab \\<and>\n                             ps = aa + ab \\<and>\n                             (\\<exists>bb.\n                                 Suc b = ba + bb \\<and>\n                                 (\\<exists>xa. aa = [x \\<mapsto> xa]) \\<and>\n                                 ba = 0 \\<and>\n                                 (\\<exists>b.\n                                     bb = Suc b \\<and>\n                                     (ab ##\n[x \\<mapsto> paval a ps] \\<longrightarrow>\nQ (ab + [x \\<mapsto> paval a ps], b))))) \\<and>\n                         (\\<exists>aa ba ab.\n                             aa ## ab \\<and>\n                             ps = aa + ab \\<and>\n                             (\\<exists>bb. Suc b = ba + bb) \\<and>\n                             vars a \\<subseteq> dom ab \\<and>\n                             paval a ab = paval a ps)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b y.\n       \\<lbrakk>n = Suc b; ps x = Some y; vars a \\<subseteq> dom ps;\n        Q (ps(x \\<mapsto> paval a ps), b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa ba ab.\n                            aa ## ab \\<and>\n                            ps = aa + ab \\<and>\n                            (\\<exists>bb.\n                                Suc b = ba + bb \\<and>\n                                (\\<exists>xa. aa = [x \\<mapsto> xa]) \\<and>\n                                ba = 0 \\<and>\n                                (\\<exists>b.\n                                    bb = Suc b \\<and>\n                                    (ab ##\n                                     [x \\<mapsto>\npaval a ps] \\<longrightarrow>\n                                     Q (ab + [x \\<mapsto> paval a ps], b))))\n 2. \\<And>b y.\n       \\<lbrakk>n = Suc b; ps x = Some y; vars a \\<subseteq> dom ps;\n        Q (ps(x \\<mapsto> paval a ps), b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa ba ab.\n                            aa ## ab \\<and>\n                            ps = aa + ab \\<and>\n                            (\\<exists>bb. Suc b = ba + bb) \\<and>\n                            vars a \\<subseteq> dom ab \\<and>\n                            paval a ab = paval a ps", "subgoal for n v"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>aa b ab.\n                         aa ## ab \\<and>\n                         ps = aa + ab \\<and>\n                         (\\<exists>ba.\n                             Suc n = b + ba \\<and>\n                             (\\<exists>xa. aa = [x \\<mapsto> xa]) \\<and>\n                             b = 0 \\<and>\n                             (\\<exists>b.\n                                 ba = Suc b \\<and>\n                                 (ab ##\n                                  [x \\<mapsto> paval a ps] \\<longrightarrow>\n                                  Q (ab + [x \\<mapsto> paval a ps], b))))", "apply(rule exI[where x=\"[x \\<mapsto> v]::partstate\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b aa.\n                         [x \\<mapsto> v] ## aa \\<and>\n                         ps = [x \\<mapsto> v] + aa \\<and>\n                         (\\<exists>ba.\n                             Suc n = b + ba \\<and>\n                             (\\<exists>xa.\n                                 [x \\<mapsto> v] = [x \\<mapsto> xa]) \\<and>\n                             b = 0 \\<and>\n                             (\\<exists>b.\n                                 ba = Suc b \\<and>\n                                 (aa ##\n                                  [x \\<mapsto> paval a ps] \\<longrightarrow>\n                                  Q (aa + [x \\<mapsto> paval a ps], b))))", "apply(rule exI[where x=0])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>aa.\n                         [x \\<mapsto> v] ## aa \\<and>\n                         ps = [x \\<mapsto> v] + aa \\<and>\n                         (\\<exists>b.\n                             Suc n = 0 + b \\<and>\n                             (\\<exists>xa.\n                                 [x \\<mapsto> v] = [x \\<mapsto> xa]) \\<and>\n                             0 = 0 \\<and>\n                             (\\<exists>ba.\n                                 b = Suc ba \\<and>\n                                 (aa ##\n                                  [x \\<mapsto> paval a ps] \\<longrightarrow>\n                                  Q (aa + [x \\<mapsto> paval a ps], ba))))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>aa.\n                         [x \\<mapsto> v] ## aa \\<and>\n                         ps = [x \\<mapsto> v] + aa \\<and>\n                         (\\<exists>xa.\n                             [x \\<mapsto> v] = [x \\<mapsto> xa]) \\<and>\n                         (aa ## [x \\<mapsto> paval a ps] \\<longrightarrow>\n                          Q (aa + [x \\<mapsto> paval a ps], n))", "apply(rule exI[where x=\"ps(x:=None)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> [x \\<mapsto> v] ## ps(x := None) \\<and>\n                      ps = [x \\<mapsto> v] + ps(x := None) \\<and>\n                      (\\<exists>xa.\n                          [x \\<mapsto> v] = [x \\<mapsto> xa]) \\<and>\n                      (ps(x := None) ##\n                       [x \\<mapsto> paval a ps] \\<longrightarrow>\n                       Q (ps(x := None) + [x \\<mapsto> paval a ps], n))", "apply auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> [x \\<mapsto> v] ## ps(x := None)\n 2. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> ps = [x \\<mapsto> v] + ps(x := None)\n 3. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n);\n     ps(x := None) ## [x \\<mapsto> paval a ps]\\<rbrakk>\n    \\<Longrightarrow> Q (ps(x := None) + [x \\<mapsto> paval a ps], n)", "unfolding sep_disj_fun_def domain_conv"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> dom [x \\<mapsto> v] \\<inter> dom (ps(x := None)) = {}\n 2. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> ps = [x \\<mapsto> v] + ps(x := None)\n 3. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n);\n     dom (ps(x := None)) \\<inter> dom [x \\<mapsto> paval a ps] = {}\\<rbrakk>\n    \\<Longrightarrow> Q (ps(x := None) + [x \\<mapsto> paval a ps], n)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> ps = [x \\<mapsto> v] + ps(x := None)\n 2. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> Q (ps(x := None) + [x \\<mapsto> paval a ps], n)", "unfolding plus_fun_conv"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> ps = [x \\<mapsto> v] ++ ps(x := None)\n 2. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> Q (ps(x := None) ++ [x \\<mapsto> paval a ps], n)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> ps = [x \\<mapsto> v] ++ ps(x := None)", "by (simp add: map_add_upd_left map_upd_triv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b y.\n       \\<lbrakk>n = Suc b; ps x = Some y; vars a \\<subseteq> dom ps;\n        Q (ps(x \\<mapsto> paval a ps), b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa ba ab.\n                            aa ## ab \\<and>\n                            ps = aa + ab \\<and>\n                            (\\<exists>bb. Suc b = ba + bb) \\<and>\n                            vars a \\<subseteq> dom ab \\<and>\n                            paval a ab = paval a ps", "subgoal for n v"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>aa b ab.\n                         aa ## ab \\<and>\n                         ps = aa + ab \\<and>\n                         (\\<exists>ba. Suc n = b + ba) \\<and>\n                         vars a \\<subseteq> dom ab \\<and>\n                         paval a ab = paval a ps", "apply(rule exI[where x=0])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b aa.\n                         0 ## aa \\<and>\n                         ps = 0 + aa \\<and>\n                         (\\<exists>ba. Suc n = b + ba) \\<and>\n                         vars a \\<subseteq> dom aa \\<and>\n                         paval a aa = paval a ps", "apply(rule exI[where x=n])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>aa.\n                         0 ## aa \\<and>\n                         ps = 0 + aa \\<and>\n                         (\\<exists>b. Suc n = n + b) \\<and>\n                         vars a \\<subseteq> dom aa \\<and>\n                         paval a aa = paval a ps", "apply(rule exI[where x=ps])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc n; ps x = Some v; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), n)\\<rbrakk>\n    \\<Longrightarrow> 0 ## ps \\<and>\n                      ps = 0 + ps \\<and>\n                      (\\<exists>b. Suc n = n + b) \\<and>\n                      vars a \\<subseteq> dom ps \\<and>\n                      paval a ps = paval a ps", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma \"A2 x a Q (ps,n) \\<Longrightarrow> A4 x a Q (ps,n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A2 x a Q (ps, n) \\<Longrightarrow> A4 x a Q (ps, n)", "unfolding A4_def A2_def sep_conj_def dollar_def sep_impl_def pointsto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       (\\<exists>xaa y.\n           xaa ## y \\<and>\n           (ps, n) = xaa + y \\<and>\n           (\\<exists>xa.\n               case xaa of\n               (s, c) \\<Rightarrow>\n                 s = [x \\<mapsto> xa] \\<and> c = 0) \\<and>\n           (\\<exists>xaa ya.\n               xaa ## ya \\<and>\n               y = xaa + ya \\<and>\n               (\\<forall>h'.\n                   xaa ## h' \\<and>\n                   (case h' of\n                    (s, c) \\<Rightarrow>\n                      s = [x \\<mapsto> xa] \\<and> c = 0) \\<longrightarrow>\n                   Q (xaa + h')) \\<and>\n               (case ya of (s, c) \\<Rightarrow> s = 0 \\<and> c = 1))) \\<and>\n       (\\<exists>x y.\n           x ## y \\<and>\n           (ps, n) = x + y \\<and>\n           True \\<and>\n           (case y of\n            (ps, n) \\<Rightarrow>\n              vars a \\<subseteq> dom ps \\<and>\n              paval a ps = xa)) \\<Longrightarrow>\n    \\<exists>xa y.\n       xa ## y \\<and>\n       (ps, n) = xa + y \\<and>\n       (case xa of\n        (ps, t) \\<Rightarrow>\n          x \\<in> dom ps \\<and>\n          vars a \\<subseteq> dom ps \\<and>\n          Q (ps(x \\<mapsto> paval a ps), t)) \\<and>\n       (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = 1)", "apply (auto simp: sep_disj_commute)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa ba ab ac bc xa bd.\n       \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n        [x \\<mapsto> xa] + ab = aa + ac; n = ba + bc; Suc bd = ba + bc;\n        vars a \\<subseteq> dom ac;\n        \\<not> ab ## [x \\<mapsto> paval a ac]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            ba + bc = Suc b \\<and>\n                            x \\<in> dom (aa + ac) \\<and>\n                            vars a \\<subseteq> dom (aa + ac) \\<and>\n                            Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), b)\n 2. \\<And>aa ba ab ac bc xa bd.\n       \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n        [x \\<mapsto> xa] + ab = aa + ac; n = ba + bc; Suc bd = ba + bc;\n        vars a \\<subseteq> dom ac;\n        Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            ba + bc = Suc b \\<and>\n                            x \\<in> dom (aa + ac) \\<and>\n                            vars a \\<subseteq> dom (aa + ac) \\<and>\n                            Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), b)", "subgoal for aa ba ab ac bc xa bd"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     [x \\<mapsto> xa] + ab = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     \\<not> ab ## [x \\<mapsto> paval a ac]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b.\n                         ba + bc = Suc b \\<and>\n                         x \\<in> dom (aa + ac) \\<and>\n                         vars a \\<subseteq> dom (aa + ac) \\<and>\n                         Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), b)", "apply(rule exI[where x=bd])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     [x \\<mapsto> xa] + ab = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     \\<not> ab ## [x \\<mapsto> paval a ac]\\<rbrakk>\n    \\<Longrightarrow> ba + bc = Suc bd \\<and>\n                      x \\<in> dom (aa + ac) \\<and>\n                      vars a \\<subseteq> dom (aa + ac) \\<and>\n                      Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), bd)", "by (auto simp: sep_add_ac  domain_conv sep_disj_fun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa ba ab ac bc xa bd.\n       \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n        [x \\<mapsto> xa] + ab = aa + ac; n = ba + bc; Suc bd = ba + bc;\n        vars a \\<subseteq> dom ac;\n        Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            ba + bc = Suc b \\<and>\n                            x \\<in> dom (aa + ac) \\<and>\n                            vars a \\<subseteq> dom (aa + ac) \\<and>\n                            Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), b)", "subgoal  for aa ba ab ac bc xa bd"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     [x \\<mapsto> xa] + ab = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b.\n                         ba + bc = Suc b \\<and>\n                         x \\<in> dom (aa + ac) \\<and>\n                         vars a \\<subseteq> dom (aa + ac) \\<and>\n                         Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), b)", "apply(rule exI[where x=bd])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     [x \\<mapsto> xa] + ab = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n    \\<Longrightarrow> ba + bc = Suc bd \\<and>\n                      x \\<in> dom (aa + ac) \\<and>\n                      vars a \\<subseteq> dom (aa + ac) \\<and>\n                      Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), bd)", "apply (auto simp: sep_add_ac)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. (aa + ac) x = Some y\n 2. \\<And>xb.\n       \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n        ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n        vars a \\<subseteq> dom ac; Q (ab + [x \\<mapsto> paval a ac], bd);\n        xb \\<in> vars a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (aa + ac) xb = Some y\n 3. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n    \\<Longrightarrow> Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), bd)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. (aa + ac) x = Some y", "apply (auto simp:   domain_conv sep_disj_fun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom aa \\<inter> dom ac = {}; ps = aa + ac;\n     ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac; Q (ab + [x \\<mapsto> paval a ac], bd);\n     (aa + ac) x = None\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. ab x = Some y", "by (metis fun_upd_same none_def plus_fun_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xb.\n       \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n        ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n        vars a \\<subseteq> dom ac; Q (ab + [x \\<mapsto> paval a ac], bd);\n        xb \\<in> vars a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (aa + ac) xb = Some y\n 2. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n    \\<Longrightarrow> Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), bd)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac; Q (ab + [x \\<mapsto> paval a ac], bd);\n     xb_ \\<in> vars a\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. (aa + ac) xb_ = Some y", "by (metis domD map_add_dom_app_simps(1) plus_fun_conv subsetCE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n    \\<Longrightarrow> Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), bd)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n    \\<Longrightarrow> Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), bd)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n    \\<Longrightarrow> Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), bd)", "assume a: \"ab + [x \\<mapsto> xa] = aa + ac\""], ["proof (state)\nthis:\n  ab + [x \\<mapsto> xa] = aa + ac\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n    \\<Longrightarrow> Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), bd)", "assume b: \"ps = aa + ac\" and o: \"aa ## ac\""], ["proof (state)\nthis:\n  ps = aa + ac\n  aa ## ac\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n    \\<Longrightarrow> Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), bd)", "then"], ["proof (chain)\npicking this:\n  ps = aa + ac\n  aa ## ac", "have b': \"ps = ac + aa\""], ["proof (prove)\nusing this:\n  ps = aa + ac\n  aa ## ac\n\ngoal (1 subgoal):\n 1. ps = ac + aa", "by(simp add: sep_add_ac)"], ["proof (state)\nthis:\n  ps = ac + aa\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n    \\<Longrightarrow> Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), bd)", "assume vars: \"vars a \\<subseteq> dom ac\""], ["proof (state)\nthis:\n  vars a \\<subseteq> dom ac\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n    \\<Longrightarrow> Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), bd)", "have pa: \"paval a ps = paval a ac\""], ["proof (prove)\ngoal (1 subgoal):\n 1. paval a ps = paval a ac", "unfolding b'"], ["proof (prove)\ngoal (1 subgoal):\n 1. paval a (ac + aa) = paval a ac", "apply(rule paval_extend)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ac ## aa\n 2. vars a \\<subseteq> dom ac", "using o vars"], ["proof (prove)\nusing this:\n  aa ## ac\n  vars a \\<subseteq> dom ac\n\ngoal (2 subgoals):\n 1. ac ## aa\n 2. vars a \\<subseteq> dom ac", "by (simp_all add: sep_add_ac)"], ["proof (state)\nthis:\n  paval a ps = paval a ac\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n    \\<Longrightarrow> Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), bd)", "have f: \"\\<And>f. (ab + [x \\<mapsto> xa])(x \\<mapsto> f) = ab + [x \\<mapsto> f]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f. (ab + [x \\<mapsto> xa])(x \\<mapsto> f) = ab + [x \\<mapsto> f]", "by (simp add: plus_fun_conv)"], ["proof (state)\nthis:\n  (ab + [x \\<mapsto> xa])(x \\<mapsto> ?f) = ab + [x \\<mapsto> ?f]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n    \\<Longrightarrow> Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), bd)", "assume \"Q (ab + [x \\<mapsto> paval a ac], bd)\""], ["proof (state)\nthis:\n  Q (ab + [x \\<mapsto> paval a ac], bd)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ab ## [x \\<mapsto> xa]; aa ## ac; ps = aa + ac;\n     ab + [x \\<mapsto> xa] = aa + ac; n = ba + bc; Suc bd = ba + bc;\n     vars a \\<subseteq> dom ac;\n     Q (ab + [x \\<mapsto> paval a ac], bd)\\<rbrakk>\n    \\<Longrightarrow> Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), bd)", "thus \"Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), bd)\""], ["proof (prove)\nusing this:\n  Q (ab + [x \\<mapsto> paval a ac], bd)\n\ngoal (1 subgoal):\n 1. Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), bd)", "unfolding b[symmetric] pa"], ["proof (prove)\nusing this:\n  Q (ab + [x \\<mapsto> paval a ac], bd)\n\ngoal (1 subgoal):\n 1. Q (ps(x \\<mapsto> paval a ac), bd)", "unfolding b a[symmetric] pa f"], ["proof (prove)\nusing this:\n  Q (ab + [x \\<mapsto> paval a ac], bd)\n\ngoal (1 subgoal):\n 1. Q (ab + [x \\<mapsto> paval a ac], bd)", "by auto"], ["proof (state)\nthis:\n  Q ((aa + ac)(x \\<mapsto> paval a (aa + ac)), bd)\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma E_extendsR: \"\\<turnstile>\\<^sub>3\\<^sub>a { P } c { F } \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' { P } c { F }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {P} c { F} \\<Longrightarrow>\n    \\<turnstile>\\<^sub>3\\<^sub>' {P} c { F}", "apply (induct  rule: hoare3a.induct)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n 2. \\<And>x a Q.\n       \\<turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(ps, t).\n   x \\<in> dom ps \\<and>\n   vars a \\<subseteq> dom ps \\<and>\n   Q (ps(x \\<mapsto> paval a ps), t)) \\<and>*\n                                     $ 1}\n                                    x ::= a { Q}\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n                                     c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 4. \\<And>P C Q F.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} C { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} C { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* F} C\n                { Q \\<and>* F}\n 5. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>a {Q} C\\<^sub>2 { R};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P}\n                C\\<^sub>1;; C\\<^sub>2 { R}\n 6. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n                                     C { (\\<lambda>(s, n).\n       P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n   $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                WHILE b DO C\n                { \\<lambda>a.\n                     case a of\n                     (s, n) \\<Rightarrow>\n                       P (s, n) \\<and> lmaps_to_axpr b False s}\n 7. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n        \\<And>s n. P' (s, n) \\<Longrightarrow> P (s, n);\n        \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n)\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P'} c { Q'}", "apply(intro hoare3'.Skip)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x a Q.\n       \\<turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(ps, t).\n   x \\<in> dom ps \\<and>\n   vars a \\<subseteq> dom ps \\<and>\n   Q (ps(x \\<mapsto> paval a ps), t)) \\<and>*\n                                     $ 1}\n                                    x ::= a { Q}\n 2. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n                                     c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 3. \\<And>P C Q F.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} C { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} C { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* F} C\n                { Q \\<and>* F}\n 4. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>a {Q} C\\<^sub>2 { R};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P}\n                C\\<^sub>1;; C\\<^sub>2 { R}\n 5. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n                                     C { (\\<lambda>(s, n).\n       P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n   $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                WHILE b DO C\n                { \\<lambda>a.\n                     case a of\n                     (s, n) \\<Rightarrow>\n                       P (s, n) \\<and> lmaps_to_axpr b False s}\n 6. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n        \\<And>s n. P' (s, n) \\<Longrightarrow> P (s, n);\n        \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n)\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P'} c { Q'}", "apply(intro hoare3'.Assign4)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n                                     c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 2. \\<And>P C Q F.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} C { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} C { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* F} C\n                { Q \\<and>* F}\n 3. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>a {Q} C\\<^sub>2 { R};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P}\n                C\\<^sub>1;; C\\<^sub>2 { R}\n 4. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n                                     C { (\\<lambda>(s, n).\n       P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n   $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                WHILE b DO C\n                { \\<lambda>a.\n                     case a of\n                     (s, n) \\<Rightarrow>\n                       P (s, n) \\<and> lmaps_to_axpr b False s}\n 5. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n        \\<And>s n. P' (s, n) \\<Longrightarrow> P (s, n);\n        \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n)\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P'} c { Q'}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n        P_ (s, n) \\<and> lmaps_to_axpr b_ True s}\n    c\\<^sub>1_ { Q_};\n     \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\ncase a of (s, n) \\<Rightarrow> P_ (s, n) \\<and> lmaps_to_axpr b_ True s}\n                                  c\\<^sub>1_ { Q_};\n     \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\nP_ (s, n) \\<and> lmaps_to_axpr b_ False s}\n                                  c\\<^sub>2_ { Q_};\n     \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\ncase a of (s, n) \\<Rightarrow> P_ (s, n) \\<and> lmaps_to_axpr b_ False s}\n                                  c\\<^sub>2_ { Q_}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                  P_ (s, n) \\<and> vars b_ \\<subseteq> dom s) \\<and>*\n              $ 1}\n             IF b_ THEN c\\<^sub>1_ ELSE c\\<^sub>2_ { Q_}", "using hoare3'.If"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n      ?P (s, n) \\<and> lmaps_to_axpr ?b True s}\n  ?c\\<^sub>1 { ?Q};\n   \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n                                    ?P (s, n) \\<and>\n                                    lmaps_to_axpr ?b False s}\n                                ?c\\<^sub>2 { ?Q}\\<rbrakk>\n  \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                ?P (s, n) \\<and> vars ?b \\<subseteq> dom s) \\<and>*\n            $ 1}\n           IF ?b THEN ?c\\<^sub>1 ELSE ?c\\<^sub>2 { ?Q}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n        P_ (s, n) \\<and> lmaps_to_axpr b_ True s}\n    c\\<^sub>1_ { Q_};\n     \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\ncase a of (s, n) \\<Rightarrow> P_ (s, n) \\<and> lmaps_to_axpr b_ True s}\n                                  c\\<^sub>1_ { Q_};\n     \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\nP_ (s, n) \\<and> lmaps_to_axpr b_ False s}\n                                  c\\<^sub>2_ { Q_};\n     \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\ncase a of (s, n) \\<Rightarrow> P_ (s, n) \\<and> lmaps_to_axpr b_ False s}\n                                  c\\<^sub>2_ { Q_}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                  P_ (s, n) \\<and> vars b_ \\<subseteq> dom s) \\<and>*\n              $ 1}\n             IF b_ THEN c\\<^sub>1_ ELSE c\\<^sub>2_ { Q_}", "by auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>P C Q F.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} C { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} C { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* F} C\n                { Q \\<and>* F}\n 2. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>a {Q} C\\<^sub>2 { R};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P}\n                C\\<^sub>1;; C\\<^sub>2 { R}\n 3. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n                                     C { (\\<lambda>(s, n).\n       P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n   $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                WHILE b DO C\n                { \\<lambda>a.\n                     case a of\n                     (s, n) \\<Rightarrow>\n                       P (s, n) \\<and> lmaps_to_axpr b False s}\n 4. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n        \\<And>s n. P' (s, n) \\<Longrightarrow> P (s, n);\n        \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n)\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P'} c { Q'}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P_} C_ { Q_};\n     \\<turnstile>\\<^sub>3\\<^sub>' {P_} C_ { Q_}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P_ \\<and>* F_} C_\n             { Q_ \\<and>* F_}", "using hoare3'.Frame"], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>3\\<^sub>' {?P} ?C { ?Q} \\<Longrightarrow>\n  \\<turnstile>\\<^sub>3\\<^sub>' {?P \\<and>* ?F} ?C { ?Q \\<and>* ?F}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P_} C_ { Q_};\n     \\<turnstile>\\<^sub>3\\<^sub>' {P_} C_ { Q_}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P_ \\<and>* F_} C_\n             { Q_ \\<and>* F_}", "by auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>a {Q} C\\<^sub>2 { R};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P}\n                C\\<^sub>1;; C\\<^sub>2 { R}\n 2. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n                                     C { (\\<lambda>(s, n).\n       P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n   $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                WHILE b DO C\n                { \\<lambda>a.\n                     case a of\n                     (s, n) \\<Rightarrow>\n                       P (s, n) \\<and> lmaps_to_axpr b False s}\n 3. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n        \\<And>s n. P' (s, n) \\<Longrightarrow> P (s, n);\n        \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n)\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P'} c { Q'}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P_} C\\<^sub>1_ { Q_};\n     \\<turnstile>\\<^sub>3\\<^sub>' {P_} C\\<^sub>1_ { Q_};\n     \\<turnstile>\\<^sub>3\\<^sub>a {Q_} C\\<^sub>2_ { R_};\n     \\<turnstile>\\<^sub>3\\<^sub>' {Q_} C\\<^sub>2_ { R_}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P_}\n             C\\<^sub>1_;; C\\<^sub>2_ { R_}", "using hoare3'.Seq"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {?P} ?C\\<^sub>1 { ?Q};\n   \\<turnstile>\\<^sub>3\\<^sub>' {?Q} ?C\\<^sub>2 { ?R}\\<rbrakk>\n  \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {?P}\n           ?C\\<^sub>1;; ?C\\<^sub>2 { ?R}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P_} C\\<^sub>1_ { Q_};\n     \\<turnstile>\\<^sub>3\\<^sub>' {P_} C\\<^sub>1_ { Q_};\n     \\<turnstile>\\<^sub>3\\<^sub>a {Q_} C\\<^sub>2_ { R_};\n     \\<turnstile>\\<^sub>3\\<^sub>' {Q_} C\\<^sub>2_ { R_}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P_}\n             C\\<^sub>1_;; C\\<^sub>2_ { R_}", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n                                     C { (\\<lambda>(s, n).\n       P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n   $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                WHILE b DO C\n                { \\<lambda>a.\n                     case a of\n                     (s, n) \\<Rightarrow>\n                       P (s, n) \\<and> lmaps_to_axpr b False s}\n 2. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n        \\<And>s n. P' (s, n) \\<Longrightarrow> P (s, n);\n        \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n)\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P'} c { Q'}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n        P_ (s, n) \\<and> lmaps_to_axpr b_ True s}\n    C_ { (\\<lambda>(s, n).\n             P_ (s, n) \\<and> vars b_ \\<subseteq> dom s) \\<and>*\n         $ 1};\n     \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\ncase a of (s, n) \\<Rightarrow> P_ (s, n) \\<and> lmaps_to_axpr b_ True s}\n                                  C_ { (\\<lambda>(s, n).\n     P_ (s, n) \\<and> vars b_ \\<subseteq> dom s) \\<and>*\n $ 1}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                  P_ (s, n) \\<and> vars b_ \\<subseteq> dom s) \\<and>*\n              $ 1}\n             WHILE b_ DO C_\n             { \\<lambda>a.\n                  case a of\n                  (s, n) \\<Rightarrow>\n                    P_ (s, n) \\<and> lmaps_to_axpr b_ False s}", "using hoare3'.While"], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n                                   ?P (s, n) \\<and> lmaps_to_axpr ?b True s}\n                               ?C { (\\<lambda>(s, n).\n  ?P (s, n) \\<and> vars ?b \\<subseteq> dom s) \\<and>*\n                                    $ 1} \\<Longrightarrow>\n  \\<turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                                    ?P (s, n) \\<and>\n                                    vars ?b \\<subseteq> dom s) \\<and>*\n                                $ 1}\n                               WHILE ?b DO ?C\n                               { \\<lambda>(s, n).\n                                    ?P (s, n) \\<and>\n                                    lmaps_to_axpr ?b False s}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n        P_ (s, n) \\<and> lmaps_to_axpr b_ True s}\n    C_ { (\\<lambda>(s, n).\n             P_ (s, n) \\<and> vars b_ \\<subseteq> dom s) \\<and>*\n         $ 1};\n     \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\ncase a of (s, n) \\<Rightarrow> P_ (s, n) \\<and> lmaps_to_axpr b_ True s}\n                                  C_ { (\\<lambda>(s, n).\n     P_ (s, n) \\<and> vars b_ \\<subseteq> dom s) \\<and>*\n $ 1}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                  P_ (s, n) \\<and> vars b_ \\<subseteq> dom s) \\<and>*\n              $ 1}\n             WHILE b_ DO C_\n             { \\<lambda>a.\n                  case a of\n                  (s, n) \\<Rightarrow>\n                    P_ (s, n) \\<and> lmaps_to_axpr b_ False s}", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P c Q P' Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n        \\<And>s n. P' (s, n) \\<Longrightarrow> P (s, n);\n        \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n)\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P'} c { Q'}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P_} c_ { Q_};\n     \\<turnstile>\\<^sub>3\\<^sub>' {P_} c_ { Q_};\n     \\<And>s n. P'_ (s, n) \\<Longrightarrow> P_ (s, n);\n     \\<And>s n. Q_ (s, n) \\<Longrightarrow> Q'_ (s, n)\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P'_} c_ { Q'_}", "using hoare3'.conseq[where k=1]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {?P} ?c { ?Q};\n   \\<And>s n. ?P' (s, n) \\<Longrightarrow> ?P (s, 1 * n);\n   \\<And>s n. ?Q (s, n) \\<Longrightarrow> ?Q' (s, n div 1); 0 < 1\\<rbrakk>\n  \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {?P'} ?c { ?Q'}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P_} c_ { Q_};\n     \\<turnstile>\\<^sub>3\\<^sub>' {P_} c_ { Q_};\n     \\<And>s n. P'_ (s, n) \\<Longrightarrow> P_ (s, n);\n     \\<And>s n. Q_ (s, n) \\<Longrightarrow> Q'_ (s, n)\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P'_} c_ { Q'_}", "by simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma E_extendsS: \"\\<turnstile>\\<^sub>3\\<^sub>b { P } c { F } \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' { P } c { F }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>b {P} c { F} \\<Longrightarrow>\n    \\<turnstile>\\<^sub>3\\<^sub>' {P} c { F}", "apply (induct  rule: hoare3b.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P c Q.\n       \\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q} \\<Longrightarrow>\n       \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n 2. \\<And>P c Q P' k Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>b {P} c { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n        \\<And>s n. P' (s, n) \\<Longrightarrow> P (s, k * n);\n        \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n div k);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P'} c { Q'}", "apply(erule E_extendsR)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P c Q P' k Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>b {P} c { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n        \\<And>s n. P' (s, n) \\<Longrightarrow> P (s, k * n);\n        \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n div k);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P'} c { Q'}", "using hoare3'.conseq"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {?P} ?c { ?Q};\n   \\<And>s n. ?P' (s, n) \\<Longrightarrow> ?P (s, ?k * n);\n   \\<And>s n. ?Q (s, n) \\<Longrightarrow> ?Q' (s, n div ?k); 0 < ?k\\<rbrakk>\n  \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {?P'} ?c { ?Q'}\n\ngoal (1 subgoal):\n 1. \\<And>P c Q P' k Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>b {P} c { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n        \\<And>s n. P' (s, n) \\<Longrightarrow> P (s, k * n);\n        \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n div k);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P'} c { Q'}", "by blast"], ["", "lemma Skip':  \"P = (F ** $1) \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' { P } SKIP { F }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P = (F \\<and>* $ 1) \\<Longrightarrow>\n    \\<turnstile>\\<^sub>3\\<^sub>' {P} SKIP { F}", "apply(rule conseq[where k=1])"], ["proof (prove)\ngoal (4 subgoals):\n 1. P = (F \\<and>* $ 1) \\<Longrightarrow>\n    \\<turnstile>\\<^sub>3\\<^sub>' {?P} SKIP { ?Q}\n 2. \\<And>s n.\n       \\<lbrakk>P = (F \\<and>* $ 1); P (s, n)\\<rbrakk>\n       \\<Longrightarrow> ?P (s, 1 * n)\n 3. \\<And>s n.\n       \\<lbrakk>P = (F \\<and>* $ 1); ?Q (s, n)\\<rbrakk>\n       \\<Longrightarrow> F (s, n div 1)\n 4. P = (F \\<and>* $ 1) \\<Longrightarrow> 0 < 1", "apply(rule Frame[where F=F])"], ["proof (prove)\ngoal (4 subgoals):\n 1. P = (F \\<and>* $ 1) \\<Longrightarrow>\n    \\<turnstile>\\<^sub>3\\<^sub>' {?P5} SKIP { ?Q5}\n 2. \\<And>s n.\n       \\<lbrakk>P = (F \\<and>* $ 1); P (s, n)\\<rbrakk>\n       \\<Longrightarrow> (?P5 \\<and>* F) (s, 1 * n)\n 3. \\<And>s n.\n       \\<lbrakk>P = (F \\<and>* $ 1); (?Q5 \\<and>* F) (s, n)\\<rbrakk>\n       \\<Longrightarrow> F (s, n div 1)\n 4. P = (F \\<and>* $ 1) \\<Longrightarrow> 0 < 1", "apply(rule Skip)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s n.\n       \\<lbrakk>P = (F \\<and>* $ 1); P (s, n)\\<rbrakk>\n       \\<Longrightarrow> ($ 1 \\<and>* F) (s, 1 * n)\n 2. \\<And>s n.\n       \\<lbrakk>P = (F \\<and>* $ 1); ($ 0 \\<and>* F) (s, n)\\<rbrakk>\n       \\<Longrightarrow> F (s, n div 1)\n 3. P = (F \\<and>* $ 1) \\<Longrightarrow> 0 < 1", "by (auto simp: sep_conj_ac)"], ["", "subsubsection \"experiments with explicit and implicit GarbageCollection\""], ["", "lemma \"( (\\<forall>ps n. P (ps,n)\n \\<longrightarrow> (\\<exists>ps' ps'' m e e'. ((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'') \n     \\<and> ps' ## ps'' \\<and>  n =  e + e' + m\n     \\<and> Q (ps',e))))\n  \\<longleftrightarrow>   (\\<forall>ps n. P (ps,n) \\<longrightarrow> (\\<exists>ps' m e . ((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps')   \\<and>  n = e  + m \\<and> (Q ** (\\<lambda>_. True)) (ps',e)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>ps n.\n        P (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e))) =\n    (\\<forall>ps n.\n        P (ps, n) \\<longrightarrow>\n        (\\<exists>ps' m e.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n            n = e + m \\<and> (Q \\<and>* (\\<lambda>_. True)) (ps', e)))", "proof (safe)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ps n.\n       \\<lbrakk>\\<forall>ps n.\n                   P (ps, n) \\<longrightarrow>\n                   (\\<exists>ps' ps'' m e e'.\n                       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                         ps'' \\<and>\n                       ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e));\n        P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' m e.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n                            n = e + m \\<and>\n                            (Q \\<and>* (\\<lambda>_. True)) (ps', e)\n 2. \\<And>ps n.\n       \\<lbrakk>\\<forall>ps n.\n                   P (ps, n) \\<longrightarrow>\n                   (\\<exists>ps' m e.\n                       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n                       n = e + m \\<and>\n                       (Q \\<and>* (\\<lambda>_. True)) (ps', e));\n        P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            n = e + e' + m \\<and> Q (ps', e)", "fix ps n"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ps n.\n       \\<lbrakk>\\<forall>ps n.\n                   P (ps, n) \\<longrightarrow>\n                   (\\<exists>ps' ps'' m e e'.\n                       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                         ps'' \\<and>\n                       ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e));\n        P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' m e.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n                            n = e + m \\<and>\n                            (Q \\<and>* (\\<lambda>_. True)) (ps', e)\n 2. \\<And>ps n.\n       \\<lbrakk>\\<forall>ps n.\n                   P (ps, n) \\<longrightarrow>\n                   (\\<exists>ps' m e.\n                       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n                       n = e + m \\<and>\n                       (Q \\<and>* (\\<lambda>_. True)) (ps', e));\n        P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            n = e + e' + m \\<and> Q (ps', e)", "assume \"\\<forall>ps n. P (ps, n) \\<longrightarrow> (\\<exists>ps' ps'' m e e'. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e))\"\n    \"P (ps, n)\""], ["proof (state)\nthis:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e))\n  P (ps, n)\n\ngoal (2 subgoals):\n 1. \\<And>ps n.\n       \\<lbrakk>\\<forall>ps n.\n                   P (ps, n) \\<longrightarrow>\n                   (\\<exists>ps' ps'' m e e'.\n                       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                         ps'' \\<and>\n                       ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e));\n        P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' m e.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n                            n = e + m \\<and>\n                            (Q \\<and>* (\\<lambda>_. True)) (ps', e)\n 2. \\<And>ps n.\n       \\<lbrakk>\\<forall>ps n.\n                   P (ps, n) \\<longrightarrow>\n                   (\\<exists>ps' m e.\n                       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n                       n = e + m \\<and>\n                       (Q \\<and>* (\\<lambda>_. True)) (ps', e));\n        P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            n = e + e' + m \\<and> Q (ps', e)", "then"], ["proof (chain)\npicking this:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e))\n  P (ps, n)", "obtain ps' ps'' m e e' where C: \"(c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e)\""], ["proof (prove)\nusing this:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e))\n  P (ps, n)\n\ngoal (1 subgoal):\n 1. (\\<And>m ps' ps'' e e'.\n        (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n        ps' ## ps'' \\<and>\n        n = e + e' + m \\<and> Q (ps', e) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n  ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e)\n\ngoal (2 subgoals):\n 1. \\<And>ps n.\n       \\<lbrakk>\\<forall>ps n.\n                   P (ps, n) \\<longrightarrow>\n                   (\\<exists>ps' ps'' m e e'.\n                       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                         ps'' \\<and>\n                       ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e));\n        P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' m e.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n                            n = e + m \\<and>\n                            (Q \\<and>* (\\<lambda>_. True)) (ps', e)\n 2. \\<And>ps n.\n       \\<lbrakk>\\<forall>ps n.\n                   P (ps, n) \\<longrightarrow>\n                   (\\<exists>ps' m e.\n                       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n                       n = e + m \\<and>\n                       (Q \\<and>* (\\<lambda>_. True)) (ps', e));\n        P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            n = e + e' + m \\<and> Q (ps', e)", "show \"\\<exists>ps' m e. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and> n = e + m \\<and> (Q ** (\\<lambda>_. True)) (ps',e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' m e.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n       n = e + m \\<and> (Q \\<and>* (\\<lambda>_. True)) (ps', e)", "unfolding   sep_conj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' m e.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n       n = e + m \\<and>\n       (\\<exists>x y. x ## y \\<and> (ps', e) = x + y \\<and> Q x \\<and> True)", "apply(rule exI[where x=\"ps' + ps''\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m e.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       n = e + m \\<and>\n       (\\<exists>x y.\n           x ## y \\<and> (ps' + ps'', e) = x + y \\<and> Q x \\<and> True)", "apply(rule exI[where x=\"m\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       n = e + m \\<and>\n       (\\<exists>x y.\n           x ## y \\<and> (ps' + ps'', e) = x + y \\<and> Q x \\<and> True)", "apply(rule exI[where x=\"e+e'\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n    n = e + e' + m \\<and>\n    (\\<exists>x y.\n        x ## y \\<and> (ps' + ps'', e + e') = x + y \\<and> Q x \\<and> True)", "using C"], ["proof (prove)\nusing this:\n  (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n  ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e)\n\ngoal (1 subgoal):\n 1. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n    n = e + e' + m \\<and>\n    (\\<exists>x y.\n        x ## y \\<and> (ps' + ps'', e + e') = x + y \\<and> Q x \\<and> True)", "by auto"], ["proof (state)\nthis:\n  \\<exists>ps' m e.\n     (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n     n = e + m \\<and> (Q \\<and>* (\\<lambda>_. True)) (ps', e)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>\\<forall>ps n.\n                   P (ps, n) \\<longrightarrow>\n                   (\\<exists>ps' m e.\n                       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n                       n = e + m \\<and>\n                       (Q \\<and>* (\\<lambda>_. True)) (ps', e));\n        P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            n = e + e' + m \\<and> Q (ps', e)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>\\<forall>ps n.\n                   P (ps, n) \\<longrightarrow>\n                   (\\<exists>ps' m e.\n                       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n                       n = e + m \\<and>\n                       (Q \\<and>* (\\<lambda>_. True)) (ps', e));\n        P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            n = e + e' + m \\<and> Q (ps', e)", "fix ps n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>\\<forall>ps n.\n                   P (ps, n) \\<longrightarrow>\n                   (\\<exists>ps' m e.\n                       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n                       n = e + m \\<and>\n                       (Q \\<and>* (\\<lambda>_. True)) (ps', e));\n        P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            n = e + e' + m \\<and> Q (ps', e)", "assume \"\\<forall>ps n. P (ps,n) \\<longrightarrow> (\\<exists>ps' m e . ((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps')   \\<and>  n = e  + m \\<and> (Q ** (\\<lambda>_. True)) (ps',e))\"\n    \"P (ps, n)\""], ["proof (state)\nthis:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' m e.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n         n = e + m \\<and> (Q \\<and>* (\\<lambda>_. True)) (ps', e))\n  P (ps, n)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>\\<forall>ps n.\n                   P (ps, n) \\<longrightarrow>\n                   (\\<exists>ps' m e.\n                       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n                       n = e + m \\<and>\n                       (Q \\<and>* (\\<lambda>_. True)) (ps', e));\n        P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            n = e + e' + m \\<and> Q (ps', e)", "then"], ["proof (chain)\npicking this:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' m e.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n         n = e + m \\<and> (Q \\<and>* (\\<lambda>_. True)) (ps', e))\n  P (ps, n)", "obtain ps' m e where C: \"((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps')   \\<and>  n = e  + m\" and Q: \"(Q ** (\\<lambda>_. True)) (ps',e)\""], ["proof (prove)\nusing this:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' m e.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n         n = e + m \\<and> (Q \\<and>* (\\<lambda>_. True)) (ps', e))\n  P (ps, n)\n\ngoal (1 subgoal):\n 1. (\\<And>m ps' e.\n        \\<lbrakk>(c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n                 n = e + m;\n         (Q \\<and>* (\\<lambda>_. True)) (ps', e)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and> n = e + m\n  (Q \\<and>* (\\<lambda>_. True)) (ps', e)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>\\<forall>ps n.\n                   P (ps, n) \\<longrightarrow>\n                   (\\<exists>ps' m e.\n                       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n                       n = e + m \\<and>\n                       (Q \\<and>* (\\<lambda>_. True)) (ps', e));\n        P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            n = e + e' + m \\<and> Q (ps', e)", "from Q"], ["proof (chain)\npicking this:\n  (Q \\<and>* (\\<lambda>_. True)) (ps', e)", "obtain ps1 ps2 e1 e2 where Q': \"Q (ps1,e1)\" \"ps'=ps1+ps2\" \"ps1##ps2\" \"e=e1+e2\""], ["proof (prove)\nusing this:\n  (Q \\<and>* (\\<lambda>_. True)) (ps', e)\n\ngoal (1 subgoal):\n 1. (\\<And>ps1 e1 ps2 e2.\n        \\<lbrakk>Q (ps1, e1); ps' = ps1 + ps2; ps1 ## ps2;\n         e = e1 + e2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding sep_conj_def"], ["proof (prove)\nusing this:\n  \\<exists>x y. x ## y \\<and> (ps', e) = x + y \\<and> Q x \\<and> True\n\ngoal (1 subgoal):\n 1. (\\<And>ps1 e1 ps2 e2.\n        \\<lbrakk>Q (ps1, e1); ps' = ps1 + ps2; ps1 ## ps2;\n         e = e1 + e2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Q (ps1, e1)\n  ps' = ps1 + ps2\n  ps1 ## ps2\n  e = e1 + e2\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>\\<forall>ps n.\n                   P (ps, n) \\<longrightarrow>\n                   (\\<exists>ps' m e.\n                       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n                       n = e + m \\<and>\n                       (Q \\<and>* (\\<lambda>_. True)) (ps', e));\n        P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            n = e + e' + m \\<and> Q (ps', e)", "show \"\\<exists>ps' ps'' m e e'. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m e e'.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e)", "apply(rule exI[where x=\"ps1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps'' m e e'.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps1 + ps'' \\<and>\n       ps1 ## ps'' \\<and> n = e + e' + m \\<and> Q (ps1, e)", "apply(rule exI[where x=\"ps2\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m e e'.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps1 + ps2 \\<and>\n       ps1 ## ps2 \\<and> n = e + e' + m \\<and> Q (ps1, e)", "apply(rule exI[where x=\"m\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e e'.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps1 + ps2 \\<and>\n       ps1 ## ps2 \\<and> n = e + e' + m \\<and> Q (ps1, e)", "apply(rule exI[where x=\"e1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e'.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps1 + ps2 \\<and>\n       ps1 ## ps2 \\<and> n = e1 + e' + m \\<and> Q (ps1, e1)", "apply(rule exI[where x=\"e2\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps1 + ps2 \\<and>\n    ps1 ## ps2 \\<and> n = e1 + e2 + m \\<and> Q (ps1, e1)", "using C Q'"], ["proof (prove)\nusing this:\n  (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and> n = e + m\n  Q (ps1, e1)\n  ps' = ps1 + ps2\n  ps1 ## ps2\n  e = e1 + e2\n\ngoal (1 subgoal):\n 1. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps1 + ps2 \\<and>\n    ps1 ## ps2 \\<and> n = e1 + e2 + m \\<and> Q (ps1, e1)", "by auto"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m e e'.\n     (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Soundness\\<close>"], ["", "theorem hoareT_sound2_part: assumes \"\\<turnstile>\\<^sub>3\\<^sub>' { P }c{ Q  }\"\n  shows \"\\<Turnstile>\\<^sub>3\\<^sub>' { P } c { Q }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}", "using assms"], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}", "proof(induction  rule: hoare3'.induct)"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n 2. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 3. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 4. \\<And>x Q a.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>b.\n  \\<exists>xa.\n     ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n      (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>* $ 1)\n      b \\<and>\n     ((\\<lambda>s. True) \\<and>*\n      (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n      b}\n       x ::= a { Q}\n 5. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 6. \\<And>P C Q F.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* F} C\n                         { Q \\<and>* F}\n 7. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 8. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 9. \\<And>P c Q P' k Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n        \\<And>s n. P' (s, n) \\<Longrightarrow> P (s, k * n);\n        \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n div k);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P'} c { Q'}\n 10. \\<And>P m C Q n.\n        \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n        { Q \\<and>* $ n};\n         \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n         n \\<le> m\\<rbrakk>\n        \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                          C { Q}\nA total of 15 subgoals...", "case (conseq P c Q P' k1 Q')"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n  P' (?s, ?n) \\<Longrightarrow> P (?s, k1 * ?n)\n  Q (?s, ?n) \\<Longrightarrow> Q' (?s, ?n div k1)\n  0 < k1\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n\ngoal (15 subgoals):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n 2. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 3. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 4. \\<And>x Q a.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>b.\n  \\<exists>xa.\n     ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n      (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>* $ 1)\n      b \\<and>\n     ((\\<lambda>s. True) \\<and>*\n      (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n      b}\n       x ::= a { Q}\n 5. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 6. \\<And>P C Q F.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* F} C\n                         { Q \\<and>* F}\n 7. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 8. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 9. \\<And>P c Q P' k Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n        \\<And>s n. P' (s, n) \\<Longrightarrow> P (s, k * n);\n        \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n div k);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P'} c { Q'}\n 10. \\<And>P m C Q n.\n        \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n        { Q \\<and>* $ n};\n         \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n         n \\<le> m\\<rbrakk>\n        \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                          C { Q}\nA total of 15 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n  P' (?s, ?n) \\<Longrightarrow> P (?s, k1 * ?n)\n  Q (?s, ?n) \\<Longrightarrow> Q' (?s, ?n div k1)\n  0 < k1\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}", "obtain k where p: \"\\<forall>ps n. P (ps, n) \\<longrightarrow> (\\<exists>ps' ps'' m e e'. ((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'')  \\<and> ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps',e))\" and gt0: \"k>0\""], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n  P' (?s, ?n) \\<Longrightarrow> P (?s, k1 * ?n)\n  Q (?s, ?n) \\<Longrightarrow> Q' (?s, ?n div k1)\n  0 < k1\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>\\<forall>ps n.\n                    P (ps, n) \\<longrightarrow>\n                    (\\<exists>ps' ps'' m e e'.\n                        (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                          ps'' \\<and>\n                        ps' ## ps'' \\<and>\n                        k * n = k * e + e' + m \\<and> Q (ps', e));\n         0 < k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding hoare3o_valid_def"], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n  P' (?s, ?n) \\<Longrightarrow> P (?s, k1 * ?n)\n  Q (?s, ?n) \\<Longrightarrow> Q' (?s, ?n div k1)\n  0 < k1\n  \\<exists>k>0.\n     \\<forall>ps n.\n        P (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>\\<forall>ps n.\n                    P (ps, n) \\<longrightarrow>\n                    (\\<exists>ps' ps'' m e e'.\n                        (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                          ps'' \\<and>\n                        ps' ## ps'' \\<and>\n                        k * n = k * e + e' + m \\<and> Q (ps', e));\n         0 < k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))\n  0 < k\n\ngoal (15 subgoals):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n 2. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 3. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 4. \\<And>x Q a.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>b.\n  \\<exists>xa.\n     ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n      (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>* $ 1)\n      b \\<and>\n     ((\\<lambda>s. True) \\<and>*\n      (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n      b}\n       x ::= a { Q}\n 5. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 6. \\<And>P C Q F.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* F} C\n                         { Q \\<and>* F}\n 7. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 8. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 9. \\<And>P c Q P' k Q'.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n        \\<And>s n. P' (s, n) \\<Longrightarrow> P (s, k * n);\n        \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n div k);\n        0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P'} c { Q'}\n 10. \\<And>P m C Q n.\n        \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n        { Q \\<and>* $ n};\n         \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n         n \\<le> m\\<rbrakk>\n        \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                          C { Q}\nA total of 15 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P'} c { Q'}", "unfolding hoare3o_valid_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          P' (ps, n) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q' (ps', e))", "apply(rule exI[where x=\"k*k1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k * k1 \\<and>\n    (\\<forall>ps n.\n        P' (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)))", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 < k * k1\n 2. \\<And>ps n.\n       P' (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "using gt0 conseq(4)"], ["proof (prove)\nusing this:\n  0 < k\n  0 < k1\n\ngoal (2 subgoals):\n 1. 0 < k * k1\n 2. \\<And>ps n.\n       P' (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P' (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P' (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "fix ps n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P' (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "assume \"P' (ps,n)\""], ["proof (state)\nthis:\n  P' (ps, n)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P' (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "with conseq(2)"], ["proof (chain)\npicking this:\n  P' (?s, ?n) \\<Longrightarrow> P (?s, k1 * ?n)\n  P' (ps, n)", "have \"P (ps, k1*n)\""], ["proof (prove)\nusing this:\n  P' (?s, ?n) \\<Longrightarrow> P (?s, k1 * ?n)\n  P' (ps, n)\n\ngoal (1 subgoal):\n 1. P (ps, k1 * n)", "by simp"], ["proof (state)\nthis:\n  P (ps, k1 * n)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P' (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "with p"], ["proof (chain)\npicking this:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))\n  P (ps, k1 * n)", "obtain ps' ps'' m e e' where pB: \"(c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\" and orth: \"ps' ## ps''\"\n          and m: \"k * (k1 * n) = k*e + e' + m\" and Q:  \"Q (ps', e)\""], ["proof (prove)\nusing this:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))\n  P (ps, k1 * n)\n\ngoal (1 subgoal):\n 1. (\\<And>m ps' ps'' e e'.\n        \\<lbrakk>(c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'';\n         ps' ## ps''; k * (k1 * n) = k * e + e' + m; Q (ps', e)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\n  ps' ## ps''\n  k * (k1 * n) = k * e + e' + m\n  Q (ps', e)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P' (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "from Q conseq(3)"], ["proof (chain)\npicking this:\n  Q (ps', e)\n  Q (?s, ?n) \\<Longrightarrow> Q' (?s, ?n div k1)", "have Q': \"Q' (ps', e div k1)\""], ["proof (prove)\nusing this:\n  Q (ps', e)\n  Q (?s, ?n) \\<Longrightarrow> Q' (?s, ?n div k1)\n\ngoal (1 subgoal):\n 1. Q' (ps', e div k1)", "by auto"], ["proof (state)\nthis:\n  Q' (ps', e div k1)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P' (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "have \"k * k1 * n = k*e + e' + m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * k1 * n = k * e + e' + m", "using m"], ["proof (prove)\nusing this:\n  k * (k1 * n) = k * e + e' + m\n\ngoal (1 subgoal):\n 1. k * k1 * n = k * e + e' + m", "by auto"], ["proof (state)\nthis:\n  k * k1 * n = k * e + e' + m\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P' (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "also"], ["proof (state)\nthis:\n  k * k1 * n = k * e + e' + m\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P' (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "have \"\\<dots> = k*(k1 * (e div k1) + e mod k1) + e' + m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * e + e' + m = k * (k1 * (e div k1) + e mod k1) + e' + m", "using mod_mult_div_eq"], ["proof (prove)\nusing this:\n  ?a mod ?b + ?b * (?a div ?b) = ?a\n\ngoal (1 subgoal):\n 1. k * e + e' + m = k * (k1 * (e div k1) + e mod k1) + e' + m", "by simp"], ["proof (state)\nthis:\n  k * e + e' + m = k * (k1 * (e div k1) + e mod k1) + e' + m\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P' (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "also"], ["proof (state)\nthis:\n  k * e + e' + m = k * (k1 * (e div k1) + e mod k1) + e' + m\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P' (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "have \"\\<dots> = k*k1*(e div k1) + (k*(e mod k1) + e') + m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * (k1 * (e div k1) + e mod k1) + e' + m =\n    k * k1 * (e div k1) + (k * (e mod k1) + e') + m", "by (metis add.assoc distrib_left mult.assoc)"], ["proof (state)\nthis:\n  k * (k1 * (e div k1) + e mod k1) + e' + m =\n  k * k1 * (e div k1) + (k * (e mod k1) + e') + m\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P' (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "finally"], ["proof (chain)\npicking this:\n  k * k1 * n = k * k1 * (e div k1) + (k * (e mod k1) + e') + m", "have \"k * k1 * n = k * k1 * (e div k1) + (k * (e mod k1) + e') + m\""], ["proof (prove)\nusing this:\n  k * k1 * n = k * k1 * (e div k1) + (k * (e mod k1) + e') + m\n\ngoal (1 subgoal):\n 1. k * k1 * n = k * k1 * (e div k1) + (k * (e mod k1) + e') + m", "."], ["proof (state)\nthis:\n  k * k1 * n = k * k1 * (e div k1) + (k * (e mod k1) + e') + m\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P' (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "show \"\\<exists>ps' ps'' m e e'. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m e e'.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "apply(rule exI[where x=\"ps'\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps'' m e e'.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "apply(rule exI[where x=\"ps''\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m e e'.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "apply(rule exI[where x=m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e e'.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)", "apply(rule exI[where x=\"e div k1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e'.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * k1 * n = k * k1 * (e div k1) + e' + m \\<and> Q' (ps', e div k1)", "apply(rule exI[where x=\"k * (e mod k1) + e'\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n    ps' ## ps'' \\<and>\n    k * k1 * n = k * k1 * (e div k1) + (k * (e mod k1) + e') + m \\<and>\n    Q' (ps', e div k1)", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\n 2. ps' ## ps''\n 3. k * k1 * n = k * k1 * (e div k1) + (k * (e mod k1) + e') + m\n 4. Q' (ps', e div k1)", "apply fact"], ["proof (prove)\ngoal (3 subgoals):\n 1. ps' ## ps''\n 2. k * k1 * n = k * k1 * (e div k1) + (k * (e mod k1) + e') + m\n 3. Q' (ps', e div k1)", "apply fact"], ["proof (prove)\ngoal (2 subgoals):\n 1. k * k1 * n = k * k1 * (e div k1) + (k * (e mod k1) + e') + m\n 2. Q' (ps', e div k1)", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. Q' (ps', e div k1)", "apply fact"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m e e'.\n     (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> k * k1 * n = k * k1 * e + e' + m \\<and> Q' (ps', e)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P'} c { Q'}\n\ngoal (14 subgoals):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n 2. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 3. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 4. \\<And>x Q a.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>b.\n  \\<exists>xa.\n     ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n      (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>* $ 1)\n      b \\<and>\n     ((\\<lambda>s. True) \\<and>*\n      (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n      b}\n       x ::= a { Q}\n 5. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 6. \\<And>P C Q F.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* F} C\n                         { Q \\<and>* F}\n 7. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 8. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 9. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 10. \\<And>x ds v.\n        \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n        x ::= N v { x \\<hookrightarrow> v}\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n 2. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 3. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 4. \\<And>x Q a.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>b.\n  \\<exists>xa.\n     ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n      (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>* $ 1)\n      b \\<and>\n     ((\\<lambda>s. True) \\<and>*\n      (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n      b}\n       x ::= a { Q}\n 5. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 6. \\<And>P C Q F.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* F} C\n                         { Q \\<and>* F}\n 7. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 8. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 9. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 10. \\<And>x ds v.\n        \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n        x ::= N v { x \\<hookrightarrow> v}\nA total of 14 subgoals...", "case (Frame P c Q F)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n\ngoal (14 subgoals):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n 2. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 3. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 4. \\<And>x Q a.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>b.\n  \\<exists>xa.\n     ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n      (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>* $ 1)\n      b \\<and>\n     ((\\<lambda>s. True) \\<and>*\n      (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n      b}\n       x ::= a { Q}\n 5. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 6. \\<And>P C Q F.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* F} C\n                         { Q \\<and>* F}\n 7. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 8. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 9. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 10. \\<And>x ds v.\n        \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n        x ::= N v { x \\<hookrightarrow> v}\nA total of 14 subgoals...", "from Frame(2)[unfolded hoare3o_valid_def]"], ["proof (chain)\npicking this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        P (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))", "obtain k\n    where hyp: \"\\<forall>ps n. P (ps, n) \\<longrightarrow> (\\<exists>ps' ps'' m e e'. ((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'')  \\<and> ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps',e))\"\n        and k: \"k>0\""], ["proof (prove)\nusing this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        P (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>\\<forall>ps n.\n                    P (ps, n) \\<longrightarrow>\n                    (\\<exists>ps' ps'' m e e'.\n                        (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                          ps'' \\<and>\n                        ps' ## ps'' \\<and>\n                        k * n = k * e + e' + m \\<and> Q (ps', e));\n         0 < k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding hoare3o_valid_def"], ["proof (prove)\nusing this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        P (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>\\<forall>ps n.\n                    P (ps, n) \\<longrightarrow>\n                    (\\<exists>ps' ps'' m e e'.\n                        (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                          ps'' \\<and>\n                        ps' ## ps'' \\<and>\n                        k * n = k * e + e' + m \\<and> Q (ps', e));\n         0 < k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))\n  0 < k\n\ngoal (14 subgoals):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n 2. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 3. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 4. \\<And>x Q a.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>b.\n  \\<exists>xa.\n     ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n      (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>* $ 1)\n      b \\<and>\n     ((\\<lambda>s. True) \\<and>*\n      (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n      b}\n       x ::= a { Q}\n 5. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 6. \\<And>P C Q F.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* F} C\n                         { Q \\<and>* F}\n 7. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 8. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 9. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 10. \\<And>x ds v.\n        \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n        x ::= N v { x \\<hookrightarrow> v}\nA total of 14 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* F} c { Q \\<and>* F}", "unfolding hoare3o_valid_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          (P \\<and>* F) (ps, n) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and>\n              k * n = k * e + e' + m \\<and> (Q \\<and>* F) (ps', e))", "apply(rule exI[where x=k])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<and>\n    (\\<forall>ps n.\n        (P \\<and>* F) (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * n = k * e + e' + m \\<and> (Q \\<and>* F) (ps', e)))", "using k"], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. 0 < k \\<and>\n    (\\<forall>ps n.\n        (P \\<and>* F) (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * n = k * e + e' + m \\<and> (Q \\<and>* F) (ps', e)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow>\n    \\<forall>ps n.\n       (P \\<and>* F) (ps, n) \\<longrightarrow>\n       (\\<exists>ps' ps'' m.\n           (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n           ps' ## ps'' \\<and>\n           (\\<exists>e.\n               (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n               (Q \\<and>* F) (ps', e)))", "proof(safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k; (P \\<and>* F) (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n                                (Q \\<and>* F) (ps', e))", "fix ps n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k; (P \\<and>* F) (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n                                (Q \\<and>* F) (ps', e))", "assume \"(P \\<and>* F) (ps, n)\""], ["proof (state)\nthis:\n  (P \\<and>* F) (ps, n)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k; (P \\<and>* F) (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n                                (Q \\<and>* F) (ps', e))", "then"], ["proof (chain)\npicking this:\n  (P \\<and>* F) (ps, n)", "obtain ps1 ps2 where orth: \"ps1 ## ps2\" and add: \"(ps, n) = ps1 + ps2\"\n                  and P: \"P ps1\" and F: \"F ps2\""], ["proof (prove)\nusing this:\n  (P \\<and>* F) (ps, n)\n\ngoal (1 subgoal):\n 1. (\\<And>ps1 ps2.\n        \\<lbrakk>ps1 ## ps2; (ps, n) = ps1 + ps2; P ps1; F ps2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding sep_conj_def"], ["proof (prove)\nusing this:\n  \\<exists>x y. x ## y \\<and> (ps, n) = x + y \\<and> P x \\<and> F y\n\ngoal (1 subgoal):\n 1. (\\<And>ps1 ps2.\n        \\<lbrakk>ps1 ## ps2; (ps, n) = ps1 + ps2; P ps1; F ps2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ps1 ## ps2\n  (ps, n) = ps1 + ps2\n  P ps1\n  F ps2\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k; (P \\<and>* F) (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n                                (Q \\<and>* F) (ps', e))", "from hyp P"], ["proof (chain)\npicking this:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))\n  P ps1", "have \"(\\<exists>ps' ps'' m e e'. ((c,fst ps1) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'')  \\<and> ps' ## ps'' \\<and> k * snd ps1 = k * e + e' + m \\<and> Q (ps',e))\""], ["proof (prove)\nusing this:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))\n  P ps1\n\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m e e'.\n       (c, fst ps1) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and> k * snd ps1 = k * e + e' + m \\<and> Q (ps', e)", "by simp"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m e e'.\n     (c, fst ps1) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> k * snd ps1 = k * e + e' + m \\<and> Q (ps', e)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k; (P \\<and>* F) (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n                                (Q \\<and>* F) (ps', e))", "then"], ["proof (chain)\npicking this:\n  \\<exists>ps' ps'' m e e'.\n     (c, fst ps1) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> k * snd ps1 = k * e + e' + m \\<and> Q (ps', e)", "obtain ps' ps'' m e e' where a: \"(c, fst ps1) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\" and orth2[simp]: \"ps' ## ps''\"\n              and m: \"k * snd ps1 = k * e + e' + m\"  and Q: \"Q (ps', e)\""], ["proof (prove)\nusing this:\n  \\<exists>ps' ps'' m e e'.\n     (c, fst ps1) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> k * snd ps1 = k * e + e' + m \\<and> Q (ps', e)\n\ngoal (1 subgoal):\n 1. (\\<And>m ps' ps'' e e'.\n        \\<lbrakk>(c, fst ps1) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'';\n         ps' ## ps''; k * snd ps1 = k * e + e' + m; Q (ps', e)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (c, fst ps1) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\n  ps' ## ps''\n  k * snd ps1 = k * e + e' + m\n  Q (ps', e)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k; (P \\<and>* F) (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n                                (Q \\<and>* F) (ps', e))", "from big_step_t3_post_dom_conv[OF a]"], ["proof (chain)\npicking this:\n  dom (ps' + ps'') = dom (fst ps1)", "have dom: \"dom (ps' + ps'') = dom (fst ps1)\""], ["proof (prove)\nusing this:\n  dom (ps' + ps'') = dom (fst ps1)\n\ngoal (1 subgoal):\n 1. dom (ps' + ps'') = dom (fst ps1)", "by auto"], ["proof (state)\nthis:\n  dom (ps' + ps'') = dom (fst ps1)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k; (P \\<and>* F) (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n                                (Q \\<and>* F) (ps', e))", "from add"], ["proof (chain)\npicking this:\n  (ps, n) = ps1 + ps2", "have g: \"ps = fst ps1 + fst ps2\" and h: \"n = snd ps1 + snd ps2\""], ["proof (prove)\nusing this:\n  (ps, n) = ps1 + ps2\n\ngoal (1 subgoal):\n 1. ps = fst ps1 + fst ps2 &&& n = snd ps1 + snd ps2", "by (auto simp add: plus_prod_def)"], ["proof (state)\nthis:\n  ps = fst ps1 + fst ps2\n  n = snd ps1 + snd ps2\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k; (P \\<and>* F) (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n                                (Q \\<and>* F) (ps', e))", "from orth"], ["proof (chain)\npicking this:\n  ps1 ## ps2", "have [simp]: \"fst ps2 ## ps'\" \"fst ps2 ## ps''\""], ["proof (prove)\nusing this:\n  ps1 ## ps2\n\ngoal (1 subgoal):\n 1. fst ps2 ## ps' &&& fst ps2 ## ps''", "apply (metis dom map_convs(1) orth2 sep_disj_addD1 sep_disj_commuteI sep_disj_fun_def sep_disj_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst ps2 ## ps''", "by (metis dom map_convs(1) orth orth2 sep_add_commute sep_disj_addD1 sep_disj_commuteI sep_disj_fun_def sep_disj_prod_def)"], ["proof (state)\nthis:\n  fst ps2 ## ps'\n  fst ps2 ## ps''\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k; (P \\<and>* F) (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n                                (Q \\<and>* F) (ps', e))", "then"], ["proof (chain)\npicking this:\n  fst ps2 ## ps'\n  fst ps2 ## ps''", "have e: \"ps' ## fst ps2\""], ["proof (prove)\nusing this:\n  fst ps2 ## ps'\n  fst ps2 ## ps''\n\ngoal (1 subgoal):\n 1. ps' ## fst ps2", "unfolding sep_disj_fun_def"], ["proof (prove)\nusing this:\n  domain (fst ps2) \\<inter> domain ps' = {}\n  domain (fst ps2) \\<inter> domain ps'' = {}\n\ngoal (1 subgoal):\n 1. domain ps' \\<inter> domain (fst ps2) = {}", "using dom"], ["proof (prove)\nusing this:\n  domain (fst ps2) \\<inter> domain ps' = {}\n  domain (fst ps2) \\<inter> domain ps'' = {}\n  dom (ps' + ps'') = dom (fst ps1)\n\ngoal (1 subgoal):\n 1. domain ps' \\<inter> domain (fst ps2) = {}", "unfolding domain_conv"], ["proof (prove)\nusing this:\n  dom (fst ps2) \\<inter> dom ps' = {}\n  dom (fst ps2) \\<inter> dom ps'' = {}\n  dom (ps' + ps'') = dom (fst ps1)\n\ngoal (1 subgoal):\n 1. dom ps' \\<inter> dom (fst ps2) = {}", "by blast"], ["proof (state)\nthis:\n  ps' ## fst ps2\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k; (P \\<and>* F) (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n                                (Q \\<and>* F) (ps', e))", "have 3: \"(Q \\<and>* F) (ps'+fst ps2, e+snd ps2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Q \\<and>* F) (ps' + fst ps2, e + snd ps2)", "unfolding sep_conj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x y.\n       x ## y \\<and>\n       (ps' + fst ps2, e + snd ps2) = x + y \\<and> Q x \\<and> F y", "apply(rule exI[where x=\"(ps',e)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y.\n       (ps', e) ## y \\<and>\n       (ps' + fst ps2, e + snd ps2) = (ps', e) + y \\<and>\n       Q (ps', e) \\<and> F y", "apply(rule exI[where x=\"ps2\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ps', e) ## ps2 \\<and>\n    (ps' + fst ps2, e + snd ps2) = (ps', e) + ps2 \\<and>\n    Q (ps', e) \\<and> F ps2", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. (ps', e) ## ps2\n 2. (ps' + fst ps2, e + snd ps2) = (ps', e) + ps2\n 3. Q (ps', e)\n 4. F ps2", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ps', e) ## ps2", "using orth"], ["proof (prove)\nusing this:\n  ps1 ## ps2\n\ngoal (1 subgoal):\n 1. (ps', e) ## ps2", "unfolding sep_disj_prod_def"], ["proof (prove)\nusing this:\n  fst ps1 ## fst ps2 \\<and> snd ps1 ## snd ps2\n\ngoal (1 subgoal):\n 1. fst (ps', e) ## fst ps2 \\<and> snd (ps', e) ## snd ps2", "apply (auto simp: sep_disj_nat_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst ps1 ## fst ps2 \\<Longrightarrow> ps' ## fst ps2", "apply(rule e)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (3 subgoals):\n 1. (ps' + fst ps2, e + snd ps2) = (ps', e) + ps2\n 2. Q (ps', e)\n 3. F ps2", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ps' + fst ps2, e + snd ps2) = (ps', e) + ps2", "unfolding plus_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ps' + fst ps2, e + snd ps2) =\n    (fst (ps', e) + fst ps2, snd (ps', e) + snd ps2)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (2 subgoals):\n 1. Q (ps', e)\n 2. F ps2", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. F ps2", "apply fact"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (Q \\<and>* F) (ps' + fst ps2, e + snd ps2)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k; (P \\<and>* F) (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n                                (Q \\<and>* F) (ps', e))", "show \"\\<exists>ps' ps'' m. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> (\\<exists>e. (\\<exists>e'. k * n = k * e + e' + m) \\<and> (Q \\<and>* F) (ps', e))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n           (Q \\<and>* F) (ps', e))", "apply(rule exI[where x=\"ps'+fst ps2\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps'' m.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + fst ps2 + ps'' \\<and>\n       ps' + fst ps2 ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n           (Q \\<and>* F) (ps' + fst ps2, e))", "apply(rule exI[where x=\"ps''\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + fst ps2 + ps'' \\<and>\n       ps' + fst ps2 ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n           (Q \\<and>* F) (ps' + fst ps2, e))", "apply(rule exI[where x=m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + fst ps2 + ps'' \\<and>\n    ps' + fst ps2 ## ps'' \\<and>\n    (\\<exists>e.\n        (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n        (Q \\<and>* F) (ps' + fst ps2, e))", "proof safe"], ["proof (state)\ngoal (3 subgoals):\n 1. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + fst ps2 + ps''\n 2. ps' + fst ps2 ## ps''\n 3. \\<exists>e.\n       (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n       (Q \\<and>* F) (ps' + fst ps2, e)", "show \"(c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + fst ps2 + ps''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + fst ps2 + ps''", "apply(rule Framer2[OF _ _ g])"], ["proof (prove)\ngoal (3 subgoals):\n 1. (c, fst ps1) \\<Rightarrow>\\<^sub>A m \\<Down> ?ps1'\n 2. fst ps1 ## fst ps2\n 3. ps' + fst ps2 + ps'' = ?ps1' + fst ps2", "apply (fact a)"], ["proof (prove)\ngoal (2 subgoals):\n 1. fst ps1 ## fst ps2\n 2. ps' + fst ps2 + ps'' = ps' + ps'' + fst ps2", "using orth"], ["proof (prove)\nusing this:\n  ps1 ## ps2\n\ngoal (2 subgoals):\n 1. fst ps1 ## fst ps2\n 2. ps' + fst ps2 + ps'' = ps' + ps'' + fst ps2", "apply (auto simp: sep_disj_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst ps1 ## fst ps2 \\<Longrightarrow>\n    ps' + fst ps2 + ps'' = ps' + ps'' + fst ps2", "by (metis \\<open>fst ps2 ## ps''\\<close> \\<open>fst ps2 ## ps'\\<close> orth2 sep_add_assoc sep_add_commute sep_disj_commuteI)"], ["proof (state)\nthis:\n  (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + fst ps2 + ps''\n\ngoal (2 subgoals):\n 1. ps' + fst ps2 ## ps''\n 2. \\<exists>e.\n       (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n       (Q \\<and>* F) (ps' + fst ps2, e)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. ps' + fst ps2 ## ps''\n 2. \\<exists>e.\n       (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n       (Q \\<and>* F) (ps' + fst ps2, e)", "show \"ps' + fst ps2 ## ps''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ps' + fst ps2 ## ps''", "by (metis dom map_convs(1) orth orth2 sep_add_disjI1 sep_disj_fun_def sep_disj_prod_def)"], ["proof (state)\nthis:\n  ps' + fst ps2 ## ps''\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n       (Q \\<and>* F) (ps' + fst ps2, e)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>e.\n       (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n       (Q \\<and>* F) (ps' + fst ps2, e)", "show \"\\<exists>e. (\\<exists>e'. k * n = k * e + e' + m) \\<and> (Q \\<and>* F) (ps' + fst ps2, e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e.\n       (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n       (Q \\<and>* F) (ps' + fst ps2, e)", "apply(rule exI[where x=\"e+snd ps2\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>e'. k * n = k * (e + snd ps2) + e' + m) \\<and>\n    (Q \\<and>* F) (ps' + fst ps2, e + snd ps2)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>e'. k * n = k * (e + snd ps2) + e' + m\n 2. (Q \\<and>* F) (ps' + fst ps2, e + snd ps2)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e'. k * n = k * (e + snd ps2) + e' + m", "proof(rule exI[where x=e'])"], ["proof (state)\ngoal (1 subgoal):\n 1. k * n = k * (e + snd ps2) + e' + m", "have \"k * n = k * snd ps1 + k * snd ps2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * n = k * snd ps1 + k * snd ps2", "unfolding h"], ["proof (prove)\ngoal (1 subgoal):\n 1. k * (snd ps1 + snd ps2) = k * snd ps1 + k * snd ps2", "by (simp add: distrib_left)"], ["proof (state)\nthis:\n  k * n = k * snd ps1 + k * snd ps2\n\ngoal (1 subgoal):\n 1. k * n = k * (e + snd ps2) + e' + m", "also"], ["proof (state)\nthis:\n  k * n = k * snd ps1 + k * snd ps2\n\ngoal (1 subgoal):\n 1. k * n = k * (e + snd ps2) + e' + m", "have \"\\<dots> =  k * e + e' + m + k* snd ps2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * snd ps1 + k * snd ps2 = k * e + e' + m + k * snd ps2", "unfolding m"], ["proof (prove)\ngoal (1 subgoal):\n 1. k * e + e' + m + k * snd ps2 = k * e + e' + m + k * snd ps2", "by auto"], ["proof (state)\nthis:\n  k * snd ps1 + k * snd ps2 = k * e + e' + m + k * snd ps2\n\ngoal (1 subgoal):\n 1. k * n = k * (e + snd ps2) + e' + m", "finally"], ["proof (chain)\npicking this:\n  k * n = k * e + e' + m + k * snd ps2", "show \"k * n = k * (e + snd ps2) + e' + m\""], ["proof (prove)\nusing this:\n  k * n = k * e + e' + m + k * snd ps2\n\ngoal (1 subgoal):\n 1. k * n = k * (e + snd ps2) + e' + m", "by algebra"], ["proof (state)\nthis:\n  k * n = k * (e + snd ps2) + e' + m\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Q \\<and>* F) (ps' + fst ps2, e + snd ps2)", "apply fact"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>e.\n     (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n     (Q \\<and>* F) (ps' + fst ps2, e)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m.\n     (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and>\n     (\\<exists>e.\n         (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n         (Q \\<and>* F) (ps', e))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* F} c { Q \\<and>* F}\n\ngoal (13 subgoals):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n 2. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 3. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 4. \\<And>x Q a.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>b.\n  \\<exists>xa.\n     ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n      (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>* $ 1)\n      b \\<and>\n     ((\\<lambda>s. True) \\<and>*\n      (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n      b}\n       x ::= a { Q}\n 5. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 6. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 7. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 8. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 9. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 10. \\<And>P a v x Q'.\n        \\<lbrakk>symeval P a v;\n         \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n         \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n        \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n 2. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 3. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 4. \\<And>x Q a.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>b.\n  \\<exists>xa.\n     ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n      (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>* $ 1)\n      b \\<and>\n     ((\\<lambda>s. True) \\<and>*\n      (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n      b}\n       x ::= a { Q}\n 5. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 6. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 7. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 8. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 9. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 10. \\<And>P a v x Q'.\n        \\<lbrakk>symeval P a v;\n         \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n         \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n        \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\nA total of 13 subgoals...", "case (False c Q)"], ["proof (state)\nthis:\n  \n\ngoal (13 subgoals):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n 2. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 3. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 4. \\<And>x Q a.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>b.\n  \\<exists>xa.\n     ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n      (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>* $ 1)\n      b \\<and>\n     ((\\<lambda>s. True) \\<and>*\n      (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n      b}\n       x ::= a { Q}\n 5. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 6. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 7. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 8. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 9. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 10. \\<And>P a v x Q'.\n        \\<lbrakk>symeval P a v;\n         \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n         \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n        \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\nA total of 13 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n                                     case a of (ps, n) \\<Rightarrow> False}\n    c { Q}", "by (auto simp: hoare3o_valid_def)"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n                                   case a of (ps, n) \\<Rightarrow> False}\n  c { Q}\n\ngoal (12 subgoals):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n 2. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 3. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 4. \\<And>x Q a.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>b.\n  \\<exists>xa.\n     ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n      (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>* $ 1)\n      b \\<and>\n     ((\\<lambda>s. True) \\<and>*\n      (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n      b}\n       x ::= a { Q}\n 5. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 6. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 7. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 8. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 9. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 10. \\<And>P a v x Q'.\n        \\<lbrakk>symeval P a v;\n         \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n         \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n        \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n 2. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 3. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 4. \\<And>x Q a.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>b.\n  \\<exists>xa.\n     ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n      (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>* $ 1)\n      b \\<and>\n     ((\\<lambda>s. True) \\<and>*\n      (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n      b}\n       x ::= a { Q}\n 5. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 6. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 7. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 8. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 9. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 10. \\<And>P a v x Q'.\n        \\<lbrakk>symeval P a v;\n         \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n         \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n        \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\nA total of 12 subgoals...", "case (Assign2 x Q a)"], ["proof (state)\nthis:\n  \n\ngoal (12 subgoals):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n 2. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 3. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 4. \\<And>x Q a.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>b.\n  \\<exists>xa.\n     ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n      (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>* $ 1)\n      b \\<and>\n     ((\\<lambda>s. True) \\<and>*\n      (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n      b}\n       x ::= a { Q}\n 5. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 6. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 7. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 8. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 9. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 10. \\<And>P a v x Q'.\n        \\<lbrakk>symeval P a v;\n         \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n         \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n        \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\nA total of 12 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>b.\n                                     \\<exists>xa.\n  ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n   (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>* $ 1)\n   b \\<and>\n  ((\\<lambda>s. True) \\<and>*\n   (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n   b}\n    x ::= a { Q}", "unfolding hoare3o_valid_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          (\\<exists>xa.\n              ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n               (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>* $ 1)\n               (ps, n) \\<and>\n              ((\\<lambda>s. True) \\<and>*\n               (\\<lambda>(ps, n).\n                   vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n               (ps, n)) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (x ::= a,\n               ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))", "apply (rule exI[where x=1], safe)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>* $ 1)\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            1 * n = 1 * e + e' + m \\<and> Q (ps', e)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>*\n                 $ (Suc 0))\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. n = e + e' + m) \\<and>\n                                Q (ps', e))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>*\n                 $ (Suc 0))\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. n = e + e' + m) \\<and>\n                                Q (ps', e))", "fix ps n v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>*\n                 $ (Suc 0))\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. n = e + e' + m) \\<and>\n                                Q (ps', e))", "assume A: \"((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>* (x \\<hookrightarrow> v \\<longrightarrow>* Q) \\<and>* $ (Suc 0)) (ps, n)\""], ["proof (state)\nthis:\n  ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n   (x \\<hookrightarrow> v \\<longrightarrow>* Q) \\<and>* $ (Suc 0))\n   (ps, n)\n\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>*\n                 $ (Suc 0))\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. n = e + e' + m) \\<and>\n                                Q (ps', e))", "assume B: \"((\\<lambda>s. True) \\<and>* (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = v)) (ps, n)\""], ["proof (state)\nthis:\n  ((\\<lambda>s. True) \\<and>*\n   (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = v))\n   (ps, n)\n\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>*\n                 $ (Suc 0))\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. n = e + e' + m) \\<and>\n                                Q (ps', e))", "from A"], ["proof (chain)\npicking this:\n  ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n   (x \\<hookrightarrow> v \\<longrightarrow>* Q) \\<and>* $ (Suc 0))\n   (ps, n)", "obtain ps1 ps2 n1 n2 v' where  \"ps1 ## ps2\" and add1: \"ps = ps1 + ps2\" and n: \"n = n1 + n2\" and\n         1: \"(\\<exists>xaa. (x \\<hookrightarrow> xaa) (ps1,n1))\"\n         and 2:  \"((x \\<hookrightarrow> v \\<longrightarrow>* Q) \\<and>* $ (Suc 0)) (ps2,n2)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n   (x \\<hookrightarrow> v \\<longrightarrow>* Q) \\<and>* $ (Suc 0))\n   (ps, n)\n\ngoal (1 subgoal):\n 1. (\\<And>ps1 ps2 n1 n2.\n        \\<lbrakk>ps1 ## ps2; ps = ps1 + ps2; n = n1 + n2;\n         \\<exists>xaa. (x \\<hookrightarrow> xaa) (ps1, n1);\n         ((x \\<hookrightarrow> v \\<longrightarrow>* Q) \\<and>* $ (Suc 0))\n          (ps2, n2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding sep_conj_def"], ["proof (prove)\nusing this:\n  \\<exists>xa y.\n     xa ## y \\<and>\n     (ps, n) = xa + y \\<and>\n     (\\<exists>xaa. (x \\<hookrightarrow> xaa) xa) \\<and>\n     (\\<exists>xa ya.\n         xa ## ya \\<and>\n         y = xa + ya \\<and>\n         (x \\<hookrightarrow> v \\<longrightarrow>* Q) xa \\<and>\n         $ (Suc 0) ya)\n\ngoal (1 subgoal):\n 1. (\\<And>ps1 ps2 n1 n2.\n        \\<lbrakk>ps1 ## ps2; ps = ps1 + ps2; n = n1 + n2;\n         \\<exists>xaa. (x \\<hookrightarrow> xaa) (ps1, n1);\n         \\<exists>xa y.\n            xa ## y \\<and>\n            (ps2, n2) = xa + y \\<and>\n            (x \\<hookrightarrow> v \\<longrightarrow>* Q) xa \\<and>\n            $ (Suc 0) y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  ps1 ## ps2\n  ps = ps1 + ps2\n  n = n1 + n2\n  \\<exists>xaa. (x \\<hookrightarrow> xaa) (ps1, n1)\n  ((x \\<hookrightarrow> v \\<longrightarrow>* Q) \\<and>* $ (Suc 0)) (ps2, n2)\n\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>*\n                 $ (Suc 0))\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. n = e + e' + m) \\<and>\n                                Q (ps', e))", "from 2"], ["proof (chain)\npicking this:\n  ((x \\<hookrightarrow> v \\<longrightarrow>* Q) \\<and>* $ (Suc 0)) (ps2, n2)", "obtain ps2a ps2b n2a n2b where \"ps2a ## ps2b\" and add2: \"ps2 = ps2a + ps2b\" and n2: \"n2 = n2a + n2b\"\n        and Q: \"(x \\<hookrightarrow> v \\<longrightarrow>* Q) (ps2a,n2a)\" and ps2b: \"ps2b=0\" and n2b: \"n2b=1\""], ["proof (prove)\nusing this:\n  ((x \\<hookrightarrow> v \\<longrightarrow>* Q) \\<and>* $ (Suc 0)) (ps2, n2)\n\ngoal (1 subgoal):\n 1. (\\<And>ps2a ps2b n2a n2b.\n        \\<lbrakk>ps2a ## ps2b; ps2 = ps2a + ps2b; n2 = n2a + n2b;\n         (x \\<hookrightarrow> v \\<longrightarrow>* Q) (ps2a, n2a); ps2b = 0;\n         n2b = 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dollar_def sep_conj_def"], ["proof (prove)\nusing this:\n  \\<exists>xa y.\n     xa ## y \\<and>\n     (ps2, n2) = xa + y \\<and>\n     (x \\<hookrightarrow> v \\<longrightarrow>* Q) xa \\<and>\n     (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = Suc 0)\n\ngoal (1 subgoal):\n 1. (\\<And>ps2a ps2b n2a n2b.\n        \\<lbrakk>ps2a ## ps2b; ps2 = ps2a + ps2b; n2 = n2a + n2b;\n         (x \\<hookrightarrow> v \\<longrightarrow>* Q) (ps2a, n2a); ps2b = 0;\n         n2b = 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  ps2a ## ps2b\n  ps2 = ps2a + ps2b\n  n2 = n2a + n2b\n  (x \\<hookrightarrow> v \\<longrightarrow>* Q) (ps2a, n2a)\n  ps2b = 0\n  n2b = 1\n\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>*\n                 $ (Suc 0))\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. n = e + e' + m) \\<and>\n                                Q (ps', e))", "from 1"], ["proof (chain)\npicking this:\n  \\<exists>xaa. (x \\<hookrightarrow> xaa) (ps1, n1)", "obtain v' where n1: \"n1=0\" and p: \"ps1 = ([x \\<mapsto> v']::partstate)\" \n          and x: \"x : dom ps1\""], ["proof (prove)\nusing this:\n  \\<exists>xaa. (x \\<hookrightarrow> xaa) (ps1, n1)\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        \\<lbrakk>n1 = 0; ps1 = [x \\<mapsto> v']; x \\<in> dom ps1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: pointsto_def)"], ["proof (state)\nthis:\n  n1 = 0\n  ps1 = [x \\<mapsto> v']\n  x \\<in> dom ps1\n\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>*\n                 $ (Suc 0))\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. n = e + e' + m) \\<and>\n                                Q (ps', e))", "from x add1"], ["proof (chain)\npicking this:\n  x \\<in> dom ps1\n  ps = ps1 + ps2", "have x: \"x : dom ps\""], ["proof (prove)\nusing this:\n  x \\<in> dom ps1\n  ps = ps1 + ps2\n\ngoal (1 subgoal):\n 1. x \\<in> dom ps", "by (simp add: plus_fun_conv subset_iff)"], ["proof (state)\nthis:\n  x \\<in> dom ps\n\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>*\n                 $ (Suc 0))\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. n = e + e' + m) \\<and>\n                                Q (ps', e))", "have f: \"([x \\<mapsto> v'] + ps2a)(x \\<mapsto> v) = ps2a + [x \\<mapsto> v]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([x \\<mapsto> v'] + ps2a)(x \\<mapsto> v) = ps2a + [x \\<mapsto> v]", "by (smt \\<open>\\<And>thesis. (\\<And>v'. \\<lbrakk>n1 = 0; ps1 = [x \\<mapsto> v']; x \\<in> dom ps1\\<rbrakk> \\<Longrightarrow> thesis) \\<Longrightarrow> thesis\\<close> \\<open>ps1 ## ps2\\<close> add2 disjoint_iff_not_equal dom_fun_upd domain_conv fun_upd_upd map_add_upd_left option.distinct(1) plus_fun_conv ps2b sep_add_commute sep_add_zero sep_disj_fun_def)"], ["proof (state)\nthis:\n  ([x \\<mapsto> v'] + ps2a)(x \\<mapsto> v) = ps2a + [x \\<mapsto> v]\n\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>*\n                 $ (Suc 0))\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. n = e + e' + m) \\<and>\n                                Q (ps', e))", "let ?n' = \"n2a + n1\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>*\n                 $ (Suc 0))\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. n = e + e' + m) \\<and>\n                                Q (ps', e))", "from n n2 n2b"], ["proof (chain)\npicking this:\n  n = n1 + n2\n  n2 = n2a + n2b\n  n2b = 1", "have n': \"n=1+?n'\""], ["proof (prove)\nusing this:\n  n = n1 + n2\n  n2 = n2a + n2b\n  n2b = 1\n\ngoal (1 subgoal):\n 1. n = 1 + (n2a + n1)", "by simp"], ["proof (state)\nthis:\n  n = 1 + (n2a + n1)\n\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>*\n                 $ (Suc 0))\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. n = e + e' + m) \\<and>\n                                Q (ps', e))", "have Q': \"Q (ps(x \\<mapsto> v), ?n')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q (ps(x \\<mapsto> v), n2a + n1)", "using Q n1"], ["proof (prove)\nusing this:\n  (x \\<hookrightarrow> v \\<longrightarrow>* Q) (ps2a, n2a)\n  n1 = 0\n\ngoal (1 subgoal):\n 1. Q (ps(x \\<mapsto> v), n2a + n1)", "unfolding sep_impl_def"], ["proof (prove)\nusing this:\n  \\<forall>h'.\n     (ps2a, n2a) ## h' \\<and> (x \\<hookrightarrow> v) h' \\<longrightarrow>\n     Q ((ps2a, n2a) + h')\n  n1 = 0\n\ngoal (1 subgoal):\n 1. Q (ps(x \\<mapsto> v), n2a + n1)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a b.\n                ps2a ## a \\<and>\n                (x \\<hookrightarrow> v) (a, b) \\<longrightarrow>\n                Q (ps2a + a, n2a + b);\n     n1 = 0\\<rbrakk>\n    \\<Longrightarrow> Q (ps(x \\<mapsto> v), n2a)", "unfolding pointsto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a b.\n                ps2a ## a \\<and>\n                (case (a, b) of\n                 (s, c) \\<Rightarrow>\n                   s = [x \\<mapsto> v] \\<and> c = 0) \\<longrightarrow>\n                Q (ps2a + a, n2a + b);\n     n1 = 0\\<rbrakk>\n    \\<Longrightarrow> Q (ps(x \\<mapsto> v), n2a)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n1 = 0; \\<not> ps2a ## [x \\<mapsto> v]\\<rbrakk>\n    \\<Longrightarrow> Q (ps(x \\<mapsto> v), n2a)\n 2. \\<lbrakk>n1 = 0; Q (ps2a + [x \\<mapsto> v], n2a)\\<rbrakk>\n    \\<Longrightarrow> Q (ps(x \\<mapsto> v), n2a)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n1 = 0; \\<not> ps2a ## [x \\<mapsto> v]\\<rbrakk>\n    \\<Longrightarrow> Q (ps(x \\<mapsto> v), n2a)", "by (metis \\<open>ps1 ## ps2\\<close> \\<open>ps2 = ps2a + ps2b\\<close> \\<open>ps2b = 0\\<close> dom_fun_upd domain_conv option.distinct(1) p sep_add_zero sep_disj_commute sep_disj_fun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n1 = 0; Q (ps2a + [x \\<mapsto> v], n2a)\\<rbrakk>\n    \\<Longrightarrow> Q (ps(x \\<mapsto> v), n2a)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n1 = 0; Q (ps2a + [x \\<mapsto> v], n2a)\\<rbrakk>\n    \\<Longrightarrow> Q (ps(x \\<mapsto> v), n2a)", "unfolding add1 p add2 ps2b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n1 = 0; Q (ps2a + [x \\<mapsto> v], n2a)\\<rbrakk>\n    \\<Longrightarrow> Q (([x \\<mapsto> v'] + (ps2a + 0))(x \\<mapsto> v),\n                         n2a)", "by (auto simp: f)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Q (ps(x \\<mapsto> v), n2a + n1)\n\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>*\n                 $ (Suc 0))\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. n = e + e' + m) \\<and>\n                                Q (ps', e))", "from B"], ["proof (chain)\npicking this:\n  ((\\<lambda>s. True) \\<and>*\n   (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = v))\n   (ps, n)", "obtain ps1 ps2 n1 n2 where orth: \"ps1 ## ps2\" and add: \"ps = ps2 + ps1\" and n: \"n=n1+n2\"\n          and vars: \"vars a \\<subseteq> dom ps2\" and v: \"paval a ps2 = v\""], ["proof (prove)\nusing this:\n  ((\\<lambda>s. True) \\<and>*\n   (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = v))\n   (ps, n)\n\ngoal (1 subgoal):\n 1. (\\<And>ps1 ps2 n1 n2.\n        \\<lbrakk>ps1 ## ps2; ps = ps2 + ps1; n = n1 + n2;\n         vars a \\<subseteq> dom ps2; paval a ps2 = v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding sep_conj_def"], ["proof (prove)\nusing this:\n  \\<exists>x y.\n     x ## y \\<and>\n     (ps, n) = x + y \\<and>\n     True \\<and>\n     (case y of\n      (ps, n) \\<Rightarrow> vars a \\<subseteq> dom ps \\<and> paval a ps = v)\n\ngoal (1 subgoal):\n 1. (\\<And>ps1 ps2 n1 n2.\n        \\<lbrakk>ps1 ## ps2; ps = ps2 + ps1; n = n1 + n2;\n         vars a \\<subseteq> dom ps2; paval a ps2 = v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: sep_add_ac)"], ["proof (state)\nthis:\n  ps1 ## ps2\n  ps = ps2 + ps1\n  n = n1 + n2\n  vars a \\<subseteq> dom ps2\n  paval a ps2 = v\n\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>*\n                 $ (Suc 0))\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. n = e + e' + m) \\<and>\n                                Q (ps', e))", "from vars add"], ["proof (chain)\npicking this:\n  vars a \\<subseteq> dom ps2\n  ps = ps2 + ps1", "have a: \"vars a \\<subseteq> dom ps\""], ["proof (prove)\nusing this:\n  vars a \\<subseteq> dom ps2\n  ps = ps2 + ps1\n\ngoal (1 subgoal):\n 1. vars a \\<subseteq> dom ps", "by (simp add: plus_fun_conv subset_iff)"], ["proof (state)\nthis:\n  vars a \\<subseteq> dom ps\n\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>*\n                 $ (Suc 0))\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. n = e + e' + m) \\<and>\n                                Q (ps', e))", "from a x"], ["proof (chain)\npicking this:\n  vars a \\<subseteq> dom ps\n  x \\<in> dom ps", "have \"vars a \\<union> {x} \\<subseteq> dom ps\""], ["proof (prove)\nusing this:\n  vars a \\<subseteq> dom ps\n  x \\<in> dom ps\n\ngoal (1 subgoal):\n 1. vars a \\<union> {x} \\<subseteq> dom ps", "by auto"], ["proof (state)\nthis:\n  vars a \\<union> {x} \\<subseteq> dom ps\n\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>*\n                 $ (Suc 0))\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. n = e + e' + m) \\<and>\n                                Q (ps', e))", "have \"paval a ps = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. paval a ps = v", "unfolding add"], ["proof (prove)\ngoal (1 subgoal):\n 1. paval a (ps2 + ps1) = v", "apply(subst paval_extend)"], ["proof (prove)\ngoal (3 subgoals):\n 1. ps2 ## ps1\n 2. vars a \\<subseteq> dom ps2\n 3. paval a ps2 = v", "using orth vars v"], ["proof (prove)\nusing this:\n  ps1 ## ps2\n  vars a \\<subseteq> dom ps2\n  paval a ps2 = v\n\ngoal (3 subgoals):\n 1. ps2 ## ps1\n 2. vars a \\<subseteq> dom ps2\n 3. paval a ps2 = v", "by(auto simp: sep_disj_commute)"], ["proof (state)\nthis:\n  paval a ps = v\n\ngoal (1 subgoal):\n 1. \\<And>ps n xa.\n       \\<lbrakk>((\\<lambda>s.\n                     \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n                 (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>*\n                 $ (Suc 0))\n                 (ps, n);\n        ((\\<lambda>s. True) \\<and>*\n         (\\<lambda>(ps, n).\n             vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. n = e + e' + m) \\<and>\n                                Q (ps', e))", "show \"\\<exists>ps' ps'' m. (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> (\\<exists>e. (\\<exists>e'. n = e + e' + m) \\<and> Q (ps', e))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m.\n       (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e. (\\<exists>e'. n = e + e' + m) \\<and> Q (ps', e))", "apply(rule exI[where x=\"ps(x\\<mapsto>v)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps'' m.\n       (x ::= a,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps(x \\<mapsto> v) + ps'' \\<and>\n       ps(x \\<mapsto> v) ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. n = e + e' + m) \\<and> Q (ps(x \\<mapsto> v), e))", "apply(rule exI[where x=0])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m.\n       (x ::= a,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps(x \\<mapsto> v) + 0 \\<and>\n       ps(x \\<mapsto> v) ## 0 \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. n = e + e' + m) \\<and> Q (ps(x \\<mapsto> v), e))", "apply(rule exI[where x=\"Suc 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ::= a,\n     ps) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps(x \\<mapsto> v) + 0 \\<and>\n    ps(x \\<mapsto> v) ## 0 \\<and>\n    (\\<exists>e.\n        (\\<exists>e'. n = e + e' + Suc 0) \\<and> Q (ps(x \\<mapsto> v), e))", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. (x ::= a, ps) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps(x \\<mapsto> v)\n 2. \\<exists>e.\n       (\\<exists>e'. n = Suc (e + e')) \\<and> Q (ps(x \\<mapsto> v), e)", "apply(rule big_step_t_part.Assign)"], ["proof (prove)\ngoal (4 subgoals):\n 1. vars a \\<union> {x} \\<subseteq> dom ps\n 2. paval a ps = ?v8\n 3. ps(x \\<mapsto> v) = ps(x \\<mapsto> ?v8)\n 4. \\<exists>e.\n       (\\<exists>e'. n = Suc (e + e')) \\<and> Q (ps(x \\<mapsto> v), e)", "apply fact+"], ["proof (prove)\ngoal (2 subgoals):\n 1. ps(x \\<mapsto> v) = ps(x \\<mapsto> v)\n 2. \\<exists>e.\n       (\\<exists>e'. n = Suc (e + e')) \\<and> Q (ps(x \\<mapsto> v), e)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e.\n       (\\<exists>e'. n = Suc (e + e')) \\<and> Q (ps(x \\<mapsto> v), e)", "apply(rule exI[where x=\"?n'\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>e'. n = Suc (n2a + n1__ + e')) \\<and>\n    Q (ps(x \\<mapsto> v), n2a + n1__)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>e'. n = Suc (n2a + n1__ + e')\n 2. Q (ps(x \\<mapsto> v), n2a + n1__)", "apply(rule exI[where x=0])"], ["proof (prove)\ngoal (2 subgoals):\n 1. n = Suc (n2a + n1__ + 0)\n 2. Q (ps(x \\<mapsto> v), n2a + n1__)", "using n'"], ["proof (prove)\nusing this:\n  n = 1 + (n2a + n1__)\n\ngoal (2 subgoals):\n 1. n = Suc (n2a + n1__ + 0)\n 2. Q (ps(x \\<mapsto> v), n2a + n1__)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Q (ps(x \\<mapsto> v), n2a + n1__)", "using Q'"], ["proof (prove)\nusing this:\n  Q (ps(x \\<mapsto> v), n2a + n1__)\n\ngoal (1 subgoal):\n 1. Q (ps(x \\<mapsto> v), n2a + n1__)", "by auto"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m.\n     (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and>\n     (\\<exists>e. (\\<exists>e'. n = e + e' + m) \\<and> Q (ps', e))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>b.\n                                   \\<exists>xa.\n((\\<lambda>s. \\<exists>xa. (x \\<hookrightarrow> xa) s) \\<and>*\n (x \\<hookrightarrow> xa \\<longrightarrow>* Q) \\<and>* $ 1)\n b \\<and>\n((\\<lambda>s. True) \\<and>*\n (\\<lambda>(ps, n). vars a \\<subseteq> dom ps \\<and> paval a ps = xa))\n b}\n  x ::= a { Q}\n\ngoal (11 subgoals):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n 2. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 3. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 4. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 5. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 6. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 7. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 8. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 9. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 10. \\<And>x a Q.\n        \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(ps, t).\n    x \\<in> dom ps \\<and>\n    vars a \\<subseteq> dom ps \\<and>\n    Q (ps(x \\<mapsto> paval a ps), t)) \\<and>*\n$ 1}\n        x ::= a { Q}\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n 2. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 3. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 4. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 5. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 6. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 7. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 8. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 9. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 10. \\<And>x a Q.\n        \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(ps, t).\n    x \\<in> dom ps \\<and>\n    vars a \\<subseteq> dom ps \\<and>\n    Q (ps(x \\<mapsto> paval a ps), t)) \\<and>*\n$ 1}\n        x ::= a { Q}\nA total of 11 subgoals...", "case Skip"], ["proof (state)\nthis:\n  \n\ngoal (11 subgoals):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n 2. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 3. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 4. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 5. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 6. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 7. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 8. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 9. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 10. \\<And>x a Q.\n        \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(ps, t).\n    x \\<in> dom ps \\<and>\n    vars a \\<subseteq> dom ps \\<and>\n    Q (ps(x \\<mapsto> paval a ps), t)) \\<and>*\n$ 1}\n        x ::= a { Q}\nA total of 11 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}", "by (auto simp: hoare3o_valid_def dollar_def)"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1} SKIP { $ 0}\n\ngoal (10 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 4. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 5. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 6. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 7. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 8. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 9. \\<And>x a Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(ps, t).\n   x \\<in> dom ps \\<and>\n   vars a \\<subseteq> dom ps \\<and>\n   Q (ps(x \\<mapsto> paval a ps), t)) \\<and>*\n                                     $ 1}\n       x ::= a { Q}\n 10. \\<And>P Q c R.\n        \\<lbrakk>P \\<Longrightarrow>\n                 \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n         P \\<Longrightarrow>\n         \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n        \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                          { R}", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 4. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 5. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 6. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 7. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 8. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 9. \\<And>x a Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(ps, t).\n   x \\<in> dom ps \\<and>\n   vars a \\<subseteq> dom ps \\<and>\n   Q (ps(x \\<mapsto> paval a ps), t)) \\<and>*\n                                     $ 1}\n       x ::= a { Q}\n 10. \\<And>P Q c R.\n        \\<lbrakk>P \\<Longrightarrow>\n                 \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n         P \\<Longrightarrow>\n         \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n        \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                          { R}", "case (Assign4 x a Q)"], ["proof (state)\nthis:\n  \n\ngoal (10 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 4. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 5. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 6. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 7. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 8. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 9. \\<And>x a Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(ps, t).\n   x \\<in> dom ps \\<and>\n   vars a \\<subseteq> dom ps \\<and>\n   Q (ps(x \\<mapsto> paval a ps), t)) \\<and>*\n                                     $ 1}\n       x ::= a { Q}\n 10. \\<And>P Q c R.\n        \\<lbrakk>P \\<Longrightarrow>\n                 \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n         P \\<Longrightarrow>\n         \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n        \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                          { R}", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(ps, t).\nx \\<in> dom ps \\<and>\nvars a \\<subseteq> dom ps \\<and> Q (ps(x \\<mapsto> paval a ps), t)) \\<and>*\n                                  $ 1}\n    x ::= a { Q}", "apply (auto simp: dollar_def sep_conj_def  hoare3o_valid_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          (\\<exists>b.\n              n = Suc b \\<and>\n              x \\<in> dom ps \\<and>\n              vars a \\<subseteq> dom ps \\<and>\n              Q (ps(x \\<mapsto> paval a ps), b)) \\<longrightarrow>\n          (\\<exists>ps' ps'' m.\n              (x ::= a,\n               ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and>\n              (\\<exists>e.\n                  (\\<exists>e'. k * n = k * e + e' + m) \\<and> Q (ps', e)))", "apply(rule exI[where x=1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1 \\<and>\n    (\\<forall>ps n.\n        (\\<exists>b.\n            n = Suc b \\<and>\n            x \\<in> dom ps \\<and>\n            vars a \\<subseteq> dom ps \\<and>\n            Q (ps(x \\<mapsto> paval a ps), b)) \\<longrightarrow>\n        (\\<exists>ps' ps'' m.\n            (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            (\\<exists>e.\n                (\\<exists>e'. 1 * n = 1 * e + e' + m) \\<and> Q (ps', e))))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ps b y.\n       \\<lbrakk>ps x = Some y; vars a \\<subseteq> dom ps;\n        Q (ps(x \\<mapsto> paval a ps), b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. Suc b = e + e' + m) \\<and>\n                                Q (ps', e))", "subgoal for ps b y"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps x = Some y; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ps' ps'' m.\n                         (x ::= a,\n                          ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                        ps'' \\<and>\n                         ps' ## ps'' \\<and>\n                         (\\<exists>e.\n                             (\\<exists>e'. Suc b = e + e' + m) \\<and>\n                             Q (ps', e))", "apply(rule exI[where x=\"ps(x \\<mapsto> paval a ps)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps x = Some y; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ps'' m.\n                         (x ::= a,\n                          ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps(x \\<mapsto>\n                        paval a ps) + ps'' \\<and>\n                         ps(x \\<mapsto> paval a ps) ## ps'' \\<and>\n                         (\\<exists>e.\n                             (\\<exists>e'. Suc b = e + e' + m) \\<and>\n                             Q (ps(x \\<mapsto> paval a ps), e))", "apply(rule exI[where x=\"0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps x = Some y; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m.\n                         (x ::= a,\n                          ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps(x \\<mapsto>\n                        paval a ps) + 0 \\<and>\n                         ps(x \\<mapsto> paval a ps) ## 0 \\<and>\n                         (\\<exists>e.\n                             (\\<exists>e'. Suc b = e + e' + m) \\<and>\n                             Q (ps(x \\<mapsto> paval a ps), e))", "apply(rule exI[where x=\"Suc 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps x = Some y; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), b)\\<rbrakk>\n    \\<Longrightarrow> (x ::= a,\n                       ps) \\<Rightarrow>\\<^sub>A Suc\n            0 \\<Down> ps(x \\<mapsto> paval a ps) + 0 \\<and>\n                      ps(x \\<mapsto> paval a ps) ## 0 \\<and>\n                      (\\<exists>e.\n                          (\\<exists>e'. Suc b = e + e' + Suc 0) \\<and>\n                          Q (ps(x \\<mapsto> paval a ps), e))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps x = Some y; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         (\\<exists>e'. b = e + e') \\<and>\n                         Q (ps(x \\<mapsto> paval a ps), e)", "apply(rule exI[where x=b])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps x = Some y; vars a \\<subseteq> dom ps;\n     Q (ps(x \\<mapsto> paval a ps), b)\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>e'. b = b + e') \\<and>\n                      Q (ps(x \\<mapsto> paval a ps), b)", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(ps, t).\n                                    x \\<in> dom ps \\<and>\n                                    vars a \\<subseteq> dom ps \\<and>\n                                    Q (ps(x \\<mapsto> paval a ps),\n t)) \\<and>*\n                                $ 1}\n  x ::= a { Q}\n\ngoal (9 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 4. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 5. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 6. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 7. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 8. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 9. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 4. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 5. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 6. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 7. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 8. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 9. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "case (Assign' x v' v Q )"], ["proof (state)\nthis:\n  \n\ngoal (9 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 4. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 5. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 6. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 7. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 8. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 9. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "have \"\\<And>aa. aa ## [x \\<mapsto> v'] \\<Longrightarrow>\n       \\<not> aa ## [x \\<mapsto> v] \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       \\<lbrakk>aa ## [x \\<mapsto> v'];\n        \\<not> aa ## [x \\<mapsto> v]\\<rbrakk>\n       \\<Longrightarrow> False", "unfolding sep_disj_fun_def domain_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       \\<lbrakk>{x. aa x \\<noteq> none} \\<inter>\n                {xa. [x \\<mapsto> v'] xa \\<noteq> none} =\n                {};\n        {x. aa x \\<noteq> none} \\<inter>\n        {xa. [x \\<mapsto> v] xa \\<noteq> none} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa xa y ya.\n       \\<lbrakk>{x. \\<exists>y. aa x = Some y} \\<inter>\n                {xa.\n                 \\<exists>y. (if xa = x then Some v' else None) = Some y} =\n                {};\n        aa xa = Some y; (if xa = x then Some v else None) = Some ya\\<rbrakk>\n       \\<Longrightarrow> False", "by (smt Collect_conj_eq Collect_empty_eq)"], ["proof (state)\nthis:\n  \\<lbrakk>?aa ## [x \\<mapsto> v']; \\<not> ?aa ## [x \\<mapsto> v]\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (9 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 4. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 5. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 6. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 7. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 8. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 9. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "have f: \"\\<And>v'. domain [x \\<mapsto> v'] = {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v'. domain [x \\<mapsto> v'] = {x}", "unfolding domain_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v'. dom [x \\<mapsto> v'] = {x}", "by auto"], ["proof (state)\nthis:\n  domain [x \\<mapsto> ?v'] = {x}\n\ngoal (9 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 4. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 5. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 6. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 7. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 8. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 9. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "{"], ["proof (state)\nthis:\n  domain [x \\<mapsto> ?v'] = {x}\n\ngoal (9 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 4. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 5. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 6. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 7. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 8. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 9. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "fix ps"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 4. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 5. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 6. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 7. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 8. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 9. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "assume u: \"ps ## [x \\<mapsto> v']\""], ["proof (state)\nthis:\n  ps ## [x \\<mapsto> v']\n\ngoal (9 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 4. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 5. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 6. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 7. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 8. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 9. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "have 2: \"[x \\<mapsto> v'] + ps = ps + [x \\<mapsto> v']\"\n          \"[x \\<mapsto> v] + ps = ps + [x \\<mapsto> v]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [x \\<mapsto> v'] + ps = ps + [x \\<mapsto> v'] &&&\n    [x \\<mapsto> v] + ps = ps + [x \\<mapsto> v]", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. [x \\<mapsto> v'] + ps = ps + [x \\<mapsto> v']", "apply (subst sep_add_commute)"], ["proof (prove)\ngoal (2 subgoals):\n 1. [x \\<mapsto> v'] ## ps\n 2. ps + [x \\<mapsto> v'] = ps + [x \\<mapsto> v']", "using u"], ["proof (prove)\nusing this:\n  ps ## [x \\<mapsto> v']\n\ngoal (2 subgoals):\n 1. [x \\<mapsto> v'] ## ps\n 2. ps + [x \\<mapsto> v'] = ps + [x \\<mapsto> v']", "by (auto simp: sep_add_ac)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [x \\<mapsto> v] + ps = ps + [x \\<mapsto> v]", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. [x \\<mapsto> v] + ps = ps + [x \\<mapsto> v]", "apply (subst sep_add_commute)"], ["proof (prove)\ngoal (2 subgoals):\n 1. [x \\<mapsto> v] ## ps\n 2. ps + [x \\<mapsto> v] = ps + [x \\<mapsto> v]", "using u"], ["proof (prove)\nusing this:\n  ps ## [x \\<mapsto> v']\n\ngoal (2 subgoals):\n 1. [x \\<mapsto> v] ## ps\n 2. ps + [x \\<mapsto> v] = ps + [x \\<mapsto> v]", "apply (auto simp: sep_add_ac)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ps ## [x \\<mapsto> v'] \\<Longrightarrow> ps ## [x \\<mapsto> v]", "unfolding sep_disj_fun_def f"], ["proof (prove)\ngoal (1 subgoal):\n 1. domain ps \\<inter> {x} = {} \\<Longrightarrow>\n    domain ps \\<inter> {x} = {}", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  [x \\<mapsto> v'] + ps = ps + [x \\<mapsto> v']\n  [x \\<mapsto> v] + ps = ps + [x \\<mapsto> v]\n\ngoal (9 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 4. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 5. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 6. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 7. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 8. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 9. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "have \"(x ::= N v, [x \\<mapsto> v'] + ps) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> [x \\<mapsto> v] + ps\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ::= N v,\n     [x \\<mapsto> v'] +\n     ps) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> [x \\<mapsto> v] + ps", "apply(rule Framer[OF big_step_t_part.Assign])"], ["proof (prove)\ngoal (4 subgoals):\n 1. vars (N v) \\<union> {x} \\<subseteq> dom [x \\<mapsto> v']\n 2. paval (N v) [x \\<mapsto> v'] = ?v1\n 3. [x \\<mapsto> v] = [x \\<mapsto> v', x \\<mapsto> ?v1]\n 4. [x \\<mapsto> v'] ## ps", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. [x \\<mapsto> v'] ## ps", "using u"], ["proof (prove)\nusing this:\n  ps ## [x \\<mapsto> v']\n\ngoal (1 subgoal):\n 1. [x \\<mapsto> v'] ## ps", "by (auto simp: sep_add_ac)"], ["proof (state)\nthis:\n  (x ::= N v,\n   [x \\<mapsto> v'] +\n   ps) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> [x \\<mapsto> v] + ps\n\ngoal (9 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 4. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 5. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 6. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 7. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 8. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 9. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "then"], ["proof (chain)\npicking this:\n  (x ::= N v,\n   [x \\<mapsto> v'] +\n   ps) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> [x \\<mapsto> v] + ps", "have \"(x ::= N v, ps + [x \\<mapsto> v']) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps + [x \\<mapsto> v]\""], ["proof (prove)\nusing this:\n  (x ::= N v,\n   [x \\<mapsto> v'] +\n   ps) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> [x \\<mapsto> v] + ps\n\ngoal (1 subgoal):\n 1. (x ::= N v,\n     ps +\n     [x \\<mapsto>\n      v']) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps + [x \\<mapsto> v]", "by (simp only: 2)"], ["proof (state)\nthis:\n  (x ::= N v,\n   ps +\n   [x \\<mapsto>\n    v']) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps + [x \\<mapsto> v]\n\ngoal (9 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 4. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 5. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 6. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 7. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 8. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 9. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "}"], ["proof (state)\nthis:\n  ?ps3 ## [x \\<mapsto> v'] \\<Longrightarrow>\n  (x ::= N v,\n   ?ps3 +\n   [x \\<mapsto>\n    v']) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ?ps3 + [x \\<mapsto> v]\n\ngoal (9 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 4. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 5. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 6. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 7. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 8. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 9. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "note f2 = this"], ["proof (state)\nthis:\n  ?ps3 ## [x \\<mapsto> v'] \\<Longrightarrow>\n  (x ::= N v,\n   ?ps3 +\n   [x \\<mapsto>\n    v']) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ?ps3 + [x \\<mapsto> v]\n\ngoal (9 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>x v' v Q.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                     (x \\<hookrightarrow> v \\<longrightarrow>*\nQ) \\<and>*\n                                     $ 1}\n       x ::= N v { Q}\n 3. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 4. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 5. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 6. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 7. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 8. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 9. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "from Assign'"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                  (x \\<hookrightarrow> v \\<longrightarrow>*\n                                   Q) \\<and>*\n                                  $ 1}\n    x ::= N v { Q}", "apply (auto simp: dollar_def sep_conj_def pointsto_def sep_impl_def hoare3o_valid_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          (\\<exists>a b aa.\n              a ## aa \\<and>\n              ps = a + aa \\<and>\n              (\\<exists>ba.\n                  n = b + ba \\<and>\n                  a = [x \\<mapsto> v'] \\<and>\n                  b = 0 \\<and>\n                  (\\<exists>b.\n                      ba = Suc b \\<and>\n                      (aa ## [x \\<mapsto> v] \\<longrightarrow>\n                       Q (aa + [x \\<mapsto> v], b))))) \\<longrightarrow>\n          (\\<exists>ps' ps'' m.\n              (x ::= N v,\n               ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and>\n              (\\<exists>e.\n                  (\\<exists>e'. k * n = k * e + e' + m) \\<and> Q (ps', e)))", "apply(rule exI[where x=1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1 \\<and>\n    (\\<forall>ps n.\n        (\\<exists>a b aa.\n            a ## aa \\<and>\n            ps = a + aa \\<and>\n            (\\<exists>ba.\n                n = b + ba \\<and>\n                a = [x \\<mapsto> v'] \\<and>\n                b = 0 \\<and>\n                (\\<exists>b.\n                    ba = Suc b \\<and>\n                    (aa ## [x \\<mapsto> v] \\<longrightarrow>\n                     Q (aa + [x \\<mapsto> v], b))))) \\<longrightarrow>\n        (\\<exists>ps' ps'' m.\n            (x ::= N v,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            (\\<exists>e.\n                (\\<exists>e'. 1 * n = 1 * e + e' + m) \\<and> Q (ps', e))))", "apply (auto simp: sep_add_ac)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa bb.\n       \\<lbrakk>aa ## [x \\<mapsto> v'];\n        \\<not> aa ## [x \\<mapsto> v]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= N v,\n                             aa +\n                             [x \\<mapsto>\n                              v']) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                             ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. Suc bb = m + (e + e')) \\<and>\n                                Q (ps', e))\n 2. \\<And>aa bb.\n       \\<lbrakk>aa ## [x \\<mapsto> v'];\n        Q (aa + [x \\<mapsto> v], bb)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= N v,\n                             aa +\n                             [x \\<mapsto>\n                              v']) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                             ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. Suc bb = m + (e + e')) \\<and>\n                                Q (ps', e))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>aa_ ## [x \\<mapsto> v']; \\<not> aa_ ## [x \\<mapsto> v]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ps' ps'' m.\n                         (x ::= N v,\n                          aa_ +\n                          [x \\<mapsto>\n                           v']) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                          ps'' \\<and>\n                         ps' ## ps'' \\<and>\n                         (\\<exists>e.\n                             (\\<exists>e'. Suc bb_ = m + (e + e')) \\<and>\n                             Q (ps', e))", "unfolding sep_disj_fun_def f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>domain aa_ \\<inter> {x} = {};\n     domain aa_ \\<inter> {x} \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ps' ps'' m.\n                         (x ::= N v,\n                          aa_ +\n                          [x \\<mapsto>\n                           v']) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                          ps'' \\<and>\n                         domain ps' \\<inter> domain ps'' = {} \\<and>\n                         (\\<exists>e.\n                             (\\<exists>e'. Suc bb_ = m + (e + e')) \\<and>\n                             Q (ps', e))", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa bb.\n       \\<lbrakk>aa ## [x \\<mapsto> v'];\n        Q (aa + [x \\<mapsto> v], bb)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= N v,\n                             aa +\n                             [x \\<mapsto>\n                              v']) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                             ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. Suc bb = m + (e + e')) \\<and>\n                                Q (ps', e))", "subgoal for ps n"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps ## [x \\<mapsto> v']; Q (ps + [x \\<mapsto> v], n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ps' ps'' m.\n                         (x ::= N v,\n                          ps +\n                          [x \\<mapsto>\n                           v']) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                          ps'' \\<and>\n                         ps' ## ps'' \\<and>\n                         (\\<exists>e.\n                             (\\<exists>e'. Suc n = m + (e + e')) \\<and>\n                             Q (ps', e))", "apply(rule exI[where x=\"ps+[x \\<mapsto> v]\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps ## [x \\<mapsto> v']; Q (ps + [x \\<mapsto> v], n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ps'' m.\n                         (x ::= N v,\n                          ps +\n                          [x \\<mapsto>\n                           v']) \\<Rightarrow>\\<^sub>A m \\<Down> ps +\n                          [x \\<mapsto> v] +\n                          ps'' \\<and>\n                         ps + [x \\<mapsto> v] ## ps'' \\<and>\n                         (\\<exists>e.\n                             (\\<exists>e'. Suc n = m + (e + e')) \\<and>\n                             Q (ps + [x \\<mapsto> v], e))", "apply(rule exI[where x=\"0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps ## [x \\<mapsto> v']; Q (ps + [x \\<mapsto> v], n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m.\n                         (x ::= N v,\n                          ps +\n                          [x \\<mapsto>\n                           v']) \\<Rightarrow>\\<^sub>A m \\<Down> ps +\n                          [x \\<mapsto> v] +\n                          0 \\<and>\n                         ps + [x \\<mapsto> v] ## 0 \\<and>\n                         (\\<exists>e.\n                             (\\<exists>e'. Suc n = m + (e + e')) \\<and>\n                             Q (ps + [x \\<mapsto> v], e))", "apply(rule exI[where x=\"Suc 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps ## [x \\<mapsto> v']; Q (ps + [x \\<mapsto> v], n)\\<rbrakk>\n    \\<Longrightarrow> (x ::= N v,\n                       ps +\n                       [x \\<mapsto>\n                        v']) \\<Rightarrow>\\<^sub>A Suc\n              0 \\<Down> ps + [x \\<mapsto> v] + 0 \\<and>\n                      ps + [x \\<mapsto> v] ## 0 \\<and>\n                      (\\<exists>e.\n                          (\\<exists>e'. Suc n = Suc 0 + (e + e')) \\<and>\n                          Q (ps + [x \\<mapsto> v], e))", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>ps ## [x \\<mapsto> v']; Q (ps + [x \\<mapsto> v], n)\\<rbrakk>\n    \\<Longrightarrow> (x ::= N v,\n                       ps +\n                       [x \\<mapsto>\n                        v']) \\<Rightarrow>\\<^sub>A Suc\n              0 \\<Down> ps + [x \\<mapsto> v] + 0\n 2. \\<lbrakk>ps ## [x \\<mapsto> v']; Q (ps + [x \\<mapsto> v], n)\\<rbrakk>\n    \\<Longrightarrow> ps + [x \\<mapsto> v] ## 0\n 3. \\<lbrakk>ps ## [x \\<mapsto> v']; Q (ps + [x \\<mapsto> v], n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         (\\<exists>e'. Suc n = Suc 0 + (e + e')) \\<and>\n                         Q (ps + [x \\<mapsto> v], e)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps ## [x \\<mapsto> v']; Q (ps + [x \\<mapsto> v], n)\\<rbrakk>\n    \\<Longrightarrow> (x ::= N v,\n                       ps +\n                       [x \\<mapsto>\n                        v']) \\<Rightarrow>\\<^sub>A Suc\n              0 \\<Down> ps + [x \\<mapsto> v] + 0", "using f2"], ["proof (prove)\nusing this:\n  ?ps3 ## [x \\<mapsto> v'] \\<Longrightarrow>\n  (x ::= N v,\n   ?ps3 +\n   [x \\<mapsto>\n    v']) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ?ps3 + [x \\<mapsto> v]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ps ## [x \\<mapsto> v']; Q (ps + [x \\<mapsto> v], n)\\<rbrakk>\n    \\<Longrightarrow> (x ::= N v,\n                       ps +\n                       [x \\<mapsto>\n                        v']) \\<Rightarrow>\\<^sub>A Suc\n              0 \\<Down> ps + [x \\<mapsto> v] + 0", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ps ## [x \\<mapsto> v']; Q (ps + [x \\<mapsto> v], n)\\<rbrakk>\n    \\<Longrightarrow> ps + [x \\<mapsto> v] ## 0\n 2. \\<lbrakk>ps ## [x \\<mapsto> v']; Q (ps + [x \\<mapsto> v], n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         (\\<exists>e'. Suc n = Suc 0 + (e + e')) \\<and>\n                         Q (ps + [x \\<mapsto> v], e)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps ## [x \\<mapsto> v']; Q (ps + [x \\<mapsto> v], n)\\<rbrakk>\n    \\<Longrightarrow> ps + [x \\<mapsto> v] ## 0", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps ## [x \\<mapsto> v']; Q (ps + [x \\<mapsto> v], n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         (\\<exists>e'. Suc n = Suc 0 + (e + e')) \\<and>\n                         Q (ps + [x \\<mapsto> v], e)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps ## [x \\<mapsto> v']; Q (ps + [x \\<mapsto> v], n)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         (\\<exists>e'. Suc n = Suc 0 + (e + e')) \\<and>\n                         Q (ps + [x \\<mapsto> v], e)", "by force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {x \\<hookrightarrow> v' \\<and>*\n                                (x \\<hookrightarrow> v \\<longrightarrow>*\n                                 Q) \\<and>*\n                                $ 1}\n  x ::= N v { Q}\n\ngoal (8 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 3. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 4. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 5. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 6. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 7. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 8. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 3. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 4. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 5. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 6. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 7. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 8. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "case (Assign x a v)"], ["proof (state)\nthis:\n  \n\ngoal (8 subgoals):\n 1. \\<And>x a v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1}\n       x ::= a\n       { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n         x \\<hookrightarrow> v}\n 2. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 3. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 4. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 5. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 6. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 7. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 8. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1} x ::= a\n    { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n      x \\<hookrightarrow> v}", "unfolding hoare3o_valid_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          (lmaps_to_expr_x x a v \\<and>* $ 1) (ps, n) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (x ::= a,\n               ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and>\n              k * n = k * e + e' + m \\<and>\n              ((\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n               x \\<hookrightarrow> v)\n               (ps', e))", "apply(rule exI[where x=1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1 \\<and>\n    (\\<forall>ps n.\n        (lmaps_to_expr_x x a v \\<and>* $ 1) (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            1 * n = 1 * e + e' + m \\<and>\n            ((\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n             x \\<hookrightarrow> v)\n             (ps', e)))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       ((\\<lambda>(s, c).\n            dom s = insert x (vars a) \\<and>\n            paval a s = v \\<and> c = 0) \\<and>*\n        $ (Suc 0))\n        (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m.\n          (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          (\\<exists>e.\n              (\\<exists>e'. n = e + e' + m) \\<and>\n              ((\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n               x \\<hookrightarrow> v)\n               (ps', e))", "apply (auto simp: dollar_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       ((\\<lambda>(s, c).\n            dom s = insert x (vars a) \\<and>\n            paval a s = v \\<and> c = 0) \\<and>*\n        (\\<lambda>(s, c). s = 0 \\<and> c = Suc 0))\n        (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m.\n          (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          (\\<exists>e.\n              (\\<exists>e'. n = e + e' + m) \\<and>\n              ((\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n               x \\<hookrightarrow> v)\n               (ps', e))", "subgoal for ps n"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>(s, c).\n         dom s = insert x (vars a) \\<and>\n         paval a s = v \\<and> c = 0) \\<and>*\n     (\\<lambda>(s, c). s = 0 \\<and> c = Suc 0))\n     (ps, n) \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. n = e + e' + m) \\<and>\n           ((\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n            x \\<hookrightarrow> v)\n            (ps', e))", "apply (subst (asm) separate_othogonal)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ps n.\n       case (ps, n) of\n       (s, c) \\<Rightarrow>\n         dom s = insert x (vars a) \\<and>\n         paval a s = v \\<and> c = 0 \\<Longrightarrow>\n       n = 0\n 2. \\<And>ps n.\n       case (ps, n) of\n       (s, c) \\<Rightarrow> s = 0 \\<and> c = Suc 0 \\<Longrightarrow>\n       ps = 0\n 3. (case (ps, 0) of\n     (s, c) \\<Rightarrow>\n       dom s = insert x (vars a) \\<and> paval a s = v \\<and> c = 0) \\<and>\n    (case (0, n) of\n     (s, c) \\<Rightarrow> s = 0 \\<and> c = Suc 0) \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. n = e + e' + m) \\<and>\n           ((\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n            x \\<hookrightarrow> v)\n            (ps', e))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom ps = insert x (vars a); n = Suc 0; v = paval a ps\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ps' ps'' m.\n                         (x ::= a,\n                          ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                        ps'' \\<and>\n                         ps' ## ps'' \\<and>\n                         (\\<exists>e.\n                             (\\<exists>e'. Suc 0 = e + e' + m) \\<and>\n                             ((\\<lambda>(s, c).\n                                  dom s = vars a - {x} \\<and> c = 0) \\<and>*\n                              x \\<hookrightarrow> paval a ps)\n                              (ps', e))", "apply(rule exI[where x=\"ps(x:=Some v)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom ps = insert x (vars a); n = Suc 0; v = paval a ps\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ps'' m.\n                         (x ::= a,\n                          ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps(x \\<mapsto>\n                        v) + ps'' \\<and>\n                         ps(x \\<mapsto> v) ## ps'' \\<and>\n                         (\\<exists>e.\n                             (\\<exists>e'. Suc 0 = e + e' + m) \\<and>\n                             ((\\<lambda>(s, c).\n                                  dom s = vars a - {x} \\<and> c = 0) \\<and>*\n                              x \\<hookrightarrow> paval a ps)\n                              (ps(x \\<mapsto> v), e))", "apply(rule exI[where x=\"0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom ps = insert x (vars a); n = Suc 0; v = paval a ps\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m.\n                         (x ::= a,\n                          ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps(x \\<mapsto>\n                        v) + 0 \\<and>\n                         ps(x \\<mapsto> v) ## 0 \\<and>\n                         (\\<exists>e.\n                             (\\<exists>e'. Suc 0 = e + e' + m) \\<and>\n                             ((\\<lambda>(s, c).\n                                  dom s = vars a - {x} \\<and> c = 0) \\<and>*\n                              x \\<hookrightarrow> paval a ps)\n                              (ps(x \\<mapsto> v), e))", "apply(rule exI[where x=\"1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom ps = insert x (vars a); n = Suc 0; v = paval a ps\\<rbrakk>\n    \\<Longrightarrow> (x ::= a,\n                       ps) \\<Rightarrow>\\<^sub>A 1 \\<Down> ps(x \\<mapsto>\n                     v) + 0 \\<and>\n                      ps(x \\<mapsto> v) ## 0 \\<and>\n                      (\\<exists>e.\n                          (\\<exists>e'. Suc 0 = e + e' + 1) \\<and>\n                          ((\\<lambda>(s, c).\n                               dom s = vars a - {x} \\<and> c = 0) \\<and>*\n                           x \\<hookrightarrow> paval a ps)\n                           (ps(x \\<mapsto> v), e))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom ps = insert x (vars a); n = Suc 0; v = paval a ps\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>(s, c).\n                           dom s = vars a - {x} \\<and> c = 0) \\<and>*\n                       x \\<hookrightarrow> paval a ps)\n                       (ps(x \\<mapsto> paval a ps), 0)", "apply (auto simp: pointsto_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom ps = insert x (vars a); n = Suc 0; v = paval a ps\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>(s, c).\n                           dom s = vars a - {x} \\<and> c = 0) \\<and>*\n                       (\\<lambda>(s, c).\n                           s = [x \\<mapsto> paval a ps] \\<and> c = 0))\n                       (ps(x \\<mapsto> paval a ps), 0)", "unfolding  sep_conj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom ps = insert x (vars a); n = Suc 0; v = paval a ps\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xa y.\n                         xa ## y \\<and>\n                         (ps(x \\<mapsto> paval a ps), 0) = xa + y \\<and>\n                         (case xa of\n                          (s, c) \\<Rightarrow>\n                            dom s = vars a - {x} \\<and> c = 0) \\<and>\n                         (case y of\n                          (s, c) \\<Rightarrow>\n                            s = [x \\<mapsto> paval a ps] \\<and> c = 0)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom ps = insert x (vars a); n = Suc 0; v = paval a ps\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xa y.\n                         xa ## y \\<and>\n                         (ps(x \\<mapsto> paval a ps), 0) = xa + y \\<and>\n                         (case xa of\n                          (s, c) \\<Rightarrow>\n                            dom s = vars a - {x} \\<and> c = 0) \\<and>\n                         (case y of\n                          (s, c) \\<Rightarrow>\n                            s = [x \\<mapsto> paval a ps] \\<and> c = 0)", "apply(rule exI[where x=\"((%y. if y=x then None else ps y) , 0)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom ps = insert x (vars a); n = Suc 0; v = paval a ps\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y.\n                         (\\<lambda>y. if y = x then None else ps y, 0) ##\n                         y \\<and>\n                         (ps(x \\<mapsto> paval a ps), 0) =\n                         (\\<lambda>y. if y = x then None else ps y, 0) +\n                         y \\<and>\n                         (case (\\<lambda>y. if y = x then None else ps y,\n                                0) of\n                          (s, c) \\<Rightarrow>\n                            dom s = vars a - {x} \\<and> c = 0) \\<and>\n                         (case y of\n                          (s, c) \\<Rightarrow>\n                            s = [x \\<mapsto> paval a ps] \\<and> c = 0)", "apply(rule exI[where x=\"((%y. if y = x then Some (paval a ps) else None),0)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom ps = insert x (vars a); n = Suc 0; v = paval a ps\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>y. if y = x then None else ps y, 0) ##\n                      (\\<lambda>y.\n                          if y = x then Some (paval a ps) else None,\n                       0) \\<and>\n                      (ps(x \\<mapsto> paval a ps), 0) =\n                      (\\<lambda>y. if y = x then None else ps y, 0) +\n                      (\\<lambda>y.\n                          if y = x then Some (paval a ps) else None,\n                       0) \\<and>\n                      (case (\\<lambda>y. if y = x then None else ps y, 0) of\n                       (s, c) \\<Rightarrow>\n                         dom s = vars a - {x} \\<and> c = 0) \\<and>\n                      (case (\\<lambda>y.\n                                if y = x then Some (paval a ps) else None,\n                             0) of\n                       (s, c) \\<Rightarrow>\n                         s = [x \\<mapsto> paval a ps] \\<and> c = 0)", "apply (auto simp: sep_disj_prod_def sep_disj_fun_def plus_fun_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>dom ps = insert x (vars a); n = Suc 0; v = paval a ps;\n        xa \\<in> domain (\\<lambda>y. if y = x then None else ps y);\n        xa \\<in> domain\n                  (\\<lambda>y.\n                      if y = x then Some (paval a ps) else None)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>xa y.\n       \\<lbrakk>dom ps = insert x (vars a); n = Suc 0; v = paval a ps;\n        (if xa = x then None else ps xa) = Some y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> vars a\n 3. \\<And>xa.\n       \\<lbrakk>dom ps = insert x (vars a); n = Suc 0; v = paval a ps;\n        xa \\<in> vars a; (if xa = x then None else ps xa) = None\\<rbrakk>\n       \\<Longrightarrow> xa = x", "apply (smt domIff domain_conv)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>dom ps = insert x (vars a); n = Suc 0; v = paval a ps;\n        (if xa = x then None else ps xa) = Some y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> vars a\n 2. \\<And>xa.\n       \\<lbrakk>dom ps = insert x (vars a); n = Suc 0; v = paval a ps;\n        xa \\<in> vars a; (if xa = x then None else ps xa) = None\\<rbrakk>\n       \\<Longrightarrow> xa = x", "apply (metis domI insertE option.simps(3))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>dom ps = insert x (vars a); n = Suc 0; v = paval a ps;\n        xa \\<in> vars a; (if xa = x then None else ps xa) = None\\<rbrakk>\n       \\<Longrightarrow> xa = x", "using domIff"], ["proof (prove)\nusing this:\n  (?a \\<in> dom ?m) = (?m ?a \\<noteq> None)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>dom ps = insert x (vars a); n = Suc 0; v = paval a ps;\n        xa \\<in> vars a; (if xa = x then None else ps xa) = None\\<rbrakk>\n       \\<Longrightarrow> xa = x", "by fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {lmaps_to_expr_x x a v \\<and>* $ 1} x ::= a\n  { (\\<lambda>(s, c). dom s = vars a - {x} \\<and> c = 0) \\<and>*\n    x \\<hookrightarrow> v}\n\ngoal (7 subgoals):\n 1. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 2. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 3. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 4. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 5. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 6. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 7. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 2. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 3. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 4. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 5. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 6. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 7. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "case (If P b c\\<^sub>1 Q c\\<^sub>2)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n                                   P (s, n) \\<and> lmaps_to_axpr b True s}\n                               c\\<^sub>1 { Q}\n  \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n                                   P (s, n) \\<and> lmaps_to_axpr b False s}\n                               c\\<^sub>2 { Q}\n  \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n                                   case a of\n                                   (s, n) \\<Rightarrow>\n                                     P (s, n) \\<and> lmaps_to_axpr b True s}\n  c\\<^sub>1 { Q}\n  \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n                                   case a of\n                                   (s, n) \\<Rightarrow>\n                                     P (s, n) \\<and>\n                                     lmaps_to_axpr b False s}\n  c\\<^sub>2 { Q}\n\ngoal (7 subgoals):\n 1. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 2. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 3. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 4. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 5. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 6. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 7. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "from If(3)[unfolded hoare3o_valid_def]"], ["proof (chain)\npicking this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        (case (ps, n) of\n         (s, n) \\<Rightarrow>\n           P (s, n) \\<and> lmaps_to_axpr b True s) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c\\<^sub>1,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))", "obtain k1 where T: \"\\<And>ps n. P (ps, n) \\<Longrightarrow> vars b \\<subseteq> dom ps \\<Longrightarrow> pbval b ps\n     \\<Longrightarrow> (\\<exists>ps' ps'' m e e'. (c\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> k1 * n = k1 * e + e' + m \\<and> Q (ps', e))\"\n        and k1: \"k1 > 0\""], ["proof (prove)\nusing this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        (case (ps, n) of\n         (s, n) \\<Rightarrow>\n           P (s, n) \\<and> lmaps_to_axpr b True s) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c\\<^sub>1,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))\n\ngoal (1 subgoal):\n 1. (\\<And>k1.\n        \\<lbrakk>\\<And>ps n.\n                    \\<lbrakk>P (ps, n); vars b \\<subseteq> dom ps;\n                     pbval b ps\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n   (c\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n   ps' ## ps'' \\<and> k1 * n = k1 * e + e' + m \\<and> Q (ps', e);\n         0 < k1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  \\<lbrakk>P (?ps, ?n); vars b \\<subseteq> dom ?ps; pbval b ?ps\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                       (c\\<^sub>1,\n                        ?ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                       ps'' \\<and>\n                       ps' ## ps'' \\<and>\n                       k1 * ?n = k1 * e + e' + m \\<and> Q (ps', e)\n  0 < k1\n\ngoal (7 subgoals):\n 1. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 2. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 3. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 4. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 5. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 6. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 7. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "from If(4)[unfolded hoare3o_valid_def]"], ["proof (chain)\npicking this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        (case (ps, n) of\n         (s, n) \\<Rightarrow>\n           P (s, n) \\<and> lmaps_to_axpr b False s) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c\\<^sub>2,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))", "obtain k2 where F: \"\\<And>ps n. P (ps, n) \\<Longrightarrow> vars b \\<subseteq> dom ps \\<Longrightarrow> \\<not> pbval b ps\n     \\<Longrightarrow> (\\<exists>ps' ps'' m e e'. (c\\<^sub>2, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> k2 * n = k2 * e + e' + m \\<and> Q (ps', e))\"\n        and k2: \"k2 > 0\""], ["proof (prove)\nusing this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        (case (ps, n) of\n         (s, n) \\<Rightarrow>\n           P (s, n) \\<and> lmaps_to_axpr b False s) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c\\<^sub>2,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))\n\ngoal (1 subgoal):\n 1. (\\<And>k2.\n        \\<lbrakk>\\<And>ps n.\n                    \\<lbrakk>P (ps, n); vars b \\<subseteq> dom ps;\n                     \\<not> pbval b ps\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n   (c\\<^sub>2, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n   ps' ## ps'' \\<and> k2 * n = k2 * e + e' + m \\<and> Q (ps', e);\n         0 < k2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  \\<lbrakk>P (?ps, ?n); vars b \\<subseteq> dom ?ps;\n   \\<not> pbval b ?ps\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                       (c\\<^sub>2,\n                        ?ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                       ps'' \\<and>\n                       ps' ## ps'' \\<and>\n                       k2 * ?n = k2 * e + e' + m \\<and> Q (ps', e)\n  0 < k2\n\ngoal (7 subgoals):\n 1. \\<And>P b c\\<^sub>1 Q c\\<^sub>2.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       c\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        c\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n   P (s, n) \\<and> lmaps_to_axpr b False s}\n                                     c\\<^sub>2 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n        c\\<^sub>2 { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n 2. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 3. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 4. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 5. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 6. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 7. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\nP (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                                  $ 1}\n    IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}", "unfolding hoare3o_valid_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          ((\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1)\n           (ps, n) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n               ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          ((\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ (Suc 0))\n           (ps, n) \\<longrightarrow>\n          (\\<exists>ps' ps'' m.\n              (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n               ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and>\n              (\\<exists>e.\n                  (\\<exists>e'. k * n = k * e + e' + m) \\<and> Q (ps', e)))", "apply (auto simp: dollar_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          ((\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           (\\<lambda>(s, c). s = 0 \\<and> c = Suc 0))\n           (ps, n) \\<longrightarrow>\n          (\\<exists>ps' ps'' m.\n              (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n               ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and>\n              (\\<exists>e.\n                  (\\<exists>e'. k * n = k * e + e' + m) \\<and> Q (ps', e)))", "apply(rule exI[where x=\"k1 * k2\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k1 * k2 \\<and>\n    (\\<forall>ps n.\n        ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n         (\\<lambda>(s, c). s = 0 \\<and> c = Suc 0))\n         (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m.\n            (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            (\\<exists>e.\n                (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n                Q (ps', e))))", "using k1 k2"], ["proof (prove)\nusing this:\n  0 < k1\n  0 < k2\n\ngoal (1 subgoal):\n 1. 0 < k1 * k2 \\<and>\n    (\\<forall>ps n.\n        ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n         (\\<lambda>(s, c). s = 0 \\<and> c = Suc 0))\n         (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m.\n            (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            (\\<exists>e.\n                (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n                Q (ps', e))))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k1; 0 < k2;\n        ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n         (\\<lambda>(s, c). s = 0 \\<and> c = Suc 0))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'.\n                                    k1 * k2 * n =\n                                    k1 * k2 * e + e' + m) \\<and>\n                                Q (ps', e))", "proof (goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k1; 0 < k2;\n        ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n         (\\<lambda>(s, c). s = 0 \\<and> c = Suc 0))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'.\n                                    k1 * k2 * n =\n                                    k1 * k2 * e + e' + m) \\<and>\n                                Q (ps', e))", "case (1 ps n)"], ["proof (state)\nthis:\n  0 < k1\n  0 < k2\n  ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n   (\\<lambda>(s, c). s = 0 \\<and> c = Suc 0))\n   (ps, n)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k1; 0 < k2;\n        ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n         (\\<lambda>(s, c). s = 0 \\<and> c = Suc 0))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'.\n                                    k1 * k2 * n =\n                                    k1 * k2 * e + e' + m) \\<and>\n                                Q (ps', e))", "then"], ["proof (chain)\npicking this:\n  0 < k1\n  0 < k2\n  ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n   (\\<lambda>(s, c). s = 0 \\<and> c = Suc 0))\n   (ps, n)", "obtain n' where P: \"P (ps, n')\" and dom: \"vars b \\<subseteq> dom ps\" and Suc: \"n = Suc n'\""], ["proof (prove)\nusing this:\n  0 < k1\n  0 < k2\n  ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n   (\\<lambda>(s, c). s = 0 \\<and> c = Suc 0))\n   (ps, n)\n\ngoal (1 subgoal):\n 1. (\\<And>n'.\n        \\<lbrakk>P (ps, n'); vars b \\<subseteq> dom ps; n = Suc n'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding sep_conj_def"], ["proof (prove)\nusing this:\n  0 < k1\n  0 < k2\n  \\<exists>x y.\n     x ## y \\<and>\n     (ps, n) = x + y \\<and>\n     (case x of\n      (s, n) \\<Rightarrow> P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>\n     (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = Suc 0)\n\ngoal (1 subgoal):\n 1. (\\<And>n'.\n        \\<lbrakk>P (ps, n'); vars b \\<subseteq> dom ps; n = Suc n'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  P (ps, n')\n  vars b \\<subseteq> dom ps\n  n = Suc n'\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k1; 0 < k2;\n        ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n         (\\<lambda>(s, c). s = 0 \\<and> c = Suc 0))\n         (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'.\n                                    k1 * k2 * n =\n                                    k1 * k2 * e + e' + m) \\<and>\n                                Q (ps', e))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "proof(cases \"pbval b ps\")"], ["proof (state)\ngoal (2 subgoals):\n 1. pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))\n 2. \\<not> pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "case True"], ["proof (state)\nthis:\n  pbval b ps\n\ngoal (2 subgoals):\n 1. pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))\n 2. \\<not> pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "with T[OF P dom]"], ["proof (chain)\npicking this:\n  pbval b ps \\<Longrightarrow>\n  \\<exists>ps' ps'' m e e'.\n     (c\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> k1 * n' = k1 * e + e' + m \\<and> Q (ps', e)\n  pbval b ps", "obtain ps' ps'' m e e' where d: \"(c\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\"\n            and orth: \"ps' ## ps''\" and m1:  \"k1 * n' = k1 * e + e' + m\" and Q:  \"Q (ps', e)\""], ["proof (prove)\nusing this:\n  pbval b ps \\<Longrightarrow>\n  \\<exists>ps' ps'' m e e'.\n     (c\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> k1 * n' = k1 * e + e' + m \\<and> Q (ps', e)\n  pbval b ps\n\ngoal (1 subgoal):\n 1. (\\<And>m ps' ps'' e e'.\n        \\<lbrakk>(c\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'';\n         ps' ## ps''; k1 * n' = k1 * e + e' + m; Q (ps', e)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (c\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\n  ps' ## ps''\n  k1 * n' = k1 * e + e' + m\n  Q (ps', e)\n\ngoal (2 subgoals):\n 1. pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))\n 2. \\<not> pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "from big_step_t3_post_dom_conv[OF d]"], ["proof (chain)\npicking this:\n  dom (ps' + ps'') = dom ps", "have klong: \"dom (ps' + ps'') = dom ps\""], ["proof (prove)\nusing this:\n  dom (ps' + ps'') = dom ps\n\ngoal (1 subgoal):\n 1. dom (ps' + ps'') = dom ps", "."], ["proof (state)\nthis:\n  dom (ps' + ps'') = dom ps\n\ngoal (2 subgoals):\n 1. pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))\n 2. \\<not> pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "from k1"], ["proof (chain)\npicking this:\n  0 < k1", "obtain k1' where k1': \"k1 = Suc k1'\""], ["proof (prove)\nusing this:\n  0 < k1\n\ngoal (1 subgoal):\n 1. (\\<And>k1'. k1 = Suc k1' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using gr0_implies_Suc"], ["proof (prove)\nusing this:\n  0 < k1\n  0 < ?n \\<Longrightarrow> \\<exists>m. ?n = Suc m\n\ngoal (1 subgoal):\n 1. (\\<And>k1'. k1 = Suc k1' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  k1 = Suc k1'\n\ngoal (2 subgoals):\n 1. pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))\n 2. \\<not> pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "from k2"], ["proof (chain)\npicking this:\n  0 < k2", "obtain k2' where k2': \"k2 = Suc k2'\""], ["proof (prove)\nusing this:\n  0 < k2\n\ngoal (1 subgoal):\n 1. (\\<And>k2'. k2 = Suc k2' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using gr0_implies_Suc"], ["proof (prove)\nusing this:\n  0 < k2\n  0 < ?n \\<Longrightarrow> \\<exists>m. ?n = Suc m\n\ngoal (1 subgoal):\n 1. (\\<And>k2'. k2 = Suc k2' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  k2 = Suc k2'\n\ngoal (2 subgoals):\n 1. pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))\n 2. \\<not> pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "let ?e1 = \"(k2' * (e' + m + k1) + e' + k1')\""], ["proof (state)\ngoal (2 subgoals):\n 1. pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))\n 2. \\<not> pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "apply(rule exI[where x=ps'])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "apply(rule exI[where x=ps''])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "apply(rule exI[where x=\"m+1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n     ps) \\<Rightarrow>\\<^sub>A m + 1 \\<Down> ps' + ps'' \\<and>\n    ps' ## ps'' \\<and>\n    (\\<exists>e.\n        (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n        Q (ps', e))", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n     ps) \\<Rightarrow>\\<^sub>A m + 1 \\<Down> ps' + ps''\n 2. ps' ## ps''\n 3. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "apply(rule big_step_t_part.IfTrue)"], ["proof (prove)\ngoal (7 subgoals):\n 1. vars b \\<subseteq> dom ps\n 2. dom (ps' + ps'') = dom ps\n 3. pbval b ps\n 4. (c\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A ?x8 \\<Down> ps' + ps''\n 5. m + 1 = ?x8 + 1\n 6. ps' ## ps''\n 7. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "apply (rule dom)"], ["proof (prove)\ngoal (6 subgoals):\n 1. dom (ps' + ps'') = dom ps\n 2. pbval b ps\n 3. (c\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A ?x8 \\<Down> ps' + ps''\n 4. m + 1 = ?x8 + 1\n 5. ps' ## ps''\n 6. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "apply fact"], ["proof (prove)\ngoal (5 subgoals):\n 1. pbval b ps\n 2. (c\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A ?x8 \\<Down> ps' + ps''\n 3. m + 1 = ?x8 + 1\n 4. ps' ## ps''\n 5. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "apply (rule True)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (c\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A ?x8 \\<Down> ps' + ps''\n 2. m + 1 = ?x8 + 1\n 3. ps' ## ps''\n 4. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "apply (rule d)"], ["proof (prove)\ngoal (3 subgoals):\n 1. m + 1 = m + 1\n 2. ps' ## ps''\n 3. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. ps' ## ps''\n 2. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "apply(rule exI[where x=\"e\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n    Q (ps', e)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)\n 2. Q (ps', e)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)", "proof (rule exI[where x=\"?e1\"])"], ["proof (state)\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)", "have \"k1 * k2 * n = k2 * (k1*n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 * k2 * n = k2 * (k1 * n)", "by auto"], ["proof (state)\nthis:\n  k1 * k2 * n = k2 * (k1 * n)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)", "also"], ["proof (state)\nthis:\n  k1 * k2 * n = k2 * (k1 * n)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)", "have \"\\<dots> = k2 * (k1*n' + k1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k2 * (k1 * n) = k2 * (k1 * n' + k1)", "unfolding Suc"], ["proof (prove)\ngoal (1 subgoal):\n 1. k2 * (k1 * Suc n') = k2 * (k1 * n' + k1)", "by auto"], ["proof (state)\nthis:\n  k2 * (k1 * n) = k2 * (k1 * n' + k1)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)", "also"], ["proof (state)\nthis:\n  k2 * (k1 * n) = k2 * (k1 * n' + k1)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)", "have \"\\<dots> = k2 * (k1 * e + e' + m + k1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k2 * (k1 * n' + k1) = k2 * (k1 * e + e' + m + k1)", "unfolding m1"], ["proof (prove)\ngoal (1 subgoal):\n 1. k2 * (k1 * e + e' + m + k1) = k2 * (k1 * e + e' + m + k1)", "by auto"], ["proof (state)\nthis:\n  k2 * (k1 * n' + k1) = k2 * (k1 * e + e' + m + k1)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)", "also"], ["proof (state)\nthis:\n  k2 * (k1 * n' + k1) = k2 * (k1 * e + e' + m + k1)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)", "have \"\\<dots> = k1 * k2 * e + k2* (e' + m + k1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k2 * (k1 * e + e' + m + k1) = k1 * k2 * e + k2 * (e' + m + k1)", "by algebra"], ["proof (state)\nthis:\n  k2 * (k1 * e + e' + m + k1) = k1 * k2 * e + k2 * (e' + m + k1)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)", "also"], ["proof (state)\nthis:\n  k2 * (k1 * e + e' + m + k1) = k1 * k2 * e + k2 * (e' + m + k1)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)", "have \"\\<dots> = k1 * k2 * e + k2' * (e' + m + k1) + (e' + m + k1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 * k2 * e + k2 * (e' + m + k1) =\n    k1 * k2 * e + k2' * (e' + m + k1) + (e' + m + k1)", "unfolding k2'"], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 * Suc k2' * e + Suc k2' * (e' + m + k1) =\n    k1 * Suc k2' * e + k2' * (e' + m + k1) + (e' + m + k1)", "by simp"], ["proof (state)\nthis:\n  k1 * k2 * e + k2 * (e' + m + k1) =\n  k1 * k2 * e + k2' * (e' + m + k1) + (e' + m + k1)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)", "also"], ["proof (state)\nthis:\n  k1 * k2 * e + k2 * (e' + m + k1) =\n  k1 * k2 * e + k2' * (e' + m + k1) + (e' + m + k1)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)", "have \"\\<dots> = k1 * k2 * e + k2' * (e' + m + k1) + (e' + k1' + m + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 * k2 * e + k2' * (e' + m + k1) + (e' + m + k1) =\n    k1 * k2 * e + k2' * (e' + m + k1) + (e' + k1' + m + 1)", "unfolding k1'"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc k1' * k2 * e + k2' * (e' + m + Suc k1') + (e' + m + Suc k1') =\n    Suc k1' * k2 * e + k2' * (e' + m + Suc k1') + (e' + k1' + m + 1)", "by simp"], ["proof (state)\nthis:\n  k1 * k2 * e + k2' * (e' + m + k1) + (e' + m + k1) =\n  k1 * k2 * e + k2' * (e' + m + k1) + (e' + k1' + m + 1)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)", "also"], ["proof (state)\nthis:\n  k1 * k2 * e + k2' * (e' + m + k1) + (e' + m + k1) =\n  k1 * k2 * e + k2' * (e' + m + k1) + (e' + k1' + m + 1)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)", "have \"\\<dots> = k1 *k2*e + (k2' * (e' + m + k1) + e' + k1') + (m+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 * k2 * e + k2' * (e' + m + k1) + (e' + k1' + m + 1) =\n    k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)", "by algebra"], ["proof (state)\nthis:\n  k1 * k2 * e + k2' * (e' + m + k1) + (e' + k1' + m + 1) =\n  k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)", "finally"], ["proof (chain)\npicking this:\n  k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)", "show \"k1 * k2 * n = k1 * k2 * e + ?e1 + (m + 1)\""], ["proof (prove)\nusing this:\n  k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)", "."], ["proof (state)\nthis:\n  k1 * k2 * n = k1 * k2 * e + (k2' * (e' + m + k1) + e' + k1') + (m + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. Q (ps', e)", "using Q"], ["proof (prove)\nusing this:\n  Q (ps', e)\n\ngoal (1 subgoal):\n 1. Q (ps', e)", "by force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m.\n     (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n      ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and>\n     (\\<exists>e.\n         (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n         Q (ps', e))\n\ngoal (1 subgoal):\n 1. \\<not> pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "case False"], ["proof (state)\nthis:\n  \\<not> pbval b ps\n\ngoal (1 subgoal):\n 1. \\<not> pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "with F[OF P dom]"], ["proof (chain)\npicking this:\n  \\<not> pbval b ps \\<Longrightarrow>\n  \\<exists>ps' ps'' m e e'.\n     (c\\<^sub>2, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> k2 * n' = k2 * e + e' + m \\<and> Q (ps', e)\n  \\<not> pbval b ps", "obtain ps' ps'' m e e' where d: \"(c\\<^sub>2, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\"\n            and orth: \"ps' ## ps''\" and m2:  \"k2 * n' = k2 * e + e' + m\" and Q:  \"Q (ps', e)\""], ["proof (prove)\nusing this:\n  \\<not> pbval b ps \\<Longrightarrow>\n  \\<exists>ps' ps'' m e e'.\n     (c\\<^sub>2, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> k2 * n' = k2 * e + e' + m \\<and> Q (ps', e)\n  \\<not> pbval b ps\n\ngoal (1 subgoal):\n 1. (\\<And>m ps' ps'' e e'.\n        \\<lbrakk>(c\\<^sub>2, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'';\n         ps' ## ps''; k2 * n' = k2 * e + e' + m; Q (ps', e)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (c\\<^sub>2, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\n  ps' ## ps''\n  k2 * n' = k2 * e + e' + m\n  Q (ps', e)\n\ngoal (1 subgoal):\n 1. \\<not> pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "from big_step_t3_post_dom_conv[OF d]"], ["proof (chain)\npicking this:\n  dom (ps' + ps'') = dom ps", "have klong: \"dom (ps' + ps'') = dom ps\""], ["proof (prove)\nusing this:\n  dom (ps' + ps'') = dom ps\n\ngoal (1 subgoal):\n 1. dom (ps' + ps'') = dom ps", "."], ["proof (state)\nthis:\n  dom (ps' + ps'') = dom ps\n\ngoal (1 subgoal):\n 1. \\<not> pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "from k1"], ["proof (chain)\npicking this:\n  0 < k1", "obtain k1' where k1': \"k1 = Suc k1'\""], ["proof (prove)\nusing this:\n  0 < k1\n\ngoal (1 subgoal):\n 1. (\\<And>k1'. k1 = Suc k1' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using gr0_implies_Suc"], ["proof (prove)\nusing this:\n  0 < k1\n  0 < ?n \\<Longrightarrow> \\<exists>m. ?n = Suc m\n\ngoal (1 subgoal):\n 1. (\\<And>k1'. k1 = Suc k1' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  k1 = Suc k1'\n\ngoal (1 subgoal):\n 1. \\<not> pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "from k2"], ["proof (chain)\npicking this:\n  0 < k2", "obtain k2' where k2': \"k2 = Suc k2'\""], ["proof (prove)\nusing this:\n  0 < k2\n\ngoal (1 subgoal):\n 1. (\\<And>k2'. k2 = Suc k2' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using gr0_implies_Suc"], ["proof (prove)\nusing this:\n  0 < k2\n  0 < ?n \\<Longrightarrow> \\<exists>m. ?n = Suc m\n\ngoal (1 subgoal):\n 1. (\\<And>k2'. k2 = Suc k2' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  k2 = Suc k2'\n\ngoal (1 subgoal):\n 1. \\<not> pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "let ?e2 = \"(k1' * (e' + m + k2) + e' + k2')\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pbval b ps \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "apply(rule exI[where x=ps'])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps'' m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "apply(rule exI[where x=ps''])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m.\n       (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n           Q (ps', e))", "apply(rule exI[where x=\"m+1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n     ps) \\<Rightarrow>\\<^sub>A m + 1 \\<Down> ps' + ps'' \\<and>\n    ps' ## ps'' \\<and>\n    (\\<exists>e.\n        (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n        Q (ps', e))", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n     ps) \\<Rightarrow>\\<^sub>A m + 1 \\<Down> ps' + ps''\n 2. ps' ## ps''\n 3. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "apply(rule big_step_t_part.IfFalse)"], ["proof (prove)\ngoal (7 subgoals):\n 1. vars b \\<subseteq> dom ps\n 2. dom (ps' + ps'') = dom ps\n 3. \\<not> pbval b ps\n 4. (c\\<^sub>2, ps) \\<Rightarrow>\\<^sub>A ?x8 \\<Down> ps' + ps''\n 5. m + 1 = ?x8 + 1\n 6. ps' ## ps''\n 7. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "apply (rule dom)"], ["proof (prove)\ngoal (6 subgoals):\n 1. dom (ps' + ps'') = dom ps\n 2. \\<not> pbval b ps\n 3. (c\\<^sub>2, ps) \\<Rightarrow>\\<^sub>A ?x8 \\<Down> ps' + ps''\n 4. m + 1 = ?x8 + 1\n 5. ps' ## ps''\n 6. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "apply fact"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<not> pbval b ps\n 2. (c\\<^sub>2, ps) \\<Rightarrow>\\<^sub>A ?x8 \\<Down> ps' + ps''\n 3. m + 1 = ?x8 + 1\n 4. ps' ## ps''\n 5. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "apply (rule False)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (c\\<^sub>2, ps) \\<Rightarrow>\\<^sub>A ?x8 \\<Down> ps' + ps''\n 2. m + 1 = ?x8 + 1\n 3. ps' ## ps''\n 4. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "apply (rule d)"], ["proof (prove)\ngoal (3 subgoals):\n 1. m + 1 = m + 1\n 2. ps' ## ps''\n 3. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. ps' ## ps''\n 2. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e.\n       (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n       Q (ps', e)", "apply(rule exI[where x=\"e\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)) \\<and>\n    Q (ps', e)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)\n 2. Q (ps', e)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + (m + 1)", "proof (rule exI[where x=\"?e2\"])"], ["proof (state)\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)", "have \"k1 * k2 * n = k1 * (k2*n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * (k2 * n)", "by auto"], ["proof (state)\nthis:\n  k1 * k2 * n = k1 * (k2 * n)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)", "also"], ["proof (state)\nthis:\n  k1 * k2 * n = k1 * (k2 * n)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)", "have \"\\<dots> = k1 * (k2*n' + k2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 * (k2 * n) = k1 * (k2 * n' + k2)", "unfolding Suc"], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 * (k2 * Suc n') = k1 * (k2 * n' + k2)", "by auto"], ["proof (state)\nthis:\n  k1 * (k2 * n) = k1 * (k2 * n' + k2)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)", "also"], ["proof (state)\nthis:\n  k1 * (k2 * n) = k1 * (k2 * n' + k2)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)", "have \"\\<dots> = k1 * (k2 * e + e' + m + k2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 * (k2 * n' + k2) = k1 * (k2 * e + e' + m + k2)", "unfolding m2"], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 * (k2 * e + e' + m + k2) = k1 * (k2 * e + e' + m + k2)", "by auto"], ["proof (state)\nthis:\n  k1 * (k2 * n' + k2) = k1 * (k2 * e + e' + m + k2)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)", "also"], ["proof (state)\nthis:\n  k1 * (k2 * n' + k2) = k1 * (k2 * e + e' + m + k2)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)", "have \"\\<dots> = k1 * k2 * e + k1* (e' + m + k2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 * (k2 * e + e' + m + k2) = k1 * k2 * e + k1 * (e' + m + k2)", "by algebra"], ["proof (state)\nthis:\n  k1 * (k2 * e + e' + m + k2) = k1 * k2 * e + k1 * (e' + m + k2)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)", "also"], ["proof (state)\nthis:\n  k1 * (k2 * e + e' + m + k2) = k1 * k2 * e + k1 * (e' + m + k2)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)", "have \"\\<dots> = k1 * k2 * e + k1' * (e' + m + k2) + (e' + m + k2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 * k2 * e + k1 * (e' + m + k2) =\n    k1 * k2 * e + k1' * (e' + m + k2) + (e' + m + k2)", "unfolding k1'"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc k1' * k2 * e + Suc k1' * (e' + m + k2) =\n    Suc k1' * k2 * e + k1' * (e' + m + k2) + (e' + m + k2)", "by simp"], ["proof (state)\nthis:\n  k1 * k2 * e + k1 * (e' + m + k2) =\n  k1 * k2 * e + k1' * (e' + m + k2) + (e' + m + k2)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)", "also"], ["proof (state)\nthis:\n  k1 * k2 * e + k1 * (e' + m + k2) =\n  k1 * k2 * e + k1' * (e' + m + k2) + (e' + m + k2)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)", "have \"\\<dots> = k1 * k2 * e + k1' * (e' + m + k2) + (e' + k2' + m + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 * k2 * e + k1' * (e' + m + k2) + (e' + m + k2) =\n    k1 * k2 * e + k1' * (e' + m + k2) + (e' + k2' + m + 1)", "unfolding k2'"], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 * Suc k2' * e + k1' * (e' + m + Suc k2') + (e' + m + Suc k2') =\n    k1 * Suc k2' * e + k1' * (e' + m + Suc k2') + (e' + k2' + m + 1)", "by simp"], ["proof (state)\nthis:\n  k1 * k2 * e + k1' * (e' + m + k2) + (e' + m + k2) =\n  k1 * k2 * e + k1' * (e' + m + k2) + (e' + k2' + m + 1)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)", "also"], ["proof (state)\nthis:\n  k1 * k2 * e + k1' * (e' + m + k2) + (e' + m + k2) =\n  k1 * k2 * e + k1' * (e' + m + k2) + (e' + k2' + m + 1)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)", "have \"\\<dots> = k1 *k2*e + (k1' * (e' + m + k2) + e' + k2') + (m+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 * k2 * e + k1' * (e' + m + k2) + (e' + k2' + m + 1) =\n    k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)", "by algebra"], ["proof (state)\nthis:\n  k1 * k2 * e + k1' * (e' + m + k2) + (e' + k2' + m + 1) =\n  k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)", "finally"], ["proof (chain)\npicking this:\n  k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)", "show \"k1 * k2 * n = k1 * k2 * e + ?e2 + (m + 1)\""], ["proof (prove)\nusing this:\n  k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)\n\ngoal (1 subgoal):\n 1. k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)", "."], ["proof (state)\nthis:\n  k1 * k2 * n = k1 * k2 * e + (k1' * (e' + m + k2) + e' + k2') + (m + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. Q (ps', e)", "using Q"], ["proof (prove)\nusing this:\n  Q (ps', e)\n\ngoal (1 subgoal):\n 1. Q (ps', e)", "by force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m.\n     (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n      ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and>\n     (\\<exists>e.\n         (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n         Q (ps', e))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m.\n     (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n      ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and>\n     (\\<exists>e.\n         (\\<exists>e'. k1 * k2 * n = k1 * k2 * e + e' + m) \\<and>\n         Q (ps', e))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                                    P (s, n) \\<and>\n                                    vars b \\<subseteq> dom s) \\<and>*\n                                $ 1}\n  IF b THEN c\\<^sub>1 ELSE c\\<^sub>2 { Q}\n\ngoal (6 subgoals):\n 1. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 2. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 3. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 4. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 5. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 6. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 2. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 3. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 4. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 5. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 6. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "case (Seq P C\\<^sub>1 Q C\\<^sub>2 R)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q}\n  \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q}\n  \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\n\ngoal (6 subgoals):\n 1. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 2. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 3. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 4. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 5. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 6. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "from Seq(3)[unfolded hoare3o_valid_def]"], ["proof (chain)\npicking this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        P (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (C\\<^sub>1,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))", "obtain k1 where\n    1: \"(\\<forall>ps n. P (ps, n) \\<longrightarrow> (\\<exists>ps' ps'' m e e'. (C\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> k1 * n = k1 * e + e' + m \\<and> Q (ps', e)))\"\n      and k10: \"k1 > 0\""], ["proof (prove)\nusing this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        P (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (C\\<^sub>1,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))\n\ngoal (1 subgoal):\n 1. (\\<And>k1.\n        \\<lbrakk>\\<forall>ps n.\n                    P (ps, n) \\<longrightarrow>\n                    (\\<exists>ps' ps'' m e e'.\n                        (C\\<^sub>1,\n                         ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                       ps'' \\<and>\n                        ps' ## ps'' \\<and>\n                        k1 * n = k1 * e + e' + m \\<and> Q (ps', e));\n         0 < k1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (C\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> k1 * n = k1 * e + e' + m \\<and> Q (ps', e))\n  0 < k1\n\ngoal (6 subgoals):\n 1. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 2. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 3. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 4. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 5. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 6. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "from Seq(4)[unfolded hoare3o_valid_def]"], ["proof (chain)\npicking this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        Q (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (C\\<^sub>2,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> R (ps', e))", "obtain k2 where \n    2: \" (\\<forall>ps n. Q (ps, n) \\<longrightarrow> (\\<exists>ps' ps'' m e e'. (C\\<^sub>2, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> k2 * n = k2 * e + e' + m \\<and> R (ps', e)))\"\n      and k20: \"k2 > 0\""], ["proof (prove)\nusing this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        Q (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (C\\<^sub>2,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> R (ps', e))\n\ngoal (1 subgoal):\n 1. (\\<And>k2.\n        \\<lbrakk>\\<forall>ps n.\n                    Q (ps, n) \\<longrightarrow>\n                    (\\<exists>ps' ps'' m e e'.\n                        (C\\<^sub>2,\n                         ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                       ps'' \\<and>\n                        ps' ## ps'' \\<and>\n                        k2 * n = k2 * e + e' + m \\<and> R (ps', e));\n         0 < k2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>ps n.\n     Q (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (C\\<^sub>2, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> k2 * n = k2 * e + e' + m \\<and> R (ps', e))\n  0 < k2\n\ngoal (6 subgoals):\n 1. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 2. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 3. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 4. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 5. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 6. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "from k10"], ["proof (chain)\npicking this:\n  0 < k1", "obtain k1' where k1': \"k1 = Suc k1'\""], ["proof (prove)\nusing this:\n  0 < k1\n\ngoal (1 subgoal):\n 1. (\\<And>k1'. k1 = Suc k1' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using gr0_implies_Suc"], ["proof (prove)\nusing this:\n  0 < k1\n  0 < ?n \\<Longrightarrow> \\<exists>m. ?n = Suc m\n\ngoal (1 subgoal):\n 1. (\\<And>k1'. k1 = Suc k1' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  k1 = Suc k1'\n\ngoal (6 subgoals):\n 1. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 2. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 3. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 4. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 5. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 6. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "from k20"], ["proof (chain)\npicking this:\n  0 < k2", "obtain k2' where k2': \"k2 = Suc k2'\""], ["proof (prove)\nusing this:\n  0 < k2\n\ngoal (1 subgoal):\n 1. (\\<And>k2'. k2 = Suc k2' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using gr0_implies_Suc"], ["proof (prove)\nusing this:\n  0 < k2\n  0 < ?n \\<Longrightarrow> \\<exists>m. ?n = Suc m\n\ngoal (1 subgoal):\n 1. (\\<And>k2'. k2 = Suc k2' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  k2 = Suc k2'\n\ngoal (6 subgoals):\n 1. \\<And>P C\\<^sub>1 Q C\\<^sub>2 R.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1 { Q};\n        \\<turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {Q} C\\<^sub>2 { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P}\n                         C\\<^sub>1;; C\\<^sub>2 { R}\n 2. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 3. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 4. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 5. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 6. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1;; C\\<^sub>2 { R}", "unfolding hoare3o_valid_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          P (ps, n) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (C\\<^sub>1;; C\\<^sub>2,\n               ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> R (ps', e))", "apply(rule exI[where x=\"k2*k1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k2 * k1 \\<and>\n    (\\<forall>ps n.\n        P (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (C\\<^sub>1;; C\\<^sub>2,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k2 * k1 * n = k2 * k1 * e + e' + m \\<and> R (ps', e)))", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < k2 * k1\n 2. \\<And>ps n.\n       P (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (C\\<^sub>1;; C\\<^sub>2,\n           ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k2 * k1 * n = k2 * k1 * e + e' + m \\<and> R (ps', e)", "fix ps n"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < k2 * k1\n 2. \\<And>ps n.\n       P (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (C\\<^sub>1;; C\\<^sub>2,\n           ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k2 * k1 * n = k2 * k1 * e + e' + m \\<and> R (ps', e)", "assume \"P (ps, n)\""], ["proof (state)\nthis:\n  P (ps, n)\n\ngoal (2 subgoals):\n 1. 0 < k2 * k1\n 2. \\<And>ps n.\n       P (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (C\\<^sub>1;; C\\<^sub>2,\n           ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k2 * k1 * n = k2 * k1 * e + e' + m \\<and> R (ps', e)", "with 1"], ["proof (chain)\npicking this:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (C\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> k1 * n = k1 * e + e' + m \\<and> Q (ps', e))\n  P (ps, n)", "obtain ps1' ps1'' m1 e1 e1' where C1: \"(C\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A m1 \\<Down> ps1' + ps1''\" and orth: \"ps1' ## ps1''\"\n          and m1: \"k1 * n = k1 * e1 + e1' + m1\"and Q: \"Q (ps1', e1)\""], ["proof (prove)\nusing this:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (C\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> k1 * n = k1 * e + e' + m \\<and> Q (ps', e))\n  P (ps, n)\n\ngoal (1 subgoal):\n 1. (\\<And>m1 ps1' ps1'' e1 e1'.\n        \\<lbrakk>(C\\<^sub>1,\n                  ps) \\<Rightarrow>\\<^sub>A m1 \\<Down> ps1' + ps1'';\n         ps1' ## ps1''; k1 * n = k1 * e1 + e1' + m1; Q (ps1', e1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (C\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A m1 \\<Down> ps1' + ps1''\n  ps1' ## ps1''\n  k1 * n = k1 * e1 + e1' + m1\n  Q (ps1', e1)\n\ngoal (2 subgoals):\n 1. 0 < k2 * k1\n 2. \\<And>ps n.\n       P (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (C\\<^sub>1;; C\\<^sub>2,\n           ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k2 * k1 * n = k2 * k1 * e + e' + m \\<and> R (ps', e)", "from Q and 2"], ["proof (chain)\npicking this:\n  Q (ps1', e1)\n  \\<forall>ps n.\n     Q (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (C\\<^sub>2, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> k2 * n = k2 * e + e' + m \\<and> R (ps', e))", "obtain ps2' ps2'' m2 e2 e2' where C2: \"(C\\<^sub>2, ps1') \\<Rightarrow>\\<^sub>A m2 \\<Down> ps2' + ps2''\" and orth2: \"ps2' ## ps2''\"\n        and m2: \"k2 * e1 = k2 * e2 + e2' + m2\" and R: \"R (ps2', e2)\""], ["proof (prove)\nusing this:\n  Q (ps1', e1)\n  \\<forall>ps n.\n     Q (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (C\\<^sub>2, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> k2 * n = k2 * e + e' + m \\<and> R (ps', e))\n\ngoal (1 subgoal):\n 1. (\\<And>m2 ps2' ps2'' e2 e2'.\n        \\<lbrakk>(C\\<^sub>2,\n                  ps1') \\<Rightarrow>\\<^sub>A m2 \\<Down> ps2' + ps2'';\n         ps2' ## ps2''; k2 * e1 = k2 * e2 + e2' + m2; R (ps2', e2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (C\\<^sub>2, ps1') \\<Rightarrow>\\<^sub>A m2 \\<Down> ps2' + ps2''\n  ps2' ## ps2''\n  k2 * e1 = k2 * e2 + e2' + m2\n  R (ps2', e2)\n\ngoal (2 subgoals):\n 1. 0 < k2 * k1\n 2. \\<And>ps n.\n       P (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (C\\<^sub>1;; C\\<^sub>2,\n           ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k2 * k1 * n = k2 * k1 * e + e' + m \\<and> R (ps', e)", "let ?ee = \"(k1 *e2'  + k2*e1' +k2'*m1+ k1'*m2)\""], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < k2 * k1\n 2. \\<And>ps n.\n       P (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (C\\<^sub>1;; C\\<^sub>2,\n           ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k2 * k1 * n = k2 * k1 * e + e' + m \\<and> R (ps', e)", "show \"\\<exists>ps' ps'' m e e'. (C\\<^sub>1;; C\\<^sub>2, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> k2 * k1 * n = k2 * k1 * e + e' + m \\<and> R (ps', e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m e e'.\n       (C\\<^sub>1;; C\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k2 * k1 * n = k2 * k1 * e + e' + m \\<and> R (ps', e)", "apply(rule exI[where x=ps2'])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps'' m e e'.\n       (C\\<^sub>1;; C\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps2' + ps'' \\<and>\n       ps2' ## ps'' \\<and>\n       k2 * k1 * n = k2 * k1 * e + e' + m \\<and> R (ps2', e)", "apply(rule exI[where x=\"ps2'' + ps1''\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m e e'.\n       (C\\<^sub>1;; C\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps2' + (ps2'' + ps1'') \\<and>\n       ps2' ## ps2'' + ps1'' \\<and>\n       k2 * k1 * n = k2 * k1 * e + e' + m \\<and> R (ps2', e)", "apply(rule exI[where x=\"m1+m2\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e e'.\n       (C\\<^sub>1;; C\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m1 +\n                                  m2 \\<Down> ps2' + (ps2'' + ps1'') \\<and>\n       ps2' ## ps2'' + ps1'' \\<and>\n       k2 * k1 * n = k2 * k1 * e + e' + (m1 + m2) \\<and> R (ps2', e)", "apply(rule exI[where x=\"e2\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e'.\n       (C\\<^sub>1;; C\\<^sub>2,\n        ps) \\<Rightarrow>\\<^sub>A m1 +\n                                  m2 \\<Down> ps2' + (ps2'' + ps1'') \\<and>\n       ps2' ## ps2'' + ps1'' \\<and>\n       k2 * k1 * n = k2 * k1 * e2 + e' + (m1 + m2) \\<and> R (ps2', e2)", "apply(rule exI[where x=\"?ee\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (C\\<^sub>1;; C\\<^sub>2,\n     ps) \\<Rightarrow>\\<^sub>A m1 + m2 \\<Down> ps2' + (ps2'' + ps1'') \\<and>\n    ps2' ## ps2'' + ps1'' \\<and>\n    k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) +\n    (m1 + m2) \\<and>\n    R (ps2', e2)", "proof safe"], ["proof (state)\ngoal (4 subgoals):\n 1. (C\\<^sub>1;; C\\<^sub>2,\n     ps) \\<Rightarrow>\\<^sub>A m1 + m2 \\<Down> ps2' + (ps2'' + ps1'')\n 2. ps2' ## ps2'' + ps1''\n 3. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 4. R (ps2', e2)", "have C2': \"(C\\<^sub>2, ps1' + ps1'') \\<Rightarrow>\\<^sub>A m2 \\<Down> ps2' + (ps2'' + ps1'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C\\<^sub>2,\n     ps1' + ps1'') \\<Rightarrow>\\<^sub>A m2 \\<Down> ps2' + (ps2'' + ps1'')", "apply(rule Framer2[OF C2, of ps1''])"], ["proof (prove)\ngoal (3 subgoals):\n 1. ps1' ## ps1''\n 2. ps1' + ps1'' = ps1' + ps1''\n 3. ps2' + (ps2'' + ps1'') = ps2' + ps2'' + ps1''", "apply fact"], ["proof (prove)\ngoal (2 subgoals):\n 1. ps1' + ps1'' = ps1' + ps1''\n 2. ps2' + (ps2'' + ps1'') = ps2' + ps2'' + ps1''", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. ps2' + (ps2'' + ps1'') = ps2' + ps2'' + ps1''", "using sep_add_assoc"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x ## ?y; ?y ## ?z; ?x ## ?z\\<rbrakk>\n  \\<Longrightarrow> ?x + ?y + ?z = ?x + (?y + ?z)\n\ngoal (1 subgoal):\n 1. ps2' + (ps2'' + ps1'') = ps2' + ps2'' + ps1''", "by (metis C2 big_step_t3_post_dom_conv map_convs(1) orth orth2 sep_add_commute sep_disj_addD1 sep_disj_commuteI sep_disj_fun_def)"], ["proof (state)\nthis:\n  (C\\<^sub>2,\n   ps1' + ps1'') \\<Rightarrow>\\<^sub>A m2 \\<Down> ps2' + (ps2'' + ps1'')\n\ngoal (4 subgoals):\n 1. (C\\<^sub>1;; C\\<^sub>2,\n     ps) \\<Rightarrow>\\<^sub>A m1 + m2 \\<Down> ps2' + (ps2'' + ps1'')\n 2. ps2' ## ps2'' + ps1''\n 3. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 4. R (ps2', e2)", "show \"(C\\<^sub>1;; C\\<^sub>2, ps) \\<Rightarrow>\\<^sub>A m1 + m2 \\<Down> ps2' + (ps2'' + ps1'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C\\<^sub>1;; C\\<^sub>2,\n     ps) \\<Rightarrow>\\<^sub>A m1 + m2 \\<Down> ps2' + (ps2'' + ps1'')", "using C1 C2'"], ["proof (prove)\nusing this:\n  (C\\<^sub>1, ps) \\<Rightarrow>\\<^sub>A m1 \\<Down> ps1' + ps1''\n  (C\\<^sub>2,\n   ps1' + ps1'') \\<Rightarrow>\\<^sub>A m2 \\<Down> ps2' + (ps2'' + ps1'')\n\ngoal (1 subgoal):\n 1. (C\\<^sub>1;; C\\<^sub>2,\n     ps) \\<Rightarrow>\\<^sub>A m1 + m2 \\<Down> ps2' + (ps2'' + ps1'')", "by auto"], ["proof (state)\nthis:\n  (C\\<^sub>1;; C\\<^sub>2,\n   ps) \\<Rightarrow>\\<^sub>A m1 + m2 \\<Down> ps2' + (ps2'' + ps1'')\n\ngoal (3 subgoals):\n 1. ps2' ## ps2'' + ps1''\n 2. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 3. R (ps2', e2)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. ps2' ## ps2'' + ps1''\n 2. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 3. R (ps2', e2)", "show \"ps2' ## ps2'' + ps1''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ps2' ## ps2'' + ps1''", "by (metis C2 big_step_t3_post_dom_conv map_convs(1) orth orth2 sep_disj_addI3 sep_disj_fun_def)"], ["proof (state)\nthis:\n  ps2' ## ps2'' + ps1''\n\ngoal (2 subgoals):\n 1. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 2. R (ps2', e2)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 2. R (ps2', e2)", "have \"k2 * k1 * n = k2 * (k1 * n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k2 * k1 * n = k2 * (k1 * n)", "by auto"], ["proof (state)\nthis:\n  k2 * k1 * n = k2 * (k1 * n)\n\ngoal (2 subgoals):\n 1. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 2. R (ps2', e2)", "also"], ["proof (state)\nthis:\n  k2 * k1 * n = k2 * (k1 * n)\n\ngoal (2 subgoals):\n 1. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 2. R (ps2', e2)", "have \"\\<dots> = k2 * (k1 * e1 + e1' + m1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k2 * (k1 * n) = k2 * (k1 * e1 + e1' + m1)", "using m1"], ["proof (prove)\nusing this:\n  k1 * n = k1 * e1 + e1' + m1\n\ngoal (1 subgoal):\n 1. k2 * (k1 * n) = k2 * (k1 * e1 + e1' + m1)", "by auto"], ["proof (state)\nthis:\n  k2 * (k1 * n) = k2 * (k1 * e1 + e1' + m1)\n\ngoal (2 subgoals):\n 1. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 2. R (ps2', e2)", "also"], ["proof (state)\nthis:\n  k2 * (k1 * n) = k2 * (k1 * e1 + e1' + m1)\n\ngoal (2 subgoals):\n 1. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 2. R (ps2', e2)", "have \"\\<dots> = k1 * k2 * e1 + k2 * (e1' + m1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k2 * (k1 * e1 + e1' + m1) = k1 * k2 * e1 + k2 * (e1' + m1)", "by algebra"], ["proof (state)\nthis:\n  k2 * (k1 * e1 + e1' + m1) = k1 * k2 * e1 + k2 * (e1' + m1)\n\ngoal (2 subgoals):\n 1. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 2. R (ps2', e2)", "also"], ["proof (state)\nthis:\n  k2 * (k1 * e1 + e1' + m1) = k1 * k2 * e1 + k2 * (e1' + m1)\n\ngoal (2 subgoals):\n 1. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 2. R (ps2', e2)", "have \"\\<dots> = k1 * (k2 * e2 + e2' + m2) + k2 * (e1' + m1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 * k2 * e1 + k2 * (e1' + m1) =\n    k1 * (k2 * e2 + e2' + m2) + k2 * (e1' + m1)", "using m2"], ["proof (prove)\nusing this:\n  k2 * e1 = k2 * e2 + e2' + m2\n\ngoal (1 subgoal):\n 1. k1 * k2 * e1 + k2 * (e1' + m1) =\n    k1 * (k2 * e2 + e2' + m2) + k2 * (e1' + m1)", "by auto"], ["proof (state)\nthis:\n  k1 * k2 * e1 + k2 * (e1' + m1) =\n  k1 * (k2 * e2 + e2' + m2) + k2 * (e1' + m1)\n\ngoal (2 subgoals):\n 1. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 2. R (ps2', e2)", "also"], ["proof (state)\nthis:\n  k1 * k2 * e1 + k2 * (e1' + m1) =\n  k1 * (k2 * e2 + e2' + m2) + k2 * (e1' + m1)\n\ngoal (2 subgoals):\n 1. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 2. R (ps2', e2)", "have \"\\<dots> = k2 * k1 * e2 + (k1 *e2'  + k2*e1' +k2*m1+ k1*m2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 * (k2 * e2 + e2' + m2) + k2 * (e1' + m1) =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2 * m1 + k1 * m2)", "by algebra"], ["proof (state)\nthis:\n  k1 * (k2 * e2 + e2' + m2) + k2 * (e1' + m1) =\n  k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2 * m1 + k1 * m2)\n\ngoal (2 subgoals):\n 1. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 2. R (ps2', e2)", "also"], ["proof (state)\nthis:\n  k1 * (k2 * e2 + e2' + m2) + k2 * (e1' + m1) =\n  k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2 * m1 + k1 * m2)\n\ngoal (2 subgoals):\n 1. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 2. R (ps2', e2)", "have \"\\<dots> = k2 * k1 * e2 + (k1 *e2'  + k2*e1' +k2'*m1+m1+ k1'*m2+m2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2 * m1 + k1 * m2) =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + m1 + k1' * m2 + m2)", "unfolding k1' k2'"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc k2' * Suc k1' * e2 +\n    (Suc k1' * e2' + Suc k2' * e1' + Suc k2' * m1 + Suc k1' * m2) =\n    Suc k2' * Suc k1' * e2 +\n    (Suc k1' * e2' + Suc k2' * e1' + k2' * m1 + m1 + k1' * m2 + m2)", "by auto"], ["proof (state)\nthis:\n  k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2 * m1 + k1 * m2) =\n  k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + m1 + k1' * m2 + m2)\n\ngoal (2 subgoals):\n 1. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 2. R (ps2', e2)", "also"], ["proof (state)\nthis:\n  k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2 * m1 + k1 * m2) =\n  k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + m1 + k1' * m2 + m2)\n\ngoal (2 subgoals):\n 1. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 2. R (ps2', e2)", "have \"\\<dots> = k2 * k1 * e2 + (k1 *e2'  + k2*e1' +k2'*m1+ k1'*m2)+(m1+m2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + m1 + k1' * m2 + m2) =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)", "by auto"], ["proof (state)\nthis:\n  k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + m1 + k1' * m2 + m2) =\n  k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n\ngoal (2 subgoals):\n 1. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n 2. R (ps2', e2)", "finally"], ["proof (chain)\npicking this:\n  k2 * k1 * n =\n  k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)", "show \"k2 * k1 * n = k2 * k1 * e2 + ?ee + (m1 + m2)\""], ["proof (prove)\nusing this:\n  k2 * k1 * n =\n  k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n\ngoal (1 subgoal):\n 1. k2 * k1 * n =\n    k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)", "."], ["proof (state)\nthis:\n  k2 * k1 * n =\n  k2 * k1 * e2 + (k1 * e2' + k2 * e1' + k2' * m1 + k1' * m2) + (m1 + m2)\n\ngoal (1 subgoal):\n 1. R (ps2', e2)", "qed fact"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m e e'.\n     (C\\<^sub>1;; C\\<^sub>2,\n      ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> k2 * k1 * n = k2 * k1 * e + e' + m \\<and> R (ps', e)\n\ngoal (1 subgoal):\n 1. 0 < k2 * k1", "qed (simp add: k10 k20)"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} C\\<^sub>1;; C\\<^sub>2 { R}\n\ngoal (5 subgoals):\n 1. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 2. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 3. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 4. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 5. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 2. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 3. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 4. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 5. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "case (While P b C)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n                                   P (s, n) \\<and> lmaps_to_axpr b True s}\n                               C { (\\<lambda>(s, n).\n P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                                   $ 1}\n  \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n                                   case a of\n                                   (s, n) \\<Rightarrow>\n                                     P (s, n) \\<and> lmaps_to_axpr b True s}\n  C { (\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n      $ 1}\n\ngoal (5 subgoals):\n 1. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 2. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 3. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 4. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 5. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "{"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n                                   P (s, n) \\<and> lmaps_to_axpr b True s}\n                               C { (\\<lambda>(s, n).\n P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                                   $ 1}\n  \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n                                   case a of\n                                   (s, n) \\<Rightarrow>\n                                     P (s, n) \\<and> lmaps_to_axpr b True s}\n  C { (\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n      $ 1}\n\ngoal (5 subgoals):\n 1. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 2. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 3. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 4. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 5. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "assume \"\\<exists>k>0. \\<forall>ps n. (case (ps, n) of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s) \\<longrightarrow>\n                 (\\<exists>ps' ps'' m e e'. (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>* $ 1) (ps', e))\""], ["proof (state)\nthis:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        (case (ps, n) of\n         (s, n) \\<Rightarrow>\n           P (s, n) \\<and> lmaps_to_axpr b True s) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * n = k * e + e' + m \\<and>\n            ((\\<lambda>(s, n).\n                 P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n             $ 1)\n             (ps', e))\n\ngoal (5 subgoals):\n 1. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 2. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 3. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 4. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 5. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "then"], ["proof (chain)\npicking this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        (case (ps, n) of\n         (s, n) \\<Rightarrow>\n           P (s, n) \\<and> lmaps_to_axpr b True s) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * n = k * e + e' + m \\<and>\n            ((\\<lambda>(s, n).\n                 P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n             $ 1)\n             (ps', e))", "obtain k where  While2: \"\\<forall>ps n. (case (ps, n) of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s) \\<longrightarrow> (\\<exists>ps' ps'' m e e'. (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>* $ 1) (ps', e))\" and k: \"k>0\""], ["proof (prove)\nusing this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        (case (ps, n) of\n         (s, n) \\<Rightarrow>\n           P (s, n) \\<and> lmaps_to_axpr b True s) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * n = k * e + e' + m \\<and>\n            ((\\<lambda>(s, n).\n                 P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n             $ 1)\n             (ps', e))\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>\\<forall>ps n.\n                    (case (ps, n) of\n                     (s, n) \\<Rightarrow>\n                       P (s, n) \\<and>\n                       lmaps_to_axpr b True s) \\<longrightarrow>\n                    (\\<exists>ps' ps'' m e e'.\n                        (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                          ps'' \\<and>\n                        ps' ## ps'' \\<and>\n                        k * n = k * e + e' + m \\<and>\n                        ((\\<lambda>(s, n).\n                             P (s, n) \\<and>\n                             vars b \\<subseteq> dom s) \\<and>*\n                         $ 1)\n                         (ps', e));\n         0 < k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>ps n.\n     (case (ps, n) of\n      (s, n) \\<Rightarrow>\n        P (s, n) \\<and> lmaps_to_axpr b True s) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and>\n         k * n = k * e + e' + m \\<and>\n         ((\\<lambda>(s, n).\n              P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n          $ 1)\n          (ps', e))\n  0 < k\n\ngoal (5 subgoals):\n 1. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 2. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 3. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 4. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 5. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "from k"], ["proof (chain)\npicking this:\n  0 < k", "obtain k' where k': \"k = Suc k'\""], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. (\\<And>k'. k = Suc k' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using gr0_implies_Suc"], ["proof (prove)\nusing this:\n  0 < k\n  0 < ?n \\<Longrightarrow> \\<exists>m. ?n = Suc m\n\ngoal (1 subgoal):\n 1. (\\<And>k'. k = Suc k' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  k = Suc k'\n\ngoal (5 subgoals):\n 1. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 2. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 3. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 4. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 5. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "have \"\\<exists>k>0. \\<forall>ps n. ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>* $ 1) (ps, n) \\<longrightarrow>\n                 (\\<exists>ps' ps'' m e e'.\n                     (WHILE b DO C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n                     ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> (case (ps', e) of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          ((\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1)\n           (ps, n) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (WHILE b DO C,\n               ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and>\n              k * n = k * e + e' + m \\<and>\n              (case (ps', e) of\n               (s, n) \\<Rightarrow>\n                 P (s, n) \\<and> lmaps_to_axpr b False s))", "(* \n    have \"\\<exists>k>0. \\<forall>ps n. ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>* $ 1) (ps, n) \\<longrightarrow> (\\<exists>ps' m. (WHILE b DO C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and> m \\<le> k * n \\<and> (case (ps', n - m) of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s))\"\n   *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          ((\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1)\n           (ps, n) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (WHILE b DO C,\n               ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and>\n              k * n = k * e + e' + m \\<and>\n              (case (ps', e) of\n               (s, n) \\<Rightarrow>\n                 P (s, n) \\<and> lmaps_to_axpr b False s))", "proof (rule exI[where x=k], safe, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < k\n 2. \\<And>ps n.\n       ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n        $ 1)\n        (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (WHILE b DO C,\n           ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * n = k * e + e' + m \\<and>\n          P (ps', e) \\<and> lmaps_to_axpr b False ps'", "case (2 ps n)"], ["proof (state)\nthis:\n  ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>* $ 1)\n   (ps, n)\n\ngoal (2 subgoals):\n 1. 0 < k\n 2. \\<And>ps n.\n       ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n        $ 1)\n        (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (WHILE b DO C,\n           ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * n = k * e + e' + m \\<and>\n          P (ps', e) \\<and> lmaps_to_axpr b False ps'", "from 2"], ["proof (chain)\npicking this:\n  ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>* $ 1)\n   (ps, n)", "show ?case"], ["proof (prove)\nusing this:\n  ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>* $ 1)\n   (ps, n)\n\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * n = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "proof(induct n arbitrary: ps rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x ps.\n       \\<lbrakk>\\<And>y ps.\n                   \\<lbrakk>y < x;\n                    ((\\<lambda>(s, n).\n                         P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                     $ 1)\n                     (ps, y)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n  (WHILE b DO C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n  ps' ## ps'' \\<and>\n  k * y = k * e + e' + m \\<and> P (ps', e) \\<and> lmaps_to_axpr b False ps';\n        ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n         $ 1)\n         (ps, x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (WHILE b DO C,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            k * x = k * e + e' + m \\<and>\n                            P (ps', e) \\<and> lmaps_to_axpr b False ps'", "case (less x ps3)"], ["proof (state)\nthis:\n  \\<lbrakk>?y < x;\n   ((\\<lambda>a.\n        case a of\n        (s, n) \\<Rightarrow>\n          P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n    $ 1)\n    (?ps, ?y)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                       (WHILE b DO C,\n                        ?ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                       ps'' \\<and>\n                       ps' ## ps'' \\<and>\n                       k * ?y = k * e + e' + m \\<and>\n                       P (ps', e) \\<and> lmaps_to_axpr b False ps'\n  ((\\<lambda>a.\n       case a of\n       (s, n) \\<Rightarrow>\n         P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n   $ 1)\n   (ps3, x)\n\ngoal (1 subgoal):\n 1. \\<And>x ps.\n       \\<lbrakk>\\<And>y ps.\n                   \\<lbrakk>y < x;\n                    ((\\<lambda>(s, n).\n                         P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                     $ 1)\n                     (ps, y)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n  (WHILE b DO C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n  ps' ## ps'' \\<and>\n  k * y = k * e + e' + m \\<and> P (ps', e) \\<and> lmaps_to_axpr b False ps';\n        ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n         $ 1)\n         (ps, x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (WHILE b DO C,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            k * x = k * e + e' + m \\<and>\n                            P (ps', e) \\<and> lmaps_to_axpr b False ps'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "proof(cases \"pbval b ps3\")"], ["proof (state)\ngoal (2 subgoals):\n 1. pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'\n 2. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "case True"], ["proof (state)\nthis:\n  pbval b ps3\n\ngoal (2 subgoals):\n 1. pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'\n 2. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "from less(2)"], ["proof (chain)\npicking this:\n  ((\\<lambda>a.\n       case a of\n       (s, n) \\<Rightarrow>\n         P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n   $ 1)\n   (ps3, x)", "obtain x' where P: \"P (ps3, x')\" and dom: \"vars b \\<subseteq> dom ps3\"  and Suc: \"x = Suc x'\""], ["proof (prove)\nusing this:\n  ((\\<lambda>a.\n       case a of\n       (s, n) \\<Rightarrow>\n         P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n   $ 1)\n   (ps3, x)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>P (ps3, x'); vars b \\<subseteq> dom ps3;\n         x = Suc x'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding sep_conj_def dollar_def"], ["proof (prove)\nusing this:\n  \\<exists>xa y.\n     xa ## y \\<and>\n     (ps3, x) = xa + y \\<and>\n     (case xa of\n      (s, n) \\<Rightarrow> P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>\n     (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = 1)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>P (ps3, x'); vars b \\<subseteq> dom ps3;\n         x = Suc x'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P (ps3, x')\n  vars b \\<subseteq> dom ps3\n  x = Suc x'\n\ngoal (2 subgoals):\n 1. pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'\n 2. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "from P dom True"], ["proof (chain)\npicking this:\n  P (ps3, x')\n  vars b \\<subseteq> dom ps3\n  pbval b ps3", "have \n           g: \"((\\<lambda>(s, n). P (s, n) \\<and> lmaps_to_axpr b True s)) (ps3, x')\""], ["proof (prove)\nusing this:\n  P (ps3, x')\n  vars b \\<subseteq> dom ps3\n  pbval b ps3\n\ngoal (1 subgoal):\n 1. case (ps3, x') of\n    (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s", "unfolding dollar_def"], ["proof (prove)\nusing this:\n  P (ps3, x')\n  vars b \\<subseteq> dom ps3\n  pbval b ps3\n\ngoal (1 subgoal):\n 1. case (ps3, x') of\n    (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s", "by auto"], ["proof (state)\nthis:\n  case (ps3, x') of\n  (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s\n\ngoal (2 subgoals):\n 1. pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'\n 2. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "from While2 g"], ["proof (chain)\npicking this:\n  \\<forall>ps n.\n     (case (ps, n) of\n      (s, n) \\<Rightarrow>\n        P (s, n) \\<and> lmaps_to_axpr b True s) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and>\n         k * n = k * e + e' + m \\<and>\n         ((\\<lambda>(s, n).\n              P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n          $ 1)\n          (ps', e))\n  case (ps3, x') of\n  (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s", "obtain ps3' ps3'' m e e' where C: \"(C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps3' + ps3''\" and orth: \"ps3' ## ps3''\"\n                and x: \"k * x' = k * e + e' + m\" and P': \"((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>* $ 1) (ps3', e)\""], ["proof (prove)\nusing this:\n  \\<forall>ps n.\n     (case (ps, n) of\n      (s, n) \\<Rightarrow>\n        P (s, n) \\<and> lmaps_to_axpr b True s) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and>\n         k * n = k * e + e' + m \\<and>\n         ((\\<lambda>(s, n).\n              P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n          $ 1)\n          (ps', e))\n  case (ps3, x') of\n  (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s\n\ngoal (1 subgoal):\n 1. (\\<And>m ps3' ps3'' e e'.\n        \\<lbrakk>(C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps3' + ps3'';\n         ps3' ## ps3''; k * x' = k * e + e' + m;\n         ((\\<lambda>(s, n).\n              P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n          $ 1)\n          (ps3', e)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps3' + ps3''\n  ps3' ## ps3''\n  k * x' = k * e + e' + m\n  ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>* $ 1)\n   (ps3', e)\n\ngoal (2 subgoals):\n 1. pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'\n 2. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "then"], ["proof (chain)\npicking this:\n  (C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps3' + ps3''\n  ps3' ## ps3''\n  k * x' = k * e + e' + m\n  ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>* $ 1)\n   (ps3', e)", "obtain x''' where P'': \"P (ps3', x''')\" and domb: \"vars b \\<subseteq> dom ps3'\" and Suc'': \"e = Suc x'''\""], ["proof (prove)\nusing this:\n  (C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps3' + ps3''\n  ps3' ## ps3''\n  k * x' = k * e + e' + m\n  ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>* $ 1)\n   (ps3', e)\n\ngoal (1 subgoal):\n 1. (\\<And>x'''.\n        \\<lbrakk>P (ps3', x'''); vars b \\<subseteq> dom ps3';\n         e = Suc x'''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding sep_conj_def dollar_def"], ["proof (prove)\nusing this:\n  (C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps3' + ps3''\n  ps3' ## ps3''\n  k * x' = k * e + e' + m\n  \\<exists>x y.\n     x ## y \\<and>\n     (ps3', e) = x + y \\<and>\n     (case x of\n      (s, n) \\<Rightarrow> P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>\n     (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = 1)\n\ngoal (1 subgoal):\n 1. (\\<And>x'''.\n        \\<lbrakk>P (ps3', x'''); vars b \\<subseteq> dom ps3';\n         e = Suc x'''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P (ps3', x''')\n  vars b \\<subseteq> dom ps3'\n  e = Suc x'''\n\ngoal (2 subgoals):\n 1. pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'\n 2. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "from C big_step_t3_post_dom_conv"], ["proof (chain)\npicking this:\n  (C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps3' + ps3''\n  (?c, ?ps) \\<Rightarrow>\\<^sub>A ?t \\<Down> ?ps' \\<Longrightarrow>\n  dom ?ps' = dom ?ps", "have \"dom ps3 = dom (ps3' + ps3'')\""], ["proof (prove)\nusing this:\n  (C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps3' + ps3''\n  (?c, ?ps) \\<Rightarrow>\\<^sub>A ?t \\<Down> ?ps' \\<Longrightarrow>\n  dom ?ps' = dom ?ps\n\ngoal (1 subgoal):\n 1. dom ps3 = dom (ps3' + ps3'')", "by simp"], ["proof (state)\nthis:\n  dom ps3 = dom (ps3' + ps3'')\n\ngoal (2 subgoals):\n 1. pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'\n 2. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "with dom"], ["proof (chain)\npicking this:\n  vars b \\<subseteq> dom ps3\n  dom ps3 = dom (ps3' + ps3'')", "have dom': \"vars b \\<subseteq> dom (ps3' + ps3'')\""], ["proof (prove)\nusing this:\n  vars b \\<subseteq> dom ps3\n  dom ps3 = dom (ps3' + ps3'')\n\ngoal (1 subgoal):\n 1. vars b \\<subseteq> dom (ps3' + ps3'')", "by auto"], ["proof (state)\nthis:\n  vars b \\<subseteq> dom (ps3' + ps3'')\n\ngoal (2 subgoals):\n 1. pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'\n 2. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "from C big_step_t3_gt0"], ["proof (chain)\npicking this:\n  (C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps3' + ps3''\n  (?C, ?ps) \\<Rightarrow>\\<^sub>A ?x \\<Down> ?ps' \\<Longrightarrow> 0 < ?x", "have gt0: \"m > 0\""], ["proof (prove)\nusing this:\n  (C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps3' + ps3''\n  (?C, ?ps) \\<Rightarrow>\\<^sub>A ?x \\<Down> ?ps' \\<Longrightarrow> 0 < ?x\n\ngoal (1 subgoal):\n 1. 0 < m", "by auto"], ["proof (state)\nthis:\n  0 < m\n\ngoal (2 subgoals):\n 1. pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'\n 2. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "have \"e < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e < x", "using  x Suc gt0"], ["proof (prove)\nusing this:\n  k * x' = k * e + e' + m\n  x = Suc x'\n  0 < m\n\ngoal (1 subgoal):\n 1. e < x", "by (metis k le_add1 le_less_trans less_SucI less_add_same_cancel1 nat_mult_less_cancel1)"], ["proof (state)\nthis:\n  e < x\n\ngoal (2 subgoals):\n 1. pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'\n 2. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "(*have \"\\<exists>ps' m. (WHILE b DO C, ps3') \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and> m \\<le> k * (x - (1 + m)) \\<and> P (ps', (x - (1 + m)) - m) \\<and> vars b \\<subseteq> dom ps' \\<and> \\<not> pbval b ps'\"\n           *)"], ["proof (state)\nthis:\n  e < x\n\ngoal (2 subgoals):\n 1. pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'\n 2. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "have \"\\<exists>ps' ps'' m e2 e2'. (WHILE b DO C, ps3') \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> k * e = k * e2 + e2' + m \\<and> P (ps', e2) \\<and> lmaps_to_axpr b False ps'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m e2 e2'.\n       (WHILE b DO C,\n        ps3') \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * e = k * e2 + e2' + m \\<and>\n       P (ps', e2) \\<and> lmaps_to_axpr b False ps'", "apply(rule less(1))"], ["proof (prove)\ngoal (2 subgoals):\n 1. e < x\n 2. ((\\<lambda>a.\n         case a of\n         (s, n) \\<Rightarrow>\n           P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n     $ 1)\n     (ps3', e)", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>a.\n         case a of\n         (s, n) \\<Rightarrow>\n           P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n     $ 1)\n     (ps3', e)", "by fact"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m e2 e2'.\n     (WHILE b DO C, ps3') \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and>\n     k * e = k * e2 + e2' + m \\<and>\n     P (ps', e2) \\<and> lmaps_to_axpr b False ps'\n\ngoal (2 subgoals):\n 1. pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'\n 2. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "then"], ["proof (chain)\npicking this:\n  \\<exists>ps' ps'' m e2 e2'.\n     (WHILE b DO C, ps3') \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and>\n     k * e = k * e2 + e2' + m \\<and>\n     P (ps', e2) \\<and> lmaps_to_axpr b False ps'", "obtain ps4' ps4'' mt et et' where w: \"((WHILE b DO C, ps3') \\<Rightarrow>\\<^sub>A mt \\<Down> ps4' + ps4'')\"\n              and ortho: \"ps4' ## ps4''\" and m'': \"k * e = k * et + et' + mt\"\n              and P'': \"P (ps4', et)\" and dom'': \"vars b \\<subseteq> dom ps4'\" and b'': \"\\<not> pbval b ps4'\""], ["proof (prove)\nusing this:\n  \\<exists>ps' ps'' m e2 e2'.\n     (WHILE b DO C, ps3') \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and>\n     k * e = k * e2 + e2' + m \\<and>\n     P (ps', e2) \\<and> lmaps_to_axpr b False ps'\n\ngoal (1 subgoal):\n 1. (\\<And>mt ps4' ps4'' et et'.\n        \\<lbrakk>(WHILE b DO C,\n                  ps3') \\<Rightarrow>\\<^sub>A mt \\<Down> ps4' + ps4'';\n         ps4' ## ps4''; k * e = k * et + et' + mt; P (ps4', et);\n         vars b \\<subseteq> dom ps4'; \\<not> pbval b ps4'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (WHILE b DO C, ps3') \\<Rightarrow>\\<^sub>A mt \\<Down> ps4' + ps4''\n  ps4' ## ps4''\n  k * e = k * et + et' + mt\n  P (ps4', et)\n  vars b \\<subseteq> dom ps4'\n  \\<not> pbval b ps4'\n\ngoal (2 subgoals):\n 1. pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'\n 2. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "have \"ps4'' ## ps3''\" and \"ps4' ## ps3''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ps4'' ## ps3'' &&& ps4' ## ps3''", "by (metis big_step_t3_post_dom_conv domain_conv orth ortho sep_add_disjD sep_disj_fun_def w)+"], ["proof (state)\nthis:\n  ps4'' ## ps3''\n  ps4' ## ps3''\n\ngoal (2 subgoals):\n 1. pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'\n 2. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "apply(rule exI[where x=\"ps4'\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps'' m e e'.\n       (WHILE b DO C,\n        ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps4' + ps'' \\<and>\n       ps4' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps4', e) \\<and> lmaps_to_axpr b False ps4'", "apply(rule exI[where x=\"(ps4'' +  ps3'')\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m e e'.\n       (WHILE b DO C,\n        ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps4' + (ps4'' + ps3'') \\<and>\n       ps4' ## ps4'' + ps3'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps4', e) \\<and> lmaps_to_axpr b False ps4'", "apply(rule exI[where x=\"1 + m + mt\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e e'.\n       (WHILE b DO C,\n        ps3) \\<Rightarrow>\\<^sub>A 1 + m +\n                                   mt \\<Down> ps4' + (ps4'' + ps3'') \\<and>\n       ps4' ## ps4'' + ps3'' \\<and>\n       k * x = k * e + e' + (1 + m + mt) \\<and>\n       P (ps4', e) \\<and> lmaps_to_axpr b False ps4'", "apply(rule exI[where x=\"et\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e'.\n       (WHILE b DO C,\n        ps3) \\<Rightarrow>\\<^sub>A 1 + m +\n                                   mt \\<Down> ps4' + (ps4'' + ps3'') \\<and>\n       ps4' ## ps4'' + ps3'' \\<and>\n       k * x = k * et + e' + (1 + m + mt) \\<and>\n       P (ps4', et) \\<and> lmaps_to_axpr b False ps4'", "apply(rule exI[where x=\" et'  + k' + e'\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (WHILE b DO C,\n     ps3) \\<Rightarrow>\\<^sub>A 1 + m +\n                                mt \\<Down> ps4' + (ps4'' + ps3'') \\<and>\n    ps4' ## ps4'' + ps3'' \\<and>\n    k * x = k * et + (et' + k' + e') + (1 + m + mt) \\<and>\n    P (ps4', et) \\<and> lmaps_to_axpr b False ps4'", "proof (safe)"], ["proof (state)\ngoal (5 subgoals):\n 1. (WHILE b DO C,\n     ps3) \\<Rightarrow>\\<^sub>A 1 + m + mt \\<Down> ps4' + (ps4'' + ps3'')\n 2. ps4' ## ps4'' + ps3''\n 3. k * x = k * et + (et' + k' + e') + (1 + m + mt)\n 4. P (ps4', et)\n 5. lmaps_to_axpr b False ps4'", "have \"(WHILE b DO C, ps3' + ps3'') \\<Rightarrow>\\<^sub>A mt \\<Down> ps4' + (ps4'' +  ps3'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (WHILE b DO C,\n     ps3' + ps3'') \\<Rightarrow>\\<^sub>A mt \\<Down> ps4' + (ps4'' + ps3'')", "apply(rule Framer2[OF w, of ps3''])"], ["proof (prove)\ngoal (3 subgoals):\n 1. ps3' ## ps3''\n 2. ps3' + ps3'' = ps3' + ps3''\n 3. ps4' + (ps4'' + ps3'') = ps4' + ps4'' + ps3''", "apply fact"], ["proof (prove)\ngoal (2 subgoals):\n 1. ps3' + ps3'' = ps3' + ps3''\n 2. ps4' + (ps4'' + ps3'') = ps4' + ps4'' + ps3''", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. ps4' + (ps4'' + ps3'') = ps4' + ps4'' + ps3''", "apply(rule sep_add_assoc[symmetric])"], ["proof (prove)\ngoal (3 subgoals):\n 1. ps4' ## ps4''\n 2. ps4'' ## ps3''\n 3. ps4' ## ps3''", "by fact+"], ["proof (state)\nthis:\n  (WHILE b DO C,\n   ps3' + ps3'') \\<Rightarrow>\\<^sub>A mt \\<Down> ps4' + (ps4'' + ps3'')\n\ngoal (5 subgoals):\n 1. (WHILE b DO C,\n     ps3) \\<Rightarrow>\\<^sub>A 1 + m + mt \\<Down> ps4' + (ps4'' + ps3'')\n 2. ps4' ## ps4'' + ps3''\n 3. k * x = k * et + (et' + k' + e') + (1 + m + mt)\n 4. P (ps4', et)\n 5. lmaps_to_axpr b False ps4'", "show \"(WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A 1 + m + mt \\<Down> ps4' + (ps4'' +  ps3'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (WHILE b DO C,\n     ps3) \\<Rightarrow>\\<^sub>A 1 + m + mt \\<Down> ps4' + (ps4'' + ps3'')", "apply(rule WhileTrue)"], ["proof (prove)\ngoal (5 subgoals):\n 1. pbval b ps3\n 2. vars b \\<subseteq> dom ps3\n 3. (C, ps3) \\<Rightarrow>\\<^sub>A ?x \\<Down> ?s2.0\n 4. (WHILE b DO C,\n     ?s2.0) \\<Rightarrow>\\<^sub>A ?y \\<Down> ps4' + (ps4'' + ps3'')\n 5. 1 + ?x + ?y = 1 + m + mt", "apply fact"], ["proof (prove)\ngoal (4 subgoals):\n 1. vars b \\<subseteq> dom ps3\n 2. (C, ps3) \\<Rightarrow>\\<^sub>A ?x \\<Down> ?s2.0\n 3. (WHILE b DO C,\n     ?s2.0) \\<Rightarrow>\\<^sub>A ?y \\<Down> ps4' + (ps4'' + ps3'')\n 4. 1 + ?x + ?y = 1 + m + mt", "apply fact"], ["proof (prove)\ngoal (3 subgoals):\n 1. (C, ps3) \\<Rightarrow>\\<^sub>A ?x \\<Down> ?s2.0\n 2. (WHILE b DO C,\n     ?s2.0) \\<Rightarrow>\\<^sub>A ?y \\<Down> ps4' + (ps4'' + ps3'')\n 3. 1 + ?x + ?y = 1 + m + mt", "apply (fact C)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (WHILE b DO C,\n     ps3' + ps3'') \\<Rightarrow>\\<^sub>A ?y \\<Down> ps4' + (ps4'' + ps3'')\n 2. 1 + m + ?y = 1 + m + mt", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + m + mt = 1 + m + mt", "by auto"], ["proof (state)\nthis:\n  (WHILE b DO C,\n   ps3) \\<Rightarrow>\\<^sub>A 1 + m + mt \\<Down> ps4' + (ps4'' + ps3'')\n\ngoal (4 subgoals):\n 1. ps4' ## ps4'' + ps3''\n 2. k * x = k * et + (et' + k' + e') + (1 + m + mt)\n 3. P (ps4', et)\n 4. lmaps_to_axpr b False ps4'", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. ps4' ## ps4'' + ps3''\n 2. k * x = k * et + (et' + k' + e') + (1 + m + mt)\n 3. P (ps4', et)\n 4. lmaps_to_axpr b False ps4'", "show \"ps4' ## ps4'' + ps3''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ps4' ## ps4'' + ps3''", "by (metis big_step_t3_post_dom_conv domain_conv orth ortho sep_disj_addI3 sep_disj_fun_def w)"], ["proof (state)\nthis:\n  ps4' ## ps4'' + ps3''\n\ngoal (3 subgoals):\n 1. k * x = k * et + (et' + k' + e') + (1 + m + mt)\n 2. P (ps4', et)\n 3. lmaps_to_axpr b False ps4'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. k * x = k * et + (et' + k' + e') + (1 + m + mt)\n 2. P (ps4', et)\n 3. lmaps_to_axpr b False ps4'", "have \"k * x = k * x' + k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * x = k * x' + k", "unfolding Suc"], ["proof (prove)\ngoal (1 subgoal):\n 1. k * Suc x' = k * x' + k", "by auto"], ["proof (state)\nthis:\n  k * x = k * x' + k\n\ngoal (3 subgoals):\n 1. k * x = k * et + (et' + k' + e') + (1 + m + mt)\n 2. P (ps4', et)\n 3. lmaps_to_axpr b False ps4'", "also"], ["proof (state)\nthis:\n  k * x = k * x' + k\n\ngoal (3 subgoals):\n 1. k * x = k * et + (et' + k' + e') + (1 + m + mt)\n 2. P (ps4', et)\n 3. lmaps_to_axpr b False ps4'", "have \"\\<dots> = k * e + e' + m + k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * x' + k = k * e + e' + m + k", "unfolding x"], ["proof (prove)\ngoal (1 subgoal):\n 1. k * e + e' + m + k = k * e + e' + m + k", "by simp"], ["proof (state)\nthis:\n  k * x' + k = k * e + e' + m + k\n\ngoal (3 subgoals):\n 1. k * x = k * et + (et' + k' + e') + (1 + m + mt)\n 2. P (ps4', et)\n 3. lmaps_to_axpr b False ps4'", "also"], ["proof (state)\nthis:\n  k * x' + k = k * e + e' + m + k\n\ngoal (3 subgoals):\n 1. k * x = k * et + (et' + k' + e') + (1 + m + mt)\n 2. P (ps4', et)\n 3. lmaps_to_axpr b False ps4'", "have \"\\<dots> = k * et + et' + mt + e' + m + k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * e + e' + m + k = k * et + et' + mt + e' + m + k", "using m''"], ["proof (prove)\nusing this:\n  k * e = k * et + et' + mt\n\ngoal (1 subgoal):\n 1. k * e + e' + m + k = k * et + et' + mt + e' + m + k", "by simp"], ["proof (state)\nthis:\n  k * e + e' + m + k = k * et + et' + mt + e' + m + k\n\ngoal (3 subgoals):\n 1. k * x = k * et + (et' + k' + e') + (1 + m + mt)\n 2. P (ps4', et)\n 3. lmaps_to_axpr b False ps4'", "also"], ["proof (state)\nthis:\n  k * e + e' + m + k = k * et + et' + mt + e' + m + k\n\ngoal (3 subgoals):\n 1. k * x = k * et + (et' + k' + e') + (1 + m + mt)\n 2. P (ps4', et)\n 3. lmaps_to_axpr b False ps4'", "have \"\\<dots> = k * et + et' + mt + e' + m + 1 + k'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * et + et' + mt + e' + m + k = k * et + et' + mt + e' + m + 1 + k'", "using k'"], ["proof (prove)\nusing this:\n  k = Suc k'\n\ngoal (1 subgoal):\n 1. k * et + et' + mt + e' + m + k = k * et + et' + mt + e' + m + 1 + k'", "by simp"], ["proof (state)\nthis:\n  k * et + et' + mt + e' + m + k = k * et + et' + mt + e' + m + 1 + k'\n\ngoal (3 subgoals):\n 1. k * x = k * et + (et' + k' + e') + (1 + m + mt)\n 2. P (ps4', et)\n 3. lmaps_to_axpr b False ps4'", "also"], ["proof (state)\nthis:\n  k * et + et' + mt + e' + m + k = k * et + et' + mt + e' + m + 1 + k'\n\ngoal (3 subgoals):\n 1. k * x = k * et + (et' + k' + e') + (1 + m + mt)\n 2. P (ps4', et)\n 3. lmaps_to_axpr b False ps4'", "have \"\\<dots> = k * et + ( et'  + k' + e') + (1 + m + mt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * et + et' + mt + e' + m + 1 + k' =\n    k * et + (et' + k' + e') + (1 + m + mt)", "using k'"], ["proof (prove)\nusing this:\n  k = Suc k'\n\ngoal (1 subgoal):\n 1. k * et + et' + mt + e' + m + 1 + k' =\n    k * et + (et' + k' + e') + (1 + m + mt)", "by simp"], ["proof (state)\nthis:\n  k * et + et' + mt + e' + m + 1 + k' =\n  k * et + (et' + k' + e') + (1 + m + mt)\n\ngoal (3 subgoals):\n 1. k * x = k * et + (et' + k' + e') + (1 + m + mt)\n 2. P (ps4', et)\n 3. lmaps_to_axpr b False ps4'", "finally"], ["proof (chain)\npicking this:\n  k * x = k * et + (et' + k' + e') + (1 + m + mt)", "show \"k * x = k * et + ( et'  + k' + e') + (1 + m + mt)\""], ["proof (prove)\nusing this:\n  k * x = k * et + (et' + k' + e') + (1 + m + mt)\n\ngoal (1 subgoal):\n 1. k * x = k * et + (et' + k' + e') + (1 + m + mt)", "by simp"], ["proof (state)\nthis:\n  k * x = k * et + (et' + k' + e') + (1 + m + mt)\n\ngoal (2 subgoals):\n 1. P (ps4', et)\n 2. lmaps_to_axpr b False ps4'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. P (ps4', et)\n 2. lmaps_to_axpr b False ps4'", "show \"P (ps4', et)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (ps4', et)", "by fact"], ["proof (state)\nthis:\n  P (ps4', et)\n\ngoal (1 subgoal):\n 1. lmaps_to_axpr b False ps4'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. lmaps_to_axpr b False ps4'", "show \"lmaps_to_axpr b False ps4'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lmaps_to_axpr b False ps4'", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. vars b \\<subseteq> dom ps4' \\<and> \\<not> pbval b ps4'", "using dom'' b''"], ["proof (prove)\nusing this:\n  vars b \\<subseteq> dom ps4'\n  \\<not> pbval b ps4'\n\ngoal (1 subgoal):\n 1. vars b \\<subseteq> dom ps4' \\<and> \\<not> pbval b ps4'", ".."], ["proof (state)\nthis:\n  lmaps_to_axpr b False ps4'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m e e'.\n     (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and>\n     k * x = k * e + e' + m \\<and>\n     P (ps', e) \\<and> lmaps_to_axpr b False ps'\n\ngoal (1 subgoal):\n 1. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "case False"], ["proof (state)\nthis:\n  \\<not> pbval b ps3\n\ngoal (1 subgoal):\n 1. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "from less(2)"], ["proof (chain)\npicking this:\n  ((\\<lambda>a.\n       case a of\n       (s, n) \\<Rightarrow>\n         P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n   $ 1)\n   (ps3, x)", "obtain x' where P: \"P (ps3, x')\" and dom: \"vars b \\<subseteq> dom ps3\" and Suc: \"x = Suc x'\""], ["proof (prove)\nusing this:\n  ((\\<lambda>a.\n       case a of\n       (s, n) \\<Rightarrow>\n         P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n   $ 1)\n   (ps3, x)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>P (ps3, x'); vars b \\<subseteq> dom ps3;\n         x = Suc x'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dollar_def sep_conj_def"], ["proof (prove)\nusing this:\n  \\<exists>xa y.\n     xa ## y \\<and>\n     (ps3, x) = xa + y \\<and>\n     (case xa of\n      (s, n) \\<Rightarrow> P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>\n     (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = 1)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>P (ps3, x'); vars b \\<subseteq> dom ps3;\n         x = Suc x'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  P (ps3, x')\n  vars b \\<subseteq> dom ps3\n  x = Suc x'\n\ngoal (1 subgoal):\n 1. \\<not> pbval b ps3 \\<Longrightarrow>\n    \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps', e) \\<and> lmaps_to_axpr b False ps'", "apply(rule exI[where x=ps3])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps'' m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps3 + ps'' \\<and>\n       ps3 ## ps'' \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps3, e) \\<and> lmaps_to_axpr b False ps3", "apply(rule exI[where x=0])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m e e'.\n       (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps3 + 0 \\<and>\n       ps3 ## 0 \\<and>\n       k * x = k * e + e' + m \\<and>\n       P (ps3, e) \\<and> lmaps_to_axpr b False ps3", "apply(rule exI[where x=\"Suc 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e e'.\n       (WHILE b DO C,\n        ps3) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps3 + 0 \\<and>\n       ps3 ## 0 \\<and>\n       k * x = k * e + e' + Suc 0 \\<and>\n       P (ps3, e) \\<and> lmaps_to_axpr b False ps3", "apply(rule exI[where x=\"x'\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e'.\n       (WHILE b DO C,\n        ps3) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps3 + 0 \\<and>\n       ps3 ## 0 \\<and>\n       k * x = k * x' + e' + Suc 0 \\<and>\n       P (ps3, x') \\<and> lmaps_to_axpr b False ps3", "apply(rule exI[where x=\"k'\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps3 + 0 \\<and>\n    ps3 ## 0 \\<and>\n    k * x = k * x' + k' + Suc 0 \\<and>\n    P (ps3, x') \\<and> lmaps_to_axpr b False ps3", "apply safe"], ["proof (prove)\ngoal (5 subgoals):\n 1. (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps3 + 0\n 2. ps3 ## 0\n 3. k * x = k * x' + k' + Suc 0\n 4. P (ps3, x')\n 5. lmaps_to_axpr b False ps3", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps3\n 2. ps3 ## 0\n 3. k * x = k * x' + k' + Suc 0\n 4. P (ps3, x')\n 5. lmaps_to_axpr b False ps3", "apply (rule big_step_t_part.WhileFalse)"], ["proof (prove)\ngoal (6 subgoals):\n 1. vars b \\<subseteq> dom ps3\n 2. \\<not> pbval b ps3\n 3. ps3 ## 0\n 4. k * x = k * x' + k' + Suc 0\n 5. P (ps3, x')\n 6. lmaps_to_axpr b False ps3", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. vars b \\<subseteq> dom ps3", "using dom"], ["proof (prove)\nusing this:\n  vars b \\<subseteq> dom ps3\n\ngoal (1 subgoal):\n 1. vars b \\<subseteq> dom ps3", "by simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<not> pbval b ps3\n 2. ps3 ## 0\n 3. k * x = k * x' + k' + Suc 0\n 4. P (ps3, x')\n 5. lmaps_to_axpr b False ps3", "apply fact"], ["proof (prove)\ngoal (4 subgoals):\n 1. ps3 ## 0\n 2. k * x = k * x' + k' + Suc 0\n 3. P (ps3, x')\n 4. lmaps_to_axpr b False ps3", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. k * x = k * x' + k' + Suc 0\n 2. P (ps3, x')\n 3. lmaps_to_axpr b False ps3", "using Suc k k'"], ["proof (prove)\nusing this:\n  x = Suc x'\n  0 < k\n  k = Suc k'\n\ngoal (3 subgoals):\n 1. k * x = k * x' + k' + Suc 0\n 2. P (ps3, x')\n 3. lmaps_to_axpr b False ps3", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. P (ps3, x')\n 2. lmaps_to_axpr b False ps3", "using P Suc"], ["proof (prove)\nusing this:\n  P (ps3, x')\n  x = Suc x'\n\ngoal (2 subgoals):\n 1. P (ps3, x')\n 2. lmaps_to_axpr b False ps3", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. lmaps_to_axpr b False ps3", "using dom"], ["proof (prove)\nusing this:\n  vars b \\<subseteq> dom ps3\n\ngoal (1 subgoal):\n 1. lmaps_to_axpr b False ps3", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom ps3; pbval b ps3\\<rbrakk>\n    \\<Longrightarrow> False", "using False"], ["proof (prove)\nusing this:\n  \\<not> pbval b ps3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom ps3; pbval b ps3\\<rbrakk>\n    \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m e e'.\n     (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and>\n     k * x = k * e + e' + m \\<and>\n     P (ps', e) \\<and> lmaps_to_axpr b False ps'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m e e'.\n     (WHILE b DO C, ps3) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and>\n     k * x = k * e + e' + m \\<and>\n     P (ps', e) \\<and> lmaps_to_axpr b False ps'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m e e'.\n     (WHILE b DO C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and>\n     k * n = k * e + e' + m \\<and>\n     P (ps', e) \\<and> lmaps_to_axpr b False ps'\n\ngoal (1 subgoal):\n 1. 0 < k", "qed (fact)"], ["proof (state)\nthis:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n         $ 1)\n         (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (WHILE b DO C,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * n = k * e + e' + m \\<and>\n            (case (ps', e) of\n             (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s))\n\ngoal (5 subgoals):\n 1. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 2. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 3. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 4. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 5. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "}"], ["proof (state)\nthis:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        (case (ps, n) of\n         (s, n) \\<Rightarrow>\n           P (s, n) \\<and> lmaps_to_axpr b True s) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * n = k * e + e' + m \\<and>\n            ((\\<lambda>(s, n).\n                 P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n             $ 1)\n             (ps', e)) \\<Longrightarrow>\n  \\<exists>k>0.\n     \\<forall>ps n.\n        ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n         $ 1)\n         (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (WHILE b DO C,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * n = k * e + e' + m \\<and>\n            (case (ps', e) of\n             (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s))\n\ngoal (5 subgoals):\n 1. \\<And>P b C.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {\\<lambda>(s, n).\n           P (s, n) \\<and> lmaps_to_axpr b True s}\n       C { (\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n   case a of (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b True s}\n        C { (\\<lambda>(s, n).\n                P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n            $ 1}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                     P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                 $ 1}\n                         WHILE b DO C\n                         { \\<lambda>a.\n                              case a of\n                              (s, n) \\<Rightarrow>\n                                P (s, n) \\<and> lmaps_to_axpr b False s}\n 2. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 3. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 4. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 5. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "with While(2)"], ["proof (chain)\npicking this:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n                                   case a of\n                                   (s, n) \\<Rightarrow>\n                                     P (s, n) \\<and> lmaps_to_axpr b True s}\n  C { (\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n      $ 1}\n  \\<exists>k>0.\n     \\<forall>ps n.\n        (case (ps, n) of\n         (s, n) \\<Rightarrow>\n           P (s, n) \\<and> lmaps_to_axpr b True s) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * n = k * e + e' + m \\<and>\n            ((\\<lambda>(s, n).\n                 P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n             $ 1)\n             (ps', e)) \\<Longrightarrow>\n  \\<exists>k>0.\n     \\<forall>ps n.\n        ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n         $ 1)\n         (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (WHILE b DO C,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * n = k * e + e' + m \\<and>\n            (case (ps', e) of\n             (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s))", "show ?case"], ["proof (prove)\nusing this:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {\\<lambda>a.\n                                   case a of\n                                   (s, n) \\<Rightarrow>\n                                     P (s, n) \\<and> lmaps_to_axpr b True s}\n  C { (\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n      $ 1}\n  \\<exists>k>0.\n     \\<forall>ps n.\n        (case (ps, n) of\n         (s, n) \\<Rightarrow>\n           P (s, n) \\<and> lmaps_to_axpr b True s) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * n = k * e + e' + m \\<and>\n            ((\\<lambda>(s, n).\n                 P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n             $ 1)\n             (ps', e)) \\<Longrightarrow>\n  \\<exists>k>0.\n     \\<forall>ps n.\n        ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n         $ 1)\n         (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (WHILE b DO C,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * n = k * e + e' + m \\<and>\n            (case (ps', e) of\n             (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s))\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\nP (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                                  $ 1}\n    WHILE b DO C\n    { \\<lambda>a.\n         case a of\n         (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}", "unfolding hoare3o_valid_def"], ["proof (prove)\nusing this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        (case (ps, n) of\n         (s, n) \\<Rightarrow>\n           P (s, n) \\<and> lmaps_to_axpr b True s) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * n = k * e + e' + m \\<and>\n            ((\\<lambda>(s, n).\n                 P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n             $ 1)\n             (ps', e))\n  \\<exists>k>0.\n     \\<forall>ps n.\n        (case (ps, n) of\n         (s, n) \\<Rightarrow>\n           P (s, n) \\<and> lmaps_to_axpr b True s) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * n = k * e + e' + m \\<and>\n            ((\\<lambda>(s, n).\n                 P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n             $ 1)\n             (ps', e)) \\<Longrightarrow>\n  \\<exists>k>0.\n     \\<forall>ps n.\n        ((\\<lambda>(s, n). P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n         $ 1)\n         (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (WHILE b DO C,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * n = k * e + e' + m \\<and>\n            (case (ps', e) of\n             (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s))\n\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          ((\\<lambda>(s, n).\n               P (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n           $ 1)\n           (ps, n) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (WHILE b DO C,\n               ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and>\n              k * n = k * e + e' + m \\<and>\n              (case (ps', e) of\n               (s, n) \\<Rightarrow>\n                 P (s, n) \\<and> lmaps_to_axpr b False s))", "by simp"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {(\\<lambda>(s, n).\n                                    P (s, n) \\<and>\n                                    vars b \\<subseteq> dom s) \\<and>*\n                                $ 1}\n  WHILE b DO C\n  { \\<lambda>a.\n       case a of\n       (s, n) \\<Rightarrow> P (s, n) \\<and> lmaps_to_axpr b False s}\n\ngoal (4 subgoals):\n 1. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 2. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 3. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 4. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 2. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 3. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 4. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "case (Assign''' x ds v)"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 2. \\<And>x ds v.\n       \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n       x ::= N v { x \\<hookrightarrow> v}\n 3. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 4. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n    x ::= N v { x \\<hookrightarrow> v}", "unfolding hoare3o_valid_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          ($ 1 \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (x ::= N v,\n               ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and>\n              k * n = k * e + e' + m \\<and>\n              (x \\<hookrightarrow> v) (ps', e))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds)\n           (ps, n) \\<longrightarrow>\n          (\\<exists>ps' ps'' m.\n              (x ::= N v,\n               ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and>\n              (\\<exists>e.\n                  (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n                  (x \\<hookrightarrow> v) (ps', e)))", "apply(rule exI[where x=1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1 \\<and>\n    (\\<forall>ps n.\n        ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m.\n            (x ::= N v,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            (\\<exists>e.\n                (\\<exists>e'. 1 * n = 1 * e + e' + m) \\<and>\n                (x \\<hookrightarrow> v) (ps', e))))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m.\n          (x ::= N v, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          (\\<exists>e.\n              (\\<exists>e'. n = e + e' + m) \\<and>\n              (x \\<hookrightarrow> v) (ps', e))", "subgoal for ps n"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n    \\<exists>ps' ps'' m.\n       (x ::= N v, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. n = e + e' + m) \\<and>\n           (x \\<hookrightarrow> v) (ps', e))", "apply(rule exI[where x=\"ps(x\\<mapsto>v)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n    \\<exists>ps'' m.\n       (x ::= N v,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps(x \\<mapsto> v) + ps'' \\<and>\n       ps(x \\<mapsto> v) ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. n = e + e' + m) \\<and>\n           (x \\<hookrightarrow> v) (ps(x \\<mapsto> v), e))", "apply(rule exI[where x=\"0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n    \\<exists>m.\n       (x ::= N v,\n        ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps(x \\<mapsto> v) + 0 \\<and>\n       ps(x \\<mapsto> v) ## 0 \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. n = e + e' + m) \\<and>\n           (x \\<hookrightarrow> v) (ps(x \\<mapsto> v), e))", "apply(rule exI[where x=\"Suc 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n    (x ::= N v,\n     ps) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps(x \\<mapsto> v) + 0 \\<and>\n    ps(x \\<mapsto> v) ## 0 \\<and>\n    (\\<exists>e.\n        (\\<exists>e'. n = e + e' + Suc 0) \\<and>\n        (x \\<hookrightarrow> v) (ps(x \\<mapsto> v), e))", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n    (x ::= N v,\n     ps) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ps(x \\<mapsto> v) + 0\n 2. ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n    ps(x \\<mapsto> v) ## 0\n 3. ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n    \\<exists>e.\n       (\\<exists>e'. n = e + e' + Suc 0) \\<and>\n       (x \\<hookrightarrow> v) (ps(x \\<mapsto> v), e)", "apply(rule big_step_t_part.Assign)"], ["proof (prove)\ngoal (5 subgoals):\n 1. ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n    vars (N v) \\<union> {x} \\<subseteq> dom ps\n 2. ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n    paval (N v) ps = ?v9\n 3. ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n    ps(x \\<mapsto> v) + 0 = ps(x \\<mapsto> ?v9)\n 4. ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n    ps(x \\<mapsto> v) ## 0\n 5. ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n    \\<exists>e.\n       (\\<exists>e'. n = e + e' + Suc 0) \\<and>\n       (x \\<hookrightarrow> v) (ps(x \\<mapsto> v), e)", "apply (auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n    \\<exists>y. ps x = Some y\n 2. ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n    \\<exists>e.\n       (\\<exists>e'. n = Suc (e + e')) \\<and>\n       (x \\<hookrightarrow> v) (ps(x \\<mapsto> v), e)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n    \\<exists>y. ps x = Some y", "apply(subst (asm) separate_othogonal_commuted')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ps n. $ (Suc 0) (ps, n) \\<Longrightarrow> ps = 0\n 2. \\<And>ps n. (x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow> n = 0\n 3. $ (Suc 0) (0, snd (ps, n)) \\<and>\n    (x \\<hookrightarrow> ds) (fst (ps, n), 0) \\<Longrightarrow>\n    \\<exists>y. ps x = Some y", "by(auto simp: dollar_def pointsto_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n    \\<exists>e.\n       (\\<exists>e'. n = Suc (e + e')) \\<and>\n       (x \\<hookrightarrow> v) (ps(x \\<mapsto> v), e)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($ (Suc 0) \\<and>* x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow>\n    \\<exists>e.\n       (\\<exists>e'. n = Suc (e + e')) \\<and>\n       (x \\<hookrightarrow> v) (ps(x \\<mapsto> v), e)", "apply(subst (asm) separate_othogonal_commuted')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ps n. $ (Suc 0) (ps, n) \\<Longrightarrow> ps = 0\n 2. \\<And>ps n. (x \\<hookrightarrow> ds) (ps, n) \\<Longrightarrow> n = 0\n 3. $ (Suc 0) (0, snd (ps, n)) \\<and>\n    (x \\<hookrightarrow> ds) (fst (ps, n), 0) \\<Longrightarrow>\n    \\<exists>e.\n       (\\<exists>e'. n = Suc (e + e')) \\<and>\n       (x \\<hookrightarrow> v) (ps(x \\<mapsto> v), e)", "by(auto simp: dollar_def pointsto_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {$ 1 \\<and>* x \\<hookrightarrow> ds}\n  x ::= N v { x \\<hookrightarrow> v}\n\ngoal (3 subgoals):\n 1. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 2. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 3. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 2. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 3. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "case (Assign'''' P a v x Q')"], ["proof (state)\nthis:\n  symeval P a v\n  \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\n\ngoal (3 subgoals):\n 1. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 2. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 3. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "from Assign''''(3)[unfolded hoare3o_valid_def]"], ["proof (chain)\npicking this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        P (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (x ::= N v,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q' (ps', e))", "obtain k where k: \"k>0\" and \n   A: \" \\<forall>ps n. P (ps, n) \\<longrightarrow> (\\<exists>ps' ps'' m e e'. (x ::= N v, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q' (ps', e)) \""], ["proof (prove)\nusing this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        P (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (x ::= N v,\n             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q' (ps', e))\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 < k;\n         \\<forall>ps n.\n            P (ps, n) \\<longrightarrow>\n            (\\<exists>ps' ps'' m e e'.\n                (x ::= N v,\n                 ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n                ps' ## ps'' \\<and>\n                k * n = k * e + e' + m \\<and> Q' (ps', e))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < k\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (x ::= N v, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q' (ps', e))\n\ngoal (3 subgoals):\n 1. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 2. \\<And>P a v x Q'.\n       \\<lbrakk>symeval P a v;\n        \\<turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= N v { Q'}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n 3. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}", "unfolding hoare3o_valid_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          P (ps, n) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (x ::= a,\n               ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q' (ps', e))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          P (ps, n) \\<longrightarrow>\n          (\\<exists>ps' ps'' m.\n              (x ::= a,\n               ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and>\n              (\\<exists>e.\n                  (\\<exists>e'. k * n = k * e + e' + m) \\<and> Q' (ps', e)))", "apply(rule exI[where x=k])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<and>\n    (\\<forall>ps n.\n        P (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m.\n            (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            (\\<exists>e.\n                (\\<exists>e'. k * n = k * e + e' + m) \\<and> Q' (ps', e))))", "using k"], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. 0 < k \\<and>\n    (\\<forall>ps n.\n        P (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m.\n            (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            (\\<exists>e.\n                (\\<exists>e'. k * n = k * e + e' + m) \\<and> Q' (ps', e))))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k; P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n                                Q' (ps', e))", "proof (goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k; P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n                                Q' (ps', e))", "case (1 ps n)"], ["proof (state)\nthis:\n  0 < k\n  P (ps, n)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k; P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n                                Q' (ps', e))", "with A"], ["proof (chain)\npicking this:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (x ::= N v, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q' (ps', e))\n  0 < k\n  P (ps, n)", "obtain ps' ps'' m e e' \n        where \" (x ::= N v, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\" and orth: \"ps' ## ps''\" and m: \"k * n = k * e + e' + m\" and Q: \"Q' (ps', e)\""], ["proof (prove)\nusing this:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (x ::= N v, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q' (ps', e))\n  0 < k\n  P (ps, n)\n\ngoal (1 subgoal):\n 1. (\\<And>m ps' ps'' e e'.\n        \\<lbrakk>(x ::= N v, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'';\n         ps' ## ps''; k * n = k * e + e' + m; Q' (ps', e)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  (x ::= N v, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\n  ps' ## ps''\n  k * n = k * e + e' + m\n  Q' (ps', e)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k; P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n                                Q' (ps', e))", "from 1(2) Assign''''(1)[unfolded symeval_def]"], ["proof (chain)\npicking this:\n  P (ps, n)\n  \\<forall>s n. P (s, n) \\<longrightarrow> paval' a s = Some v", "have \"paval' a ps = Some v\""], ["proof (prove)\nusing this:\n  P (ps, n)\n  \\<forall>s n. P (s, n) \\<longrightarrow> paval' a s = Some v\n\ngoal (1 subgoal):\n 1. paval' a ps = Some v", "by auto"], ["proof (state)\nthis:\n  paval' a ps = Some v\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       \\<lbrakk>0 < k; P (ps, n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m.\n                            (x ::= a,\n                             ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                           ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            (\\<exists>e.\n                                (\\<exists>e'. k * n = k * e + e' + m) \\<and>\n                                Q' (ps', e))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m.\n       (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k * n = k * e + e' + m) \\<and> Q' (ps', e))", "apply(rule exI[where x=ps'])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps'' m.\n       (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k * n = k * e + e' + m) \\<and> Q' (ps', e))", "apply(rule exI[where x=ps''])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m.\n       (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       (\\<exists>e.\n           (\\<exists>e'. k * n = k * e + e' + m) \\<and> Q' (ps', e))", "apply(rule exI[where x=m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n    ps' ## ps'' \\<and>\n    (\\<exists>e. (\\<exists>e'. k * n = k * e + e' + m) \\<and> Q' (ps', e))", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\n 2. ps' ## ps''\n 3. \\<exists>e. (\\<exists>e'. k * n = k * e + e' + m) \\<and> Q' (ps', e)", "apply(rule avalDirekt3_correct)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (x ::= N ?v8, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\n 2. paval' a ps = Some ?v8\n 3. ps' ## ps''\n 4. \\<exists>e. (\\<exists>e'. k * n = k * e + e' + m) \\<and> Q' (ps', e)", "apply fact+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e. (\\<exists>e'. k * n = k * e + e' + m) \\<and> Q' (ps', e)", "apply(rule exI[where x=e])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>e'. k * n = k * e + e' + m) \\<and> Q' (ps', e)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>e'. k * n = k * e + e' + m\n 2. Q' (ps', e)", "apply(rule exI[where x=e'])"], ["proof (prove)\ngoal (2 subgoals):\n 1. k * n = k * e + e' + m\n 2. Q' (ps', e)", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. Q' (ps', e)", "apply fact"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m.\n     (x ::= a, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and>\n     (\\<exists>e. (\\<exists>e'. k * n = k * e + e' + m) \\<and> Q' (ps', e))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} x ::= a { Q'}\n\ngoal (2 subgoals):\n 1. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 2. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 2. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "case (pureI P Q c R)"], ["proof (state)\nthis:\n  P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\n  P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\n\ngoal (2 subgoals):\n 1. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}\n 2. \\<And>P Q c R.\n       \\<lbrakk>P \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {Q} c { R};\n        P \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {Q} c { R}\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c\n                         { R}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c { R}", "proof (cases \"P\")"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<Longrightarrow>\n    \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c { R}\n 2. \\<not> P \\<Longrightarrow>\n    \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c { R}", "case True"], ["proof (state)\nthis:\n  P\n\ngoal (2 subgoals):\n 1. P \\<Longrightarrow>\n    \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c { R}\n 2. \\<not> P \\<Longrightarrow>\n    \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c { R}", "with pureI(2)[unfolded hoare3o_valid_def]"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\n  \\<exists>k>0.\n     \\<forall>ps n.\n        Q (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> R (ps', e))\n  P", "obtain k where k: \"k>0\" and\n     thing: \" \\<forall>ps n. Q (ps, n) \\<longrightarrow> (\\<exists>ps' ps'' m e e'. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> R (ps', e))\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\n  \\<exists>k>0.\n     \\<forall>ps n.\n        Q (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> R (ps', e))\n  P\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 < k;\n         \\<forall>ps n.\n            Q (ps, n) \\<longrightarrow>\n            (\\<exists>ps' ps'' m e e'.\n                (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n                ps' ## ps'' \\<and>\n                k * n = k * e + e' + m \\<and> R (ps', e))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < k\n  \\<forall>ps n.\n     Q (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> R (ps', e))\n\ngoal (2 subgoals):\n 1. P \\<Longrightarrow>\n    \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c { R}\n 2. \\<not> P \\<Longrightarrow>\n    \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c { R}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c { R}", "unfolding hoare3o_valid_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          (\\<up> P \\<and>* Q) (ps, n) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> R (ps', e))", "apply(rule exI[where x=k])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<and>\n    (\\<forall>ps n.\n        (\\<up> P \\<and>* Q) (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> R (ps', e)))", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 < k\n 2. \\<And>ps n.\n       (\\<up> P \\<and>* Q) (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> R (ps', e)", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       (\\<up> P \\<and>* Q) (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> R (ps', e)", "using thing"], ["proof (prove)\nusing this:\n  \\<forall>ps n.\n     Q (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> R (ps', e))\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       (\\<up> P \\<and>* Q) (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> R (ps', e)", "by fastforce"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c { R}\n\ngoal (1 subgoal):\n 1. \\<not> P \\<Longrightarrow>\n    \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c { R}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> P \\<Longrightarrow>\n    \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c { R}", "case False"], ["proof (state)\nthis:\n  \\<not> P\n\ngoal (1 subgoal):\n 1. \\<not> P \\<Longrightarrow>\n    \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c { R}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c { R}", "unfolding hoare3o_valid_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          (\\<up> P \\<and>* Q) (ps, n) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> R (ps', e))", "apply(rule exI[where x=1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1 \\<and>\n    (\\<forall>ps n.\n        (\\<up> P \\<and>* Q) (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> 1 * n = 1 * e + e' + m \\<and> R (ps', e)))", "using False"], ["proof (prove)\nusing this:\n  \\<not> P\n\ngoal (1 subgoal):\n 1. 0 < 1 \\<and>\n    (\\<forall>ps n.\n        (\\<up> P \\<and>* Q) (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> 1 * n = 1 * e + e' + m \\<and> R (ps', e)))", "by auto"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c { R}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {\\<up> P \\<and>* Q} c { R}\n\ngoal (1 subgoal):\n 1. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}", "case (normalize P m C Q n)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n}\n  n \\<le> m\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n}\n\ngoal (1 subgoal):\n 1. \\<And>P m C Q n.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n};\n        n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)}\n                         C { Q}", "then"], ["proof (chain)\npicking this:\n  \\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n}\n  n \\<le> m\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n}", "show ?case"], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n}\n  n \\<le> m\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n}\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)} C { Q}", "unfolding hoare3o_valid_def"], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n}\n  n \\<le> m\n  \\<exists>k>0.\n     \\<forall>ps na.\n        (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * na = k * e + e' + m \\<and> (Q \\<and>* $ n) (ps', e))\n\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps na.\n          (P \\<and>* $ (m - n)) (ps, na) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and> k * na = k * e + e' + m \\<and> Q (ps', e))", "apply(safe)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        n \\<le> m; 0 < k;\n        \\<forall>ps na.\n           (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n           (\\<exists>ps' ps'' m e e'.\n               (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n               ps' ## ps'' \\<and>\n               k * na = k * e + e' + m \\<and>\n               (Q \\<and>* $ n) (ps', e))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k>0.\n                            \\<forall>ps na.\n                               (P \\<and>* $ (m - n))\n                                (ps, na) \\<longrightarrow>\n                               (\\<exists>ps' ps'' m e e'.\n                                   (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                                     ps'' \\<and>\n                                   ps' ## ps'' \\<and>\n                                   k * na = k * e + e' + m \\<and>\n                                   Q (ps', e))", "subgoal for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n    { Q \\<and>* $ n};\n     n \\<le> m; 0 < k;\n     \\<forall>ps na.\n        (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * na = k * e + e' + m \\<and>\n            (Q \\<and>* $ n) (ps', e))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k>0.\n                         \\<forall>ps na.\n                            (P \\<and>* $ (m - n)) (ps, na) \\<longrightarrow>\n                            (\\<exists>ps' ps'' m e e'.\n                                (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                                  ps'' \\<and>\n                                ps' ## ps'' \\<and>\n                                k * na = k * e + e' + m \\<and> Q (ps', e))", "apply(rule exI[where x=k])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n    { Q \\<and>* $ n};\n     n \\<le> m; 0 < k;\n     \\<forall>ps na.\n        (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * na = k * e + e' + m \\<and>\n            (Q \\<and>* $ n) (ps', e))\\<rbrakk>\n    \\<Longrightarrow> 0 < k \\<and>\n                      (\\<forall>ps na.\n                          (P \\<and>* $ (m - n)) (ps, na) \\<longrightarrow>\n                          (\\<exists>ps' ps'' m e e'.\n                              (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                                ps'' \\<and>\n                              ps' ## ps'' \\<and>\n                              k * na = k * e + e' + m \\<and> Q (ps', e)))", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ps na.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        n \\<le> m; 0 < k;\n        \\<forall>ps na.\n           (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n           (\\<exists>ps' ps'' m e e'.\n               (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n               ps' ## ps'' \\<and>\n               k * na = k * e + e' + m \\<and> (Q \\<and>* $ n) (ps', e));\n        (P \\<and>* $ (m - n)) (ps, na)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            k * na = k * e + e' + m \\<and> Q (ps', e)", "proof (goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps na.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        n \\<le> m; 0 < k;\n        \\<forall>ps na.\n           (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n           (\\<exists>ps' ps'' m e e'.\n               (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n               ps' ## ps'' \\<and>\n               k * na = k * e + e' + m \\<and> (Q \\<and>* $ n) (ps', e));\n        (P \\<and>* $ (m - n)) (ps, na)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            k * na = k * e + e' + m \\<and> Q (ps', e)", "case (1 ps N)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C { Q \\<and>* $ n}\n  n \\<le> m\n  0 < k\n  \\<forall>ps na.\n     (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and>\n         k * na = k * e + e' + m \\<and> (Q \\<and>* $ n) (ps', e))\n  (P \\<and>* $ (m - n)) (ps, N)\n\ngoal (1 subgoal):\n 1. \\<And>ps na.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        n \\<le> m; 0 < k;\n        \\<forall>ps na.\n           (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n           (\\<exists>ps' ps'' m e e'.\n               (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n               ps' ## ps'' \\<and>\n               k * na = k * e + e' + m \\<and> (Q \\<and>* $ n) (ps', e));\n        (P \\<and>* $ (m - n)) (ps, na)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            k * na = k * e + e' + m \\<and> Q (ps', e)", "have Q2: \"P (ps, N - (m - n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (ps, N - (m - n))", "apply(rule stardiff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<and>* $ (m - n)) (ps, N)", "by fact"], ["proof (state)\nthis:\n  P (ps, N - (m - n))\n\ngoal (1 subgoal):\n 1. \\<And>ps na.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        n \\<le> m; 0 < k;\n        \\<forall>ps na.\n           (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n           (\\<exists>ps' ps'' m e e'.\n               (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n               ps' ## ps'' \\<and>\n               k * na = k * e + e' + m \\<and> (Q \\<and>* $ n) (ps', e));\n        (P \\<and>* $ (m - n)) (ps, na)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            k * na = k * e + e' + m \\<and> Q (ps', e)", "have mn: \"m - n \\<le> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m - n \\<le> N", "apply(rule stardiff(2))"], ["proof (prove)\ngoal (1 subgoal):\n 1. (?P \\<and>* $ (m - n)) (?ps, N)", "by fact"], ["proof (state)\nthis:\n  m - n \\<le> N\n\ngoal (1 subgoal):\n 1. \\<And>ps na.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        n \\<le> m; 0 < k;\n        \\<forall>ps na.\n           (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n           (\\<exists>ps' ps'' m e e'.\n               (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n               ps' ## ps'' \\<and>\n               k * na = k * e + e' + m \\<and> (Q \\<and>* $ n) (ps', e));\n        (P \\<and>* $ (m - n)) (ps, na)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            k * na = k * e + e' + m \\<and> Q (ps', e)", "have P: \"(P \\<and>* $ m) (ps, N - (m - n) + m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<and>* $ m) (ps, N - (m - n) + m)", "unfolding sep_conj_def dollar_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x y.\n       x ## y \\<and>\n       (ps, N - (m - n) + m) = x + y \\<and>\n       P x \\<and> (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = m)", "apply(rule exI[where x=\"(ps,N - (m - n))\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y.\n       (ps, N - (m - n)) ## y \\<and>\n       (ps, N - (m - n) + m) = (ps, N - (m - n)) + y \\<and>\n       P (ps, N - (m - n)) \\<and>\n       (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = m)", "apply(rule exI[where x=\"(0,m)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ps, N - (m - n)) ## (0, m) \\<and>\n    (ps, N - (m - n) + m) = (ps, N - (m - n)) + (0, m) \\<and>\n    P (ps, N - (m - n)) \\<and>\n    (case (0, m) of (s, c) \\<Rightarrow> s = 0 \\<and> c = m)", "apply(auto simp: sep_disj_prod_def sep_disj_nat_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (ps, N - (m - n))", "by fact"], ["proof (state)\nthis:\n  (P \\<and>* $ m) (ps, N - (m - n) + m)\n\ngoal (1 subgoal):\n 1. \\<And>ps na.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        n \\<le> m; 0 < k;\n        \\<forall>ps na.\n           (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n           (\\<exists>ps' ps'' m e e'.\n               (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n               ps' ## ps'' \\<and>\n               k * na = k * e + e' + m \\<and> (Q \\<and>* $ n) (ps', e));\n        (P \\<and>* $ (m - n)) (ps, na)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            k * na = k * e + e' + m \\<and> Q (ps', e)", "have N: \" N - (m - n) + m =  N +n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N - (m - n) + m = N + n", "using normalize(2)"], ["proof (prove)\nusing this:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. N - (m - n) + m = N + n", "using mn"], ["proof (prove)\nusing this:\n  n \\<le> m\n  m - n \\<le> N\n\ngoal (1 subgoal):\n 1. N - (m - n) + m = N + n", "by auto"], ["proof (state)\nthis:\n  N - (m - n) + m = N + n\n\ngoal (1 subgoal):\n 1. \\<And>ps na.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        n \\<le> m; 0 < k;\n        \\<forall>ps na.\n           (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n           (\\<exists>ps' ps'' m e e'.\n               (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n               ps' ## ps'' \\<and>\n               k * na = k * e + e' + m \\<and> (Q \\<and>* $ n) (ps', e));\n        (P \\<and>* $ (m - n)) (ps, na)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            k * na = k * e + e' + m \\<and> Q (ps', e)", "from P N"], ["proof (chain)\npicking this:\n  (P \\<and>* $ m) (ps, N - (m - n) + m)\n  N - (m - n) + m = N + n", "have P': \"(P \\<and>* $ m) (ps, N +n)\""], ["proof (prove)\nusing this:\n  (P \\<and>* $ m) (ps, N - (m - n) + m)\n  N - (m - n) + m = N + n\n\ngoal (1 subgoal):\n 1. (P \\<and>* $ m) (ps, N + n)", "by auto"], ["proof (state)\nthis:\n  (P \\<and>* $ m) (ps, N + n)\n\ngoal (1 subgoal):\n 1. \\<And>ps na.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        n \\<le> m; 0 < k;\n        \\<forall>ps na.\n           (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n           (\\<exists>ps' ps'' m e e'.\n               (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n               ps' ## ps'' \\<and>\n               k * na = k * e + e' + m \\<and> (Q \\<and>* $ n) (ps', e));\n        (P \\<and>* $ (m - n)) (ps, na)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            k * na = k * e + e' + m \\<and> Q (ps', e)", "from P' 1(4)"], ["proof (chain)\npicking this:\n  (P \\<and>* $ m) (ps, N + n)\n  \\<forall>ps na.\n     (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and>\n         k * na = k * e + e' + m \\<and> (Q \\<and>* $ n) (ps', e))", "obtain ps' ps'' m' e e' where \"(C, ps) \\<Rightarrow>\\<^sub>A m' \\<Down> ps' + ps''\" and orth: \"ps' ## ps''\"\n        and m': \"k * (N +n) = k * e + e' + m'\" and Q: \"(Q \\<and>* $ n) (ps', e)\""], ["proof (prove)\nusing this:\n  (P \\<and>* $ m) (ps, N + n)\n  \\<forall>ps na.\n     (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and>\n         k * na = k * e + e' + m \\<and> (Q \\<and>* $ n) (ps', e))\n\ngoal (1 subgoal):\n 1. (\\<And>m' ps' ps'' e e'.\n        \\<lbrakk>(C, ps) \\<Rightarrow>\\<^sub>A m' \\<Down> ps' + ps'';\n         ps' ## ps''; k * (N + n) = k * e + e' + m';\n         (Q \\<and>* $ n) (ps', e)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (C, ps) \\<Rightarrow>\\<^sub>A m' \\<Down> ps' + ps''\n  ps' ## ps''\n  k * (N + n) = k * e + e' + m'\n  (Q \\<and>* $ n) (ps', e)\n\ngoal (1 subgoal):\n 1. \\<And>ps na.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        n \\<le> m; 0 < k;\n        \\<forall>ps na.\n           (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n           (\\<exists>ps' ps'' m e e'.\n               (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n               ps' ## ps'' \\<and>\n               k * na = k * e + e' + m \\<and> (Q \\<and>* $ n) (ps', e));\n        (P \\<and>* $ (m - n)) (ps, na)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            k * na = k * e + e' + m \\<and> Q (ps', e)", "have Q2: \"Q (ps', e - n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q (ps', e - n)", "apply(rule stardiff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Q \\<and>* $ n) (ps', e)", "by fact"], ["proof (state)\nthis:\n  Q (ps', e - n)\n\ngoal (1 subgoal):\n 1. \\<And>ps na.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        n \\<le> m; 0 < k;\n        \\<forall>ps na.\n           (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n           (\\<exists>ps' ps'' m e e'.\n               (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n               ps' ## ps'' \\<and>\n               k * na = k * e + e' + m \\<and> (Q \\<and>* $ n) (ps', e));\n        (P \\<and>* $ (m - n)) (ps, na)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            k * na = k * e + e' + m \\<and> Q (ps', e)", "have en: \"e\\<ge>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> e", "using Q"], ["proof (prove)\nusing this:\n  (Q \\<and>* $ n) (ps', e)\n\ngoal (1 subgoal):\n 1. n \\<le> e", "using stardiff(2)"], ["proof (prove)\nusing this:\n  (Q \\<and>* $ n) (ps', e)\n  (?P \\<and>* $ ?m) (?ps, ?n) \\<Longrightarrow> ?m \\<le> ?n\n\ngoal (1 subgoal):\n 1. n \\<le> e", "by blast"], ["proof (state)\nthis:\n  n \\<le> e\n\ngoal (1 subgoal):\n 1. \\<And>ps na.\n       \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ m} C\n       { Q \\<and>* $ n};\n        n \\<le> m; 0 < k;\n        \\<forall>ps na.\n           (P \\<and>* $ m) (ps, na) \\<longrightarrow>\n           (\\<exists>ps' ps'' m e e'.\n               (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n               ps' ## ps'' \\<and>\n               k * na = k * e + e' + m \\<and> (Q \\<and>* $ n) (ps', e));\n        (P \\<and>* $ (m - n)) (ps, na)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ps' ps'' m e e'.\n                            (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' +\n                              ps'' \\<and>\n                            ps' ## ps'' \\<and>\n                            k * na = k * e + e' + m \\<and> Q (ps', e)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m e e'.\n       (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and> k * N = k * e + e' + m \\<and> Q (ps', e)", "apply(rule exI[where x=\"ps'\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps'' m e e'.\n       (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and> k * N = k * e + e' + m \\<and> Q (ps', e)", "apply(rule exI[where x=\"ps''\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m e e'.\n       (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and> k * N = k * e + e' + m \\<and> Q (ps', e)", "apply(rule exI[where x=\"m'\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e e'.\n       (C, ps) \\<Rightarrow>\\<^sub>A m' \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and> k * N = k * e + e' + m' \\<and> Q (ps', e)", "apply(rule exI[where x=\"e - n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e'.\n       (C, ps) \\<Rightarrow>\\<^sub>A m' \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * N = k * (e - n) + e' + m' \\<and> Q (ps', e - n)", "apply(rule exI[where x=\"e'\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, ps) \\<Rightarrow>\\<^sub>A m' \\<Down> ps' + ps'' \\<and>\n    ps' ## ps'' \\<and> k * N = k * (e - n) + e' + m' \\<and> Q (ps', e - n)", "proof (safe)"], ["proof (state)\ngoal (4 subgoals):\n 1. (C, ps) \\<Rightarrow>\\<^sub>A m' \\<Down> ps' + ps''\n 2. ps' ## ps''\n 3. k * N = k * (e - n) + e' + m'\n 4. Q (ps', e - n)", "show \"(C, ps) \\<Rightarrow>\\<^sub>A m' \\<Down> ps' + ps''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, ps) \\<Rightarrow>\\<^sub>A m' \\<Down> ps' + ps''", "by fact"], ["proof (state)\nthis:\n  (C, ps) \\<Rightarrow>\\<^sub>A m' \\<Down> ps' + ps''\n\ngoal (3 subgoals):\n 1. ps' ## ps''\n 2. k * N = k * (e - n) + e' + m'\n 3. Q (ps', e - n)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. ps' ## ps''\n 2. k * N = k * (e - n) + e' + m'\n 3. Q (ps', e - n)", "show \"ps' ## ps''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ps' ## ps''", "by fact"], ["proof (state)\nthis:\n  ps' ## ps''\n\ngoal (2 subgoals):\n 1. k * N = k * (e - n) + e' + m'\n 2. Q (ps', e - n)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. k * N = k * (e - n) + e' + m'\n 2. Q (ps', e - n)", "have \"k * N = k * ( (N + n)- n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * N = k * (N + n - n)", "by auto"], ["proof (state)\nthis:\n  k * N = k * (N + n - n)\n\ngoal (2 subgoals):\n 1. k * N = k * (e - n) + e' + m'\n 2. Q (ps', e - n)", "also"], ["proof (state)\nthis:\n  k * N = k * (N + n - n)\n\ngoal (2 subgoals):\n 1. k * N = k * (e - n) + e' + m'\n 2. Q (ps', e - n)", "have \"\\<dots> = k*(N + n) - k*n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * (N + n - n) = k * (N + n) - k * n", "using right_diff_distrib'"], ["proof (prove)\nusing this:\n  ?a * (?b - ?c) = ?a * ?b - ?a * ?c\n\ngoal (1 subgoal):\n 1. k * (N + n - n) = k * (N + n) - k * n", "by blast"], ["proof (state)\nthis:\n  k * (N + n - n) = k * (N + n) - k * n\n\ngoal (2 subgoals):\n 1. k * N = k * (e - n) + e' + m'\n 2. Q (ps', e - n)", "also"], ["proof (state)\nthis:\n  k * (N + n - n) = k * (N + n) - k * n\n\ngoal (2 subgoals):\n 1. k * N = k * (e - n) + e' + m'\n 2. Q (ps', e - n)", "have \"\\<dots> = (k * e + e' + m') - k*n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * (N + n) - k * n = k * e + e' + m' - k * n", "using m'"], ["proof (prove)\nusing this:\n  k * (N + n) = k * e + e' + m'\n\ngoal (1 subgoal):\n 1. k * (N + n) - k * n = k * e + e' + m' - k * n", "by auto"], ["proof (state)\nthis:\n  k * (N + n) - k * n = k * e + e' + m' - k * n\n\ngoal (2 subgoals):\n 1. k * N = k * (e - n) + e' + m'\n 2. Q (ps', e - n)", "also"], ["proof (state)\nthis:\n  k * (N + n) - k * n = k * e + e' + m' - k * n\n\ngoal (2 subgoals):\n 1. k * N = k * (e - n) + e' + m'\n 2. Q (ps', e - n)", "have \"\\<dots> = k * e - k*n + e' + m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * e + e' + m' - k * n = k * e - k * n + e' + m'", "using en"], ["proof (prove)\nusing this:\n  n \\<le> e\n\ngoal (1 subgoal):\n 1. k * e + e' + m' - k * n = k * e - k * n + e' + m'", "by (metis Nat.add_diff_assoc2 ab_semigroup_add_class.add_ac(1) distrib_left le_add1 le_add_diff_inverse)"], ["proof (state)\nthis:\n  k * e + e' + m' - k * n = k * e - k * n + e' + m'\n\ngoal (2 subgoals):\n 1. k * N = k * (e - n) + e' + m'\n 2. Q (ps', e - n)", "also"], ["proof (state)\nthis:\n  k * e + e' + m' - k * n = k * e - k * n + e' + m'\n\ngoal (2 subgoals):\n 1. k * N = k * (e - n) + e' + m'\n 2. Q (ps', e - n)", "have \"\\<dots> = k * (e-n) + e' + m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * e - k * n + e' + m' = k * (e - n) + e' + m'", "by (simp add: diff_mult_distrib2)"], ["proof (state)\nthis:\n  k * e - k * n + e' + m' = k * (e - n) + e' + m'\n\ngoal (2 subgoals):\n 1. k * N = k * (e - n) + e' + m'\n 2. Q (ps', e - n)", "finally"], ["proof (chain)\npicking this:\n  k * N = k * (e - n) + e' + m'", "show \"k * N = k * (e - n) + e' + m'\""], ["proof (prove)\nusing this:\n  k * N = k * (e - n) + e' + m'\n\ngoal (1 subgoal):\n 1. k * N = k * (e - n) + e' + m'", "."], ["proof (state)\nthis:\n  k * N = k * (e - n) + e' + m'\n\ngoal (1 subgoal):\n 1. Q (ps', e - n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Q (ps', e - n)", "show \"Q (ps', e - n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q (ps', e - n)", "by fact"], ["proof (state)\nthis:\n  Q (ps', e - n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m e e'.\n     (C, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> k * N = k * e + e' + m \\<and> Q (ps', e)\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P \\<and>* $ (m - n)} C { Q}\n\ngoal:\nNo subgoals!", "qed"], ["", "thm hoareT_sound2_part E_extendsR"], ["", "lemma hoareT_sound2_partR: \"\\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q} \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} c {Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q} \\<Longrightarrow>\n    \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}", "using hoareT_sound2_part E_extendsR"], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>3\\<^sub>' {?P} ?c { ?Q} \\<Longrightarrow>\n  \\<Turnstile>\\<^sub>3\\<^sub>' {?P} ?c { ?Q}\n  \\<turnstile>\\<^sub>3\\<^sub>a {?P} ?c { ?F} \\<Longrightarrow>\n  \\<turnstile>\\<^sub>3\\<^sub>' {?P} ?c { ?F}\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q} \\<Longrightarrow>\n    \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}", "by blast"], ["", "subsubsection \\<open>nice example\\<close>"], ["", "lemma Frame_R:  assumes \"\\<turnstile>\\<^sub>3\\<^sub>' { P } C { Q  }\" \"Frame P' P F\"\n             shows \"\\<turnstile>\\<^sub>3\\<^sub>' { P' } C { Q ** F } \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>' {P'} C { Q \\<and>* F}", "apply(rule conseq[where k=1])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<turnstile>\\<^sub>3\\<^sub>' {?P} C { ?Q}\n 2. \\<And>s n. P' (s, n) \\<Longrightarrow> ?P (s, 1 * n)\n 3. \\<And>s n. ?Q (s, n) \\<Longrightarrow> (Q \\<and>* F) (s, n div 1)\n 4. 0 < 1", "apply(rule Frame)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<turnstile>\\<^sub>3\\<^sub>' {?P5} C { ?Q5}\n 2. \\<And>s n. P' (s, n) \\<Longrightarrow> (?P5 \\<and>* ?F5) (s, 1 * n)\n 3. \\<And>s n.\n       (?Q5 \\<and>* ?F5) (s, n) \\<Longrightarrow> (Q \\<and>* F) (s, n div 1)\n 4. 0 < 1", "apply(rule assms(1))"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s n. P' (s, n) \\<Longrightarrow> (P \\<and>* ?F5) (s, 1 * n)\n 2. \\<And>s n.\n       (Q \\<and>* ?F5) (s, n) \\<Longrightarrow> (Q \\<and>* F) (s, n div 1)\n 3. 0 < 1", "using assms(2)"], ["proof (prove)\nusing this:\n  Frame P' P F\n\ngoal (3 subgoals):\n 1. \\<And>s n. P' (s, n) \\<Longrightarrow> (P \\<and>* ?F5) (s, 1 * n)\n 2. \\<And>s n.\n       (Q \\<and>* ?F5) (s, n) \\<Longrightarrow> (Q \\<and>* F) (s, n div 1)\n 3. 0 < 1", "unfolding Frame_def"], ["proof (prove)\nusing this:\n  \\<forall>s. P' s \\<longrightarrow> (P \\<and>* F) s\n\ngoal (3 subgoals):\n 1. \\<And>s n. P' (s, n) \\<Longrightarrow> (P \\<and>* ?F5) (s, 1 * n)\n 2. \\<And>s n.\n       (Q \\<and>* ?F5) (s, n) \\<Longrightarrow> (Q \\<and>* F) (s, n div 1)\n 3. 0 < 1", "by auto"], ["", "lemma strengthen_post: assumes \"\\<turnstile>\\<^sub>3\\<^sub>' {P}c{Q}\" \"\\<And>s. Q s \\<Longrightarrow> Q' s\"\n  shows \"\\<turnstile>\\<^sub>3\\<^sub>' {P}c{ Q'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q'}", "apply(rule conseq[where k=1])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<turnstile>\\<^sub>3\\<^sub>' {?P} c { ?Q}\n 2. \\<And>s n. P (s, n) \\<Longrightarrow> ?P (s, 1 * n)\n 3. \\<And>s n. ?Q (s, n) \\<Longrightarrow> Q' (s, n div 1)\n 4. 0 < 1", "apply (rule assms(1))"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s n. P (s, n) \\<Longrightarrow> P (s, 1 * n)\n 2. \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n div 1)\n 3. 0 < 1", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n div 1)\n 2. 0 < 1", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n)\n 2. 0 < 1", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemmas strongAssign = Assign''''[OF _ strengthen_post, OF _ Frame_R, OF _ Assign''']"], ["", "lemma weakenpre:  \"\\<lbrakk> \\<turnstile>\\<^sub>3\\<^sub>' {P}c{Q} ; \\<And>s. P' s \\<Longrightarrow> P s  \\<rbrakk> \\<Longrightarrow>\n           \\<turnstile>\\<^sub>3\\<^sub>' {P'}c{ Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n     \\<And>s. P' s \\<Longrightarrow> P s\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P'} c { Q}", "using conseq[where k=1]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {?P} ?c { ?Q};\n   \\<And>s n. ?P' (s, n) \\<Longrightarrow> ?P (s, 1 * n);\n   \\<And>s n. ?Q (s, n) \\<Longrightarrow> ?Q' (s, n div 1); 0 < 1\\<rbrakk>\n  \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {?P'} ?c { ?Q'}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q};\n     \\<And>s. P' s \\<Longrightarrow> P s\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P'} c { Q}", "by auto"], ["", "lemma weakenpreR:  \"\\<lbrakk> \\<turnstile>\\<^sub>3\\<^sub>a {P}c{Q} ; \\<And>s. P' s \\<Longrightarrow> P s  \\<rbrakk> \\<Longrightarrow>\n           \\<turnstile>\\<^sub>3\\<^sub>a {P'}c{ Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q};\n     \\<And>s. P' s \\<Longrightarrow> P s\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {P'} c { Q}", "using hoare3a.conseqS"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {?P} ?c { ?Q};\n   \\<And>s n. ?P' (s, n) \\<Longrightarrow> ?P (s, n);\n   \\<And>s n. ?Q (s, n) \\<Longrightarrow> ?Q' (s, n)\\<rbrakk>\n  \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {?P'} ?c { ?Q'}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q};\n     \\<And>s. P' s \\<Longrightarrow> P s\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {P'} c { Q}", "by auto"], ["", "subsection \"Completeness\""], ["", "definition wp3' :: \"com \\<Rightarrow> assn2 \\<Rightarrow> assn2\" (\"wp\\<^sub>3\\<^sub>''\") where \n\"wp\\<^sub>3\\<^sub>' c Q  =  (\\<lambda>(s,n). \\<exists>t m. n\\<ge>m \\<and> (c,s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and> Q (t,n-m))\""], ["", "lemma wp3Skip[simp]: \"wp\\<^sub>3\\<^sub>' SKIP Q = (Q ** $1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' SKIP Q = (Q \\<and>* $ 1)", "apply (auto intro!: ext simp: wp3'_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>Suc 0 \\<le> b; Q (a, b - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> (Q \\<and>* $ (Suc 0)) (a, b)\n 2. \\<And>a b.\n       (Q \\<and>* $ (Suc 0)) (a, b) \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> b \\<and>\n          (SKIP, a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and> Q (t, b - m)", "unfolding sep_conj_def dollar_def sep_disj_prod_def sep_disj_nat_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>Suc 0 \\<le> b; Q (a, b - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x y.\n                            (fst x ## fst y \\<and> True) \\<and>\n                            (a, b) = x + y \\<and>\n                            Q x \\<and>\n                            (case y of\n                             (s, c) \\<Rightarrow> s = 0 \\<and> c = Suc 0)\n 2. \\<And>a b.\n       \\<exists>x y.\n          (fst x ## fst y \\<and> True) \\<and>\n          (a, b) = x + y \\<and>\n          Q x \\<and>\n          (case y of\n           (s, c) \\<Rightarrow> s = 0 \\<and> c = Suc 0) \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> b \\<and>\n          (SKIP, a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and> Q (t, b - m)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>Suc 0 \\<le> b; Q (a, b - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba. b = Suc ba \\<and> Q (a, ba)\n 2. \\<And>a ba.\n       Q (a, ba) \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> Suc ba \\<and>\n          (SKIP, a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n          Q (t, Suc ba - m)", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ba.\n       Q (a, ba) \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> Suc ba \\<and>\n          (SKIP, a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n          Q (t, Suc ba - m)", "subgoal for t n"], ["proof (prove)\ngoal (1 subgoal):\n 1. Q (t, n) \\<Longrightarrow>\n    \\<exists>ta m.\n       m \\<le> Suc n \\<and>\n       (SKIP, t) \\<Rightarrow>\\<^sub>A m \\<Down> ta \\<and> Q (ta, Suc n - m)", "apply(rule exI[where x=t])"], ["proof (prove)\ngoal (1 subgoal):\n 1. Q (t, n) \\<Longrightarrow>\n    \\<exists>m\\<le>Suc n.\n       (SKIP, t) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and> Q (t, Suc n - m)", "apply(rule exI[where x=\"Suc 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. Q (t, n) \\<Longrightarrow>\n    Suc 0 \\<le> Suc n \\<and>\n    (SKIP, t) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> t \\<and>\n    Q (t, Suc n - Suc 0)", "using big_step_t_part.Skip"], ["proof (prove)\nusing this:\n  (SKIP, ?s) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> ?s\n\ngoal (1 subgoal):\n 1. Q (t, n) \\<Longrightarrow>\n    Suc 0 \\<le> Suc n \\<and>\n    (SKIP, t) \\<Rightarrow>\\<^sub>A Suc 0 \\<Down> t \\<and>\n    Q (t, Suc n - Suc 0)", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma wp3Assign[simp]: \"wp\\<^sub>3\\<^sub>' (x ::= e) Q = ((\\<lambda>(ps,t). vars e \\<union> {x} \\<subseteq> dom ps \\<and> Q (ps(x \\<mapsto> paval e ps),t)) ** $1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' (x ::= e) Q =\n    ((\\<lambda>(ps, t).\n         vars e \\<union> {x} \\<subseteq> dom ps \\<and>\n         Q (ps(x \\<mapsto> paval e ps), t)) \\<and>*\n     $ 1)", "apply (auto intro!: ext simp: wp3'_def )"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b y.\n       \\<lbrakk>Suc 0 \\<le> b; Q (a(x \\<mapsto> paval e a), b - Suc 0);\n        vars e \\<subseteq> dom a; a x = Some y\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>(ps, t).\n                              x \\<in> dom ps \\<and>\n                              vars e \\<subseteq> dom ps \\<and>\n                              Q (ps(x \\<mapsto> paval e ps), t)) \\<and>*\n                          $ (Suc 0))\n                          (a, b)\n 2. \\<And>a b.\n       ((\\<lambda>(ps, t).\n            x \\<in> dom ps \\<and>\n            vars e \\<subseteq> dom ps \\<and>\n            Q (ps(x \\<mapsto> paval e ps), t)) \\<and>*\n        $ (Suc 0))\n        (a, b) \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> b \\<and>\n          (x ::= e, a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and> Q (t, b - m)", "unfolding sep_conj_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b y.\n       \\<lbrakk>Suc 0 \\<le> b; Q (a(x \\<mapsto> paval e a), b - Suc 0);\n        vars e \\<subseteq> dom a; a x = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa y.\n                            xa ## y \\<and>\n                            (a, b) = xa + y \\<and>\n                            (case xa of\n                             (ps, t) \\<Rightarrow>\n                               x \\<in> dom ps \\<and>\n                               vars e \\<subseteq> dom ps \\<and>\n                               Q (ps(x \\<mapsto> paval e ps), t)) \\<and>\n                            $ (Suc 0) y\n 2. \\<And>a b.\n       \\<exists>xa y.\n          xa ## y \\<and>\n          (a, b) = xa + y \\<and>\n          (case xa of\n           (ps, t) \\<Rightarrow>\n             x \\<in> dom ps \\<and>\n             vars e \\<subseteq> dom ps \\<and>\n             Q (ps(x \\<mapsto> paval e ps), t)) \\<and>\n          $ (Suc 0) y \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> b \\<and>\n          (x ::= e, a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and> Q (t, b - m)", "apply (auto simp: sep_disj_prod_def sep_disj_nat_def dollar_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b y.\n       \\<lbrakk>Suc 0 \\<le> b; Q (a(x \\<mapsto> paval e a), b - Suc 0);\n        vars e \\<subseteq> dom a; a x = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            b = Suc ba \\<and>\n                            x \\<in> dom a \\<and>\n                            Q (a(x \\<mapsto> paval e a), ba)\n 2. \\<And>a ba y.\n       \\<lbrakk>a x = Some y; vars e \\<subseteq> dom a;\n        Q (a(x \\<mapsto> paval e a), ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t m.\n                            m \\<le> Suc ba \\<and>\n                            (x ::= e,\n                             a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                            Q (t, Suc ba - m)", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ba y.\n       \\<lbrakk>a x = Some y; vars e \\<subseteq> dom a;\n        Q (a(x \\<mapsto> paval e a), ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t m.\n                            m \\<le> Suc ba \\<and>\n                            (x ::= e,\n                             a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                            Q (t, Suc ba - m)", "by fastforce"], ["", "lemma wpt_Seq[simp]: \"wp\\<^sub>3\\<^sub>' (c\\<^sub>1;;c\\<^sub>2) Q = wp\\<^sub>3\\<^sub>' c\\<^sub>1 (wp\\<^sub>3\\<^sub>' c\\<^sub>2 Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' (c\\<^sub>1;; c\\<^sub>2) Q =\n    wp\\<^sub>3\\<^sub>' c\\<^sub>1 (wp\\<^sub>3\\<^sub>' c\\<^sub>2 Q)", "apply (auto simp: wp3'_def fun_eq_iff )"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b t x s2 y.\n       \\<lbrakk>x + y \\<le> b; Q (t, b - (x + y));\n        (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A x \\<Down> s2;\n        (c\\<^sub>2, s2) \\<Rightarrow>\\<^sub>A y \\<Down> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t m.\n                            m \\<le> b \\<and>\n                            (c\\<^sub>1,\n                             a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                            (\\<exists>ta ma.\n                                ma \\<le> b - m \\<and>\n                                (c\\<^sub>2,\n                                 t) \\<Rightarrow>\\<^sub>A ma \\<Down> ta \\<and>\n                                Q (ta, b - (m + ma)))\n 2. \\<And>a b t m ta ma.\n       \\<lbrakk>m \\<le> b; (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m \\<Down> t;\n        ma \\<le> b - m; (c\\<^sub>2, t) \\<Rightarrow>\\<^sub>A ma \\<Down> ta;\n        Q (ta, b - (m + ma))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t m.\n                            m \\<le> b \\<and>\n                            (c\\<^sub>1;; c\\<^sub>2,\n                             a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                            Q (t, b - m)", "subgoal for a b t m1 s2 m2"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m1 + m2 \\<le> b; Q (t, b - (m1 + m2));\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m1 \\<Down> s2;\n     (c\\<^sub>2, s2) \\<Rightarrow>\\<^sub>A m2 \\<Down> t\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t m.\n                         m \\<le> b \\<and>\n                         (c\\<^sub>1,\n                          a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                         (\\<exists>ta ma.\n                             ma \\<le> b - m \\<and>\n                             (c\\<^sub>2,\n                              t) \\<Rightarrow>\\<^sub>A ma \\<Down> ta \\<and>\n                             Q (ta, b - (m + ma)))", "apply(rule exI[where x=\"s2\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m1 + m2 \\<le> b; Q (t, b - (m1 + m2));\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m1 \\<Down> s2;\n     (c\\<^sub>2, s2) \\<Rightarrow>\\<^sub>A m2 \\<Down> t\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m\\<le>b.\n                         (c\\<^sub>1,\n                          a) \\<Rightarrow>\\<^sub>A m \\<Down> s2 \\<and>\n                         (\\<exists>t ma.\n                             ma \\<le> b - m \\<and>\n                             (c\\<^sub>2,\n                              s2) \\<Rightarrow>\\<^sub>A ma \\<Down> t \\<and>\n                             Q (t, b - (m + ma)))", "apply(rule exI[where x=\"m1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m1 + m2 \\<le> b; Q (t, b - (m1 + m2));\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m1 \\<Down> s2;\n     (c\\<^sub>2, s2) \\<Rightarrow>\\<^sub>A m2 \\<Down> t\\<rbrakk>\n    \\<Longrightarrow> m1 \\<le> b \\<and>\n                      (c\\<^sub>1,\n                       a) \\<Rightarrow>\\<^sub>A m1 \\<Down> s2 \\<and>\n                      (\\<exists>t m.\n                          m \\<le> b - m1 \\<and>\n                          (c\\<^sub>2,\n                           s2) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                          Q (t, b - (m1 + m)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m1 + m2 \\<le> b; Q (t, b - (m1 + m2));\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m1 \\<Down> s2;\n     (c\\<^sub>2, s2) \\<Rightarrow>\\<^sub>A m2 \\<Down> t\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t m.\n                         m \\<le> b - m1 \\<and>\n                         (c\\<^sub>2,\n                          s2) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                         Q (t, b - (m1 + m))", "apply(rule exI[where x=\"t\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m1 + m2 \\<le> b; Q (t, b - (m1 + m2));\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m1 \\<Down> s2;\n     (c\\<^sub>2, s2) \\<Rightarrow>\\<^sub>A m2 \\<Down> t\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m\\<le>b - m1.\n                         (c\\<^sub>2,\n                          s2) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                         Q (t, b - (m1 + m))", "apply(rule exI[where x=\"m2\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m1 + m2 \\<le> b; Q (t, b - (m1 + m2));\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m1 \\<Down> s2;\n     (c\\<^sub>2, s2) \\<Rightarrow>\\<^sub>A m2 \\<Down> t\\<rbrakk>\n    \\<Longrightarrow> m2 \\<le> b - m1 \\<and>\n                      (c\\<^sub>2,\n                       s2) \\<Rightarrow>\\<^sub>A m2 \\<Down> t \\<and>\n                      Q (t, b - (m1 + m2))", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b t m ta ma.\n       \\<lbrakk>m \\<le> b; (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m \\<Down> t;\n        ma \\<le> b - m; (c\\<^sub>2, t) \\<Rightarrow>\\<^sub>A ma \\<Down> ta;\n        Q (ta, b - (m + ma))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t m.\n                            m \\<le> b \\<and>\n                            (c\\<^sub>1;; c\\<^sub>2,\n                             a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                            Q (t, b - m)", "subgoal for s m t' m1 t m2"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m1 \\<le> m; (c\\<^sub>1, s) \\<Rightarrow>\\<^sub>A m1 \\<Down> t';\n     m2 \\<le> m - m1; (c\\<^sub>2, t') \\<Rightarrow>\\<^sub>A m2 \\<Down> t;\n     Q (t, m - (m1 + m2))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t ma.\n                         ma \\<le> m \\<and>\n                         (c\\<^sub>1;; c\\<^sub>2,\n                          s) \\<Rightarrow>\\<^sub>A ma \\<Down> t \\<and>\n                         Q (t, m - ma)", "apply(rule exI[where x=\"t\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m1 \\<le> m; (c\\<^sub>1, s) \\<Rightarrow>\\<^sub>A m1 \\<Down> t';\n     m2 \\<le> m - m1; (c\\<^sub>2, t') \\<Rightarrow>\\<^sub>A m2 \\<Down> t;\n     Q (t, m - (m1 + m2))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ma\\<le>m.\n                         (c\\<^sub>1;; c\\<^sub>2,\n                          s) \\<Rightarrow>\\<^sub>A ma \\<Down> t \\<and>\n                         Q (t, m - ma)", "apply(rule exI[where x=\"m1+m2\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m1 \\<le> m; (c\\<^sub>1, s) \\<Rightarrow>\\<^sub>A m1 \\<Down> t';\n     m2 \\<le> m - m1; (c\\<^sub>2, t') \\<Rightarrow>\\<^sub>A m2 \\<Down> t;\n     Q (t, m - (m1 + m2))\\<rbrakk>\n    \\<Longrightarrow> m1 + m2 \\<le> m \\<and>\n                      (c\\<^sub>1;; c\\<^sub>2,\n                       s) \\<Rightarrow>\\<^sub>A m1 + m2 \\<Down> t \\<and>\n                      Q (t, m - (m1 + m2))", "apply (auto simp: big_step_t_part.Seq)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma wp3If[simp]:\n \"wp\\<^sub>3\\<^sub>' (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2) Q = ((\\<lambda>(ps,t). vars b \\<subseteq> dom ps \\<and> wp\\<^sub>3\\<^sub>' (if pbval b ps then c\\<^sub>1 else c\\<^sub>2) Q (ps,t)) ** $1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2) Q =\n    ((\\<lambda>(ps, t).\n         vars b \\<subseteq> dom ps \\<and>\n         wp\\<^sub>3\\<^sub>' (if pbval b ps then c\\<^sub>1 else c\\<^sub>2) Q\n          (ps, t)) \\<and>*\n     $ 1)", "apply (auto simp: wp3'_def fun_eq_iff)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a ba t x.\n       \\<lbrakk>Suc x \\<le> ba; Q (t, ba - Suc x); vars b \\<subseteq> dom a;\n        dom t = dom a; pbval b a;\n        (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A x \\<Down> t\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>(ps, t).\n                              vars b \\<subseteq> dom ps \\<and>\n                              (\\<exists>ta m.\n                                  m \\<le> t \\<and>\n                                  (if pbval b ps then c\\<^sub>1\n                                   else c\\<^sub>2,\n                                   ps) \\<Rightarrow>\\<^sub>A m \\<Down> ta \\<and>\n                                  Q (ta, t - m))) \\<and>*\n                          $ (Suc 0))\n                          (a, ba)\n 2. \\<And>a ba t x.\n       \\<lbrakk>Suc x \\<le> ba; Q (t, ba - Suc x); vars b \\<subseteq> dom a;\n        dom t = dom a; \\<not> pbval b a;\n        (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A x \\<Down> t\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>(ps, t).\n                              vars b \\<subseteq> dom ps \\<and>\n                              (\\<exists>ta m.\n                                  m \\<le> t \\<and>\n                                  (if pbval b ps then c\\<^sub>1\n                                   else c\\<^sub>2,\n                                   ps) \\<Rightarrow>\\<^sub>A m \\<Down> ta \\<and>\n                                  Q (ta, t - m))) \\<and>*\n                          $ (Suc 0))\n                          (a, ba)\n 3. \\<And>a ba.\n       ((\\<lambda>(ps, t).\n            vars b \\<subseteq> dom ps \\<and>\n            (\\<exists>ta m.\n                m \\<le> t \\<and>\n                (if pbval b ps then c\\<^sub>1 else c\\<^sub>2,\n                 ps) \\<Rightarrow>\\<^sub>A m \\<Down> ta \\<and>\n                Q (ta, t - m))) \\<and>*\n        $ (Suc 0))\n        (a, ba) \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> ba \\<and>\n          (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n           a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n          Q (t, ba - m)", "unfolding sep_conj_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a ba t x.\n       \\<lbrakk>Suc x \\<le> ba; Q (t, ba - Suc x); vars b \\<subseteq> dom a;\n        dom t = dom a; pbval b a;\n        (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A x \\<Down> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x y.\n                            x ## y \\<and>\n                            (a, ba) = x + y \\<and>\n                            (case x of\n                             (ps, t) \\<Rightarrow>\n                               vars b \\<subseteq> dom ps \\<and>\n                               (\\<exists>ta m.\n                                   m \\<le> t \\<and>\n                                   (if pbval b ps then c\\<^sub>1\n                                    else c\\<^sub>2,\n                                    ps) \\<Rightarrow>\\<^sub>A m \\<Down> ta \\<and>\n                                   Q (ta, t - m))) \\<and>\n                            $ (Suc 0) y\n 2. \\<And>a ba t x.\n       \\<lbrakk>Suc x \\<le> ba; Q (t, ba - Suc x); vars b \\<subseteq> dom a;\n        dom t = dom a; \\<not> pbval b a;\n        (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A x \\<Down> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x y.\n                            x ## y \\<and>\n                            (a, ba) = x + y \\<and>\n                            (case x of\n                             (ps, t) \\<Rightarrow>\n                               vars b \\<subseteq> dom ps \\<and>\n                               (\\<exists>ta m.\n                                   m \\<le> t \\<and>\n                                   (if pbval b ps then c\\<^sub>1\n                                    else c\\<^sub>2,\n                                    ps) \\<Rightarrow>\\<^sub>A m \\<Down> ta \\<and>\n                                   Q (ta, t - m))) \\<and>\n                            $ (Suc 0) y\n 3. \\<And>a ba.\n       \\<exists>x y.\n          x ## y \\<and>\n          (a, ba) = x + y \\<and>\n          (case x of\n           (ps, t) \\<Rightarrow>\n             vars b \\<subseteq> dom ps \\<and>\n             (\\<exists>ta m.\n                 m \\<le> t \\<and>\n                 (if pbval b ps then c\\<^sub>1 else c\\<^sub>2,\n                  ps) \\<Rightarrow>\\<^sub>A m \\<Down> ta \\<and>\n                 Q (ta, t - m))) \\<and>\n          $ (Suc 0) y \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> ba \\<and>\n          (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n           a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n          Q (t, ba - m)", "apply (auto simp: sep_disj_prod_def sep_disj_nat_def dollar_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a ba t x.\n       \\<lbrakk>Suc x \\<le> ba; Q (t, ba - Suc x); vars b \\<subseteq> dom a;\n        dom t = dom a; pbval b a;\n        (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A x \\<Down> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            ba = Suc b \\<and>\n                            (\\<exists>t m.\n                                m \\<le> b \\<and>\n                                (c\\<^sub>1,\n                                 a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                                Q (t, b - m))\n 2. \\<And>a ba t x.\n       \\<lbrakk>Suc x \\<le> ba; Q (t, ba - Suc x); vars b \\<subseteq> dom a;\n        dom t = dom a; \\<not> pbval b a;\n        (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A x \\<Down> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            ba = Suc b \\<and>\n                            (\\<exists>t m.\n                                m \\<le> b \\<and>\n                                (c\\<^sub>2,\n                                 a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                                Q (t, b - m))\n 3. \\<And>a ba t m.\n       \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n        (if pbval b a then c\\<^sub>1 else c\\<^sub>2,\n         a) \\<Rightarrow>\\<^sub>A m \\<Down> t;\n        Q (t, ba - m)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t m.\n                            m \\<le> Suc ba \\<and>\n                            (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                             a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                            Q (t, Suc ba - m)", "subgoal for a ba t x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Suc x \\<le> ba; Q (t, ba - Suc x); vars b \\<subseteq> dom a;\n     dom t = dom a; pbval b a;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A x \\<Down> t\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b.\n                         ba = Suc b \\<and>\n                         (\\<exists>t m.\n                             m \\<le> b \\<and>\n                             (c\\<^sub>1,\n                              a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                             Q (t, b - m))", "apply(rule exI[where x=\"ba - 1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Suc x \\<le> ba; Q (t, ba - Suc x); vars b \\<subseteq> dom a;\n     dom t = dom a; pbval b a;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A x \\<Down> t\\<rbrakk>\n    \\<Longrightarrow> ba = Suc (ba - 1) \\<and>\n                      (\\<exists>t m.\n                          m \\<le> ba - 1 \\<and>\n                          (c\\<^sub>1,\n                           a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                          Q (t, ba - 1 - m))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Suc x \\<le> ba; Q (t, ba - Suc x); vars b \\<subseteq> dom a;\n     dom t = dom a; pbval b a;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A x \\<Down> t\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t m.\n                         m \\<le> ba - Suc 0 \\<and>\n                         (c\\<^sub>1,\n                          a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                         Q (t, ba - Suc m)", "apply(rule exI[where x=t])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Suc x \\<le> ba; Q (t, ba - Suc x); vars b \\<subseteq> dom a;\n     dom t = dom a; pbval b a;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A x \\<Down> t\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m\\<le>ba - Suc 0.\n                         (c\\<^sub>1,\n                          a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                         Q (t, ba - Suc m)", "apply(rule exI[where x=x])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Suc x \\<le> ba; Q (t, ba - Suc x); vars b \\<subseteq> dom a;\n     dom t = dom a; pbval b a;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A x \\<Down> t\\<rbrakk>\n    \\<Longrightarrow> x \\<le> ba - Suc 0 \\<and>\n                      (c\\<^sub>1,\n                       a) \\<Rightarrow>\\<^sub>A x \\<Down> t \\<and>\n                      Q (t, ba - Suc x)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a ba t x.\n       \\<lbrakk>Suc x \\<le> ba; Q (t, ba - Suc x); vars b \\<subseteq> dom a;\n        dom t = dom a; \\<not> pbval b a;\n        (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A x \\<Down> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            ba = Suc b \\<and>\n                            (\\<exists>t m.\n                                m \\<le> b \\<and>\n                                (c\\<^sub>2,\n                                 a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                                Q (t, b - m))\n 2. \\<And>a ba t m.\n       \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n        (if pbval b a then c\\<^sub>1 else c\\<^sub>2,\n         a) \\<Rightarrow>\\<^sub>A m \\<Down> t;\n        Q (t, ba - m)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t m.\n                            m \\<le> Suc ba \\<and>\n                            (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                             a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                            Q (t, Suc ba - m)", "subgoal for a ba t x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Suc x \\<le> ba; Q (t, ba - Suc x); vars b \\<subseteq> dom a;\n     dom t = dom a; \\<not> pbval b a;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A x \\<Down> t\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b.\n                         ba = Suc b \\<and>\n                         (\\<exists>t m.\n                             m \\<le> b \\<and>\n                             (c\\<^sub>2,\n                              a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                             Q (t, b - m))", "apply(rule exI[where x=\"ba - 1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Suc x \\<le> ba; Q (t, ba - Suc x); vars b \\<subseteq> dom a;\n     dom t = dom a; \\<not> pbval b a;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A x \\<Down> t\\<rbrakk>\n    \\<Longrightarrow> ba = Suc (ba - 1) \\<and>\n                      (\\<exists>t m.\n                          m \\<le> ba - 1 \\<and>\n                          (c\\<^sub>2,\n                           a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                          Q (t, ba - 1 - m))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Suc x \\<le> ba; Q (t, ba - Suc x); vars b \\<subseteq> dom a;\n     dom t = dom a; \\<not> pbval b a;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A x \\<Down> t\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t m.\n                         m \\<le> ba - Suc 0 \\<and>\n                         (c\\<^sub>2,\n                          a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                         Q (t, ba - Suc m)", "apply(rule exI[where x=t])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Suc x \\<le> ba; Q (t, ba - Suc x); vars b \\<subseteq> dom a;\n     dom t = dom a; \\<not> pbval b a;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A x \\<Down> t\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m\\<le>ba - Suc 0.\n                         (c\\<^sub>2,\n                          a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                         Q (t, ba - Suc m)", "apply(rule exI[where x=x])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Suc x \\<le> ba; Q (t, ba - Suc x); vars b \\<subseteq> dom a;\n     dom t = dom a; \\<not> pbval b a;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A x \\<Down> t\\<rbrakk>\n    \\<Longrightarrow> x \\<le> ba - Suc 0 \\<and>\n                      (c\\<^sub>2,\n                       a) \\<Rightarrow>\\<^sub>A x \\<Down> t \\<and>\n                      Q (t, ba - Suc x)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ba t m.\n       \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n        (if pbval b a then c\\<^sub>1 else c\\<^sub>2,\n         a) \\<Rightarrow>\\<^sub>A m \\<Down> t;\n        Q (t, ba - m)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t m.\n                            m \\<le> Suc ba \\<and>\n                            (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                             a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                            Q (t, Suc ba - m)", "subgoal for a ba t m"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (if pbval b a then c\\<^sub>1 else c\\<^sub>2,\n      a) \\<Rightarrow>\\<^sub>A m \\<Down> t;\n     Q (t, ba - m)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t m.\n                         m \\<le> Suc ba \\<and>\n                         (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                          a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                         Q (t, Suc ba - m)", "apply(rule exI[where x=t])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (if pbval b a then c\\<^sub>1 else c\\<^sub>2,\n      a) \\<Rightarrow>\\<^sub>A m \\<Down> t;\n     Q (t, ba - m)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m\\<le>Suc ba.\n                         (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                          a) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                         Q (t, Suc ba - m)", "apply(rule exI[where x=\"Suc m\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (if pbval b a then c\\<^sub>1 else c\\<^sub>2,\n      a) \\<Rightarrow>\\<^sub>A m \\<Down> t;\n     Q (t, ba - m)\\<rbrakk>\n    \\<Longrightarrow> Suc m \\<le> Suc ba \\<and>\n                      (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                       a) \\<Rightarrow>\\<^sub>A Suc m \\<Down> t \\<and>\n                      Q (t, Suc ba - Suc m)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (if pbval b a then c\\<^sub>1 else c\\<^sub>2,\n      a) \\<Rightarrow>\\<^sub>A m \\<Down> t;\n     Q (t, ba - m)\\<rbrakk>\n    \\<Longrightarrow> (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                       a) \\<Rightarrow>\\<^sub>A Suc m \\<Down> t", "apply(cases \"pbval b a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (if pbval b a then c\\<^sub>1 else c\\<^sub>2,\n      a) \\<Rightarrow>\\<^sub>A m \\<Down> t;\n     Q (t, ba - m); pbval b a\\<rbrakk>\n    \\<Longrightarrow> (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                       a) \\<Rightarrow>\\<^sub>A Suc m \\<Down> t\n 2. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (if pbval b a then c\\<^sub>1 else c\\<^sub>2,\n      a) \\<Rightarrow>\\<^sub>A m \\<Down> t;\n     Q (t, ba - m); \\<not> pbval b a\\<rbrakk>\n    \\<Longrightarrow> (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                       a) \\<Rightarrow>\\<^sub>A Suc m \\<Down> t", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (if pbval b a then c\\<^sub>1 else c\\<^sub>2,\n      a) \\<Rightarrow>\\<^sub>A m \\<Down> t;\n     Q (t, ba - m); pbval b a\\<rbrakk>\n    \\<Longrightarrow> (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                       a) \\<Rightarrow>\\<^sub>A Suc m \\<Down> t", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     pbval b a\\<rbrakk>\n    \\<Longrightarrow> (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                       a) \\<Rightarrow>\\<^sub>A Suc m \\<Down> t", "apply(subst big_step_t_part.IfTrue)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     pbval b a\\<rbrakk>\n    \\<Longrightarrow> vars b \\<subseteq> dom a\n 2. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     pbval b a\\<rbrakk>\n    \\<Longrightarrow> dom t = dom a\n 3. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     pbval b a\\<rbrakk>\n    \\<Longrightarrow> pbval b a\n 4. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     pbval b a\\<rbrakk>\n    \\<Longrightarrow> (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A ?x2 \\<Down> t\n 5. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     pbval b a\\<rbrakk>\n    \\<Longrightarrow> Suc m = ?x2 + 1\n 6. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     pbval b a\\<rbrakk>\n    \\<Longrightarrow> True", "using big_step_t3_post_dom_conv"], ["proof (prove)\nusing this:\n  (?c, ?ps) \\<Rightarrow>\\<^sub>A ?t \\<Down> ?ps' \\<Longrightarrow>\n  dom ?ps' = dom ?ps\n\ngoal (6 subgoals):\n 1. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     pbval b a\\<rbrakk>\n    \\<Longrightarrow> vars b \\<subseteq> dom a\n 2. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     pbval b a\\<rbrakk>\n    \\<Longrightarrow> dom t = dom a\n 3. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     pbval b a\\<rbrakk>\n    \\<Longrightarrow> pbval b a\n 4. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     pbval b a\\<rbrakk>\n    \\<Longrightarrow> (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A ?x2 \\<Down> t\n 5. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     pbval b a\\<rbrakk>\n    \\<Longrightarrow> Suc m = ?x2 + 1\n 6. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>1, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     pbval b a\\<rbrakk>\n    \\<Longrightarrow> True", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (if pbval b a then c\\<^sub>1 else c\\<^sub>2,\n      a) \\<Rightarrow>\\<^sub>A m \\<Down> t;\n     Q (t, ba - m); \\<not> pbval b a\\<rbrakk>\n    \\<Longrightarrow> (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                       a) \\<Rightarrow>\\<^sub>A Suc m \\<Down> t", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (if pbval b a then c\\<^sub>1 else c\\<^sub>2,\n      a) \\<Rightarrow>\\<^sub>A m \\<Down> t;\n     Q (t, ba - m); \\<not> pbval b a\\<rbrakk>\n    \\<Longrightarrow> (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                       a) \\<Rightarrow>\\<^sub>A Suc m \\<Down> t", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     \\<not> pbval b a\\<rbrakk>\n    \\<Longrightarrow> (IF b THEN c\\<^sub>1 ELSE c\\<^sub>2,\n                       a) \\<Rightarrow>\\<^sub>A Suc m \\<Down> t", "apply(subst big_step_t_part.IfFalse)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     \\<not> pbval b a\\<rbrakk>\n    \\<Longrightarrow> vars b \\<subseteq> dom a\n 2. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     \\<not> pbval b a\\<rbrakk>\n    \\<Longrightarrow> dom t = dom a\n 3. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     \\<not> pbval b a\\<rbrakk>\n    \\<Longrightarrow> \\<not> pbval b a\n 4. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     \\<not> pbval b a\\<rbrakk>\n    \\<Longrightarrow> (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A ?x2 \\<Down> t\n 5. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     \\<not> pbval b a\\<rbrakk>\n    \\<Longrightarrow> Suc m = ?x2 + 1\n 6. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     \\<not> pbval b a\\<rbrakk>\n    \\<Longrightarrow> True", "using big_step_t3_post_dom_conv"], ["proof (prove)\nusing this:\n  (?c, ?ps) \\<Rightarrow>\\<^sub>A ?t \\<Down> ?ps' \\<Longrightarrow>\n  dom ?ps' = dom ?ps\n\ngoal (6 subgoals):\n 1. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     \\<not> pbval b a\\<rbrakk>\n    \\<Longrightarrow> vars b \\<subseteq> dom a\n 2. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     \\<not> pbval b a\\<rbrakk>\n    \\<Longrightarrow> dom t = dom a\n 3. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     \\<not> pbval b a\\<rbrakk>\n    \\<Longrightarrow> \\<not> pbval b a\n 4. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     \\<not> pbval b a\\<rbrakk>\n    \\<Longrightarrow> (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A ?x2 \\<Down> t\n 5. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     \\<not> pbval b a\\<rbrakk>\n    \\<Longrightarrow> Suc m = ?x2 + 1\n 6. \\<lbrakk>vars b \\<subseteq> dom a; m \\<le> ba;\n     (c\\<^sub>2, a) \\<Rightarrow>\\<^sub>A m \\<Down> t; Q (t, ba - m);\n     \\<not> pbval b a\\<rbrakk>\n    \\<Longrightarrow> True", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma sFTrue: assumes \"pbval b ps\" \"vars b \\<subseteq> dom ps\"\n  shows \"wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) = ((\\<lambda>(ps, n). vars b \\<subseteq> dom ps \\<and> (if pbval b ps then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (ps, n) else Q (ps, n))) \\<and>* $ 1) (ps, n)\"\n    (is \"?wp = (?I \\<and>* $ 1) _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) =\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) \\<Longrightarrow>\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)\n 2. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "assume \"wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)\""], ["proof (state)\nthis:\n  wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)\n\ngoal (2 subgoals):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) \\<Longrightarrow>\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)\n 2. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "from this[unfolded wp3'_def]"], ["proof (chain)\npicking this:\n  case (ps, n) of\n  (s, n) \\<Rightarrow>\n    \\<exists>t m.\n       m \\<le> n \\<and>\n       (WHILE b DO c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n       Q (t, n - m)", "obtain ps'' tt where tn: \"tt \\<le> n\" and w1: \"(WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A tt \\<Down> ps''\" and Q: \"Q (ps'', n - tt) \""], ["proof (prove)\nusing this:\n  case (ps, n) of\n  (s, n) \\<Rightarrow>\n    \\<exists>t m.\n       m \\<le> n \\<and>\n       (WHILE b DO c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n       Q (t, n - m)\n\ngoal (1 subgoal):\n 1. (\\<And>tt ps''.\n        \\<lbrakk>tt \\<le> n;\n         (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A tt \\<Down> ps'';\n         Q (ps'', n - tt)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  tt \\<le> n\n  (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A tt \\<Down> ps''\n  Q (ps'', n - tt)\n\ngoal (2 subgoals):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) \\<Longrightarrow>\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)\n 2. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "with assms"], ["proof (chain)\npicking this:\n  pbval b ps\n  vars b \\<subseteq> dom ps\n  tt \\<le> n\n  (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A tt \\<Down> ps''\n  Q (ps'', n - tt)", "obtain t t' ps' where w2: \"(WHILE b DO c, ps') \\<Rightarrow>\\<^sub>A t' \\<Down> ps''\" and c: \"(c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps'\" and tt: \"tt=1+t+t'\""], ["proof (prove)\nusing this:\n  pbval b ps\n  vars b \\<subseteq> dom ps\n  tt \\<le> n\n  (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A tt \\<Down> ps''\n  Q (ps'', n - tt)\n\ngoal (1 subgoal):\n 1. (\\<And>ps' t' t.\n        \\<lbrakk>(WHILE b DO c, ps') \\<Rightarrow>\\<^sub>A t' \\<Down> ps'';\n         (c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps';\n         tt = 1 + t + t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (WHILE b DO c, ps') \\<Rightarrow>\\<^sub>A t' \\<Down> ps''\n  (c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps'\n  tt = 1 + t + t'\n\ngoal (2 subgoals):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) \\<Longrightarrow>\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)\n 2. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "from tn"], ["proof (chain)\npicking this:\n  tt \\<le> n", "obtain k where n: \"n=tt+k\""], ["proof (prove)\nusing this:\n  tt \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>k. n = tt + k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using le_Suc_ex"], ["proof (prove)\nusing this:\n  tt \\<le> n\n  ?k \\<le> ?l \\<Longrightarrow> \\<exists>n. ?l = ?k + n\n\ngoal (1 subgoal):\n 1. (\\<And>k. n = tt + k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  n = tt + k\n\ngoal (2 subgoals):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) \\<Longrightarrow>\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)\n 2. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "from assms"], ["proof (chain)\npicking this:\n  pbval b ps\n  vars b \\<subseteq> dom ps", "show \"(?I \\<and>* $ 1) (ps,n)\""], ["proof (prove)\nusing this:\n  pbval b ps\n  vars b \\<subseteq> dom ps\n\ngoal (1 subgoal):\n 1. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)", "unfolding sep_conj_def dollar_def  wp3'_def"], ["proof (prove)\nusing this:\n  pbval b ps\n  vars b \\<subseteq> dom ps\n\ngoal (1 subgoal):\n 1. \\<exists>x y.\n       x ## y \\<and>\n       (ps, n) = x + y \\<and>\n       (case x of\n        (ps, n) \\<Rightarrow>\n          vars b \\<subseteq> dom ps \\<and>\n          (if pbval b ps\n           then case (ps, n) of\n                (s, n) \\<Rightarrow>\n                  \\<exists>t m.\n                     m \\<le> n \\<and>\n                     (c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                     (case (t, n - m) of\n                      (s, n) \\<Rightarrow>\n                        \\<exists>t m.\n                           m \\<le> n \\<and>\n                           (WHILE b DO c,\n                            s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                           Q (t, n - m))\n           else Q (ps, n))) \\<and>\n       (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = 1)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pbval b ps; vars b \\<subseteq> dom ps\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ba.\n                         n = Suc ba \\<and>\n                         (\\<exists>t m.\n                             m \\<le> ba \\<and>\n                             (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                             (\\<exists>ta ma.\n                                 ma \\<le> ba - m \\<and>\n                                 (WHILE b DO c,\n                                  t) \\<Rightarrow>\\<^sub>A ma \\<Down> ta \\<and>\n                                 Q (ta, ba - (m + ma))))", "apply(rule exI[where x=\"t+t'+k\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pbval b ps; vars b \\<subseteq> dom ps\\<rbrakk>\n    \\<Longrightarrow> n = Suc (t + t' + k) \\<and>\n                      (\\<exists>ta m.\n                          m \\<le> t + t' + k \\<and>\n                          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ta \\<and>\n                          (\\<exists>tb ma.\n                              ma \\<le> t + t' + k - m \\<and>\n                              (WHILE b DO c,\n                               ta) \\<Rightarrow>\\<^sub>A ma \\<Down> tb \\<and>\n                              Q (tb, t + t' + k - (m + ma))))", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>pbval b ps; vars b \\<subseteq> dom ps\\<rbrakk>\n    \\<Longrightarrow> n = Suc (t + t' + k)\n 2. \\<lbrakk>pbval b ps; vars b \\<subseteq> dom ps\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ta m.\n                         m \\<le> t + t' + k \\<and>\n                         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ta \\<and>\n                         (\\<exists>tb ma.\n                             ma \\<le> t + t' + k - m \\<and>\n                             (WHILE b DO c,\n                              ta) \\<Rightarrow>\\<^sub>A ma \\<Down> tb \\<and>\n                             Q (tb, t + t' + k - (m + ma)))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pbval b ps; vars b \\<subseteq> dom ps\\<rbrakk>\n    \\<Longrightarrow> n = Suc (t + t' + k)", "using n tt"], ["proof (prove)\nusing this:\n  n = tt + k\n  tt = 1 + t + t'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pbval b ps; vars b \\<subseteq> dom ps\\<rbrakk>\n    \\<Longrightarrow> n = Suc (t + t' + k)", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pbval b ps; vars b \\<subseteq> dom ps\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ta m.\n                         m \\<le> t + t' + k \\<and>\n                         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ta \\<and>\n                         (\\<exists>tb ma.\n                             ma \\<le> t + t' + k - m \\<and>\n                             (WHILE b DO c,\n                              ta) \\<Rightarrow>\\<^sub>A ma \\<Down> tb \\<and>\n                             Q (tb, t + t' + k - (m + ma)))", "apply(rule exI[where x=\"ps'\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pbval b ps; vars b \\<subseteq> dom ps\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m\\<le>t + t' + k.\n                         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n                         (\\<exists>ta ma.\n                             ma \\<le> t + t' + k - m \\<and>\n                             (WHILE b DO c,\n                              ps') \\<Rightarrow>\\<^sub>A ma \\<Down> ta \\<and>\n                             Q (ta, t + t' + k - (m + ma)))", "apply(rule exI[where x=\"t\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pbval b ps; vars b \\<subseteq> dom ps\\<rbrakk>\n    \\<Longrightarrow> t \\<le> t + t' + k \\<and>\n                      (c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps' \\<and>\n                      (\\<exists>ta m.\n                          m \\<le> t + t' + k - t \\<and>\n                          (WHILE b DO c,\n                           ps') \\<Rightarrow>\\<^sub>A m \\<Down> ta \\<and>\n                          Q (ta, t + t' + k - (t + m)))", "using c"], ["proof (prove)\nusing this:\n  (c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pbval b ps; vars b \\<subseteq> dom ps\\<rbrakk>\n    \\<Longrightarrow> t \\<le> t + t' + k \\<and>\n                      (c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps' \\<and>\n                      (\\<exists>ta m.\n                          m \\<le> t + t' + k - t \\<and>\n                          (WHILE b DO c,\n                           ps') \\<Rightarrow>\\<^sub>A m \\<Down> ta \\<and>\n                          Q (ta, t + t' + k - (t + m)))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pbval b ps; vars b \\<subseteq> dom ps;\n     (c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t m.\n                         m \\<le> t' + k \\<and>\n                         (WHILE b DO c,\n                          ps') \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n                         Q (t, t' + k - m)", "apply(rule exI[where x=\"ps''\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pbval b ps; vars b \\<subseteq> dom ps;\n     (c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m\\<le>t' + k.\n                         (WHILE b DO c,\n                          ps') \\<Rightarrow>\\<^sub>A m \\<Down> ps'' \\<and>\n                         Q (ps'', t' + k - m)", "apply(rule exI[where x=\"t'\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pbval b ps; vars b \\<subseteq> dom ps;\n     (c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps'\\<rbrakk>\n    \\<Longrightarrow> t' \\<le> t' + k \\<and>\n                      (WHILE b DO c,\n                       ps') \\<Rightarrow>\\<^sub>A t' \\<Down> ps'' \\<and>\n                      Q (ps'', t' + k - t')", "using w2 Q n"], ["proof (prove)\nusing this:\n  (WHILE b DO c, ps') \\<Rightarrow>\\<^sub>A t' \\<Down> ps''\n  Q (ps'', n - tt)\n  n = tt + k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pbval b ps; vars b \\<subseteq> dom ps;\n     (c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps'\\<rbrakk>\n    \\<Longrightarrow> t' \\<le> t' + k \\<and>\n                      (WHILE b DO c,\n                       ps') \\<Rightarrow>\\<^sub>A t' \\<Down> ps'' \\<and>\n                      Q (ps'', t' + k - t')", "by auto"], ["proof (state)\nthis:\n  ((\\<lambda>(ps, n).\n       vars b \\<subseteq> dom ps \\<and>\n       (if pbval b ps\n        then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n              (ps, n)\n        else Q (ps, n))) \\<and>*\n   $ 1)\n   (ps, n)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "assume \"(?I \\<and>* $ 1) (ps,n)\""], ["proof (state)\nthis:\n  ((\\<lambda>(ps, n).\n       vars b \\<subseteq> dom ps \\<and>\n       (if pbval b ps\n        then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n              (ps, n)\n        else Q (ps, n))) \\<and>*\n   $ 1)\n   (ps, n)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "with assms"], ["proof (chain)\npicking this:\n  pbval b ps\n  vars b \\<subseteq> dom ps\n  ((\\<lambda>(ps, n).\n       vars b \\<subseteq> dom ps \\<and>\n       (if pbval b ps\n        then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n              (ps, n)\n        else Q (ps, n))) \\<and>*\n   $ 1)\n   (ps, n)", "have Q: \"wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (ps, n-1)\" and n: \"n\\<ge>1\""], ["proof (prove)\nusing this:\n  pbval b ps\n  vars b \\<subseteq> dom ps\n  ((\\<lambda>(ps, n).\n       vars b \\<subseteq> dom ps \\<and>\n       (if pbval b ps\n        then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n              (ps, n)\n        else Q (ps, n))) \\<and>*\n   $ 1)\n   (ps, n)\n\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n     (ps, n - 1) &&&\n    1 \\<le> n", "unfolding dollar_def sep_conj_def"], ["proof (prove)\nusing this:\n  pbval b ps\n  vars b \\<subseteq> dom ps\n  \\<exists>x y.\n     x ## y \\<and>\n     (ps, n) = x + y \\<and>\n     (case x of\n      (ps, n) \\<Rightarrow>\n        vars b \\<subseteq> dom ps \\<and>\n        (if pbval b ps\n         then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n               (ps, n)\n         else Q (ps, n))) \\<and>\n     (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = 1)\n\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n     (ps, n - 1) &&&\n    1 \\<le> n", "by auto"], ["proof (state)\nthis:\n  wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (ps, n - 1)\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "then"], ["proof (chain)\npicking this:\n  wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (ps, n - 1)\n  1 \\<le> n", "obtain t ps' t' ps'' where t: \"t \\<le> n - 1\"  \n        and c: \"(c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps'\" and  t': \"t' \\<le> (n-1) - t\" and w: \"(WHILE b DO c, ps') \\<Rightarrow>\\<^sub>A t' \\<Down> ps''\" \n        and Q: \"Q (ps'', ((n-1) - t) - t')\""], ["proof (prove)\nusing this:\n  wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (ps, n - 1)\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>t ps' t' ps''.\n        \\<lbrakk>t \\<le> n - 1; (c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps';\n         t' \\<le> n - 1 - t;\n         (WHILE b DO c, ps') \\<Rightarrow>\\<^sub>A t' \\<Down> ps'';\n         Q (ps'', n - 1 - t - t')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding wp3'_def"], ["proof (prove)\nusing this:\n  case (ps, n - 1) of\n  (s, n) \\<Rightarrow>\n    \\<exists>t m.\n       m \\<le> n \\<and>\n       (c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n       (case (t, n - m) of\n        (s, n) \\<Rightarrow>\n          \\<exists>t m.\n             m \\<le> n \\<and>\n             (WHILE b DO c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n             Q (t, n - m))\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>t ps' t' ps''.\n        \\<lbrakk>t \\<le> n - 1; (c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps';\n         t' \\<le> n - 1 - t;\n         (WHILE b DO c, ps') \\<Rightarrow>\\<^sub>A t' \\<Down> ps'';\n         Q (ps'', n - 1 - t - t')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t \\<le> n - 1\n  (c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps'\n  t' \\<le> n - 1 - t\n  (WHILE b DO c, ps') \\<Rightarrow>\\<^sub>A t' \\<Down> ps''\n  Q (ps'', n - 1 - t - t')\n\ngoal (1 subgoal):\n 1. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "show \"?wp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "unfolding wp3'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. case (ps, n) of\n    (s, n) \\<Rightarrow>\n      \\<exists>t m.\n         m \\<le> n \\<and>\n         (WHILE b DO c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n         Q (t, n - m)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t m.\n       m \\<le> n \\<and>\n       (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n       Q (t, n - m)", "apply(rule exI[where x=\"ps''\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m\\<le>n.\n       (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps'' \\<and>\n       Q (ps'', n - m)", "apply(rule exI[where x=\"1+t+t'\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + t + t' \\<le> n \\<and>\n    (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A 1 + t + t' \\<Down> ps'' \\<and>\n    Q (ps'', n - (1 + t + t'))", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. 1 + t + t' \\<le> n\n 2. (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A 1 + t + t' \\<Down> ps''\n 3. Q (ps'', n - (1 + t + t'))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + t + t' \\<le> n", "using t t' n"], ["proof (prove)\nusing this:\n  t \\<le> n - 1\n  t' \\<le> n - 1 - t\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. 1 + t + t' \\<le> n", "by simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A 1 + t + t' \\<Down> ps''\n 2. Q (ps'', n - (1 + t + t'))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A 1 + t + t' \\<Down> ps''", "using c w assms"], ["proof (prove)\nusing this:\n  (c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps'\n  (WHILE b DO c, ps') \\<Rightarrow>\\<^sub>A t' \\<Down> ps''\n  pbval b ps\n  vars b \\<subseteq> dom ps\n\ngoal (1 subgoal):\n 1. (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A 1 + t + t' \\<Down> ps''", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. Q (ps'', n - (1 + t + t'))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. Q (ps'', n - (1 + t + t'))", "using Q t t' n"], ["proof (prove)\nusing this:\n  Q (ps'', n - 1 - t - t')\n  t \\<le> n - 1\n  t' \\<le> n - 1 - t\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. Q (ps'', n - (1 + t + t'))", "by simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sFFalse: assumes \"~ pbval b ps\" \"vars b \\<subseteq> dom ps\"\n  shows \"wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) = ((\\<lambda>(ps, n). vars b \\<subseteq> dom ps \\<and> (if pbval b ps then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (ps, n) else Q (ps, n))) \\<and>* $ 1) (ps, n)\"\n    (is \"?wp = (?I \\<and>* $ 1) _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) =\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) \\<Longrightarrow>\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)\n 2. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "assume \"wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)\""], ["proof (state)\nthis:\n  wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)\n\ngoal (2 subgoals):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) \\<Longrightarrow>\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)\n 2. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "from this[unfolded wp3'_def]"], ["proof (chain)\npicking this:\n  case (ps, n) of\n  (s, n) \\<Rightarrow>\n    \\<exists>t m.\n       m \\<le> n \\<and>\n       (WHILE b DO c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n       Q (t, n - m)", "obtain ps' t where tn: \"t \\<le> n\" and w1: \"(WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps'\" and Q: \"Q (ps', n - t) \""], ["proof (prove)\nusing this:\n  case (ps, n) of\n  (s, n) \\<Rightarrow>\n    \\<exists>t m.\n       m \\<le> n \\<and>\n       (WHILE b DO c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n       Q (t, n - m)\n\ngoal (1 subgoal):\n 1. (\\<And>t ps'.\n        \\<lbrakk>t \\<le> n;\n         (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps';\n         Q (ps', n - t)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t \\<le> n\n  (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps'\n  Q (ps', n - t)\n\ngoal (2 subgoals):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) \\<Longrightarrow>\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)\n 2. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "from assms"], ["proof (chain)\npicking this:\n  \\<not> pbval b ps\n  vars b \\<subseteq> dom ps", "have w2: \"(WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A 1 \\<Down> ps\""], ["proof (prove)\nusing this:\n  \\<not> pbval b ps\n  vars b \\<subseteq> dom ps\n\ngoal (1 subgoal):\n 1. (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A 1 \\<Down> ps", "by auto"], ["proof (state)\nthis:\n  (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A 1 \\<Down> ps\n\ngoal (2 subgoals):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) \\<Longrightarrow>\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)\n 2. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "from w1 w2 big_step_t_determ2"], ["proof (chain)\npicking this:\n  (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps'\n  (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A 1 \\<Down> ps\n  \\<lbrakk>(?c, ?s) \\<Rightarrow> ?p \\<Down> ?t;\n   (?c, ?s) \\<Rightarrow> ?q \\<Down> ?u\\<rbrakk>\n  \\<Longrightarrow> ?u = ?t \\<and> ?p = ?q", "have t1: \"t=1\" and pps: \"ps=ps'\""], ["proof (prove)\nusing this:\n  (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A t \\<Down> ps'\n  (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A 1 \\<Down> ps\n  \\<lbrakk>(?c, ?s) \\<Rightarrow> ?p \\<Down> ?t;\n   (?c, ?s) \\<Rightarrow> ?q \\<Down> ?u\\<rbrakk>\n  \\<Longrightarrow> ?u = ?t \\<and> ?p = ?q\n\ngoal (1 subgoal):\n 1. t = 1 &&& ps = ps'", "by auto"], ["proof (state)\nthis:\n  t = 1\n  ps = ps'\n\ngoal (2 subgoals):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) \\<Longrightarrow>\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)\n 2. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "from assms"], ["proof (chain)\npicking this:\n  \\<not> pbval b ps\n  vars b \\<subseteq> dom ps", "show \"(?I \\<and>* $ 1) (ps,n)\""], ["proof (prove)\nusing this:\n  \\<not> pbval b ps\n  vars b \\<subseteq> dom ps\n\ngoal (1 subgoal):\n 1. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)", "unfolding sep_conj_def dollar_def"], ["proof (prove)\nusing this:\n  \\<not> pbval b ps\n  vars b \\<subseteq> dom ps\n\ngoal (1 subgoal):\n 1. \\<exists>x y.\n       x ## y \\<and>\n       (ps, n) = x + y \\<and>\n       (case x of\n        (ps, n) \\<Rightarrow>\n          vars b \\<subseteq> dom ps \\<and>\n          (if pbval b ps\n           then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                 (ps, n)\n           else Q (ps, n))) \\<and>\n       (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = 1)", "using t1 tn Q pps"], ["proof (prove)\nusing this:\n  \\<not> pbval b ps\n  vars b \\<subseteq> dom ps\n  t = 1\n  t \\<le> n\n  Q (ps', n - t)\n  ps = ps'\n\ngoal (1 subgoal):\n 1. \\<exists>x y.\n       x ## y \\<and>\n       (ps, n) = x + y \\<and>\n       (case x of\n        (ps, n) \\<Rightarrow>\n          vars b \\<subseteq> dom ps \\<and>\n          (if pbval b ps\n           then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                 (ps, n)\n           else Q (ps, n))) \\<and>\n       (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = 1)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> pbval b ps'; vars b \\<subseteq> dom ps'; t = Suc 0;\n     Suc 0 \\<le> n; Q (ps', n - Suc 0); ps = ps'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b. n = Suc b \\<and> Q (ps', b)", "apply(rule exI[where x=\"n-1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> pbval b ps'; vars b \\<subseteq> dom ps'; t = Suc 0;\n     Suc 0 \\<le> n; Q (ps', n - Suc 0); ps = ps'\\<rbrakk>\n    \\<Longrightarrow> n = Suc (n - 1) \\<and> Q (ps', n - 1)", "by auto"], ["proof (state)\nthis:\n  ((\\<lambda>(ps, n).\n       vars b \\<subseteq> dom ps \\<and>\n       (if pbval b ps\n        then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n              (ps, n)\n        else Q (ps, n))) \\<and>*\n   $ 1)\n   (ps, n)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "assume \"(?I \\<and>* $ 1) (ps,n)\""], ["proof (state)\nthis:\n  ((\\<lambda>(ps, n).\n       vars b \\<subseteq> dom ps \\<and>\n       (if pbval b ps\n        then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n              (ps, n)\n        else Q (ps, n))) \\<and>*\n   $ 1)\n   (ps, n)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "with assms"], ["proof (chain)\npicking this:\n  \\<not> pbval b ps\n  vars b \\<subseteq> dom ps\n  ((\\<lambda>(ps, n).\n       vars b \\<subseteq> dom ps \\<and>\n       (if pbval b ps\n        then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n              (ps, n)\n        else Q (ps, n))) \\<and>*\n   $ 1)\n   (ps, n)", "have Q: \"Q(ps,n-1)\" \"n\\<ge>1\""], ["proof (prove)\nusing this:\n  \\<not> pbval b ps\n  vars b \\<subseteq> dom ps\n  ((\\<lambda>(ps, n).\n       vars b \\<subseteq> dom ps \\<and>\n       (if pbval b ps\n        then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n              (ps, n)\n        else Q (ps, n))) \\<and>*\n   $ 1)\n   (ps, n)\n\ngoal (1 subgoal):\n 1. Q (ps, n - 1) &&& 1 \\<le> n", "unfolding dollar_def sep_conj_def"], ["proof (prove)\nusing this:\n  \\<not> pbval b ps\n  vars b \\<subseteq> dom ps\n  \\<exists>x y.\n     x ## y \\<and>\n     (ps, n) = x + y \\<and>\n     (case x of\n      (ps, n) \\<Rightarrow>\n        vars b \\<subseteq> dom ps \\<and>\n        (if pbval b ps\n         then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n               (ps, n)\n         else Q (ps, n))) \\<and>\n     (case y of (s, c) \\<Rightarrow> s = 0 \\<and> c = 1)\n\ngoal (1 subgoal):\n 1. Q (ps, n - 1) &&& 1 \\<le> n", "by auto"], ["proof (state)\nthis:\n  Q (ps, n - 1)\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "from assms"], ["proof (chain)\npicking this:\n  \\<not> pbval b ps\n  vars b \\<subseteq> dom ps", "have w2: \"(WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A 1 \\<Down> ps\""], ["proof (prove)\nusing this:\n  \\<not> pbval b ps\n  vars b \\<subseteq> dom ps\n\ngoal (1 subgoal):\n 1. (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A 1 \\<Down> ps", "by auto"], ["proof (state)\nthis:\n  (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A 1 \\<Down> ps\n\ngoal (1 subgoal):\n 1. ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "show \"?wp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)", "unfolding wp3'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. case (ps, n) of\n    (s, n) \\<Rightarrow>\n      \\<exists>t m.\n         m \\<le> n \\<and>\n         (WHILE b DO c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n         Q (t, n - m)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t m.\n       m \\<le> n \\<and>\n       (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n       Q (t, n - m)", "apply(rule exI[where x=ps])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m\\<le>n.\n       (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps \\<and>\n       Q (ps, n - m)", "apply(rule exI[where x=1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> n \\<and>\n    (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A 1 \\<Down> ps \\<and>\n    Q (ps, n - 1)", "using Q w2"], ["proof (prove)\nusing this:\n  Q (ps, n - 1)\n  1 \\<le> n\n  (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A 1 \\<Down> ps\n\ngoal (1 subgoal):\n 1. 1 \\<le> n \\<and>\n    (WHILE b DO c, ps) \\<Rightarrow>\\<^sub>A 1 \\<Down> ps \\<and>\n    Q (ps, n - 1)", "by auto"], ["proof (state)\nthis:\n  wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sF': \"wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps,n) = ((\\<lambda>(ps, n). vars b \\<subseteq> dom ps \\<and> (if pbval b ps then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (ps, n) else Q (ps, n))) \\<and>* $ 1) (ps,n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) =\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)", "apply(cases \"vars b \\<subseteq> dom ps\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. vars b \\<subseteq> dom ps \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) =\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)\n 2. \\<not> vars b \\<subseteq> dom ps \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) =\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. vars b \\<subseteq> dom ps \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) =\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)", "apply(cases \"pbval b ps\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>vars b \\<subseteq> dom ps; pbval b ps\\<rbrakk>\n    \\<Longrightarrow> wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) =\n                      ((\\<lambda>(ps, n).\n                           vars b \\<subseteq> dom ps \\<and>\n                           (if pbval b ps\n                            then wp\\<^sub>3\\<^sub>' c\n                                  (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                                  (ps, n)\n                            else Q (ps, n))) \\<and>*\n                       $ 1)\n                       (ps, n)\n 2. \\<lbrakk>vars b \\<subseteq> dom ps; \\<not> pbval b ps\\<rbrakk>\n    \\<Longrightarrow> wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) =\n                      ((\\<lambda>(ps, n).\n                           vars b \\<subseteq> dom ps \\<and>\n                           (if pbval b ps\n                            then wp\\<^sub>3\\<^sub>' c\n                                  (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                                  (ps, n)\n                            else Q (ps, n))) \\<and>*\n                       $ 1)\n                       (ps, n)", "using sFTrue sFFalse"], ["proof (prove)\nusing this:\n  \\<lbrakk>pbval ?b ?ps; vars ?b \\<subseteq> dom ?ps\\<rbrakk>\n  \\<Longrightarrow> wp\\<^sub>3\\<^sub>' (WHILE ?b DO ?c) ?Q (?ps, ?n) =\n                    ((\\<lambda>(ps, n).\n                         vars ?b \\<subseteq> dom ps \\<and>\n                         (if pbval ?b ps\n                          then wp\\<^sub>3\\<^sub>' ?c\n                                (wp\\<^sub>3\\<^sub>' (WHILE ?b DO ?c) ?Q)\n                                (ps, n)\n                          else ?Q (ps, n))) \\<and>*\n                     $ 1)\n                     (?ps, ?n)\n  \\<lbrakk>\\<not> pbval ?b ?ps; vars ?b \\<subseteq> dom ?ps\\<rbrakk>\n  \\<Longrightarrow> wp\\<^sub>3\\<^sub>' (WHILE ?b DO ?c) ?Q (?ps, ?n) =\n                    ((\\<lambda>(ps, n).\n                         vars ?b \\<subseteq> dom ps \\<and>\n                         (if pbval ?b ps\n                          then wp\\<^sub>3\\<^sub>' ?c\n                                (wp\\<^sub>3\\<^sub>' (WHILE ?b DO ?c) ?Q)\n                                (ps, n)\n                          else ?Q (ps, n))) \\<and>*\n                     $ 1)\n                     (?ps, ?n)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars b \\<subseteq> dom ps; pbval b ps\\<rbrakk>\n    \\<Longrightarrow> wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) =\n                      ((\\<lambda>(ps, n).\n                           vars b \\<subseteq> dom ps \\<and>\n                           (if pbval b ps\n                            then wp\\<^sub>3\\<^sub>' c\n                                  (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                                  (ps, n)\n                            else Q (ps, n))) \\<and>*\n                       $ 1)\n                       (ps, n)\n 2. \\<lbrakk>vars b \\<subseteq> dom ps; \\<not> pbval b ps\\<rbrakk>\n    \\<Longrightarrow> wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) =\n                      ((\\<lambda>(ps, n).\n                           vars b \\<subseteq> dom ps \\<and>\n                           (if pbval b ps\n                            then wp\\<^sub>3\\<^sub>' c\n                                  (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                                  (ps, n)\n                            else Q (ps, n))) \\<and>*\n                       $ 1)\n                       (ps, n)", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> vars b \\<subseteq> dom ps \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) =\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> vars b \\<subseteq> dom ps \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (ps, n) =\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (ps, n)", "by (auto simp add: dollar_def wp3'_def sep_conj_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma sF: \"wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q s = ((\\<lambda>(ps, n). vars b \\<subseteq> dom ps \\<and> (if pbval b ps then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (ps, n) else Q (ps, n))) \\<and>* $ 1) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q s =\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     s", "using sF'"], ["proof (prove)\nusing this:\n  wp\\<^sub>3\\<^sub>' (WHILE ?b DO ?c) ?Q (?ps, ?n) =\n  ((\\<lambda>(ps, n).\n       vars ?b \\<subseteq> dom ps \\<and>\n       (if pbval ?b ps\n        then wp\\<^sub>3\\<^sub>' ?c (wp\\<^sub>3\\<^sub>' (WHILE ?b DO ?c) ?Q)\n              (ps, n)\n        else ?Q (ps, n))) \\<and>*\n   $ 1)\n   (?ps, ?n)\n\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q s =\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     s", "by (metis (mono_tags, lifting) prod.case_eq_if prod.collapse sep_conj_impl1)"], ["", "lemma strengthen_postR: assumes \"\\<turnstile>\\<^sub>3\\<^sub>a {P}c{Q}\" \"\\<And>s. Q s \\<Longrightarrow> Q' s\"\n  shows \"\\<turnstile>\\<^sub>3\\<^sub>a {P}c{ Q'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q'}", "apply(rule hoare3a.conseqS)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {?P} c { ?Q}\n 2. \\<And>s n. P (s, n) \\<Longrightarrow> ?P (s, n)\n 3. \\<And>s n. ?Q (s, n) \\<Longrightarrow> Q' (s, n)", "apply (rule assms(1))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s n. P (s, n) \\<Longrightarrow> P (s, n)\n 2. \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s n. Q (s, n) \\<Longrightarrow> Q' (s, n)", "by (fact assms(2))"], ["", "lemma assumes \"\\<And>Q. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c {Q}\"\n  shows WhileWpisPre: \"\\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q} WHILE b DO c { Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}\n                                 WHILE b DO c { Q}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}\n                                 WHILE b DO c { Q}", "define I where  \"I \\<equiv> (\\<lambda>(ps, n). vars b \\<subseteq> dom ps \\<and> (if pbval b ps then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (ps, n) else Q (ps, n)))\""], ["proof (state)\nthis:\n  I \\<equiv>\n  \\<lambda>(ps, n).\n     vars b \\<subseteq> dom ps \\<and>\n     (if pbval b ps\n      then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n            (ps, n)\n      else Q (ps, n))\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}\n                                 WHILE b DO c { Q}", "define I' where  \"I' \\<equiv> (\\<lambda>(ps, n). (if pbval b ps then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (ps, n) else Q (ps, n)))\""], ["proof (state)\nthis:\n  I' \\<equiv>\n  \\<lambda>(ps, n).\n     if pbval b ps\n     then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (ps, n)\n     else Q (ps, n)\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}\n                                 WHILE b DO c { Q}", "have I': \"I = (\\<lambda>(ps, n). vars b \\<subseteq> dom ps \\<and> I' (ps, n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I = (\\<lambda>(ps, n). vars b \\<subseteq> dom ps \\<and> I' (ps, n))", "unfolding I_def I'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(ps, n).\n        vars b \\<subseteq> dom ps \\<and>\n        (if pbval b ps\n         then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n               (ps, n)\n         else Q (ps, n))) =\n    (\\<lambda>(ps, n).\n        vars b \\<subseteq> dom ps \\<and>\n        (case (ps, n) of\n         (ps, n) \\<Rightarrow>\n           if pbval b ps\n           then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                 (ps, n)\n           else Q (ps, n)))", "by auto"], ["proof (state)\nthis:\n  I = (\\<lambda>(ps, n). vars b \\<subseteq> dom ps \\<and> I' (ps, n))\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}\n                                 WHILE b DO c { Q}", "from assms[where Q=\"(wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\"]"], ["proof (chain)\npicking this:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c\n                                 (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)}\n                               c { wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}", "have \n    c: \"\\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)} c {(wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)}\""], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c\n                                 (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)}\n                               c { wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c\n                                   (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)}\n                                 c { wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}", "."], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c\n                                 (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)}\n                               c { wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}\n                                 WHILE b DO c { Q}", "have c': \"\\<turnstile>\\<^sub>3\\<^sub>a { (\\<lambda>(s,n). I (s,n) \\<and> lmaps_to_axpr b True s) } c { I  ** $1 }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n                                     I (s, n) \\<and> lmaps_to_axpr b True s}\n                                 c { I \\<and>* $ 1}", "apply(rule hoare3a.conseqS)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {?P} c { ?Q}\n 2. \\<And>s n.\n       case (s, n) of\n       (s, n) \\<Rightarrow>\n         I (s, n) \\<and> lmaps_to_axpr b True s \\<Longrightarrow>\n       ?P (s, n)\n 3. \\<And>s n. ?Q (s, n) \\<Longrightarrow> (I \\<and>* $ 1) (s, n)", "apply(rule c)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s n.\n       case (s, n) of\n       (s, n) \\<Rightarrow>\n         I (s, n) \\<and> lmaps_to_axpr b True s \\<Longrightarrow>\n       wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (s, n)\n 2. \\<And>s n.\n       wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (s, n) \\<Longrightarrow>\n       (I \\<and>* $ 1) (s, n)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. case (s_, n_) of\n    (s, n) \\<Rightarrow>\n      I (s, n) \\<and> lmaps_to_axpr b True s \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (s_, n_)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I (s_, n_); vars b \\<subseteq> dom s_; pbval b s_\\<rbrakk>\n    \\<Longrightarrow> wp\\<^sub>3\\<^sub>' c\n                       (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (s_, n_)", "unfolding I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>case (s_, n_) of\n             (ps, n) \\<Rightarrow>\n               vars b \\<subseteq> dom ps \\<and>\n               (if pbval b ps\n                then wp\\<^sub>3\\<^sub>' c\n                      (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (ps, n)\n                else Q (ps, n));\n     vars b \\<subseteq> dom s_; pbval b s_\\<rbrakk>\n    \\<Longrightarrow> wp\\<^sub>3\\<^sub>' c\n                       (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q) (s_, n_)", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s n.\n       wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (s, n) \\<Longrightarrow>\n       (I \\<and>* $ 1) (s, n)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (s_, n_) \\<Longrightarrow>\n    (I \\<and>* $ 1) (s_, n_)", "unfolding I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (s_, n_) \\<Longrightarrow>\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (s_, n_)", "using sF"], ["proof (prove)\nusing this:\n  wp\\<^sub>3\\<^sub>' (WHILE ?b DO ?c) ?Q ?s =\n  ((\\<lambda>(ps, n).\n       vars ?b \\<subseteq> dom ps \\<and>\n       (if pbval ?b ps\n        then wp\\<^sub>3\\<^sub>' ?c (wp\\<^sub>3\\<^sub>' (WHILE ?b DO ?c) ?Q)\n              (ps, n)\n        else ?Q (ps, n))) \\<and>*\n   $ 1)\n   ?s\n\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (s_, n_) \\<Longrightarrow>\n    ((\\<lambda>(ps, n).\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>*\n     $ 1)\n     (s_, n_)", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n                                   I (s, n) \\<and> lmaps_to_axpr b True s}\n                               c { I \\<and>* $ 1}\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}\n                                 WHILE b DO c { Q}", "have c'': \"\\<turnstile>\\<^sub>3\\<^sub>a { (\\<lambda>(s,n). I (s,n) \\<and> lmaps_to_axpr b True s) } c { (\\<lambda>(s, n). I (s, n) \\<and> vars b \\<subseteq> dom s)  ** $1 }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n                                     I (s, n) \\<and> lmaps_to_axpr b True s}\n                                 c { (\\<lambda>(s, n).\n   I (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                                     $ 1}", "apply(rule strengthen_postR[OF c'])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       (I \\<and>* $ 1) s \\<Longrightarrow>\n       ((\\<lambda>(s, n). I (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n        $ 1)\n        s", "unfolding I'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       ((\\<lambda>(ps, n).\n            vars b \\<subseteq> dom ps \\<and> I' (ps, n)) \\<and>*\n        $ 1)\n        s \\<Longrightarrow>\n       ((\\<lambda>(s, n).\n            (case (s, n) of\n             (ps, n) \\<Rightarrow>\n               vars b \\<subseteq> dom ps \\<and> I' (ps, n)) \\<and>\n            vars b \\<subseteq> dom s) \\<and>*\n        $ 1)\n        s", "by (smt R case_prod_beta prod.sel(1) prod.sel(2))"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n                                   I (s, n) \\<and> lmaps_to_axpr b True s}\n                               c { (\\<lambda>(s, n).\n I (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                                   $ 1}\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}\n                                 WHILE b DO c { Q}", "have ka: \"(\\<lambda>(s, n). I (s, n) \\<and> vars b \\<subseteq> dom s) = I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(s, n). I (s, n) \\<and> vars b \\<subseteq> dom s) = I", "apply rule"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (case x of\n        (s, n) \\<Rightarrow> I (s, n) \\<and> vars b \\<subseteq> dom s) =\n       I x", "unfolding I'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (case x of\n        (s, n) \\<Rightarrow>\n          (case (s, n) of\n           (ps, n) \\<Rightarrow>\n             vars b \\<subseteq> dom ps \\<and> I' (ps, n)) \\<and>\n          vars b \\<subseteq> dom s) =\n       (case x of\n        (ps, n) \\<Rightarrow> vars b \\<subseteq> dom ps \\<and> I' (ps, n))", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>(s, n). I (s, n) \\<and> vars b \\<subseteq> dom s) = I\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}\n                                 WHILE b DO c { Q}", "from hoare3a.While[where P=\"I\"] c''"], ["proof (chain)\npicking this:\n  \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n                                   I (s, n) \\<and> lmaps_to_axpr ?b True s}\n                               ?C { (\\<lambda>(s, n).\n  I (s, n) \\<and> vars ?b \\<subseteq> dom s) \\<and>*\n                                    $ 1} \\<Longrightarrow>\n  \\<turnstile>\\<^sub>3\\<^sub>a {(\\<lambda>(s, n).\n                                    I (s, n) \\<and>\n                                    vars ?b \\<subseteq> dom s) \\<and>*\n                                $ 1}\n                               WHILE ?b DO ?C\n                               { \\<lambda>(s, n).\n                                    I (s, n) \\<and>\n                                    lmaps_to_axpr ?b False s}\n  \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n                                   I (s, n) \\<and> lmaps_to_axpr b True s}\n                               c { (\\<lambda>(s, n).\n I (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                                   $ 1}", "have\n    w: \"\\<turnstile>\\<^sub>3\\<^sub>a { (\\<lambda>(s,n). I (s,n) \\<and>  vars b \\<subseteq> dom s) ** $1 } WHILE b DO c {  \\<lambda>(s,n). I (s,n) \\<and> lmaps_to_axpr b False s }\""], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n                                   I (s, n) \\<and> lmaps_to_axpr ?b True s}\n                               ?C { (\\<lambda>(s, n).\n  I (s, n) \\<and> vars ?b \\<subseteq> dom s) \\<and>*\n                                    $ 1} \\<Longrightarrow>\n  \\<turnstile>\\<^sub>3\\<^sub>a {(\\<lambda>(s, n).\n                                    I (s, n) \\<and>\n                                    vars ?b \\<subseteq> dom s) \\<and>*\n                                $ 1}\n                               WHILE ?b DO ?C\n                               { \\<lambda>(s, n).\n                                    I (s, n) \\<and>\n                                    lmaps_to_axpr ?b False s}\n  \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n                                   I (s, n) \\<and> lmaps_to_axpr b True s}\n                               c { (\\<lambda>(s, n).\n I (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                                   $ 1}\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {(\\<lambda>(s, n).\nI (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n                                  $ 1}\n                                 WHILE b DO c\n                                 { \\<lambda>(s, n).\nI (s, n) \\<and> lmaps_to_axpr b False s}", "."], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>a {(\\<lambda>(s, n).\n                                    I (s, n) \\<and>\n                                    vars b \\<subseteq> dom s) \\<and>*\n                                $ 1}\n                               WHILE b DO c\n                               { \\<lambda>(s, n).\n                                    I (s, n) \\<and> lmaps_to_axpr b False s}\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}\n                                 WHILE b DO c { Q}", "show \"\\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q} WHILE b DO c { Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}\n                                 WHILE b DO c { Q}", "apply(rule hoare3a.conseqS)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {?P} WHILE b DO c { ?Q}\n 2. \\<And>s n.\n       wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (s, n) \\<Longrightarrow>\n       ?P (s, n)\n 3. \\<And>s n. ?Q (s, n) \\<Longrightarrow> Q (s, n)", "apply(rule w)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s n.\n       wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (s, n) \\<Longrightarrow>\n       ((\\<lambda>(s, n). I (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n        $ 1)\n        (s, n)\n 2. \\<And>s n.\n       case (s, n) of\n       (s, n) \\<Rightarrow>\n         I (s, n) \\<and> lmaps_to_axpr b False s \\<Longrightarrow>\n       Q (s, n)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (s_, n_) \\<Longrightarrow>\n    ((\\<lambda>(s, n). I (s, n) \\<and> vars b \\<subseteq> dom s) \\<and>*\n     $ 1)\n     (s_, n_)", "unfolding ka"], ["proof (prove)\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (s_, n_) \\<Longrightarrow>\n    (I \\<and>* $ 1) (s_, n_)", "using sF I_def"], ["proof (prove)\nusing this:\n  wp\\<^sub>3\\<^sub>' (WHILE ?b DO ?c) ?Q ?s =\n  ((\\<lambda>(ps, n).\n       vars ?b \\<subseteq> dom ps \\<and>\n       (if pbval ?b ps\n        then wp\\<^sub>3\\<^sub>' ?c (wp\\<^sub>3\\<^sub>' (WHILE ?b DO ?c) ?Q)\n              (ps, n)\n        else ?Q (ps, n))) \\<and>*\n   $ 1)\n   ?s\n  I \\<equiv>\n  \\<lambda>(ps, n).\n     vars b \\<subseteq> dom ps \\<and>\n     (if pbval b ps\n      then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n            (ps, n)\n      else Q (ps, n))\n\ngoal (1 subgoal):\n 1. wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q (s_, n_) \\<Longrightarrow>\n    (I \\<and>* $ 1) (s_, n_)", "by simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s n.\n       case (s, n) of\n       (s, n) \\<Rightarrow>\n         I (s, n) \\<and> lmaps_to_axpr b False s \\<Longrightarrow>\n       Q (s, n)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. case (s_, n_) of\n    (s, n) \\<Rightarrow>\n      I (s, n) \\<and> lmaps_to_axpr b False s \\<Longrightarrow>\n    Q (s_, n_)", "unfolding I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. case (s_, n_) of\n    (s, n) \\<Rightarrow>\n      (case (s, n) of\n       (ps, n) \\<Rightarrow>\n         vars b \\<subseteq> dom ps \\<and>\n         (if pbval b ps\n          then wp\\<^sub>3\\<^sub>' c (wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q)\n                (ps, n)\n          else Q (ps, n))) \\<and>\n      lmaps_to_axpr b False s \\<Longrightarrow>\n    Q (s_, n_)", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}\n                               WHILE b DO c { Q}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wpT_is_pre: \"\\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c { Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c { Q}", "proof (induction c arbitrary: Q)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>Q.\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' SKIP Q} SKIP { Q}\n 2. \\<And>x1 x2 Q.\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (x1 ::= x2) Q}\n                                    x1 ::= x2 { Q}\n 3. \\<And>c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (c1;; c2) Q}\n                c1;; c2 { Q}\n 4. \\<And>x1 c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (IF x1 THEN c1 ELSE c2) Q}\n                IF x1 THEN c1 ELSE c2 { Q}\n 5. \\<And>x1 c Q.\n       (\\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c\n  { Q}) \\<Longrightarrow>\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE x1 DO c) Q}\n                                    WHILE x1 DO c { Q}", "case SKIP"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. \\<And>Q.\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' SKIP Q} SKIP { Q}\n 2. \\<And>x1 x2 Q.\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (x1 ::= x2) Q}\n                                    x1 ::= x2 { Q}\n 3. \\<And>c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (c1;; c2) Q}\n                c1;; c2 { Q}\n 4. \\<And>x1 c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (IF x1 THEN c1 ELSE c2) Q}\n                IF x1 THEN c1 ELSE c2 { Q}\n 5. \\<And>x1 c Q.\n       (\\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c\n  { Q}) \\<Longrightarrow>\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE x1 DO c) Q}\n                                    WHILE x1 DO c { Q}", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' SKIP Q} SKIP { Q}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {Q \\<and>* $ (Suc 0)} SKIP { Q}", "using hoare3a.Frame[where F=Q and Q=\"$0\" and P=\"$1\", OF hoare3a.Skip]"], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>3\\<^sub>a {$ 1 \\<and>* Q} SKIP { $ 0 \\<and>* Q}\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {Q \\<and>* $ (Suc 0)} SKIP { Q}", "by (auto simp: sep.add_ac)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' SKIP Q} SKIP { Q}\n\ngoal (4 subgoals):\n 1. \\<And>x1 x2 Q.\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (x1 ::= x2) Q}\n                                    x1 ::= x2 { Q}\n 2. \\<And>c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (c1;; c2) Q}\n                c1;; c2 { Q}\n 3. \\<And>x1 c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (IF x1 THEN c1 ELSE c2) Q}\n                IF x1 THEN c1 ELSE c2 { Q}\n 4. \\<And>x1 c Q.\n       (\\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c\n  { Q}) \\<Longrightarrow>\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE x1 DO c) Q}\n                                    WHILE x1 DO c { Q}", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1 x2 Q.\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (x1 ::= x2) Q}\n                                    x1 ::= x2 { Q}\n 2. \\<And>c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (c1;; c2) Q}\n                c1;; c2 { Q}\n 3. \\<And>x1 c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (IF x1 THEN c1 ELSE c2) Q}\n                IF x1 THEN c1 ELSE c2 { Q}\n 4. \\<And>x1 c Q.\n       (\\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c\n  { Q}) \\<Longrightarrow>\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE x1 DO c) Q}\n                                    WHILE x1 DO c { Q}", "case (Assign x1 x2)"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>x1 x2 Q.\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (x1 ::= x2) Q}\n                                    x1 ::= x2 { Q}\n 2. \\<And>c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (c1;; c2) Q}\n                c1;; c2 { Q}\n 3. \\<And>x1 c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (IF x1 THEN c1 ELSE c2) Q}\n                IF x1 THEN c1 ELSE c2 { Q}\n 4. \\<And>x1 c Q.\n       (\\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c\n  { Q}) \\<Longrightarrow>\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE x1 DO c) Q}\n                                    WHILE x1 DO c { Q}", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (x1 ::= x2) Q}\n                                 x1 ::= x2 { Q}", "using hoare3a.Assign4"], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>3\\<^sub>a {(\\<lambda>(ps, t).\n                                    ?x \\<in> dom ps \\<and>\n                                    vars ?a \\<subseteq> dom ps \\<and>\n                                    ?Q (ps(?x \\<mapsto> paval ?a ps),\n  t)) \\<and>*\n                                $ 1}\n                               ?x ::= ?a { ?Q}\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (x1 ::= x2) Q}\n                                 x1 ::= x2 { Q}", "by simp"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (x1 ::= x2) Q} x1 ::= x2\n                               { Q}\n\ngoal (3 subgoals):\n 1. \\<And>c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (c1;; c2) Q}\n                c1;; c2 { Q}\n 2. \\<And>x1 c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (IF x1 THEN c1 ELSE c2) Q}\n                IF x1 THEN c1 ELSE c2 { Q}\n 3. \\<And>x1 c Q.\n       (\\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c\n  { Q}) \\<Longrightarrow>\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE x1 DO c) Q}\n                                    WHILE x1 DO c { Q}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (c1;; c2) Q}\n                c1;; c2 { Q}\n 2. \\<And>x1 c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (IF x1 THEN c1 ELSE c2) Q}\n                IF x1 THEN c1 ELSE c2 { Q}\n 3. \\<And>x1 c Q.\n       (\\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c\n  { Q}) \\<Longrightarrow>\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE x1 DO c) Q}\n                                    WHILE x1 DO c { Q}", "case (Seq c1 c2)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 ?Q} c1 { ?Q}\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 ?Q} c2 { ?Q}\n\ngoal (3 subgoals):\n 1. \\<And>c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (c1;; c2) Q}\n                c1;; c2 { Q}\n 2. \\<And>x1 c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (IF x1 THEN c1 ELSE c2) Q}\n                IF x1 THEN c1 ELSE c2 { Q}\n 3. \\<And>x1 c Q.\n       (\\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c\n  { Q}) \\<Longrightarrow>\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE x1 DO c) Q}\n                                    WHILE x1 DO c { Q}", "then"], ["proof (chain)\npicking this:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 ?Q} c1 { ?Q}\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 ?Q} c2 { ?Q}", "show ?case"], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 ?Q} c1 { ?Q}\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 ?Q} c2 { ?Q}\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (c1;; c2) Q} c1;; c2\n                                 { Q}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q.\n                \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n       { Q};\n     \\<And>Q.\n        \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n                                     { Q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1\n               (wp\\<^sub>3\\<^sub>' c2 Q)}\n             c1;; c2 { Q}", "apply(subst hoare3a.Seq[rotated])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>Q.\n                \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n       { Q};\n     \\<And>Q.\n        \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n                                     { Q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {?Q4} c2 { Q}\n 2. \\<lbrakk>\\<And>Q.\n                \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n       { Q};\n     \\<And>Q.\n        \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n                                     { Q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1\n               (wp\\<^sub>3\\<^sub>' c2 Q)}\n             c1 { ?Q4}\n 3. \\<lbrakk>\\<And>Q.\n                \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n       { Q};\n     \\<And>Q.\n        \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n                                     { Q}\\<rbrakk>\n    \\<Longrightarrow> True", "by auto"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (c1;; c2) Q} c1;; c2 { Q}\n\ngoal (2 subgoals):\n 1. \\<And>x1 c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (IF x1 THEN c1 ELSE c2) Q}\n                IF x1 THEN c1 ELSE c2 { Q}\n 2. \\<And>x1 c Q.\n       (\\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c\n  { Q}) \\<Longrightarrow>\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE x1 DO c) Q}\n                                    WHILE x1 DO c { Q}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1 c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (IF x1 THEN c1 ELSE c2) Q}\n                IF x1 THEN c1 ELSE c2 { Q}\n 2. \\<And>x1 c Q.\n       (\\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c\n  { Q}) \\<Longrightarrow>\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE x1 DO c) Q}\n                                    WHILE x1 DO c { Q}", "case (If x1 c1 c2)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 ?Q} c1 { ?Q}\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 ?Q} c2 { ?Q}\n\ngoal (2 subgoals):\n 1. \\<And>x1 c1 c2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n  { Q}\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>'\n                  (IF x1 THEN c1 ELSE c2) Q}\n                IF x1 THEN c1 ELSE c2 { Q}\n 2. \\<And>x1 c Q.\n       (\\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c\n  { Q}) \\<Longrightarrow>\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE x1 DO c) Q}\n                                    WHILE x1 DO c { Q}", "then"], ["proof (chain)\npicking this:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 ?Q} c1 { ?Q}\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 ?Q} c2 { ?Q}", "show ?case"], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 ?Q} c1 { ?Q}\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 ?Q} c2 { ?Q}\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (IF x1 THEN c1 ELSE c2)\n                                   Q}\n                                 IF x1 THEN c1 ELSE c2 { Q}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q.\n                \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n       { Q};\n     \\<And>Q.\n        \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n                                     { Q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {(\\<lambda>(ps, t).\n                  vars x1 \\<subseteq> dom ps \\<and>\n                  wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q\n                   (ps, t)) \\<and>*\n              $ (Suc 0)}\n             IF x1 THEN c1 ELSE c2 { Q}", "apply(rule weakenpreR[OF hoare3a.If, where P1=\"%(ps,n). wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q (ps,n)\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>Q.\n                \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n       { Q};\n     \\<And>Q.\n        \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n                                     { Q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n                 (case (s, n) of\n                  (ps, n) \\<Rightarrow>\n                    wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q\n                     (ps, n)) \\<and>\n                 lmaps_to_axpr x1 True s}\n             c1 { Q}\n 2. \\<lbrakk>\\<And>Q.\n                \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n       { Q};\n     \\<And>Q.\n        \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n                                     { Q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n                 (case (s, n) of\n                  (ps, n) \\<Rightarrow>\n                    wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q\n                     (ps, n)) \\<and>\n                 lmaps_to_axpr x1 False s}\n             c2 { Q}\n 3. \\<And>s.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2 { Q};\n        ((\\<lambda>(ps, t).\n             vars x1 \\<subseteq> dom ps \\<and>\n             wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q\n              (ps, t)) \\<and>*\n         $ (Suc 0))\n         s\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>(s, n).\n                              (case (s, n) of\n                               (ps, n) \\<Rightarrow>\n                                 wp\\<^sub>3\\<^sub>'\n                                  (if pbval x1 ps then c1 else c2) Q\n                                  (ps, n)) \\<and>\n                              vars x1 \\<subseteq> dom s) \\<and>*\n                          $ 1)\n                          s", "apply auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>Q.\n                \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n       { Q};\n     \\<And>Q.\n        \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n                                     { Q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n                 wp\\<^sub>3\\<^sub>' (if pbval x1 s then c1 else c2) Q\n                  (s, n) \\<and>\n                 vars x1 \\<subseteq> dom s \\<and> pbval x1 s}\n             c1 { Q}\n 2. \\<lbrakk>\\<And>Q.\n                \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n       { Q};\n     \\<And>Q.\n        \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n                                     { Q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n                 wp\\<^sub>3\\<^sub>' (if pbval x1 s then c1 else c2) Q\n                  (s, n) \\<and>\n                 vars x1 \\<subseteq> dom s \\<and> \\<not> pbval x1 s}\n             c2 { Q}\n 3. \\<And>a b.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2 { Q};\n        ((\\<lambda>(ps, t).\n             vars x1 \\<subseteq> dom ps \\<and>\n             wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q\n              (ps, t)) \\<and>*\n         $ (Suc 0))\n         (a, b)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>(s, n).\n                              wp\\<^sub>3\\<^sub>'\n                               (if pbval x1 s then c1 else c2) Q\n                               (s, n) \\<and>\n                              vars x1 \\<subseteq> dom s) \\<and>*\n                          $ (Suc 0))\n                          (a, b)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q.\n                \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n       { Q};\n     \\<And>Q.\n        \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n                                     { Q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n                 wp\\<^sub>3\\<^sub>' (if pbval x1 s then c1 else c2) Q\n                  (s, n) \\<and>\n                 vars x1 \\<subseteq> dom s \\<and> pbval x1 s}\n             c1 { Q}", "apply(rule hoare3a.conseqS[where P=\"wp\\<^sub>3\\<^sub>' c1 Q\" and Q=Q])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>Q.\n                \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n       { Q};\n     \\<And>Q.\n        \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n                                     { Q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q}\n             c1 { Q}\n 2. \\<And>s n.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2 { Q};\n        case (s, n) of\n        (s, n) \\<Rightarrow>\n          wp\\<^sub>3\\<^sub>' (if pbval x1 s then c1 else c2) Q (s, n) \\<and>\n          vars x1 \\<subseteq> dom s \\<and> pbval x1 s\\<rbrakk>\n       \\<Longrightarrow> wp\\<^sub>3\\<^sub>' c1 Q (s, n)\n 3. \\<And>s n.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2 { Q};\n        Q (s, n)\\<rbrakk>\n       \\<Longrightarrow> Q (s, n)", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>Q.\n                \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n       { Q};\n     \\<And>Q.\n        \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n                                     { Q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n                 wp\\<^sub>3\\<^sub>' (if pbval x1 s then c1 else c2) Q\n                  (s, n) \\<and>\n                 vars x1 \\<subseteq> dom s \\<and> \\<not> pbval x1 s}\n             c2 { Q}\n 2. \\<And>a b.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2 { Q};\n        ((\\<lambda>(ps, t).\n             vars x1 \\<subseteq> dom ps \\<and>\n             wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q\n              (ps, t)) \\<and>*\n         $ (Suc 0))\n         (a, b)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>(s, n).\n                              wp\\<^sub>3\\<^sub>'\n                               (if pbval x1 s then c1 else c2) Q\n                               (s, n) \\<and>\n                              vars x1 \\<subseteq> dom s) \\<and>*\n                          $ (Suc 0))\n                          (a, b)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q.\n                \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n       { Q};\n     \\<And>Q.\n        \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n                                     { Q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {\\<lambda>(s, n).\n                 wp\\<^sub>3\\<^sub>' (if pbval x1 s then c1 else c2) Q\n                  (s, n) \\<and>\n                 vars x1 \\<subseteq> dom s \\<and> \\<not> pbval x1 s}\n             c2 { Q}", "apply(rule hoare3a.conseqS[where P=\"wp\\<^sub>3\\<^sub>' c2 Q\" and Q=Q])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>Q.\n                \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n       { Q};\n     \\<And>Q.\n        \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2\n                                     { Q}\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q}\n             c2 { Q}\n 2. \\<And>s n.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2 { Q};\n        case (s, n) of\n        (s, n) \\<Rightarrow>\n          wp\\<^sub>3\\<^sub>' (if pbval x1 s then c1 else c2) Q (s, n) \\<and>\n          vars x1 \\<subseteq> dom s \\<and> \\<not> pbval x1 s\\<rbrakk>\n       \\<Longrightarrow> wp\\<^sub>3\\<^sub>' c2 Q (s, n)\n 3. \\<And>s n.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2 { Q};\n        Q (s, n)\\<rbrakk>\n       \\<Longrightarrow> Q (s, n)", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2 { Q};\n        ((\\<lambda>(ps, t).\n             vars x1 \\<subseteq> dom ps \\<and>\n             wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q\n              (ps, t)) \\<and>*\n         $ (Suc 0))\n         (a, b)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>(s, n).\n                              wp\\<^sub>3\\<^sub>'\n                               (if pbval x1 s then c1 else c2) Q\n                               (s, n) \\<and>\n                              vars x1 \\<subseteq> dom s) \\<and>*\n                          $ (Suc 0))\n                          (a, b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2 { Q};\n        ((\\<lambda>(ps, t).\n             vars x1 \\<subseteq> dom ps \\<and>\n             wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q\n              (ps, t)) \\<and>*\n         $ (Suc 0))\n         (a, b)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>(s, n).\n                              wp\\<^sub>3\\<^sub>'\n                               (if pbval x1 s then c1 else c2) Q\n                               (s, n) \\<and>\n                              vars x1 \\<subseteq> dom s) \\<and>*\n                          $ (Suc 0))\n                          (a, b)", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2 { Q};\n        ((\\<lambda>(ps, t).\n             vars x1 \\<subseteq> dom ps \\<and>\n             wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q\n              (ps, t)) \\<and>*\n         $ (Suc 0))\n         (a, b)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>(s, n).\n                              wp\\<^sub>3\\<^sub>'\n                               (if pbval x1 s then c1 else c2) Q\n                               (s, n) \\<and>\n                              vars x1 \\<subseteq> dom s) \\<and>*\n                          $ (Suc 0))\n                          (a, b)", "assume \"((\\<lambda>(ps, t). vars x1 \\<subseteq> dom ps \\<and> wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q (ps, t)) \\<and>* $ (Suc 0)) (a, b)\""], ["proof (state)\nthis:\n  ((\\<lambda>(ps, t).\n       vars x1 \\<subseteq> dom ps \\<and>\n       wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q\n        (ps, t)) \\<and>*\n   $ (Suc 0))\n   (a, b)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<And>Q.\n                   \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c1 Q} c1\n          { Q};\n        \\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c2 Q} c2 { Q};\n        ((\\<lambda>(ps, t).\n             vars x1 \\<subseteq> dom ps \\<and>\n             wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q\n              (ps, t)) \\<and>*\n         $ (Suc 0))\n         (a, b)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>(s, n).\n                              wp\\<^sub>3\\<^sub>'\n                               (if pbval x1 s then c1 else c2) Q\n                               (s, n) \\<and>\n                              vars x1 \\<subseteq> dom s) \\<and>*\n                          $ (Suc 0))\n                          (a, b)", "then"], ["proof (chain)\npicking this:\n  ((\\<lambda>(ps, t).\n       vars x1 \\<subseteq> dom ps \\<and>\n       wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q\n        (ps, t)) \\<and>*\n   $ (Suc 0))\n   (a, b)", "show \"((\\<lambda>(ps, t). wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q (ps, t) \\<and> vars x1 \\<subseteq> dom ps) \\<and>* $ (Suc 0)) (a, b)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>(ps, t).\n       vars x1 \\<subseteq> dom ps \\<and>\n       wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q\n        (ps, t)) \\<and>*\n   $ (Suc 0))\n   (a, b)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>(ps, t).\n         wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q\n          (ps, t) \\<and>\n         vars x1 \\<subseteq> dom ps) \\<and>*\n     $ (Suc 0))\n     (a, b)", "unfolding sep_conj_def"], ["proof (prove)\nusing this:\n  \\<exists>x y.\n     x ## y \\<and>\n     (a, b) = x + y \\<and>\n     (case x of\n      (ps, t) \\<Rightarrow>\n        vars x1 \\<subseteq> dom ps \\<and>\n        wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q\n         (ps, t)) \\<and>\n     $ (Suc 0) y\n\ngoal (1 subgoal):\n 1. \\<exists>x y.\n       x ## y \\<and>\n       (a, b) = x + y \\<and>\n       (case x of\n        (ps, t) \\<Rightarrow>\n          wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q\n           (ps, t) \\<and>\n          vars x1 \\<subseteq> dom ps) \\<and>\n       $ (Suc 0) y", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa ba aaa baa.\n       \\<lbrakk>aa ## aaa; a = aa + aaa; b = ba + baa;\n        vars x1 \\<subseteq> dom aa;\n        wp\\<^sub>3\\<^sub>' (if pbval x1 aa then c1 else c2) Q (aa, ba);\n        $ (Suc 0) (aaa, baa)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            (pbval x1 a \\<longrightarrow>\n                             (\\<exists>b ab.\n                                 a ## ab \\<and>\n                                 aa + aaa = a + ab \\<and>\n                                 (\\<exists>bb.\n                                     ba + baa = b + bb \\<and>\n                                     wp\\<^sub>3\\<^sub>' c1 Q (a, b) \\<and>\n                                     vars x1 \\<subseteq> dom a \\<and>\n                                     $ (Suc 0) (ab, bb)))) \\<and>\n                            (\\<not> pbval x1 a \\<longrightarrow>\n                             (\\<exists>b ab.\n                                 a ## ab \\<and>\n                                 aa + aaa = a + ab \\<and>\n                                 (\\<exists>bb.\n                                     ba + baa = b + bb \\<and>\n                                     wp\\<^sub>3\\<^sub>' c2 Q (a, b) \\<and>\n                                     vars x1 \\<subseteq> dom a \\<and>\n                                     $ (Suc 0) (ab, bb))))", "apply(case_tac \"pbval x1 aa\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa ba aaa baa.\n       \\<lbrakk>aa ## aaa; a = aa + aaa; b = ba + baa;\n        vars x1 \\<subseteq> dom aa;\n        wp\\<^sub>3\\<^sub>' (if pbval x1 aa then c1 else c2) Q (aa, ba);\n        $ (Suc 0) (aaa, baa); pbval x1 aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            (pbval x1 a \\<longrightarrow>\n                             (\\<exists>b ab.\n                                 a ## ab \\<and>\n                                 aa + aaa = a + ab \\<and>\n                                 (\\<exists>bb.\n                                     ba + baa = b + bb \\<and>\n                                     wp\\<^sub>3\\<^sub>' c1 Q (a, b) \\<and>\n                                     vars x1 \\<subseteq> dom a \\<and>\n                                     $ (Suc 0) (ab, bb)))) \\<and>\n                            (\\<not> pbval x1 a \\<longrightarrow>\n                             (\\<exists>b ab.\n                                 a ## ab \\<and>\n                                 aa + aaa = a + ab \\<and>\n                                 (\\<exists>bb.\n                                     ba + baa = b + bb \\<and>\n                                     wp\\<^sub>3\\<^sub>' c2 Q (a, b) \\<and>\n                                     vars x1 \\<subseteq> dom a \\<and>\n                                     $ (Suc 0) (ab, bb))))\n 2. \\<And>aa ba aaa baa.\n       \\<lbrakk>aa ## aaa; a = aa + aaa; b = ba + baa;\n        vars x1 \\<subseteq> dom aa;\n        wp\\<^sub>3\\<^sub>' (if pbval x1 aa then c1 else c2) Q (aa, ba);\n        $ (Suc 0) (aaa, baa); \\<not> pbval x1 aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            (pbval x1 a \\<longrightarrow>\n                             (\\<exists>b ab.\n                                 a ## ab \\<and>\n                                 aa + aaa = a + ab \\<and>\n                                 (\\<exists>bb.\n                                     ba + baa = b + bb \\<and>\n                                     wp\\<^sub>3\\<^sub>' c1 Q (a, b) \\<and>\n                                     vars x1 \\<subseteq> dom a \\<and>\n                                     $ (Suc 0) (ab, bb)))) \\<and>\n                            (\\<not> pbval x1 a \\<longrightarrow>\n                             (\\<exists>b ab.\n                                 a ## ab \\<and>\n                                 aa + aaa = a + ab \\<and>\n                                 (\\<exists>bb.\n                                     ba + baa = b + bb \\<and>\n                                     wp\\<^sub>3\\<^sub>' c2 Q (a, b) \\<and>\n                                     vars x1 \\<subseteq> dom a \\<and>\n                                     $ (Suc 0) (ab, bb))))", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ((\\<lambda>(ps, t).\n       wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q (ps, t) \\<and>\n       vars x1 \\<subseteq> dom ps) \\<and>*\n   $ (Suc 0))\n   (a, b)\n\ngoal:\nNo subgoals!", "(* strange! *)"], ["proof (state)\nthis:\n  ((\\<lambda>(ps, t).\n       wp\\<^sub>3\\<^sub>' (if pbval x1 ps then c1 else c2) Q (ps, t) \\<and>\n       vars x1 \\<subseteq> dom ps) \\<and>*\n   $ (Suc 0))\n   (a, b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (IF x1 THEN c1 ELSE c2)\n                                 Q}\n                               IF x1 THEN c1 ELSE c2 { Q}\n\ngoal (1 subgoal):\n 1. \\<And>x1 c Q.\n       (\\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c\n  { Q}) \\<Longrightarrow>\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE x1 DO c) Q}\n                                    WHILE x1 DO c { Q}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 c Q.\n       (\\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c\n  { Q}) \\<Longrightarrow>\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE x1 DO c) Q}\n                                    WHILE x1 DO c { Q}", "case (While b c)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c ?Q} c { ?Q}\n\ngoal (1 subgoal):\n 1. \\<And>x1 c Q.\n       (\\<And>Q.\n           \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c Q} c\n  { Q}) \\<Longrightarrow>\n       \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE x1 DO c) Q}\n                                    WHILE x1 DO c { Q}", "with WhileWpisPre"], ["proof (chain)\npicking this:\n  (\\<And>Q.\n      \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' ?c Q} ?c\n                                   { Q}) \\<Longrightarrow>\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE ?b DO ?c) ?Q}\n                               WHILE ?b DO ?c { ?Q}\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c ?Q} c { ?Q}", "show ?case"], ["proof (prove)\nusing this:\n  (\\<And>Q.\n      \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' ?c Q} ?c\n                                   { Q}) \\<Longrightarrow>\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE ?b DO ?c) ?Q}\n                               WHILE ?b DO ?c { ?Q}\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c ?Q} c { ?Q}\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}\n                                 WHILE b DO c { Q}", "."], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' (WHILE b DO c) Q}\n                               WHILE b DO c { Q}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hoare3o_valid_alt: \"\\<Turnstile>\\<^sub>3\\<^sub>' { P } c { Q }  \\<Longrightarrow>\n    (\\<exists> k>0. (\\<forall>ps n. P (ps,n div k)\n \\<longrightarrow> (\\<exists>ps' ps'' m e e'. ((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'') \n     \\<and> ps' ## ps'' \\<and> n = e + e' + m\n     \\<and> Q (ps',e div k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<exists>k>0.\n       \\<forall>ps n.\n          P (ps, n div k) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<exists>k>0.\n       \\<forall>ps n.\n          P (ps, n div k) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k))", "assume \"\\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\""], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<exists>k>0.\n       \\<forall>ps n.\n          P (ps, n div k) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k))", "from this[unfolded hoare3o_valid_def]"], ["proof (chain)\npicking this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        P (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))", "obtain k where k0: \"k>0\" and \n     P: \"\\<And>ps n. P (ps, n) \\<Longrightarrow> (\\<exists>ps' ps'' m e e'. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e)) \""], ["proof (prove)\nusing this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        P (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 < k;\n         \\<And>ps n.\n            P (ps, n) \\<Longrightarrow>\n            \\<exists>ps' ps'' m e e'.\n               (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n               ps' ## ps'' \\<and>\n               k * n = k * e + e' + m \\<and> Q (ps', e)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 < k\n  P (?ps, ?n) \\<Longrightarrow>\n  \\<exists>ps' ps'' m e e'.\n     (c, ?ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> k * ?n = k * e + e' + m \\<and> Q (ps', e)\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<exists>k>0.\n       \\<forall>ps n.\n          P (ps, n div k) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          P (ps, n div k) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k))", "apply(rule exI[where x=k])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<and>\n    (\\<forall>ps n.\n        P (ps, n div k) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k)))", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 < k\n 2. \\<And>ps n.\n       P (ps, n div k) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k)", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n div k) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n div k) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k)", "fix ps n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n div k) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k)", "assume \"P (ps, n div k)\""], ["proof (state)\nthis:\n  P (ps, n div k)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n div k) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k)", "with P"], ["proof (chain)\npicking this:\n  P (?ps, ?n) \\<Longrightarrow>\n  \\<exists>ps' ps'' m e e'.\n     (c, ?ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> k * ?n = k * e + e' + m \\<and> Q (ps', e)\n  P (ps, n div k)", "obtain ps' ps'' m e e' where 1: \"(c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\" \"ps' ## ps''\" and e: \"k * (n div k) = k * e + e' + m\" and Q: \"Q (ps', e)\""], ["proof (prove)\nusing this:\n  P (?ps, ?n) \\<Longrightarrow>\n  \\<exists>ps' ps'' m e e'.\n     (c, ?ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> k * ?n = k * e + e' + m \\<and> Q (ps', e)\n  P (ps, n div k)\n\ngoal (1 subgoal):\n 1. (\\<And>m ps' ps'' e e'.\n        \\<lbrakk>(c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'';\n         ps' ## ps''; k * (n div k) = k * e + e' + m; Q (ps', e)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\n  ps' ## ps''\n  k * (n div k) = k * e + e' + m\n  Q (ps', e)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n div k) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k)", "have \"k * (n div k) \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * (n div k) \\<le> n", "using k0"], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. k * (n div k) \\<le> n", "by simp"], ["proof (state)\nthis:\n  k * (n div k) \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n div k) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k)", "then"], ["proof (chain)\npicking this:\n  k * (n div k) \\<le> n", "obtain e'' where \"n = k * (n div k) + e''\""], ["proof (prove)\nusing this:\n  k * (n div k) \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>e''.\n        n = k * (n div k) + e'' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using le_Suc_ex"], ["proof (prove)\nusing this:\n  k * (n div k) \\<le> n\n  ?k \\<le> ?l \\<Longrightarrow> \\<exists>n. ?l = ?k + n\n\ngoal (1 subgoal):\n 1. (\\<And>e''.\n        n = k * (n div k) + e'' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  n = k * (n div k) + e''\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n div k) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k)", "also"], ["proof (state)\nthis:\n  n = k * (n div k) + e''\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n div k) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k)", "have \"\\<dots> = k * e + e' + e'' + m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * (n div k) + e'' = k * e + e' + e'' + m", "using e"], ["proof (prove)\nusing this:\n  k * (n div k) = k * e + e' + m\n\ngoal (1 subgoal):\n 1. k * (n div k) + e'' = k * e + e' + e'' + m", "by auto"], ["proof (state)\nthis:\n  k * (n div k) + e'' = k * e + e' + e'' + m\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n div k) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k)", "finally"], ["proof (chain)\npicking this:\n  n = k * e + e' + e'' + m", "have \"n = k * e + (e'+e'') + m\"  and \"Q (ps', (k*e) div k)\""], ["proof (prove)\nusing this:\n  n = k * e + e' + e'' + m\n\ngoal (1 subgoal):\n 1. n = k * e + (e' + e'') + m &&& Q (ps', k * e div k)", "using Q k0"], ["proof (prove)\nusing this:\n  n = k * e + e' + e'' + m\n  Q (ps', e)\n  0 < k\n\ngoal (1 subgoal):\n 1. n = k * e + (e' + e'') + m &&& Q (ps', k * e div k)", "by auto"], ["proof (state)\nthis:\n  n = k * e + (e' + e'') + m\n  Q (ps', k * e div k)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n div k) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k)", "with 1"], ["proof (chain)\npicking this:\n  (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\n  ps' ## ps''\n  n = k * e + (e' + e'') + m\n  Q (ps', k * e div k)", "show \" \\<exists>ps' ps'' m e e'. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k)\""], ["proof (prove)\nusing this:\n  (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\n  ps' ## ps''\n  n = k * e + (e' + e'') + m\n  Q (ps', k * e div k)\n\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m e e'.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k)", "by blast"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m e e'.\n     (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        P (ps, n div k) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma valid_alternative_with_GC: assumes \"(\\<forall>ps n. P (ps,n)\n \\<longrightarrow> (\\<exists>ps' ps'' m e e'. ((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'') \n     \\<and> ps' ## ps'' \\<and> n = e + e' + m\n     \\<and> Q (ps',e))) \" shows \"(\\<forall>ps n. P (ps,n)    \n \\<longrightarrow> (\\<exists>ps'  m e . ((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps'  ) \n      \\<and> n = e + m \\<and> (Q ** sep_true) (ps',e)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ps n.\n       P (ps, n) \\<longrightarrow>\n       (\\<exists>ps' m e.\n           (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n           n = e + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps', e))", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n) \\<Longrightarrow>\n       \\<exists>ps' m e.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n          n = e + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "fix ps n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n) \\<Longrightarrow>\n       \\<exists>ps' m e.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n          n = e + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "assume P: \"P (ps,n)\""], ["proof (state)\nthis:\n  P (ps, n)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n) \\<Longrightarrow>\n       \\<exists>ps' m e.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n          n = e + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "with assms"], ["proof (chain)\npicking this:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e))\n  P (ps, n)", "obtain ps' ps'' m e e' where c: \"(c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\" and\n     ps: \"ps' ## ps''\" and n: \"n = e + e' + m\" and Q: \"Q (ps',e)\""], ["proof (prove)\nusing this:\n  \\<forall>ps n.\n     P (ps, n) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e))\n  P (ps, n)\n\ngoal (1 subgoal):\n 1. (\\<And>m ps' ps'' e e'.\n        \\<lbrakk>(c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'';\n         ps' ## ps''; n = e + e' + m; Q (ps', e)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\n  ps' ## ps''\n  n = e + e' + m\n  Q (ps', e)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n) \\<Longrightarrow>\n       \\<exists>ps' m e.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n          n = e + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "show \"\\<exists>ps' m e. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and> n = e + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps', e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' m e.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n       n = e + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "apply(rule exI[where x=\"ps' + ps''\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m e.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       n = e + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps' + ps'', e)", "apply(rule exI[where x=m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       n = e + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps' + ps'', e)", "apply(rule exI[where x=\"e+e'\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n    n = e + e' + m \\<and>\n    (Q \\<and>* (\\<lambda>s. True)) (ps' + ps'', e + e')", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\n 2. n = e + e' + m\n 3. (Q \\<and>* (\\<lambda>s. True)) (ps' + ps'', e + e')", "apply fact"], ["proof (prove)\ngoal (2 subgoals):\n 1. n = e + e' + m\n 2. (Q \\<and>* (\\<lambda>s. True)) (ps' + ps'', e + e')", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Q \\<and>* (\\<lambda>s. True)) (ps' + ps'', e + e')", "unfolding sep_conj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x y.\n       x ## y \\<and> (ps' + ps'', e + e') = x + y \\<and> Q x \\<and> True", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b aa.\n       a ## aa \\<and>\n       ps' + ps'' = a + aa \\<and>\n       (\\<exists>ba. e + e' = b + ba) \\<and> Q (a, b)", "apply(rule exI[where x=ps'])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b a.\n       ps' ## a \\<and>\n       ps' + ps'' = ps' + a \\<and>\n       (\\<exists>ba. e + e' = b + ba) \\<and> Q (ps', b)", "apply(rule exI[where x=e])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a.\n       ps' ## a \\<and>\n       ps' + ps'' = ps' + a \\<and>\n       (\\<exists>b. e + e' = e + b) \\<and> Q (ps', e)", "apply(rule exI[where x=ps''])"], ["proof (prove)\ngoal (1 subgoal):\n 1. ps' ## ps'' \\<and>\n    ps' + ps'' = ps' + ps'' \\<and>\n    (\\<exists>b. e + e' = e + b) \\<and> Q (ps', e)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. ps' ## ps''\n 2. \\<exists>b. e + e' = e + b\n 3. Q (ps', e)", "apply fact"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>b. e + e' = e + b\n 2. Q (ps', e)", "apply(rule exI[where x=e'])"], ["proof (prove)\ngoal (2 subgoals):\n 1. e + e' = e + e'\n 2. Q (ps', e)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Q (ps', e)", "apply fact"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>ps' m e.\n     (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n     n = e + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps', e)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hoare3o_valid_GC: \"\\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q } \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q ** sep_true}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q \\<and>* (\\<lambda>s. True)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q \\<and>* (\\<lambda>s. True)}", "assume \"\\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q }\""], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q \\<and>* (\\<lambda>s. True)}", "then"], ["proof (chain)\npicking this:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}", "obtain k where \"k>0\" and P: \"\\<And>ps n. P (ps, n) \\<Longrightarrow> (\\<exists>ps' ps'' m e e'. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))\""], ["proof (prove)\nusing this:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 < k;\n         \\<And>ps n.\n            P (ps, n) \\<Longrightarrow>\n            \\<exists>ps' ps'' m e e'.\n               (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n               ps' ## ps'' \\<and>\n               k * n = k * e + e' + m \\<and> Q (ps', e)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding hoare3o_valid_def"], ["proof (prove)\nusing this:\n  \\<exists>k>0.\n     \\<forall>ps n.\n        P (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> Q (ps', e))\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 < k;\n         \\<And>ps n.\n            P (ps, n) \\<Longrightarrow>\n            \\<exists>ps' ps'' m e e'.\n               (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n               ps' ## ps'' \\<and>\n               k * n = k * e + e' + m \\<and> Q (ps', e)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 < k\n  P (?ps, ?n) \\<Longrightarrow>\n  \\<exists>ps' ps'' m e e'.\n     (c, ?ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> k * ?n = k * e + e' + m \\<and> Q (ps', e)\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q \\<and>* (\\<lambda>s. True)}", "show \"\\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q ** sep_true}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q \\<and>* (\\<lambda>s. True)}", "unfolding hoare3o_valid_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>ps n.\n          P (ps, n) \\<longrightarrow>\n          (\\<exists>ps' ps'' m e e'.\n              (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n              ps' ## ps'' \\<and>\n              k * n = k * e + e' + m \\<and>\n              (Q \\<and>* (\\<lambda>s. True)) (ps', e))", "apply(rule exI[where x=k])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<and>\n    (\\<forall>ps n.\n        P (ps, n) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and>\n            k * n = k * e + e' + m \\<and>\n            (Q \\<and>* (\\<lambda>s. True)) (ps', e)))", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 < k\n 2. \\<And>ps n.\n       P (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * n = k * e + e' + m \\<and>\n          (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * n = k * e + e' + m \\<and>\n          (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * n = k * e + e' + m \\<and>\n          (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "fix ps n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * n = k * e + e' + m \\<and>\n          (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "assume \"P (ps, n)\""], ["proof (state)\nthis:\n  P (ps, n)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * n = k * e + e' + m \\<and>\n          (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "with P"], ["proof (chain)\npicking this:\n  P (?ps, ?n) \\<Longrightarrow>\n  \\<exists>ps' ps'' m e e'.\n     (c, ?ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> k * ?n = k * e + e' + m \\<and> Q (ps', e)\n  P (ps, n)", "obtain ps' ps'' m e e' where \"(c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\"\" ps' ## ps'' \"\" k * n = k * e + e' + m \" and Q: \" Q (ps', e)\""], ["proof (prove)\nusing this:\n  P (?ps, ?n) \\<Longrightarrow>\n  \\<exists>ps' ps'' m e e'.\n     (c, ?ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and> k * ?n = k * e + e' + m \\<and> Q (ps', e)\n  P (ps, n)\n\ngoal (1 subgoal):\n 1. (\\<And>m ps' ps'' e e'.\n        \\<lbrakk>(c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'';\n         ps' ## ps''; k * n = k * e + e' + m; Q (ps', e)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\n  ps' ## ps''\n  k * n = k * e + e' + m\n  Q (ps', e)\n\ngoal (1 subgoal):\n 1. \\<And>ps n.\n       P (ps, n) \\<Longrightarrow>\n       \\<exists>ps' ps'' m e e'.\n          (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n          ps' ## ps'' \\<and>\n          k * n = k * e + e' + m \\<and>\n          (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "show \"\\<exists>ps' ps'' m e e'. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and> ps' ## ps'' \\<and> k * n = k * e + e' + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps', e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps' ps'' m e e'.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * n = k * e + e' + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "apply(rule exI[where x=ps'])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps'' m e e'.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * n = k * e + e' + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "apply(rule exI[where x=ps''])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m e e'.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * n = k * e + e' + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "apply(rule exI[where x=m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e e'.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * n = k * e + e' + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "apply(rule exI[where x=e])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e'.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n       ps' ## ps'' \\<and>\n       k * n = k * e + e' + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "apply(rule exI[where x=e'])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n    ps' ## ps'' \\<and>\n    k * n = k * e + e' + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps''\n 2. ps' ## ps''\n 3. k * n = k * e + e' + m\n 4. (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "apply fact+"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Q \\<and>* (\\<lambda>s. True)) (ps', e)", "unfolding sep_conj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x y. x ## y \\<and> (ps', e) = x + y \\<and> Q x \\<and> True", "apply(rule exI[where x=\"(ps', e)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y.\n       (ps', e) ## y \\<and>\n       (ps', e) = (ps', e) + y \\<and> Q (ps', e) \\<and> True", "apply(rule exI[where x=\"0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ps', e) ## 0 \\<and>\n    (ps', e) = (ps', e) + 0 \\<and> Q (ps', e) \\<and> True", "using Q"], ["proof (prove)\nusing this:\n  Q (ps', e)\n\ngoal (1 subgoal):\n 1. (ps', e) ## 0 \\<and>\n    (ps', e) = (ps', e) + 0 \\<and> Q (ps', e) \\<and> True", "by simp"], ["proof (state)\nthis:\n  \\<exists>ps' ps'' m e e'.\n     (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n     ps' ## ps'' \\<and>\n     k * n = k * e + e' + m \\<and> (Q \\<and>* (\\<lambda>s. True)) (ps', e)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q \\<and>* (\\<lambda>s. True)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hoare3a_sound_GC: \"\\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q} \\<Longrightarrow> \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q ** sep_true}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q} \\<Longrightarrow>\n    \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q \\<and>* (\\<lambda>s. True)}", "using hoare3o_valid_GC hoareT_sound2_partR"], ["proof (prove)\nusing this:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {?P} ?c { ?Q} \\<Longrightarrow>\n  \\<Turnstile>\\<^sub>3\\<^sub>' {?P} ?c { ?Q \\<and>* (\\<lambda>s. True)}\n  \\<turnstile>\\<^sub>3\\<^sub>a {?P} ?c { ?Q} \\<Longrightarrow>\n  \\<Turnstile>\\<^sub>3\\<^sub>' {?P} ?c { ?Q}\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {P} c { Q} \\<Longrightarrow>\n    \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q \\<and>* (\\<lambda>s. True)}", "by auto"], ["", "lemma valid_wp: \"\\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow> (\\<exists>k>0. \\<forall>s n. P (s, n) \\<longrightarrow> wp\\<^sub>3\\<^sub>' c (\\<lambda>(ps, n). (Q ** sep_true) (ps, n div k)) (s, k * n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<exists>k>0.\n       \\<forall>s n.\n          P (s, n) \\<longrightarrow>\n          wp\\<^sub>3\\<^sub>' c\n           (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n           (s, k * n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<exists>k>0.\n       \\<forall>s n.\n          P (s, n) \\<longrightarrow>\n          wp\\<^sub>3\\<^sub>' c\n           (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n           (s, k * n)", "let ?P = \"\\<lambda>k (ps,n). P (ps,n div k)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<exists>k>0.\n       \\<forall>s n.\n          P (s, n) \\<longrightarrow>\n          wp\\<^sub>3\\<^sub>' c\n           (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n           (s, k * n)", "let ?Q = \"\\<lambda>k (ps,n). Q (ps,n div k)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<exists>k>0.\n       \\<forall>s n.\n          P (s, n) \\<longrightarrow>\n          wp\\<^sub>3\\<^sub>' c\n           (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n           (s, k * n)", "let ?QG = \"\\<lambda>k (ps,n). (Q ** sep_true) (ps,n div k)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<exists>k>0.\n       \\<forall>s n.\n          P (s, n) \\<longrightarrow>\n          wp\\<^sub>3\\<^sub>' c\n           (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n           (s, k * n)", "assume \"\\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\""], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<exists>k>0.\n       \\<forall>s n.\n          P (s, n) \\<longrightarrow>\n          wp\\<^sub>3\\<^sub>' c\n           (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n           (s, k * n)", "then"], ["proof (chain)\npicking this:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}", "obtain k where k[simp]: \"k>0\" and \"(\\<forall>ps n. P (ps,n div k)\n \\<longrightarrow> (\\<exists>ps' ps'' m e e'. ((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'') \n     \\<and> ps' ## ps'' \\<and> n = e + e' + m\n     \\<and> Q (ps',e div k)))\""], ["proof (prove)\nusing this:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 < k;\n         \\<forall>ps n.\n            P (ps, n div k) \\<longrightarrow>\n            (\\<exists>ps' ps'' m e e'.\n                (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n                ps' ## ps'' \\<and>\n                n = e + e' + m \\<and> Q (ps', e div k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using hoare3o_valid_alt"], ["proof (prove)\nusing this:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n  \\<Turnstile>\\<^sub>3\\<^sub>' {?P} ?c { ?Q} \\<Longrightarrow>\n  \\<exists>k>0.\n     \\<forall>ps n.\n        ?P (ps, n div k) \\<longrightarrow>\n        (\\<exists>ps' ps'' m e e'.\n            (?c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n            ps' ## ps'' \\<and> n = e + e' + m \\<and> ?Q (ps', e div k))\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 < k;\n         \\<forall>ps n.\n            P (ps, n div k) \\<longrightarrow>\n            (\\<exists>ps' ps'' m e e'.\n                (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n                ps' ## ps'' \\<and>\n                n = e + e' + m \\<and> Q (ps', e div k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 < k\n  \\<forall>ps n.\n     P (ps, n div k) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k))\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<exists>k>0.\n       \\<forall>s n.\n          P (s, n) \\<longrightarrow>\n          wp\\<^sub>3\\<^sub>' c\n           (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n           (s, k * n)", "then"], ["proof (chain)\npicking this:\n  0 < k\n  \\<forall>ps n.\n     P (ps, n div k) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k))", "have \"(\\<forall>ps n. ?P k (ps,n)\n \\<longrightarrow> (\\<exists>ps' ps'' m e e'. ((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'') \n     \\<and> ps' ## ps'' \\<and> n = e + e' + m\n     \\<and> ?Q k (ps',e)))\""], ["proof (prove)\nusing this:\n  0 < k\n  \\<forall>ps n.\n     P (ps, n div k) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and> n = e + e' + m \\<and> Q (ps', e div k))\n\ngoal (1 subgoal):\n 1. \\<forall>ps n.\n       (case (ps, n) of\n        (ps, n) \\<Rightarrow> P (ps, n div k)) \\<longrightarrow>\n       (\\<exists>ps' ps'' m e e'.\n           (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n           ps' ## ps'' \\<and>\n           n = e + e' + m \\<and>\n           (case (ps', e) of (ps, n) \\<Rightarrow> Q (ps, n div k)))", "by auto"], ["proof (state)\nthis:\n  \\<forall>ps n.\n     (case (ps, n) of\n      (ps, n) \\<Rightarrow> P (ps, n div k)) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and>\n         n = e + e' + m \\<and>\n         (case (ps', e) of (ps, n) \\<Rightarrow> Q (ps, n div k)))\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<exists>k>0.\n       \\<forall>s n.\n          P (s, n) \\<longrightarrow>\n          wp\\<^sub>3\\<^sub>' c\n           (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n           (s, k * n)", "then"], ["proof (chain)\npicking this:\n  \\<forall>ps n.\n     (case (ps, n) of\n      (ps, n) \\<Rightarrow> P (ps, n div k)) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and>\n         n = e + e' + m \\<and>\n         (case (ps', e) of (ps, n) \\<Rightarrow> Q (ps, n div k)))", "have f: \"(\\<forall>ps n. ?P k (ps,n) \\<longrightarrow> (\\<exists>ps'  m e . ((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps'  ) \n      \\<and> n = e + m \\<and> (?Q k ** sep_true) (ps',e)))\""], ["proof (prove)\nusing this:\n  \\<forall>ps n.\n     (case (ps, n) of\n      (ps, n) \\<Rightarrow> P (ps, n div k)) \\<longrightarrow>\n     (\\<exists>ps' ps'' m e e'.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' + ps'' \\<and>\n         ps' ## ps'' \\<and>\n         n = e + e' + m \\<and>\n         (case (ps', e) of (ps, n) \\<Rightarrow> Q (ps, n div k)))\n\ngoal (1 subgoal):\n 1. \\<forall>ps n.\n       (case (ps, n) of\n        (ps, n) \\<Rightarrow> P (ps, n div k)) \\<longrightarrow>\n       (\\<exists>ps' m e.\n           (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n           n = e + m \\<and>\n           ((\\<lambda>(ps, n). Q (ps, n div k)) \\<and>* (\\<lambda>s. True))\n            (ps', e))", "apply(rule valid_alternative_with_GC)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>ps n.\n     (case (ps, n) of\n      (ps, n) \\<Rightarrow> P (ps, n div k)) \\<longrightarrow>\n     (\\<exists>ps' m e.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n         n = e + m \\<and>\n         ((\\<lambda>(ps, n). Q (ps, n div k)) \\<and>* (\\<lambda>s. True))\n          (ps', e))\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<exists>k>0.\n       \\<forall>s n.\n          P (s, n) \\<longrightarrow>\n          wp\\<^sub>3\\<^sub>' c\n           (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n           (s, k * n)", "have \"\\<And>s n. P (s, n) \\<Longrightarrow> wp\\<^sub>3\\<^sub>' c (\\<lambda>(ps, n). (Q ** sep_true) (ps, n div k)) (s, k * n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s n.\n       P (s, n) \\<Longrightarrow>\n       wp\\<^sub>3\\<^sub>' c\n        (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n        (s, k * n)", "unfolding wp3'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s n.\n       P (s, n) \\<Longrightarrow>\n       case (s, k * n) of\n       (s, n) \\<Rightarrow>\n         \\<exists>t m.\n            m \\<le> n \\<and>\n            (c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n            (case (t, n - m) of\n             (ps, n) \\<Rightarrow>\n               (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s n.\n       P (s, n) \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> k * n \\<and>\n          (c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n          (Q \\<and>* (\\<lambda>s. True)) (t, (k * n - m) div k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s n.\n       P (s, n) \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> k * n \\<and>\n          (c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n          (Q \\<and>* (\\<lambda>s. True)) (t, (k * n - m) div k)", "fix ps n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s n.\n       P (s, n) \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> k * n \\<and>\n          (c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n          (Q \\<and>* (\\<lambda>s. True)) (t, (k * n - m) div k)", "assume \"P (ps,n)\""], ["proof (state)\nthis:\n  P (ps, n)\n\ngoal (1 subgoal):\n 1. \\<And>s n.\n       P (s, n) \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> k * n \\<and>\n          (c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n          (Q \\<and>* (\\<lambda>s. True)) (t, (k * n - m) div k)", "then"], ["proof (chain)\npicking this:\n  P (ps, n)", "have \"P (ps,(k*n) div k)\""], ["proof (prove)\nusing this:\n  P (ps, n)\n\ngoal (1 subgoal):\n 1. P (ps, k * n div k)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  P (ps, k * n div k)\n\ngoal (1 subgoal):\n 1. \\<And>s n.\n       P (s, n) \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> k * n \\<and>\n          (c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n          (Q \\<and>* (\\<lambda>s. True)) (t, (k * n - m) div k)", "with f"], ["proof (chain)\npicking this:\n  \\<forall>ps n.\n     (case (ps, n) of\n      (ps, n) \\<Rightarrow> P (ps, n div k)) \\<longrightarrow>\n     (\\<exists>ps' m e.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n         n = e + m \\<and>\n         ((\\<lambda>(ps, n). Q (ps, n div k)) \\<and>* (\\<lambda>s. True))\n          (ps', e))\n  P (ps, k * n div k)", "obtain ps' m e where \"((c,ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps'  )\" and z: \"k * n = e + m\"\n        and Q: \"(?Q k ** sep_true) (ps',e)\""], ["proof (prove)\nusing this:\n  \\<forall>ps n.\n     (case (ps, n) of\n      (ps, n) \\<Rightarrow> P (ps, n div k)) \\<longrightarrow>\n     (\\<exists>ps' m e.\n         (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n         n = e + m \\<and>\n         ((\\<lambda>(ps, n). Q (ps, n div k)) \\<and>* (\\<lambda>s. True))\n          (ps', e))\n  P (ps, k * n div k)\n\ngoal (1 subgoal):\n 1. (\\<And>m ps' e.\n        \\<lbrakk>(c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps'; k * n = e + m;\n         ((\\<lambda>(ps, n). Q (ps, n div k)) \\<and>* (\\<lambda>s. True))\n          (ps', e)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps'\n  k * n = e + m\n  ((\\<lambda>(ps, n). Q (ps, n div k)) \\<and>* (\\<lambda>s. True)) (ps', e)\n\ngoal (1 subgoal):\n 1. \\<And>s n.\n       P (s, n) \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> k * n \\<and>\n          (c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n          (Q \\<and>* (\\<lambda>s. True)) (t, (k * n - m) div k)", "from z"], ["proof (chain)\npicking this:\n  k * n = e + m", "have e: \"e = k * n -m \""], ["proof (prove)\nusing this:\n  k * n = e + m\n\ngoal (1 subgoal):\n 1. e = k * n - m", "by auto"], ["proof (state)\nthis:\n  e = k * n - m\n\ngoal (1 subgoal):\n 1. \\<And>s n.\n       P (s, n) \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> k * n \\<and>\n          (c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n          (Q \\<and>* (\\<lambda>s. True)) (t, (k * n - m) div k)", "from Q[unfolded e sep_conj_def]"], ["proof (chain)\npicking this:\n  \\<exists>x y.\n     x ## y \\<and>\n     (ps', k * n - m) = x + y \\<and>\n     (case x of (ps, n) \\<Rightarrow> Q (ps, n div k)) \\<and> True", "obtain ps1 ps2 e1 e2 where\n      \"ps1 ## ps2\" \"(ps' = ps1 +ps2)\" and eq: \"k * n - m = e1 +  e2\" and Q: \"Q (ps1, e1 div k)\""], ["proof (prove)\nusing this:\n  \\<exists>x y.\n     x ## y \\<and>\n     (ps', k * n - m) = x + y \\<and>\n     (case x of (ps, n) \\<Rightarrow> Q (ps, n div k)) \\<and> True\n\ngoal (1 subgoal):\n 1. (\\<And>ps1 ps2 e1 e2.\n        \\<lbrakk>ps1 ## ps2; ps' = ps1 + ps2; k * n - m = e1 + e2;\n         Q (ps1, e1 div k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  ps1 ## ps2\n  ps' = ps1 + ps2\n  k * n - m = e1 + e2\n  Q (ps1, e1 div k)\n\ngoal (1 subgoal):\n 1. \\<And>s n.\n       P (s, n) \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> k * n \\<and>\n          (c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n          (Q \\<and>* (\\<lambda>s. True)) (t, (k * n - m) div k)", "let ?f = \"(e1 + e2) div k - (e1 div k + (e2 div k))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s n.\n       P (s, n) \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> k * n \\<and>\n          (c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n          (Q \\<and>* (\\<lambda>s. True)) (t, (k * n - m) div k)", "have kl: \"(e1 + e2) div k \\<ge> (e1 div k + (e2 div k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e1 div k + e2 div k \\<le> (e1 + e2) div k", "using k"], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. e1 div k + e2 div k \\<le> (e1 + e2) div k", "using div_add1_eq le_iff_add"], ["proof (prove)\nusing this:\n  0 < k\n  (?a + ?b) div ?c = ?a div ?c + ?b div ?c + (?a mod ?c + ?b mod ?c) div ?c\n  (?a \\<le> ?b) = (\\<exists>c. ?b = ?a + c)\n\ngoal (1 subgoal):\n 1. e1 div k + e2 div k \\<le> (e1 + e2) div k", "by blast"], ["proof (state)\nthis:\n  e1 div k + e2 div k \\<le> (e1 + e2) div k\n\ngoal (1 subgoal):\n 1. \\<And>s n.\n       P (s, n) \\<Longrightarrow>\n       \\<exists>t m.\n          m \\<le> k * n \\<and>\n          (c, s) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n          (Q \\<and>* (\\<lambda>s. True)) (t, (k * n - m) div k)", "show \"\\<exists>t m. m \\<le> k * n \\<and> (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and> (Q \\<and>* (\\<lambda>s. True)) (t, (k * n - m) div k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t m.\n       m \\<le> k * n \\<and>\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n       (Q \\<and>* (\\<lambda>s. True)) (t, (k * n - m) div k)", "apply(rule exI[where x=ps'])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m\\<le>k * n.\n       (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n       (Q \\<and>* (\\<lambda>s. True)) (ps', (k * n - m) div k)", "apply(rule exI[where x=m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<le> k * n \\<and>\n    (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps' \\<and>\n    (Q \\<and>* (\\<lambda>s. True)) (ps', (k * n - m) div k)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. m \\<le> k * n\n 2. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps'\n 3. (Q \\<and>* (\\<lambda>s. True)) (ps', (k * n - m) div k)", "using z"], ["proof (prove)\nusing this:\n  k * n = e + m\n\ngoal (3 subgoals):\n 1. m \\<le> k * n\n 2. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps'\n 3. (Q \\<and>* (\\<lambda>s. True)) (ps', (k * n - m) div k)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> ps'\n 2. (Q \\<and>* (\\<lambda>s. True)) (ps', (k * n - m) div k)", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Q \\<and>* (\\<lambda>s. True)) (ps', (k * n - m) div k)", "unfolding e"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Q \\<and>* (\\<lambda>s. True)) (ps', (k * n - m) div k)", "unfolding sep_conj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x y.\n       x ## y \\<and> (ps', (k * n - m) div k) = x + y \\<and> Q x \\<and> True", "apply(rule exI[where x=\"(ps1,e1 div k)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y.\n       (ps1, e1 div k) ## y \\<and>\n       (ps', (k * n - m) div k) = (ps1, e1 div k) + y \\<and>\n       Q (ps1, e1 div k) \\<and> True", "apply(rule exI[where x=\"(ps2,e2 div k+?f)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ps1, e1 div k) ##\n    (ps2, e2 div k + ((e1 + e2) div k - (e1 div k + e2 div k))) \\<and>\n    (ps', (k * n - m) div k) =\n    (ps1, e1 div k) +\n    (ps2, e2 div k + ((e1 + e2) div k - (e1 div k + e2 div k))) \\<and>\n    Q (ps1, e1 div k) \\<and> True", "apply auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. ps1 ## ps2\n 2. ps' = ps1 + ps2\n 3. (k * n - m) div k =\n    e1 div k + (e2 div k + ((e1 + e2) div k - (e1 div k + e2 div k)))\n 4. Q (ps1, e1 div k)", "apply fact+"], ["proof (prove)\ngoal (2 subgoals):\n 1. (k * n - m) div k =\n    e1 div k + (e2 div k + ((e1 + e2) div k - (e1 div k + e2 div k)))\n 2. Q (ps1, e1 div k)", "unfolding eq"], ["proof (prove)\ngoal (2 subgoals):\n 1. (e1 + e2) div k =\n    e1 div k + (e2 div k + ((e1 + e2) div k - (e1 div k + e2 div k)))\n 2. Q (ps1, e1 div k)", "using kl"], ["proof (prove)\nusing this:\n  e1 div k + e2 div k \\<le> (e1 + e2) div k\n\ngoal (2 subgoals):\n 1. (e1 + e2) div k =\n    e1 div k + (e2 div k + ((e1 + e2) div k - (e1 div k + e2 div k)))\n 2. Q (ps1, e1 div k)", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. Q (ps1, e1 div k)", "using Q"], ["proof (prove)\nusing this:\n  Q (ps1, e1 div k)\n\ngoal (1 subgoal):\n 1. Q (ps1, e1 div k)", "by auto"], ["proof (state)\nthis:\n  \\<exists>t m.\n     m \\<le> k * n \\<and>\n     (c, ps) \\<Rightarrow>\\<^sub>A m \\<Down> t \\<and>\n     (Q \\<and>* (\\<lambda>s. True)) (t, (k * n - m) div k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P (?s, ?n) \\<Longrightarrow>\n  wp\\<^sub>3\\<^sub>' c\n   (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n   (?s, k * ?n)\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<exists>k>0.\n       \\<forall>s n.\n          P (s, n) \\<longrightarrow>\n          wp\\<^sub>3\\<^sub>' c\n           (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n           (s, k * n)", "then"], ["proof (chain)\npicking this:\n  P (?s, ?n) \\<Longrightarrow>\n  wp\\<^sub>3\\<^sub>' c\n   (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n   (?s, k * ?n)", "show \"(\\<exists>k>0. \\<forall>s n. P (s, n) \\<longrightarrow> wp\\<^sub>3\\<^sub>' c (\\<lambda>(ps, n). (Q ** sep_true) (ps, n div k)) (s, k * n))\""], ["proof (prove)\nusing this:\n  P (?s, ?n) \\<Longrightarrow>\n  wp\\<^sub>3\\<^sub>' c\n   (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n   (?s, k * ?n)\n\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>s n.\n          P (s, n) \\<longrightarrow>\n          wp\\<^sub>3\\<^sub>' c\n           (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n           (s, k * n)", "using k"], ["proof (prove)\nusing this:\n  P (?s, ?n) \\<Longrightarrow>\n  wp\\<^sub>3\\<^sub>' c\n   (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n   (?s, k * ?n)\n  0 < k\n\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       \\<forall>s n.\n          P (s, n) \\<longrightarrow>\n          wp\\<^sub>3\\<^sub>' c\n           (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n           (s, k * n)", "by metis"], ["proof (state)\nthis:\n  \\<exists>k>0.\n     \\<forall>s n.\n        P (s, n) \\<longrightarrow>\n        wp\\<^sub>3\\<^sub>' c\n         (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n         (s, k * n)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem completeness: \"\\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>b {P} c { Q ** sep_true}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<turnstile>\\<^sub>3\\<^sub>b {P} c { Q \\<and>* (\\<lambda>s. True)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<turnstile>\\<^sub>3\\<^sub>b {P} c { Q \\<and>* (\\<lambda>s. True)}", "let ?P = \"\\<lambda>k (ps,n). P (ps,n div k)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<turnstile>\\<^sub>3\\<^sub>b {P} c { Q \\<and>* (\\<lambda>s. True)}", "let ?Q = \"\\<lambda>k (ps,n). Q (ps,n div k)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<turnstile>\\<^sub>3\\<^sub>b {P} c { Q \\<and>* (\\<lambda>s. True)}", "let ?QG = \"\\<lambda>k (ps,n). (Q ** sep_true) (ps,n div k)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<turnstile>\\<^sub>3\\<^sub>b {P} c { Q \\<and>* (\\<lambda>s. True)}", "assume \"\\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\""], ["proof (state)\nthis:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<turnstile>\\<^sub>3\\<^sub>b {P} c { Q \\<and>* (\\<lambda>s. True)}", "then"], ["proof (chain)\npicking this:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}", "obtain k where k[simp]: \"k>0\" and P: \"\\<And>s n. P (s, n) \\<Longrightarrow> wp\\<^sub>3\\<^sub>' c (\\<lambda>(ps, n). (Q ** sep_true) (ps, n div k)) (s, k * n)\""], ["proof (prove)\nusing this:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 < k;\n         \\<And>s n.\n            P (s, n) \\<Longrightarrow>\n            wp\\<^sub>3\\<^sub>' c\n             (\\<lambda>(ps, n).\n                 (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n             (s, k * n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using valid_wp"], ["proof (prove)\nusing this:\n  \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q}\n  \\<Turnstile>\\<^sub>3\\<^sub>' {?P} ?c { ?Q} \\<Longrightarrow>\n  \\<exists>k>0.\n     \\<forall>s n.\n        ?P (s, n) \\<longrightarrow>\n        wp\\<^sub>3\\<^sub>' ?c\n         (\\<lambda>(ps, n). (?Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n         (s, k * n)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 < k;\n         \\<And>s n.\n            P (s, n) \\<Longrightarrow>\n            wp\\<^sub>3\\<^sub>' c\n             (\\<lambda>(ps, n).\n                 (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n             (s, k * n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 < k\n  P (?s, ?n) \\<Longrightarrow>\n  wp\\<^sub>3\\<^sub>' c\n   (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n   (?s, k * ?n)\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<turnstile>\\<^sub>3\\<^sub>b {P} c { Q \\<and>* (\\<lambda>s. True)}", "from wpT_is_pre"], ["proof (chain)\npicking this:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' ?c ?Q} ?c { ?Q}", "have R: \"\\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c (?QG k)} c {?QG k}\""], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' ?c ?Q} ?c { ?Q}\n\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c\n                                   (\\<lambda>(ps, n).\n (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))}\n                                 c { \\<lambda>(ps, n).\n  (Q \\<and>* (\\<lambda>s. True)) (ps, n div k)}", "by auto"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>a {wp\\<^sub>3\\<^sub>' c\n                                 (\\<lambda>(ps, n).\n                                     (Q \\<and>* (\\<lambda>s. True))\n(ps, n div k))}\n                               c { \\<lambda>(ps, n).\n(Q \\<and>* (\\<lambda>s. True)) (ps, n div k)}\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<turnstile>\\<^sub>3\\<^sub>b {P} c { Q \\<and>* (\\<lambda>s. True)}", "show \"\\<turnstile>\\<^sub>3\\<^sub>b {P} c { Q ** sep_true}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile>\\<^sub>3\\<^sub>b {P} c { Q \\<and>* (\\<lambda>s. True)}", "apply(rule hoare3b.conseq[OF hoare3b.import[OF R], where k=k])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s n.\n       P (s, n) \\<Longrightarrow>\n       wp\\<^sub>3\\<^sub>' c\n        (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n        (s, k * n)\n 2. \\<And>s n.\n       case (s, n) of\n       (ps, n) \\<Rightarrow>\n         (Q \\<and>* (\\<lambda>s. True)) (ps, n div k) \\<Longrightarrow>\n       (Q \\<and>* (\\<lambda>s. True)) (s, n div k)\n 3. 0 < k", "subgoal for s n"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (s, n) \\<Longrightarrow>\n    wp\\<^sub>3\\<^sub>' c\n     (\\<lambda>(ps, n). (Q \\<and>* (\\<lambda>s. True)) (ps, n div k))\n     (s, k * n)", "by (fact P)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s n.\n       case (s, n) of\n       (ps, n) \\<Rightarrow>\n         (Q \\<and>* (\\<lambda>s. True)) (ps, n div k) \\<Longrightarrow>\n       (Q \\<and>* (\\<lambda>s. True)) (s, n div k)\n 2. 0 < k", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k", "by (fact k)"], ["proof (state)\nthis:\n  \\<turnstile>\\<^sub>3\\<^sub>b {P} c { Q \\<and>* (\\<lambda>s. True)}\n\ngoal:\nNo subgoals!", "qed"], ["", "thm E_extendsR completeness"], ["", "lemma completenessR: \"\\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow> \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q ** sep_true}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q \\<and>* (\\<lambda>s. True)}", "using E_extendsS completeness"], ["proof (prove)\nusing this:\n  \\<turnstile>\\<^sub>3\\<^sub>b {?P} ?c { ?F} \\<Longrightarrow>\n  \\<turnstile>\\<^sub>3\\<^sub>' {?P} ?c { ?F}\n  \\<Turnstile>\\<^sub>3\\<^sub>' {?P} ?c { ?Q} \\<Longrightarrow>\n  \\<turnstile>\\<^sub>3\\<^sub>b {?P} ?c { ?Q \\<and>* (\\<lambda>s. True)}\n\ngoal (1 subgoal):\n 1. \\<Turnstile>\\<^sub>3\\<^sub>' {P} c { Q} \\<Longrightarrow>\n    \\<turnstile>\\<^sub>3\\<^sub>' {P} c { Q \\<and>* (\\<lambda>s. True)}", "by metis"], ["", "end"]]}