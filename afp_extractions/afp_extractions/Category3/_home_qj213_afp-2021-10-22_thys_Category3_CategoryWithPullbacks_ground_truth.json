{"file_name": "/home/qj213/afp-2021-10-22/thys/Category3/CategoryWithPullbacks.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Category3", "problem_names": ["lemma commutative_squareI [intro, simp]:\n    assumes \"cospan f g\" and \"span h k\" and \"dom f = cod h\" and \"f \\<cdot> h = g \\<cdot> k\"\n    shows \"commutative_square f g h k\"", "lemma commutative_squareE [elim]:\n    assumes \"commutative_square f g h k\"\n    and \"\\<lbrakk> arr f; arr g; arr h; arr k; cod f = cod g; dom h = dom k; dom f = cod h;\n           dom g = cod k; f \\<cdot> h = g \\<cdot> k \\<rbrakk> \\<Longrightarrow> T\"\n    shows T", "lemma commutative_square_comp_arr:\n    assumes \"commutative_square f g h k\" and \"seq h l\"\n    shows \"commutative_square f g (h \\<cdot> l) (k \\<cdot> l)\"", "lemma arr_comp_commutative_square:\n    assumes \"commutative_square f g h k\" and \"seq l f\"\n    shows \"commutative_square (l \\<cdot> f) (l \\<cdot> g) h k\"", "lemma null_char:\n    shows \"null = Null\"", "lemma ide_char:\n    shows \"ide f \\<longleftrightarrow> f = AA \\<or> f = BB \\<or> f = TT\"", "lemma domains_char':\n    shows \"domains f = (if f = Null then {} else {Dom f})\"", "lemma codomains_char':\n    shows \"codomains f = (if f = Null then {} else {Cod f})\"", "lemma arr_char:\n    shows \"arr f \\<longleftrightarrow> f \\<noteq> Null\"", "lemma seq_char:\n    shows \"seq g f \\<longleftrightarrow> (f = AA \\<and> (g = AA \\<or> g = AT)) \\<or>\n                       (f = BB \\<and> (g = BB \\<or> g = BT)) \\<or>\n                       (f = AT \\<and> g = TT) \\<or>\n                       (f = BT \\<and> g = TT) \\<or>\n                       (f = TT \\<and> g = TT)\"", "lemma is_category:\n    shows \"category comp\"", "lemma dom_char:\n    shows \"dom = Dom\"", "lemma cod_char:\n    shows \"cod = Cod\"", "lemma cone_mkCone:\n    assumes \"is_rendered_commutative_by p0 p1\"\n    shows \"cone (C.dom p0) (mkCone p0 p1)\"", "lemma is_rendered_commutative_by_cone:\n    assumes \"cone a \\<chi>\"\n    shows \"is_rendered_commutative_by (\\<chi> J.AA) (\\<chi> J.BB)\"", "lemma mkCone_cone:\n    assumes \"cone a \\<chi>\"\n    shows \"mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>\"", "lemma renders_commutative:\n    shows \"D.is_rendered_commutative_by p0 p1\"", "lemma is_universal':\n    assumes \"D.is_rendered_commutative_by p0' p1'\"\n    shows \"\\<exists>!h. \\<guillemotleft>h : C.dom p0' \\<rightarrow> C.dom p0\\<guillemotright> \\<and> p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'\"", "lemma induced_arrowI':\n    assumes \"D.is_rendered_commutative_by p0' p1'\"\n    shows \"\\<guillemotleft>induced_arrow (C.dom p0') (D.mkCone p0' p1') : C.dom p0' \\<rightarrow> C.dom p0\\<guillemotright>\"\n    and \"p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0'\"\n    and \"p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'\"", "lemma pullback_commutes':\n    assumes \"cospan f g\"\n    shows \"f \\<cdot> \\<p>\\<^sub>1[f, g] = g \\<cdot> \\<p>\\<^sub>0[f, g]\"", "lemma prj0_in_hom':\n    assumes \"cospan f g\"\n    shows \"\\<guillemotleft>\\<p>\\<^sub>0[f, g] : dom \\<p>\\<^sub>0[f, g] \\<rightarrow> dom g\\<guillemotright>\"", "lemma prj1_in_hom':\n    assumes \"cospan f g\"\n    shows \"\\<guillemotleft>\\<p>\\<^sub>1[f, g] : dom \\<p>\\<^sub>0[f, g] \\<rightarrow> dom f\\<guillemotright>\"", "lemma pbdom_in_hom [intro]:\n    assumes \"cospan f g\"\n    shows \"\\<guillemotleft>f \\<down>\\<down> g : f \\<down>\\<down> g \\<rightarrow> f \\<down>\\<down> g\\<guillemotright>\"", "lemma ide_pbdom [simp]:\n    assumes \"cospan f g\"\n    shows \"ide (f \\<down>\\<down> g)\"", "lemma prj0_in_hom [intro, simp]:\n    assumes \"cospan f g\" and \"a = f \\<down>\\<down> g\" and \"b = dom g\"\n    shows \"\\<guillemotleft>\\<p>\\<^sub>0[f, g] : a \\<rightarrow> b\\<guillemotright>\"", "lemma prj1_in_hom [intro, simp]:\n    assumes \"cospan f g\" and \"a = f \\<down>\\<down> g\" and \"b = dom f\"\n    shows \"\\<guillemotleft>\\<p>\\<^sub>1[f, g] : a \\<rightarrow> b\\<guillemotright>\"", "lemma prj0_simps [simp]:\n    assumes \"cospan f g\"\n    shows \"arr \\<p>\\<^sub>0[f, g]\" and \"dom \\<p>\\<^sub>0[f, g] = f \\<down>\\<down> g\" and \"cod \\<p>\\<^sub>0[f, g] = dom g\"", "lemma prj0_simps_arr [iff]:\n    shows \"arr \\<p>\\<^sub>0[f, g] \\<longleftrightarrow> cospan f g\"", "lemma prj1_simps [simp]:\n    assumes \"cospan f g\"\n    shows \"arr \\<p>\\<^sub>1[f, g]\" and \"dom \\<p>\\<^sub>1[f, g] = f \\<down>\\<down> g\" and \"cod \\<p>\\<^sub>1[f, g] = dom f\"", "lemma prj1_simps_arr [iff]:\n    shows \"arr \\<p>\\<^sub>1[f, g] \\<longleftrightarrow> cospan f g\"", "lemma span_prj:\n    assumes \"cospan f g\"\n    shows \"span \\<p>\\<^sub>0[f, g] \\<p>\\<^sub>1[f, g]\"", "lemma tuple_in_hom [intro]:\n    assumes \"commutative_square f g h k\"\n    shows \"\\<guillemotleft>\\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> : dom h \\<rightarrow> f \\<down>\\<down> g\\<guillemotright>\"", "lemma tuple_is_extensional:\n    assumes \"\\<not> commutative_square f g h k\"\n    shows \"\\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = null\"", "lemma tuple_simps [simp]:\n    assumes \"commutative_square f g h k\"\n    shows \"arr \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>\" and \"dom \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = dom h\" and \"cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = f \\<down>\\<down> g\"", "lemma prj_tuple [simp]:\n    assumes \"commutative_square f g h k\"\n    shows \"\\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = k\" and \"\\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = h\"", "lemma tuple_prj:\n    assumes \"cospan f g\" and \"seq \\<p>\\<^sub>1[f, g] h\"\n    shows \"\\<langle>\\<p>\\<^sub>1[f, g] \\<cdot> h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle> = h\"", "lemma tuple_prj_spc [simp]:\n    assumes \"cospan f g\"\n    shows \"\\<langle>\\<p>\\<^sub>1[f, g] \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g]\\<rangle> = f \\<down>\\<down> g\"", "lemma prj_joint_monic:\n    assumes \"cospan f g\" and \"seq \\<p>\\<^sub>1[f, g] h\" and \"seq \\<p>\\<^sub>1[f, g] h'\"\n    and \"\\<p>\\<^sub>0[f, g] \\<cdot> h = \\<p>\\<^sub>0[f, g] \\<cdot> h'\" and \"\\<p>\\<^sub>1[f, g] \\<cdot> h = \\<p>\\<^sub>1[f, g] \\<cdot> h'\"\n    shows \"h = h'\"", "lemma iso_pullback_ide:\n    assumes \"cospan \\<mu> \\<nu>\" and \"ide \\<mu>\"\n    shows \"iso \\<p>\\<^sub>0[\\<mu>, \\<nu>]\"", "lemma comp_tuple_arr:\n    assumes \"commutative_square f g h k\" and \"seq h l\"\n    shows \"\\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l = \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\"", "lemma pullback_arr_cod:\n    assumes \"arr f\"\n    shows \"inverse_arrows \\<p>\\<^sub>1[f, cod f] \\<langle>dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>\"\n    and \"inverse_arrows \\<p>\\<^sub>0[cod f, f] \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> dom f\\<rangle>\"", "lemma pullback_mono_self:\n    assumes \"mono f\"\n    shows \"\\<p>\\<^sub>0[f, f] = \\<p>\\<^sub>1[f, f]\"", "lemma pullback_iso_self:\n    assumes \"iso f\"\n    shows \"\\<p>\\<^sub>0[f, f] = \\<p>\\<^sub>1[f, f]\"", "lemma pullback_ide_self [simp]:\n    assumes \"ide a\"\n    shows \"\\<p>\\<^sub>0[a, a] = \\<p>\\<^sub>1[a, a]\"", "lemma prj_yields_pullback:\n    assumes \"cospan f g\"\n    shows \"cospan_diagram.has_as_pullback C f g (prj1 f g) (prj0 f g)\""], "translations": [["", "lemma commutative_squareI [intro, simp]:\n    assumes \"cospan f g\" and \"span h k\" and \"dom f = cod h\" and \"f \\<cdot> h = g \\<cdot> k\"\n    shows \"commutative_square f g h k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. commutative_square f g h k", "using assms commutative_square_def"], ["proof (prove)\nusing this:\n  cospan f g\n  span h k\n  local.dom f = cod h\n  f \\<cdot> h = g \\<cdot> k\n  commutative_square ?f ?g ?h ?k \\<equiv>\n  cospan ?f ?g \\<and>\n  span ?h ?k \\<and>\n  local.dom ?f = cod ?h \\<and> ?f \\<cdot> ?h = ?g \\<cdot> ?k\n\ngoal (1 subgoal):\n 1. commutative_square f g h k", "by auto"], ["", "lemma commutative_squareE [elim]:\n    assumes \"commutative_square f g h k\"\n    and \"\\<lbrakk> arr f; arr g; arr h; arr k; cod f = cod g; dom h = dom k; dom f = cod h;\n           dom g = cod k; f \\<cdot> h = g \\<cdot> k \\<rbrakk> \\<Longrightarrow> T\"\n    shows T"], ["proof (prove)\ngoal (1 subgoal):\n 1. T", "using assms commutative_square_def"], ["proof (prove)\nusing this:\n  commutative_square f g h k\n  \\<lbrakk>arr f; arr g; arr h; arr k; cod f = cod g;\n   local.dom h = local.dom k; local.dom f = cod h; local.dom g = cod k;\n   f \\<cdot> h = g \\<cdot> k\\<rbrakk>\n  \\<Longrightarrow> T\n  commutative_square ?f ?g ?h ?k \\<equiv>\n  cospan ?f ?g \\<and>\n  span ?h ?k \\<and>\n  local.dom ?f = cod ?h \\<and> ?f \\<cdot> ?h = ?g \\<cdot> ?k\n\ngoal (1 subgoal):\n 1. T", "by (metis (mono_tags, lifting) seqE seqI)"], ["", "lemma commutative_square_comp_arr:\n    assumes \"commutative_square f g h k\" and \"seq h l\"\n    shows \"commutative_square f g (h \\<cdot> l) (k \\<cdot> l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. commutative_square f g (h \\<cdot> l) (k \\<cdot> l)", "using assms"], ["proof (prove)\nusing this:\n  commutative_square f g h k\n  seq h l\n\ngoal (1 subgoal):\n 1. commutative_square f g (h \\<cdot> l) (k \\<cdot> l)", "apply (elim commutative_squareE, intro commutative_squareI, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>arr f; arr g; arr h; arr k; cod f = cod g;\n     local.dom h = local.dom k; local.dom f = cod h; local.dom g = cod k;\n     f \\<cdot> h = g \\<cdot> k; seq h l\\<rbrakk>\n    \\<Longrightarrow> f \\<cdot> h \\<cdot> l = g \\<cdot> k \\<cdot> l", "using comp_assoc"], ["proof (prove)\nusing this:\n  (?h \\<cdot> ?g) \\<cdot> ?f = ?h \\<cdot> ?g \\<cdot> ?f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>arr f; arr g; arr h; arr k; cod f = cod g;\n     local.dom h = local.dom k; local.dom f = cod h; local.dom g = cod k;\n     f \\<cdot> h = g \\<cdot> k; seq h l\\<rbrakk>\n    \\<Longrightarrow> f \\<cdot> h \\<cdot> l = g \\<cdot> k \\<cdot> l", "by metis"], ["", "lemma arr_comp_commutative_square:\n    assumes \"commutative_square f g h k\" and \"seq l f\"\n    shows \"commutative_square (l \\<cdot> f) (l \\<cdot> g) h k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. commutative_square (l \\<cdot> f) (l \\<cdot> g) h k", "using assms comp_assoc"], ["proof (prove)\nusing this:\n  commutative_square f g h k\n  seq l f\n  (?h \\<cdot> ?g) \\<cdot> ?f = ?h \\<cdot> ?g \\<cdot> ?f\n\ngoal (1 subgoal):\n 1. commutative_square (l \\<cdot> f) (l \\<cdot> g) h k", "by (elim commutative_squareE, intro commutative_squareI, auto)"], ["", "end"], ["", "section \"Cospan Diagrams\""], ["", "(* TODO: Rework the ugly development of equalizers into this form. *)"], ["", "text \\<open>\n    The ``shape'' of a cospan diagram is a category having two non-identity arrows\n    with distinct domains and a common codomain.\n  \\<close>"], ["", "locale cospan_shape\n  begin"], ["", "datatype Arr = Null | AA | BB | TT | AT | BT"], ["", "fun comp\n    where \"comp AA AA = AA\"\n        | \"comp AT AA = AT\"\n        | \"comp TT AT = AT\"\n        | \"comp BB BB = BB\"\n        | \"comp BT BB = BT\"\n        | \"comp TT BT = BT\"\n        | \"comp TT TT = TT\"\n        | \"comp _ _ = Null\""], ["", "interpretation partial_magma comp"], ["proof (prove)\ngoal (1 subgoal):\n 1. partial_magma local.comp", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!n. \\<forall>f. local.comp n f = n \\<and> local.comp f n = n", "show \"\\<exists>!n. \\<forall>f. comp n f = n \\<and> comp f n = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!n. \\<forall>f. local.comp n f = n \\<and> local.comp f n = n", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>f. local.comp ?a f = ?a \\<and> local.comp f ?a = ?a\n 2. \\<And>n.\n       \\<forall>f.\n          local.comp n f = n \\<and> local.comp f n = n \\<Longrightarrow>\n       n = ?a", "show \"\\<forall>f. comp Null f = Null \\<and> comp f Null = Null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f. local.comp Null f = Null \\<and> local.comp f Null = Null", "by simp"], ["proof (state)\nthis:\n  \\<forall>f. local.comp Null f = Null \\<and> local.comp f Null = Null\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>f.\n          local.comp n f = n \\<and> local.comp f n = n \\<Longrightarrow>\n       n = Null", "show \"\\<And>n. \\<forall>f. comp n f = n \\<and> comp f n = n \\<Longrightarrow> n = Null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>f.\n          local.comp n f = n \\<and> local.comp f n = n \\<Longrightarrow>\n       n = Null", "by (metis comp.simps(8))"], ["proof (state)\nthis:\n  \\<forall>f.\n     local.comp ?n f = ?n \\<and> local.comp f ?n = ?n \\<Longrightarrow>\n  ?n = Null\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!n. \\<forall>f. local.comp n f = n \\<and> local.comp f n = n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma null_char:\n    shows \"null = Null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null = Null", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. null = Null", "have \"\\<forall>f. comp Null f = Null \\<and> comp f Null = Null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f. local.comp Null f = Null \\<and> local.comp f Null = Null", "by simp"], ["proof (state)\nthis:\n  \\<forall>f. local.comp Null f = Null \\<and> local.comp f Null = Null\n\ngoal (1 subgoal):\n 1. null = Null", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>f. local.comp Null f = Null \\<and> local.comp f Null = Null\n\ngoal (1 subgoal):\n 1. null = Null", "using null_def ex_un_null theI [of \"\\<lambda>n. \\<forall>f. comp n f = n \\<and> comp f n = n\"]"], ["proof (prove)\nusing this:\n  \\<forall>f. local.comp Null f = Null \\<and> local.comp f Null = Null\n  null = (THE n. \\<forall>f. local.comp n f = n \\<and> local.comp f n = n)\n  \\<exists>!n. \\<forall>f. local.comp n f = n \\<and> local.comp f n = n\n  \\<lbrakk>\\<forall>f. local.comp ?a f = ?a \\<and> local.comp f ?a = ?a;\n   \\<And>x.\n      \\<forall>f.\n         local.comp x f = x \\<and> local.comp f x = x \\<Longrightarrow>\n      x = ?a\\<rbrakk>\n  \\<Longrightarrow> \\<forall>f.\n                       local.comp\n                        (THE x.\n                            \\<forall>f.\n                               local.comp x f = x \\<and> local.comp f x = x)\n                        f =\n                       (THE x.\n                           \\<forall>f.\n                              local.comp x f = x \\<and>\n                              local.comp f x = x) \\<and>\n                       local.comp f\n                        (THE x.\n                            \\<forall>f.\n                               local.comp x f = x \\<and>\n                               local.comp f x = x) =\n                       (THE x.\n                           \\<forall>f.\n                              local.comp x f = x \\<and> local.comp f x = x)\n\ngoal (1 subgoal):\n 1. null = Null", "by (metis partial_magma.comp_null(2) partial_magma_axioms)"], ["proof (state)\nthis:\n  null = Null\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ide_char:\n    shows \"ide f \\<longleftrightarrow> f = AA \\<or> f = BB \\<or> f = TT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide f = (f = AA \\<or> f = BB \\<or> f = TT)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ide f \\<Longrightarrow> f = AA \\<or> f = BB \\<or> f = TT\n 2. f = AA \\<or> f = BB \\<or> f = TT \\<Longrightarrow> ide f", "show \"ide f \\<Longrightarrow> f = AA \\<or> f = BB \\<or> f = TT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide f \\<Longrightarrow> f = AA \\<or> f = BB \\<or> f = TT", "using ide_def null_char"], ["proof (prove)\nusing this:\n  ide ?a \\<equiv>\n  local.comp ?a ?a \\<noteq> null \\<and>\n  (\\<forall>f.\n      (local.comp f ?a \\<noteq> null \\<longrightarrow>\n       local.comp f ?a = f) \\<and>\n      (local.comp ?a f \\<noteq> null \\<longrightarrow> local.comp ?a f = f))\n  null = Null\n\ngoal (1 subgoal):\n 1. ide f \\<Longrightarrow> f = AA \\<or> f = BB \\<or> f = TT", "by (cases f, simp_all)"], ["proof (state)\nthis:\n  ide f \\<Longrightarrow> f = AA \\<or> f = BB \\<or> f = TT\n\ngoal (1 subgoal):\n 1. f = AA \\<or> f = BB \\<or> f = TT \\<Longrightarrow> ide f", "show \"f = AA \\<or> f = BB \\<or> f = TT \\<Longrightarrow> ide f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = AA \\<or> f = BB \\<or> f = TT \\<Longrightarrow> ide f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f = AA \\<or> f = BB \\<or> f = TT \\<Longrightarrow> ide f", "have 1: \"\\<And>f g. f = AA \\<or> f = BB \\<or> f = TT \\<Longrightarrow>\n                       comp f f \\<noteq> Null \\<and>\n                       (comp g f \\<noteq> Null \\<longrightarrow> comp g f = g) \\<and>\n                       (comp f g \\<noteq> Null \\<longrightarrow> comp f g = g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       f = AA \\<or> f = BB \\<or> f = TT \\<Longrightarrow>\n       local.comp f f \\<noteq> Null \\<and>\n       (local.comp g f \\<noteq> Null \\<longrightarrow>\n        local.comp g f = g) \\<and>\n       (local.comp f g \\<noteq> Null \\<longrightarrow> local.comp f g = g)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       f = AA \\<or> f = BB \\<or> f = TT \\<Longrightarrow>\n       local.comp f f \\<noteq> Null \\<and>\n       (local.comp g f \\<noteq> Null \\<longrightarrow>\n        local.comp g f = g) \\<and>\n       (local.comp f g \\<noteq> Null \\<longrightarrow> local.comp f g = g)", "fix f g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       f = AA \\<or> f = BB \\<or> f = TT \\<Longrightarrow>\n       local.comp f f \\<noteq> Null \\<and>\n       (local.comp g f \\<noteq> Null \\<longrightarrow>\n        local.comp g f = g) \\<and>\n       (local.comp f g \\<noteq> Null \\<longrightarrow> local.comp f g = g)", "show \"f = AA \\<or> f = BB \\<or> f = TT \\<Longrightarrow>\n                  comp f f \\<noteq> Null \\<and>\n                  (comp g f \\<noteq> Null \\<longrightarrow> comp g f = g) \\<and>\n                  (comp f g \\<noteq> Null \\<longrightarrow> comp f g = g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = AA \\<or> f = BB \\<or> f = TT \\<Longrightarrow>\n    local.comp f f \\<noteq> Null \\<and>\n    (local.comp g f \\<noteq> Null \\<longrightarrow>\n     local.comp g f = g) \\<and>\n    (local.comp f g \\<noteq> Null \\<longrightarrow> local.comp f g = g)", "by (cases f; cases g, auto)"], ["proof (state)\nthis:\n  f = AA \\<or> f = BB \\<or> f = TT \\<Longrightarrow>\n  local.comp f f \\<noteq> Null \\<and>\n  (local.comp g f \\<noteq> Null \\<longrightarrow> local.comp g f = g) \\<and>\n  (local.comp f g \\<noteq> Null \\<longrightarrow> local.comp f g = g)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?f = AA \\<or> ?f = BB \\<or> ?f = TT \\<Longrightarrow>\n  local.comp ?f ?f \\<noteq> Null \\<and>\n  (local.comp ?g ?f \\<noteq> Null \\<longrightarrow>\n   local.comp ?g ?f = ?g) \\<and>\n  (local.comp ?f ?g \\<noteq> Null \\<longrightarrow> local.comp ?f ?g = ?g)\n\ngoal (1 subgoal):\n 1. f = AA \\<or> f = BB \\<or> f = TT \\<Longrightarrow> ide f", "assume f: \"f = AA \\<or> f = BB \\<or> f = TT\""], ["proof (state)\nthis:\n  f = AA \\<or> f = BB \\<or> f = TT\n\ngoal (1 subgoal):\n 1. f = AA \\<or> f = BB \\<or> f = TT \\<Longrightarrow> ide f", "show \"ide f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide f", "using f 1 ide_def null_char"], ["proof (prove)\nusing this:\n  f = AA \\<or> f = BB \\<or> f = TT\n  ?f = AA \\<or> ?f = BB \\<or> ?f = TT \\<Longrightarrow>\n  local.comp ?f ?f \\<noteq> Null \\<and>\n  (local.comp ?g ?f \\<noteq> Null \\<longrightarrow>\n   local.comp ?g ?f = ?g) \\<and>\n  (local.comp ?f ?g \\<noteq> Null \\<longrightarrow> local.comp ?f ?g = ?g)\n  ide ?a \\<equiv>\n  local.comp ?a ?a \\<noteq> null \\<and>\n  (\\<forall>f.\n      (local.comp f ?a \\<noteq> null \\<longrightarrow>\n       local.comp f ?a = f) \\<and>\n      (local.comp ?a f \\<noteq> null \\<longrightarrow> local.comp ?a f = f))\n  null = Null\n\ngoal (1 subgoal):\n 1. ide f", "by simp"], ["proof (state)\nthis:\n  ide f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f = AA \\<or> f = BB \\<or> f = TT \\<Longrightarrow> ide f\n\ngoal:\nNo subgoals!", "qed"], ["", "fun Dom\n    where \"Dom AA = AA\"\n        | \"Dom BB = BB\"\n        | \"Dom TT = TT\"\n        | \"Dom AT = AA\"\n        | \"Dom BT = BB\"\n        | \"Dom _ = Null\""], ["", "fun Cod\n    where \"Cod AA = AA\"\n        | \"Cod BB = BB\"\n        | \"Cod TT = TT\"\n        | \"Cod AT = TT\"\n        | \"Cod BT = TT\"\n        | \"Cod _ = Null\""], ["", "lemma domains_char':\n    shows \"domains f = (if f = Null then {} else {Dom f})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. domains f = (if f = Null then {} else {Dom f})", "using domains_def ide_char null_char"], ["proof (prove)\nusing this:\n  domains ?f \\<equiv> {a. ide a \\<and> local.comp ?f a \\<noteq> null}\n  ide ?f = (?f = AA \\<or> ?f = BB \\<or> ?f = TT)\n  null = Null\n\ngoal (1 subgoal):\n 1. domains f = (if f = Null then {} else {Dom f})", "by (cases f, auto)"], ["", "lemma codomains_char':\n    shows \"codomains f = (if f = Null then {} else {Cod f})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. codomains f = (if f = Null then {} else {Cod f})", "using codomains_def ide_char null_char"], ["proof (prove)\nusing this:\n  codomains ?f \\<equiv> {b. ide b \\<and> local.comp b ?f \\<noteq> null}\n  ide ?f = (?f = AA \\<or> ?f = BB \\<or> ?f = TT)\n  null = Null\n\ngoal (1 subgoal):\n 1. codomains f = (if f = Null then {} else {Cod f})", "by (cases f, auto)"], ["", "lemma arr_char:\n    shows \"arr f \\<longleftrightarrow> f \\<noteq> Null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr f = (f \\<noteq> Null)", "using arr_def domains_char' codomains_char'"], ["proof (prove)\nusing this:\n  arr ?f \\<equiv> domains ?f \\<noteq> {} \\<or> codomains ?f \\<noteq> {}\n  domains ?f = (if ?f = Null then {} else {Dom ?f})\n  codomains ?f = (if ?f = Null then {} else {Cod ?f})\n\ngoal (1 subgoal):\n 1. arr f = (f \\<noteq> Null)", "by simp"], ["", "lemma seq_char:\n    shows \"seq g f \\<longleftrightarrow> (f = AA \\<and> (g = AA \\<or> g = AT)) \\<or>\n                       (f = BB \\<and> (g = BB \\<or> g = BT)) \\<or>\n                       (f = AT \\<and> g = TT) \\<or>\n                       (f = BT \\<and> g = TT) \\<or>\n                       (f = TT \\<and> g = TT)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. seq g f =\n    (f = AA \\<and> (g = AA \\<or> g = AT) \\<or>\n     f = BB \\<and> (g = BB \\<or> g = BT) \\<or>\n     f = AT \\<and> g = TT \\<or>\n     f = BT \\<and> g = TT \\<or> f = TT \\<and> g = TT)", "using arr_char null_char"], ["proof (prove)\nusing this:\n  arr ?f = (?f \\<noteq> Null)\n  null = Null\n\ngoal (1 subgoal):\n 1. seq g f =\n    (f = AA \\<and> (g = AA \\<or> g = AT) \\<or>\n     f = BB \\<and> (g = BB \\<or> g = BT) \\<or>\n     f = AT \\<and> g = TT \\<or>\n     f = BT \\<and> g = TT \\<or> f = TT \\<and> g = TT)", "by (cases f; cases g, simp_all)"], ["", "interpretation category comp"], ["proof (prove)\ngoal (1 subgoal):\n 1. category local.comp", "proof"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>g f. local.comp g f \\<noteq> null \\<Longrightarrow> seq g f\n 2. \\<And>f. (domains f \\<noteq> {}) = (codomains f \\<noteq> {})\n 3. \\<And>h g f.\n       \\<lbrakk>seq h g; seq (local.comp h g) f\\<rbrakk>\n       \\<Longrightarrow> seq g f\n 4. \\<And>h g f.\n       \\<lbrakk>seq h (local.comp g f); seq g f\\<rbrakk>\n       \\<Longrightarrow> seq h g\n 5. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> seq (local.comp h g) f\n 6. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> local.comp (local.comp h g) f =\n                         local.comp h (local.comp g f)", "fix f g h"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>g f. local.comp g f \\<noteq> null \\<Longrightarrow> seq g f\n 2. \\<And>f. (domains f \\<noteq> {}) = (codomains f \\<noteq> {})\n 3. \\<And>h g f.\n       \\<lbrakk>seq h g; seq (local.comp h g) f\\<rbrakk>\n       \\<Longrightarrow> seq g f\n 4. \\<And>h g f.\n       \\<lbrakk>seq h (local.comp g f); seq g f\\<rbrakk>\n       \\<Longrightarrow> seq h g\n 5. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> seq (local.comp h g) f\n 6. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> local.comp (local.comp h g) f =\n                         local.comp h (local.comp g f)", "show \"comp g f \\<noteq> null \\<Longrightarrow> seq g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.comp g f \\<noteq> null \\<Longrightarrow> seq g f", "using null_char arr_char seq_char"], ["proof (prove)\nusing this:\n  null = Null\n  arr ?f = (?f \\<noteq> Null)\n  seq ?g ?f =\n  (?f = AA \\<and> (?g = AA \\<or> ?g = AT) \\<or>\n   ?f = BB \\<and> (?g = BB \\<or> ?g = BT) \\<or>\n   ?f = AT \\<and> ?g = TT \\<or>\n   ?f = BT \\<and> ?g = TT \\<or> ?f = TT \\<and> ?g = TT)\n\ngoal (1 subgoal):\n 1. local.comp g f \\<noteq> null \\<Longrightarrow> seq g f", "by simp"], ["proof (state)\nthis:\n  local.comp g f \\<noteq> null \\<Longrightarrow> seq g f\n\ngoal (5 subgoals):\n 1. \\<And>f. (domains f \\<noteq> {}) = (codomains f \\<noteq> {})\n 2. \\<And>h g f.\n       \\<lbrakk>seq h g; seq (local.comp h g) f\\<rbrakk>\n       \\<Longrightarrow> seq g f\n 3. \\<And>h g f.\n       \\<lbrakk>seq h (local.comp g f); seq g f\\<rbrakk>\n       \\<Longrightarrow> seq h g\n 4. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> seq (local.comp h g) f\n 5. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> local.comp (local.comp h g) f =\n                         local.comp h (local.comp g f)", "show \"domains f \\<noteq> {} \\<longleftrightarrow> codomains f \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (domains f \\<noteq> {}) = (codomains f \\<noteq> {})", "using domains_char' codomains_char'"], ["proof (prove)\nusing this:\n  domains ?f = (if ?f = Null then {} else {Dom ?f})\n  codomains ?f = (if ?f = Null then {} else {Cod ?f})\n\ngoal (1 subgoal):\n 1. (domains f \\<noteq> {}) = (codomains f \\<noteq> {})", "by auto"], ["proof (state)\nthis:\n  (domains f \\<noteq> {}) = (codomains f \\<noteq> {})\n\ngoal (4 subgoals):\n 1. \\<And>h g f.\n       \\<lbrakk>seq h g; seq (local.comp h g) f\\<rbrakk>\n       \\<Longrightarrow> seq g f\n 2. \\<And>h g f.\n       \\<lbrakk>seq h (local.comp g f); seq g f\\<rbrakk>\n       \\<Longrightarrow> seq h g\n 3. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> seq (local.comp h g) f\n 4. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> local.comp (local.comp h g) f =\n                         local.comp h (local.comp g f)", "show \"seq h g \\<Longrightarrow> seq (comp h g) f \\<Longrightarrow> seq g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>seq h g; seq (local.comp h g) f\\<rbrakk>\n    \\<Longrightarrow> seq g f", "using seq_char arr_char"], ["proof (prove)\nusing this:\n  seq ?g ?f =\n  (?f = AA \\<and> (?g = AA \\<or> ?g = AT) \\<or>\n   ?f = BB \\<and> (?g = BB \\<or> ?g = BT) \\<or>\n   ?f = AT \\<and> ?g = TT \\<or>\n   ?f = BT \\<and> ?g = TT \\<or> ?f = TT \\<and> ?g = TT)\n  arr ?f = (?f \\<noteq> Null)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>seq h g; seq (local.comp h g) f\\<rbrakk>\n    \\<Longrightarrow> seq g f", "by (cases g; cases h; simp_all)"], ["proof (state)\nthis:\n  \\<lbrakk>seq h g; seq (local.comp h g) f\\<rbrakk>\n  \\<Longrightarrow> seq g f\n\ngoal (3 subgoals):\n 1. \\<And>h g f.\n       \\<lbrakk>seq h (local.comp g f); seq g f\\<rbrakk>\n       \\<Longrightarrow> seq h g\n 2. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> seq (local.comp h g) f\n 3. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> local.comp (local.comp h g) f =\n                         local.comp h (local.comp g f)", "show \"seq h (comp g f) \\<Longrightarrow> seq g f \\<Longrightarrow> seq h g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>seq h (local.comp g f); seq g f\\<rbrakk>\n    \\<Longrightarrow> seq h g", "using seq_char arr_char"], ["proof (prove)\nusing this:\n  seq ?g ?f =\n  (?f = AA \\<and> (?g = AA \\<or> ?g = AT) \\<or>\n   ?f = BB \\<and> (?g = BB \\<or> ?g = BT) \\<or>\n   ?f = AT \\<and> ?g = TT \\<or>\n   ?f = BT \\<and> ?g = TT \\<or> ?f = TT \\<and> ?g = TT)\n  arr ?f = (?f \\<noteq> Null)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>seq h (local.comp g f); seq g f\\<rbrakk>\n    \\<Longrightarrow> seq h g", "by (cases f; cases g; simp_all)"], ["proof (state)\nthis:\n  \\<lbrakk>seq h (local.comp g f); seq g f\\<rbrakk>\n  \\<Longrightarrow> seq h g\n\ngoal (2 subgoals):\n 1. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> seq (local.comp h g) f\n 2. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> local.comp (local.comp h g) f =\n                         local.comp h (local.comp g f)", "show \"seq g f \\<Longrightarrow> seq h g \\<Longrightarrow> seq (comp h g) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>seq g f; seq h g\\<rbrakk>\n    \\<Longrightarrow> seq (local.comp h g) f", "using seq_char arr_char"], ["proof (prove)\nusing this:\n  seq ?g ?f =\n  (?f = AA \\<and> (?g = AA \\<or> ?g = AT) \\<or>\n   ?f = BB \\<and> (?g = BB \\<or> ?g = BT) \\<or>\n   ?f = AT \\<and> ?g = TT \\<or>\n   ?f = BT \\<and> ?g = TT \\<or> ?f = TT \\<and> ?g = TT)\n  arr ?f = (?f \\<noteq> Null)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>seq g f; seq h g\\<rbrakk>\n    \\<Longrightarrow> seq (local.comp h g) f", "by (cases f; simp_all; cases g; simp_all; cases h; auto)"], ["proof (state)\nthis:\n  \\<lbrakk>seq g f; seq h g\\<rbrakk>\n  \\<Longrightarrow> seq (local.comp h g) f\n\ngoal (1 subgoal):\n 1. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> local.comp (local.comp h g) f =\n                         local.comp h (local.comp g f)", "show \"seq g f \\<Longrightarrow> seq h g \\<Longrightarrow> comp (comp h g) f = comp h (comp g f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>seq g f; seq h g\\<rbrakk>\n    \\<Longrightarrow> local.comp (local.comp h g) f =\n                      local.comp h (local.comp g f)", "using seq_char"], ["proof (prove)\nusing this:\n  seq ?g ?f =\n  (?f = AA \\<and> (?g = AA \\<or> ?g = AT) \\<or>\n   ?f = BB \\<and> (?g = BB \\<or> ?g = BT) \\<or>\n   ?f = AT \\<and> ?g = TT \\<or>\n   ?f = BT \\<and> ?g = TT \\<or> ?f = TT \\<and> ?g = TT)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>seq g f; seq h g\\<rbrakk>\n    \\<Longrightarrow> local.comp (local.comp h g) f =\n                      local.comp h (local.comp g f)", "by (cases f; simp_all; cases g; simp_all; cases h; auto)"], ["proof (state)\nthis:\n  \\<lbrakk>seq g f; seq h g\\<rbrakk>\n  \\<Longrightarrow> local.comp (local.comp h g) f =\n                    local.comp h (local.comp g f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma is_category:\n    shows \"category comp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category local.comp", ".."], ["", "lemma dom_char:\n    shows \"dom = Dom\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.dom = Dom", "using dom_def domains_char domains_char' null_char"], ["proof (prove)\nusing this:\n  local.dom ?f =\n  (if domains ?f \\<noteq> {} then SOME a. a \\<in> domains ?f else null)\n  domains ?f = (if arr ?f then {local.dom ?f} else {})\n  domains ?f = (if ?f = Null then {} else {Dom ?f})\n  null = Null\n\ngoal (1 subgoal):\n 1. local.dom = Dom", "by fastforce"], ["", "lemma cod_char:\n    shows \"cod = Cod\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cod = Cod", "using cod_def codomains_char codomains_char' null_char"], ["proof (prove)\nusing this:\n  cod ?f =\n  (if codomains ?f \\<noteq> {} then SOME b. b \\<in> codomains ?f else null)\n  codomains ?f = (if arr ?f then {cod ?f} else {})\n  codomains ?f = (if ?f = Null then {} else {Cod ?f})\n  null = Null\n\ngoal (1 subgoal):\n 1. cod = Cod", "by fastforce"], ["", "end"], ["", "sublocale cospan_shape \\<subseteq> category comp"], ["proof (prove)\ngoal (1 subgoal):\n 1. category local.comp", "using is_category"], ["proof (prove)\nusing this:\n  category local.comp\n\ngoal (1 subgoal):\n 1. category local.comp", "by auto"], ["", "locale cospan_diagram =\n    J: cospan_shape +\n    C: category C\n  for C :: \"'c comp\"      (infixr \"\\<cdot>\" 55)\n  and f0 :: 'c\n  and f1 :: 'c +\n  assumes is_cospan: \"C.cospan f0 f1\"\n  begin"], ["", "no_notation J.comp   (infixr \"\\<cdot>\" 55)"], ["", "notation J.comp      (infixr \"\\<cdot>\\<^sub>J\" 55)"], ["", "fun map\n    where \"map J.AA = C.dom f0\"\n        | \"map J.BB = C.dom f1\"\n        | \"map J.TT = C.cod f0\"\n        | \"map J.AT = f0\"\n        | \"map J.BT = f1\"\n        | \"map _ = C.null\""], ["", "end"], ["", "sublocale cospan_diagram \\<subseteq> diagram J.comp C map"], ["proof (prove)\ngoal (1 subgoal):\n 1. diagram (\\<cdot>\\<^sub>J) (\\<cdot>) local.map", "proof"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>f. \\<not> J.arr f \\<Longrightarrow> local.map f = C.null\n 2. \\<And>f. J.arr f \\<Longrightarrow> C.arr (local.map f)\n 3. \\<And>f.\n       J.arr f \\<Longrightarrow> C.dom (local.map f) = local.map (J.dom f)\n 4. \\<And>f.\n       J.arr f \\<Longrightarrow> C.cod (local.map f) = local.map (J.cod f)\n 5. \\<And>g f.\n       J.seq g f \\<Longrightarrow>\n       local.map (g \\<cdot>\\<^sub>J f) = local.map g \\<cdot> local.map f", "show \"\\<And>f. \\<not> J.arr f \\<Longrightarrow> map f = C.null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f. \\<not> J.arr f \\<Longrightarrow> local.map f = C.null", "using J.arr_char"], ["proof (prove)\nusing this:\n  J.arr ?f = (?f \\<noteq> J.Null)\n\ngoal (1 subgoal):\n 1. \\<And>f. \\<not> J.arr f \\<Longrightarrow> local.map f = C.null", "by simp"], ["proof (state)\nthis:\n  \\<not> J.arr ?f4 \\<Longrightarrow> local.map ?f4 = C.null\n\ngoal (4 subgoals):\n 1. \\<And>f. J.arr f \\<Longrightarrow> C.arr (local.map f)\n 2. \\<And>f.\n       J.arr f \\<Longrightarrow> C.dom (local.map f) = local.map (J.dom f)\n 3. \\<And>f.\n       J.arr f \\<Longrightarrow> C.cod (local.map f) = local.map (J.cod f)\n 4. \\<And>g f.\n       J.seq g f \\<Longrightarrow>\n       local.map (g \\<cdot>\\<^sub>J f) = local.map g \\<cdot> local.map f", "fix f"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>f. J.arr f \\<Longrightarrow> C.arr (local.map f)\n 2. \\<And>f.\n       J.arr f \\<Longrightarrow> C.dom (local.map f) = local.map (J.dom f)\n 3. \\<And>f.\n       J.arr f \\<Longrightarrow> C.cod (local.map f) = local.map (J.cod f)\n 4. \\<And>g f.\n       J.seq g f \\<Longrightarrow>\n       local.map (g \\<cdot>\\<^sub>J f) = local.map g \\<cdot> local.map f", "assume f: \"J.arr f\""], ["proof (state)\nthis:\n  J.arr f\n\ngoal (4 subgoals):\n 1. \\<And>f. J.arr f \\<Longrightarrow> C.arr (local.map f)\n 2. \\<And>f.\n       J.arr f \\<Longrightarrow> C.dom (local.map f) = local.map (J.dom f)\n 3. \\<And>f.\n       J.arr f \\<Longrightarrow> C.cod (local.map f) = local.map (J.cod f)\n 4. \\<And>g f.\n       J.seq g f \\<Longrightarrow>\n       local.map (g \\<cdot>\\<^sub>J f) = local.map g \\<cdot> local.map f", "show \"C.arr (map f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C.arr (local.map f)", "using f J.arr_char is_cospan"], ["proof (prove)\nusing this:\n  J.arr f\n  J.arr ?f = (?f \\<noteq> J.Null)\n  C.cospan f0 f1\n\ngoal (1 subgoal):\n 1. C.arr (local.map f)", "by (cases f, simp_all)"], ["proof (state)\nthis:\n  C.arr (local.map f)\n\ngoal (3 subgoals):\n 1. \\<And>f.\n       J.arr f \\<Longrightarrow> C.dom (local.map f) = local.map (J.dom f)\n 2. \\<And>f.\n       J.arr f \\<Longrightarrow> C.cod (local.map f) = local.map (J.cod f)\n 3. \\<And>g f.\n       J.seq g f \\<Longrightarrow>\n       local.map (g \\<cdot>\\<^sub>J f) = local.map g \\<cdot> local.map f", "show \"C.dom (map f) = map (J.dom f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C.dom (local.map f) = local.map (J.dom f)", "using f J.arr_char J.dom_char is_cospan"], ["proof (prove)\nusing this:\n  J.arr f\n  J.arr ?f = (?f \\<noteq> J.Null)\n  J.dom = J.Dom\n  C.cospan f0 f1\n\ngoal (1 subgoal):\n 1. C.dom (local.map f) = local.map (J.dom f)", "by (cases f, simp_all)"], ["proof (state)\nthis:\n  C.dom (local.map f) = local.map (J.dom f)\n\ngoal (2 subgoals):\n 1. \\<And>f.\n       J.arr f \\<Longrightarrow> C.cod (local.map f) = local.map (J.cod f)\n 2. \\<And>g f.\n       J.seq g f \\<Longrightarrow>\n       local.map (g \\<cdot>\\<^sub>J f) = local.map g \\<cdot> local.map f", "show \"C.cod (map f) = map (J.cod f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C.cod (local.map f) = local.map (J.cod f)", "using f J.arr_char J.cod_char is_cospan"], ["proof (prove)\nusing this:\n  J.arr f\n  J.arr ?f = (?f \\<noteq> J.Null)\n  J.cod = J.Cod\n  C.cospan f0 f1\n\ngoal (1 subgoal):\n 1. C.cod (local.map f) = local.map (J.cod f)", "by (cases f, simp_all)"], ["proof (state)\nthis:\n  C.cod (local.map f) = local.map (J.cod f)\n\ngoal (1 subgoal):\n 1. \\<And>g f.\n       J.seq g f \\<Longrightarrow>\n       local.map (g \\<cdot>\\<^sub>J f) = local.map g \\<cdot> local.map f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g f.\n       J.seq g f \\<Longrightarrow>\n       local.map (g \\<cdot>\\<^sub>J f) = local.map g \\<cdot> local.map f", "fix f g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g f.\n       J.seq g f \\<Longrightarrow>\n       local.map (g \\<cdot>\\<^sub>J f) = local.map g \\<cdot> local.map f", "assume fg: \"J.seq g f\""], ["proof (state)\nthis:\n  J.seq g f\n\ngoal (1 subgoal):\n 1. \\<And>g f.\n       J.seq g f \\<Longrightarrow>\n       local.map (g \\<cdot>\\<^sub>J f) = local.map g \\<cdot> local.map f", "show \"map (g \\<cdot>\\<^sub>J f) = map g \\<cdot> map f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.map (g \\<cdot>\\<^sub>J f) = local.map g \\<cdot> local.map f", "using fg J.seq_char J.null_char J.not_arr_null is_cospan"], ["proof (prove)\nusing this:\n  J.seq g f\n  J.seq ?g ?f =\n  (?f = J.AA \\<and> (?g = J.AA \\<or> ?g = J.AT) \\<or>\n   ?f = J.BB \\<and> (?g = J.BB \\<or> ?g = J.BT) \\<or>\n   ?f = J.AT \\<and> ?g = J.TT \\<or>\n   ?f = J.BT \\<and> ?g = J.TT \\<or> ?f = J.TT \\<and> ?g = J.TT)\n  J.null = J.Null\n  \\<not> J.arr J.null\n  C.cospan f0 f1\n\ngoal (1 subgoal):\n 1. local.map (g \\<cdot>\\<^sub>J f) = local.map g \\<cdot> local.map f", "apply (cases f; cases g, simp_all)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>J.arr J.AT; \\<not> J.arr J.Null; f = J.AA; g = J.AT;\n     \\<And>g f.\n        J.seq g f =\n        (f = J.AA \\<and> (g = J.AA \\<or> g = J.AT) \\<or>\n         f = J.BB \\<and> (g = J.BB \\<or> g = J.BT) \\<or>\n         f = J.AT \\<and> g = J.TT \\<or>\n         f = J.BT \\<and> g = J.TT \\<or> f = J.TT \\<and> g = J.TT);\n     J.null = J.Null; C.cospan f0 f1\\<rbrakk>\n    \\<Longrightarrow> f0 = f0 \\<cdot> C.dom f0\n 2. \\<lbrakk>J.arr J.BT; \\<not> J.arr J.Null; f = J.BB; g = J.BT;\n     \\<And>g f.\n        J.seq g f =\n        (f = J.AA \\<and> (g = J.AA \\<or> g = J.AT) \\<or>\n         f = J.BB \\<and> (g = J.BB \\<or> g = J.BT) \\<or>\n         f = J.AT \\<and> g = J.TT \\<or>\n         f = J.BT \\<and> g = J.TT \\<or> f = J.TT \\<and> g = J.TT);\n     J.null = J.Null; C.cospan f0 f1\\<rbrakk>\n    \\<Longrightarrow> f1 = f1 \\<cdot> C.dom f1\n 3. \\<lbrakk>J.arr J.AT; \\<not> J.arr J.Null; f = J.AT; g = J.TT;\n     \\<And>g f.\n        J.seq g f =\n        (f = J.AA \\<and> (g = J.AA \\<or> g = J.AT) \\<or>\n         f = J.BB \\<and> (g = J.BB \\<or> g = J.BT) \\<or>\n         f = J.AT \\<and> g = J.TT \\<or>\n         f = J.BT \\<and> g = J.TT \\<or> f = J.TT \\<and> g = J.TT);\n     J.null = J.Null; C.cospan f0 f1\\<rbrakk>\n    \\<Longrightarrow> f0 = C.cod f1 \\<cdot> f0\n 4. \\<lbrakk>J.arr J.BT; \\<not> J.arr J.Null; f = J.BT; g = J.TT;\n     \\<And>g f.\n        J.seq g f =\n        (f = J.AA \\<and> (g = J.AA \\<or> g = J.AT) \\<or>\n         f = J.BB \\<and> (g = J.BB \\<or> g = J.BT) \\<or>\n         f = J.AT \\<and> g = J.TT \\<or>\n         f = J.BT \\<and> g = J.TT \\<or> f = J.TT \\<and> g = J.TT);\n     J.null = J.Null; C.cospan f0 f1\\<rbrakk>\n    \\<Longrightarrow> f1 = C.cod f1 \\<cdot> f1", "using C.comp_arr_dom C.comp_cod_arr"], ["proof (prove)\nusing this:\n  \\<lbrakk>C.arr ?f; C.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot> ?a = ?f\n  \\<lbrakk>C.arr ?f; C.cod ?f = ?b\\<rbrakk>\n  \\<Longrightarrow> ?b \\<cdot> ?f = ?f\n\ngoal (4 subgoals):\n 1. \\<lbrakk>J.arr J.AT; \\<not> J.arr J.Null; f = J.AA; g = J.AT;\n     \\<And>g f.\n        J.seq g f =\n        (f = J.AA \\<and> (g = J.AA \\<or> g = J.AT) \\<or>\n         f = J.BB \\<and> (g = J.BB \\<or> g = J.BT) \\<or>\n         f = J.AT \\<and> g = J.TT \\<or>\n         f = J.BT \\<and> g = J.TT \\<or> f = J.TT \\<and> g = J.TT);\n     J.null = J.Null; C.cospan f0 f1\\<rbrakk>\n    \\<Longrightarrow> f0 = f0 \\<cdot> C.dom f0\n 2. \\<lbrakk>J.arr J.BT; \\<not> J.arr J.Null; f = J.BB; g = J.BT;\n     \\<And>g f.\n        J.seq g f =\n        (f = J.AA \\<and> (g = J.AA \\<or> g = J.AT) \\<or>\n         f = J.BB \\<and> (g = J.BB \\<or> g = J.BT) \\<or>\n         f = J.AT \\<and> g = J.TT \\<or>\n         f = J.BT \\<and> g = J.TT \\<or> f = J.TT \\<and> g = J.TT);\n     J.null = J.Null; C.cospan f0 f1\\<rbrakk>\n    \\<Longrightarrow> f1 = f1 \\<cdot> C.dom f1\n 3. \\<lbrakk>J.arr J.AT; \\<not> J.arr J.Null; f = J.AT; g = J.TT;\n     \\<And>g f.\n        J.seq g f =\n        (f = J.AA \\<and> (g = J.AA \\<or> g = J.AT) \\<or>\n         f = J.BB \\<and> (g = J.BB \\<or> g = J.BT) \\<or>\n         f = J.AT \\<and> g = J.TT \\<or>\n         f = J.BT \\<and> g = J.TT \\<or> f = J.TT \\<and> g = J.TT);\n     J.null = J.Null; C.cospan f0 f1\\<rbrakk>\n    \\<Longrightarrow> f0 = C.cod f1 \\<cdot> f0\n 4. \\<lbrakk>J.arr J.BT; \\<not> J.arr J.Null; f = J.BT; g = J.TT;\n     \\<And>g f.\n        J.seq g f =\n        (f = J.AA \\<and> (g = J.AA \\<or> g = J.AT) \\<or>\n         f = J.BB \\<and> (g = J.BB \\<or> g = J.BT) \\<or>\n         f = J.AT \\<and> g = J.TT \\<or>\n         f = J.BT \\<and> g = J.TT \\<or> f = J.TT \\<and> g = J.TT);\n     J.null = J.Null; C.cospan f0 f1\\<rbrakk>\n    \\<Longrightarrow> f1 = C.cod f1 \\<cdot> f1", "by auto"], ["proof (state)\nthis:\n  local.map (g \\<cdot>\\<^sub>J f) = local.map g \\<cdot> local.map f\n\ngoal:\nNo subgoals!", "qed"], ["", "section \"Category with Pullbacks\""], ["", "text \\<open>\n    A \\emph{pullback} in a category @{term C} is a limit of a cospan diagram in @{term C}.\n  \\<close>"], ["", "context cospan_diagram\n  begin"], ["", "definition mkCone\n    where \"mkCone p0 p1 \\<equiv> \\<lambda>j. if j = J.AA then p0\n                               else if j = J.BB then p1\n                               else if j = J.AT then f0 \\<cdot> p0\n                               else if j = J.BT then f1 \\<cdot> p1\n                               else if j = J.TT then f0 \\<cdot> p0\n                               else C.null\""], ["", "abbreviation is_rendered_commutative_by\n    where \"is_rendered_commutative_by p0 p1 \\<equiv> C.seq f0 p0 \\<and> f0 \\<cdot> p0 = f1 \\<cdot> p1\""], ["", "abbreviation has_as_pullback\n    where \"has_as_pullback p0 p1 \\<equiv> limit_cone (C.dom p0) (mkCone p0 p1)\""], ["", "lemma cone_mkCone:\n    assumes \"is_rendered_commutative_by p0 p1\"\n    shows \"cone (C.dom p0) (mkCone p0 p1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.cone (C.dom p0) (mkCone p0 p1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. local.cone (C.dom p0) (mkCone p0 p1)", "interpret E: constant_functor J.comp C \\<open>C.dom p0\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. constant_functor (\\<cdot>\\<^sub>J) (\\<cdot>) (C.dom p0)", "apply unfold_locales"], ["proof (prove)\ngoal (1 subgoal):\n 1. C.ide (C.dom p0)", "using assms"], ["proof (prove)\nusing this:\n  is_rendered_commutative_by p0 p1\n\ngoal (1 subgoal):\n 1. C.ide (C.dom p0)", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. local.cone (C.dom p0) (mkCone p0 p1)", "show \"cone (C.dom p0) (mkCone p0 p1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.cone (C.dom p0) (mkCone p0 p1)", "proof"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>f. \\<not> J.arr f \\<Longrightarrow> mkCone p0 p1 f = C.null\n 2. \\<And>f.\n       J.arr f \\<Longrightarrow> C.dom (mkCone p0 p1 f) = E.map (J.dom f)\n 3. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       C.cod (mkCone p0 p1 f) = local.map (J.cod f)\n 4. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       local.map f \\<cdot> mkCone p0 p1 (J.dom f) = mkCone p0 p1 f\n 5. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       mkCone p0 p1 (J.cod f) \\<cdot> E.map f = mkCone p0 p1 f", "fix f"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>f. \\<not> J.arr f \\<Longrightarrow> mkCone p0 p1 f = C.null\n 2. \\<And>f.\n       J.arr f \\<Longrightarrow> C.dom (mkCone p0 p1 f) = E.map (J.dom f)\n 3. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       C.cod (mkCone p0 p1 f) = local.map (J.cod f)\n 4. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       local.map f \\<cdot> mkCone p0 p1 (J.dom f) = mkCone p0 p1 f\n 5. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       mkCone p0 p1 (J.cod f) \\<cdot> E.map f = mkCone p0 p1 f", "show \"\\<not> J.arr f \\<Longrightarrow> mkCone p0 p1 f = C.null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> J.arr f \\<Longrightarrow> mkCone p0 p1 f = C.null", "using mkCone_def J.arr_char"], ["proof (prove)\nusing this:\n  mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  J.arr ?f = (?f \\<noteq> J.Null)\n\ngoal (1 subgoal):\n 1. \\<not> J.arr f \\<Longrightarrow> mkCone p0 p1 f = C.null", "by simp"], ["proof (state)\nthis:\n  \\<not> J.arr f \\<Longrightarrow> mkCone p0 p1 f = C.null\n\ngoal (4 subgoals):\n 1. \\<And>f.\n       J.arr f \\<Longrightarrow> C.dom (mkCone p0 p1 f) = E.map (J.dom f)\n 2. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       C.cod (mkCone p0 p1 f) = local.map (J.cod f)\n 3. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       local.map f \\<cdot> mkCone p0 p1 (J.dom f) = mkCone p0 p1 f\n 4. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       mkCone p0 p1 (J.cod f) \\<cdot> E.map f = mkCone p0 p1 f", "assume f: \"J.arr f\""], ["proof (state)\nthis:\n  J.arr f\n\ngoal (4 subgoals):\n 1. \\<And>f.\n       J.arr f \\<Longrightarrow> C.dom (mkCone p0 p1 f) = E.map (J.dom f)\n 2. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       C.cod (mkCone p0 p1 f) = local.map (J.cod f)\n 3. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       local.map f \\<cdot> mkCone p0 p1 (J.dom f) = mkCone p0 p1 f\n 4. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       mkCone p0 p1 (J.cod f) \\<cdot> E.map f = mkCone p0 p1 f", "show \"C.dom (mkCone p0 p1 f) = E.map (J.dom f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C.dom (mkCone p0 p1 f) = E.map (J.dom f)", "using assms f mkCone_def J.arr_char J.dom_char"], ["proof (prove)\nusing this:\n  is_rendered_commutative_by p0 p1\n  J.arr f\n  mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  J.arr ?f = (?f \\<noteq> J.Null)\n  J.dom = J.Dom\n\ngoal (1 subgoal):\n 1. C.dom (mkCone p0 p1 f) = E.map (J.dom f)", "apply (cases f, simp_all)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>C.seq f1 p1;\n     \\<And>p0 p1.\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0\n                               else C.null \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     f = J.BB; is_rendered_commutative_by p0 p1;\n     \\<And>p0 p1.\n        mkCone p0 p1 \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     \\<And>f. J.arr f = (f \\<noteq> J.Null); J.dom = J.Dom\\<rbrakk>\n    \\<Longrightarrow> C.dom p1 = C.dom p0\n 2. \\<lbrakk>C.seq f1 p1;\n     \\<And>p0 p1.\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0\n                               else C.null \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     f = J.TT; is_rendered_commutative_by p0 p1;\n     \\<And>p0 p1.\n        mkCone p0 p1 \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     \\<And>f. J.arr f = (f \\<noteq> J.Null); J.dom = J.Dom\\<rbrakk>\n    \\<Longrightarrow> C.dom p1 = C.dom p0\n 3. \\<lbrakk>C.seq f1 p1;\n     \\<And>p0 p1.\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0\n                               else C.null \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     f = J.AT; is_rendered_commutative_by p0 p1;\n     \\<And>p0 p1.\n        mkCone p0 p1 \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     \\<And>f. J.arr f = (f \\<noteq> J.Null); J.dom = J.Dom\\<rbrakk>\n    \\<Longrightarrow> C.dom p1 = C.dom p0\n 4. \\<lbrakk>C.seq f1 p1;\n     \\<And>p0 p1.\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0\n                               else C.null \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     f = J.BT; is_rendered_commutative_by p0 p1;\n     \\<And>p0 p1.\n        mkCone p0 p1 \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     \\<And>f. J.arr f = (f \\<noteq> J.Null); J.dom = J.Dom\\<rbrakk>\n    \\<Longrightarrow> C.dom p1 = C.dom p0", "by (metis C.dom_comp)+"], ["proof (state)\nthis:\n  C.dom (mkCone p0 p1 f) = E.map (J.dom f)\n\ngoal (3 subgoals):\n 1. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       C.cod (mkCone p0 p1 f) = local.map (J.cod f)\n 2. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       local.map f \\<cdot> mkCone p0 p1 (J.dom f) = mkCone p0 p1 f\n 3. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       mkCone p0 p1 (J.cod f) \\<cdot> E.map f = mkCone p0 p1 f", "show \"C.cod (mkCone p0 p1 f) = map (J.cod f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C.cod (mkCone p0 p1 f) = local.map (J.cod f)", "using assms f mkCone_def J.arr_char J.cod_char is_cospan"], ["proof (prove)\nusing this:\n  is_rendered_commutative_by p0 p1\n  J.arr f\n  mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  J.arr ?f = (?f \\<noteq> J.Null)\n  J.cod = J.Cod\n  C.cospan f0 f1\n\ngoal (1 subgoal):\n 1. C.cod (mkCone p0 p1 f) = local.map (J.cod f)", "by (cases f, auto)"], ["proof (state)\nthis:\n  C.cod (mkCone p0 p1 f) = local.map (J.cod f)\n\ngoal (2 subgoals):\n 1. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       local.map f \\<cdot> mkCone p0 p1 (J.dom f) = mkCone p0 p1 f\n 2. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       mkCone p0 p1 (J.cod f) \\<cdot> E.map f = mkCone p0 p1 f", "show \"map f \\<cdot> mkCone p0 p1 (J.dom f) = mkCone p0 p1 f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.map f \\<cdot> mkCone p0 p1 (J.dom f) = mkCone p0 p1 f", "using assms f mkCone_def J.arr_char J.dom_char C.comp_ide_arr is_cospan"], ["proof (prove)\nusing this:\n  is_rendered_commutative_by p0 p1\n  J.arr f\n  mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  J.arr ?f = (?f \\<noteq> J.Null)\n  J.dom = J.Dom\n  \\<lbrakk>C.ide ?b; C.seq ?b ?f\\<rbrakk>\n  \\<Longrightarrow> ?b \\<cdot> ?f = ?f\n  C.cospan f0 f1\n\ngoal (1 subgoal):\n 1. local.map f \\<cdot> mkCone p0 p1 (J.dom f) = mkCone p0 p1 f", "by (cases f, auto)"], ["proof (state)\nthis:\n  local.map f \\<cdot> mkCone p0 p1 (J.dom f) = mkCone p0 p1 f\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       J.arr f \\<Longrightarrow>\n       mkCone p0 p1 (J.cod f) \\<cdot> E.map f = mkCone p0 p1 f", "show \"mkCone p0 p1 (J.cod f) \\<cdot> E.map f = mkCone p0 p1 f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mkCone p0 p1 (J.cod f) \\<cdot> E.map f = mkCone p0 p1 f", "using assms f mkCone_def J.arr_char J.cod_char C.comp_arr_dom"], ["proof (prove)\nusing this:\n  is_rendered_commutative_by p0 p1\n  J.arr f\n  mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  J.arr ?f = (?f \\<noteq> J.Null)\n  J.cod = J.Cod\n  \\<lbrakk>C.arr ?f; C.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot> ?a = ?f\n\ngoal (1 subgoal):\n 1. mkCone p0 p1 (J.cod f) \\<cdot> E.map f = mkCone p0 p1 f", "apply (cases f, auto)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>C.seq f1 p1;\n     \\<And>p0 p1.\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0\n                               else C.null \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     f = J.BB;\n     \\<And>p0 p1.\n        mkCone p0 p1 \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     \\<And>f. J.arr f = (f \\<noteq> J.Null); J.cod = J.Cod;\n     \\<And>f a.\n        \\<lbrakk>C.arr f; C.dom f = a\\<rbrakk>\n        \\<Longrightarrow> f \\<cdot> a = f;\n     f0 \\<cdot> p0 = f1 \\<cdot> p1\\<rbrakk>\n    \\<Longrightarrow> p1 \\<cdot> C.dom p0 = p1\n 2. \\<lbrakk>C.seq f1 p1;\n     \\<And>p0 p1.\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0\n                               else C.null \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     f = J.TT;\n     \\<And>p0 p1.\n        mkCone p0 p1 \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     \\<And>f. J.arr f = (f \\<noteq> J.Null); J.cod = J.Cod;\n     \\<And>f a.\n        \\<lbrakk>C.arr f; C.dom f = a\\<rbrakk>\n        \\<Longrightarrow> f \\<cdot> a = f;\n     f0 \\<cdot> p0 = f1 \\<cdot> p1\\<rbrakk>\n    \\<Longrightarrow> (f1 \\<cdot> p1) \\<cdot> C.dom p0 = f1 \\<cdot> p1\n 3. \\<lbrakk>C.seq f1 p1;\n     \\<And>p0 p1.\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0\n                               else C.null \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     f = J.AT;\n     \\<And>p0 p1.\n        mkCone p0 p1 \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     \\<And>f. J.arr f = (f \\<noteq> J.Null); J.cod = J.Cod;\n     \\<And>f a.\n        \\<lbrakk>C.arr f; C.dom f = a\\<rbrakk>\n        \\<Longrightarrow> f \\<cdot> a = f;\n     f0 \\<cdot> p0 = f1 \\<cdot> p1\\<rbrakk>\n    \\<Longrightarrow> (f1 \\<cdot> p1) \\<cdot> C.dom p0 = f1 \\<cdot> p1\n 4. \\<lbrakk>C.seq f1 p1;\n     \\<And>p0 p1.\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0\n                               else C.null \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     f = J.BT;\n     \\<And>p0 p1.\n        mkCone p0 p1 \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     \\<And>f. J.arr f = (f \\<noteq> J.Null); J.cod = J.Cod;\n     \\<And>f a.\n        \\<lbrakk>C.arr f; C.dom f = a\\<rbrakk>\n        \\<Longrightarrow> f \\<cdot> a = f;\n     f0 \\<cdot> p0 = f1 \\<cdot> p1\\<rbrakk>\n    \\<Longrightarrow> (f1 \\<cdot> p1) \\<cdot> C.dom p0 = f1 \\<cdot> p1", "apply (metis C.dom_comp C.seqE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>C.seq f1 p1;\n     \\<And>p0 p1.\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0\n                               else C.null \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     f = J.TT;\n     \\<And>p0 p1.\n        mkCone p0 p1 \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     \\<And>f. J.arr f = (f \\<noteq> J.Null); J.cod = J.Cod;\n     \\<And>f a.\n        \\<lbrakk>C.arr f; C.dom f = a\\<rbrakk>\n        \\<Longrightarrow> f \\<cdot> a = f;\n     f0 \\<cdot> p0 = f1 \\<cdot> p1\\<rbrakk>\n    \\<Longrightarrow> (f1 \\<cdot> p1) \\<cdot> C.dom p0 = f1 \\<cdot> p1\n 2. \\<lbrakk>C.seq f1 p1;\n     \\<And>p0 p1.\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0\n                               else C.null \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     f = J.AT;\n     \\<And>p0 p1.\n        mkCone p0 p1 \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     \\<And>f. J.arr f = (f \\<noteq> J.Null); J.cod = J.Cod;\n     \\<And>f a.\n        \\<lbrakk>C.arr f; C.dom f = a\\<rbrakk>\n        \\<Longrightarrow> f \\<cdot> a = f;\n     f0 \\<cdot> p0 = f1 \\<cdot> p1\\<rbrakk>\n    \\<Longrightarrow> (f1 \\<cdot> p1) \\<cdot> C.dom p0 = f1 \\<cdot> p1\n 3. \\<lbrakk>C.seq f1 p1;\n     \\<And>p0 p1.\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0\n                               else C.null \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     f = J.BT;\n     \\<And>p0 p1.\n        mkCone p0 p1 \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     \\<And>f. J.arr f = (f \\<noteq> J.Null); J.cod = J.Cod;\n     \\<And>f a.\n        \\<lbrakk>C.arr f; C.dom f = a\\<rbrakk>\n        \\<Longrightarrow> f \\<cdot> a = f;\n     f0 \\<cdot> p0 = f1 \\<cdot> p1\\<rbrakk>\n    \\<Longrightarrow> (f1 \\<cdot> p1) \\<cdot> C.dom p0 = f1 \\<cdot> p1", "by (metis C.dom_comp)+"], ["proof (state)\nthis:\n  mkCone p0 p1 (J.cod f) \\<cdot> E.map f = mkCone p0 p1 f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local.cone (C.dom p0) (mkCone p0 p1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma is_rendered_commutative_by_cone:\n    assumes \"cone a \\<chi>\"\n    shows \"is_rendered_commutative_by (\\<chi> J.AA) (\\<chi> J.BB)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_rendered_commutative_by (\\<chi> J.AA) (\\<chi> J.BB)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_rendered_commutative_by (\\<chi> J.AA) (\\<chi> J.BB)", "interpret \\<chi>: cone J.comp C map a \\<chi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.cone a \\<chi>", "using assms"], ["proof (prove)\nusing this:\n  local.cone a \\<chi>\n\ngoal (1 subgoal):\n 1. local.cone a \\<chi>", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. is_rendered_commutative_by (\\<chi> J.AA) (\\<chi> J.BB)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_rendered_commutative_by (\\<chi> J.AA) (\\<chi> J.BB)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. C.seq f0 (\\<chi> J.AA)\n 2. f0 \\<cdot> \\<chi> J.AA = f1 \\<cdot> \\<chi> J.BB", "show \"C.seq f0 (\\<chi> J.AA)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C.seq f0 (\\<chi> J.AA)", "by (metis C.seqI J.cod_char J.seq_char \\<chi>.preserves_cod \\<chi>.preserves_reflects_arr\n              J.seqE is_cospan J.Cod.simps(1) map.simps(1))"], ["proof (state)\nthis:\n  C.seq f0 (\\<chi> J.AA)\n\ngoal (1 subgoal):\n 1. f0 \\<cdot> \\<chi> J.AA = f1 \\<cdot> \\<chi> J.BB", "show \"f0 \\<cdot> \\<chi> J.AA = f1 \\<cdot> \\<chi> J.BB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f0 \\<cdot> \\<chi> J.AA = f1 \\<cdot> \\<chi> J.BB", "by (metis J.cod_char J.dom_char \\<chi>.A.map_simp \\<chi>.naturality\n              J.Cod.simps(4-5) J.Dom.simps(4-5) J.comp.simps(2,5) J.seq_char map.simps(4-5))"], ["proof (state)\nthis:\n  f0 \\<cdot> \\<chi> J.AA = f1 \\<cdot> \\<chi> J.BB\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_rendered_commutative_by (\\<chi> J.AA) (\\<chi> J.BB)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mkCone_cone:\n    assumes \"cone a \\<chi>\"\n    shows \"mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>", "interpret \\<chi>: cone J.comp C map a \\<chi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.cone a \\<chi>", "using assms"], ["proof (prove)\nusing this:\n  local.cone a \\<chi>\n\ngoal (1 subgoal):\n 1. local.cone a \\<chi>", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>", "have 1: \"is_rendered_commutative_by (\\<chi> J.AA) (\\<chi> J.BB)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_rendered_commutative_by (\\<chi> J.AA) (\\<chi> J.BB)", "using assms is_rendered_commutative_by_cone"], ["proof (prove)\nusing this:\n  local.cone a \\<chi>\n  local.cone ?a ?\\<chi> \\<Longrightarrow>\n  is_rendered_commutative_by (?\\<chi> J.AA) (?\\<chi> J.BB)\n\ngoal (1 subgoal):\n 1. is_rendered_commutative_by (\\<chi> J.AA) (\\<chi> J.BB)", "by blast"], ["proof (state)\nthis:\n  is_rendered_commutative_by (\\<chi> J.AA) (\\<chi> J.BB)\n\ngoal (1 subgoal):\n 1. mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>", "interpret mkCone_\\<chi>: cone J.comp C map \\<open>C.dom (\\<chi> J.AA)\\<close> \\<open>mkCone (\\<chi> J.AA) (\\<chi> J.BB)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.cone (C.dom (\\<chi> J.AA)) (mkCone (\\<chi> J.AA) (\\<chi> J.BB))", "using assms cone_mkCone 1"], ["proof (prove)\nusing this:\n  local.cone a \\<chi>\n  is_rendered_commutative_by ?p0.0 ?p1.0 \\<Longrightarrow>\n  local.cone (C.dom ?p0.0) (mkCone ?p0.0 ?p1.0)\n  is_rendered_commutative_by (\\<chi> J.AA) (\\<chi> J.BB)\n\ngoal (1 subgoal):\n 1. local.cone (C.dom (\\<chi> J.AA)) (mkCone (\\<chi> J.AA) (\\<chi> J.BB))", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>", "have \"\\<And>j. j = J.AA \\<Longrightarrow> mkCone (\\<chi> J.AA) (\\<chi> J.BB) j = \\<chi> j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j = J.AA \\<Longrightarrow>\n       mkCone (\\<chi> J.AA) (\\<chi> J.BB) j = \\<chi> j", "using mkCone_def \\<chi>.is_extensional"], ["proof (prove)\nusing this:\n  mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  \\<not> J.arr ?f \\<Longrightarrow> \\<chi> ?f = C.null\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j = J.AA \\<Longrightarrow>\n       mkCone (\\<chi> J.AA) (\\<chi> J.BB) j = \\<chi> j", "by simp"], ["proof (state)\nthis:\n  ?j4 = J.AA \\<Longrightarrow>\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) ?j4 = \\<chi> ?j4\n\ngoal (1 subgoal):\n 1. mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>", "moreover"], ["proof (state)\nthis:\n  ?j4 = J.AA \\<Longrightarrow>\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) ?j4 = \\<chi> ?j4\n\ngoal (1 subgoal):\n 1. mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>", "have \"\\<And>j. j = J.BB \\<Longrightarrow> mkCone (\\<chi> J.AA) (\\<chi> J.BB) j = \\<chi> j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j = J.BB \\<Longrightarrow>\n       mkCone (\\<chi> J.AA) (\\<chi> J.BB) j = \\<chi> j", "using mkCone_def \\<chi>.is_extensional"], ["proof (prove)\nusing this:\n  mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  \\<not> J.arr ?f \\<Longrightarrow> \\<chi> ?f = C.null\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j = J.BB \\<Longrightarrow>\n       mkCone (\\<chi> J.AA) (\\<chi> J.BB) j = \\<chi> j", "by simp"], ["proof (state)\nthis:\n  ?j4 = J.BB \\<Longrightarrow>\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) ?j4 = \\<chi> ?j4\n\ngoal (1 subgoal):\n 1. mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>", "moreover"], ["proof (state)\nthis:\n  ?j4 = J.BB \\<Longrightarrow>\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) ?j4 = \\<chi> ?j4\n\ngoal (1 subgoal):\n 1. mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>", "have \"\\<And>j. j = J.TT \\<Longrightarrow> mkCone (\\<chi> J.AA) (\\<chi> J.BB) j = \\<chi> j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j = J.TT \\<Longrightarrow>\n       mkCone (\\<chi> J.AA) (\\<chi> J.BB) j = \\<chi> j", "using 1 mkCone_def \\<chi>.is_extensional \\<chi>.A.map_simp \\<chi>.preserves_comp_1\n                cospan_shape.seq_char \\<chi>.is_natural_2"], ["proof (prove)\nusing this:\n  is_rendered_commutative_by (\\<chi> J.AA) (\\<chi> J.BB)\n  mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  \\<not> J.arr ?f \\<Longrightarrow> \\<chi> ?f = C.null\n  J.arr ?f \\<Longrightarrow> \\<chi>.A.map ?f = a\n  J.seq ?f' ?f \\<Longrightarrow>\n  \\<chi> (?f' \\<cdot>\\<^sub>J ?f) = local.map ?f' \\<cdot> \\<chi> ?f\n  J.seq ?g ?f =\n  (?f = J.AA \\<and> (?g = J.AA \\<or> ?g = J.AT) \\<or>\n   ?f = J.BB \\<and> (?g = J.BB \\<or> ?g = J.BT) \\<or>\n   ?f = J.AT \\<and> ?g = J.TT \\<or>\n   ?f = J.BT \\<and> ?g = J.TT \\<or> ?f = J.TT \\<and> ?g = J.TT)\n  J.arr ?f \\<Longrightarrow>\n  \\<chi> (J.cod ?f) \\<cdot> \\<chi>.A.map ?f = \\<chi> ?f\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j = J.TT \\<Longrightarrow>\n       mkCone (\\<chi> J.AA) (\\<chi> J.BB) j = \\<chi> j", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_rendered_commutative_by (\\<chi> J.AA) (\\<chi> J.BB);\n     \\<And>p0 p1.\n        mkCone p0 p1 \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f0 \\<cdot> p0\n                     else if j = J.BT then f1 \\<cdot> p1\n                          else if j = J.TT then f0 \\<cdot> p0 else C.null;\n     \\<And>f. \\<not> J.arr f \\<Longrightarrow> \\<chi> f = C.null;\n     \\<And>f' f.\n        f = J.AA \\<and> (f' = J.AA \\<or> f' = J.AT) \\<or>\n        f = J.BB \\<and> (f' = J.BB \\<or> f' = J.BT) \\<or>\n        f = J.AT \\<and> f' = J.TT \\<or>\n        f = J.BT \\<and> f' = J.TT \\<or>\n        f = J.TT \\<and> f' = J.TT \\<Longrightarrow>\n        \\<chi> (f' \\<cdot>\\<^sub>J f) = local.map f' \\<cdot> \\<chi> f;\n     \\<And>g f.\n        J.seq g f =\n        (f = J.AA \\<and> (g = J.AA \\<or> g = J.AT) \\<or>\n         f = J.BB \\<and> (g = J.BB \\<or> g = J.BT) \\<or>\n         f = J.AT \\<and> g = J.TT \\<or>\n         f = J.BT \\<and> g = J.TT \\<or> f = J.TT \\<and> g = J.TT);\n     \\<And>f.\n        J.arr f \\<Longrightarrow>\n        \\<chi> (J.cod f) \\<cdot> a = \\<chi> f\\<rbrakk>\n    \\<Longrightarrow> f1 \\<cdot> \\<chi> J.BB = \\<chi> J.TT", "by (metis J.seqE J.comp.simps(5) map.simps(5))"], ["proof (state)\nthis:\n  ?j4 = J.TT \\<Longrightarrow>\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) ?j4 = \\<chi> ?j4\n\ngoal (1 subgoal):\n 1. mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>", "ultimately"], ["proof (chain)\npicking this:\n  ?j4 = J.AA \\<Longrightarrow>\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) ?j4 = \\<chi> ?j4\n  ?j4 = J.BB \\<Longrightarrow>\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) ?j4 = \\<chi> ?j4\n  ?j4 = J.TT \\<Longrightarrow>\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) ?j4 = \\<chi> ?j4", "have \"\\<And>j. J.ide j \\<Longrightarrow> mkCone (\\<chi> J.AA) (\\<chi> J.BB) j = \\<chi> j\""], ["proof (prove)\nusing this:\n  ?j4 = J.AA \\<Longrightarrow>\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) ?j4 = \\<chi> ?j4\n  ?j4 = J.BB \\<Longrightarrow>\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) ?j4 = \\<chi> ?j4\n  ?j4 = J.TT \\<Longrightarrow>\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) ?j4 = \\<chi> ?j4\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       J.ide j \\<Longrightarrow>\n       mkCone (\\<chi> J.AA) (\\<chi> J.BB) j = \\<chi> j", "using J.ide_char"], ["proof (prove)\nusing this:\n  ?j4 = J.AA \\<Longrightarrow>\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) ?j4 = \\<chi> ?j4\n  ?j4 = J.BB \\<Longrightarrow>\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) ?j4 = \\<chi> ?j4\n  ?j4 = J.TT \\<Longrightarrow>\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) ?j4 = \\<chi> ?j4\n  J.ide ?f = (?f = J.AA \\<or> ?f = J.BB \\<or> ?f = J.TT)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       J.ide j \\<Longrightarrow>\n       mkCone (\\<chi> J.AA) (\\<chi> J.BB) j = \\<chi> j", "by auto"], ["proof (state)\nthis:\n  J.ide ?j4 \\<Longrightarrow>\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) ?j4 = \\<chi> ?j4\n\ngoal (1 subgoal):\n 1. mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>", "thus \"mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>\""], ["proof (prove)\nusing this:\n  J.ide ?j4 \\<Longrightarrow>\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) ?j4 = \\<chi> ?j4\n\ngoal (1 subgoal):\n 1. mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>", "using mkCone_def NaturalTransformation.eqI [of J.comp C]\n                \\<chi>.natural_transformation_axioms mkCone_\\<chi>.natural_transformation_axioms\n                J.ide_char"], ["proof (prove)\nusing this:\n  J.ide ?j4 \\<Longrightarrow>\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) ?j4 = \\<chi> ?j4\n  mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  \\<lbrakk>natural_transformation (\\<cdot>\\<^sub>J) (\\<cdot>) ?F ?G\n            ?\\<sigma>;\n   natural_transformation (\\<cdot>\\<^sub>J) (\\<cdot>) ?F ?G ?\\<sigma>';\n   \\<And>a. J.ide a \\<Longrightarrow> ?\\<sigma> a = ?\\<sigma>' a\\<rbrakk>\n  \\<Longrightarrow> ?\\<sigma> = ?\\<sigma>'\n  natural_transformation (\\<cdot>\\<^sub>J) (\\<cdot>) \\<chi>.A.map local.map\n   \\<chi>\n  natural_transformation (\\<cdot>\\<^sub>J) (\\<cdot>) mkCone_\\<chi>.A.map\n   local.map (mkCone (\\<chi> J.AA) (\\<chi> J.BB))\n  J.ide ?f = (?f = J.AA \\<or> ?f = J.BB \\<or> ?f = J.TT)\n\ngoal (1 subgoal):\n 1. mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>", "by simp"], ["proof (state)\nthis:\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mkCone (\\<chi> J.AA) (\\<chi> J.BB) = \\<chi>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "locale pullback_cone =\n    J: cospan_shape +\n    C: category C +\n    D: cospan_diagram C f0 f1 +\n    limit_cone J.comp C D.map \\<open>C.dom p0\\<close> \\<open>D.mkCone p0 p1\\<close>\n  for C :: \"'c comp\"      (infixr \"\\<cdot>\" 55)\n  and f0 :: 'c\n  and f1 :: 'c\n  and p0 :: 'c\n  and p1 :: 'c\n  begin"], ["", "(* TODO: Equalizer should be simplifiable in the same way. *)"], ["", "lemma renders_commutative:\n    shows \"D.is_rendered_commutative_by p0 p1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D.is_rendered_commutative_by p0 p1", "using D.mkCone_def D.cospan_diagram_axioms cone_axioms\n            cospan_diagram.is_rendered_commutative_by_cone"], ["proof (prove)\nusing this:\n  D.mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  cospan_diagram (\\<cdot>) f0 f1\n  D.cone (C.dom p0) (D.mkCone p0 p1)\n  \\<lbrakk>cospan_diagram ?C ?f0.0 ?f1.0;\n   Limit.cone (\\<cdot>\\<^sub>J) ?C (cospan_diagram.map ?C ?f0.0 ?f1.0) ?a\n    ?\\<chi>\\<rbrakk>\n  \\<Longrightarrow> partial_magma.arr ?C (?C ?f0.0 (?\\<chi> J.AA)) \\<and>\n                    ?C ?f0.0 (?\\<chi> J.AA) = ?C ?f1.0 (?\\<chi> J.BB)\n\ngoal (1 subgoal):\n 1. D.is_rendered_commutative_by p0 p1", "by fastforce"], ["", "lemma is_universal':\n    assumes \"D.is_rendered_commutative_by p0' p1'\"\n    shows \"\\<exists>!h. \\<guillemotleft>h : C.dom p0' \\<rightarrow> C.dom p0\\<guillemotright> \\<and> p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!h.\n       \\<guillemotleft>h : C.dom\n                            p0' \\<rightarrow> C.dom\n         p0\\<guillemotright> \\<and>\n       p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!h.\n       \\<guillemotleft>h : C.dom\n                            p0' \\<rightarrow> C.dom\n         p0\\<guillemotright> \\<and>\n       p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'", "have \"D.cone (C.dom p0') (D.mkCone p0' p1')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D.cone (C.dom p0') (D.mkCone p0' p1')", "using assms D.cone_mkCone"], ["proof (prove)\nusing this:\n  D.is_rendered_commutative_by p0' p1'\n  D.is_rendered_commutative_by ?p0.0 ?p1.0 \\<Longrightarrow>\n  D.cone (C.dom ?p0.0) (D.mkCone ?p0.0 ?p1.0)\n\ngoal (1 subgoal):\n 1. D.cone (C.dom p0') (D.mkCone p0' p1')", "by blast"], ["proof (state)\nthis:\n  D.cone (C.dom p0') (D.mkCone p0' p1')\n\ngoal (1 subgoal):\n 1. \\<exists>!h.\n       \\<guillemotleft>h : C.dom\n                            p0' \\<rightarrow> C.dom\n         p0\\<guillemotright> \\<and>\n       p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'", "hence 1: \"\\<exists>!h. \\<guillemotleft>h : C.dom p0' \\<rightarrow> C.dom p0\\<guillemotright> \\<and>\n                     D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1'\""], ["proof (prove)\nusing this:\n  D.cone (C.dom p0') (D.mkCone p0' p1')\n\ngoal (1 subgoal):\n 1. \\<exists>!h.\n       \\<guillemotleft>h : C.dom\n                            p0' \\<rightarrow> C.dom\n         p0\\<guillemotright> \\<and>\n       D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1'", "using is_universal"], ["proof (prove)\nusing this:\n  D.cone (C.dom p0') (D.mkCone p0' p1')\n  D.cone ?a' ?\\<chi>' \\<Longrightarrow>\n  \\<exists>!f.\n     \\<guillemotleft>f : ?a' \\<rightarrow> C.dom p0\\<guillemotright> \\<and>\n     D.cones_map f (D.mkCone p0 p1) = ?\\<chi>'\n\ngoal (1 subgoal):\n 1. \\<exists>!h.\n       \\<guillemotleft>h : C.dom\n                            p0' \\<rightarrow> C.dom\n         p0\\<guillemotright> \\<and>\n       D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1'", "by simp"], ["proof (state)\nthis:\n  \\<exists>!h.\n     \\<guillemotleft>h : C.dom\n                          p0' \\<rightarrow> C.dom p0\\<guillemotright> \\<and>\n     D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1'\n\ngoal (1 subgoal):\n 1. \\<exists>!h.\n       \\<guillemotleft>h : C.dom\n                            p0' \\<rightarrow> C.dom\n         p0\\<guillemotright> \\<and>\n       p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'", "have 2: \"\\<And>h. \\<guillemotleft>h : C.dom p0' \\<rightarrow> C.dom p0\\<guillemotright> \\<Longrightarrow>\n                    D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1' \\<longleftrightarrow>\n                    p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>h.\n       \\<guillemotleft>h : C.dom\n                            p0' \\<rightarrow> C.dom\n         p0\\<guillemotright> \\<Longrightarrow>\n       (D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1') =\n       (p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>h.\n       \\<guillemotleft>h : C.dom\n                            p0' \\<rightarrow> C.dom\n         p0\\<guillemotright> \\<Longrightarrow>\n       (D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1') =\n       (p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1')", "fix h"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>h.\n       \\<guillemotleft>h : C.dom\n                            p0' \\<rightarrow> C.dom\n         p0\\<guillemotright> \\<Longrightarrow>\n       (D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1') =\n       (p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1')", "assume h: \"\\<guillemotleft>h : C.dom p0' \\<rightarrow> C.dom p0\\<guillemotright>\""], ["proof (state)\nthis:\n  \\<guillemotleft>h : C.dom p0' \\<rightarrow> C.dom p0\\<guillemotright>\n\ngoal (1 subgoal):\n 1. \\<And>h.\n       \\<guillemotleft>h : C.dom\n                            p0' \\<rightarrow> C.dom\n         p0\\<guillemotright> \\<Longrightarrow>\n       (D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1') =\n       (p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1')", "show \"D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1' \\<longleftrightarrow>\n              p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1') =\n    (p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1')", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1' \\<Longrightarrow>\n    p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'\n 2. p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1' \\<Longrightarrow>\n    D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1'", "assume 3: \"D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1'\""], ["proof (state)\nthis:\n  D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1'\n\ngoal (2 subgoals):\n 1. D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1' \\<Longrightarrow>\n    p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'\n 2. p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1' \\<Longrightarrow>\n    D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1'", "show \"p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. p0 \\<cdot> h = p0'\n 2. p1 \\<cdot> h = p1'", "show \"p0 \\<cdot> h = p0'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p0 \\<cdot> h = p0'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p0 \\<cdot> h = p0'", "have \"p0' = D.mkCone p0' p1' J.AA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p0' = D.mkCone p0' p1' J.AA", "using D.mkCone_def J.arr_char"], ["proof (prove)\nusing this:\n  D.mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  J.arr ?f = (?f \\<noteq> J.Null)\n\ngoal (1 subgoal):\n 1. p0' = D.mkCone p0' p1' J.AA", "by simp"], ["proof (state)\nthis:\n  p0' = D.mkCone p0' p1' J.AA\n\ngoal (1 subgoal):\n 1. p0 \\<cdot> h = p0'", "also"], ["proof (state)\nthis:\n  p0' = D.mkCone p0' p1' J.AA\n\ngoal (1 subgoal):\n 1. p0 \\<cdot> h = p0'", "have \"... = D.cones_map h (D.mkCone p0 p1) J.AA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D.mkCone p0' p1' J.AA = D.cones_map h (D.mkCone p0 p1) J.AA", "using 3"], ["proof (prove)\nusing this:\n  D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1'\n\ngoal (1 subgoal):\n 1. D.mkCone p0' p1' J.AA = D.cones_map h (D.mkCone p0 p1) J.AA", "by simp"], ["proof (state)\nthis:\n  D.mkCone p0' p1' J.AA = D.cones_map h (D.mkCone p0 p1) J.AA\n\ngoal (1 subgoal):\n 1. p0 \\<cdot> h = p0'", "also"], ["proof (state)\nthis:\n  D.mkCone p0' p1' J.AA = D.cones_map h (D.mkCone p0 p1) J.AA\n\ngoal (1 subgoal):\n 1. p0 \\<cdot> h = p0'", "have \"... = p0 \\<cdot> h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D.cones_map h (D.mkCone p0 p1) J.AA = p0 \\<cdot> h", "using h D.mkCone_def J.arr_char cone_\\<chi>"], ["proof (prove)\nusing this:\n  \\<guillemotleft>h : C.dom p0' \\<rightarrow> C.dom p0\\<guillemotright>\n  D.mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  J.arr ?f = (?f \\<noteq> J.Null)\n  D.mkCone p0 p1 \\<in> D.cones (C.dom p0)\n\ngoal (1 subgoal):\n 1. D.cones_map h (D.mkCone p0 p1) J.AA = p0 \\<cdot> h", "by auto"], ["proof (state)\nthis:\n  D.cones_map h (D.mkCone p0 p1) J.AA = p0 \\<cdot> h\n\ngoal (1 subgoal):\n 1. p0 \\<cdot> h = p0'", "finally"], ["proof (chain)\npicking this:\n  p0' = p0 \\<cdot> h", "show ?thesis"], ["proof (prove)\nusing this:\n  p0' = p0 \\<cdot> h\n\ngoal (1 subgoal):\n 1. p0 \\<cdot> h = p0'", "by auto"], ["proof (state)\nthis:\n  p0 \\<cdot> h = p0'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p0 \\<cdot> h = p0'\n\ngoal (1 subgoal):\n 1. p1 \\<cdot> h = p1'", "show \"p1 \\<cdot> h = p1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p1 \\<cdot> h = p1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p1 \\<cdot> h = p1'", "have \"p1' = D.mkCone p0' p1' J.BB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p1' = D.mkCone p0' p1' J.BB", "using D.mkCone_def J.arr_char"], ["proof (prove)\nusing this:\n  D.mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  J.arr ?f = (?f \\<noteq> J.Null)\n\ngoal (1 subgoal):\n 1. p1' = D.mkCone p0' p1' J.BB", "by simp"], ["proof (state)\nthis:\n  p1' = D.mkCone p0' p1' J.BB\n\ngoal (1 subgoal):\n 1. p1 \\<cdot> h = p1'", "also"], ["proof (state)\nthis:\n  p1' = D.mkCone p0' p1' J.BB\n\ngoal (1 subgoal):\n 1. p1 \\<cdot> h = p1'", "have \"... = D.cones_map h (D.mkCone p0 p1) J.BB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D.mkCone p0' p1' J.BB = D.cones_map h (D.mkCone p0 p1) J.BB", "using 3"], ["proof (prove)\nusing this:\n  D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1'\n\ngoal (1 subgoal):\n 1. D.mkCone p0' p1' J.BB = D.cones_map h (D.mkCone p0 p1) J.BB", "by simp"], ["proof (state)\nthis:\n  D.mkCone p0' p1' J.BB = D.cones_map h (D.mkCone p0 p1) J.BB\n\ngoal (1 subgoal):\n 1. p1 \\<cdot> h = p1'", "also"], ["proof (state)\nthis:\n  D.mkCone p0' p1' J.BB = D.cones_map h (D.mkCone p0 p1) J.BB\n\ngoal (1 subgoal):\n 1. p1 \\<cdot> h = p1'", "have \"... = p1 \\<cdot> h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D.cones_map h (D.mkCone p0 p1) J.BB = p1 \\<cdot> h", "using h D.mkCone_def J.arr_char cone_\\<chi>"], ["proof (prove)\nusing this:\n  \\<guillemotleft>h : C.dom p0' \\<rightarrow> C.dom p0\\<guillemotright>\n  D.mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  J.arr ?f = (?f \\<noteq> J.Null)\n  D.mkCone p0 p1 \\<in> D.cones (C.dom p0)\n\ngoal (1 subgoal):\n 1. D.cones_map h (D.mkCone p0 p1) J.BB = p1 \\<cdot> h", "by auto"], ["proof (state)\nthis:\n  D.cones_map h (D.mkCone p0 p1) J.BB = p1 \\<cdot> h\n\ngoal (1 subgoal):\n 1. p1 \\<cdot> h = p1'", "finally"], ["proof (chain)\npicking this:\n  p1' = p1 \\<cdot> h", "show ?thesis"], ["proof (prove)\nusing this:\n  p1' = p1 \\<cdot> h\n\ngoal (1 subgoal):\n 1. p1 \\<cdot> h = p1'", "by auto"], ["proof (state)\nthis:\n  p1 \\<cdot> h = p1'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p1 \\<cdot> h = p1'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'\n\ngoal (1 subgoal):\n 1. p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1' \\<Longrightarrow>\n    D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1' \\<Longrightarrow>\n    D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1'", "assume 4: \"p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'\""], ["proof (state)\nthis:\n  p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'\n\ngoal (1 subgoal):\n 1. p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1' \\<Longrightarrow>\n    D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1'", "show \"D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1'", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. D.cones_map h (D.mkCone p0 p1) x = D.mkCone p0' p1' x", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. D.cones_map h (D.mkCone p0 p1) x = D.mkCone p0' p1' x", "have \"\\<not> J.arr j \\<Longrightarrow> D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> J.arr j \\<Longrightarrow>\n    D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j", "using h cone_axioms D.mkCone_def J.arr_char"], ["proof (prove)\nusing this:\n  \\<guillemotleft>h : C.dom p0' \\<rightarrow> C.dom p0\\<guillemotright>\n  D.cone (C.dom p0) (D.mkCone p0 p1)\n  D.mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  J.arr ?f = (?f \\<noteq> J.Null)\n\ngoal (1 subgoal):\n 1. \\<not> J.arr j \\<Longrightarrow>\n    D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j", "by auto"], ["proof (state)\nthis:\n  \\<not> J.arr j \\<Longrightarrow>\n  D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j\n\ngoal (1 subgoal):\n 1. \\<And>x. D.cones_map h (D.mkCone p0 p1) x = D.mkCone p0' p1' x", "moreover"], ["proof (state)\nthis:\n  \\<not> J.arr j \\<Longrightarrow>\n  D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j\n\ngoal (1 subgoal):\n 1. \\<And>x. D.cones_map h (D.mkCone p0 p1) x = D.mkCone p0' p1' x", "have \"J.arr j \\<Longrightarrow>\n                           D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. J.arr j \\<Longrightarrow>\n    D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j", "using assms h 4 cone_\\<chi> D.mkCone_def J.arr_char renders_commutative\n                    C.comp_assoc"], ["proof (prove)\nusing this:\n  D.is_rendered_commutative_by p0' p1'\n  \\<guillemotleft>h : C.dom p0' \\<rightarrow> C.dom p0\\<guillemotright>\n  p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'\n  D.mkCone p0 p1 \\<in> D.cones (C.dom p0)\n  D.mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  J.arr ?f = (?f \\<noteq> J.Null)\n  D.is_rendered_commutative_by p0 p1\n  (?h \\<cdot> ?g) \\<cdot> ?f = ?h \\<cdot> ?g \\<cdot> ?f\n\ngoal (1 subgoal):\n 1. J.arr j \\<Longrightarrow>\n    D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j", "by fastforce"], ["proof (state)\nthis:\n  J.arr j \\<Longrightarrow>\n  D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j\n\ngoal (1 subgoal):\n 1. \\<And>x. D.cones_map h (D.mkCone p0 p1) x = D.mkCone p0' p1' x", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> J.arr j \\<Longrightarrow>\n  D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j\n  J.arr j \\<Longrightarrow>\n  D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j", "show \"D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j\""], ["proof (prove)\nusing this:\n  \\<not> J.arr j \\<Longrightarrow>\n  D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j\n  J.arr j \\<Longrightarrow>\n  D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j\n\ngoal (1 subgoal):\n 1. D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j", "using J.arr_char J.Dom.cases"], ["proof (prove)\nusing this:\n  \\<not> J.arr j \\<Longrightarrow>\n  D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j\n  J.arr j \\<Longrightarrow>\n  D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j\n  J.arr ?f = (?f \\<noteq> J.Null)\n  \\<lbrakk>?x = J.AA \\<Longrightarrow> ?P; ?x = J.BB \\<Longrightarrow> ?P;\n   ?x = J.TT \\<Longrightarrow> ?P; ?x = J.AT \\<Longrightarrow> ?P;\n   ?x = J.BT \\<Longrightarrow> ?P; ?x = J.Null \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j", "by blast"], ["proof (state)\nthis:\n  D.cones_map h (D.mkCone p0 p1) j = D.mkCone p0' p1' j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1') =\n  (p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<guillemotleft>?h4 : C.dom\n                         p0' \\<rightarrow> C.dom\n      p0\\<guillemotright> \\<Longrightarrow>\n  (D.cones_map ?h4 (D.mkCone p0 p1) = D.mkCone p0' p1') =\n  (p0 \\<cdot> ?h4 = p0' \\<and> p1 \\<cdot> ?h4 = p1')\n\ngoal (1 subgoal):\n 1. \\<exists>!h.\n       \\<guillemotleft>h : C.dom\n                            p0' \\<rightarrow> C.dom\n         p0\\<guillemotright> \\<and>\n       p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<guillemotleft>?h4 : C.dom\n                         p0' \\<rightarrow> C.dom\n      p0\\<guillemotright> \\<Longrightarrow>\n  (D.cones_map ?h4 (D.mkCone p0 p1) = D.mkCone p0' p1') =\n  (p0 \\<cdot> ?h4 = p0' \\<and> p1 \\<cdot> ?h4 = p1')\n\ngoal (1 subgoal):\n 1. \\<exists>!h.\n       \\<guillemotleft>h : C.dom\n                            p0' \\<rightarrow> C.dom\n         p0\\<guillemotright> \\<and>\n       p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'", "using 1"], ["proof (prove)\nusing this:\n  \\<guillemotleft>?h4 : C.dom\n                         p0' \\<rightarrow> C.dom\n      p0\\<guillemotright> \\<Longrightarrow>\n  (D.cones_map ?h4 (D.mkCone p0 p1) = D.mkCone p0' p1') =\n  (p0 \\<cdot> ?h4 = p0' \\<and> p1 \\<cdot> ?h4 = p1')\n  \\<exists>!h.\n     \\<guillemotleft>h : C.dom\n                          p0' \\<rightarrow> C.dom p0\\<guillemotright> \\<and>\n     D.cones_map h (D.mkCone p0 p1) = D.mkCone p0' p1'\n\ngoal (1 subgoal):\n 1. \\<exists>!h.\n       \\<guillemotleft>h : C.dom\n                            p0' \\<rightarrow> C.dom\n         p0\\<guillemotright> \\<and>\n       p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'", "by blast"], ["proof (state)\nthis:\n  \\<exists>!h.\n     \\<guillemotleft>h : C.dom\n                          p0' \\<rightarrow> C.dom p0\\<guillemotright> \\<and>\n     p0 \\<cdot> h = p0' \\<and> p1 \\<cdot> h = p1'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma induced_arrowI':\n    assumes \"D.is_rendered_commutative_by p0' p1'\"\n    shows \"\\<guillemotleft>induced_arrow (C.dom p0') (D.mkCone p0' p1') : C.dom p0' \\<rightarrow> C.dom p0\\<guillemotright>\"\n    and \"p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0'\"\n    and \"p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft>induced_arrow (C.dom p0')\n                     (D.mkCone p0'\n                       p1') : C.dom\n                               p0' \\<rightarrow> C.dom\n            p0\\<guillemotright> &&&\n    p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0' &&&\n    p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<guillemotleft>induced_arrow (C.dom p0')\n                     (D.mkCone p0'\n                       p1') : C.dom\n                               p0' \\<rightarrow> C.dom p0\\<guillemotright>\n 2. p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0'\n 3. p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'", "interpret A': constant_functor J.comp C \\<open>C.dom p0'\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. constant_functor (\\<cdot>\\<^sub>J) (\\<cdot>) (C.dom p0')", "using assms"], ["proof (prove)\nusing this:\n  D.is_rendered_commutative_by p0' p1'\n\ngoal (1 subgoal):\n 1. constant_functor (\\<cdot>\\<^sub>J) (\\<cdot>) (C.dom p0')", "by (unfold_locales, auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<guillemotleft>induced_arrow (C.dom p0')\n                     (D.mkCone p0'\n                       p1') : C.dom\n                               p0' \\<rightarrow> C.dom p0\\<guillemotright>\n 2. p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0'\n 3. p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'", "have cone: \"D.cone (C.dom p0') (D.mkCone p0' p1')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D.cone (C.dom p0') (D.mkCone p0' p1')", "using assms D.cone_mkCone [of p0' p1']"], ["proof (prove)\nusing this:\n  D.is_rendered_commutative_by p0' p1'\n  D.is_rendered_commutative_by p0' p1' \\<Longrightarrow>\n  D.cone (C.dom p0') (D.mkCone p0' p1')\n\ngoal (1 subgoal):\n 1. D.cone (C.dom p0') (D.mkCone p0' p1')", "by blast"], ["proof (state)\nthis:\n  D.cone (C.dom p0') (D.mkCone p0' p1')\n\ngoal (3 subgoals):\n 1. \\<guillemotleft>induced_arrow (C.dom p0')\n                     (D.mkCone p0'\n                       p1') : C.dom\n                               p0' \\<rightarrow> C.dom p0\\<guillemotright>\n 2. p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0'\n 3. p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'", "show 1: \"p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0'", "have \"p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') =\n                D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n                            (D.mkCone p0 p1) J.AA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') =\n    D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) J.AA", "using cone induced_arrowI(1) D.mkCone_def J.arr_char cone_\\<chi>"], ["proof (prove)\nusing this:\n  D.cone (C.dom p0') (D.mkCone p0' p1')\n  ?\\<chi>' \\<in> D.cones ?a' \\<Longrightarrow>\n  \\<guillemotleft>induced_arrow ?a'\n                   ?\\<chi>' : ?a' \\<rightarrow> C.dom p0\\<guillemotright>\n  D.mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  J.arr ?f = (?f \\<noteq> J.Null)\n  D.mkCone p0 p1 \\<in> D.cones (C.dom p0)\n\ngoal (1 subgoal):\n 1. p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') =\n    D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) J.AA", "by force"], ["proof (state)\nthis:\n  p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') =\n  D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n   (D.mkCone p0 p1) J.AA\n\ngoal (1 subgoal):\n 1. p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0'", "also"], ["proof (state)\nthis:\n  p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') =\n  D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n   (D.mkCone p0 p1) J.AA\n\ngoal (1 subgoal):\n 1. p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0'", "have \"... = p0'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) J.AA =\n    p0'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) J.AA =\n    p0'", "have \"D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n                            (D.mkCone p0 p1) =\n                D.mkCone p0' p1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) =\n    D.mkCone p0' p1'", "using cone induced_arrowI"], ["proof (prove)\nusing this:\n  D.cone (C.dom p0') (D.mkCone p0' p1')\n  ?\\<chi>' \\<in> D.cones ?a' \\<Longrightarrow>\n  \\<guillemotleft>induced_arrow ?a'\n                   ?\\<chi>' : ?a' \\<rightarrow> C.dom p0\\<guillemotright>\n  ?\\<chi>' \\<in> D.cones ?a' \\<Longrightarrow>\n  D.cones_map (induced_arrow ?a' ?\\<chi>') (D.mkCone p0 p1) = ?\\<chi>'\n\ngoal (1 subgoal):\n 1. D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) =\n    D.mkCone p0' p1'", "by blast"], ["proof (state)\nthis:\n  D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n   (D.mkCone p0 p1) =\n  D.mkCone p0' p1'\n\ngoal (1 subgoal):\n 1. D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) J.AA =\n    p0'", "thus ?thesis"], ["proof (prove)\nusing this:\n  D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n   (D.mkCone p0 p1) =\n  D.mkCone p0' p1'\n\ngoal (1 subgoal):\n 1. D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) J.AA =\n    p0'", "using J.arr_char D.mkCone_def"], ["proof (prove)\nusing this:\n  D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n   (D.mkCone p0 p1) =\n  D.mkCone p0' p1'\n  J.arr ?f = (?f \\<noteq> J.Null)\n  D.mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n\ngoal (1 subgoal):\n 1. D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) J.AA =\n    p0'", "by simp"], ["proof (state)\nthis:\n  D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n   (D.mkCone p0 p1) J.AA =\n  p0'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n   (D.mkCone p0 p1) J.AA =\n  p0'\n\ngoal (1 subgoal):\n 1. p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0'", "finally"], ["proof (chain)\npicking this:\n  p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0'", "show ?thesis"], ["proof (prove)\nusing this:\n  p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0'\n\ngoal (1 subgoal):\n 1. p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0'", "by auto"], ["proof (state)\nthis:\n  p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0'\n\ngoal (2 subgoals):\n 1. \\<guillemotleft>induced_arrow (C.dom p0')\n                     (D.mkCone p0'\n                       p1') : C.dom\n                               p0' \\<rightarrow> C.dom p0\\<guillemotright>\n 2. p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'", "show 2: \"p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'", "have \"p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') =\n              D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n                          (D.mkCone p0 p1) J.BB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') =\n    D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) J.BB", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') =\n    D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) J.BB", "have \"C.dom p0' = C.dom p1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C.dom p0' = C.dom p1'", "using assms"], ["proof (prove)\nusing this:\n  D.is_rendered_commutative_by p0' p1'\n\ngoal (1 subgoal):\n 1. C.dom p0' = C.dom p1'", "by (metis C.dom_comp)"], ["proof (state)\nthis:\n  C.dom p0' = C.dom p1'\n\ngoal (1 subgoal):\n 1. p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') =\n    D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) J.BB", "thus ?thesis"], ["proof (prove)\nusing this:\n  C.dom p0' = C.dom p1'\n\ngoal (1 subgoal):\n 1. p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') =\n    D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) J.BB", "using cone induced_arrowI(1) D.mkCone_def J.arr_char cone_\\<chi>"], ["proof (prove)\nusing this:\n  C.dom p0' = C.dom p1'\n  D.cone (C.dom p0') (D.mkCone p0' p1')\n  ?\\<chi>' \\<in> D.cones ?a' \\<Longrightarrow>\n  \\<guillemotleft>induced_arrow ?a'\n                   ?\\<chi>' : ?a' \\<rightarrow> C.dom p0\\<guillemotright>\n  D.mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n  J.arr ?f = (?f \\<noteq> J.Null)\n  D.mkCone p0 p1 \\<in> D.cones (C.dom p0)\n\ngoal (1 subgoal):\n 1. p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') =\n    D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) J.BB", "by force"], ["proof (state)\nthis:\n  p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') =\n  D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n   (D.mkCone p0 p1) J.BB\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') =\n  D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n   (D.mkCone p0 p1) J.BB\n\ngoal (1 subgoal):\n 1. p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'", "also"], ["proof (state)\nthis:\n  p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') =\n  D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n   (D.mkCone p0 p1) J.BB\n\ngoal (1 subgoal):\n 1. p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'", "have \"... = p1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) J.BB =\n    p1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) J.BB =\n    p1'", "have \"D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n                            (D.mkCone p0 p1) =\n                D.mkCone p0' p1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) =\n    D.mkCone p0' p1'", "using cone induced_arrowI"], ["proof (prove)\nusing this:\n  D.cone (C.dom p0') (D.mkCone p0' p1')\n  ?\\<chi>' \\<in> D.cones ?a' \\<Longrightarrow>\n  \\<guillemotleft>induced_arrow ?a'\n                   ?\\<chi>' : ?a' \\<rightarrow> C.dom p0\\<guillemotright>\n  ?\\<chi>' \\<in> D.cones ?a' \\<Longrightarrow>\n  D.cones_map (induced_arrow ?a' ?\\<chi>') (D.mkCone p0 p1) = ?\\<chi>'\n\ngoal (1 subgoal):\n 1. D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) =\n    D.mkCone p0' p1'", "by blast"], ["proof (state)\nthis:\n  D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n   (D.mkCone p0 p1) =\n  D.mkCone p0' p1'\n\ngoal (1 subgoal):\n 1. D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) J.BB =\n    p1'", "thus ?thesis"], ["proof (prove)\nusing this:\n  D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n   (D.mkCone p0 p1) =\n  D.mkCone p0' p1'\n\ngoal (1 subgoal):\n 1. D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) J.BB =\n    p1'", "using J.arr_char D.mkCone_def"], ["proof (prove)\nusing this:\n  D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n   (D.mkCone p0 p1) =\n  D.mkCone p0' p1'\n  J.arr ?f = (?f \\<noteq> J.Null)\n  D.mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f0 \\<cdot> ?p0.0\n               else if j = J.BT then f1 \\<cdot> ?p1.0\n                    else if j = J.TT then f0 \\<cdot> ?p0.0 else C.null\n\ngoal (1 subgoal):\n 1. D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n     (D.mkCone p0 p1) J.BB =\n    p1'", "by simp"], ["proof (state)\nthis:\n  D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n   (D.mkCone p0 p1) J.BB =\n  p1'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  D.cones_map (induced_arrow (C.dom p0') (D.mkCone p0' p1'))\n   (D.mkCone p0 p1) J.BB =\n  p1'\n\ngoal (1 subgoal):\n 1. p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'", "finally"], ["proof (chain)\npicking this:\n  p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'", "show ?thesis"], ["proof (prove)\nusing this:\n  p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'\n\ngoal (1 subgoal):\n 1. p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'", "by auto"], ["proof (state)\nthis:\n  p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p1 \\<cdot> induced_arrow (C.dom p1') (D.mkCone p0' p1') = p1'\n\ngoal (1 subgoal):\n 1. \\<guillemotleft>induced_arrow (C.dom p0')\n                     (D.mkCone p0'\n                       p1') : C.dom\n                               p0' \\<rightarrow> C.dom p0\\<guillemotright>", "show \"\\<guillemotleft>induced_arrow (C.dom p0') (D.mkCone p0' p1') : C.dom p0' \\<rightarrow> C.dom p0\\<guillemotright>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft>induced_arrow (C.dom p0')\n                     (D.mkCone p0'\n                       p1') : C.dom\n                               p0' \\<rightarrow> C.dom p0\\<guillemotright>", "using 1 cone induced_arrowI"], ["proof (prove)\nusing this:\n  p0 \\<cdot> induced_arrow (C.dom p0') (D.mkCone p0' p1') = p0'\n  D.cone (C.dom p0') (D.mkCone p0' p1')\n  ?\\<chi>' \\<in> D.cones ?a' \\<Longrightarrow>\n  \\<guillemotleft>induced_arrow ?a'\n                   ?\\<chi>' : ?a' \\<rightarrow> C.dom p0\\<guillemotright>\n  ?\\<chi>' \\<in> D.cones ?a' \\<Longrightarrow>\n  D.cones_map (induced_arrow ?a' ?\\<chi>') (D.mkCone p0 p1) = ?\\<chi>'\n\ngoal (1 subgoal):\n 1. \\<guillemotleft>induced_arrow (C.dom p0')\n                     (D.mkCone p0'\n                       p1') : C.dom\n                               p0' \\<rightarrow> C.dom p0\\<guillemotright>", "by simp"], ["proof (state)\nthis:\n  \\<guillemotleft>induced_arrow (C.dom p0')\n                   (D.mkCone p0'\n                     p1') : C.dom\n                             p0' \\<rightarrow> C.dom p0\\<guillemotright>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context category\n  begin"], ["", "definition has_as_pullback\n    where \"has_as_pullback f0 f1 p0 p1 \\<equiv>\n           cospan f0 f1 \\<and> cospan_diagram.has_as_pullback C f0 f1 p0 p1\""], ["", "definition has_pullbacks\n    where \"has_pullbacks = (\\<forall>f0 f1. cospan f0 f1 \\<longrightarrow> (\\<exists>p0 p1. has_as_pullback f0 f1 p0 p1))\""], ["", "end"], ["", "locale category_with_pullbacks =\n    category +\n  assumes has_pullbacks: has_pullbacks"], ["", "section \"Elementary Category with Pullbacks\""], ["", "text \\<open>\n    An \\emph{elementary category with pullbacks} is a category equipped with a specific\n    way of mapping each cospan to a span such that the resulting square commutes and\n    such that the span is universal for that property.  It is useful to assume that the\n    functions, mapping a cospan to the two projections of the pullback, are extensional;\n    that is, they yield @{term null} when applied to arguments that do not form a cospan.\n  \\<close>"], ["", "locale elementary_category_with_pullbacks =\n    category C\n  for C :: \"'a comp\"                              (infixr \"\\<cdot>\" 55)\n  and prj0 :: \"'a \\<Rightarrow> 'a \\<Rightarrow> 'a\"                    (\"\\<p>\\<^sub>0[_, _]\")\n  and prj1 :: \"'a \\<Rightarrow> 'a \\<Rightarrow> 'a\"                    (\"\\<p>\\<^sub>1[_, _]\") +\n  assumes prj0_ext: \"\\<not> cospan f g \\<Longrightarrow> \\<p>\\<^sub>0[f, g] = null\"\n  and prj1_ext: \"\\<not> cospan f g \\<Longrightarrow> \\<p>\\<^sub>1[f, g] = null\"\n  and pullback_commutes [intro]: \"cospan f g \\<Longrightarrow> commutative_square f g \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]\"\n  and universal: \"commutative_square f g h k \\<Longrightarrow> \\<exists>!l. \\<p>\\<^sub>1[f, g] \\<cdot> l = h \\<and> \\<p>\\<^sub>0[f, g] \\<cdot> l = k\"\n  begin"], ["", "lemma pullback_commutes':\n    assumes \"cospan f g\"\n    shows \"f \\<cdot> \\<p>\\<^sub>1[f, g] = g \\<cdot> \\<p>\\<^sub>0[f, g]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<cdot> \\<p>\\<^sub>1[f, g] = g \\<cdot> \\<p>\\<^sub>0[f, g]", "using assms commutative_square_def"], ["proof (prove)\nusing this:\n  cospan f g\n  commutative_square ?f ?g ?h ?k \\<equiv>\n  cospan ?f ?g \\<and>\n  span ?h ?k \\<and>\n  local.dom ?f = cod ?h \\<and> ?f \\<cdot> ?h = ?g \\<cdot> ?k\n\ngoal (1 subgoal):\n 1. f \\<cdot> \\<p>\\<^sub>1[f, g] = g \\<cdot> \\<p>\\<^sub>0[f, g]", "by blast"], ["", "lemma prj0_in_hom':\n    assumes \"cospan f g\"\n    shows \"\\<guillemotleft>\\<p>\\<^sub>0[f, g] : dom \\<p>\\<^sub>0[f, g] \\<rightarrow> dom g\\<guillemotright>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft>\\<p>\\<^sub>0[f, g] : local.dom\n    \\<p>\\<^sub>0[f, g] \\<rightarrow> local.dom g\\<guillemotright>", "using assms pullback_commutes"], ["proof (prove)\nusing this:\n  cospan f g\n  cospan ?f ?g \\<Longrightarrow>\n  commutative_square ?f ?g \\<p>\\<^sub>1[?f, ?g] \\<p>\\<^sub>0[?f, ?g]\n\ngoal (1 subgoal):\n 1. \\<guillemotleft>\\<p>\\<^sub>0[f, g] : local.dom\n    \\<p>\\<^sub>0[f, g] \\<rightarrow> local.dom g\\<guillemotright>", "by (metis category.commutative_squareE category_axioms in_homI)"], ["", "lemma prj1_in_hom':\n    assumes \"cospan f g\"\n    shows \"\\<guillemotleft>\\<p>\\<^sub>1[f, g] : dom \\<p>\\<^sub>0[f, g] \\<rightarrow> dom f\\<guillemotright>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft>\\<p>\\<^sub>1[f, g] : local.dom\n    \\<p>\\<^sub>0[f, g] \\<rightarrow> local.dom f\\<guillemotright>", "using assms pullback_commutes"], ["proof (prove)\nusing this:\n  cospan f g\n  cospan ?f ?g \\<Longrightarrow>\n  commutative_square ?f ?g \\<p>\\<^sub>1[?f, ?g] \\<p>\\<^sub>0[?f, ?g]\n\ngoal (1 subgoal):\n 1. \\<guillemotleft>\\<p>\\<^sub>1[f, g] : local.dom\n    \\<p>\\<^sub>0[f, g] \\<rightarrow> local.dom f\\<guillemotright>", "by (metis category.commutative_squareE category_axioms in_homI)"], ["", "text \\<open>\n      The following gives us a notation for the common domain of the two projections\n      of a pullback.\n    \\<close>"], ["", "definition pbdom        (infix \"\\<down>\\<down>\" 51)\n    where \"f \\<down>\\<down> g \\<equiv> dom \\<p>\\<^sub>0[f, g]\""], ["", "lemma pbdom_in_hom [intro]:\n    assumes \"cospan f g\"\n    shows \"\\<guillemotleft>f \\<down>\\<down> g : f \\<down>\\<down> g \\<rightarrow> f \\<down>\\<down> g\\<guillemotright>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft>f \\<down>\\<down>\n                    g : f \\<down>\\<down>\n                        g \\<rightarrow> f \\<down>\\<down> g\\<guillemotright>", "unfolding pbdom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft>local.dom\n                     \\<p>\\<^sub>0[f, g] : local.dom\n     \\<p>\\<^sub>0[f, g] \\<rightarrow> local.dom\n \\<p>\\<^sub>0[f, g]\\<guillemotright>", "using assms prj0_in_hom'"], ["proof (prove)\nusing this:\n  cospan f g\n  cospan ?f ?g \\<Longrightarrow>\n  \\<guillemotleft>\\<p>\\<^sub>0[?f, ?g] : local.dom\n    \\<p>\\<^sub>0[?f, ?g] \\<rightarrow> local.dom ?g\\<guillemotright>\n\ngoal (1 subgoal):\n 1. \\<guillemotleft>local.dom\n                     \\<p>\\<^sub>0[f, g] : local.dom\n     \\<p>\\<^sub>0[f, g] \\<rightarrow> local.dom\n \\<p>\\<^sub>0[f, g]\\<guillemotright>", "by (metis arr_dom_iff_arr arr_iff_in_hom cod_dom dom_dom in_homE)"], ["", "lemma ide_pbdom [simp]:\n    assumes \"cospan f g\"\n    shows \"ide (f \\<down>\\<down> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide (f \\<down>\\<down> g)", "using assms ide_in_hom"], ["proof (prove)\nusing this:\n  cospan f g\n  ide ?a = \\<guillemotleft>?a : ?a \\<rightarrow> ?a\\<guillemotright>\n\ngoal (1 subgoal):\n 1. ide (f \\<down>\\<down> g)", "by auto[1]"], ["", "lemma prj0_in_hom [intro, simp]:\n    assumes \"cospan f g\" and \"a = f \\<down>\\<down> g\" and \"b = dom g\"\n    shows \"\\<guillemotleft>\\<p>\\<^sub>0[f, g] : a \\<rightarrow> b\\<guillemotright>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft>\\<p>\\<^sub>0[f, g] : a \\<rightarrow> b\\<guillemotright>", "unfolding pbdom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft>\\<p>\\<^sub>0[f, g] : a \\<rightarrow> b\\<guillemotright>", "using assms prj0_in_hom'"], ["proof (prove)\nusing this:\n  cospan f g\n  a = f \\<down>\\<down> g\n  b = local.dom g\n  cospan ?f ?g \\<Longrightarrow>\n  \\<guillemotleft>\\<p>\\<^sub>0[?f, ?g] : local.dom\n    \\<p>\\<^sub>0[?f, ?g] \\<rightarrow> local.dom ?g\\<guillemotright>\n\ngoal (1 subgoal):\n 1. \\<guillemotleft>\\<p>\\<^sub>0[f, g] : a \\<rightarrow> b\\<guillemotright>", "by (simp add: pbdom_def)"], ["", "lemma prj1_in_hom [intro, simp]:\n    assumes \"cospan f g\" and \"a = f \\<down>\\<down> g\" and \"b = dom f\"\n    shows \"\\<guillemotleft>\\<p>\\<^sub>1[f, g] : a \\<rightarrow> b\\<guillemotright>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft>\\<p>\\<^sub>1[f, g] : a \\<rightarrow> b\\<guillemotright>", "unfolding pbdom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft>\\<p>\\<^sub>1[f, g] : a \\<rightarrow> b\\<guillemotright>", "using assms prj1_in_hom'"], ["proof (prove)\nusing this:\n  cospan f g\n  a = f \\<down>\\<down> g\n  b = local.dom f\n  cospan ?f ?g \\<Longrightarrow>\n  \\<guillemotleft>\\<p>\\<^sub>1[?f, ?g] : local.dom\n    \\<p>\\<^sub>0[?f, ?g] \\<rightarrow> local.dom ?f\\<guillemotright>\n\ngoal (1 subgoal):\n 1. \\<guillemotleft>\\<p>\\<^sub>1[f, g] : a \\<rightarrow> b\\<guillemotright>", "by (simp add: pbdom_def)"], ["", "lemma prj0_simps [simp]:\n    assumes \"cospan f g\"\n    shows \"arr \\<p>\\<^sub>0[f, g]\" and \"dom \\<p>\\<^sub>0[f, g] = f \\<down>\\<down> g\" and \"cod \\<p>\\<^sub>0[f, g] = dom g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr \\<p>\\<^sub>0[f, g] &&&\n    local.dom \\<p>\\<^sub>0[f, g] = f \\<down>\\<down> g &&&\n    cod \\<p>\\<^sub>0[f, g] = local.dom g", "using assms prj0_in_hom"], ["proof (prove)\nusing this:\n  cospan f g\n  \\<lbrakk>cospan ?f ?g; ?a = ?f \\<down>\\<down> ?g;\n   ?b = local.dom ?g\\<rbrakk>\n  \\<Longrightarrow> \\<guillemotleft>\\<p>\\<^sub>0[?f, ?g] : ?a \\<rightarrow> ?b\\<guillemotright>\n\ngoal (1 subgoal):\n 1. arr \\<p>\\<^sub>0[f, g] &&&\n    local.dom \\<p>\\<^sub>0[f, g] = f \\<down>\\<down> g &&&\n    cod \\<p>\\<^sub>0[f, g] = local.dom g", "by (blast, blast, blast)"], ["", "lemma prj0_simps_arr [iff]:\n    shows \"arr \\<p>\\<^sub>0[f, g] \\<longleftrightarrow> cospan f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr \\<p>\\<^sub>0[f, g] = cospan f g", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. arr \\<p>\\<^sub>0[f, g] \\<Longrightarrow> cospan f g\n 2. cospan f g \\<Longrightarrow> arr \\<p>\\<^sub>0[f, g]", "show \"cospan f g \\<Longrightarrow> arr \\<p>\\<^sub>0[f, g]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cospan f g \\<Longrightarrow> arr \\<p>\\<^sub>0[f, g]", "using prj0_in_hom"], ["proof (prove)\nusing this:\n  \\<lbrakk>cospan ?f ?g; ?a = ?f \\<down>\\<down> ?g;\n   ?b = local.dom ?g\\<rbrakk>\n  \\<Longrightarrow> \\<guillemotleft>\\<p>\\<^sub>0[?f, ?g] : ?a \\<rightarrow> ?b\\<guillemotright>\n\ngoal (1 subgoal):\n 1. cospan f g \\<Longrightarrow> arr \\<p>\\<^sub>0[f, g]", "by auto"], ["proof (state)\nthis:\n  cospan f g \\<Longrightarrow> arr \\<p>\\<^sub>0[f, g]\n\ngoal (1 subgoal):\n 1. arr \\<p>\\<^sub>0[f, g] \\<Longrightarrow> cospan f g", "show \"arr \\<p>\\<^sub>0[f, g] \\<Longrightarrow> cospan f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr \\<p>\\<^sub>0[f, g] \\<Longrightarrow> cospan f g", "using prj0_ext not_arr_null"], ["proof (prove)\nusing this:\n  \\<not> cospan ?f ?g \\<Longrightarrow> \\<p>\\<^sub>0[?f, ?g] = null\n  \\<not> arr null\n\ngoal (1 subgoal):\n 1. arr \\<p>\\<^sub>0[f, g] \\<Longrightarrow> cospan f g", "by metis"], ["proof (state)\nthis:\n  arr \\<p>\\<^sub>0[f, g] \\<Longrightarrow> cospan f g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prj1_simps [simp]:\n    assumes \"cospan f g\"\n    shows \"arr \\<p>\\<^sub>1[f, g]\" and \"dom \\<p>\\<^sub>1[f, g] = f \\<down>\\<down> g\" and \"cod \\<p>\\<^sub>1[f, g] = dom f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr \\<p>\\<^sub>1[f, g] &&&\n    local.dom \\<p>\\<^sub>1[f, g] = f \\<down>\\<down> g &&&\n    cod \\<p>\\<^sub>1[f, g] = local.dom f", "using assms prj1_in_hom"], ["proof (prove)\nusing this:\n  cospan f g\n  \\<lbrakk>cospan ?f ?g; ?a = ?f \\<down>\\<down> ?g;\n   ?b = local.dom ?f\\<rbrakk>\n  \\<Longrightarrow> \\<guillemotleft>\\<p>\\<^sub>1[?f, ?g] : ?a \\<rightarrow> ?b\\<guillemotright>\n\ngoal (1 subgoal):\n 1. arr \\<p>\\<^sub>1[f, g] &&&\n    local.dom \\<p>\\<^sub>1[f, g] = f \\<down>\\<down> g &&&\n    cod \\<p>\\<^sub>1[f, g] = local.dom f", "by (blast, blast, blast)"], ["", "lemma prj1_simps_arr [iff]:\n    shows \"arr \\<p>\\<^sub>1[f, g] \\<longleftrightarrow> cospan f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr \\<p>\\<^sub>1[f, g] = cospan f g", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. arr \\<p>\\<^sub>1[f, g] \\<Longrightarrow> cospan f g\n 2. cospan f g \\<Longrightarrow> arr \\<p>\\<^sub>1[f, g]", "show \"cospan f g \\<Longrightarrow> arr \\<p>\\<^sub>1[f, g]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cospan f g \\<Longrightarrow> arr \\<p>\\<^sub>1[f, g]", "using prj1_in_hom"], ["proof (prove)\nusing this:\n  \\<lbrakk>cospan ?f ?g; ?a = ?f \\<down>\\<down> ?g;\n   ?b = local.dom ?f\\<rbrakk>\n  \\<Longrightarrow> \\<guillemotleft>\\<p>\\<^sub>1[?f, ?g] : ?a \\<rightarrow> ?b\\<guillemotright>\n\ngoal (1 subgoal):\n 1. cospan f g \\<Longrightarrow> arr \\<p>\\<^sub>1[f, g]", "by auto"], ["proof (state)\nthis:\n  cospan f g \\<Longrightarrow> arr \\<p>\\<^sub>1[f, g]\n\ngoal (1 subgoal):\n 1. arr \\<p>\\<^sub>1[f, g] \\<Longrightarrow> cospan f g", "show \"arr \\<p>\\<^sub>1[f, g] \\<Longrightarrow> cospan f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr \\<p>\\<^sub>1[f, g] \\<Longrightarrow> cospan f g", "using prj1_ext not_arr_null"], ["proof (prove)\nusing this:\n  \\<not> cospan ?f ?g \\<Longrightarrow> \\<p>\\<^sub>1[?f, ?g] = null\n  \\<not> arr null\n\ngoal (1 subgoal):\n 1. arr \\<p>\\<^sub>1[f, g] \\<Longrightarrow> cospan f g", "by metis"], ["proof (state)\nthis:\n  arr \\<p>\\<^sub>1[f, g] \\<Longrightarrow> cospan f g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma span_prj:\n    assumes \"cospan f g\"\n    shows \"span \\<p>\\<^sub>0[f, g] \\<p>\\<^sub>1[f, g]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. span \\<p>\\<^sub>0[f, g] \\<p>\\<^sub>1[f, g]", "using assms"], ["proof (prove)\nusing this:\n  cospan f g\n\ngoal (1 subgoal):\n 1. span \\<p>\\<^sub>0[f, g] \\<p>\\<^sub>1[f, g]", "by simp"], ["", "text \\<open>\n      We introduce a notation for tupling, which produces the induced arrow into a pullback.\n      In our notation, the ``$0$-side'', which we regard as the input, occurs on the right,\n      and the ``$1$-side'', which we regard as the output, occurs on the left.\n    \\<close>"], ["", "definition tuple         (\"\\<langle>_ \\<lbrakk>_, _\\<rbrakk> _\\<rangle>\")\n    where \"\\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<equiv> if commutative_square f g h k then\n                           THE l. \\<p>\\<^sub>0[f, g] \\<cdot> l = k \\<and> \\<p>\\<^sub>1[f, g] \\<cdot> l = h\n                         else null\""], ["", "lemma tuple_in_hom [intro]:\n    assumes \"commutative_square f g h k\"\n    shows \"\\<guillemotleft>\\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> : dom h \\<rightarrow> f \\<down>\\<down> g\\<guillemotright>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft>\\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> : local.dom\n                              h \\<rightarrow> f \\<down>\\<down>\n        g\\<guillemotright>", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. arr \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>\n 2. local.dom \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = local.dom h\n 3. cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = f \\<down>\\<down> g", "have 1: \"\\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = k \\<and> \\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n    k \\<and>\n    \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n    h", "unfolding tuple_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    (if commutative_square f g h k\n     then THE l.\n             \\<p>\\<^sub>0[f, g] \\<cdot> l = k \\<and>\n             \\<p>\\<^sub>1[f, g] \\<cdot> l = h\n     else null) =\n    k \\<and>\n    \\<p>\\<^sub>1[f, g] \\<cdot>\n    (if commutative_square f g h k\n     then THE l.\n             \\<p>\\<^sub>0[f, g] \\<cdot> l = k \\<and>\n             \\<p>\\<^sub>1[f, g] \\<cdot> l = h\n     else null) =\n    h", "using assms universal theI [of \"\\<lambda>l. \\<p>\\<^sub>0[f, g] \\<cdot> l = k \\<and> \\<p>\\<^sub>1[f, g] \\<cdot> l = h\"]"], ["proof (prove)\nusing this:\n  commutative_square f g h k\n  commutative_square ?f ?g ?h ?k \\<Longrightarrow>\n  \\<exists>!l.\n     \\<p>\\<^sub>1[?f, ?g] \\<cdot> l = ?h \\<and>\n     \\<p>\\<^sub>0[?f, ?g] \\<cdot> l = ?k\n  \\<lbrakk>\\<p>\\<^sub>0[f, g] \\<cdot> ?a = k \\<and>\n           \\<p>\\<^sub>1[f, g] \\<cdot> ?a = h;\n   \\<And>x.\n      \\<p>\\<^sub>0[f, g] \\<cdot> x = k \\<and>\n      \\<p>\\<^sub>1[f, g] \\<cdot> x = h \\<Longrightarrow>\n      x = ?a\\<rbrakk>\n  \\<Longrightarrow> \\<p>\\<^sub>0[f, g] \\<cdot>\n                    (THE x.\n                        \\<p>\\<^sub>0[f, g] \\<cdot> x = k \\<and>\n                        \\<p>\\<^sub>1[f, g] \\<cdot> x = h) =\n                    k \\<and>\n                    \\<p>\\<^sub>1[f, g] \\<cdot>\n                    (THE x.\n                        \\<p>\\<^sub>0[f, g] \\<cdot> x = k \\<and>\n                        \\<p>\\<^sub>1[f, g] \\<cdot> x = h) =\n                    h\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    (if commutative_square f g h k\n     then THE l.\n             \\<p>\\<^sub>0[f, g] \\<cdot> l = k \\<and>\n             \\<p>\\<^sub>1[f, g] \\<cdot> l = h\n     else null) =\n    k \\<and>\n    \\<p>\\<^sub>1[f, g] \\<cdot>\n    (if commutative_square f g h k\n     then THE l.\n             \\<p>\\<^sub>0[f, g] \\<cdot> l = k \\<and>\n             \\<p>\\<^sub>1[f, g] \\<cdot> l = h\n     else null) =\n    h", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commutative_square f g h k;\n     \\<And>f g h k.\n        commutative_square f g h k \\<Longrightarrow>\n        \\<exists>!l.\n           \\<p>\\<^sub>1[f, g] \\<cdot> l = h \\<and>\n           \\<p>\\<^sub>0[f, g] \\<cdot> l = k;\n     \\<And>a.\n        \\<lbrakk>\\<p>\\<^sub>0[f, g] \\<cdot> a = k \\<and>\n                 \\<p>\\<^sub>1[f, g] \\<cdot> a = h;\n         \\<And>x.\n            \\<p>\\<^sub>0[f, g] \\<cdot> x = k \\<and>\n            \\<p>\\<^sub>1[f, g] \\<cdot> x = h \\<Longrightarrow>\n            x = a\\<rbrakk>\n        \\<Longrightarrow> \\<p>\\<^sub>0[f, g] \\<cdot>\n                          (THE x.\n                              \\<p>\\<^sub>0[f, g] \\<cdot> x = k \\<and>\n                              \\<p>\\<^sub>1[f, g] \\<cdot> x = h) =\n                          k \\<and>\n                          \\<p>\\<^sub>1[f, g] \\<cdot>\n                          (THE x.\n                              \\<p>\\<^sub>0[f, g] \\<cdot> x = k \\<and>\n                              \\<p>\\<^sub>1[f, g] \\<cdot> x = h) =\n                          h\\<rbrakk>\n    \\<Longrightarrow> \\<p>\\<^sub>0[f, g] \\<cdot>\n                      (THE l.\n                          \\<p>\\<^sub>0[f, g] \\<cdot> l = k \\<and>\n                          \\<p>\\<^sub>1[f, g] \\<cdot> l = h) =\n                      k \\<and>\n                      \\<p>\\<^sub>1[f, g] \\<cdot>\n                      (THE l.\n                          \\<p>\\<^sub>0[f, g] \\<cdot> l = k \\<and>\n                          \\<p>\\<^sub>1[f, g] \\<cdot> l = h) =\n                      h", "by meson"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n  k \\<and>\n  \\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n  h\n\ngoal (3 subgoals):\n 1. arr \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>\n 2. local.dom \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = local.dom h\n 3. cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = f \\<down>\\<down> g", "show \"arr \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>", "using assms 1"], ["proof (prove)\nusing this:\n  commutative_square f g h k\n  \\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n  k \\<and>\n  \\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n  h\n\ngoal (1 subgoal):\n 1. arr \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>", "apply (elim commutative_squareE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<p>\\<^sub>0[f, g] \\<cdot>\n             \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n             k \\<and>\n             \\<p>\\<^sub>1[f, g] \\<cdot>\n             \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n             h;\n     arr f; arr g; arr h; arr k; cod f = cod g; local.dom h = local.dom k;\n     local.dom f = cod h; local.dom g = cod k;\n     f \\<cdot> h = g \\<cdot> k\\<rbrakk>\n    \\<Longrightarrow> arr \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>", "by (metis (no_types, lifting) seqE)"], ["proof (state)\nthis:\n  arr \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>\n\ngoal (2 subgoals):\n 1. local.dom \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = local.dom h\n 2. cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = f \\<down>\\<down> g", "show \"dom \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = dom h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.dom \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = local.dom h", "using assms 1"], ["proof (prove)\nusing this:\n  commutative_square f g h k\n  \\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n  k \\<and>\n  \\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n  h\n\ngoal (1 subgoal):\n 1. local.dom \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = local.dom h", "apply (elim commutative_squareE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<p>\\<^sub>0[f, g] \\<cdot>\n             \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n             k \\<and>\n             \\<p>\\<^sub>1[f, g] \\<cdot>\n             \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n             h;\n     arr f; arr g; arr h; arr k; cod f = cod g; local.dom h = local.dom k;\n     local.dom f = cod h; local.dom g = cod k;\n     f \\<cdot> h = g \\<cdot> k\\<rbrakk>\n    \\<Longrightarrow> local.dom\n                       \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n                      local.dom h", "by (metis (no_types, lifting) dom_comp)"], ["proof (state)\nthis:\n  local.dom \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = local.dom h\n\ngoal (1 subgoal):\n 1. cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = f \\<down>\\<down> g", "show \"cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = f \\<down>\\<down> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = f \\<down>\\<down> g", "unfolding pbdom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n    local.dom \\<p>\\<^sub>0[f, g]", "using assms 1"], ["proof (prove)\nusing this:\n  commutative_square f g h k\n  \\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n  k \\<and>\n  \\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n  h\n\ngoal (1 subgoal):\n 1. cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n    local.dom \\<p>\\<^sub>0[f, g]", "apply (elim commutative_squareE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<p>\\<^sub>0[f, g] \\<cdot>\n             \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n             k \\<and>\n             \\<p>\\<^sub>1[f, g] \\<cdot>\n             \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n             h;\n     arr f; arr g; arr h; arr k; cod f = cod g; local.dom h = local.dom k;\n     local.dom f = cod h; local.dom g = cod k;\n     f \\<cdot> h = g \\<cdot> k\\<rbrakk>\n    \\<Longrightarrow> cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n                      local.dom \\<p>\\<^sub>0[f, g]", "by (metis seqE)"], ["proof (state)\nthis:\n  cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = f \\<down>\\<down> g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tuple_is_extensional:\n    assumes \"\\<not> commutative_square f g h k\"\n    shows \"\\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = null", "unfolding tuple_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if commutative_square f g h k\n     then THE l.\n             \\<p>\\<^sub>0[f, g] \\<cdot> l = k \\<and>\n             \\<p>\\<^sub>1[f, g] \\<cdot> l = h\n     else null) =\n    null", "using assms"], ["proof (prove)\nusing this:\n  \\<not> commutative_square f g h k\n\ngoal (1 subgoal):\n 1. (if commutative_square f g h k\n     then THE l.\n             \\<p>\\<^sub>0[f, g] \\<cdot> l = k \\<and>\n             \\<p>\\<^sub>1[f, g] \\<cdot> l = h\n     else null) =\n    null", "by simp"], ["", "lemma tuple_simps [simp]:\n    assumes \"commutative_square f g h k\"\n    shows \"arr \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>\" and \"dom \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = dom h\" and \"cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = f \\<down>\\<down> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> &&&\n    local.dom \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = local.dom h &&&\n    cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = f \\<down>\\<down> g", "using assms tuple_in_hom"], ["proof (prove)\nusing this:\n  commutative_square f g h k\n  commutative_square ?f ?g ?h ?k \\<Longrightarrow>\n  \\<guillemotleft>\\<langle>?h \\<lbrakk>?f, ?g\\<rbrakk> ?k\\<rangle> : local.dom\n                                ?h \\<rightarrow> ?f \\<down>\\<down>\n           ?g\\<guillemotright>\n\ngoal (1 subgoal):\n 1. arr \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> &&&\n    local.dom \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = local.dom h &&&\n    cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = f \\<down>\\<down> g", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. local.dom \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = local.dom h\n 2. cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = f \\<down>\\<down> g", "using assms tuple_in_hom"], ["proof (prove)\nusing this:\n  commutative_square f g h k\n  commutative_square ?f ?g ?h ?k \\<Longrightarrow>\n  \\<guillemotleft>\\<langle>?h \\<lbrakk>?f, ?g\\<rbrakk> ?k\\<rangle> : local.dom\n                                ?h \\<rightarrow> ?f \\<down>\\<down>\n           ?g\\<guillemotright>\n\ngoal (2 subgoals):\n 1. local.dom \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = local.dom h\n 2. cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = f \\<down>\\<down> g", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = f \\<down>\\<down> g", "using assms tuple_in_hom"], ["proof (prove)\nusing this:\n  commutative_square f g h k\n  commutative_square ?f ?g ?h ?k \\<Longrightarrow>\n  \\<guillemotleft>\\<langle>?h \\<lbrakk>?f, ?g\\<rbrakk> ?k\\<rangle> : local.dom\n                                ?h \\<rightarrow> ?f \\<down>\\<down>\n           ?g\\<guillemotright>\n\ngoal (1 subgoal):\n 1. cod \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = f \\<down>\\<down> g", "by blast"], ["", "lemma prj_tuple [simp]:\n    assumes \"commutative_square f g h k\"\n    shows \"\\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = k\" and \"\\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n    k &&&\n    \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n    h", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n    k\n 2. \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n    h", "have 1: \"\\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = k \\<and> \\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n    k \\<and>\n    \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n    h", "unfolding tuple_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    (if commutative_square f g h k\n     then THE l.\n             \\<p>\\<^sub>0[f, g] \\<cdot> l = k \\<and>\n             \\<p>\\<^sub>1[f, g] \\<cdot> l = h\n     else null) =\n    k \\<and>\n    \\<p>\\<^sub>1[f, g] \\<cdot>\n    (if commutative_square f g h k\n     then THE l.\n             \\<p>\\<^sub>0[f, g] \\<cdot> l = k \\<and>\n             \\<p>\\<^sub>1[f, g] \\<cdot> l = h\n     else null) =\n    h", "using assms universal theI [of \"\\<lambda>l. \\<p>\\<^sub>0[f, g] \\<cdot> l = k \\<and> \\<p>\\<^sub>1[f, g] \\<cdot> l = h\"]"], ["proof (prove)\nusing this:\n  commutative_square f g h k\n  commutative_square ?f ?g ?h ?k \\<Longrightarrow>\n  \\<exists>!l.\n     \\<p>\\<^sub>1[?f, ?g] \\<cdot> l = ?h \\<and>\n     \\<p>\\<^sub>0[?f, ?g] \\<cdot> l = ?k\n  \\<lbrakk>\\<p>\\<^sub>0[f, g] \\<cdot> ?a = k \\<and>\n           \\<p>\\<^sub>1[f, g] \\<cdot> ?a = h;\n   \\<And>x.\n      \\<p>\\<^sub>0[f, g] \\<cdot> x = k \\<and>\n      \\<p>\\<^sub>1[f, g] \\<cdot> x = h \\<Longrightarrow>\n      x = ?a\\<rbrakk>\n  \\<Longrightarrow> \\<p>\\<^sub>0[f, g] \\<cdot>\n                    (THE x.\n                        \\<p>\\<^sub>0[f, g] \\<cdot> x = k \\<and>\n                        \\<p>\\<^sub>1[f, g] \\<cdot> x = h) =\n                    k \\<and>\n                    \\<p>\\<^sub>1[f, g] \\<cdot>\n                    (THE x.\n                        \\<p>\\<^sub>0[f, g] \\<cdot> x = k \\<and>\n                        \\<p>\\<^sub>1[f, g] \\<cdot> x = h) =\n                    h\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    (if commutative_square f g h k\n     then THE l.\n             \\<p>\\<^sub>0[f, g] \\<cdot> l = k \\<and>\n             \\<p>\\<^sub>1[f, g] \\<cdot> l = h\n     else null) =\n    k \\<and>\n    \\<p>\\<^sub>1[f, g] \\<cdot>\n    (if commutative_square f g h k\n     then THE l.\n             \\<p>\\<^sub>0[f, g] \\<cdot> l = k \\<and>\n             \\<p>\\<^sub>1[f, g] \\<cdot> l = h\n     else null) =\n    h", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commutative_square f g h k;\n     \\<And>f g h k.\n        commutative_square f g h k \\<Longrightarrow>\n        \\<exists>!l.\n           \\<p>\\<^sub>1[f, g] \\<cdot> l = h \\<and>\n           \\<p>\\<^sub>0[f, g] \\<cdot> l = k;\n     \\<And>a.\n        \\<lbrakk>\\<p>\\<^sub>0[f, g] \\<cdot> a = k \\<and>\n                 \\<p>\\<^sub>1[f, g] \\<cdot> a = h;\n         \\<And>x.\n            \\<p>\\<^sub>0[f, g] \\<cdot> x = k \\<and>\n            \\<p>\\<^sub>1[f, g] \\<cdot> x = h \\<Longrightarrow>\n            x = a\\<rbrakk>\n        \\<Longrightarrow> \\<p>\\<^sub>0[f, g] \\<cdot>\n                          (THE x.\n                              \\<p>\\<^sub>0[f, g] \\<cdot> x = k \\<and>\n                              \\<p>\\<^sub>1[f, g] \\<cdot> x = h) =\n                          k \\<and>\n                          \\<p>\\<^sub>1[f, g] \\<cdot>\n                          (THE x.\n                              \\<p>\\<^sub>0[f, g] \\<cdot> x = k \\<and>\n                              \\<p>\\<^sub>1[f, g] \\<cdot> x = h) =\n                          h\\<rbrakk>\n    \\<Longrightarrow> \\<p>\\<^sub>0[f, g] \\<cdot>\n                      (THE l.\n                          \\<p>\\<^sub>0[f, g] \\<cdot> l = k \\<and>\n                          \\<p>\\<^sub>1[f, g] \\<cdot> l = h) =\n                      k \\<and>\n                      \\<p>\\<^sub>1[f, g] \\<cdot>\n                      (THE l.\n                          \\<p>\\<^sub>0[f, g] \\<cdot> l = k \\<and>\n                          \\<p>\\<^sub>1[f, g] \\<cdot> l = h) =\n                      h", "by meson"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n  k \\<and>\n  \\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n  h\n\ngoal (2 subgoals):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n    k\n 2. \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n    h", "show \"\\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n    k", "using 1"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n  k \\<and>\n  \\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n  h\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n    k", "by simp"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n  k\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n    h", "show \"\\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n    h", "using 1"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n  k \\<and>\n  \\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n  h\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n    h", "by simp"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> =\n  h\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tuple_prj:\n    assumes \"cospan f g\" and \"seq \\<p>\\<^sub>1[f, g] h\"\n    shows \"\\<langle>\\<p>\\<^sub>1[f, g] \\<cdot> h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle> = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\nh\\<rangle> =\n    h", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\nh\\<rangle> =\n    h", "have 1: \"commutative_square f g (\\<p>\\<^sub>1[f, g] \\<cdot> h) (\\<p>\\<^sub>0[f, g] \\<cdot> h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. commutative_square f g (\\<p>\\<^sub>1[f, g] \\<cdot> h)\n     (\\<p>\\<^sub>0[f, g] \\<cdot> h)", "using assms pullback_commutes"], ["proof (prove)\nusing this:\n  cospan f g\n  seq \\<p>\\<^sub>1[f, g] h\n  cospan ?f ?g \\<Longrightarrow>\n  commutative_square ?f ?g \\<p>\\<^sub>1[?f, ?g] \\<p>\\<^sub>0[?f, ?g]\n\ngoal (1 subgoal):\n 1. commutative_square f g (\\<p>\\<^sub>1[f, g] \\<cdot> h)\n     (\\<p>\\<^sub>0[f, g] \\<cdot> h)", "by (simp add: commutative_square_comp_arr)"], ["proof (state)\nthis:\n  commutative_square f g (\\<p>\\<^sub>1[f, g] \\<cdot> h)\n   (\\<p>\\<^sub>0[f, g] \\<cdot> h)\n\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\nh\\<rangle> =\n    h", "have \"\\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot> h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle> = \\<p>\\<^sub>0[f, g] \\<cdot> h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\nh\\<rangle> =\n    \\<p>\\<^sub>0[f, g] \\<cdot> h", "using assms 1"], ["proof (prove)\nusing this:\n  cospan f g\n  seq \\<p>\\<^sub>1[f, g] h\n  commutative_square f g (\\<p>\\<^sub>1[f, g] \\<cdot> h)\n   (\\<p>\\<^sub>0[f, g] \\<cdot> h)\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\nh\\<rangle> =\n    \\<p>\\<^sub>0[f, g] \\<cdot> h", "by simp"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle> =\n  \\<p>\\<^sub>0[f, g] \\<cdot> h\n\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\nh\\<rangle> =\n    h", "moreover"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle> =\n  \\<p>\\<^sub>0[f, g] \\<cdot> h\n\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\nh\\<rangle> =\n    h", "have \"\\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot> h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle> = \\<p>\\<^sub>1[f, g] \\<cdot> h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\nh\\<rangle> =\n    \\<p>\\<^sub>1[f, g] \\<cdot> h", "using assms 1"], ["proof (prove)\nusing this:\n  cospan f g\n  seq \\<p>\\<^sub>1[f, g] h\n  commutative_square f g (\\<p>\\<^sub>1[f, g] \\<cdot> h)\n   (\\<p>\\<^sub>0[f, g] \\<cdot> h)\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\nh\\<rangle> =\n    \\<p>\\<^sub>1[f, g] \\<cdot> h", "by simp"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle> =\n  \\<p>\\<^sub>1[f, g] \\<cdot> h\n\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\nh\\<rangle> =\n    h", "ultimately"], ["proof (chain)\npicking this:\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle> =\n  \\<p>\\<^sub>0[f, g] \\<cdot> h\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle> =\n  \\<p>\\<^sub>1[f, g] \\<cdot> h", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle> =\n  \\<p>\\<^sub>0[f, g] \\<cdot> h\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle> =\n  \\<p>\\<^sub>1[f, g] \\<cdot> h\n\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\nh\\<rangle> =\n    h", "unfolding tuple_def"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  (if commutative_square f g (\\<p>\\<^sub>1[f, g] \\<cdot> h)\n       (\\<p>\\<^sub>0[f, g] \\<cdot> h)\n   then THE l.\n           \\<p>\\<^sub>0[f, g] \\<cdot> l =\n           \\<p>\\<^sub>0[f, g] \\<cdot> h \\<and>\n           \\<p>\\<^sub>1[f, g] \\<cdot> l = \\<p>\\<^sub>1[f, g] \\<cdot> h\n   else null) =\n  \\<p>\\<^sub>0[f, g] \\<cdot> h\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  (if commutative_square f g (\\<p>\\<^sub>1[f, g] \\<cdot> h)\n       (\\<p>\\<^sub>0[f, g] \\<cdot> h)\n   then THE l.\n           \\<p>\\<^sub>0[f, g] \\<cdot> l =\n           \\<p>\\<^sub>0[f, g] \\<cdot> h \\<and>\n           \\<p>\\<^sub>1[f, g] \\<cdot> l = \\<p>\\<^sub>1[f, g] \\<cdot> h\n   else null) =\n  \\<p>\\<^sub>1[f, g] \\<cdot> h\n\ngoal (1 subgoal):\n 1. (if commutative_square f g (\\<p>\\<^sub>1[f, g] \\<cdot> h)\n         (\\<p>\\<^sub>0[f, g] \\<cdot> h)\n     then THE l.\n             \\<p>\\<^sub>0[f, g] \\<cdot> l =\n             \\<p>\\<^sub>0[f, g] \\<cdot> h \\<and>\n             \\<p>\\<^sub>1[f, g] \\<cdot> l = \\<p>\\<^sub>1[f, g] \\<cdot> h\n     else null) =\n    h", "using assms 1 universal [of f g \"\\<p>\\<^sub>1[f, g] \\<cdot> h\" \"\\<p>\\<^sub>0[f, g] \\<cdot> h\"]\n              theI_unique [of \"\\<lambda>l. \\<p>\\<^sub>0[f, g] \\<cdot> l = \\<p>\\<^sub>0[f, g] \\<cdot> h \\<and> \\<p>\\<^sub>1[f, g] \\<cdot> l = \\<p>\\<^sub>1[f, g] \\<cdot> h\" h]"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  (if commutative_square f g (\\<p>\\<^sub>1[f, g] \\<cdot> h)\n       (\\<p>\\<^sub>0[f, g] \\<cdot> h)\n   then THE l.\n           \\<p>\\<^sub>0[f, g] \\<cdot> l =\n           \\<p>\\<^sub>0[f, g] \\<cdot> h \\<and>\n           \\<p>\\<^sub>1[f, g] \\<cdot> l = \\<p>\\<^sub>1[f, g] \\<cdot> h\n   else null) =\n  \\<p>\\<^sub>0[f, g] \\<cdot> h\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  (if commutative_square f g (\\<p>\\<^sub>1[f, g] \\<cdot> h)\n       (\\<p>\\<^sub>0[f, g] \\<cdot> h)\n   then THE l.\n           \\<p>\\<^sub>0[f, g] \\<cdot> l =\n           \\<p>\\<^sub>0[f, g] \\<cdot> h \\<and>\n           \\<p>\\<^sub>1[f, g] \\<cdot> l = \\<p>\\<^sub>1[f, g] \\<cdot> h\n   else null) =\n  \\<p>\\<^sub>1[f, g] \\<cdot> h\n  cospan f g\n  seq \\<p>\\<^sub>1[f, g] h\n  commutative_square f g (\\<p>\\<^sub>1[f, g] \\<cdot> h)\n   (\\<p>\\<^sub>0[f, g] \\<cdot> h)\n  commutative_square f g (\\<p>\\<^sub>1[f, g] \\<cdot> h)\n   (\\<p>\\<^sub>0[f, g] \\<cdot> h) \\<Longrightarrow>\n  \\<exists>!l.\n     \\<p>\\<^sub>1[f, g] \\<cdot> l = \\<p>\\<^sub>1[f, g] \\<cdot> h \\<and>\n     \\<p>\\<^sub>0[f, g] \\<cdot> l = \\<p>\\<^sub>0[f, g] \\<cdot> h\n  \\<exists>!x.\n     \\<p>\\<^sub>0[f, g] \\<cdot> x = \\<p>\\<^sub>0[f, g] \\<cdot> h \\<and>\n     \\<p>\\<^sub>1[f, g] \\<cdot> x =\n     \\<p>\\<^sub>1[f, g] \\<cdot> h \\<Longrightarrow>\n  (\\<p>\\<^sub>0[f, g] \\<cdot> h = \\<p>\\<^sub>0[f, g] \\<cdot> h \\<and>\n   \\<p>\\<^sub>1[f, g] \\<cdot> h = \\<p>\\<^sub>1[f, g] \\<cdot> h) =\n  (h =\n   (THE l.\n       \\<p>\\<^sub>0[f, g] \\<cdot> l = \\<p>\\<^sub>0[f, g] \\<cdot> h \\<and>\n       \\<p>\\<^sub>1[f, g] \\<cdot> l = \\<p>\\<^sub>1[f, g] \\<cdot> h))\n\ngoal (1 subgoal):\n 1. (if commutative_square f g (\\<p>\\<^sub>1[f, g] \\<cdot> h)\n         (\\<p>\\<^sub>0[f, g] \\<cdot> h)\n     then THE l.\n             \\<p>\\<^sub>0[f, g] \\<cdot> l =\n             \\<p>\\<^sub>0[f, g] \\<cdot> h \\<and>\n             \\<p>\\<^sub>1[f, g] \\<cdot> l = \\<p>\\<^sub>1[f, g] \\<cdot> h\n     else null) =\n    h", "by auto"], ["proof (state)\nthis:\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle> =\n  h\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tuple_prj_spc [simp]:\n    assumes \"cospan f g\"\n    shows \"\\<langle>\\<p>\\<^sub>1[f, g] \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g]\\<rangle> = f \\<down>\\<down> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g]\\<rangle> =\n    f \\<down>\\<down> g", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g]\\<rangle> =\n    f \\<down>\\<down> g", "have \"\\<langle>\\<p>\\<^sub>1[f, g] \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g]\\<rangle> = \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot> (f \\<down>\\<down> g) \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> (f \\<down>\\<down> g)\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g]\\<rangle> =\n    \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             (f \\<down>\\<down>\n              g) \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\n  (f \\<down>\\<down> g)\\<rangle>", "using assms comp_arr_dom"], ["proof (prove)\nusing this:\n  cospan f g\n  \\<lbrakk>arr ?f; local.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot> ?a = ?f\n\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g]\\<rangle> =\n    \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             (f \\<down>\\<down>\n              g) \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\n  (f \\<down>\\<down> g)\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g]\\<rangle> =\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           (f \\<down>\\<down>\n            g) \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\n(f \\<down>\\<down> g)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g]\\<rangle> =\n    f \\<down>\\<down> g", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g]\\<rangle> =\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           (f \\<down>\\<down>\n            g) \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\n(f \\<down>\\<down> g)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g]\\<rangle> =\n    f \\<down>\\<down> g", "using assms tuple_prj"], ["proof (prove)\nusing this:\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g]\\<rangle> =\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           (f \\<down>\\<down>\n            g) \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\n(f \\<down>\\<down> g)\\<rangle>\n  cospan f g\n  \\<lbrakk>cospan ?f ?g; seq \\<p>\\<^sub>1[?f, ?g] ?h\\<rbrakk>\n  \\<Longrightarrow> \\<langle>\\<p>\\<^sub>1[?f, ?g] \\<cdot>\n                             ?h \\<lbrakk>?f, ?g\\<rbrakk> \\<p>\\<^sub>0[?f, ?g] \\<cdot>\n                   ?h\\<rangle> =\n                    ?h\n\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g]\\<rangle> =\n    f \\<down>\\<down> g", "by simp"], ["proof (state)\nthis:\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g]\\<rangle> =\n  f \\<down>\\<down> g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prj_joint_monic:\n    assumes \"cospan f g\" and \"seq \\<p>\\<^sub>1[f, g] h\" and \"seq \\<p>\\<^sub>1[f, g] h'\"\n    and \"\\<p>\\<^sub>0[f, g] \\<cdot> h = \\<p>\\<^sub>0[f, g] \\<cdot> h'\" and \"\\<p>\\<^sub>1[f, g] \\<cdot> h = \\<p>\\<^sub>1[f, g] \\<cdot> h'\"\n    shows \"h = h'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h = h'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. h = h'", "have \"h = \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot> h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h =\n    \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle>", "using assms tuple_prj [of f g h]"], ["proof (prove)\nusing this:\n  cospan f g\n  seq \\<p>\\<^sub>1[f, g] h\n  seq \\<p>\\<^sub>1[f, g] h'\n  \\<p>\\<^sub>0[f, g] \\<cdot> h = \\<p>\\<^sub>0[f, g] \\<cdot> h'\n  \\<p>\\<^sub>1[f, g] \\<cdot> h = \\<p>\\<^sub>1[f, g] \\<cdot> h'\n  \\<lbrakk>cospan f g; seq \\<p>\\<^sub>1[f, g] h\\<rbrakk>\n  \\<Longrightarrow> \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n                             h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\n                h\\<rangle> =\n                    h\n\ngoal (1 subgoal):\n 1. h =\n    \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle>", "by simp"], ["proof (state)\nthis:\n  h =\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle>\n\ngoal (1 subgoal):\n 1. h = h'", "also"], ["proof (state)\nthis:\n  h =\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle>\n\ngoal (1 subgoal):\n 1. h = h'", "have \"... = \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot> h' \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\nh\\<rangle> =\n    \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h' \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\n h'\\<rangle>", "using assms"], ["proof (prove)\nusing this:\n  cospan f g\n  seq \\<p>\\<^sub>1[f, g] h\n  seq \\<p>\\<^sub>1[f, g] h'\n  \\<p>\\<^sub>0[f, g] \\<cdot> h = \\<p>\\<^sub>0[f, g] \\<cdot> h'\n  \\<p>\\<^sub>1[f, g] \\<cdot> h = \\<p>\\<^sub>1[f, g] \\<cdot> h'\n\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\nh\\<rangle> =\n    \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h' \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\n h'\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle> =\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           h' \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h'\\<rangle>\n\ngoal (1 subgoal):\n 1. h = h'", "also"], ["proof (state)\nthis:\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           h \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h\\<rangle> =\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           h' \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot> h'\\<rangle>\n\ngoal (1 subgoal):\n 1. h = h'", "have \"... = h'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h' \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\n h'\\<rangle> =\n    h'", "using assms tuple_prj [of f g h']"], ["proof (prove)\nusing this:\n  cospan f g\n  seq \\<p>\\<^sub>1[f, g] h\n  seq \\<p>\\<^sub>1[f, g] h'\n  \\<p>\\<^sub>0[f, g] \\<cdot> h = \\<p>\\<^sub>0[f, g] \\<cdot> h'\n  \\<p>\\<^sub>1[f, g] \\<cdot> h = \\<p>\\<^sub>1[f, g] \\<cdot> h'\n  \\<lbrakk>cospan f g; seq \\<p>\\<^sub>1[f, g] h'\\<rbrakk>\n  \\<Longrightarrow> \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n                             h' \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\n                 h'\\<rangle> =\n                    h'\n\ngoal (1 subgoal):\n 1. \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n             h' \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\n h'\\<rangle> =\n    h'", "by simp"], ["proof (state)\nthis:\n  \\<langle>\\<p>\\<^sub>1[f, g] \\<cdot>\n           h' \\<lbrakk>f, g\\<rbrakk> \\<p>\\<^sub>0[f, g] \\<cdot>\n                                     h'\\<rangle> =\n  h'\n\ngoal (1 subgoal):\n 1. h = h'", "finally"], ["proof (chain)\npicking this:\n  h = h'", "show ?thesis"], ["proof (prove)\nusing this:\n  h = h'\n\ngoal (1 subgoal):\n 1. h = h'", "by blast"], ["proof (state)\nthis:\n  h = h'\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n      The pullback of an identity along an arbitrary arrow is an isomorphism.\n    \\<close>"], ["", "lemma iso_pullback_ide:\n    assumes \"cospan \\<mu> \\<nu>\" and \"ide \\<mu>\"\n    shows \"iso \\<p>\\<^sub>0[\\<mu>, \\<nu>]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.iso \\<p>\\<^sub>0[\\<mu>, \\<nu>]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. local.iso \\<p>\\<^sub>0[\\<mu>, \\<nu>]", "have \"inverse_arrows \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> dom \\<nu>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse_arrows \\<p>\\<^sub>0[\\<mu>, \\<nu>]\n     \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom \\<nu>\\<rangle>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ide (\\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n                  \\<nu>\\<rangle> \\<cdot>\n         \\<p>\\<^sub>0[\\<mu>, \\<nu>])\n 2. ide (\\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n         \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n                  \\<nu>\\<rangle>)", "show 1: \"ide (\\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> dom \\<nu>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide (\\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n         \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n                  \\<nu>\\<rangle>)", "using assms comp_arr_dom comp_cod_arr prj_tuple(1)"], ["proof (prove)\nusing this:\n  cospan \\<mu> \\<nu>\n  ide \\<mu>\n  \\<lbrakk>arr ?f; local.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot> ?a = ?f\n  \\<lbrakk>arr ?f; cod ?f = ?b\\<rbrakk> \\<Longrightarrow> ?b \\<cdot> ?f = ?f\n  commutative_square ?f ?g ?h ?k \\<Longrightarrow>\n  \\<p>\\<^sub>0[?f, ?g] \\<cdot>\n  \\<langle>?h \\<lbrakk>?f, ?g\\<rbrakk> ?k\\<rangle> =\n  ?k\n\ngoal (1 subgoal):\n 1. ide (\\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n         \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n                  \\<nu>\\<rangle>)", "by simp"], ["proof (state)\nthis:\n  ide (\\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n       \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n                \\<nu>\\<rangle>)\n\ngoal (1 subgoal):\n 1. ide (\\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n                  \\<nu>\\<rangle> \\<cdot>\n         \\<p>\\<^sub>0[\\<mu>, \\<nu>])", "show \"ide (\\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> dom \\<nu>\\<rangle> \\<cdot> \\<p>\\<^sub>0[\\<mu>, \\<nu>])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide (\\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n                  \\<nu>\\<rangle> \\<cdot>\n         \\<p>\\<^sub>0[\\<mu>, \\<nu>])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ide (\\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n                  \\<nu>\\<rangle> \\<cdot>\n         \\<p>\\<^sub>0[\\<mu>, \\<nu>])", "have \"\\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> dom \\<nu>\\<rangle> \\<cdot> \\<p>\\<^sub>0[\\<mu>, \\<nu>] = (\\<mu> \\<down>\\<down> \\<nu>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<mu> \\<down>\\<down> \\<nu>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<mu> \\<down>\\<down> \\<nu>", "have \"\\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> dom \\<nu>\\<rangle> \\<cdot> \\<p>\\<^sub>0[\\<mu>, \\<nu>] = \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "have \"\\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> dom \\<nu>\\<rangle> \\<cdot> \\<p>\\<^sub>0[\\<mu>, \\<nu>] = (\\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> dom \\<nu>\\<rangle>) \\<cdot> \\<p>\\<^sub>0[\\<mu>, \\<nu>]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    (\\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n     \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n              \\<nu>\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>]", "using assms 1 comp_reduce"], ["proof (prove)\nusing this:\n  cospan \\<mu> \\<nu>\n  ide \\<mu>\n  ide (\\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n       \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n                \\<nu>\\<rangle>)\n  \\<lbrakk>?f \\<cdot> ?g = ?k; seq ?f ?g; seq ?g ?h\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot> ?g \\<cdot> ?h = ?k \\<cdot> ?h\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    (\\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n     \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n              \\<nu>\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>]", "by blast"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  (\\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n   \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n            \\<nu>\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "also"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  (\\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n   \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n            \\<nu>\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "have \"... = \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n     \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n              \\<nu>\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "using assms prj_tuple(1) pullback_commutes comp_arr_dom comp_cod_arr"], ["proof (prove)\nusing this:\n  cospan \\<mu> \\<nu>\n  ide \\<mu>\n  commutative_square ?f ?g ?h ?k \\<Longrightarrow>\n  \\<p>\\<^sub>0[?f, ?g] \\<cdot>\n  \\<langle>?h \\<lbrakk>?f, ?g\\<rbrakk> ?k\\<rangle> =\n  ?k\n  cospan ?f ?g \\<Longrightarrow>\n  commutative_square ?f ?g \\<p>\\<^sub>1[?f, ?g] \\<p>\\<^sub>0[?f, ?g]\n  \\<lbrakk>arr ?f; local.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot> ?a = ?f\n  \\<lbrakk>arr ?f; cod ?f = ?b\\<rbrakk> \\<Longrightarrow> ?b \\<cdot> ?f = ?f\n\ngoal (1 subgoal):\n 1. (\\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n     \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n              \\<nu>\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "by simp"], ["proof (state)\nthis:\n  (\\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n   \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n            \\<nu>\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "finally"], ["proof (chain)\npicking this:\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "by blast"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\n\ngoal (1 subgoal):\n 1. \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<mu> \\<down>\\<down> \\<nu>", "moreover"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\n\ngoal (1 subgoal):\n 1. \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<mu> \\<down>\\<down> \\<nu>", "have \"\\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> dom \\<nu>\\<rangle> \\<cdot> \\<p>\\<^sub>0[\\<mu>, \\<nu>] = \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "have \"\\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> dom \\<nu>\\<rangle> \\<cdot> \\<p>\\<^sub>0[\\<mu>, \\<nu>] = (\\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> dom \\<nu>\\<rangle>) \\<cdot> \\<p>\\<^sub>0[\\<mu>, \\<nu>]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    (\\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n     \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n              \\<nu>\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>]", "using assms(2) comp_assoc"], ["proof (prove)\nusing this:\n  ide \\<mu>\n  (?h \\<cdot> ?g) \\<cdot> ?f = ?h \\<cdot> ?g \\<cdot> ?f\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    (\\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n     \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n              \\<nu>\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>]", "by simp"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  (\\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n   \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n            \\<nu>\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "also"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  (\\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n   \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n            \\<nu>\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "have \"... = \\<nu> \\<cdot> \\<p>\\<^sub>0[\\<mu>, \\<nu>]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n     \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n              \\<nu>\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<nu> \\<cdot> \\<p>\\<^sub>0[\\<mu>, \\<nu>]", "using assms comp_arr_dom comp_cod_arr prj_tuple(2)"], ["proof (prove)\nusing this:\n  cospan \\<mu> \\<nu>\n  ide \\<mu>\n  \\<lbrakk>arr ?f; local.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot> ?a = ?f\n  \\<lbrakk>arr ?f; cod ?f = ?b\\<rbrakk> \\<Longrightarrow> ?b \\<cdot> ?f = ?f\n  commutative_square ?f ?g ?h ?k \\<Longrightarrow>\n  \\<p>\\<^sub>1[?f, ?g] \\<cdot>\n  \\<langle>?h \\<lbrakk>?f, ?g\\<rbrakk> ?k\\<rangle> =\n  ?h\n\ngoal (1 subgoal):\n 1. (\\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n     \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n              \\<nu>\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<nu> \\<cdot> \\<p>\\<^sub>0[\\<mu>, \\<nu>]", "by fastforce"], ["proof (state)\nthis:\n  (\\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n   \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n            \\<nu>\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<nu> \\<cdot> \\<p>\\<^sub>0[\\<mu>, \\<nu>]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "also"], ["proof (state)\nthis:\n  (\\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n   \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n            \\<nu>\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<nu> \\<cdot> \\<p>\\<^sub>0[\\<mu>, \\<nu>]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "have \"... = \\<mu> \\<cdot> \\<p>\\<^sub>1[\\<mu>, \\<nu>]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nu> \\<cdot> \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<mu> \\<cdot> \\<p>\\<^sub>1[\\<mu>, \\<nu>]", "using assms pullback_commutes commutative_square_def"], ["proof (prove)\nusing this:\n  cospan \\<mu> \\<nu>\n  ide \\<mu>\n  cospan ?f ?g \\<Longrightarrow>\n  commutative_square ?f ?g \\<p>\\<^sub>1[?f, ?g] \\<p>\\<^sub>0[?f, ?g]\n  commutative_square ?f ?g ?h ?k \\<equiv>\n  cospan ?f ?g \\<and>\n  span ?h ?k \\<and>\n  local.dom ?f = cod ?h \\<and> ?f \\<cdot> ?h = ?g \\<cdot> ?k\n\ngoal (1 subgoal):\n 1. \\<nu> \\<cdot> \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<mu> \\<cdot> \\<p>\\<^sub>1[\\<mu>, \\<nu>]", "by simp"], ["proof (state)\nthis:\n  \\<nu> \\<cdot> \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<mu> \\<cdot> \\<p>\\<^sub>1[\\<mu>, \\<nu>]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "also"], ["proof (state)\nthis:\n  \\<nu> \\<cdot> \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<mu> \\<cdot> \\<p>\\<^sub>1[\\<mu>, \\<nu>]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "have \"... = \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> \\<cdot> \\<p>\\<^sub>1[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "using assms comp_arr_dom comp_cod_arr pullback_commutes commutative_square_def"], ["proof (prove)\nusing this:\n  cospan \\<mu> \\<nu>\n  ide \\<mu>\n  \\<lbrakk>arr ?f; local.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot> ?a = ?f\n  \\<lbrakk>arr ?f; cod ?f = ?b\\<rbrakk> \\<Longrightarrow> ?b \\<cdot> ?f = ?f\n  cospan ?f ?g \\<Longrightarrow>\n  commutative_square ?f ?g \\<p>\\<^sub>1[?f, ?g] \\<p>\\<^sub>0[?f, ?g]\n  commutative_square ?f ?g ?h ?k \\<equiv>\n  cospan ?f ?g \\<and>\n  span ?h ?k \\<and>\n  local.dom ?f = cod ?h \\<and> ?f \\<cdot> ?h = ?g \\<cdot> ?k\n\ngoal (1 subgoal):\n 1. \\<mu> \\<cdot> \\<p>\\<^sub>1[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "by simp"], ["proof (state)\nthis:\n  \\<mu> \\<cdot> \\<p>\\<^sub>1[\\<mu>, \\<nu>] =\n  \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "finally"], ["proof (chain)\npicking this:\n  \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n    \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "by simp"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\n\ngoal (1 subgoal):\n 1. \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<mu> \\<down>\\<down> \\<nu>", "ultimately"], ["proof (chain)\npicking this:\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\n  \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\n  \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\n\ngoal (1 subgoal):\n 1. \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<mu> \\<down>\\<down> \\<nu>", "using assms prj0_in_hom prj1_in_hom comp_arr_dom prj1_simps(1-2) prj_joint_monic"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\n  \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot>\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<p>\\<^sub>1[\\<mu>, \\<nu>] \\<cdot> (\\<mu> \\<down>\\<down> \\<nu>)\n  cospan \\<mu> \\<nu>\n  ide \\<mu>\n  \\<lbrakk>cospan ?f ?g; ?a = ?f \\<down>\\<down> ?g;\n   ?b = local.dom ?g\\<rbrakk>\n  \\<Longrightarrow> \\<guillemotleft>\\<p>\\<^sub>0[?f, ?g] : ?a \\<rightarrow> ?b\\<guillemotright>\n  \\<lbrakk>cospan ?f ?g; ?a = ?f \\<down>\\<down> ?g;\n   ?b = local.dom ?f\\<rbrakk>\n  \\<Longrightarrow> \\<guillemotleft>\\<p>\\<^sub>1[?f, ?g] : ?a \\<rightarrow> ?b\\<guillemotright>\n  \\<lbrakk>arr ?f; local.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot> ?a = ?f\n  cospan ?f ?g \\<Longrightarrow> arr \\<p>\\<^sub>1[?f, ?g]\n  cospan ?f ?g \\<Longrightarrow>\n  local.dom \\<p>\\<^sub>1[?f, ?g] = ?f \\<down>\\<down> ?g\n  \\<lbrakk>cospan ?f ?g; seq \\<p>\\<^sub>1[?f, ?g] ?h;\n   seq \\<p>\\<^sub>1[?f, ?g] ?h';\n   \\<p>\\<^sub>0[?f, ?g] \\<cdot> ?h = \\<p>\\<^sub>0[?f, ?g] \\<cdot> ?h';\n   \\<p>\\<^sub>1[?f, ?g] \\<cdot> ?h =\n   \\<p>\\<^sub>1[?f, ?g] \\<cdot> ?h'\\<rbrakk>\n  \\<Longrightarrow> ?h = ?h'\n\ngoal (1 subgoal):\n 1. \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n             \\<nu>\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n    \\<mu> \\<down>\\<down> \\<nu>", "by metis"], ["proof (state)\nthis:\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<mu> \\<down>\\<down> \\<nu>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<mu> \\<down>\\<down> \\<nu>\n\ngoal (1 subgoal):\n 1. ide (\\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n                  \\<nu>\\<rangle> \\<cdot>\n         \\<p>\\<^sub>0[\\<mu>, \\<nu>])", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<mu> \\<down>\\<down> \\<nu>\n\ngoal (1 subgoal):\n 1. ide (\\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n                  \\<nu>\\<rangle> \\<cdot>\n         \\<p>\\<^sub>0[\\<mu>, \\<nu>])", "using assms"], ["proof (prove)\nusing this:\n  \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n           \\<nu>\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[\\<mu>, \\<nu>] =\n  \\<mu> \\<down>\\<down> \\<nu>\n  cospan \\<mu> \\<nu>\n  ide \\<mu>\n\ngoal (1 subgoal):\n 1. ide (\\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n                  \\<nu>\\<rangle> \\<cdot>\n         \\<p>\\<^sub>0[\\<mu>, \\<nu>])", "by auto"], ["proof (state)\nthis:\n  ide (\\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n                \\<nu>\\<rangle> \\<cdot>\n       \\<p>\\<^sub>0[\\<mu>, \\<nu>])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ide (\\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom\n                \\<nu>\\<rangle> \\<cdot>\n       \\<p>\\<^sub>0[\\<mu>, \\<nu>])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inverse_arrows \\<p>\\<^sub>0[\\<mu>, \\<nu>]\n   \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom \\<nu>\\<rangle>\n\ngoal (1 subgoal):\n 1. local.iso \\<p>\\<^sub>0[\\<mu>, \\<nu>]", "thus ?thesis"], ["proof (prove)\nusing this:\n  inverse_arrows \\<p>\\<^sub>0[\\<mu>, \\<nu>]\n   \\<langle>\\<nu> \\<lbrakk>\\<mu>, \\<nu>\\<rbrakk> local.dom \\<nu>\\<rangle>\n\ngoal (1 subgoal):\n 1. local.iso \\<p>\\<^sub>0[\\<mu>, \\<nu>]", "by auto"], ["proof (state)\nthis:\n  local.iso \\<p>\\<^sub>0[\\<mu>, \\<nu>]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma comp_tuple_arr:\n    assumes \"commutative_square f g h k\" and \"seq h l\"\n    shows \"\\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l = \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "have \"\\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l = \\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "have \"\\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l = (\\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>) \\<cdot> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    (\\<p>\\<^sub>0[f, g] \\<cdot>\n     \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>) \\<cdot>\n    l", "using comp_assoc"], ["proof (prove)\nusing this:\n  (?h \\<cdot> ?g) \\<cdot> ?f = ?h \\<cdot> ?g \\<cdot> ?f\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    (\\<p>\\<^sub>0[f, g] \\<cdot>\n     \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>) \\<cdot>\n    l", "by simp"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  (\\<p>\\<^sub>0[f, g] \\<cdot>\n   \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>) \\<cdot>\n  l\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "also"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  (\\<p>\\<^sub>0[f, g] \\<cdot>\n   \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>) \\<cdot>\n  l\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "have \"... = \\<p>\\<^sub>0[f, g] \\<cdot> \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<p>\\<^sub>0[f, g] \\<cdot>\n     \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>) \\<cdot>\n    l =\n    \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "using assms commutative_square_comp_arr"], ["proof (prove)\nusing this:\n  commutative_square f g h k\n  seq h l\n  \\<lbrakk>commutative_square ?f ?g ?h ?k; seq ?h ?l\\<rbrakk>\n  \\<Longrightarrow> commutative_square ?f ?g (?h \\<cdot> ?l) (?k \\<cdot> ?l)\n\ngoal (1 subgoal):\n 1. (\\<p>\\<^sub>0[f, g] \\<cdot>\n     \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>) \\<cdot>\n    l =\n    \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "by auto"], ["proof (state)\nthis:\n  (\\<p>\\<^sub>0[f, g] \\<cdot>\n   \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>) \\<cdot>\n  l =\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "finally"], ["proof (chain)\npicking this:\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "by blast"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "have \"\\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l = \\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "have \"\\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l = (\\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>) \\<cdot> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    (\\<p>\\<^sub>1[f, g] \\<cdot>\n     \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>) \\<cdot>\n    l", "using comp_assoc"], ["proof (prove)\nusing this:\n  (?h \\<cdot> ?g) \\<cdot> ?f = ?h \\<cdot> ?g \\<cdot> ?f\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    (\\<p>\\<^sub>1[f, g] \\<cdot>\n     \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>) \\<cdot>\n    l", "by simp"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  (\\<p>\\<^sub>1[f, g] \\<cdot>\n   \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>) \\<cdot>\n  l\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "also"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  (\\<p>\\<^sub>1[f, g] \\<cdot>\n   \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>) \\<cdot>\n  l\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "have \"... = \\<p>\\<^sub>1[f, g] \\<cdot> \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<p>\\<^sub>1[f, g] \\<cdot>\n     \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>) \\<cdot>\n    l =\n    \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "using assms commutative_square_comp_arr"], ["proof (prove)\nusing this:\n  commutative_square f g h k\n  seq h l\n  \\<lbrakk>commutative_square ?f ?g ?h ?k; seq ?h ?l\\<rbrakk>\n  \\<Longrightarrow> commutative_square ?f ?g (?h \\<cdot> ?l) (?k \\<cdot> ?l)\n\ngoal (1 subgoal):\n 1. (\\<p>\\<^sub>1[f, g] \\<cdot>\n     \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>) \\<cdot>\n    l =\n    \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "by auto"], ["proof (state)\nthis:\n  (\\<p>\\<^sub>1[f, g] \\<cdot>\n   \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle>) \\<cdot>\n  l =\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "finally"], ["proof (chain)\npicking this:\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "by blast"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "have \"seq \\<p>\\<^sub>1[f, g] (\\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. seq \\<p>\\<^sub>1[f, g]\n     (\\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l)", "using assms tuple_in_hom prj1_in_hom"], ["proof (prove)\nusing this:\n  commutative_square f g h k\n  seq h l\n  commutative_square ?f ?g ?h ?k \\<Longrightarrow>\n  \\<guillemotleft>\\<langle>?h \\<lbrakk>?f, ?g\\<rbrakk> ?k\\<rangle> : local.dom\n                                ?h \\<rightarrow> ?f \\<down>\\<down>\n           ?g\\<guillemotright>\n  \\<lbrakk>cospan ?f ?g; ?a = ?f \\<down>\\<down> ?g;\n   ?b = local.dom ?f\\<rbrakk>\n  \\<Longrightarrow> \\<guillemotleft>\\<p>\\<^sub>1[?f, ?g] : ?a \\<rightarrow> ?b\\<guillemotright>\n\ngoal (1 subgoal):\n 1. seq \\<p>\\<^sub>1[f, g]\n     (\\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l)", "by fastforce"], ["proof (state)\nthis:\n  seq \\<p>\\<^sub>1[f, g]\n   (\\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l)\n\ngoal (1 subgoal):\n 1. \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n  seq \\<p>\\<^sub>1[f, g]\n   (\\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n  seq \\<p>\\<^sub>1[f, g]\n   (\\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l)\n\ngoal (1 subgoal):\n 1. \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "using assms prj_joint_monic [of f g \"\\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l\" \"\\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\"]"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n  seq \\<p>\\<^sub>1[f, g]\n   (\\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l)\n  commutative_square f g h k\n  seq h l\n  \\<lbrakk>cospan f g;\n   seq \\<p>\\<^sub>1[f, g]\n    (\\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l);\n   seq \\<p>\\<^sub>1[f, g]\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>;\n   \\<p>\\<^sub>0[f, g] \\<cdot>\n   \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n   \\<p>\\<^sub>0[f, g] \\<cdot>\n   \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>;\n   \\<p>\\<^sub>1[f, g] \\<cdot>\n   \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n   \\<p>\\<^sub>1[f, g] \\<cdot>\n   \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n                    \\<langle>h \\<cdot>\n                             l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n    \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>", "by auto"], ["proof (state)\nthis:\n  \\<langle>h \\<lbrakk>f, g\\<rbrakk> k\\<rangle> \\<cdot> l =\n  \\<langle>h \\<cdot> l \\<lbrakk>f, g\\<rbrakk> k \\<cdot> l\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pullback_arr_cod:\n    assumes \"arr f\"\n    shows \"inverse_arrows \\<p>\\<^sub>1[f, cod f] \\<langle>dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>\"\n    and \"inverse_arrows \\<p>\\<^sub>0[cod f, f] \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> dom f\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse_arrows \\<p>\\<^sub>1[f, cod f]\n     \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> &&&\n    inverse_arrows \\<p>\\<^sub>0[cod f, f]\n     \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. inverse_arrows \\<p>\\<^sub>1[f, cod f]\n     \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>\n 2. inverse_arrows \\<p>\\<^sub>0[cod f, f]\n     \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>", "show \"inverse_arrows \\<p>\\<^sub>1[f, cod f] \\<langle>dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse_arrows \\<p>\\<^sub>1[f, cod f]\n     \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ide (\\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n         \\<p>\\<^sub>1[f, cod f])\n 2. ide (\\<p>\\<^sub>1[f, cod f] \\<cdot>\n         \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>)", "show \"ide (\\<langle>dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot> \\<p>\\<^sub>1[f, cod f])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide (\\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n         \\<p>\\<^sub>1[f, cod f])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ide (\\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n         \\<p>\\<^sub>1[f, cod f])", "have \"\\<langle>dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot> \\<p>\\<^sub>1[f, cod f] = f \\<down>\\<down> cod f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    f \\<down>\\<down> cod f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    f \\<down>\\<down> cod f", "have \"\\<p>\\<^sub>0[f, cod f] \\<cdot> \\<langle>dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot> \\<p>\\<^sub>1[f, cod f] = \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, cod f] \\<cdot>\n    \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, cod f] \\<cdot>\n    \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "have \"\\<p>\\<^sub>0[f, cod f] \\<cdot> \\<langle>dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot> \\<p>\\<^sub>1[f, cod f] =\n                    (\\<p>\\<^sub>0[f, cod f] \\<cdot> \\<langle>dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>) \\<cdot> \\<p>\\<^sub>1[f, cod f]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, cod f] \\<cdot>\n    \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    (\\<p>\\<^sub>0[f, cod f] \\<cdot>\n     \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>1[f, cod f]", "using comp_assoc"], ["proof (prove)\nusing this:\n  (?h \\<cdot> ?g) \\<cdot> ?f = ?h \\<cdot> ?g \\<cdot> ?f\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, cod f] \\<cdot>\n    \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    (\\<p>\\<^sub>0[f, cod f] \\<cdot>\n     \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>1[f, cod f]", "by simp"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  (\\<p>\\<^sub>0[f, cod f] \\<cdot>\n   \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>1[f, cod f]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, cod f] \\<cdot>\n    \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "also"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  (\\<p>\\<^sub>0[f, cod f] \\<cdot>\n   \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>1[f, cod f]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, cod f] \\<cdot>\n    \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "have \"... = \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<p>\\<^sub>0[f, cod f] \\<cdot>\n     \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "using assms pullback_commutes [of f \"cod f\"] comp_arr_dom comp_cod_arr"], ["proof (prove)\nusing this:\n  arr f\n  cospan f (cod f) \\<Longrightarrow>\n  commutative_square f (cod f) \\<p>\\<^sub>1[f, cod f] \\<p>\\<^sub>0[f, cod f]\n  \\<lbrakk>arr ?f; local.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot> ?a = ?f\n  \\<lbrakk>arr ?f; cod ?f = ?b\\<rbrakk> \\<Longrightarrow> ?b \\<cdot> ?f = ?f\n\ngoal (1 subgoal):\n 1. (\\<p>\\<^sub>0[f, cod f] \\<cdot>\n     \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "by auto"], ["proof (state)\nthis:\n  (\\<p>\\<^sub>0[f, cod f] \\<cdot>\n   \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, cod f] \\<cdot>\n    \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "finally"], ["proof (chain)\npicking this:\n  \\<p>\\<^sub>0[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, cod f] \\<cdot>\n    \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "by blast"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\n\ngoal (1 subgoal):\n 1. \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    f \\<down>\\<down> cod f", "moreover"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\n\ngoal (1 subgoal):\n 1. \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    f \\<down>\\<down> cod f", "have \"\\<p>\\<^sub>1[f, cod f] \\<cdot> \\<langle>dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot> \\<p>\\<^sub>1[f, cod f] = \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, cod f] \\<cdot>\n    \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, cod f] \\<cdot>\n    \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "have \"\\<p>\\<^sub>1[f, cod f] \\<cdot> \\<langle>dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot> \\<p>\\<^sub>1[f, cod f] =\n                    (\\<p>\\<^sub>1[f, cod f] \\<cdot> \\<langle>dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>) \\<cdot> \\<p>\\<^sub>1[f, cod f]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, cod f] \\<cdot>\n    \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    (\\<p>\\<^sub>1[f, cod f] \\<cdot>\n     \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>1[f, cod f]", "using assms comp_assoc"], ["proof (prove)\nusing this:\n  arr f\n  (?h \\<cdot> ?g) \\<cdot> ?f = ?h \\<cdot> ?g \\<cdot> ?f\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, cod f] \\<cdot>\n    \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    (\\<p>\\<^sub>1[f, cod f] \\<cdot>\n     \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>1[f, cod f]", "by presburger"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  (\\<p>\\<^sub>1[f, cod f] \\<cdot>\n   \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>1[f, cod f]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, cod f] \\<cdot>\n    \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "also"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  (\\<p>\\<^sub>1[f, cod f] \\<cdot>\n   \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>1[f, cod f]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, cod f] \\<cdot>\n    \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "have \"... = \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<p>\\<^sub>1[f, cod f] \\<cdot>\n     \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "using assms comp_arr_dom comp_cod_arr"], ["proof (prove)\nusing this:\n  arr f\n  \\<lbrakk>arr ?f; local.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot> ?a = ?f\n  \\<lbrakk>arr ?f; cod ?f = ?b\\<rbrakk> \\<Longrightarrow> ?b \\<cdot> ?f = ?f\n\ngoal (1 subgoal):\n 1. (\\<p>\\<^sub>1[f, cod f] \\<cdot>\n     \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "by simp"], ["proof (state)\nthis:\n  (\\<p>\\<^sub>1[f, cod f] \\<cdot>\n   \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, cod f] \\<cdot>\n    \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "finally"], ["proof (chain)\npicking this:\n  \\<p>\\<^sub>1[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>1[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[f, cod f] \\<cdot>\n    \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "by blast"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\n\ngoal (1 subgoal):\n 1. \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    f \\<down>\\<down> cod f", "ultimately"], ["proof (chain)\npicking this:\n  \\<p>\\<^sub>0[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\n  \\<p>\\<^sub>1[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\n  \\<p>\\<^sub>1[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\n\ngoal (1 subgoal):\n 1. \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    f \\<down>\\<down> cod f", "using assms\n                    prj_joint_monic\n                      [of f \"cod f\" \"\\<langle>dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot> \\<p>\\<^sub>1[f, cod f]\" \"f \\<down>\\<down> cod f\"]"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\n  \\<p>\\<^sub>1[f, cod f] \\<cdot>\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\n  arr f\n  \\<lbrakk>cospan f (cod f);\n   seq \\<p>\\<^sub>1[f, cod f]\n    (\\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n     \\<p>\\<^sub>1[f, cod f]);\n   seq \\<p>\\<^sub>1[f, cod f] (f \\<down>\\<down> cod f);\n   \\<p>\\<^sub>0[f, cod f] \\<cdot>\n   \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n   \\<p>\\<^sub>1[f, cod f] =\n   \\<p>\\<^sub>0[f, cod f] \\<cdot> (f \\<down>\\<down> cod f);\n   \\<p>\\<^sub>1[f, cod f] \\<cdot>\n   \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n   \\<p>\\<^sub>1[f, cod f] =\n   \\<p>\\<^sub>1[f, cod f] \\<cdot> (f \\<down>\\<down> cod f)\\<rbrakk>\n  \\<Longrightarrow> \\<langle>local.dom\n                              f \\<lbrakk>f, cod\n       f\\<rbrakk> f\\<rangle> \\<cdot>\n                    \\<p>\\<^sub>1[f, cod f] =\n                    f \\<down>\\<down> cod f\n\ngoal (1 subgoal):\n 1. \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>1[f, cod f] =\n    f \\<down>\\<down> cod f", "by simp"], ["proof (state)\nthis:\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  f \\<down>\\<down> cod f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  f \\<down>\\<down> cod f\n\ngoal (1 subgoal):\n 1. ide (\\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n         \\<p>\\<^sub>1[f, cod f])", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  f \\<down>\\<down> cod f\n\ngoal (1 subgoal):\n 1. ide (\\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n         \\<p>\\<^sub>1[f, cod f])", "using assms arr_cod cod_cod prj1_simps_arr"], ["proof (prove)\nusing this:\n  \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>1[f, cod f] =\n  f \\<down>\\<down> cod f\n  arr f\n  arr ?f \\<Longrightarrow> arr (cod ?f)\n  arr ?f \\<Longrightarrow> cod (cod ?f) = cod ?f\n  arr \\<p>\\<^sub>1[?f, ?g] = cospan ?f ?g\n\ngoal (1 subgoal):\n 1. ide (\\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n         \\<p>\\<^sub>1[f, cod f])", "by simp"], ["proof (state)\nthis:\n  ide (\\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n       \\<p>\\<^sub>1[f, cod f])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ide (\\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle> \\<cdot>\n       \\<p>\\<^sub>1[f, cod f])\n\ngoal (1 subgoal):\n 1. ide (\\<p>\\<^sub>1[f, cod f] \\<cdot>\n         \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>)", "show \"ide (\\<p>\\<^sub>1[f, cod f] \\<cdot> \\<langle>dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide (\\<p>\\<^sub>1[f, cod f] \\<cdot>\n         \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>)", "using assms comp_arr_dom comp_cod_arr"], ["proof (prove)\nusing this:\n  arr f\n  \\<lbrakk>arr ?f; local.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot> ?a = ?f\n  \\<lbrakk>arr ?f; cod ?f = ?b\\<rbrakk> \\<Longrightarrow> ?b \\<cdot> ?f = ?f\n\ngoal (1 subgoal):\n 1. ide (\\<p>\\<^sub>1[f, cod f] \\<cdot>\n         \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>)", "by fastforce"], ["proof (state)\nthis:\n  ide (\\<p>\\<^sub>1[f, cod f] \\<cdot>\n       \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inverse_arrows \\<p>\\<^sub>1[f, cod f]\n   \\<langle>local.dom f \\<lbrakk>f, cod f\\<rbrakk> f\\<rangle>\n\ngoal (1 subgoal):\n 1. inverse_arrows \\<p>\\<^sub>0[cod f, f]\n     \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>", "show \"inverse_arrows \\<p>\\<^sub>0[cod f, f] \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> dom f\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse_arrows \\<p>\\<^sub>0[cod f, f]\n     \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ide (\\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n         \\<p>\\<^sub>0[cod f, f])\n 2. ide (\\<p>\\<^sub>0[cod f, f] \\<cdot>\n         \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>)", "show \"ide (\\<p>\\<^sub>0[cod f, f] \\<cdot> \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> dom f\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide (\\<p>\\<^sub>0[cod f, f] \\<cdot>\n         \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>)", "using assms comp_arr_dom comp_cod_arr"], ["proof (prove)\nusing this:\n  arr f\n  \\<lbrakk>arr ?f; local.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot> ?a = ?f\n  \\<lbrakk>arr ?f; cod ?f = ?b\\<rbrakk> \\<Longrightarrow> ?b \\<cdot> ?f = ?f\n\ngoal (1 subgoal):\n 1. ide (\\<p>\\<^sub>0[cod f, f] \\<cdot>\n         \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>)", "by simp"], ["proof (state)\nthis:\n  ide (\\<p>\\<^sub>0[cod f, f] \\<cdot>\n       \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>)\n\ngoal (1 subgoal):\n 1. ide (\\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n         \\<p>\\<^sub>0[cod f, f])", "show \"ide (\\<langle>f \\<lbrakk>cod f, f\\<rbrakk> dom f\\<rangle> \\<cdot> \\<p>\\<^sub>0[cod f, f])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide (\\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n         \\<p>\\<^sub>0[cod f, f])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ide (\\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n         \\<p>\\<^sub>0[cod f, f])", "have \"\\<langle>f \\<lbrakk>cod f, f\\<rbrakk> dom f\\<rangle> \\<cdot> \\<p>\\<^sub>0[cod f, f] = cod f \\<down>\\<down> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    cod f \\<down>\\<down> f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    cod f \\<down>\\<down> f", "have \"\\<p>\\<^sub>0[cod f, f] \\<cdot> \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> dom f\\<rangle> \\<cdot> \\<p>\\<^sub>0[cod f, f] = \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "have \"\\<p>\\<^sub>0[cod f, f] \\<cdot> \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> dom f\\<rangle> \\<cdot> \\<p>\\<^sub>0[cod f, f] =\n                    (\\<p>\\<^sub>0[cod f, f] \\<cdot> \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> dom f\\<rangle>) \\<cdot> \\<p>\\<^sub>0[cod f, f]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    (\\<p>\\<^sub>0[cod f, f] \\<cdot>\n     \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>0[cod f, f]", "using comp_assoc"], ["proof (prove)\nusing this:\n  (?h \\<cdot> ?g) \\<cdot> ?f = ?h \\<cdot> ?g \\<cdot> ?f\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    (\\<p>\\<^sub>0[cod f, f] \\<cdot>\n     \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>0[cod f, f]", "by simp"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  (\\<p>\\<^sub>0[cod f, f] \\<cdot>\n   \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>0[cod f, f]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "also"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  (\\<p>\\<^sub>0[cod f, f] \\<cdot>\n   \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>0[cod f, f]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "have \"... = dom f \\<cdot> \\<p>\\<^sub>0[cod f, f]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<p>\\<^sub>0[cod f, f] \\<cdot>\n     \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    local.dom f \\<cdot> \\<p>\\<^sub>0[cod f, f]", "using assms comp_arr_dom comp_cod_arr"], ["proof (prove)\nusing this:\n  arr f\n  \\<lbrakk>arr ?f; local.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot> ?a = ?f\n  \\<lbrakk>arr ?f; cod ?f = ?b\\<rbrakk> \\<Longrightarrow> ?b \\<cdot> ?f = ?f\n\ngoal (1 subgoal):\n 1. (\\<p>\\<^sub>0[cod f, f] \\<cdot>\n     \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    local.dom f \\<cdot> \\<p>\\<^sub>0[cod f, f]", "by simp"], ["proof (state)\nthis:\n  (\\<p>\\<^sub>0[cod f, f] \\<cdot>\n   \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  local.dom f \\<cdot> \\<p>\\<^sub>0[cod f, f]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "also"], ["proof (state)\nthis:\n  (\\<p>\\<^sub>0[cod f, f] \\<cdot>\n   \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  local.dom f \\<cdot> \\<p>\\<^sub>0[cod f, f]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "have \"... = \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.dom f \\<cdot> \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "using assms comp_arr_dom comp_cod_arr"], ["proof (prove)\nusing this:\n  arr f\n  \\<lbrakk>arr ?f; local.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot> ?a = ?f\n  \\<lbrakk>arr ?f; cod ?f = ?b\\<rbrakk> \\<Longrightarrow> ?b \\<cdot> ?f = ?f\n\ngoal (1 subgoal):\n 1. local.dom f \\<cdot> \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "by simp"], ["proof (state)\nthis:\n  local.dom f \\<cdot> \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "finally"], ["proof (chain)\npicking this:\n  \\<p>\\<^sub>0[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "using prj0_in_hom"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\n  \\<lbrakk>cospan ?f ?g; ?a = ?f \\<down>\\<down> ?g;\n   ?b = local.dom ?g\\<rbrakk>\n  \\<Longrightarrow> \\<guillemotleft>\\<p>\\<^sub>0[?f, ?g] : ?a \\<rightarrow> ?b\\<guillemotright>\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "by blast"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\n\ngoal (1 subgoal):\n 1. \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    cod f \\<down>\\<down> f", "moreover"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\n\ngoal (1 subgoal):\n 1. \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    cod f \\<down>\\<down> f", "have \"\\<p>\\<^sub>1[cod f, f] \\<cdot> \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> dom f\\<rangle> \\<cdot> \\<p>\\<^sub>0[cod f, f] = \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "have \"\\<p>\\<^sub>1[cod f, f] \\<cdot> \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> dom f\\<rangle> \\<cdot> \\<p>\\<^sub>0[cod f, f] =\n                    (\\<p>\\<^sub>1[cod f, f] \\<cdot> \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> dom f\\<rangle>) \\<cdot> \\<p>\\<^sub>0[cod f, f]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    (\\<p>\\<^sub>1[cod f, f] \\<cdot>\n     \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>0[cod f, f]", "using comp_assoc"], ["proof (prove)\nusing this:\n  (?h \\<cdot> ?g) \\<cdot> ?f = ?h \\<cdot> ?g \\<cdot> ?f\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    (\\<p>\\<^sub>1[cod f, f] \\<cdot>\n     \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>0[cod f, f]", "by simp"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  (\\<p>\\<^sub>1[cod f, f] \\<cdot>\n   \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>0[cod f, f]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "also"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  (\\<p>\\<^sub>1[cod f, f] \\<cdot>\n   \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>0[cod f, f]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "have \"... = \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<p>\\<^sub>1[cod f, f] \\<cdot>\n     \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "using assms pullback_commutes [of \"cod f\" f] comp_arr_dom comp_cod_arr"], ["proof (prove)\nusing this:\n  arr f\n  cospan (cod f) f \\<Longrightarrow>\n  commutative_square (cod f) f \\<p>\\<^sub>1[cod f, f] \\<p>\\<^sub>0[cod f, f]\n  \\<lbrakk>arr ?f; local.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot> ?a = ?f\n  \\<lbrakk>arr ?f; cod ?f = ?b\\<rbrakk> \\<Longrightarrow> ?b \\<cdot> ?f = ?f\n\ngoal (1 subgoal):\n 1. (\\<p>\\<^sub>1[cod f, f] \\<cdot>\n     \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>) \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "by auto"], ["proof (state)\nthis:\n  (\\<p>\\<^sub>1[cod f, f] \\<cdot>\n   \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>) \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "finally"], ["proof (chain)\npicking this:\n  \\<p>\\<^sub>1[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>1[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>1[cod f, f] \\<cdot>\n    \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "by blast"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<p>\\<^sub>1[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\n\ngoal (1 subgoal):\n 1. \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    cod f \\<down>\\<down> f", "ultimately"], ["proof (chain)\npicking this:\n  \\<p>\\<^sub>0[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\n  \\<p>\\<^sub>1[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\n  \\<p>\\<^sub>1[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\n\ngoal (1 subgoal):\n 1. \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    cod f \\<down>\\<down> f", "using assms prj_joint_monic [of \"cod f\" f \"\\<langle>f \\<lbrakk>cod f, f\\<rbrakk> dom f\\<rangle> \\<cdot> \\<p>\\<^sub>0[cod f, f]\"]"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>0[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\n  \\<p>\\<^sub>1[cod f, f] \\<cdot>\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  \\<p>\\<^sub>1[cod f, f] \\<cdot> (cod f \\<down>\\<down> f)\n  arr f\n  \\<lbrakk>cospan (cod f) f;\n   seq \\<p>\\<^sub>1[cod f, f]\n    (\\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n     \\<p>\\<^sub>0[cod f, f]);\n   seq \\<p>\\<^sub>1[cod f, f] ?h';\n   \\<p>\\<^sub>0[cod f, f] \\<cdot>\n   \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n   \\<p>\\<^sub>0[cod f, f] =\n   \\<p>\\<^sub>0[cod f, f] \\<cdot> ?h';\n   \\<p>\\<^sub>1[cod f, f] \\<cdot>\n   \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n   \\<p>\\<^sub>0[cod f, f] =\n   \\<p>\\<^sub>1[cod f, f] \\<cdot> ?h'\\<rbrakk>\n  \\<Longrightarrow> \\<langle>f \\<lbrakk>cod\n   f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n                    \\<p>\\<^sub>0[cod f, f] =\n                    ?h'\n\ngoal (1 subgoal):\n 1. \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n    \\<p>\\<^sub>0[cod f, f] =\n    cod f \\<down>\\<down> f", "by simp"], ["proof (state)\nthis:\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  cod f \\<down>\\<down> f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  cod f \\<down>\\<down> f\n\ngoal (1 subgoal):\n 1. ide (\\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n         \\<p>\\<^sub>0[cod f, f])", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  cod f \\<down>\\<down> f\n\ngoal (1 subgoal):\n 1. ide (\\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n         \\<p>\\<^sub>0[cod f, f])", "using assms"], ["proof (prove)\nusing this:\n  \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n  \\<p>\\<^sub>0[cod f, f] =\n  cod f \\<down>\\<down> f\n  arr f\n\ngoal (1 subgoal):\n 1. ide (\\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n         \\<p>\\<^sub>0[cod f, f])", "by simp"], ["proof (state)\nthis:\n  ide (\\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n       \\<p>\\<^sub>0[cod f, f])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ide (\\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle> \\<cdot>\n       \\<p>\\<^sub>0[cod f, f])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inverse_arrows \\<p>\\<^sub>0[cod f, f]\n   \\<langle>f \\<lbrakk>cod f, f\\<rbrakk> local.dom f\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n      The pullback of a monomorphism along itself is automatically symmetric: the left\n      and right projections are equal.\n    \\<close>"], ["", "lemma pullback_mono_self:\n    assumes \"mono f\"\n    shows \"\\<p>\\<^sub>0[f, f] = \\<p>\\<^sub>1[f, f]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, f] = \\<p>\\<^sub>1[f, f]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, f] = \\<p>\\<^sub>1[f, f]", "have \"f \\<cdot> \\<p>\\<^sub>0[f, f] = f \\<cdot> \\<p>\\<^sub>1[f, f]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<cdot> \\<p>\\<^sub>0[f, f] = f \\<cdot> \\<p>\\<^sub>1[f, f]", "using assms pullback_commutes [of f f]"], ["proof (prove)\nusing this:\n  local.mono f\n  cospan f f \\<Longrightarrow>\n  commutative_square f f \\<p>\\<^sub>1[f, f] \\<p>\\<^sub>0[f, f]\n\ngoal (1 subgoal):\n 1. f \\<cdot> \\<p>\\<^sub>0[f, f] = f \\<cdot> \\<p>\\<^sub>1[f, f]", "by (metis commutative_squareE mono_implies_arr)"], ["proof (state)\nthis:\n  f \\<cdot> \\<p>\\<^sub>0[f, f] = f \\<cdot> \\<p>\\<^sub>1[f, f]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, f] = \\<p>\\<^sub>1[f, f]", "thus ?thesis"], ["proof (prove)\nusing this:\n  f \\<cdot> \\<p>\\<^sub>0[f, f] = f \\<cdot> \\<p>\\<^sub>1[f, f]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, f] = \\<p>\\<^sub>1[f, f]", "using assms monoE [of f \"\\<p>\\<^sub>1[f, f]\" \"\\<p>\\<^sub>0[f, f]\"]"], ["proof (prove)\nusing this:\n  f \\<cdot> \\<p>\\<^sub>0[f, f] = f \\<cdot> \\<p>\\<^sub>1[f, f]\n  local.mono f\n  \\<lbrakk>local.mono f; seq f \\<p>\\<^sub>1[f, f]; seq f \\<p>\\<^sub>0[f, f];\n   f \\<cdot> \\<p>\\<^sub>1[f, f] = f \\<cdot> \\<p>\\<^sub>0[f, f]\\<rbrakk>\n  \\<Longrightarrow> \\<p>\\<^sub>0[f, f] = \\<p>\\<^sub>1[f, f]\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, f] = \\<p>\\<^sub>1[f, f]", "by (metis mono_implies_arr prj0_simps(1,3) seqI)"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[f, f] = \\<p>\\<^sub>1[f, f]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pullback_iso_self:\n    assumes \"iso f\"\n    shows \"\\<p>\\<^sub>0[f, f] = \\<p>\\<^sub>1[f, f]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, f] = \\<p>\\<^sub>1[f, f]", "using assms pullback_mono_self iso_is_section section_is_mono"], ["proof (prove)\nusing this:\n  local.iso f\n  local.mono ?f \\<Longrightarrow>\n  \\<p>\\<^sub>0[?f, ?f] = \\<p>\\<^sub>1[?f, ?f]\n  local.iso ?f \\<Longrightarrow> section ?f\n  section ?g \\<Longrightarrow> local.mono ?g\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, f] = \\<p>\\<^sub>1[f, f]", "by simp"], ["", "lemma pullback_ide_self [simp]:\n    assumes \"ide a\"\n    shows \"\\<p>\\<^sub>0[a, a] = \\<p>\\<^sub>1[a, a]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[a, a] = \\<p>\\<^sub>1[a, a]", "using assms pullback_iso_self ide_is_iso"], ["proof (prove)\nusing this:\n  ide a\n  local.iso ?f \\<Longrightarrow> \\<p>\\<^sub>0[?f, ?f] = \\<p>\\<^sub>1[?f, ?f]\n  ide ?a \\<Longrightarrow> local.iso ?a\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[a, a] = \\<p>\\<^sub>1[a, a]", "by blast"], ["", "end"], ["", "section \"Agreement between the Definitions\""], ["", "text \\<open>\n    It is very easy to write locale assumptions that have unintended consequences\n    or that are even inconsistent.  So, to keep ourselves honest, we don't just accept the\n    definition of ``elementary category with pullbacks'', but in fact we formally establish\n    the sense in which it agrees with our standard definition of ``category with pullbacks'',\n    which is given in terms of limit cones.\n    This is extra work, but it ensures that we didn't make a mistake.\n  \\<close>"], ["", "context category_with_pullbacks\n  begin"], ["", "definition prj1\n    where \"prj1 f g \\<equiv> if cospan f g then\n                         fst (SOME x. cospan_diagram.has_as_pullback C f g (fst x) (snd x))\n                       else null\""], ["", "definition prj0\n    where \"prj0 f g \\<equiv> if cospan f g then\n                         snd (SOME x. cospan_diagram.has_as_pullback C f g (fst x) (snd x))\n                       else null\""], ["", "lemma prj_yields_pullback:\n    assumes \"cospan f g\"\n    shows \"cospan_diagram.has_as_pullback C f g (prj1 f g) (prj0 f g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. limit_cone cospan_shape.comp (\\<cdot>)\n     (cospan_diagram.map (\\<cdot>) f g) (local.dom (prj1 f g))\n     (cospan_diagram.mkCone (\\<cdot>) f g (prj1 f g) (prj0 f g))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. limit_cone cospan_shape.comp (\\<cdot>)\n     (cospan_diagram.map (\\<cdot>) f g) (local.dom (prj1 f g))\n     (cospan_diagram.mkCone (\\<cdot>) f g (prj1 f g) (prj0 f g))", "have \"\\<exists>x. cospan_diagram.has_as_pullback C f g (fst x) (snd x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x.\n       limit_cone cospan_shape.comp (\\<cdot>)\n        (cospan_diagram.map (\\<cdot>) f g) (local.dom (fst x))\n        (cospan_diagram.mkCone (\\<cdot>) f g (fst x) (snd x))", "using assms has_pullbacks has_pullbacks_def has_as_pullback_def"], ["proof (prove)\nusing this:\n  cospan f g\n  has_pullbacks\n  has_pullbacks =\n  (\\<forall>f0 f1.\n      cospan f0 f1 \\<longrightarrow>\n      (\\<exists>p0 p1. has_as_pullback f0 f1 p0 p1))\n  has_as_pullback ?f0.0 ?f1.0 ?p0.0 ?p1.0 \\<equiv>\n  cospan ?f0.0 ?f1.0 \\<and>\n  limit_cone cospan_shape.comp (\\<cdot>)\n   (cospan_diagram.map (\\<cdot>) ?f0.0 ?f1.0) (local.dom ?p0.0)\n   (cospan_diagram.mkCone (\\<cdot>) ?f0.0 ?f1.0 ?p0.0 ?p1.0)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       limit_cone cospan_shape.comp (\\<cdot>)\n        (cospan_diagram.map (\\<cdot>) f g) (local.dom (fst x))\n        (cospan_diagram.mkCone (\\<cdot>) f g (fst x) (snd x))", "by simp"], ["proof (state)\nthis:\n  \\<exists>x.\n     limit_cone cospan_shape.comp (\\<cdot>)\n      (cospan_diagram.map (\\<cdot>) f g) (local.dom (fst x))\n      (cospan_diagram.mkCone (\\<cdot>) f g (fst x) (snd x))\n\ngoal (1 subgoal):\n 1. limit_cone cospan_shape.comp (\\<cdot>)\n     (cospan_diagram.map (\\<cdot>) f g) (local.dom (prj1 f g))\n     (cospan_diagram.mkCone (\\<cdot>) f g (prj1 f g) (prj0 f g))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>x.\n     limit_cone cospan_shape.comp (\\<cdot>)\n      (cospan_diagram.map (\\<cdot>) f g) (local.dom (fst x))\n      (cospan_diagram.mkCone (\\<cdot>) f g (fst x) (snd x))\n\ngoal (1 subgoal):\n 1. limit_cone cospan_shape.comp (\\<cdot>)\n     (cospan_diagram.map (\\<cdot>) f g) (local.dom (prj1 f g))\n     (cospan_diagram.mkCone (\\<cdot>) f g (prj1 f g) (prj0 f g))", "using assms has_pullbacks has_pullbacks_def prj0_def prj1_def\n              someI_ex [of \"\\<lambda>x. cospan_diagram.has_as_pullback C f g (fst x) (snd x)\"]"], ["proof (prove)\nusing this:\n  \\<exists>x.\n     limit_cone cospan_shape.comp (\\<cdot>)\n      (cospan_diagram.map (\\<cdot>) f g) (local.dom (fst x))\n      (cospan_diagram.mkCone (\\<cdot>) f g (fst x) (snd x))\n  cospan f g\n  has_pullbacks\n  has_pullbacks =\n  (\\<forall>f0 f1.\n      cospan f0 f1 \\<longrightarrow>\n      (\\<exists>p0 p1. has_as_pullback f0 f1 p0 p1))\n  prj0 ?f ?g \\<equiv>\n  if cospan ?f ?g\n  then snd (SOME x.\n               limit_cone cospan_shape.comp (\\<cdot>)\n                (cospan_diagram.map (\\<cdot>) ?f ?g) (local.dom (fst x))\n                (cospan_diagram.mkCone (\\<cdot>) ?f ?g (fst x) (snd x)))\n  else null\n  prj1 ?f ?g \\<equiv>\n  if cospan ?f ?g\n  then fst (SOME x.\n               limit_cone cospan_shape.comp (\\<cdot>)\n                (cospan_diagram.map (\\<cdot>) ?f ?g) (local.dom (fst x))\n                (cospan_diagram.mkCone (\\<cdot>) ?f ?g (fst x) (snd x)))\n  else null\n  \\<exists>x.\n     limit_cone cospan_shape.comp (\\<cdot>)\n      (cospan_diagram.map (\\<cdot>) f g) (local.dom (fst x))\n      (cospan_diagram.mkCone (\\<cdot>) f g (fst x)\n        (snd x)) \\<Longrightarrow>\n  limit_cone cospan_shape.comp (\\<cdot>) (cospan_diagram.map (\\<cdot>) f g)\n   (local.dom\n     (fst (SOME x.\n              limit_cone cospan_shape.comp (\\<cdot>)\n               (cospan_diagram.map (\\<cdot>) f g) (local.dom (fst x))\n               (cospan_diagram.mkCone (\\<cdot>) f g (fst x) (snd x)))))\n   (cospan_diagram.mkCone (\\<cdot>) f g\n     (fst (SOME x.\n              limit_cone cospan_shape.comp (\\<cdot>)\n               (cospan_diagram.map (\\<cdot>) f g) (local.dom (fst x))\n               (cospan_diagram.mkCone (\\<cdot>) f g (fst x) (snd x))))\n     (snd (SOME x.\n              limit_cone cospan_shape.comp (\\<cdot>)\n               (cospan_diagram.map (\\<cdot>) f g) (local.dom (fst x))\n               (cospan_diagram.mkCone (\\<cdot>) f g (fst x) (snd x)))))\n\ngoal (1 subgoal):\n 1. limit_cone cospan_shape.comp (\\<cdot>)\n     (cospan_diagram.map (\\<cdot>) f g) (local.dom (prj1 f g))\n     (cospan_diagram.mkCone (\\<cdot>) f g (prj1 f g) (prj0 f g))", "by simp"], ["proof (state)\nthis:\n  limit_cone cospan_shape.comp (\\<cdot>) (cospan_diagram.map (\\<cdot>) f g)\n   (local.dom (prj1 f g))\n   (cospan_diagram.mkCone (\\<cdot>) f g (prj1 f g) (prj0 f g))\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation elementary_category_with_pullbacks C prj0 prj1"], ["proof (prove)\ngoal (1 subgoal):\n 1. elementary_category_with_pullbacks (\\<cdot>) prj0 prj1", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>f g. \\<not> cospan f g \\<Longrightarrow> prj0 f g = null\n 2. \\<And>f g. \\<not> cospan f g \\<Longrightarrow> prj1 f g = null\n 3. \\<And>f g.\n       cospan f g \\<Longrightarrow>\n       commutative_square f g (prj1 f g) (prj0 f g)\n 4. \\<And>f g h k.\n       commutative_square f g h k \\<Longrightarrow>\n       \\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k", "show \"\\<And>f g. \\<not> cospan f g \\<Longrightarrow> prj0 f g = null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f g. \\<not> cospan f g \\<Longrightarrow> prj0 f g = null", "using prj0_def"], ["proof (prove)\nusing this:\n  prj0 ?f ?g \\<equiv>\n  if cospan ?f ?g\n  then snd (SOME x.\n               limit_cone cospan_shape.comp (\\<cdot>)\n                (cospan_diagram.map (\\<cdot>) ?f ?g) (local.dom (fst x))\n                (cospan_diagram.mkCone (\\<cdot>) ?f ?g (fst x) (snd x)))\n  else null\n\ngoal (1 subgoal):\n 1. \\<And>f g. \\<not> cospan f g \\<Longrightarrow> prj0 f g = null", "by auto"], ["proof (state)\nthis:\n  \\<not> cospan ?f4 ?g4 \\<Longrightarrow> prj0 ?f4 ?g4 = null\n\ngoal (3 subgoals):\n 1. \\<And>f g. \\<not> cospan f g \\<Longrightarrow> prj1 f g = null\n 2. \\<And>f g.\n       cospan f g \\<Longrightarrow>\n       commutative_square f g (prj1 f g) (prj0 f g)\n 3. \\<And>f g h k.\n       commutative_square f g h k \\<Longrightarrow>\n       \\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k", "show \"\\<And>f g. \\<not> cospan f g \\<Longrightarrow> prj1 f g = null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f g. \\<not> cospan f g \\<Longrightarrow> prj1 f g = null", "using prj1_def"], ["proof (prove)\nusing this:\n  prj1 ?f ?g \\<equiv>\n  if cospan ?f ?g\n  then fst (SOME x.\n               limit_cone cospan_shape.comp (\\<cdot>)\n                (cospan_diagram.map (\\<cdot>) ?f ?g) (local.dom (fst x))\n                (cospan_diagram.mkCone (\\<cdot>) ?f ?g (fst x) (snd x)))\n  else null\n\ngoal (1 subgoal):\n 1. \\<And>f g. \\<not> cospan f g \\<Longrightarrow> prj1 f g = null", "by auto"], ["proof (state)\nthis:\n  \\<not> cospan ?f4 ?g4 \\<Longrightarrow> prj1 ?f4 ?g4 = null\n\ngoal (2 subgoals):\n 1. \\<And>f g.\n       cospan f g \\<Longrightarrow>\n       commutative_square f g (prj1 f g) (prj0 f g)\n 2. \\<And>f g h k.\n       commutative_square f g h k \\<Longrightarrow>\n       \\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k", "show \"\\<And>f g. cospan f g \\<Longrightarrow> commutative_square f g (prj1 f g) (prj0 f g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       cospan f g \\<Longrightarrow>\n       commutative_square f g (prj1 f g) (prj0 f g)", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>f g. cospan f g \\<Longrightarrow> cospan f g\n 2. \\<And>f g. cospan f g \\<Longrightarrow> span (prj1 f g) (prj0 f g)\n 3. \\<And>f g. cospan f g \\<Longrightarrow> local.dom f = cod (prj1 f g)\n 4. \\<And>f g.\n       cospan f g \\<Longrightarrow> f \\<cdot> prj1 f g = g \\<cdot> prj0 f g", "fix f g"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>f g. cospan f g \\<Longrightarrow> cospan f g\n 2. \\<And>f g. cospan f g \\<Longrightarrow> span (prj1 f g) (prj0 f g)\n 3. \\<And>f g. cospan f g \\<Longrightarrow> local.dom f = cod (prj1 f g)\n 4. \\<And>f g.\n       cospan f g \\<Longrightarrow> f \\<cdot> prj1 f g = g \\<cdot> prj0 f g", "assume fg: \"cospan f g\""], ["proof (state)\nthis:\n  cospan f g\n\ngoal (4 subgoals):\n 1. \\<And>f g. cospan f g \\<Longrightarrow> cospan f g\n 2. \\<And>f g. cospan f g \\<Longrightarrow> span (prj1 f g) (prj0 f g)\n 3. \\<And>f g. cospan f g \\<Longrightarrow> local.dom f = cod (prj1 f g)\n 4. \\<And>f g.\n       cospan f g \\<Longrightarrow> f \\<cdot> prj1 f g = g \\<cdot> prj0 f g", "show \"cospan f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cospan f g", "by fact"], ["proof (state)\nthis:\n  cospan f g\n\ngoal (3 subgoals):\n 1. \\<And>f g. cospan f g \\<Longrightarrow> span (prj1 f g) (prj0 f g)\n 2. \\<And>f g. cospan f g \\<Longrightarrow> local.dom f = cod (prj1 f g)\n 3. \\<And>f g.\n       cospan f g \\<Longrightarrow> f \\<cdot> prj1 f g = g \\<cdot> prj0 f g", "interpret J: cospan_shape"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>f g. cospan f g \\<Longrightarrow> span (prj1 f g) (prj0 f g)\n 2. \\<And>f g. cospan f g \\<Longrightarrow> local.dom f = cod (prj1 f g)\n 3. \\<And>f g.\n       cospan f g \\<Longrightarrow> f \\<cdot> prj1 f g = g \\<cdot> prj0 f g", "interpret D: cospan_diagram C f g"], ["proof (prove)\ngoal (1 subgoal):\n 1. cospan_diagram (\\<cdot>) f g", "using fg"], ["proof (prove)\nusing this:\n  cospan f g\n\ngoal (1 subgoal):\n 1. cospan_diagram (\\<cdot>) f g", "by (unfold_locales, auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>f g. cospan f g \\<Longrightarrow> span (prj1 f g) (prj0 f g)\n 2. \\<And>f g. cospan f g \\<Longrightarrow> local.dom f = cod (prj1 f g)\n 3. \\<And>f g.\n       cospan f g \\<Longrightarrow> f \\<cdot> prj1 f g = g \\<cdot> prj0 f g", "let ?\\<chi> = \"D.mkCone (prj1 f g) (prj0 f g)\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>f g. cospan f g \\<Longrightarrow> span (prj1 f g) (prj0 f g)\n 2. \\<And>f g. cospan f g \\<Longrightarrow> local.dom f = cod (prj1 f g)\n 3. \\<And>f g.\n       cospan f g \\<Longrightarrow> f \\<cdot> prj1 f g = g \\<cdot> prj0 f g", "interpret \\<chi>: limit_cone J.comp C D.map \\<open>dom (prj1 f g)\\<close> ?\\<chi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. D.has_as_pullback (prj1 f g) (prj0 f g)", "using fg prj_yields_pullback"], ["proof (prove)\nusing this:\n  cospan f g\n  cospan ?f ?g \\<Longrightarrow>\n  limit_cone (\\<cdot>\\<^sub>J) (\\<cdot>)\n   (cospan_diagram.map (\\<cdot>) ?f ?g) (local.dom (prj1 ?f ?g))\n   (cospan_diagram.mkCone (\\<cdot>) ?f ?g (prj1 ?f ?g) (prj0 ?f ?g))\n\ngoal (1 subgoal):\n 1. D.has_as_pullback (prj1 f g) (prj0 f g)", "by auto"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>f g. cospan f g \\<Longrightarrow> span (prj1 f g) (prj0 f g)\n 2. \\<And>f g. cospan f g \\<Longrightarrow> local.dom f = cod (prj1 f g)\n 3. \\<And>f g.\n       cospan f g \\<Longrightarrow> f \\<cdot> prj1 f g = g \\<cdot> prj0 f g", "have 1: \"prj1 f g = ?\\<chi> J.AA \\<and> prj0 f g = ?\\<chi> J.BB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prj1 f g = D.mkCone (prj1 f g) (prj0 f g) J.AA \\<and>\n    prj0 f g = D.mkCone (prj1 f g) (prj0 f g) J.BB", "using D.mkCone_def"], ["proof (prove)\nusing this:\n  D.mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f \\<cdot> ?p0.0\n               else if j = J.BT then g \\<cdot> ?p1.0\n                    else if j = J.TT then f \\<cdot> ?p0.0 else null\n\ngoal (1 subgoal):\n 1. prj1 f g = D.mkCone (prj1 f g) (prj0 f g) J.AA \\<and>\n    prj0 f g = D.mkCone (prj1 f g) (prj0 f g) J.BB", "by simp"], ["proof (state)\nthis:\n  prj1 f g = D.mkCone (prj1 f g) (prj0 f g) J.AA \\<and>\n  prj0 f g = D.mkCone (prj1 f g) (prj0 f g) J.BB\n\ngoal (3 subgoals):\n 1. \\<And>f g. cospan f g \\<Longrightarrow> span (prj1 f g) (prj0 f g)\n 2. \\<And>f g. cospan f g \\<Longrightarrow> local.dom f = cod (prj1 f g)\n 3. \\<And>f g.\n       cospan f g \\<Longrightarrow> f \\<cdot> prj1 f g = g \\<cdot> prj0 f g", "show \"span (prj1 f g) (prj0 f g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. span (prj1 f g) (prj0 f g)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. span (prj1 f g) (prj0 f g)", "have \"arr (prj1 f g) \\<and> arr (prj0 f g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr (prj1 f g) \\<and> arr (prj0 f g)", "using 1 J.arr_char J.seq_char"], ["proof (prove)\nusing this:\n  prj1 f g = D.mkCone (prj1 f g) (prj0 f g) J.AA \\<and>\n  prj0 f g = D.mkCone (prj1 f g) (prj0 f g) J.BB\n  J.arr ?f = (?f \\<noteq> J.Null)\n  J.seq ?g ?f =\n  (?f = J.AA \\<and> (?g = J.AA \\<or> ?g = J.AT) \\<or>\n   ?f = J.BB \\<and> (?g = J.BB \\<or> ?g = J.BT) \\<or>\n   ?f = J.AT \\<and> ?g = J.TT \\<or>\n   ?f = J.BT \\<and> ?g = J.TT \\<or> ?f = J.TT \\<and> ?g = J.TT)\n\ngoal (1 subgoal):\n 1. arr (prj1 f g) \\<and> arr (prj0 f g)", "by (metis J.seqE \\<chi>.preserves_reflects_arr)"], ["proof (state)\nthis:\n  arr (prj1 f g) \\<and> arr (prj0 f g)\n\ngoal (1 subgoal):\n 1. span (prj1 f g) (prj0 f g)", "moreover"], ["proof (state)\nthis:\n  arr (prj1 f g) \\<and> arr (prj0 f g)\n\ngoal (1 subgoal):\n 1. span (prj1 f g) (prj0 f g)", "have \"dom (prj1 f g) = dom (prj0 f g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.dom (prj1 f g) = local.dom (prj0 f g)", "using 1 D.is_rendered_commutative_by_cone \\<chi>.cone_axioms J.seq_char"], ["proof (prove)\nusing this:\n  prj1 f g = D.mkCone (prj1 f g) (prj0 f g) J.AA \\<and>\n  prj0 f g = D.mkCone (prj1 f g) (prj0 f g) J.BB\n  D.cone ?a ?\\<chi> \\<Longrightarrow>\n  D.is_rendered_commutative_by (?\\<chi> J.AA) (?\\<chi> J.BB)\n  D.cone (local.dom (prj1 f g)) (D.mkCone (prj1 f g) (prj0 f g))\n  J.seq ?g ?f =\n  (?f = J.AA \\<and> (?g = J.AA \\<or> ?g = J.AT) \\<or>\n   ?f = J.BB \\<and> (?g = J.BB \\<or> ?g = J.BT) \\<or>\n   ?f = J.AT \\<and> ?g = J.TT \\<or>\n   ?f = J.BT \\<and> ?g = J.TT \\<or> ?f = J.TT \\<and> ?g = J.TT)\n\ngoal (1 subgoal):\n 1. local.dom (prj1 f g) = local.dom (prj0 f g)", "by (metis J.cod_eqI J.seqE \\<chi>.A.map_simp \\<chi>.preserves_dom J.ide_char)"], ["proof (state)\nthis:\n  local.dom (prj1 f g) = local.dom (prj0 f g)\n\ngoal (1 subgoal):\n 1. span (prj1 f g) (prj0 f g)", "ultimately"], ["proof (chain)\npicking this:\n  arr (prj1 f g) \\<and> arr (prj0 f g)\n  local.dom (prj1 f g) = local.dom (prj0 f g)", "show ?thesis"], ["proof (prove)\nusing this:\n  arr (prj1 f g) \\<and> arr (prj0 f g)\n  local.dom (prj1 f g) = local.dom (prj0 f g)\n\ngoal (1 subgoal):\n 1. span (prj1 f g) (prj0 f g)", "by simp"], ["proof (state)\nthis:\n  span (prj1 f g) (prj0 f g)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  span (prj1 f g) (prj0 f g)\n\ngoal (2 subgoals):\n 1. \\<And>f g. cospan f g \\<Longrightarrow> local.dom f = cod (prj1 f g)\n 2. \\<And>f g.\n       cospan f g \\<Longrightarrow> f \\<cdot> prj1 f g = g \\<cdot> prj0 f g", "show \"dom f = cod (prj1 f g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.dom f = cod (prj1 f g)", "using 1 fg \\<chi>.preserves_cod [of J.BB] J.cod_char D.mkCone_def"], ["proof (prove)\nusing this:\n  prj1 f g = D.mkCone (prj1 f g) (prj0 f g) J.AA \\<and>\n  prj0 f g = D.mkCone (prj1 f g) (prj0 f g) J.BB\n  cospan f g\n  J.arr J.BB \\<Longrightarrow>\n  cod (D.mkCone (prj1 f g) (prj0 f g) J.BB) = D.map (J.cod J.BB)\n  J.cod = J.Cod\n  D.mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f \\<cdot> ?p0.0\n               else if j = J.BT then g \\<cdot> ?p1.0\n                    else if j = J.TT then f \\<cdot> ?p0.0 else null\n\ngoal (1 subgoal):\n 1. local.dom f = cod (prj1 f g)", "by (metis D.map.simps(1) D.preserves_cod J.seqE \\<chi>.preserves_cod cod_dom J.seq_char)"], ["proof (state)\nthis:\n  local.dom f = cod (prj1 f g)\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       cospan f g \\<Longrightarrow> f \\<cdot> prj1 f g = g \\<cdot> prj0 f g", "show \"f \\<cdot> prj1 f g = g \\<cdot> prj0 f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<cdot> prj1 f g = g \\<cdot> prj0 f g", "using 1 fg D.is_rendered_commutative_by_cone \\<chi>.cone_axioms"], ["proof (prove)\nusing this:\n  prj1 f g = D.mkCone (prj1 f g) (prj0 f g) J.AA \\<and>\n  prj0 f g = D.mkCone (prj1 f g) (prj0 f g) J.BB\n  cospan f g\n  D.cone ?a ?\\<chi> \\<Longrightarrow>\n  D.is_rendered_commutative_by (?\\<chi> J.AA) (?\\<chi> J.BB)\n  D.cone (local.dom (prj1 f g)) (D.mkCone (prj1 f g) (prj0 f g))\n\ngoal (1 subgoal):\n 1. f \\<cdot> prj1 f g = g \\<cdot> prj0 f g", "by force"], ["proof (state)\nthis:\n  f \\<cdot> prj1 f g = g \\<cdot> prj0 f g\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cospan ?f4 ?g4 \\<Longrightarrow>\n  commutative_square ?f4 ?g4 (prj1 ?f4 ?g4) (prj0 ?f4 ?g4)\n\ngoal (1 subgoal):\n 1. \\<And>f g h k.\n       commutative_square f g h k \\<Longrightarrow>\n       \\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k", "show \"\\<And>f g h k. commutative_square f g h k \\<Longrightarrow> \\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f g h k.\n       commutative_square f g h k \\<Longrightarrow>\n       \\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g h k.\n       commutative_square f g h k \\<Longrightarrow>\n       \\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k", "fix f g h k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g h k.\n       commutative_square f g h k \\<Longrightarrow>\n       \\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k", "assume fghk: \"commutative_square f g h k\""], ["proof (state)\nthis:\n  commutative_square f g h k\n\ngoal (1 subgoal):\n 1. \\<And>f g h k.\n       commutative_square f g h k \\<Longrightarrow>\n       \\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k", "interpret J: cospan_shape"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g h k.\n       commutative_square f g h k \\<Longrightarrow>\n       \\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k", "interpret D: cospan_diagram C f g"], ["proof (prove)\ngoal (1 subgoal):\n 1. cospan_diagram (\\<cdot>) f g", "using fghk"], ["proof (prove)\nusing this:\n  commutative_square f g h k\n\ngoal (1 subgoal):\n 1. cospan_diagram (\\<cdot>) f g", "by (unfold_locales, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g h k.\n       commutative_square f g h k \\<Longrightarrow>\n       \\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k", "let ?\\<chi> = \"D.mkCone (prj1 f g) (prj0 f g)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g h k.\n       commutative_square f g h k \\<Longrightarrow>\n       \\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k", "interpret \\<chi>: limit_cone J.comp C D.map \\<open>dom (prj1 f g)\\<close> ?\\<chi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. D.has_as_pullback (prj1 f g) (prj0 f g)", "using fghk prj_yields_pullback"], ["proof (prove)\nusing this:\n  commutative_square f g h k\n  cospan ?f ?g \\<Longrightarrow>\n  limit_cone (\\<cdot>\\<^sub>J) (\\<cdot>)\n   (cospan_diagram.map (\\<cdot>) ?f ?g) (local.dom (prj1 ?f ?g))\n   (cospan_diagram.mkCone (\\<cdot>) ?f ?g (prj1 ?f ?g) (prj0 ?f ?g))\n\ngoal (1 subgoal):\n 1. D.has_as_pullback (prj1 f g) (prj0 f g)", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g h k.\n       commutative_square f g h k \\<Longrightarrow>\n       \\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k", "interpret \\<chi>: pullback_cone C f g \\<open>prj1 f g\\<close> \\<open>prj0 f g\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. pullback_cone (\\<cdot>) f g (prj1 f g) (prj0 f g)", ".."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g h k.\n       commutative_square f g h k \\<Longrightarrow>\n       \\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k", "have 1: \"prj1 f g = ?\\<chi> J.AA \\<and> prj0 f g = ?\\<chi> J.BB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prj1 f g = D.mkCone (prj1 f g) (prj0 f g) J.AA \\<and>\n    prj0 f g = D.mkCone (prj1 f g) (prj0 f g) J.BB", "using D.mkCone_def"], ["proof (prove)\nusing this:\n  D.mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f \\<cdot> ?p0.0\n               else if j = J.BT then g \\<cdot> ?p1.0\n                    else if j = J.TT then f \\<cdot> ?p0.0 else null\n\ngoal (1 subgoal):\n 1. prj1 f g = D.mkCone (prj1 f g) (prj0 f g) J.AA \\<and>\n    prj0 f g = D.mkCone (prj1 f g) (prj0 f g) J.BB", "by simp"], ["proof (state)\nthis:\n  prj1 f g = D.mkCone (prj1 f g) (prj0 f g) J.AA \\<and>\n  prj0 f g = D.mkCone (prj1 f g) (prj0 f g) J.BB\n\ngoal (1 subgoal):\n 1. \\<And>f g h k.\n       commutative_square f g h k \\<Longrightarrow>\n       \\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k", "show \"\\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. prj1 f g \\<cdot> ?a = h \\<and> prj0 f g \\<cdot> ?a = k\n 2. \\<And>l.\n       prj1 f g \\<cdot> l = h \\<and>\n       prj0 f g \\<cdot> l = k \\<Longrightarrow>\n       l = ?a", "let ?l = \"SOME l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k\""], ["proof (state)\ngoal (2 subgoals):\n 1. prj1 f g \\<cdot> ?a = h \\<and> prj0 f g \\<cdot> ?a = k\n 2. \\<And>l.\n       prj1 f g \\<cdot> l = h \\<and>\n       prj0 f g \\<cdot> l = k \\<Longrightarrow>\n       l = ?a", "show \"prj1 f g \\<cdot> ?l = h \\<and> prj0 f g \\<cdot> ?l = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prj1 f g \\<cdot>\n    (SOME l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k) =\n    h \\<and>\n    prj0 f g \\<cdot>\n    (SOME l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k) =\n    k", "using fghk \\<chi>.is_universal' \\<chi>.renders_commutative\n                   someI_ex [of \"\\<lambda>l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k\"]"], ["proof (prove)\nusing this:\n  commutative_square f g h k\n  D.is_rendered_commutative_by ?p0' ?p1' \\<Longrightarrow>\n  \\<exists>!h.\n     \\<guillemotleft>h : local.dom\n                          ?p0' \\<rightarrow> local.dom\n        (prj1 f g)\\<guillemotright> \\<and>\n     prj1 f g \\<cdot> h = ?p0' \\<and> prj0 f g \\<cdot> h = ?p1'\n  D.is_rendered_commutative_by (prj1 f g) (prj0 f g)\n  \\<exists>x.\n     prj1 f g \\<cdot> x = h \\<and> prj0 f g \\<cdot> x = k \\<Longrightarrow>\n  prj1 f g \\<cdot>\n  (SOME x. prj1 f g \\<cdot> x = h \\<and> prj0 f g \\<cdot> x = k) =\n  h \\<and>\n  prj0 f g \\<cdot>\n  (SOME x. prj1 f g \\<cdot> x = h \\<and> prj0 f g \\<cdot> x = k) =\n  k\n\ngoal (1 subgoal):\n 1. prj1 f g \\<cdot>\n    (SOME l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k) =\n    h \\<and>\n    prj0 f g \\<cdot>\n    (SOME l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k) =\n    k", "by blast"], ["proof (state)\nthis:\n  prj1 f g \\<cdot>\n  (SOME l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k) =\n  h \\<and>\n  prj0 f g \\<cdot>\n  (SOME l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k) =\n  k\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       prj1 f g \\<cdot> l = h \\<and>\n       prj0 f g \\<cdot> l = k \\<Longrightarrow>\n       l = (SOME l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k)", "thus \"\\<And>l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k \\<Longrightarrow> l = ?l\""], ["proof (prove)\nusing this:\n  prj1 f g \\<cdot>\n  (SOME l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k) =\n  h \\<and>\n  prj0 f g \\<cdot>\n  (SOME l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k) =\n  k\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       prj1 f g \\<cdot> l = h \\<and>\n       prj0 f g \\<cdot> l = k \\<Longrightarrow>\n       l = (SOME l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k)", "using fghk \\<chi>.is_universal' \\<chi>.renders_commutative limit_cone_def"], ["proof (prove)\nusing this:\n  prj1 f g \\<cdot>\n  (SOME l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k) =\n  h \\<and>\n  prj0 f g \\<cdot>\n  (SOME l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k) =\n  k\n  commutative_square f g h k\n  D.is_rendered_commutative_by ?p0' ?p1' \\<Longrightarrow>\n  \\<exists>!h.\n     \\<guillemotleft>h : local.dom\n                          ?p0' \\<rightarrow> local.dom\n        (prj1 f g)\\<guillemotright> \\<and>\n     prj1 f g \\<cdot> h = ?p0' \\<and> prj0 f g \\<cdot> h = ?p1'\n  D.is_rendered_commutative_by (prj1 f g) (prj0 f g)\n  limit_cone ?J ?C ?D ?a ?\\<chi> \\<equiv>\n  (category ?C \\<and> category ?J) \\<and>\n  diagram ?J ?C ?D \\<and>\n  Limit.cone ?J ?C ?D ?a ?\\<chi> \\<and>\n  limit_cone_axioms ?J ?C ?D ?a ?\\<chi>\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       prj1 f g \\<cdot> l = h \\<and>\n       prj0 f g \\<cdot> l = k \\<Longrightarrow>\n       l = (SOME l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k)", "by (metis (no_types, lifting) in_homI seqE commutative_squareE dom_comp seqI)"], ["proof (state)\nthis:\n  prj1 f g \\<cdot> ?l4 = h \\<and> prj0 f g \\<cdot> ?l4 = k \\<Longrightarrow>\n  ?l4 = (SOME l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!l. prj1 f g \\<cdot> l = h \\<and> prj0 f g \\<cdot> l = k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  commutative_square ?f4 ?g4 ?h4 ?k4 \\<Longrightarrow>\n  \\<exists>!l.\n     prj1 ?f4 ?g4 \\<cdot> l = ?h4 \\<and> prj0 ?f4 ?g4 \\<cdot> l = ?k4\n\ngoal:\nNo subgoals!", "qed"], ["", "proposition extends_to_elementary_category_with_pullbacks:\n    shows \"elementary_category_with_pullbacks C prj0 prj1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. elementary_category_with_pullbacks (\\<cdot>) prj0 prj1", ".."], ["", "end"], ["", "context elementary_category_with_pullbacks\n  begin"], ["", "interpretation category_with_pullbacks C"], ["proof (prove)\ngoal (1 subgoal):\n 1. category_with_pullbacks (\\<cdot>)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. has_pullbacks", "show \"has_pullbacks\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_pullbacks", "proof (unfold has_pullbacks_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>f0 f1.\n       cospan f0 f1 \\<longrightarrow>\n       (\\<exists>p0. Ex (has_as_pullback f0 f1 p0))", "have \"\\<And>f g. cospan f g \\<Longrightarrow> \\<exists>p0 p1. has_as_pullback f g p0 p1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       cospan f g \\<Longrightarrow>\n       \\<exists>p0 p1. has_as_pullback f g p0 p1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       cospan f g \\<Longrightarrow>\n       \\<exists>p0 p1. has_as_pullback f g p0 p1", "fix f g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       cospan f g \\<Longrightarrow>\n       \\<exists>p0 p1. has_as_pullback f g p0 p1", "assume fg: \"cospan f g\""], ["proof (state)\nthis:\n  cospan f g\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       cospan f g \\<Longrightarrow>\n       \\<exists>p0 p1. has_as_pullback f g p0 p1", "interpret J: cospan_shape"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       cospan f g \\<Longrightarrow>\n       \\<exists>p0 p1. has_as_pullback f g p0 p1", "interpret D: cospan_diagram C f g"], ["proof (prove)\ngoal (1 subgoal):\n 1. cospan_diagram (\\<cdot>) f g", "using fg"], ["proof (prove)\nusing this:\n  cospan f g\n\ngoal (1 subgoal):\n 1. cospan_diagram (\\<cdot>) f g", "by (unfold_locales, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       cospan f g \\<Longrightarrow>\n       \\<exists>p0 p1. has_as_pullback f g p0 p1", "let ?\\<chi> = \"D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       cospan f g \\<Longrightarrow>\n       \\<exists>p0 p1. has_as_pullback f g p0 p1", "interpret \\<chi>: cone J.comp C D.map \\<open>dom \\<p>\\<^sub>1[f, g]\\<close> ?\\<chi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. D.cone (local.dom \\<p>\\<^sub>1[f, g])\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. D.cone (local.dom \\<p>\\<^sub>1[f, g])\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g])", "have \"D.is_rendered_commutative_by \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D.is_rendered_commutative_by \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]", "using fg pullback_commutes'"], ["proof (prove)\nusing this:\n  cospan f g\n  cospan ?f ?g \\<Longrightarrow>\n  ?f \\<cdot> \\<p>\\<^sub>1[?f, ?g] = ?g \\<cdot> \\<p>\\<^sub>0[?f, ?g]\n\ngoal (1 subgoal):\n 1. D.is_rendered_commutative_by \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]", "by simp"], ["proof (state)\nthis:\n  D.is_rendered_commutative_by \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]\n\ngoal (1 subgoal):\n 1. D.cone (local.dom \\<p>\\<^sub>1[f, g])\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g])", "thus \"cone J.comp C D.map (dom \\<p>\\<^sub>1[f, g]) ?\\<chi>\""], ["proof (prove)\nusing this:\n  D.is_rendered_commutative_by \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]\n\ngoal (1 subgoal):\n 1. D.cone (local.dom \\<p>\\<^sub>1[f, g])\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g])", "using D.cone_mkCone"], ["proof (prove)\nusing this:\n  D.is_rendered_commutative_by \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]\n  D.is_rendered_commutative_by ?p0.0 ?p1.0 \\<Longrightarrow>\n  D.cone (local.dom ?p0.0) (D.mkCone ?p0.0 ?p1.0)\n\ngoal (1 subgoal):\n 1. D.cone (local.dom \\<p>\\<^sub>1[f, g])\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g])", "by auto"], ["proof (state)\nthis:\n  D.cone (local.dom \\<p>\\<^sub>1[f, g])\n   (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       cospan f g \\<Longrightarrow>\n       \\<exists>p0 p1. has_as_pullback f g p0 p1", "interpret \\<chi>: limit_cone J.comp C D.map \\<open>dom \\<p>\\<^sub>1[f, g]\\<close> ?\\<chi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. D.has_as_pullback \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a' \\<chi>'.\n       D.cone a' \\<chi>' \\<Longrightarrow>\n       \\<exists>!fa.\n          \\<guillemotleft>fa : a' \\<rightarrow> local.dom\n           \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n          D.cones_map fa (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n          \\<chi>'", "fix a' \\<chi>'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a' \\<chi>'.\n       D.cone a' \\<chi>' \\<Longrightarrow>\n       \\<exists>!fa.\n          \\<guillemotleft>fa : a' \\<rightarrow> local.dom\n           \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n          D.cones_map fa (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n          \\<chi>'", "assume \\<chi>': \"D.cone a' \\<chi>'\""], ["proof (state)\nthis:\n  D.cone a' \\<chi>'\n\ngoal (1 subgoal):\n 1. \\<And>a' \\<chi>'.\n       D.cone a' \\<chi>' \\<Longrightarrow>\n       \\<exists>!fa.\n          \\<guillemotleft>fa : a' \\<rightarrow> local.dom\n           \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n          D.cones_map fa (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n          \\<chi>'", "interpret \\<chi>': cone J.comp C D.map a' \\<chi>'"], ["proof (prove)\ngoal (1 subgoal):\n 1. D.cone a' \\<chi>'", "using \\<chi>'"], ["proof (prove)\nusing this:\n  D.cone a' \\<chi>'\n\ngoal (1 subgoal):\n 1. D.cone a' \\<chi>'", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a' \\<chi>'.\n       D.cone a' \\<chi>' \\<Longrightarrow>\n       \\<exists>!fa.\n          \\<guillemotleft>fa : a' \\<rightarrow> local.dom\n           \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n          D.cones_map fa (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n          \\<chi>'", "have 1: \"commutative_square f g (\\<chi>' J.AA) (\\<chi>' J.BB)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. commutative_square f g (\\<chi>' J.AA) (\\<chi>' J.BB)", "using fg J.ide_char J.cod_char D.is_rendered_commutative_by_cone \\<chi>'.cone_axioms"], ["proof (prove)\nusing this:\n  cospan f g\n  J.ide ?f = (?f = J.AA \\<or> ?f = J.BB \\<or> ?f = J.TT)\n  J.cod = J.Cod\n  D.cone ?a ?\\<chi> \\<Longrightarrow>\n  D.is_rendered_commutative_by (?\\<chi> J.AA) (?\\<chi> J.BB)\n  D.cone a' \\<chi>'\n\ngoal (1 subgoal):\n 1. commutative_square f g (\\<chi>' J.AA) (\\<chi>' J.BB)", "by auto"], ["proof (state)\nthis:\n  commutative_square f g (\\<chi>' J.AA) (\\<chi>' J.BB)\n\ngoal (1 subgoal):\n 1. \\<And>a' \\<chi>'.\n       D.cone a' \\<chi>' \\<Longrightarrow>\n       \\<exists>!fa.\n          \\<guillemotleft>fa : a' \\<rightarrow> local.dom\n           \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n          D.cones_map fa (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n          \\<chi>'", "show \"\\<exists>!h. \\<guillemotleft>h : a' \\<rightarrow> dom \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n                       D.cones_map h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) = \\<chi>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!h.\n       \\<guillemotleft>h : a' \\<rightarrow> local.dom\n       \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n       D.cones_map h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n       \\<chi>'", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<guillemotleft>?a : a' \\<rightarrow> local.dom\n     \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n    D.cones_map ?a (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n    \\<chi>'\n 2. \\<And>h.\n       \\<guillemotleft>h : a' \\<rightarrow> local.dom\n       \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n       D.cones_map h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n       \\<chi>' \\<Longrightarrow>\n       h = ?a", "let ?h = \"\\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<guillemotleft>?a : a' \\<rightarrow> local.dom\n     \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n    D.cones_map ?a (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n    \\<chi>'\n 2. \\<And>h.\n       \\<guillemotleft>h : a' \\<rightarrow> local.dom\n       \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n       D.cones_map h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n       \\<chi>' \\<Longrightarrow>\n       h = ?a", "show h': \"\\<guillemotleft>?h : a' \\<rightarrow> dom \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n                        D.cones_map ?h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) = \\<chi>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft>\\<langle>\\<chi>'\n                              J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>'\n                     J.BB\\<rangle> : a' \\<rightarrow> local.dom\n                 \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n    D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n    \\<chi>'", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<guillemotleft>\\<langle>\\<chi>'\n                              J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>'\n                     J.BB\\<rangle> : a' \\<rightarrow> local.dom\n                 \\<p>\\<^sub>1[f, g]\\<guillemotright>\n 2. D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n    \\<chi>'", "show h: \"\\<guillemotleft>?h : a' \\<rightarrow> dom \\<p>\\<^sub>1[f, g]\\<guillemotright>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft>\\<langle>\\<chi>'\n                              J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>'\n                     J.BB\\<rangle> : a' \\<rightarrow> local.dom\n                 \\<p>\\<^sub>1[f, g]\\<guillemotright>", "using fg 1"], ["proof (prove)\nusing this:\n  cospan f g\n  commutative_square f g (\\<chi>' J.AA) (\\<chi>' J.BB)\n\ngoal (1 subgoal):\n 1. \\<guillemotleft>\\<langle>\\<chi>'\n                              J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>'\n                     J.BB\\<rangle> : a' \\<rightarrow> local.dom\n                 \\<p>\\<^sub>1[f, g]\\<guillemotright>", "by fastforce"], ["proof (state)\nthis:\n  \\<guillemotleft>\\<langle>\\<chi>'\n                            J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>'\n                   J.BB\\<rangle> : a' \\<rightarrow> local.dom\n               \\<p>\\<^sub>1[f, g]\\<guillemotright>\n\ngoal (1 subgoal):\n 1. D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n    \\<chi>'", "show \"D.cones_map ?h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) = \\<chi>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n    \\<chi>'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n    \\<chi>'", "have \"D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g] \\<in> D.cones (cod \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]\n    \\<in> D.cones\n           (cod \\<langle>\\<chi>'\n                          J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>)", "using fg h D.cone_mkCone D.is_rendered_commutative_by_cone\n                          \\<chi>.cone_axioms"], ["proof (prove)\nusing this:\n  cospan f g\n  \\<guillemotleft>\\<langle>\\<chi>'\n                            J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>'\n                   J.BB\\<rangle> : a' \\<rightarrow> local.dom\n               \\<p>\\<^sub>1[f, g]\\<guillemotright>\n  D.is_rendered_commutative_by ?p0.0 ?p1.0 \\<Longrightarrow>\n  D.cone (local.dom ?p0.0) (D.mkCone ?p0.0 ?p1.0)\n  D.cone ?a ?\\<chi> \\<Longrightarrow>\n  D.is_rendered_commutative_by (?\\<chi> J.AA) (?\\<chi> J.BB)\n  D.cone (local.dom \\<p>\\<^sub>1[f, g])\n   (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g])\n\ngoal (1 subgoal):\n 1. D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]\n    \\<in> D.cones\n           (cod \\<langle>\\<chi>'\n                          J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>)", "by auto"], ["proof (state)\nthis:\n  D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]\n  \\<in> D.cones\n         (cod \\<langle>\\<chi>'\n                        J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>)\n\ngoal (1 subgoal):\n 1. D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n    \\<chi>'", "hence 2: \"D.cones_map ?h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) \\<in> D.cones a'\""], ["proof (prove)\nusing this:\n  D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]\n  \\<in> D.cones\n         (cod \\<langle>\\<chi>'\n                        J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>)\n\ngoal (1 subgoal):\n 1. D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g])\n    \\<in> D.cones a'", "using fg h D.cones_map_mapsto"], ["proof (prove)\nusing this:\n  D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]\n  \\<in> D.cones\n         (cod \\<langle>\\<chi>'\n                        J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>)\n  cospan f g\n  \\<guillemotleft>\\<langle>\\<chi>'\n                            J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>'\n                   J.BB\\<rangle> : a' \\<rightarrow> local.dom\n               \\<p>\\<^sub>1[f, g]\\<guillemotright>\n  arr ?f \\<Longrightarrow>\n  D.cones_map ?f\n  \\<in> extensional (D.cones (cod ?f)) \\<inter>\n        (D.cones (cod ?f) \\<rightarrow> D.cones (local.dom ?f))\n\ngoal (1 subgoal):\n 1. D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g])\n    \\<in> D.cones a'", "by blast"], ["proof (state)\nthis:\n  D.cones_map\n   \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n   (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g])\n  \\<in> D.cones a'\n\ngoal (1 subgoal):\n 1. D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n    \\<chi>'", "interpret \\<chi>'h: cone J.comp C D.map a'\n                                   \\<open>D.cones_map ?h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g])\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. D.cone a'\n     (D.cones_map\n       \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n       (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]))", "using 2"], ["proof (prove)\nusing this:\n  D.cones_map\n   \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n   (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g])\n  \\<in> D.cones a'\n\ngoal (1 subgoal):\n 1. D.cone a'\n     (D.cones_map\n       \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n       (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]))", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n    \\<chi>'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n    \\<chi>'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n    \\<chi>'", "have \"\\<And>j. J.ide j \\<Longrightarrow> D.cones_map ?h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) j = \\<chi>' j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       J.ide j \\<Longrightarrow>\n       D.cones_map\n        \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n        (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) j =\n       \\<chi>' j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       J.ide j \\<Longrightarrow>\n       D.cones_map\n        \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n        (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) j =\n       \\<chi>' j", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       J.ide j \\<Longrightarrow>\n       D.cones_map\n        \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n        (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) j =\n       \\<chi>' j", "show \"J.ide j \\<Longrightarrow> D.cones_map ?h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) j = \\<chi>' j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. J.ide j \\<Longrightarrow>\n    D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) j =\n    \\<chi>' j", "using fg h 1 J.ide_char D.mkCone_def \\<chi>.cone_axioms"], ["proof (prove)\nusing this:\n  cospan f g\n  \\<guillemotleft>\\<langle>\\<chi>'\n                            J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>'\n                   J.BB\\<rangle> : a' \\<rightarrow> local.dom\n               \\<p>\\<^sub>1[f, g]\\<guillemotright>\n  commutative_square f g (\\<chi>' J.AA) (\\<chi>' J.BB)\n  J.ide ?f = (?f = J.AA \\<or> ?f = J.BB \\<or> ?f = J.TT)\n  D.mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f \\<cdot> ?p0.0\n               else if j = J.BT then g \\<cdot> ?p1.0\n                    else if j = J.TT then f \\<cdot> ?p0.0 else null\n  D.cone (local.dom \\<p>\\<^sub>1[f, g])\n   (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g])\n\ngoal (1 subgoal):\n 1. J.ide j \\<Longrightarrow>\n    D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) j =\n    \\<chi>' j", "apply (cases j, simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<guillemotleft>\\<langle>\\<chi>'\n J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>'\n                              J.BB\\<rangle> : a' \\<rightarrow> f \\<down>\\<down>\n                         g\\<guillemotright>;\n     \\<And>p0 p1.\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f \\<cdot> p0\n                     else if j = J.BT then g \\<cdot> p1\n                          else if j = J.TT then f \\<cdot> p0\n                               else null \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f \\<cdot> p0\n                     else if j = J.BT then g \\<cdot> p1\n                          else if j = J.TT then f \\<cdot> p0 else null;\n     D.cone (f \\<down>\\<down> g)\n      (\\<lambda>j.\n          if j = J.AA then \\<p>\\<^sub>1[f, g]\n          else if j = J.BB then \\<p>\\<^sub>0[f, g]\n               else if j = J.AT then f \\<cdot> \\<p>\\<^sub>1[f, g]\n                    else if j = J.BT then g \\<cdot> \\<p>\\<^sub>0[f, g]\n                         else if j = J.TT then f \\<cdot> \\<p>\\<^sub>1[f, g]\n                              else null);\n     j = J.TT; cospan f g;\n     commutative_square f g (\\<chi>' J.AA) (\\<chi>' J.BB);\n     \\<And>f. J.ide f = (f = J.AA \\<or> f = J.BB \\<or> f = J.TT);\n     \\<And>p0 p1.\n        D.mkCone p0 p1 \\<equiv>\n        \\<lambda>j.\n           if j = J.AA then p0\n           else if j = J.BB then p1\n                else if j = J.AT then f \\<cdot> p0\n                     else if j = J.BT then g \\<cdot> p1\n                          else if j = J.TT then f \\<cdot> p0\n                               else null\\<rbrakk>\n    \\<Longrightarrow> (f \\<cdot> \\<p>\\<^sub>1[f, g]) \\<cdot>\n                      \\<langle>\\<chi>'\n                                J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>'\n                       J.BB\\<rangle> =\n                      \\<chi>' J.TT", "by (metis D.map.simps(4) J.dom_eqI \\<chi>'.is_natural_1 \\<chi>'.naturality\n                            J.seqE \\<chi>'.A.map_simp J.comp.simps(3,7) J.seq_char\n                            prj_tuple(2) comp_assoc)"], ["proof (state)\nthis:\n  J.ide j \\<Longrightarrow>\n  D.cones_map\n   \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n   (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) j =\n  \\<chi>' j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  J.ide ?j4 \\<Longrightarrow>\n  D.cones_map\n   \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n   (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) ?j4 =\n  \\<chi>' ?j4\n\ngoal (1 subgoal):\n 1. D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n    \\<chi>'", "thus ?thesis"], ["proof (prove)\nusing this:\n  J.ide ?j4 \\<Longrightarrow>\n  D.cones_map\n   \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n   (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) ?j4 =\n  \\<chi>' ?j4\n\ngoal (1 subgoal):\n 1. D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n    \\<chi>'", "using NaturalTransformation.eqI\n                            \\<chi>'.natural_transformation_axioms \\<chi>'h.natural_transformation_axioms"], ["proof (prove)\nusing this:\n  J.ide ?j4 \\<Longrightarrow>\n  D.cones_map\n   \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n   (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) ?j4 =\n  \\<chi>' ?j4\n  \\<lbrakk>natural_transformation ?A ?B ?F ?G ?\\<sigma>;\n   natural_transformation ?A ?B ?F ?G ?\\<sigma>';\n   \\<And>a.\n      partial_magma.ide ?A a \\<Longrightarrow>\n      ?\\<sigma> a = ?\\<sigma>' a\\<rbrakk>\n  \\<Longrightarrow> ?\\<sigma> = ?\\<sigma>'\n  natural_transformation (\\<cdot>\\<^sub>J) (\\<cdot>) \\<chi>'.A.map D.map\n   \\<chi>'\n  natural_transformation (\\<cdot>\\<^sub>J) (\\<cdot>) \\<chi>'.A.map D.map\n   (D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]))\n\ngoal (1 subgoal):\n 1. D.cones_map\n     \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n     (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n    \\<chi>'", "by blast"], ["proof (state)\nthis:\n  D.cones_map\n   \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n   (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n  \\<chi>'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  D.cones_map\n   \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n   (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n  \\<chi>'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  D.cones_map\n   \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n   (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n  \\<chi>'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<guillemotleft>\\<langle>\\<chi>'\n                            J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>'\n                   J.BB\\<rangle> : a' \\<rightarrow> local.dom\n               \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n  D.cones_map\n   \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n   (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n  \\<chi>'\n\ngoal (1 subgoal):\n 1. \\<And>h.\n       \\<guillemotleft>h : a' \\<rightarrow> local.dom\n       \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n       D.cones_map h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n       \\<chi>' \\<Longrightarrow>\n       h =\n       \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>", "show \"\\<And>h. \\<guillemotleft>h : a' \\<rightarrow> dom \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n                        D.cones_map h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) = \\<chi>' \\<Longrightarrow>\n                          h = ?h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>h.\n       \\<guillemotleft>h : a' \\<rightarrow> local.dom\n       \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n       D.cones_map h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n       \\<chi>' \\<Longrightarrow>\n       h =\n       \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>h.\n       \\<guillemotleft>h : a' \\<rightarrow> local.dom\n       \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n       D.cones_map h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n       \\<chi>' \\<Longrightarrow>\n       h =\n       \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>", "fix h"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>h.\n       \\<guillemotleft>h : a' \\<rightarrow> local.dom\n       \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n       D.cones_map h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n       \\<chi>' \\<Longrightarrow>\n       h =\n       \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>", "assume 2: \"\\<guillemotleft>h : a' \\<rightarrow> dom \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n                        D.cones_map h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) = \\<chi>'\""], ["proof (state)\nthis:\n  \\<guillemotleft>h : a' \\<rightarrow> local.dom\n  \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n  D.cones_map h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) = \\<chi>'\n\ngoal (1 subgoal):\n 1. \\<And>h.\n       \\<guillemotleft>h : a' \\<rightarrow> local.dom\n       \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n       D.cones_map h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n       \\<chi>' \\<Longrightarrow>\n       h =\n       \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>", "show \"h = ?h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h = \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. h = \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>", "have \"\\<p>\\<^sub>0[f, g] \\<cdot> h = \\<p>\\<^sub>0[f, g] \\<cdot> ?h \\<and> \\<p>\\<^sub>1[f, g] \\<cdot> h = \\<p>\\<^sub>1[f, g] \\<cdot> ?h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot> h =\n    \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>\\<chi>'\n              J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle> \\<and>\n    \\<p>\\<^sub>1[f, g] \\<cdot> h =\n    \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>", "using 1 2 fg J.arr_char \\<chi>.cone_axioms D.mkCone_def"], ["proof (prove)\nusing this:\n  commutative_square f g (\\<chi>' J.AA) (\\<chi>' J.BB)\n  \\<guillemotleft>h : a' \\<rightarrow> local.dom\n  \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n  D.cones_map h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) = \\<chi>'\n  cospan f g\n  J.arr ?f = (?f \\<noteq> J.Null)\n  D.cone (local.dom \\<p>\\<^sub>1[f, g])\n   (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g])\n  D.mkCone ?p0.0 ?p1.0 \\<equiv>\n  \\<lambda>j.\n     if j = J.AA then ?p0.0\n     else if j = J.BB then ?p1.0\n          else if j = J.AT then f \\<cdot> ?p0.0\n               else if j = J.BT then g \\<cdot> ?p1.0\n                    else if j = J.TT then f \\<cdot> ?p0.0 else null\n\ngoal (1 subgoal):\n 1. \\<p>\\<^sub>0[f, g] \\<cdot> h =\n    \\<p>\\<^sub>0[f, g] \\<cdot>\n    \\<langle>\\<chi>'\n              J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle> \\<and>\n    \\<p>\\<^sub>1[f, g] \\<cdot> h =\n    \\<p>\\<^sub>1[f, g] \\<cdot>\n    \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>", "by auto"], ["proof (state)\nthis:\n  \\<p>\\<^sub>0[f, g] \\<cdot> h =\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle> \\<and>\n  \\<p>\\<^sub>1[f, g] \\<cdot> h =\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n\ngoal (1 subgoal):\n 1. h = \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[f, g] \\<cdot> h =\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle> \\<and>\n  \\<p>\\<^sub>1[f, g] \\<cdot> h =\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n\ngoal (1 subgoal):\n 1. h = \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>", "using fg 2 h' prj_joint_monic"], ["proof (prove)\nusing this:\n  \\<p>\\<^sub>0[f, g] \\<cdot> h =\n  \\<p>\\<^sub>0[f, g] \\<cdot>\n  \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle> \\<and>\n  \\<p>\\<^sub>1[f, g] \\<cdot> h =\n  \\<p>\\<^sub>1[f, g] \\<cdot>\n  \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n  cospan f g\n  \\<guillemotleft>h : a' \\<rightarrow> local.dom\n  \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n  D.cones_map h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) = \\<chi>'\n  \\<guillemotleft>\\<langle>\\<chi>'\n                            J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>'\n                   J.BB\\<rangle> : a' \\<rightarrow> local.dom\n               \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n  D.cones_map\n   \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n   (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n  \\<chi>'\n  \\<lbrakk>cospan ?f ?g; seq \\<p>\\<^sub>1[?f, ?g] ?h;\n   seq \\<p>\\<^sub>1[?f, ?g] ?h';\n   \\<p>\\<^sub>0[?f, ?g] \\<cdot> ?h = \\<p>\\<^sub>0[?f, ?g] \\<cdot> ?h';\n   \\<p>\\<^sub>1[?f, ?g] \\<cdot> ?h =\n   \\<p>\\<^sub>1[?f, ?g] \\<cdot> ?h'\\<rbrakk>\n  \\<Longrightarrow> ?h = ?h'\n\ngoal (1 subgoal):\n 1. h = \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>", "by blast"], ["proof (state)\nthis:\n  h = \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  h = \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<guillemotleft>?h4 : a' \\<rightarrow> local.dom\n    \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n  D.cones_map ?h4 (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n  \\<chi>' \\<Longrightarrow>\n  ?h4 = \\<langle>\\<chi>' J.AA \\<lbrakk>f, g\\<rbrakk> \\<chi>' J.BB\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!h.\n     \\<guillemotleft>h : a' \\<rightarrow> local.dom\n     \\<p>\\<^sub>1[f, g]\\<guillemotright> \\<and>\n     D.cones_map h (D.mkCone \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]) =\n     \\<chi>'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       cospan f g \\<Longrightarrow>\n       \\<exists>p0 p1. has_as_pullback f g p0 p1", "show \"\\<exists>p0 p1. has_as_pullback f g p0 p1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p0 p1. has_as_pullback f g p0 p1", "using fg has_as_pullback_def \\<chi>.limit_cone_axioms"], ["proof (prove)\nusing this:\n  cospan f g\n  has_as_pullback ?f0.0 ?f1.0 ?p0.0 ?p1.0 \\<equiv>\n  cospan ?f0.0 ?f1.0 \\<and>\n  limit_cone (\\<cdot>\\<^sub>J) (\\<cdot>)\n   (cospan_diagram.map (\\<cdot>) ?f0.0 ?f1.0) (local.dom ?p0.0)\n   (cospan_diagram.mkCone (\\<cdot>) ?f0.0 ?f1.0 ?p0.0 ?p1.0)\n  D.has_as_pullback \\<p>\\<^sub>1[f, g] \\<p>\\<^sub>0[f, g]\n\ngoal (1 subgoal):\n 1. \\<exists>p0 p1. has_as_pullback f g p0 p1", "by blast"], ["proof (state)\nthis:\n  \\<exists>p0 p1. has_as_pullback f g p0 p1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cospan ?f4 ?g4 \\<Longrightarrow>\n  \\<exists>p0 p1. has_as_pullback ?f4 ?g4 p0 p1\n\ngoal (1 subgoal):\n 1. \\<forall>f0 f1.\n       cospan f0 f1 \\<longrightarrow>\n       (\\<exists>p0. Ex (has_as_pullback f0 f1 p0))", "thus \"\\<forall>f g. cospan f g \\<longrightarrow> (\\<exists>p0 p1. has_as_pullback f g p0 p1)\""], ["proof (prove)\nusing this:\n  cospan ?f4 ?g4 \\<Longrightarrow>\n  \\<exists>p0 p1. has_as_pullback ?f4 ?g4 p0 p1\n\ngoal (1 subgoal):\n 1. \\<forall>f g.\n       cospan f g \\<longrightarrow>\n       (\\<exists>p0 p1. has_as_pullback f g p0 p1)", "by simp"], ["proof (state)\nthis:\n  \\<forall>f g.\n     cospan f g \\<longrightarrow>\n     (\\<exists>p0 p1. has_as_pullback f g p0 p1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_pullbacks\n\ngoal:\nNo subgoals!", "qed"], ["", "proposition is_category_with_pullbacks:\n    shows \"category_with_pullbacks C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category_with_pullbacks (\\<cdot>)", ".."], ["", "end"], ["", "sublocale elementary_category_with_pullbacks \\<subseteq> category_with_pullbacks"], ["proof (prove)\ngoal (1 subgoal):\n 1. category_with_pullbacks (\\<cdot>)", "using is_category_with_pullbacks"], ["proof (prove)\nusing this:\n  category_with_pullbacks (\\<cdot>)\n\ngoal (1 subgoal):\n 1. category_with_pullbacks (\\<cdot>)", "by auto"], ["", "end"]]}