{"file_name": "/home/qj213/afp-2021-10-22/thys/Category3/ProductCategory.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Category3", "problem_names": ["lemma not_Arr_Null:\n    shows \"\\<not>Arr Null\"", "lemma null_char [simp]:\n    shows \"null = Null\"", "lemma ide_Ide:\n    assumes \"Ide a\"\n    shows \"ide a\"", "lemma has_domain_char:\n    shows \"domains f \\<noteq> {} \\<longleftrightarrow> Arr f\"", "lemma has_codomain_char:\n    shows \"codomains f \\<noteq> {} \\<longleftrightarrow> Arr f\"", "lemma arr_char [iff]:\n    shows \"arr f \\<longleftrightarrow> Arr f\"", "lemma arrI [intro]:\n    assumes \"C1.arr f1\" and \"C2.arr f2\"\n    shows \"arr (f1, f2)\"", "lemma arrE:\n    assumes \"arr f\"\n    and \"C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow> T\"\n    shows \"T\"", "lemma seqI [intro]:\n    assumes \"C1.seq g1 f1 \\<and> C2.seq g2 f2\"\n    shows \"seq (g1, g2) (f1, f2)\"", "lemma seqE [elim]:\n    assumes \"seq g f\"\n    and \"C1.seq (fst g) (fst f) \\<Longrightarrow> C2.seq (snd g) (snd f) \\<Longrightarrow> T\"\n    shows \"T\"", "lemma seq_char [iff]:\n    shows \"seq g f \\<longleftrightarrow> C1.seq (fst g) (fst f) \\<and> C2.seq (snd g) (snd f)\"", "lemma Dom_comp:\n    assumes \"seq g f\"\n    shows \"Dom (g \\<cdot> f) = Dom f\"", "lemma Cod_comp:\n    assumes \"seq g f\"\n    shows \"Cod (g \\<cdot> f) = Cod g\"", "theorem is_category:\n    shows \"category comp\"", "lemma dom_char:\n    shows \"dom f = Dom f\"", "lemma dom_simp [simp]:\n    assumes \"arr f\"\n    shows \"dom f = (C1.dom (fst f), C2.dom (snd f))\"", "lemma cod_char:\n    shows \"cod f = Cod f\"", "lemma cod_simp [simp]:\n    assumes \"arr f\"\n    shows \"cod f = (C1.cod (fst f), C2.cod (snd f))\"", "lemma in_homI [intro, simp]:\n    assumes \"\\<guillemotleft>fst f: fst a \\<rightarrow>\\<^sub>1 fst b\\<guillemotright>\" and \"\\<guillemotleft>snd f: snd a \\<rightarrow>\\<^sub>2 snd b\\<guillemotright>\"\n    shows \"\\<guillemotleft>f: a \\<rightarrow> b\\<guillemotright>\"", "lemma in_homE [elim]:\n    assumes \"\\<guillemotleft>f: a \\<rightarrow> b\\<guillemotright>\"\n    and \"\\<guillemotleft>fst f: fst a \\<rightarrow>\\<^sub>1 fst b\\<guillemotright> \\<Longrightarrow> \\<guillemotleft>snd f: snd a \\<rightarrow>\\<^sub>2 snd b\\<guillemotright> \\<Longrightarrow> T\"\n    shows \"T\"", "lemma ide_char [iff]:\n    shows \"ide f \\<longleftrightarrow> Ide f\"", "lemma comp_char:\n    shows \"g \\<cdot> f = (if C1.arr (C1 (fst g) (fst f)) \\<and> C2.arr (C2 (snd g) (snd f)) then\n                       (C1 (fst g) (fst f), C2 (snd g) (snd f))\n                    else Null)\"", "lemma comp_simp [simp]:\n    assumes \"C1.seq (fst g) (fst f)\" and \"C2.seq (snd g) (snd f)\"\n    shows \"g \\<cdot> f = (fst g \\<cdot>\\<^sub>1 fst f, snd g \\<cdot>\\<^sub>2 snd f)\"", "lemma iso_char [iff]:\n    shows \"iso f \\<longleftrightarrow> C1.iso (fst f) \\<and> C2.iso (snd f)\"", "lemma isoI [intro, simp]:\n    assumes \"C1.iso (fst f)\" and \"C2.iso (snd f)\"\n    shows \"iso f\"", "lemma isoD:\n    assumes \"iso f\"\n    shows \"C1.iso (fst f)\" and \"C2.iso (snd f)\"", "lemma inv_simp [simp]:\n    assumes \"iso f\"\n    shows \"inv f = (C1.inv (fst f), C2.inv (snd f))\""], "translations": [["", "lemma not_Arr_Null:\n    shows \"\\<not>Arr Null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (C1.arr (fst (C1.null, C2.null)) \\<and>\n            C2.arr (snd (C1.null, C2.null)))", "by simp"], ["", "interpretation partial_magma comp"], ["proof (prove)\ngoal (1 subgoal):\n 1. partial_magma (\\<cdot>)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!n. \\<forall>f. n \\<cdot> f = n \\<and> f \\<cdot> n = n", "show \"\\<exists>!n. \\<forall>f. n \\<cdot> f = n \\<and> f \\<cdot> n = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!n. \\<forall>f. n \\<cdot> f = n \\<and> f \\<cdot> n = n", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>f. ?a \\<cdot> f = ?a \\<and> f \\<cdot> ?a = ?a\n 2. \\<And>n.\n       \\<forall>f. n \\<cdot> f = n \\<and> f \\<cdot> n = n \\<Longrightarrow>\n       n = ?a", "let ?P = \"\\<lambda>n. \\<forall>f. n \\<cdot> f = n \\<and> f \\<cdot> n = n\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>f. ?a \\<cdot> f = ?a \\<and> f \\<cdot> ?a = ?a\n 2. \\<And>n.\n       \\<forall>f. n \\<cdot> f = n \\<and> f \\<cdot> n = n \\<Longrightarrow>\n       n = ?a", "show 1: \"?P Null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f.\n       (C1.null, C2.null) \\<cdot> f = (C1.null, C2.null) \\<and>\n       f \\<cdot> (C1.null, C2.null) = (C1.null, C2.null)", "using comp_def not_Arr_Null"], ["proof (prove)\nusing this:\n  ?g \\<cdot> ?f =\n  (if (C1.arr (fst ?f) \\<and> C2.arr (snd ?f)) \\<and>\n      (C1.arr (fst ?g) \\<and> C2.arr (snd ?g)) \\<and>\n      (if C1.arr (fst ?f) \\<and> C2.arr (snd ?f)\n       then (C1.cod (fst ?f), C2.cod (snd ?f)) else (C1.null, C2.null)) =\n      (if C1.arr (fst ?g) \\<and> C2.arr (snd ?g)\n       then (C1.dom (fst ?g), C2.dom (snd ?g)) else (C1.null, C2.null))\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n  \\<not> (C1.arr (fst (C1.null, C2.null)) \\<and>\n          C2.arr (snd (C1.null, C2.null)))\n\ngoal (1 subgoal):\n 1. \\<forall>f.\n       (C1.null, C2.null) \\<cdot> f = (C1.null, C2.null) \\<and>\n       f \\<cdot> (C1.null, C2.null) = (C1.null, C2.null)", "by metis"], ["proof (state)\nthis:\n  \\<forall>f.\n     (C1.null, C2.null) \\<cdot> f = (C1.null, C2.null) \\<and>\n     f \\<cdot> (C1.null, C2.null) = (C1.null, C2.null)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>f. n \\<cdot> f = n \\<and> f \\<cdot> n = n \\<Longrightarrow>\n       n = (C1.null, C2.null)", "thus \"\\<And>n. \\<forall>f. n \\<cdot> f = n \\<and> f \\<cdot> n = n \\<Longrightarrow> n = Null\""], ["proof (prove)\nusing this:\n  \\<forall>f.\n     (C1.null, C2.null) \\<cdot> f = (C1.null, C2.null) \\<and>\n     f \\<cdot> (C1.null, C2.null) = (C1.null, C2.null)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>f. n \\<cdot> f = n \\<and> f \\<cdot> n = n \\<Longrightarrow>\n       n = (C1.null, C2.null)", "by metis"], ["proof (state)\nthis:\n  \\<forall>f. ?n \\<cdot> f = ?n \\<and> f \\<cdot> ?n = ?n \\<Longrightarrow>\n  ?n = (C1.null, C2.null)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!n. \\<forall>f. n \\<cdot> f = n \\<and> f \\<cdot> n = n\n\ngoal:\nNo subgoals!", "qed"], ["", "notation in_hom  (\"\\<guillemotleft>_ : _ \\<rightarrow> _\\<guillemotright>\")"], ["", "lemma null_char [simp]:\n    shows \"null = Null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null = (C1.null, C2.null)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. null = (C1.null, C2.null)", "let ?P = \"\\<lambda>n. \\<forall>f. n \\<cdot> f = n \\<and> f \\<cdot> n = n\""], ["proof (state)\ngoal (1 subgoal):\n 1. null = (C1.null, C2.null)", "have \"?P Null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f.\n       (C1.null, C2.null) \\<cdot> f = (C1.null, C2.null) \\<and>\n       f \\<cdot> (C1.null, C2.null) = (C1.null, C2.null)", "using comp_def not_Arr_Null"], ["proof (prove)\nusing this:\n  ?g \\<cdot> ?f =\n  (if (C1.arr (fst ?f) \\<and> C2.arr (snd ?f)) \\<and>\n      (C1.arr (fst ?g) \\<and> C2.arr (snd ?g)) \\<and>\n      (if C1.arr (fst ?f) \\<and> C2.arr (snd ?f)\n       then (C1.cod (fst ?f), C2.cod (snd ?f)) else (C1.null, C2.null)) =\n      (if C1.arr (fst ?g) \\<and> C2.arr (snd ?g)\n       then (C1.dom (fst ?g), C2.dom (snd ?g)) else (C1.null, C2.null))\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n  \\<not> (C1.arr (fst (C1.null, C2.null)) \\<and>\n          C2.arr (snd (C1.null, C2.null)))\n\ngoal (1 subgoal):\n 1. \\<forall>f.\n       (C1.null, C2.null) \\<cdot> f = (C1.null, C2.null) \\<and>\n       f \\<cdot> (C1.null, C2.null) = (C1.null, C2.null)", "by metis"], ["proof (state)\nthis:\n  \\<forall>f.\n     (C1.null, C2.null) \\<cdot> f = (C1.null, C2.null) \\<and>\n     f \\<cdot> (C1.null, C2.null) = (C1.null, C2.null)\n\ngoal (1 subgoal):\n 1. null = (C1.null, C2.null)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>f.\n     (C1.null, C2.null) \\<cdot> f = (C1.null, C2.null) \\<and>\n     f \\<cdot> (C1.null, C2.null) = (C1.null, C2.null)\n\ngoal (1 subgoal):\n 1. null = (C1.null, C2.null)", "unfolding null_def"], ["proof (prove)\nusing this:\n  \\<forall>f.\n     (C1.null, C2.null) \\<cdot> f = (C1.null, C2.null) \\<and>\n     f \\<cdot> (C1.null, C2.null) = (C1.null, C2.null)\n\ngoal (1 subgoal):\n 1. (THE n. \\<forall>f. n \\<cdot> f = n \\<and> f \\<cdot> n = n) =\n    (C1.null, C2.null)", "using the1_equality [of ?P Null] ex_un_null"], ["proof (prove)\nusing this:\n  \\<forall>f.\n     (C1.null, C2.null) \\<cdot> f = (C1.null, C2.null) \\<and>\n     f \\<cdot> (C1.null, C2.null) = (C1.null, C2.null)\n  \\<lbrakk>\\<exists>!x. \\<forall>f. x \\<cdot> f = x \\<and> f \\<cdot> x = x;\n   \\<forall>f.\n      (C1.null, C2.null) \\<cdot> f = (C1.null, C2.null) \\<and>\n      f \\<cdot> (C1.null, C2.null) = (C1.null, C2.null)\\<rbrakk>\n  \\<Longrightarrow> (THE x.\n                        \\<forall>f.\n                           x \\<cdot> f = x \\<and> f \\<cdot> x = x) =\n                    (C1.null, C2.null)\n  \\<exists>!n. \\<forall>f. n \\<cdot> f = n \\<and> f \\<cdot> n = n\n\ngoal (1 subgoal):\n 1. (THE n. \\<forall>f. n \\<cdot> f = n \\<and> f \\<cdot> n = n) =\n    (C1.null, C2.null)", "by blast"], ["proof (state)\nthis:\n  null = (C1.null, C2.null)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ide_Ide:\n    assumes \"Ide a\"\n    shows \"ide a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide a", "unfolding ide_def comp_def null_char"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if (C1.arr (fst a) \\<and> C2.arr (snd a)) \\<and>\n        (C1.arr (fst a) \\<and> C2.arr (snd a)) \\<and>\n        (if C1.arr (fst a) \\<and> C2.arr (snd a)\n         then (C1.cod (fst a), C2.cod (snd a)) else (C1.null, C2.null)) =\n        (if C1.arr (fst a) \\<and> C2.arr (snd a)\n         then (C1.dom (fst a), C2.dom (snd a)) else (C1.null, C2.null))\n     then (fst a \\<cdot>\\<^sub>1 fst a, snd a \\<cdot>\\<^sub>2 snd a)\n     else (C1.null, C2.null)) \\<noteq>\n    (C1.null, C2.null) \\<and>\n    (\\<forall>f.\n        ((if (C1.arr (fst a) \\<and> C2.arr (snd a)) \\<and>\n             (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<and>\n             (if C1.arr (fst a) \\<and> C2.arr (snd a)\n              then (C1.cod (fst a), C2.cod (snd a))\n              else (C1.null, C2.null)) =\n             (if C1.arr (fst f) \\<and> C2.arr (snd f)\n              then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))\n          then (fst f \\<cdot>\\<^sub>1 fst a, snd f \\<cdot>\\<^sub>2 snd a)\n          else (C1.null, C2.null)) \\<noteq>\n         (C1.null, C2.null) \\<longrightarrow>\n         (if (C1.arr (fst a) \\<and> C2.arr (snd a)) \\<and>\n             (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<and>\n             (if C1.arr (fst a) \\<and> C2.arr (snd a)\n              then (C1.cod (fst a), C2.cod (snd a))\n              else (C1.null, C2.null)) =\n             (if C1.arr (fst f) \\<and> C2.arr (snd f)\n              then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))\n          then (fst f \\<cdot>\\<^sub>1 fst a, snd f \\<cdot>\\<^sub>2 snd a)\n          else (C1.null, C2.null)) =\n         f) \\<and>\n        ((if (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<and>\n             (C1.arr (fst a) \\<and> C2.arr (snd a)) \\<and>\n             (if C1.arr (fst f) \\<and> C2.arr (snd f)\n              then (C1.cod (fst f), C2.cod (snd f))\n              else (C1.null, C2.null)) =\n             (if C1.arr (fst a) \\<and> C2.arr (snd a)\n              then (C1.dom (fst a), C2.dom (snd a)) else (C1.null, C2.null))\n          then (fst a \\<cdot>\\<^sub>1 fst f, snd a \\<cdot>\\<^sub>2 snd f)\n          else (C1.null, C2.null)) \\<noteq>\n         (C1.null, C2.null) \\<longrightarrow>\n         (if (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<and>\n             (C1.arr (fst a) \\<and> C2.arr (snd a)) \\<and>\n             (if C1.arr (fst f) \\<and> C2.arr (snd f)\n              then (C1.cod (fst f), C2.cod (snd f))\n              else (C1.null, C2.null)) =\n             (if C1.arr (fst a) \\<and> C2.arr (snd a)\n              then (C1.dom (fst a), C2.dom (snd a)) else (C1.null, C2.null))\n          then (fst a \\<cdot>\\<^sub>1 fst f, snd a \\<cdot>\\<^sub>2 snd f)\n          else (C1.null, C2.null)) =\n         f))", "using assms C1.not_arr_null C1.ide_in_hom C1.comp_arr_dom C1.comp_cod_arr\n            C2.comp_arr_dom C2.comp_cod_arr"], ["proof (prove)\nusing this:\n  C1.ide (fst a) \\<and> C2.ide (snd a)\n  \\<not> C1.arr C1.null\n  C1.ide ?a =\n  \\<guillemotleft>?a : ?a \\<rightarrow>\\<^sub>1 ?a\\<guillemotright>\n  \\<lbrakk>C1.arr ?f; C1.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot>\\<^sub>1 ?a = ?f\n  \\<lbrakk>C1.arr ?f; C1.cod ?f = ?b\\<rbrakk>\n  \\<Longrightarrow> ?b \\<cdot>\\<^sub>1 ?f = ?f\n  \\<lbrakk>C2.arr ?f; C2.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot>\\<^sub>2 ?a = ?f\n  \\<lbrakk>C2.arr ?f; C2.cod ?f = ?b\\<rbrakk>\n  \\<Longrightarrow> ?b \\<cdot>\\<^sub>2 ?f = ?f\n\ngoal (1 subgoal):\n 1. (if (C1.arr (fst a) \\<and> C2.arr (snd a)) \\<and>\n        (C1.arr (fst a) \\<and> C2.arr (snd a)) \\<and>\n        (if C1.arr (fst a) \\<and> C2.arr (snd a)\n         then (C1.cod (fst a), C2.cod (snd a)) else (C1.null, C2.null)) =\n        (if C1.arr (fst a) \\<and> C2.arr (snd a)\n         then (C1.dom (fst a), C2.dom (snd a)) else (C1.null, C2.null))\n     then (fst a \\<cdot>\\<^sub>1 fst a, snd a \\<cdot>\\<^sub>2 snd a)\n     else (C1.null, C2.null)) \\<noteq>\n    (C1.null, C2.null) \\<and>\n    (\\<forall>f.\n        ((if (C1.arr (fst a) \\<and> C2.arr (snd a)) \\<and>\n             (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<and>\n             (if C1.arr (fst a) \\<and> C2.arr (snd a)\n              then (C1.cod (fst a), C2.cod (snd a))\n              else (C1.null, C2.null)) =\n             (if C1.arr (fst f) \\<and> C2.arr (snd f)\n              then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))\n          then (fst f \\<cdot>\\<^sub>1 fst a, snd f \\<cdot>\\<^sub>2 snd a)\n          else (C1.null, C2.null)) \\<noteq>\n         (C1.null, C2.null) \\<longrightarrow>\n         (if (C1.arr (fst a) \\<and> C2.arr (snd a)) \\<and>\n             (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<and>\n             (if C1.arr (fst a) \\<and> C2.arr (snd a)\n              then (C1.cod (fst a), C2.cod (snd a))\n              else (C1.null, C2.null)) =\n             (if C1.arr (fst f) \\<and> C2.arr (snd f)\n              then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))\n          then (fst f \\<cdot>\\<^sub>1 fst a, snd f \\<cdot>\\<^sub>2 snd a)\n          else (C1.null, C2.null)) =\n         f) \\<and>\n        ((if (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<and>\n             (C1.arr (fst a) \\<and> C2.arr (snd a)) \\<and>\n             (if C1.arr (fst f) \\<and> C2.arr (snd f)\n              then (C1.cod (fst f), C2.cod (snd f))\n              else (C1.null, C2.null)) =\n             (if C1.arr (fst a) \\<and> C2.arr (snd a)\n              then (C1.dom (fst a), C2.dom (snd a)) else (C1.null, C2.null))\n          then (fst a \\<cdot>\\<^sub>1 fst f, snd a \\<cdot>\\<^sub>2 snd f)\n          else (C1.null, C2.null)) \\<noteq>\n         (C1.null, C2.null) \\<longrightarrow>\n         (if (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<and>\n             (C1.arr (fst a) \\<and> C2.arr (snd a)) \\<and>\n             (if C1.arr (fst f) \\<and> C2.arr (snd f)\n              then (C1.cod (fst f), C2.cod (snd f))\n              else (C1.null, C2.null)) =\n             (if C1.arr (fst a) \\<and> C2.arr (snd a)\n              then (C1.dom (fst a), C2.dom (snd a)) else (C1.null, C2.null))\n          then (fst a \\<cdot>\\<^sub>1 fst f, snd a \\<cdot>\\<^sub>2 snd f)\n          else (C1.null, C2.null)) =\n         f))", "by auto"], ["", "lemma has_domain_char:\n    shows \"domains f \\<noteq> {} \\<longleftrightarrow> Arr f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (domains f \\<noteq> {}) = (C1.arr (fst f) \\<and> C2.arr (snd f))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. domains f \\<noteq> {} \\<Longrightarrow>\n    C1.arr (fst f) \\<and> C2.arr (snd f)\n 2. C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow>\n    domains f \\<noteq> {}", "show \"domains f \\<noteq> {} \\<Longrightarrow> Arr f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. domains f \\<noteq> {} \\<Longrightarrow>\n    C1.arr (fst f) \\<and> C2.arr (snd f)", "unfolding domains_def comp_def null_char"], ["proof (prove)\ngoal (1 subgoal):\n 1. {a. partial_magma.ide\n         (\\<lambda>g f.\n             if (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<and>\n                (C1.arr (fst g) \\<and> C2.arr (snd g)) \\<and>\n                (if C1.arr (fst f) \\<and> C2.arr (snd f)\n                 then (C1.cod (fst f), C2.cod (snd f))\n                 else (C1.null, C2.null)) =\n                (if C1.arr (fst g) \\<and> C2.arr (snd g)\n                 then (C1.dom (fst g), C2.dom (snd g))\n                 else (C1.null, C2.null))\n             then (fst g \\<cdot>\\<^sub>1 fst f, snd g \\<cdot>\\<^sub>2 snd f)\n             else (C1.null, C2.null))\n         a \\<and>\n        (if (C1.arr (fst a) \\<and> C2.arr (snd a)) \\<and>\n            (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<and>\n            (if C1.arr (fst a) \\<and> C2.arr (snd a)\n             then (C1.cod (fst a), C2.cod (snd a))\n             else (C1.null, C2.null)) =\n            (if C1.arr (fst f) \\<and> C2.arr (snd f)\n             then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))\n         then (fst f \\<cdot>\\<^sub>1 fst a, snd f \\<cdot>\\<^sub>2 snd a)\n         else (C1.null, C2.null)) \\<noteq>\n        (C1.null, C2.null)} \\<noteq>\n    {} \\<Longrightarrow>\n    C1.arr (fst f) \\<and> C2.arr (snd f)", "by (auto; metis)"], ["proof (state)\nthis:\n  domains f \\<noteq> {} \\<Longrightarrow>\n  C1.arr (fst f) \\<and> C2.arr (snd f)\n\ngoal (1 subgoal):\n 1. C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow>\n    domains f \\<noteq> {}", "assume f: \"Arr f\""], ["proof (state)\nthis:\n  C1.arr (fst f) \\<and> C2.arr (snd f)\n\ngoal (1 subgoal):\n 1. C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow>\n    domains f \\<noteq> {}", "show \"domains f \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. domains f \\<noteq> {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. domains f \\<noteq> {}", "have \"ide (Dom f) \\<and> comp f (Dom f) \\<noteq> null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide (if C1.arr (fst f) \\<and> C2.arr (snd f)\n         then (C1.dom (fst f), C2.dom (snd f))\n         else (C1.null, C2.null)) \\<and>\n    f \\<cdot>\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null)) \\<noteq>\n    null", "using f comp_def ide_Ide C1.comp_arr_dom C1.arr_dom_iff_arr C2.arr_dom_iff_arr"], ["proof (prove)\nusing this:\n  C1.arr (fst f) \\<and> C2.arr (snd f)\n  ?g \\<cdot> ?f =\n  (if (C1.arr (fst ?f) \\<and> C2.arr (snd ?f)) \\<and>\n      (C1.arr (fst ?g) \\<and> C2.arr (snd ?g)) \\<and>\n      (if C1.arr (fst ?f) \\<and> C2.arr (snd ?f)\n       then (C1.cod (fst ?f), C2.cod (snd ?f)) else (C1.null, C2.null)) =\n      (if C1.arr (fst ?g) \\<and> C2.arr (snd ?g)\n       then (C1.dom (fst ?g), C2.dom (snd ?g)) else (C1.null, C2.null))\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n  C1.ide (fst ?a) \\<and> C2.ide (snd ?a) \\<Longrightarrow> ide ?a\n  \\<lbrakk>C1.arr ?f; C1.dom ?f = ?a\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cdot>\\<^sub>1 ?a = ?f\n  C1.arr (C1.dom ?f) = C1.arr ?f\n  C2.arr (C2.dom ?f) = C2.arr ?f\n\ngoal (1 subgoal):\n 1. ide (if C1.arr (fst f) \\<and> C2.arr (snd f)\n         then (C1.dom (fst f), C2.dom (snd f))\n         else (C1.null, C2.null)) \\<and>\n    f \\<cdot>\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null)) \\<noteq>\n    null", "by auto"], ["proof (state)\nthis:\n  ide (if C1.arr (fst f) \\<and> C2.arr (snd f)\n       then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null)) \\<and>\n  f \\<cdot>\n  (if C1.arr (fst f) \\<and> C2.arr (snd f)\n   then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null)) \\<noteq>\n  null\n\ngoal (1 subgoal):\n 1. domains f \\<noteq> {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  ide (if C1.arr (fst f) \\<and> C2.arr (snd f)\n       then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null)) \\<and>\n  f \\<cdot>\n  (if C1.arr (fst f) \\<and> C2.arr (snd f)\n   then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null)) \\<noteq>\n  null\n\ngoal (1 subgoal):\n 1. domains f \\<noteq> {}", "using domains_def"], ["proof (prove)\nusing this:\n  ide (if C1.arr (fst f) \\<and> C2.arr (snd f)\n       then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null)) \\<and>\n  f \\<cdot>\n  (if C1.arr (fst f) \\<and> C2.arr (snd f)\n   then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null)) \\<noteq>\n  null\n  domains ?f \\<equiv> {a. ide a \\<and> ?f \\<cdot> a \\<noteq> null}\n\ngoal (1 subgoal):\n 1. domains f \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  domains f \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  domains f \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma has_codomain_char:\n    shows \"codomains f \\<noteq> {} \\<longleftrightarrow> Arr f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (codomains f \\<noteq> {}) = (C1.arr (fst f) \\<and> C2.arr (snd f))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. codomains f \\<noteq> {} \\<Longrightarrow>\n    C1.arr (fst f) \\<and> C2.arr (snd f)\n 2. C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow>\n    codomains f \\<noteq> {}", "show \"codomains f \\<noteq> {} \\<Longrightarrow> Arr f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. codomains f \\<noteq> {} \\<Longrightarrow>\n    C1.arr (fst f) \\<and> C2.arr (snd f)", "unfolding codomains_def comp_def null_char"], ["proof (prove)\ngoal (1 subgoal):\n 1. {b. partial_magma.ide\n         (\\<lambda>g f.\n             if (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<and>\n                (C1.arr (fst g) \\<and> C2.arr (snd g)) \\<and>\n                (if C1.arr (fst f) \\<and> C2.arr (snd f)\n                 then (C1.cod (fst f), C2.cod (snd f))\n                 else (C1.null, C2.null)) =\n                (if C1.arr (fst g) \\<and> C2.arr (snd g)\n                 then (C1.dom (fst g), C2.dom (snd g))\n                 else (C1.null, C2.null))\n             then (fst g \\<cdot>\\<^sub>1 fst f, snd g \\<cdot>\\<^sub>2 snd f)\n             else (C1.null, C2.null))\n         b \\<and>\n        (if (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<and>\n            (C1.arr (fst b) \\<and> C2.arr (snd b)) \\<and>\n            (if C1.arr (fst f) \\<and> C2.arr (snd f)\n             then (C1.cod (fst f), C2.cod (snd f))\n             else (C1.null, C2.null)) =\n            (if C1.arr (fst b) \\<and> C2.arr (snd b)\n             then (C1.dom (fst b), C2.dom (snd b)) else (C1.null, C2.null))\n         then (fst b \\<cdot>\\<^sub>1 fst f, snd b \\<cdot>\\<^sub>2 snd f)\n         else (C1.null, C2.null)) \\<noteq>\n        (C1.null, C2.null)} \\<noteq>\n    {} \\<Longrightarrow>\n    C1.arr (fst f) \\<and> C2.arr (snd f)", "by (auto; metis)"], ["proof (state)\nthis:\n  codomains f \\<noteq> {} \\<Longrightarrow>\n  C1.arr (fst f) \\<and> C2.arr (snd f)\n\ngoal (1 subgoal):\n 1. C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow>\n    codomains f \\<noteq> {}", "assume f: \"Arr f\""], ["proof (state)\nthis:\n  C1.arr (fst f) \\<and> C2.arr (snd f)\n\ngoal (1 subgoal):\n 1. C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow>\n    codomains f \\<noteq> {}", "show \"codomains f \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. codomains f \\<noteq> {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. codomains f \\<noteq> {}", "have \"ide (Cod f) \\<and> comp (Cod f) f \\<noteq> null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide (if C1.arr (fst f) \\<and> C2.arr (snd f)\n         then (C1.cod (fst f), C2.cod (snd f))\n         else (C1.null, C2.null)) \\<and>\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null)) \\<cdot>\n    f \\<noteq>\n    null", "using f comp_def ide_Ide C1.comp_cod_arr C1.arr_cod_iff_arr C2.arr_cod_iff_arr"], ["proof (prove)\nusing this:\n  C1.arr (fst f) \\<and> C2.arr (snd f)\n  ?g \\<cdot> ?f =\n  (if (C1.arr (fst ?f) \\<and> C2.arr (snd ?f)) \\<and>\n      (C1.arr (fst ?g) \\<and> C2.arr (snd ?g)) \\<and>\n      (if C1.arr (fst ?f) \\<and> C2.arr (snd ?f)\n       then (C1.cod (fst ?f), C2.cod (snd ?f)) else (C1.null, C2.null)) =\n      (if C1.arr (fst ?g) \\<and> C2.arr (snd ?g)\n       then (C1.dom (fst ?g), C2.dom (snd ?g)) else (C1.null, C2.null))\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n  C1.ide (fst ?a) \\<and> C2.ide (snd ?a) \\<Longrightarrow> ide ?a\n  \\<lbrakk>C1.arr ?f; C1.cod ?f = ?b\\<rbrakk>\n  \\<Longrightarrow> ?b \\<cdot>\\<^sub>1 ?f = ?f\n  C1.arr (C1.cod ?f) = C1.arr ?f\n  C2.arr (C2.cod ?f) = C2.arr ?f\n\ngoal (1 subgoal):\n 1. ide (if C1.arr (fst f) \\<and> C2.arr (snd f)\n         then (C1.cod (fst f), C2.cod (snd f))\n         else (C1.null, C2.null)) \\<and>\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null)) \\<cdot>\n    f \\<noteq>\n    null", "by auto"], ["proof (state)\nthis:\n  ide (if C1.arr (fst f) \\<and> C2.arr (snd f)\n       then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null)) \\<and>\n  (if C1.arr (fst f) \\<and> C2.arr (snd f)\n   then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null)) \\<cdot>\n  f \\<noteq>\n  null\n\ngoal (1 subgoal):\n 1. codomains f \\<noteq> {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  ide (if C1.arr (fst f) \\<and> C2.arr (snd f)\n       then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null)) \\<and>\n  (if C1.arr (fst f) \\<and> C2.arr (snd f)\n   then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null)) \\<cdot>\n  f \\<noteq>\n  null\n\ngoal (1 subgoal):\n 1. codomains f \\<noteq> {}", "using codomains_def"], ["proof (prove)\nusing this:\n  ide (if C1.arr (fst f) \\<and> C2.arr (snd f)\n       then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null)) \\<and>\n  (if C1.arr (fst f) \\<and> C2.arr (snd f)\n   then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null)) \\<cdot>\n  f \\<noteq>\n  null\n  codomains ?f \\<equiv> {b. ide b \\<and> b \\<cdot> ?f \\<noteq> null}\n\ngoal (1 subgoal):\n 1. codomains f \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  codomains f \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  codomains f \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma arr_char [iff]:\n    shows \"arr f \\<longleftrightarrow> Arr f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr f = (C1.arr (fst f) \\<and> C2.arr (snd f))", "using has_domain_char has_codomain_char arr_def"], ["proof (prove)\nusing this:\n  (domains ?f \\<noteq> {}) = (C1.arr (fst ?f) \\<and> C2.arr (snd ?f))\n  (codomains ?f \\<noteq> {}) = (C1.arr (fst ?f) \\<and> C2.arr (snd ?f))\n  arr ?f \\<equiv> domains ?f \\<noteq> {} \\<or> codomains ?f \\<noteq> {}\n\ngoal (1 subgoal):\n 1. arr f = (C1.arr (fst f) \\<and> C2.arr (snd f))", "by simp"], ["", "lemma arrI [intro]:\n    assumes \"C1.arr f1\" and \"C2.arr f2\"\n    shows \"arr (f1, f2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr (f1, f2)", "using assms"], ["proof (prove)\nusing this:\n  C1.arr f1\n  C2.arr f2\n\ngoal (1 subgoal):\n 1. arr (f1, f2)", "by simp"], ["", "lemma arrE:\n    assumes \"arr f\"\n    and \"C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow> T\"\n    shows \"T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T", "using assms"], ["proof (prove)\nusing this:\n  arr f\n  C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow> T\n\ngoal (1 subgoal):\n 1. T", "by auto"], ["", "lemma seqI [intro]:\n    assumes \"C1.seq g1 f1 \\<and> C2.seq g2 f2\"\n    shows \"seq (g1, g2) (f1, f2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. seq (g1, g2) (f1, f2)", "using assms comp_def"], ["proof (prove)\nusing this:\n  C1.seq g1 f1 \\<and> C2.seq g2 f2\n  ?g \\<cdot> ?f =\n  (if (C1.arr (fst ?f) \\<and> C2.arr (snd ?f)) \\<and>\n      (C1.arr (fst ?g) \\<and> C2.arr (snd ?g)) \\<and>\n      (if C1.arr (fst ?f) \\<and> C2.arr (snd ?f)\n       then (C1.cod (fst ?f), C2.cod (snd ?f)) else (C1.null, C2.null)) =\n      (if C1.arr (fst ?g) \\<and> C2.arr (snd ?g)\n       then (C1.dom (fst ?g), C2.dom (snd ?g)) else (C1.null, C2.null))\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n\ngoal (1 subgoal):\n 1. seq (g1, g2) (f1, f2)", "by auto"], ["", "lemma seqE [elim]:\n    assumes \"seq g f\"\n    and \"C1.seq (fst g) (fst f) \\<Longrightarrow> C2.seq (snd g) (snd f) \\<Longrightarrow> T\"\n    shows \"T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T", "using assms comp_def"], ["proof (prove)\nusing this:\n  seq g f\n  \\<lbrakk>C1.seq (fst g) (fst f); C2.seq (snd g) (snd f)\\<rbrakk>\n  \\<Longrightarrow> T\n  ?g \\<cdot> ?f =\n  (if (C1.arr (fst ?f) \\<and> C2.arr (snd ?f)) \\<and>\n      (C1.arr (fst ?g) \\<and> C2.arr (snd ?g)) \\<and>\n      (if C1.arr (fst ?f) \\<and> C2.arr (snd ?f)\n       then (C1.cod (fst ?f), C2.cod (snd ?f)) else (C1.null, C2.null)) =\n      (if C1.arr (fst ?g) \\<and> C2.arr (snd ?g)\n       then (C1.dom (fst ?g), C2.dom (snd ?g)) else (C1.null, C2.null))\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n\ngoal (1 subgoal):\n 1. T", "by (metis (no_types, lifting) C1.seqI C2.seqI Pair_inject not_arr_null null_char)"], ["", "lemma seq_char [iff]:\n    shows \"seq g f \\<longleftrightarrow> C1.seq (fst g) (fst f) \\<and> C2.seq (snd g) (snd f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. seq g f = (C1.seq (fst g) (fst f) \\<and> C2.seq (snd g) (snd f))", "using comp_def"], ["proof (prove)\nusing this:\n  ?g \\<cdot> ?f =\n  (if (C1.arr (fst ?f) \\<and> C2.arr (snd ?f)) \\<and>\n      (C1.arr (fst ?g) \\<and> C2.arr (snd ?g)) \\<and>\n      (if C1.arr (fst ?f) \\<and> C2.arr (snd ?f)\n       then (C1.cod (fst ?f), C2.cod (snd ?f)) else (C1.null, C2.null)) =\n      (if C1.arr (fst ?g) \\<and> C2.arr (snd ?g)\n       then (C1.dom (fst ?g), C2.dom (snd ?g)) else (C1.null, C2.null))\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n\ngoal (1 subgoal):\n 1. seq g f = (C1.seq (fst g) (fst f) \\<and> C2.seq (snd g) (snd f))", "by auto"], ["", "lemma Dom_comp:\n    assumes \"seq g f\"\n    shows \"Dom (g \\<cdot> f) = Dom f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if C1.arr (fst (g \\<cdot> f)) \\<and> C2.arr (snd (g \\<cdot> f))\n     then (C1.dom (fst (g \\<cdot> f)), C2.dom (snd (g \\<cdot> f)))\n     else (C1.null, C2.null)) =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (if C1.arr (fst (g \\<cdot> f)) \\<and> C2.arr (snd (g \\<cdot> f))\n     then (C1.dom (fst (g \\<cdot> f)), C2.dom (snd (g \\<cdot> f)))\n     else (C1.null, C2.null)) =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))", "have \"C1.arr (fst f) \\<and> C1.arr (fst g) \\<and> C1.dom (fst g) = C1.cod (fst f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C1.arr (fst f) \\<and>\n    C1.arr (fst g) \\<and> C1.dom (fst g) = C1.cod (fst f)", "using assms"], ["proof (prove)\nusing this:\n  seq g f\n\ngoal (1 subgoal):\n 1. C1.arr (fst f) \\<and>\n    C1.arr (fst g) \\<and> C1.dom (fst g) = C1.cod (fst f)", "by blast"], ["proof (state)\nthis:\n  C1.arr (fst f) \\<and>\n  C1.arr (fst g) \\<and> C1.dom (fst g) = C1.cod (fst f)\n\ngoal (1 subgoal):\n 1. (if C1.arr (fst (g \\<cdot> f)) \\<and> C2.arr (snd (g \\<cdot> f))\n     then (C1.dom (fst (g \\<cdot> f)), C2.dom (snd (g \\<cdot> f)))\n     else (C1.null, C2.null)) =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))", "moreover"], ["proof (state)\nthis:\n  C1.arr (fst f) \\<and>\n  C1.arr (fst g) \\<and> C1.dom (fst g) = C1.cod (fst f)\n\ngoal (1 subgoal):\n 1. (if C1.arr (fst (g \\<cdot> f)) \\<and> C2.arr (snd (g \\<cdot> f))\n     then (C1.dom (fst (g \\<cdot> f)), C2.dom (snd (g \\<cdot> f)))\n     else (C1.null, C2.null)) =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))", "have \"C2.arr (snd f) \\<and> C2.arr (snd g) \\<and> C2.dom (snd g) = C2.cod (snd f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C2.arr (snd f) \\<and>\n    C2.arr (snd g) \\<and> C2.dom (snd g) = C2.cod (snd f)", "using assms"], ["proof (prove)\nusing this:\n  seq g f\n\ngoal (1 subgoal):\n 1. C2.arr (snd f) \\<and>\n    C2.arr (snd g) \\<and> C2.dom (snd g) = C2.cod (snd f)", "by blast"], ["proof (state)\nthis:\n  C2.arr (snd f) \\<and>\n  C2.arr (snd g) \\<and> C2.dom (snd g) = C2.cod (snd f)\n\ngoal (1 subgoal):\n 1. (if C1.arr (fst (g \\<cdot> f)) \\<and> C2.arr (snd (g \\<cdot> f))\n     then (C1.dom (fst (g \\<cdot> f)), C2.dom (snd (g \\<cdot> f)))\n     else (C1.null, C2.null)) =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))", "ultimately"], ["proof (chain)\npicking this:\n  C1.arr (fst f) \\<and>\n  C1.arr (fst g) \\<and> C1.dom (fst g) = C1.cod (fst f)\n  C2.arr (snd f) \\<and>\n  C2.arr (snd g) \\<and> C2.dom (snd g) = C2.cod (snd f)", "show ?thesis"], ["proof (prove)\nusing this:\n  C1.arr (fst f) \\<and>\n  C1.arr (fst g) \\<and> C1.dom (fst g) = C1.cod (fst f)\n  C2.arr (snd f) \\<and>\n  C2.arr (snd g) \\<and> C2.dom (snd g) = C2.cod (snd f)\n\ngoal (1 subgoal):\n 1. (if C1.arr (fst (g \\<cdot> f)) \\<and> C2.arr (snd (g \\<cdot> f))\n     then (C1.dom (fst (g \\<cdot> f)), C2.dom (snd (g \\<cdot> f)))\n     else (C1.null, C2.null)) =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))", "by (simp add: comp_def)"], ["proof (state)\nthis:\n  (if C1.arr (fst (g \\<cdot> f)) \\<and> C2.arr (snd (g \\<cdot> f))\n   then (C1.dom (fst (g \\<cdot> f)), C2.dom (snd (g \\<cdot> f)))\n   else (C1.null, C2.null)) =\n  (if C1.arr (fst f) \\<and> C2.arr (snd f)\n   then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Cod_comp:\n    assumes \"seq g f\"\n    shows \"Cod (g \\<cdot> f) = Cod g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if C1.arr (fst (g \\<cdot> f)) \\<and> C2.arr (snd (g \\<cdot> f))\n     then (C1.cod (fst (g \\<cdot> f)), C2.cod (snd (g \\<cdot> f)))\n     else (C1.null, C2.null)) =\n    (if C1.arr (fst g) \\<and> C2.arr (snd g)\n     then (C1.cod (fst g), C2.cod (snd g)) else (C1.null, C2.null))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (if C1.arr (fst (g \\<cdot> f)) \\<and> C2.arr (snd (g \\<cdot> f))\n     then (C1.cod (fst (g \\<cdot> f)), C2.cod (snd (g \\<cdot> f)))\n     else (C1.null, C2.null)) =\n    (if C1.arr (fst g) \\<and> C2.arr (snd g)\n     then (C1.cod (fst g), C2.cod (snd g)) else (C1.null, C2.null))", "have \"C1.arr (fst f) \\<and> C1.arr (fst g) \\<and> C1.dom (fst g) = C1.cod (fst f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C1.arr (fst f) \\<and>\n    C1.arr (fst g) \\<and> C1.dom (fst g) = C1.cod (fst f)", "using assms"], ["proof (prove)\nusing this:\n  seq g f\n\ngoal (1 subgoal):\n 1. C1.arr (fst f) \\<and>\n    C1.arr (fst g) \\<and> C1.dom (fst g) = C1.cod (fst f)", "by blast"], ["proof (state)\nthis:\n  C1.arr (fst f) \\<and>\n  C1.arr (fst g) \\<and> C1.dom (fst g) = C1.cod (fst f)\n\ngoal (1 subgoal):\n 1. (if C1.arr (fst (g \\<cdot> f)) \\<and> C2.arr (snd (g \\<cdot> f))\n     then (C1.cod (fst (g \\<cdot> f)), C2.cod (snd (g \\<cdot> f)))\n     else (C1.null, C2.null)) =\n    (if C1.arr (fst g) \\<and> C2.arr (snd g)\n     then (C1.cod (fst g), C2.cod (snd g)) else (C1.null, C2.null))", "moreover"], ["proof (state)\nthis:\n  C1.arr (fst f) \\<and>\n  C1.arr (fst g) \\<and> C1.dom (fst g) = C1.cod (fst f)\n\ngoal (1 subgoal):\n 1. (if C1.arr (fst (g \\<cdot> f)) \\<and> C2.arr (snd (g \\<cdot> f))\n     then (C1.cod (fst (g \\<cdot> f)), C2.cod (snd (g \\<cdot> f)))\n     else (C1.null, C2.null)) =\n    (if C1.arr (fst g) \\<and> C2.arr (snd g)\n     then (C1.cod (fst g), C2.cod (snd g)) else (C1.null, C2.null))", "have \"C2.arr (snd f) \\<and> C2.arr (snd g) \\<and> C2.dom (snd g) = C2.cod (snd f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C2.arr (snd f) \\<and>\n    C2.arr (snd g) \\<and> C2.dom (snd g) = C2.cod (snd f)", "using assms"], ["proof (prove)\nusing this:\n  seq g f\n\ngoal (1 subgoal):\n 1. C2.arr (snd f) \\<and>\n    C2.arr (snd g) \\<and> C2.dom (snd g) = C2.cod (snd f)", "by blast"], ["proof (state)\nthis:\n  C2.arr (snd f) \\<and>\n  C2.arr (snd g) \\<and> C2.dom (snd g) = C2.cod (snd f)\n\ngoal (1 subgoal):\n 1. (if C1.arr (fst (g \\<cdot> f)) \\<and> C2.arr (snd (g \\<cdot> f))\n     then (C1.cod (fst (g \\<cdot> f)), C2.cod (snd (g \\<cdot> f)))\n     else (C1.null, C2.null)) =\n    (if C1.arr (fst g) \\<and> C2.arr (snd g)\n     then (C1.cod (fst g), C2.cod (snd g)) else (C1.null, C2.null))", "ultimately"], ["proof (chain)\npicking this:\n  C1.arr (fst f) \\<and>\n  C1.arr (fst g) \\<and> C1.dom (fst g) = C1.cod (fst f)\n  C2.arr (snd f) \\<and>\n  C2.arr (snd g) \\<and> C2.dom (snd g) = C2.cod (snd f)", "show ?thesis"], ["proof (prove)\nusing this:\n  C1.arr (fst f) \\<and>\n  C1.arr (fst g) \\<and> C1.dom (fst g) = C1.cod (fst f)\n  C2.arr (snd f) \\<and>\n  C2.arr (snd g) \\<and> C2.dom (snd g) = C2.cod (snd f)\n\ngoal (1 subgoal):\n 1. (if C1.arr (fst (g \\<cdot> f)) \\<and> C2.arr (snd (g \\<cdot> f))\n     then (C1.cod (fst (g \\<cdot> f)), C2.cod (snd (g \\<cdot> f)))\n     else (C1.null, C2.null)) =\n    (if C1.arr (fst g) \\<and> C2.arr (snd g)\n     then (C1.cod (fst g), C2.cod (snd g)) else (C1.null, C2.null))", "by (simp add: comp_def)"], ["proof (state)\nthis:\n  (if C1.arr (fst (g \\<cdot> f)) \\<and> C2.arr (snd (g \\<cdot> f))\n   then (C1.cod (fst (g \\<cdot> f)), C2.cod (snd (g \\<cdot> f)))\n   else (C1.null, C2.null)) =\n  (if C1.arr (fst g) \\<and> C2.arr (snd g)\n   then (C1.cod (fst g), C2.cod (snd g)) else (C1.null, C2.null))\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem is_category:\n    shows \"category comp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category (\\<cdot>)", "proof"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>g f. g \\<cdot> f \\<noteq> null \\<Longrightarrow> seq g f\n 2. \\<And>f. (domains f \\<noteq> {}) = (codomains f \\<noteq> {})\n 3. \\<And>h g f.\n       \\<lbrakk>seq h g; seq (h \\<cdot> g) f\\<rbrakk>\n       \\<Longrightarrow> seq g f\n 4. \\<And>h g f.\n       \\<lbrakk>seq h (g \\<cdot> f); seq g f\\<rbrakk>\n       \\<Longrightarrow> seq h g\n 5. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> seq (h \\<cdot> g) f\n 6. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> (h \\<cdot> g) \\<cdot> f = h \\<cdot> g \\<cdot> f", "fix f"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>g f. g \\<cdot> f \\<noteq> null \\<Longrightarrow> seq g f\n 2. \\<And>f. (domains f \\<noteq> {}) = (codomains f \\<noteq> {})\n 3. \\<And>h g f.\n       \\<lbrakk>seq h g; seq (h \\<cdot> g) f\\<rbrakk>\n       \\<Longrightarrow> seq g f\n 4. \\<And>h g f.\n       \\<lbrakk>seq h (g \\<cdot> f); seq g f\\<rbrakk>\n       \\<Longrightarrow> seq h g\n 5. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> seq (h \\<cdot> g) f\n 6. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> (h \\<cdot> g) \\<cdot> f = h \\<cdot> g \\<cdot> f", "show \"(domains f \\<noteq> {}) = (codomains f \\<noteq> {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (domains f \\<noteq> {}) = (codomains f \\<noteq> {})", "using has_domain_char has_codomain_char"], ["proof (prove)\nusing this:\n  (domains ?f \\<noteq> {}) = (C1.arr (fst ?f) \\<and> C2.arr (snd ?f))\n  (codomains ?f \\<noteq> {}) = (C1.arr (fst ?f) \\<and> C2.arr (snd ?f))\n\ngoal (1 subgoal):\n 1. (domains f \\<noteq> {}) = (codomains f \\<noteq> {})", "by simp"], ["proof (state)\nthis:\n  (domains f \\<noteq> {}) = (codomains f \\<noteq> {})\n\ngoal (5 subgoals):\n 1. \\<And>g f. g \\<cdot> f \\<noteq> null \\<Longrightarrow> seq g f\n 2. \\<And>h g f.\n       \\<lbrakk>seq h g; seq (h \\<cdot> g) f\\<rbrakk>\n       \\<Longrightarrow> seq g f\n 3. \\<And>h g f.\n       \\<lbrakk>seq h (g \\<cdot> f); seq g f\\<rbrakk>\n       \\<Longrightarrow> seq h g\n 4. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> seq (h \\<cdot> g) f\n 5. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> (h \\<cdot> g) \\<cdot> f = h \\<cdot> g \\<cdot> f", "fix g"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>g f. g \\<cdot> f \\<noteq> null \\<Longrightarrow> seq g f\n 2. \\<And>h g f.\n       \\<lbrakk>seq h g; seq (h \\<cdot> g) f\\<rbrakk>\n       \\<Longrightarrow> seq g f\n 3. \\<And>h g f.\n       \\<lbrakk>seq h (g \\<cdot> f); seq g f\\<rbrakk>\n       \\<Longrightarrow> seq h g\n 4. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> seq (h \\<cdot> g) f\n 5. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> (h \\<cdot> g) \\<cdot> f = h \\<cdot> g \\<cdot> f", "show \"g \\<cdot> f \\<noteq> null \\<Longrightarrow> seq g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<cdot> f \\<noteq> null \\<Longrightarrow> seq g f", "using comp_def seq_char"], ["proof (prove)\nusing this:\n  ?g \\<cdot> ?f =\n  (if (C1.arr (fst ?f) \\<and> C2.arr (snd ?f)) \\<and>\n      (C1.arr (fst ?g) \\<and> C2.arr (snd ?g)) \\<and>\n      (if C1.arr (fst ?f) \\<and> C2.arr (snd ?f)\n       then (C1.cod (fst ?f), C2.cod (snd ?f)) else (C1.null, C2.null)) =\n      (if C1.arr (fst ?g) \\<and> C2.arr (snd ?g)\n       then (C1.dom (fst ?g), C2.dom (snd ?g)) else (C1.null, C2.null))\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n  seq ?g ?f = (C1.seq (fst ?g) (fst ?f) \\<and> C2.seq (snd ?g) (snd ?f))\n\ngoal (1 subgoal):\n 1. g \\<cdot> f \\<noteq> null \\<Longrightarrow> seq g f", "by (metis C1.seqI C2.seqI Pair_inject null_char)"], ["proof (state)\nthis:\n  g \\<cdot> f \\<noteq> null \\<Longrightarrow> seq g f\n\ngoal (4 subgoals):\n 1. \\<And>h g f.\n       \\<lbrakk>seq h g; seq (h \\<cdot> g) f\\<rbrakk>\n       \\<Longrightarrow> seq g f\n 2. \\<And>h g f.\n       \\<lbrakk>seq h (g \\<cdot> f); seq g f\\<rbrakk>\n       \\<Longrightarrow> seq h g\n 3. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> seq (h \\<cdot> g) f\n 4. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> (h \\<cdot> g) \\<cdot> f = h \\<cdot> g \\<cdot> f", "fix h"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>h g f.\n       \\<lbrakk>seq h g; seq (h \\<cdot> g) f\\<rbrakk>\n       \\<Longrightarrow> seq g f\n 2. \\<And>h g f.\n       \\<lbrakk>seq h (g \\<cdot> f); seq g f\\<rbrakk>\n       \\<Longrightarrow> seq h g\n 3. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> seq (h \\<cdot> g) f\n 4. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> (h \\<cdot> g) \\<cdot> f = h \\<cdot> g \\<cdot> f", "show \"seq h g \\<Longrightarrow> seq (h \\<cdot> g) f \\<Longrightarrow> seq g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>seq h g; seq (h \\<cdot> g) f\\<rbrakk> \\<Longrightarrow> seq g f", "using seq_char"], ["proof (prove)\nusing this:\n  seq ?g ?f = (C1.seq (fst ?g) (fst ?f) \\<and> C2.seq (snd ?g) (snd ?f))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>seq h g; seq (h \\<cdot> g) f\\<rbrakk> \\<Longrightarrow> seq g f", "by (metis category.seqE category.seqI Dom_comp\n            product_category_axioms product_category_def fst_conv snd_conv)"], ["proof (state)\nthis:\n  \\<lbrakk>seq h g; seq (h \\<cdot> g) f\\<rbrakk> \\<Longrightarrow> seq g f\n\ngoal (3 subgoals):\n 1. \\<And>h g f.\n       \\<lbrakk>seq h (g \\<cdot> f); seq g f\\<rbrakk>\n       \\<Longrightarrow> seq h g\n 2. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> seq (h \\<cdot> g) f\n 3. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> (h \\<cdot> g) \\<cdot> f = h \\<cdot> g \\<cdot> f", "show \"seq h (g \\<cdot> f) \\<Longrightarrow> seq g f \\<Longrightarrow> seq h g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>seq h (g \\<cdot> f); seq g f\\<rbrakk> \\<Longrightarrow> seq h g", "using seq_char"], ["proof (prove)\nusing this:\n  seq ?g ?f = (C1.seq (fst ?g) (fst ?f) \\<and> C2.seq (snd ?g) (snd ?f))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>seq h (g \\<cdot> f); seq g f\\<rbrakk> \\<Longrightarrow> seq h g", "by (metis category.seqE category.seqI Cod_comp\n            product_category_axioms product_category_def fst_conv snd_conv)"], ["proof (state)\nthis:\n  \\<lbrakk>seq h (g \\<cdot> f); seq g f\\<rbrakk> \\<Longrightarrow> seq h g\n\ngoal (2 subgoals):\n 1. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> seq (h \\<cdot> g) f\n 2. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> (h \\<cdot> g) \\<cdot> f = h \\<cdot> g \\<cdot> f", "show \"seq g f \\<Longrightarrow> seq h g \\<Longrightarrow> seq (h \\<cdot> g) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>seq g f; seq h g\\<rbrakk> \\<Longrightarrow> seq (h \\<cdot> g) f", "using seq_char"], ["proof (prove)\nusing this:\n  seq ?g ?f = (C1.seq (fst ?g) (fst ?f) \\<and> C2.seq (snd ?g) (snd ?f))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>seq g f; seq h g\\<rbrakk> \\<Longrightarrow> seq (h \\<cdot> g) f", "by (metis arrE category.seqE category.seqI Dom_comp\n            product_category_axioms product_category_def fst_conv snd_conv)"], ["proof (state)\nthis:\n  \\<lbrakk>seq g f; seq h g\\<rbrakk> \\<Longrightarrow> seq (h \\<cdot> g) f\n\ngoal (1 subgoal):\n 1. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> (h \\<cdot> g) \\<cdot> f = h \\<cdot> g \\<cdot> f", "show \"seq g f \\<Longrightarrow> seq h g \\<Longrightarrow> (h \\<cdot> g) \\<cdot> f = h \\<cdot> g \\<cdot> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>seq g f; seq h g\\<rbrakk>\n    \\<Longrightarrow> (h \\<cdot> g) \\<cdot> f = h \\<cdot> g \\<cdot> f", "using comp_def null_char seq_char C1.comp_assoc C2.comp_assoc"], ["proof (prove)\nusing this:\n  ?g \\<cdot> ?f =\n  (if (C1.arr (fst ?f) \\<and> C2.arr (snd ?f)) \\<and>\n      (C1.arr (fst ?g) \\<and> C2.arr (snd ?g)) \\<and>\n      (if C1.arr (fst ?f) \\<and> C2.arr (snd ?f)\n       then (C1.cod (fst ?f), C2.cod (snd ?f)) else (C1.null, C2.null)) =\n      (if C1.arr (fst ?g) \\<and> C2.arr (snd ?g)\n       then (C1.dom (fst ?g), C2.dom (snd ?g)) else (C1.null, C2.null))\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n  null = (C1.null, C2.null)\n  seq ?g ?f = (C1.seq (fst ?g) (fst ?f) \\<and> C2.seq (snd ?g) (snd ?f))\n  (?h \\<cdot>\\<^sub>1 ?g) \\<cdot>\\<^sub>1 ?f =\n  ?h \\<cdot>\\<^sub>1 ?g \\<cdot>\\<^sub>1 ?f\n  (?h \\<cdot>\\<^sub>2 ?g) \\<cdot>\\<^sub>2 ?f =\n  ?h \\<cdot>\\<^sub>2 ?g \\<cdot>\\<^sub>2 ?f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>seq g f; seq h g\\<rbrakk>\n    \\<Longrightarrow> (h \\<cdot> g) \\<cdot> f = h \\<cdot> g \\<cdot> f", "by (elim seqE C1.seqE C2.seqE, simp)"], ["proof (state)\nthis:\n  \\<lbrakk>seq g f; seq h g\\<rbrakk>\n  \\<Longrightarrow> (h \\<cdot> g) \\<cdot> f = h \\<cdot> g \\<cdot> f\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale category comp"], ["proof (prove)\ngoal (1 subgoal):\n 1. category (\\<cdot>)", "using is_category comp_def"], ["proof (prove)\nusing this:\n  category (\\<cdot>)\n  ?g \\<cdot> ?f =\n  (if (C1.arr (fst ?f) \\<and> C2.arr (snd ?f)) \\<and>\n      (C1.arr (fst ?g) \\<and> C2.arr (snd ?g)) \\<and>\n      (if C1.arr (fst ?f) \\<and> C2.arr (snd ?f)\n       then (C1.cod (fst ?f), C2.cod (snd ?f)) else (C1.null, C2.null)) =\n      (if C1.arr (fst ?g) \\<and> C2.arr (snd ?g)\n       then (C1.dom (fst ?g), C2.dom (snd ?g)) else (C1.null, C2.null))\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n\ngoal (1 subgoal):\n 1. category (\\<cdot>)", "by auto"], ["", "lemma dom_char:\n    shows \"dom f = Dom f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.dom f =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))", "proof (cases \"Arr f\")"], ["proof (state)\ngoal (2 subgoals):\n 1. C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow>\n    local.dom f =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))\n 2. \\<not> (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<Longrightarrow>\n    local.dom f =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))", "show \"\\<not>Arr f \\<Longrightarrow> dom f = Dom f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<Longrightarrow>\n    local.dom f =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))", "unfolding dom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<Longrightarrow>\n    (if domains f \\<noteq> {} then SOME a. a \\<in> domains f else null) =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))", "using has_domain_char"], ["proof (prove)\nusing this:\n  (domains ?f \\<noteq> {}) = (C1.arr (fst ?f) \\<and> C2.arr (snd ?f))\n\ngoal (1 subgoal):\n 1. \\<not> (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<Longrightarrow>\n    (if domains f \\<noteq> {} then SOME a. a \\<in> domains f else null) =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))", "by auto"], ["proof (state)\nthis:\n  \\<not> (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<Longrightarrow>\n  local.dom f =\n  (if C1.arr (fst f) \\<and> C2.arr (snd f)\n   then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))\n\ngoal (1 subgoal):\n 1. C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow>\n    local.dom f =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))", "show \"Arr f \\<Longrightarrow> dom f = Dom f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow>\n    local.dom f =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))", "using ide_Ide"], ["proof (prove)\nusing this:\n  C1.ide (fst ?a) \\<and> C2.ide (snd ?a) \\<Longrightarrow> ide ?a\n\ngoal (1 subgoal):\n 1. C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow>\n    local.dom f =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))", "apply (intro dom_eqI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C1.arr (fst f) \\<and> C2.arr (snd f);\n     \\<And>a.\n        C1.ide (fst a) \\<and> C2.ide (snd a) \\<Longrightarrow>\n        ide a\\<rbrakk>\n    \\<Longrightarrow> seq f\n                       (if C1.arr (fst f) \\<and> C2.arr (snd f)\n                        then (C1.dom (fst f), C2.dom (snd f))\n                        else (C1.null, C2.null))", "using seq_char comp_def C1.arr_dom_iff_arr C2.arr_dom_iff_arr"], ["proof (prove)\nusing this:\n  seq ?g ?f = (C1.seq (fst ?g) (fst ?f) \\<and> C2.seq (snd ?g) (snd ?f))\n  ?g \\<cdot> ?f =\n  (if (C1.arr (fst ?f) \\<and> C2.arr (snd ?f)) \\<and>\n      (C1.arr (fst ?g) \\<and> C2.arr (snd ?g)) \\<and>\n      (if C1.arr (fst ?f) \\<and> C2.arr (snd ?f)\n       then (C1.cod (fst ?f), C2.cod (snd ?f)) else (C1.null, C2.null)) =\n      (if C1.arr (fst ?g) \\<and> C2.arr (snd ?g)\n       then (C1.dom (fst ?g), C2.dom (snd ?g)) else (C1.null, C2.null))\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n  C1.arr (C1.dom ?f) = C1.arr ?f\n  C2.arr (C2.dom ?f) = C2.arr ?f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C1.arr (fst f) \\<and> C2.arr (snd f);\n     \\<And>a.\n        C1.ide (fst a) \\<and> C2.ide (snd a) \\<Longrightarrow>\n        ide a\\<rbrakk>\n    \\<Longrightarrow> seq f\n                       (if C1.arr (fst f) \\<and> C2.arr (snd f)\n                        then (C1.dom (fst f), C2.dom (snd f))\n                        else (C1.null, C2.null))", "by auto"], ["proof (state)\nthis:\n  C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow>\n  local.dom f =\n  (if C1.arr (fst f) \\<and> C2.arr (snd f)\n   then (C1.dom (fst f), C2.dom (snd f)) else (C1.null, C2.null))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_simp [simp]:\n    assumes \"arr f\"\n    shows \"dom f = (C1.dom (fst f), C2.dom (snd f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.dom f = (C1.dom (fst f), C2.dom (snd f))", "using assms dom_char"], ["proof (prove)\nusing this:\n  arr f\n  local.dom ?f =\n  (if C1.arr (fst ?f) \\<and> C2.arr (snd ?f)\n   then (C1.dom (fst ?f), C2.dom (snd ?f)) else (C1.null, C2.null))\n\ngoal (1 subgoal):\n 1. local.dom f = (C1.dom (fst f), C2.dom (snd f))", "by auto"], ["", "lemma cod_char:\n    shows \"cod f = Cod f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cod f =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null))", "proof (cases \"Arr f\")"], ["proof (state)\ngoal (2 subgoals):\n 1. C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow>\n    cod f =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null))\n 2. \\<not> (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<Longrightarrow>\n    cod f =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null))", "show \"\\<not>Arr f \\<Longrightarrow> cod f = Cod f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<Longrightarrow>\n    cod f =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null))", "unfolding cod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<Longrightarrow>\n    (if codomains f \\<noteq> {} then SOME b. b \\<in> codomains f\n     else null) =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null))", "using has_codomain_char"], ["proof (prove)\nusing this:\n  (codomains ?f \\<noteq> {}) = (C1.arr (fst ?f) \\<and> C2.arr (snd ?f))\n\ngoal (1 subgoal):\n 1. \\<not> (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<Longrightarrow>\n    (if codomains f \\<noteq> {} then SOME b. b \\<in> codomains f\n     else null) =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null))", "by auto"], ["proof (state)\nthis:\n  \\<not> (C1.arr (fst f) \\<and> C2.arr (snd f)) \\<Longrightarrow>\n  cod f =\n  (if C1.arr (fst f) \\<and> C2.arr (snd f)\n   then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null))\n\ngoal (1 subgoal):\n 1. C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow>\n    cod f =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null))", "show \"Arr f \\<Longrightarrow> cod f = Cod f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow>\n    cod f =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null))", "using ide_Ide seqI"], ["proof (prove)\nusing this:\n  C1.ide (fst ?a) \\<and> C2.ide (snd ?a) \\<Longrightarrow> ide ?a\n  \\<lbrakk>arr ?f; arr ?g; local.dom ?g = cod ?f\\<rbrakk>\n  \\<Longrightarrow> seq ?g ?f\n\ngoal (1 subgoal):\n 1. C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow>\n    cod f =\n    (if C1.arr (fst f) \\<and> C2.arr (snd f)\n     then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null))", "apply (intro cod_eqI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C1.arr (fst f) \\<and> C2.arr (snd f);\n     \\<And>a. C1.ide (fst a) \\<and> C2.ide (snd a) \\<Longrightarrow> ide a;\n     \\<And>f g.\n        \\<lbrakk>arr f; arr g; local.dom g = cod f\\<rbrakk>\n        \\<Longrightarrow> seq g f\\<rbrakk>\n    \\<Longrightarrow> seq (if C1.arr (fst f) \\<and> C2.arr (snd f)\n                           then (C1.cod (fst f), C2.cod (snd f))\n                           else (C1.null, C2.null))\n                       f", "using seq_char comp_def C1.arr_cod_iff_arr C2.arr_cod_iff_arr"], ["proof (prove)\nusing this:\n  seq ?g ?f = (C1.seq (fst ?g) (fst ?f) \\<and> C2.seq (snd ?g) (snd ?f))\n  ?g \\<cdot> ?f =\n  (if (C1.arr (fst ?f) \\<and> C2.arr (snd ?f)) \\<and>\n      (C1.arr (fst ?g) \\<and> C2.arr (snd ?g)) \\<and>\n      (if C1.arr (fst ?f) \\<and> C2.arr (snd ?f)\n       then (C1.cod (fst ?f), C2.cod (snd ?f)) else (C1.null, C2.null)) =\n      (if C1.arr (fst ?g) \\<and> C2.arr (snd ?g)\n       then (C1.dom (fst ?g), C2.dom (snd ?g)) else (C1.null, C2.null))\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n  C1.arr (C1.cod ?f) = C1.arr ?f\n  C2.arr (C2.cod ?f) = C2.arr ?f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C1.arr (fst f) \\<and> C2.arr (snd f);\n     \\<And>a. C1.ide (fst a) \\<and> C2.ide (snd a) \\<Longrightarrow> ide a;\n     \\<And>f g.\n        \\<lbrakk>arr f; arr g; local.dom g = cod f\\<rbrakk>\n        \\<Longrightarrow> seq g f\\<rbrakk>\n    \\<Longrightarrow> seq (if C1.arr (fst f) \\<and> C2.arr (snd f)\n                           then (C1.cod (fst f), C2.cod (snd f))\n                           else (C1.null, C2.null))\n                       f", "by auto"], ["proof (state)\nthis:\n  C1.arr (fst f) \\<and> C2.arr (snd f) \\<Longrightarrow>\n  cod f =\n  (if C1.arr (fst f) \\<and> C2.arr (snd f)\n   then (C1.cod (fst f), C2.cod (snd f)) else (C1.null, C2.null))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cod_simp [simp]:\n    assumes \"arr f\"\n    shows \"cod f = (C1.cod (fst f), C2.cod (snd f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cod f = (C1.cod (fst f), C2.cod (snd f))", "using assms cod_char"], ["proof (prove)\nusing this:\n  arr f\n  cod ?f =\n  (if C1.arr (fst ?f) \\<and> C2.arr (snd ?f)\n   then (C1.cod (fst ?f), C2.cod (snd ?f)) else (C1.null, C2.null))\n\ngoal (1 subgoal):\n 1. cod f = (C1.cod (fst f), C2.cod (snd f))", "by auto"], ["", "lemma in_homI [intro, simp]:\n    assumes \"\\<guillemotleft>fst f: fst a \\<rightarrow>\\<^sub>1 fst b\\<guillemotright>\" and \"\\<guillemotleft>snd f: snd a \\<rightarrow>\\<^sub>2 snd b\\<guillemotright>\"\n    shows \"\\<guillemotleft>f: a \\<rightarrow> b\\<guillemotright>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft>f : a \\<rightarrow> b\\<guillemotright>", "using assms"], ["proof (prove)\nusing this:\n  \\<guillemotleft>fst f : fst a \\<rightarrow>\\<^sub>1 fst b\\<guillemotright>\n  \\<guillemotleft>snd f : snd a \\<rightarrow>\\<^sub>2 snd b\\<guillemotright>\n\ngoal (1 subgoal):\n 1. \\<guillemotleft>f : a \\<rightarrow> b\\<guillemotright>", "by fastforce"], ["", "lemma in_homE [elim]:\n    assumes \"\\<guillemotleft>f: a \\<rightarrow> b\\<guillemotright>\"\n    and \"\\<guillemotleft>fst f: fst a \\<rightarrow>\\<^sub>1 fst b\\<guillemotright> \\<Longrightarrow> \\<guillemotleft>snd f: snd a \\<rightarrow>\\<^sub>2 snd b\\<guillemotright> \\<Longrightarrow> T\"\n    shows \"T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T", "using assms"], ["proof (prove)\nusing this:\n  \\<guillemotleft>f : a \\<rightarrow> b\\<guillemotright>\n  \\<lbrakk>\\<guillemotleft>fst f : fst a \\<rightarrow>\\<^sub>1 fst\n                          b\\<guillemotright>;\n   \\<guillemotleft>snd f : snd a \\<rightarrow>\\<^sub>2 snd\n                  b\\<guillemotright>\\<rbrakk>\n  \\<Longrightarrow> T\n\ngoal (1 subgoal):\n 1. T", "by (metis C1.in_homI C2.in_homI arr_char cod_simp dom_simp fst_conv in_homE snd_conv)"], ["", "lemma ide_char [iff]:\n    shows \"ide f \\<longleftrightarrow> Ide f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide f = (C1.ide (fst f) \\<and> C2.ide (snd f))", "using ide_in_hom C1.ide_in_hom C2.ide_in_hom"], ["proof (prove)\nusing this:\n  ide ?a = \\<guillemotleft>?a : ?a \\<rightarrow> ?a\\<guillemotright>\n  C1.ide ?a =\n  \\<guillemotleft>?a : ?a \\<rightarrow>\\<^sub>1 ?a\\<guillemotright>\n  C2.ide ?a =\n  \\<guillemotleft>?a : ?a \\<rightarrow>\\<^sub>2 ?a\\<guillemotright>\n\ngoal (1 subgoal):\n 1. ide f = (C1.ide (fst f) \\<and> C2.ide (snd f))", "by blast"], ["", "lemma comp_char:\n    shows \"g \\<cdot> f = (if C1.arr (C1 (fst g) (fst f)) \\<and> C2.arr (C2 (snd g) (snd f)) then\n                       (C1 (fst g) (fst f), C2 (snd g) (snd f))\n                    else Null)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<cdot> f =\n    (if C1.seq (fst g) (fst f) \\<and> C2.seq (snd g) (snd f)\n     then (fst g \\<cdot>\\<^sub>1 fst f, snd g \\<cdot>\\<^sub>2 snd f)\n     else (C1.null, C2.null))", "using comp_def"], ["proof (prove)\nusing this:\n  ?g \\<cdot> ?f =\n  (if (C1.arr (fst ?f) \\<and> C2.arr (snd ?f)) \\<and>\n      (C1.arr (fst ?g) \\<and> C2.arr (snd ?g)) \\<and>\n      (if C1.arr (fst ?f) \\<and> C2.arr (snd ?f)\n       then (C1.cod (fst ?f), C2.cod (snd ?f)) else (C1.null, C2.null)) =\n      (if C1.arr (fst ?g) \\<and> C2.arr (snd ?g)\n       then (C1.dom (fst ?g), C2.dom (snd ?g)) else (C1.null, C2.null))\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n\ngoal (1 subgoal):\n 1. g \\<cdot> f =\n    (if C1.seq (fst g) (fst f) \\<and> C2.seq (snd g) (snd f)\n     then (fst g \\<cdot>\\<^sub>1 fst f, snd g \\<cdot>\\<^sub>2 snd f)\n     else (C1.null, C2.null))", "by auto"], ["", "lemma comp_simp [simp]:\n    assumes \"C1.seq (fst g) (fst f)\" and \"C2.seq (snd g) (snd f)\"\n    shows \"g \\<cdot> f = (fst g \\<cdot>\\<^sub>1 fst f, snd g \\<cdot>\\<^sub>2 snd f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<cdot> f = (fst g \\<cdot>\\<^sub>1 fst f, snd g \\<cdot>\\<^sub>2 snd f)", "using assms comp_char"], ["proof (prove)\nusing this:\n  C1.seq (fst g) (fst f)\n  C2.seq (snd g) (snd f)\n  ?g \\<cdot> ?f =\n  (if C1.seq (fst ?g) (fst ?f) \\<and> C2.seq (snd ?g) (snd ?f)\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n\ngoal (1 subgoal):\n 1. g \\<cdot> f = (fst g \\<cdot>\\<^sub>1 fst f, snd g \\<cdot>\\<^sub>2 snd f)", "by simp"], ["", "lemma iso_char [iff]:\n    shows \"iso f \\<longleftrightarrow> C1.iso (fst f) \\<and> C2.iso (snd f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.iso f = (C1.iso (fst f) \\<and> C2.iso (snd f))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. local.iso f \\<Longrightarrow> C1.iso (fst f) \\<and> C2.iso (snd f)\n 2. C1.iso (fst f) \\<and> C2.iso (snd f) \\<Longrightarrow> local.iso f", "assume f: \"iso f\""], ["proof (state)\nthis:\n  local.iso f\n\ngoal (2 subgoals):\n 1. local.iso f \\<Longrightarrow> C1.iso (fst f) \\<and> C2.iso (snd f)\n 2. C1.iso (fst f) \\<and> C2.iso (snd f) \\<Longrightarrow> local.iso f", "obtain g where g: \"inverse_arrows f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g. inverse_arrows f g \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using f"], ["proof (prove)\nusing this:\n  local.iso f\n\ngoal (1 subgoal):\n 1. (\\<And>g. inverse_arrows f g \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  inverse_arrows f g\n\ngoal (2 subgoals):\n 1. local.iso f \\<Longrightarrow> C1.iso (fst f) \\<and> C2.iso (snd f)\n 2. C1.iso (fst f) \\<and> C2.iso (snd f) \\<Longrightarrow> local.iso f", "have 1: \"ide (g \\<cdot> f) \\<and> ide (f \\<cdot> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide (g \\<cdot> f) \\<and> ide (f \\<cdot> g)", "using f g"], ["proof (prove)\nusing this:\n  local.iso f\n  inverse_arrows f g\n\ngoal (1 subgoal):\n 1. ide (g \\<cdot> f) \\<and> ide (f \\<cdot> g)", "by (simp add: inverse_arrows_def)"], ["proof (state)\nthis:\n  ide (g \\<cdot> f) \\<and> ide (f \\<cdot> g)\n\ngoal (2 subgoals):\n 1. local.iso f \\<Longrightarrow> C1.iso (fst f) \\<and> C2.iso (snd f)\n 2. C1.iso (fst f) \\<and> C2.iso (snd f) \\<Longrightarrow> local.iso f", "have \"g \\<cdot> f = (fst g \\<cdot>\\<^sub>1 fst f, snd g \\<cdot>\\<^sub>2 snd f) \\<and> f \\<cdot> g = (fst f \\<cdot>\\<^sub>1 fst g, snd f \\<cdot>\\<^sub>2 snd g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<cdot> f =\n    (fst g \\<cdot>\\<^sub>1 fst f, snd g \\<cdot>\\<^sub>2 snd f) \\<and>\n    f \\<cdot> g = (fst f \\<cdot>\\<^sub>1 fst g, snd f \\<cdot>\\<^sub>2 snd g)", "using 1 comp_char arr_char"], ["proof (prove)\nusing this:\n  ide (g \\<cdot> f) \\<and> ide (f \\<cdot> g)\n  ?g \\<cdot> ?f =\n  (if C1.seq (fst ?g) (fst ?f) \\<and> C2.seq (snd ?g) (snd ?f)\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n  arr ?f = (C1.arr (fst ?f) \\<and> C2.arr (snd ?f))\n\ngoal (1 subgoal):\n 1. g \\<cdot> f =\n    (fst g \\<cdot>\\<^sub>1 fst f, snd g \\<cdot>\\<^sub>2 snd f) \\<and>\n    f \\<cdot> g = (fst f \\<cdot>\\<^sub>1 fst g, snd f \\<cdot>\\<^sub>2 snd g)", "by (meson ideD(1) seq_char)"], ["proof (state)\nthis:\n  g \\<cdot> f =\n  (fst g \\<cdot>\\<^sub>1 fst f, snd g \\<cdot>\\<^sub>2 snd f) \\<and>\n  f \\<cdot> g = (fst f \\<cdot>\\<^sub>1 fst g, snd f \\<cdot>\\<^sub>2 snd g)\n\ngoal (2 subgoals):\n 1. local.iso f \\<Longrightarrow> C1.iso (fst f) \\<and> C2.iso (snd f)\n 2. C1.iso (fst f) \\<and> C2.iso (snd f) \\<Longrightarrow> local.iso f", "hence \"C1.ide (fst g \\<cdot>\\<^sub>1 fst f) \\<and> C2.ide (snd g \\<cdot>\\<^sub>2 snd f) \\<and>\n             C1.ide (fst f \\<cdot>\\<^sub>1 fst g) \\<and> C2.ide (snd f \\<cdot>\\<^sub>2 snd g)\""], ["proof (prove)\nusing this:\n  g \\<cdot> f =\n  (fst g \\<cdot>\\<^sub>1 fst f, snd g \\<cdot>\\<^sub>2 snd f) \\<and>\n  f \\<cdot> g = (fst f \\<cdot>\\<^sub>1 fst g, snd f \\<cdot>\\<^sub>2 snd g)\n\ngoal (1 subgoal):\n 1. C1.ide (fst g \\<cdot>\\<^sub>1 fst f) \\<and>\n    C2.ide (snd g \\<cdot>\\<^sub>2 snd f) \\<and>\n    C1.ide (fst f \\<cdot>\\<^sub>1 fst g) \\<and>\n    C2.ide (snd f \\<cdot>\\<^sub>2 snd g)", "using 1 ide_char"], ["proof (prove)\nusing this:\n  g \\<cdot> f =\n  (fst g \\<cdot>\\<^sub>1 fst f, snd g \\<cdot>\\<^sub>2 snd f) \\<and>\n  f \\<cdot> g = (fst f \\<cdot>\\<^sub>1 fst g, snd f \\<cdot>\\<^sub>2 snd g)\n  ide (g \\<cdot> f) \\<and> ide (f \\<cdot> g)\n  ide ?f = (C1.ide (fst ?f) \\<and> C2.ide (snd ?f))\n\ngoal (1 subgoal):\n 1. C1.ide (fst g \\<cdot>\\<^sub>1 fst f) \\<and>\n    C2.ide (snd g \\<cdot>\\<^sub>2 snd f) \\<and>\n    C1.ide (fst f \\<cdot>\\<^sub>1 fst g) \\<and>\n    C2.ide (snd f \\<cdot>\\<^sub>2 snd g)", "by simp"], ["proof (state)\nthis:\n  C1.ide (fst g \\<cdot>\\<^sub>1 fst f) \\<and>\n  C2.ide (snd g \\<cdot>\\<^sub>2 snd f) \\<and>\n  C1.ide (fst f \\<cdot>\\<^sub>1 fst g) \\<and>\n  C2.ide (snd f \\<cdot>\\<^sub>2 snd g)\n\ngoal (2 subgoals):\n 1. local.iso f \\<Longrightarrow> C1.iso (fst f) \\<and> C2.iso (snd f)\n 2. C1.iso (fst f) \\<and> C2.iso (snd f) \\<Longrightarrow> local.iso f", "hence \"C1.inverse_arrows (fst f) (fst g) \\<and> C2.inverse_arrows (snd f) (snd g)\""], ["proof (prove)\nusing this:\n  C1.ide (fst g \\<cdot>\\<^sub>1 fst f) \\<and>\n  C2.ide (snd g \\<cdot>\\<^sub>2 snd f) \\<and>\n  C1.ide (fst f \\<cdot>\\<^sub>1 fst g) \\<and>\n  C2.ide (snd f \\<cdot>\\<^sub>2 snd g)\n\ngoal (1 subgoal):\n 1. C1.inverse_arrows (fst f) (fst g) \\<and>\n    C2.inverse_arrows (snd f) (snd g)", "by auto"], ["proof (state)\nthis:\n  C1.inverse_arrows (fst f) (fst g) \\<and> C2.inverse_arrows (snd f) (snd g)\n\ngoal (2 subgoals):\n 1. local.iso f \\<Longrightarrow> C1.iso (fst f) \\<and> C2.iso (snd f)\n 2. C1.iso (fst f) \\<and> C2.iso (snd f) \\<Longrightarrow> local.iso f", "thus \"C1.iso (fst f) \\<and> C2.iso (snd f)\""], ["proof (prove)\nusing this:\n  C1.inverse_arrows (fst f) (fst g) \\<and> C2.inverse_arrows (snd f) (snd g)\n\ngoal (1 subgoal):\n 1. C1.iso (fst f) \\<and> C2.iso (snd f)", "by auto"], ["proof (state)\nthis:\n  C1.iso (fst f) \\<and> C2.iso (snd f)\n\ngoal (1 subgoal):\n 1. C1.iso (fst f) \\<and> C2.iso (snd f) \\<Longrightarrow> local.iso f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. C1.iso (fst f) \\<and> C2.iso (snd f) \\<Longrightarrow> local.iso f", "assume f: \"C1.iso (fst f) \\<and> C2.iso (snd f)\""], ["proof (state)\nthis:\n  C1.iso (fst f) \\<and> C2.iso (snd f)\n\ngoal (1 subgoal):\n 1. C1.iso (fst f) \\<and> C2.iso (snd f) \\<Longrightarrow> local.iso f", "obtain g1 where g1: \"C1.inverse_arrows (fst f) g1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g1.\n        C1.inverse_arrows (fst f) g1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using f"], ["proof (prove)\nusing this:\n  C1.iso (fst f) \\<and> C2.iso (snd f)\n\ngoal (1 subgoal):\n 1. (\\<And>g1.\n        C1.inverse_arrows (fst f) g1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  C1.inverse_arrows (fst f) g1\n\ngoal (1 subgoal):\n 1. C1.iso (fst f) \\<and> C2.iso (snd f) \\<Longrightarrow> local.iso f", "obtain g2 where g2: \"C2.inverse_arrows (snd f) g2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g2.\n        C2.inverse_arrows (snd f) g2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using f"], ["proof (prove)\nusing this:\n  C1.iso (fst f) \\<and> C2.iso (snd f)\n\ngoal (1 subgoal):\n 1. (\\<And>g2.\n        C2.inverse_arrows (snd f) g2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  C2.inverse_arrows (snd f) g2\n\ngoal (1 subgoal):\n 1. C1.iso (fst f) \\<and> C2.iso (snd f) \\<Longrightarrow> local.iso f", "have \"C1.ide (g1 \\<cdot>\\<^sub>1 fst f) \\<and> C2.ide (g2 \\<cdot>\\<^sub>2 snd f) \\<and>\n            C1.ide (fst f \\<cdot>\\<^sub>1 g1) \\<and> C2.ide (snd f \\<cdot>\\<^sub>2 g2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C1.ide (g1 \\<cdot>\\<^sub>1 fst f) \\<and>\n    C2.ide (g2 \\<cdot>\\<^sub>2 snd f) \\<and>\n    C1.ide (fst f \\<cdot>\\<^sub>1 g1) \\<and>\n    C2.ide (snd f \\<cdot>\\<^sub>2 g2)", "using g1 g2 ide_char"], ["proof (prove)\nusing this:\n  C1.inverse_arrows (fst f) g1\n  C2.inverse_arrows (snd f) g2\n  ide ?f = (C1.ide (fst ?f) \\<and> C2.ide (snd ?f))\n\ngoal (1 subgoal):\n 1. C1.ide (g1 \\<cdot>\\<^sub>1 fst f) \\<and>\n    C2.ide (g2 \\<cdot>\\<^sub>2 snd f) \\<and>\n    C1.ide (fst f \\<cdot>\\<^sub>1 g1) \\<and>\n    C2.ide (snd f \\<cdot>\\<^sub>2 g2)", "by force"], ["proof (state)\nthis:\n  C1.ide (g1 \\<cdot>\\<^sub>1 fst f) \\<and>\n  C2.ide (g2 \\<cdot>\\<^sub>2 snd f) \\<and>\n  C1.ide (fst f \\<cdot>\\<^sub>1 g1) \\<and> C2.ide (snd f \\<cdot>\\<^sub>2 g2)\n\ngoal (1 subgoal):\n 1. C1.iso (fst f) \\<and> C2.iso (snd f) \\<Longrightarrow> local.iso f", "hence \"inverse_arrows f (g1, g2)\""], ["proof (prove)\nusing this:\n  C1.ide (g1 \\<cdot>\\<^sub>1 fst f) \\<and>\n  C2.ide (g2 \\<cdot>\\<^sub>2 snd f) \\<and>\n  C1.ide (fst f \\<cdot>\\<^sub>1 g1) \\<and> C2.ide (snd f \\<cdot>\\<^sub>2 g2)\n\ngoal (1 subgoal):\n 1. inverse_arrows f (g1, g2)", "using f g1 g2 ide_char comp_char"], ["proof (prove)\nusing this:\n  C1.ide (g1 \\<cdot>\\<^sub>1 fst f) \\<and>\n  C2.ide (g2 \\<cdot>\\<^sub>2 snd f) \\<and>\n  C1.ide (fst f \\<cdot>\\<^sub>1 g1) \\<and> C2.ide (snd f \\<cdot>\\<^sub>2 g2)\n  C1.iso (fst f) \\<and> C2.iso (snd f)\n  C1.inverse_arrows (fst f) g1\n  C2.inverse_arrows (snd f) g2\n  ide ?f = (C1.ide (fst ?f) \\<and> C2.ide (snd ?f))\n  ?g \\<cdot> ?f =\n  (if C1.seq (fst ?g) (fst ?f) \\<and> C2.seq (snd ?g) (snd ?f)\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n\ngoal (1 subgoal):\n 1. inverse_arrows f (g1, g2)", "by (intro inverse_arrowsI, auto)"], ["proof (state)\nthis:\n  inverse_arrows f (g1, g2)\n\ngoal (1 subgoal):\n 1. C1.iso (fst f) \\<and> C2.iso (snd f) \\<Longrightarrow> local.iso f", "thus \"iso f\""], ["proof (prove)\nusing this:\n  inverse_arrows f (g1, g2)\n\ngoal (1 subgoal):\n 1. local.iso f", "by auto"], ["proof (state)\nthis:\n  local.iso f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isoI [intro, simp]:\n    assumes \"C1.iso (fst f)\" and \"C2.iso (snd f)\"\n    shows \"iso f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.iso f", "using assms"], ["proof (prove)\nusing this:\n  C1.iso (fst f)\n  C2.iso (snd f)\n\ngoal (1 subgoal):\n 1. local.iso f", "by simp"], ["", "lemma isoD:\n    assumes \"iso f\"\n    shows \"C1.iso (fst f)\" and \"C2.iso (snd f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C1.iso (fst f) &&& C2.iso (snd f)", "using assms"], ["proof (prove)\nusing this:\n  local.iso f\n\ngoal (1 subgoal):\n 1. C1.iso (fst f) &&& C2.iso (snd f)", "by auto"], ["", "lemma inv_simp [simp]:\n    assumes \"iso f\"\n    shows \"inv f = (C1.inv (fst f), C2.inv (snd f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.inv f = (C1.inv (fst f), C2.inv (snd f))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. local.inv f = (C1.inv (fst f), C2.inv (snd f))", "have \"inverse_arrows f (C1.inv (fst f), C2.inv (snd f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse_arrows f (C1.inv (fst f), C2.inv (snd f))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ide ((C1.inv (fst f), C2.inv (snd f)) \\<cdot> f)\n 2. ide (f \\<cdot> (C1.inv (fst f), C2.inv (snd f)))", "have 1: \"C1.inverse_arrows (fst f) (C1.inv (fst f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C1.inverse_arrows (fst f) (C1.inv (fst f))", "using assms iso_char C1.inv_is_inverse"], ["proof (prove)\nusing this:\n  local.iso f\n  local.iso ?f = (C1.iso (fst ?f) \\<and> C2.iso (snd ?f))\n  C1.iso ?f \\<Longrightarrow> C1.inverse_arrows ?f (C1.inv ?f)\n\ngoal (1 subgoal):\n 1. C1.inverse_arrows (fst f) (C1.inv (fst f))", "by simp"], ["proof (state)\nthis:\n  C1.inverse_arrows (fst f) (C1.inv (fst f))\n\ngoal (2 subgoals):\n 1. ide ((C1.inv (fst f), C2.inv (snd f)) \\<cdot> f)\n 2. ide (f \\<cdot> (C1.inv (fst f), C2.inv (snd f)))", "have 2: \"C2.inverse_arrows (snd f) (C2.inv (snd f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C2.inverse_arrows (snd f) (C2.inv (snd f))", "using assms iso_char C2.inv_is_inverse"], ["proof (prove)\nusing this:\n  local.iso f\n  local.iso ?f = (C1.iso (fst ?f) \\<and> C2.iso (snd ?f))\n  C2.iso ?f \\<Longrightarrow> C2.inverse_arrows ?f (C2.inv ?f)\n\ngoal (1 subgoal):\n 1. C2.inverse_arrows (snd f) (C2.inv (snd f))", "by simp"], ["proof (state)\nthis:\n  C2.inverse_arrows (snd f) (C2.inv (snd f))\n\ngoal (2 subgoals):\n 1. ide ((C1.inv (fst f), C2.inv (snd f)) \\<cdot> f)\n 2. ide (f \\<cdot> (C1.inv (fst f), C2.inv (snd f)))", "show \"ide ((C1.inv (fst f), C2.inv (snd f)) \\<cdot> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide ((C1.inv (fst f), C2.inv (snd f)) \\<cdot> f)", "using 1 2 ide_char comp_char"], ["proof (prove)\nusing this:\n  C1.inverse_arrows (fst f) (C1.inv (fst f))\n  C2.inverse_arrows (snd f) (C2.inv (snd f))\n  ide ?f = (C1.ide (fst ?f) \\<and> C2.ide (snd ?f))\n  ?g \\<cdot> ?f =\n  (if C1.seq (fst ?g) (fst ?f) \\<and> C2.seq (snd ?g) (snd ?f)\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n\ngoal (1 subgoal):\n 1. ide ((C1.inv (fst f), C2.inv (snd f)) \\<cdot> f)", "by auto"], ["proof (state)\nthis:\n  ide ((C1.inv (fst f), C2.inv (snd f)) \\<cdot> f)\n\ngoal (1 subgoal):\n 1. ide (f \\<cdot> (C1.inv (fst f), C2.inv (snd f)))", "show \"ide (f \\<cdot> (C1.inv (fst f), C2.inv (snd f)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide (f \\<cdot> (C1.inv (fst f), C2.inv (snd f)))", "using 1 2 ide_char comp_char"], ["proof (prove)\nusing this:\n  C1.inverse_arrows (fst f) (C1.inv (fst f))\n  C2.inverse_arrows (snd f) (C2.inv (snd f))\n  ide ?f = (C1.ide (fst ?f) \\<and> C2.ide (snd ?f))\n  ?g \\<cdot> ?f =\n  (if C1.seq (fst ?g) (fst ?f) \\<and> C2.seq (snd ?g) (snd ?f)\n   then (fst ?g \\<cdot>\\<^sub>1 fst ?f, snd ?g \\<cdot>\\<^sub>2 snd ?f)\n   else (C1.null, C2.null))\n\ngoal (1 subgoal):\n 1. ide (f \\<cdot> (C1.inv (fst f), C2.inv (snd f)))", "by auto"], ["proof (state)\nthis:\n  ide (f \\<cdot> (C1.inv (fst f), C2.inv (snd f)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inverse_arrows f (C1.inv (fst f), C2.inv (snd f))\n\ngoal (1 subgoal):\n 1. local.inv f = (C1.inv (fst f), C2.inv (snd f))", "thus ?thesis"], ["proof (prove)\nusing this:\n  inverse_arrows f (C1.inv (fst f), C2.inv (snd f))\n\ngoal (1 subgoal):\n 1. local.inv f = (C1.inv (fst f), C2.inv (snd f))", "using inverse_unique"], ["proof (prove)\nusing this:\n  inverse_arrows f (C1.inv (fst f), C2.inv (snd f))\n  inverse_arrows ?f ?g \\<Longrightarrow> local.inv ?f = ?g\n\ngoal (1 subgoal):\n 1. local.inv f = (C1.inv (fst f), C2.inv (snd f))", "by auto"], ["proof (state)\nthis:\n  local.inv f = (C1.inv (fst f), C2.inv (snd f))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}