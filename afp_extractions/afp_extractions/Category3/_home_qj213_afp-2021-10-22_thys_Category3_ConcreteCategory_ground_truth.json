{"file_name": "/home/qj213/afp-2021-10-22/thys/Category3/ConcreteCategory.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Category3", "problem_names": ["lemma null_char:\n    shows \"null = Null\"", "lemma ide_char:\n    shows \"ide f \\<longleftrightarrow> Ide f\"", "lemma ide_MkIde [simp]:\n    assumes \"A \\<in> Obj\"\n    shows \"ide (MkIde A)\"", "lemma in_domains_char:\n    shows \"a \\<in> domains f \\<longleftrightarrow> Arr f \\<and> a = MkIde (Dom f)\"", "lemma in_codomains_char:\n    shows \"b \\<in> codomains f \\<longleftrightarrow> Arr f \\<and> b = MkIde (Cod f)\"", "lemma arr_char:\n    shows \"arr f \\<longleftrightarrow> Arr f\"", "lemma arrI:\n    assumes \"f \\<noteq> Null\" and \"Dom f \\<in> Obj\" \"Cod f \\<in> Obj\" \"Map f \\<in> Hom (Dom f) (Cod f)\"\n    shows \"arr f\"", "lemma arrE:\n    assumes \"arr f\"\n    and \"\\<lbrakk> f \\<noteq> Null; Dom f \\<in> Obj; Cod f \\<in> Obj; Map f \\<in> Hom (Dom f) (Cod f) \\<rbrakk> \\<Longrightarrow> T\"\n    shows T", "lemma arr_MkArr [simp]:\n    assumes \"A \\<in> Obj\" and \"B \\<in> Obj\" and \"f \\<in> Hom A B\"\n    shows \"arr (MkArr A B f)\"", "lemma MkArr_Map:\n    assumes \"arr f\"\n    shows \"MkArr (Dom f) (Cod f) (Map f) = f\"", "lemma Arr_comp:\n    assumes \"arr f\" and \"arr g\" and \"Dom g = Cod f\"\n    shows \"Arr (COMP g f)\"", "lemma Dom_comp [simp]:\n    assumes \"arr f\" and \"arr g\" and \"Dom g = Cod f\"\n    shows \"Dom (COMP g f) = Dom f\"", "lemma Cod_comp [simp]:\n    assumes \"arr f\" and \"arr g\" and \"Dom g = Cod f\"\n    shows \"Cod (COMP g f) = Cod g\"", "lemma Map_comp [simp]:\n    assumes \"arr f\" and \"arr g\" and \"Dom g = Cod f\"\n    shows \"Map (COMP g f) = Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f)\"", "lemma seq_char:\n    shows \"seq g f \\<longleftrightarrow> arr f \\<and> arr g \\<and> Dom g = Cod f\"", "lemma Dom_in_Obj:\n    assumes \"arr f\"\n    shows \"Dom f \\<in> Obj\"", "lemma Cod_in_Obj:\n    assumes \"arr f\"\n    shows \"Cod f \\<in> Obj\"", "lemma Map_in_Hom:\n    assumes \"arr f\"\n    shows \"Map f \\<in> Hom (Dom f) (Cod f)\"", "lemma MkArr_in_hom:\n    assumes \"A \\<in> Obj\" and \"B \\<in> Obj\" and \"f \\<in> Hom A B\"\n    shows \"in_hom (MkArr A B f) (MkIde A) (MkIde B)\"", "lemma dom_char:\n    shows \"dom f = (if arr f then MkIde (Dom f) else null)\"", "lemma cod_char:\n    shows \"cod f = (if arr f then MkIde (Cod f) else null)\"", "lemma comp_char:\n    shows \"COMP g f = (if seq g f then\n                         MkArr (Dom f) (Cod g) (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n                       else\n                         null)\"", "lemma in_hom_char:\n    shows \"in_hom f a b \\<longleftrightarrow> arr f \\<and> ide a \\<and> ide b \\<and> Dom f = Dom a \\<and> Cod f = Dom b\"", "lemma Dom_dom [simp]:\n    assumes \"arr f\"\n    shows \"Dom (dom f) = Dom f\"", "lemma Cod_dom [simp]:\n    assumes \"arr f\"\n    shows \"Cod (dom f) = Dom f\"", "lemma Dom_cod [simp]:\n    assumes \"arr f\"\n    shows \"Dom (cod f) = Cod f\"", "lemma Cod_cod [simp]:\n    assumes \"arr f\"\n    shows \"Cod (cod f) = Cod f\"", "lemma Map_dom [simp]:\n    assumes \"arr f\"\n    shows \"Map (dom f) = Id (Dom f)\"", "lemma Map_cod [simp]:\n    assumes \"arr f\"\n    shows \"Map (cod f) = Id (Cod f)\"", "lemma Map_ide:\n    assumes \"ide a\"\n    shows \"Map a = Id (Dom a)\" and \"Map a = Id (Cod a)\"", "lemma MkIde_Dom:\n    assumes \"arr a\"\n    shows \"MkIde (Dom a) = dom a\"", "lemma MkIde_Cod:\n    assumes \"arr a\"\n    shows \"MkIde (Cod a) = cod a\"", "lemma MkIde_Dom' [simp]:\n    assumes \"ide a\"\n    shows \"MkIde (Dom a) = a\"", "lemma MkIde_Cod' [simp]:\n    assumes \"ide a\"\n    shows \"MkIde (Cod a) = a\"", "lemma dom_MkArr [simp]:\n    assumes \"arr (MkArr A B F)\"\n    shows \"dom (MkArr A B F) = MkIde A\"", "lemma cod_MkArr [simp]:\n    assumes \"arr (MkArr A B F)\"\n    shows \"cod (MkArr A B F) = MkIde B\"", "lemma comp_MkArr [simp]:\n    assumes \"arr (MkArr A B F)\" and \"arr (MkArr B C G)\"\n    shows \"COMP (MkArr B C G) (MkArr A B F) = MkArr A C (Comp C B A G F)\"", "lemma arr_eqI:\n    assumes \"arr t\" and \"arr t'\" and \"Dom t = Dom t'\" and \"Cod t = Cod t'\" and \"Map t = Map t'\"\n    shows \"t = t'\""], "translations": [["", "lemma null_char:\n    shows \"null = Null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null = Null", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. null = Null", "let ?P = \"\\<lambda>n. \\<forall>f. COMP n f = n \\<and> COMP f n = n\""], ["proof (state)\ngoal (1 subgoal):\n 1. null = Null", "have \"Null = null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Null = null", "using COMP_def null_def the1_equality [of ?P]"], ["proof (prove)\nusing this:\n  COMP ?g ?f \\<equiv>\n  if (?f \\<noteq> Null \\<and>\n      Dom ?f \\<in> Obj \\<and>\n      Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n     (?g \\<noteq> Null \\<and>\n      Dom ?g \\<in> Obj \\<and>\n      Cod ?g \\<in> Obj \\<and> Map ?g \\<in> Hom (Dom ?g) (Cod ?g)) \\<and>\n     Dom ?g = Cod ?f\n  then MkArr (Dom ?f) (Cod ?g)\n        (Comp (Cod ?g) (Dom ?g) (Dom ?f) (Map ?g) (Map ?f))\n  else Null\n  null = (THE n. \\<forall>f. COMP n f = n \\<and> COMP f n = n)\n  \\<lbrakk>\\<exists>!x. \\<forall>f. COMP x f = x \\<and> COMP f x = x;\n   \\<forall>f. COMP ?a f = ?a \\<and> COMP f ?a = ?a\\<rbrakk>\n  \\<Longrightarrow> (THE x. \\<forall>f. COMP x f = x \\<and> COMP f x = x) =\n                    ?a\n\ngoal (1 subgoal):\n 1. Null = null", "by (metis (no_types, lifting))"], ["proof (state)\nthis:\n  Null = null\n\ngoal (1 subgoal):\n 1. null = Null", "thus ?thesis"], ["proof (prove)\nusing this:\n  Null = null\n\ngoal (1 subgoal):\n 1. null = Null", "by simp"], ["proof (state)\nthis:\n  null = Null\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ide_char:\n    shows \"ide f \\<longleftrightarrow> Ide f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide f =\n    (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and> Cod f = Dom f \\<and> Map f = Id (Dom f))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ide f \\<Longrightarrow>\n    f \\<noteq> Null \\<and>\n    Dom f \\<in> Obj \\<and> Cod f = Dom f \\<and> Map f = Id (Dom f)\n 2. f \\<noteq> Null \\<and>\n    Dom f \\<in> Obj \\<and>\n    Cod f = Dom f \\<and> Map f = Id (Dom f) \\<Longrightarrow>\n    ide f", "assume f: \"Ide f\""], ["proof (state)\nthis:\n  f \\<noteq> Null \\<and>\n  Dom f \\<in> Obj \\<and> Cod f = Dom f \\<and> Map f = Id (Dom f)\n\ngoal (2 subgoals):\n 1. ide f \\<Longrightarrow>\n    f \\<noteq> Null \\<and>\n    Dom f \\<in> Obj \\<and> Cod f = Dom f \\<and> Map f = Id (Dom f)\n 2. f \\<noteq> Null \\<and>\n    Dom f \\<in> Obj \\<and>\n    Cod f = Dom f \\<and> Map f = Id (Dom f) \\<Longrightarrow>\n    ide f", "show \"ide f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ide f", "have \"COMP f f \\<noteq> null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. COMP f f \\<noteq> null", "using f COMP_def null_char Id_in_Hom"], ["proof (prove)\nusing this:\n  f \\<noteq> Null \\<and>\n  Dom f \\<in> Obj \\<and> Cod f = Dom f \\<and> Map f = Id (Dom f)\n  COMP ?g ?f \\<equiv>\n  if (?f \\<noteq> Null \\<and>\n      Dom ?f \\<in> Obj \\<and>\n      Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n     (?g \\<noteq> Null \\<and>\n      Dom ?g \\<in> Obj \\<and>\n      Cod ?g \\<in> Obj \\<and> Map ?g \\<in> Hom (Dom ?g) (Cod ?g)) \\<and>\n     Dom ?g = Cod ?f\n  then MkArr (Dom ?f) (Cod ?g)\n        (Comp (Cod ?g) (Dom ?g) (Dom ?f) (Map ?g) (Map ?f))\n  else Null\n  null = Null\n  ?A \\<in> Obj \\<Longrightarrow> Id ?A \\<in> Hom ?A ?A\n\ngoal (1 subgoal):\n 1. COMP f f \\<noteq> null", "by auto"], ["proof (state)\nthis:\n  COMP f f \\<noteq> null\n\ngoal (1 subgoal):\n 1. ide f", "moreover"], ["proof (state)\nthis:\n  COMP f f \\<noteq> null\n\ngoal (1 subgoal):\n 1. ide f", "have \"\\<forall>g. (COMP g f \\<noteq> null \\<longrightarrow> COMP g f = g) \\<and>\n                           (COMP f g \\<noteq> null \\<longrightarrow> COMP f g = g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>g.\n       (COMP g f \\<noteq> null \\<longrightarrow> COMP g f = g) \\<and>\n       (COMP f g \\<noteq> null \\<longrightarrow> COMP f g = g)", "proof (intro allI conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>g. COMP g f \\<noteq> null \\<longrightarrow> COMP g f = g\n 2. \\<And>g. COMP f g \\<noteq> null \\<longrightarrow> COMP f g = g", "fix g"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>g. COMP g f \\<noteq> null \\<longrightarrow> COMP g f = g\n 2. \\<And>g. COMP f g \\<noteq> null \\<longrightarrow> COMP f g = g", "show \"COMP g f \\<noteq> null \\<longrightarrow> COMP g f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. COMP g f \\<noteq> null \\<longrightarrow> COMP g f = g", "using f COMP_def null_char Comp_Hom_Id Id_in_Hom"], ["proof (prove)\nusing this:\n  f \\<noteq> Null \\<and>\n  Dom f \\<in> Obj \\<and> Cod f = Dom f \\<and> Map f = Id (Dom f)\n  COMP ?g ?f \\<equiv>\n  if (?f \\<noteq> Null \\<and>\n      Dom ?f \\<in> Obj \\<and>\n      Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n     (?g \\<noteq> Null \\<and>\n      Dom ?g \\<in> Obj \\<and>\n      Cod ?g \\<in> Obj \\<and> Map ?g \\<in> Hom (Dom ?g) (Cod ?g)) \\<and>\n     Dom ?g = Cod ?f\n  then MkArr (Dom ?f) (Cod ?g)\n        (Comp (Cod ?g) (Dom ?g) (Dom ?f) (Map ?g) (Map ?f))\n  else Null\n  null = Null\n  \\<lbrakk>?A \\<in> Obj; ?f \\<in> Hom ?A ?B\\<rbrakk>\n  \\<Longrightarrow> Comp ?B ?A ?A ?f (Id ?A) = ?f\n  ?A \\<in> Obj \\<Longrightarrow> Id ?A \\<in> Hom ?A ?A\n\ngoal (1 subgoal):\n 1. COMP g f \\<noteq> null \\<longrightarrow> COMP g f = g", "by (cases g, auto)"], ["proof (state)\nthis:\n  COMP g f \\<noteq> null \\<longrightarrow> COMP g f = g\n\ngoal (1 subgoal):\n 1. \\<And>g. COMP f g \\<noteq> null \\<longrightarrow> COMP f g = g", "show \"COMP f g \\<noteq> null \\<longrightarrow> COMP f g = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. COMP f g \\<noteq> null \\<longrightarrow> COMP f g = g", "using f COMP_def null_char Comp_Id_Hom Id_in_Hom"], ["proof (prove)\nusing this:\n  f \\<noteq> Null \\<and>\n  Dom f \\<in> Obj \\<and> Cod f = Dom f \\<and> Map f = Id (Dom f)\n  COMP ?g ?f \\<equiv>\n  if (?f \\<noteq> Null \\<and>\n      Dom ?f \\<in> Obj \\<and>\n      Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n     (?g \\<noteq> Null \\<and>\n      Dom ?g \\<in> Obj \\<and>\n      Cod ?g \\<in> Obj \\<and> Map ?g \\<in> Hom (Dom ?g) (Cod ?g)) \\<and>\n     Dom ?g = Cod ?f\n  then MkArr (Dom ?f) (Cod ?g)\n        (Comp (Cod ?g) (Dom ?g) (Dom ?f) (Map ?g) (Map ?f))\n  else Null\n  null = Null\n  \\<lbrakk>?B \\<in> Obj; ?f \\<in> Hom ?A ?B\\<rbrakk>\n  \\<Longrightarrow> Comp ?B ?B ?A (Id ?B) ?f = ?f\n  ?A \\<in> Obj \\<Longrightarrow> Id ?A \\<in> Hom ?A ?A\n\ngoal (1 subgoal):\n 1. COMP f g \\<noteq> null \\<longrightarrow> COMP f g = g", "by (cases g, auto)"], ["proof (state)\nthis:\n  COMP f g \\<noteq> null \\<longrightarrow> COMP f g = g\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>g.\n     (COMP g f \\<noteq> null \\<longrightarrow> COMP g f = g) \\<and>\n     (COMP f g \\<noteq> null \\<longrightarrow> COMP f g = g)\n\ngoal (1 subgoal):\n 1. ide f", "ultimately"], ["proof (chain)\npicking this:\n  COMP f f \\<noteq> null\n  \\<forall>g.\n     (COMP g f \\<noteq> null \\<longrightarrow> COMP g f = g) \\<and>\n     (COMP f g \\<noteq> null \\<longrightarrow> COMP f g = g)", "show ?thesis"], ["proof (prove)\nusing this:\n  COMP f f \\<noteq> null\n  \\<forall>g.\n     (COMP g f \\<noteq> null \\<longrightarrow> COMP g f = g) \\<and>\n     (COMP f g \\<noteq> null \\<longrightarrow> COMP f g = g)\n\ngoal (1 subgoal):\n 1. ide f", "using ide_def"], ["proof (prove)\nusing this:\n  COMP f f \\<noteq> null\n  \\<forall>g.\n     (COMP g f \\<noteq> null \\<longrightarrow> COMP g f = g) \\<and>\n     (COMP f g \\<noteq> null \\<longrightarrow> COMP f g = g)\n  ide ?a \\<equiv>\n  COMP ?a ?a \\<noteq> null \\<and>\n  (\\<forall>f.\n      (COMP f ?a \\<noteq> null \\<longrightarrow> COMP f ?a = f) \\<and>\n      (COMP ?a f \\<noteq> null \\<longrightarrow> COMP ?a f = f))\n\ngoal (1 subgoal):\n 1. ide f", "by blast"], ["proof (state)\nthis:\n  ide f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ide f\n\ngoal (1 subgoal):\n 1. ide f \\<Longrightarrow>\n    f \\<noteq> Null \\<and>\n    Dom f \\<in> Obj \\<and> Cod f = Dom f \\<and> Map f = Id (Dom f)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ide f \\<Longrightarrow>\n    f \\<noteq> Null \\<and>\n    Dom f \\<in> Obj \\<and> Cod f = Dom f \\<and> Map f = Id (Dom f)", "assume f: \"ide f\""], ["proof (state)\nthis:\n  ide f\n\ngoal (1 subgoal):\n 1. ide f \\<Longrightarrow>\n    f \\<noteq> Null \\<and>\n    Dom f \\<in> Obj \\<and> Cod f = Dom f \\<and> Map f = Id (Dom f)", "have 1: \"Arr f \\<and> Dom f = Cod f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    Dom f = Cod f", "using f ide_def COMP_def null_char"], ["proof (prove)\nusing this:\n  ide f\n  ide ?a \\<equiv>\n  COMP ?a ?a \\<noteq> null \\<and>\n  (\\<forall>f.\n      (COMP f ?a \\<noteq> null \\<longrightarrow> COMP f ?a = f) \\<and>\n      (COMP ?a f \\<noteq> null \\<longrightarrow> COMP ?a f = f))\n  COMP ?g ?f \\<equiv>\n  if (?f \\<noteq> Null \\<and>\n      Dom ?f \\<in> Obj \\<and>\n      Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n     (?g \\<noteq> Null \\<and>\n      Dom ?g \\<in> Obj \\<and>\n      Cod ?g \\<in> Obj \\<and> Map ?g \\<in> Hom (Dom ?g) (Cod ?g)) \\<and>\n     Dom ?g = Cod ?f\n  then MkArr (Dom ?f) (Cod ?g)\n        (Comp (Cod ?g) (Dom ?g) (Dom ?f) (Map ?g) (Map ?f))\n  else Null\n  null = Null\n\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    Dom f = Cod f", "by metis"], ["proof (state)\nthis:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  Dom f = Cod f\n\ngoal (1 subgoal):\n 1. ide f \\<Longrightarrow>\n    f \\<noteq> Null \\<and>\n    Dom f \\<in> Obj \\<and> Cod f = Dom f \\<and> Map f = Id (Dom f)", "moreover"], ["proof (state)\nthis:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  Dom f = Cod f\n\ngoal (1 subgoal):\n 1. ide f \\<Longrightarrow>\n    f \\<noteq> Null \\<and>\n    Dom f \\<in> Obj \\<and> Cod f = Dom f \\<and> Map f = Id (Dom f)", "have \"Map f = Id (Dom f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Map f = Id (Dom f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Map f = Id (Dom f)", "let ?g = \"MkIde (Dom f)\""], ["proof (state)\ngoal (1 subgoal):\n 1. Map f = Id (Dom f)", "have g: \"Arr f \\<and> Arr ?g \\<and> Dom ?g = Cod f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    (MkIde (Dom f) \\<noteq> Null \\<and>\n     Dom (MkIde (Dom f)) \\<in> Obj \\<and>\n     Cod (MkIde (Dom f)) \\<in> Obj \\<and>\n     Map (MkIde (Dom f))\n     \\<in> Hom (Dom (MkIde (Dom f))) (Cod (MkIde (Dom f)))) \\<and>\n    Dom (MkIde (Dom f)) = Cod f", "using 1 Id_in_Hom"], ["proof (prove)\nusing this:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  Dom f = Cod f\n  ?A \\<in> Obj \\<Longrightarrow> Id ?A \\<in> Hom ?A ?A\n\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    (MkIde (Dom f) \\<noteq> Null \\<and>\n     Dom (MkIde (Dom f)) \\<in> Obj \\<and>\n     Cod (MkIde (Dom f)) \\<in> Obj \\<and>\n     Map (MkIde (Dom f))\n     \\<in> Hom (Dom (MkIde (Dom f))) (Cod (MkIde (Dom f)))) \\<and>\n    Dom (MkIde (Dom f)) = Cod f", "by (intro conjI, simp_all)"], ["proof (state)\nthis:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  (MkIde (Dom f) \\<noteq> Null \\<and>\n   Dom (MkIde (Dom f)) \\<in> Obj \\<and>\n   Cod (MkIde (Dom f)) \\<in> Obj \\<and>\n   Map (MkIde (Dom f))\n   \\<in> Hom (Dom (MkIde (Dom f))) (Cod (MkIde (Dom f)))) \\<and>\n  Dom (MkIde (Dom f)) = Cod f\n\ngoal (1 subgoal):\n 1. Map f = Id (Dom f)", "have \"COMP ?g f = MkArr (Dom f) (Dom f) (Map f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. COMP (MkIde (Dom f)) f = MkArr (Dom f) (Dom f) (Map f)", "using g COMP_def Comp_Id_Hom"], ["proof (prove)\nusing this:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  (MkIde (Dom f) \\<noteq> Null \\<and>\n   Dom (MkIde (Dom f)) \\<in> Obj \\<and>\n   Cod (MkIde (Dom f)) \\<in> Obj \\<and>\n   Map (MkIde (Dom f))\n   \\<in> Hom (Dom (MkIde (Dom f))) (Cod (MkIde (Dom f)))) \\<and>\n  Dom (MkIde (Dom f)) = Cod f\n  COMP ?g ?f \\<equiv>\n  if (?f \\<noteq> Null \\<and>\n      Dom ?f \\<in> Obj \\<and>\n      Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n     (?g \\<noteq> Null \\<and>\n      Dom ?g \\<in> Obj \\<and>\n      Cod ?g \\<in> Obj \\<and> Map ?g \\<in> Hom (Dom ?g) (Cod ?g)) \\<and>\n     Dom ?g = Cod ?f\n  then MkArr (Dom ?f) (Cod ?g)\n        (Comp (Cod ?g) (Dom ?g) (Dom ?f) (Map ?g) (Map ?f))\n  else Null\n  \\<lbrakk>?B \\<in> Obj; ?f \\<in> Hom ?A ?B\\<rbrakk>\n  \\<Longrightarrow> Comp ?B ?B ?A (Id ?B) ?f = ?f\n\ngoal (1 subgoal):\n 1. COMP (MkIde (Dom f)) f = MkArr (Dom f) (Dom f) (Map f)", "by auto"], ["proof (state)\nthis:\n  COMP (MkIde (Dom f)) f = MkArr (Dom f) (Dom f) (Map f)\n\ngoal (1 subgoal):\n 1. Map f = Id (Dom f)", "moreover"], ["proof (state)\nthis:\n  COMP (MkIde (Dom f)) f = MkArr (Dom f) (Dom f) (Map f)\n\ngoal (1 subgoal):\n 1. Map f = Id (Dom f)", "have \"COMP ?g f = ?g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. COMP (MkIde (Dom f)) f = MkIde (Dom f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. COMP (MkIde (Dom f)) f = MkIde (Dom f)", "have \"COMP ?g f \\<noteq> null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. COMP (MkIde (Dom f)) f \\<noteq> null", "using g 1 COMP_def null_char"], ["proof (prove)\nusing this:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  (MkIde (Dom f) \\<noteq> Null \\<and>\n   Dom (MkIde (Dom f)) \\<in> Obj \\<and>\n   Cod (MkIde (Dom f)) \\<in> Obj \\<and>\n   Map (MkIde (Dom f))\n   \\<in> Hom (Dom (MkIde (Dom f))) (Cod (MkIde (Dom f)))) \\<and>\n  Dom (MkIde (Dom f)) = Cod f\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  Dom f = Cod f\n  COMP ?g ?f \\<equiv>\n  if (?f \\<noteq> Null \\<and>\n      Dom ?f \\<in> Obj \\<and>\n      Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n     (?g \\<noteq> Null \\<and>\n      Dom ?g \\<in> Obj \\<and>\n      Cod ?g \\<in> Obj \\<and> Map ?g \\<in> Hom (Dom ?g) (Cod ?g)) \\<and>\n     Dom ?g = Cod ?f\n  then MkArr (Dom ?f) (Cod ?g)\n        (Comp (Cod ?g) (Dom ?g) (Dom ?f) (Map ?g) (Map ?f))\n  else Null\n  null = Null\n\ngoal (1 subgoal):\n 1. COMP (MkIde (Dom f)) f \\<noteq> null", "by simp"], ["proof (state)\nthis:\n  COMP (MkIde (Dom f)) f \\<noteq> null\n\ngoal (1 subgoal):\n 1. COMP (MkIde (Dom f)) f = MkIde (Dom f)", "thus ?thesis"], ["proof (prove)\nusing this:\n  COMP (MkIde (Dom f)) f \\<noteq> null\n\ngoal (1 subgoal):\n 1. COMP (MkIde (Dom f)) f = MkIde (Dom f)", "using f ide_def"], ["proof (prove)\nusing this:\n  COMP (MkIde (Dom f)) f \\<noteq> null\n  ide f\n  ide ?a \\<equiv>\n  COMP ?a ?a \\<noteq> null \\<and>\n  (\\<forall>f.\n      (COMP f ?a \\<noteq> null \\<longrightarrow> COMP f ?a = f) \\<and>\n      (COMP ?a f \\<noteq> null \\<longrightarrow> COMP ?a f = f))\n\ngoal (1 subgoal):\n 1. COMP (MkIde (Dom f)) f = MkIde (Dom f)", "by blast"], ["proof (state)\nthis:\n  COMP (MkIde (Dom f)) f = MkIde (Dom f)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  COMP (MkIde (Dom f)) f = MkIde (Dom f)\n\ngoal (1 subgoal):\n 1. Map f = Id (Dom f)", "ultimately"], ["proof (chain)\npicking this:\n  COMP (MkIde (Dom f)) f = MkArr (Dom f) (Dom f) (Map f)\n  COMP (MkIde (Dom f)) f = MkIde (Dom f)", "show ?thesis"], ["proof (prove)\nusing this:\n  COMP (MkIde (Dom f)) f = MkArr (Dom f) (Dom f) (Map f)\n  COMP (MkIde (Dom f)) f = MkIde (Dom f)\n\ngoal (1 subgoal):\n 1. Map f = Id (Dom f)", "by simp"], ["proof (state)\nthis:\n  Map f = Id (Dom f)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Map f = Id (Dom f)\n\ngoal (1 subgoal):\n 1. ide f \\<Longrightarrow>\n    f \\<noteq> Null \\<and>\n    Dom f \\<in> Obj \\<and> Cod f = Dom f \\<and> Map f = Id (Dom f)", "ultimately"], ["proof (chain)\npicking this:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  Dom f = Cod f\n  Map f = Id (Dom f)", "show \"Ide f\""], ["proof (prove)\nusing this:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  Dom f = Cod f\n  Map f = Id (Dom f)\n\ngoal (1 subgoal):\n 1. f \\<noteq> Null \\<and>\n    Dom f \\<in> Obj \\<and> Cod f = Dom f \\<and> Map f = Id (Dom f)", "by auto"], ["proof (state)\nthis:\n  f \\<noteq> Null \\<and>\n  Dom f \\<in> Obj \\<and> Cod f = Dom f \\<and> Map f = Id (Dom f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ide_MkIde [simp]:\n    assumes \"A \\<in> Obj\"\n    shows \"ide (MkIde A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide (MkIde A)", "using assms ide_char Id_in_Hom"], ["proof (prove)\nusing this:\n  A \\<in> Obj\n  ide ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and> Cod ?f = Dom ?f \\<and> Map ?f = Id (Dom ?f))\n  ?A \\<in> Obj \\<Longrightarrow> Id ?A \\<in> Hom ?A ?A\n\ngoal (1 subgoal):\n 1. ide (MkIde A)", "by simp"], ["", "lemma in_domains_char:\n    shows \"a \\<in> domains f \\<longleftrightarrow> Arr f \\<and> a = MkIde (Dom f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<in> domains f) =\n    ((f \\<noteq> Null \\<and>\n      Dom f \\<in> Obj \\<and>\n      Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n     a = MkIde (Dom f))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<in> domains f \\<Longrightarrow>\n    (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    a = MkIde (Dom f)\n 2. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    a = MkIde (Dom f) \\<Longrightarrow>\n    a \\<in> domains f", "assume a: \"a \\<in> domains f\""], ["proof (state)\nthis:\n  a \\<in> domains f\n\ngoal (2 subgoals):\n 1. a \\<in> domains f \\<Longrightarrow>\n    (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    a = MkIde (Dom f)\n 2. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    a = MkIde (Dom f) \\<Longrightarrow>\n    a \\<in> domains f", "have \"Ide a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> Null \\<and>\n    Dom a \\<in> Obj \\<and> Cod a = Dom a \\<and> Map a = Id (Dom a)", "using a domains_def ide_char COMP_def null_char"], ["proof (prove)\nusing this:\n  a \\<in> domains f\n  domains ?f \\<equiv> {a. ide a \\<and> COMP ?f a \\<noteq> null}\n  ide ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and> Cod ?f = Dom ?f \\<and> Map ?f = Id (Dom ?f))\n  COMP ?g ?f \\<equiv>\n  if (?f \\<noteq> Null \\<and>\n      Dom ?f \\<in> Obj \\<and>\n      Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n     (?g \\<noteq> Null \\<and>\n      Dom ?g \\<in> Obj \\<and>\n      Cod ?g \\<in> Obj \\<and> Map ?g \\<in> Hom (Dom ?g) (Cod ?g)) \\<and>\n     Dom ?g = Cod ?f\n  then MkArr (Dom ?f) (Cod ?g)\n        (Comp (Cod ?g) (Dom ?g) (Dom ?f) (Map ?g) (Map ?f))\n  else Null\n  null = Null\n\ngoal (1 subgoal):\n 1. a \\<noteq> Null \\<and>\n    Dom a \\<in> Obj \\<and> Cod a = Dom a \\<and> Map a = Id (Dom a)", "by auto"], ["proof (state)\nthis:\n  a \\<noteq> Null \\<and>\n  Dom a \\<in> Obj \\<and> Cod a = Dom a \\<and> Map a = Id (Dom a)\n\ngoal (2 subgoals):\n 1. a \\<in> domains f \\<Longrightarrow>\n    (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    a = MkIde (Dom f)\n 2. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    a = MkIde (Dom f) \\<Longrightarrow>\n    a \\<in> domains f", "moreover"], ["proof (state)\nthis:\n  a \\<noteq> Null \\<and>\n  Dom a \\<in> Obj \\<and> Cod a = Dom a \\<and> Map a = Id (Dom a)\n\ngoal (2 subgoals):\n 1. a \\<in> domains f \\<Longrightarrow>\n    (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    a = MkIde (Dom f)\n 2. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    a = MkIde (Dom f) \\<Longrightarrow>\n    a \\<in> domains f", "have \"Arr f \\<and> Dom f = Cod a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    Dom f = Cod a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    Dom f = Cod a", "have \"COMP f a \\<noteq> null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. COMP f a \\<noteq> null", "using a domains_def"], ["proof (prove)\nusing this:\n  a \\<in> domains f\n  domains ?f \\<equiv> {a. ide a \\<and> COMP ?f a \\<noteq> null}\n\ngoal (1 subgoal):\n 1. COMP f a \\<noteq> null", "by simp"], ["proof (state)\nthis:\n  COMP f a \\<noteq> null\n\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    Dom f = Cod a", "thus ?thesis"], ["proof (prove)\nusing this:\n  COMP f a \\<noteq> null\n\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    Dom f = Cod a", "using a domains_def COMP_def [of f a] null_char"], ["proof (prove)\nusing this:\n  COMP f a \\<noteq> null\n  a \\<in> domains f\n  domains ?f \\<equiv> {a. ide a \\<and> COMP ?f a \\<noteq> null}\n  COMP f a \\<equiv>\n  if (a \\<noteq> Null \\<and>\n      Dom a \\<in> Obj \\<and>\n      Cod a \\<in> Obj \\<and> Map a \\<in> Hom (Dom a) (Cod a)) \\<and>\n     (f \\<noteq> Null \\<and>\n      Dom f \\<in> Obj \\<and>\n      Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n     Dom f = Cod a\n  then MkArr (Dom a) (Cod f) (Comp (Cod f) (Dom f) (Dom a) (Map f) (Map a))\n  else Null\n  null = Null\n\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    Dom f = Cod a", "by metis"], ["proof (state)\nthis:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  Dom f = Cod a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  Dom f = Cod a\n\ngoal (2 subgoals):\n 1. a \\<in> domains f \\<Longrightarrow>\n    (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    a = MkIde (Dom f)\n 2. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    a = MkIde (Dom f) \\<Longrightarrow>\n    a \\<in> domains f", "ultimately"], ["proof (chain)\npicking this:\n  a \\<noteq> Null \\<and>\n  Dom a \\<in> Obj \\<and> Cod a = Dom a \\<and> Map a = Id (Dom a)\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  Dom f = Cod a", "show \"Arr f \\<and> a = MkIde (Dom f)\""], ["proof (prove)\nusing this:\n  a \\<noteq> Null \\<and>\n  Dom a \\<in> Obj \\<and> Cod a = Dom a \\<and> Map a = Id (Dom a)\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  Dom f = Cod a\n\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    a = MkIde (Dom f)", "by (cases a, auto)"], ["proof (state)\nthis:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  a = MkIde (Dom f)\n\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    a = MkIde (Dom f) \\<Longrightarrow>\n    a \\<in> domains f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    a = MkIde (Dom f) \\<Longrightarrow>\n    a \\<in> domains f", "assume a: \"Arr f \\<and> a = MkIde (Dom f)\""], ["proof (state)\nthis:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  a = MkIde (Dom f)\n\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    a = MkIde (Dom f) \\<Longrightarrow>\n    a \\<in> domains f", "show \"a \\<in> domains f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> domains f", "using a Id_in_Hom COMP_def null_char domains_def"], ["proof (prove)\nusing this:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  a = MkIde (Dom f)\n  ?A \\<in> Obj \\<Longrightarrow> Id ?A \\<in> Hom ?A ?A\n  COMP ?g ?f \\<equiv>\n  if (?f \\<noteq> Null \\<and>\n      Dom ?f \\<in> Obj \\<and>\n      Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n     (?g \\<noteq> Null \\<and>\n      Dom ?g \\<in> Obj \\<and>\n      Cod ?g \\<in> Obj \\<and> Map ?g \\<in> Hom (Dom ?g) (Cod ?g)) \\<and>\n     Dom ?g = Cod ?f\n  then MkArr (Dom ?f) (Cod ?g)\n        (Comp (Cod ?g) (Dom ?g) (Dom ?f) (Map ?g) (Map ?f))\n  else Null\n  null = Null\n  domains ?f \\<equiv> {a. ide a \\<and> COMP ?f a \\<noteq> null}\n\ngoal (1 subgoal):\n 1. a \\<in> domains f", "by auto"], ["proof (state)\nthis:\n  a \\<in> domains f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma in_codomains_char:\n    shows \"b \\<in> codomains f \\<longleftrightarrow> Arr f \\<and> b = MkIde (Cod f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b \\<in> codomains f) =\n    ((f \\<noteq> Null \\<and>\n      Dom f \\<in> Obj \\<and>\n      Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n     b = MkIde (Cod f))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. b \\<in> codomains f \\<Longrightarrow>\n    (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    b = MkIde (Cod f)\n 2. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    b = MkIde (Cod f) \\<Longrightarrow>\n    b \\<in> codomains f", "assume b: \"b \\<in> codomains f\""], ["proof (state)\nthis:\n  b \\<in> codomains f\n\ngoal (2 subgoals):\n 1. b \\<in> codomains f \\<Longrightarrow>\n    (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    b = MkIde (Cod f)\n 2. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    b = MkIde (Cod f) \\<Longrightarrow>\n    b \\<in> codomains f", "have \"Ide b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<noteq> Null \\<and>\n    Dom b \\<in> Obj \\<and> Cod b = Dom b \\<and> Map b = Id (Dom b)", "using b codomains_def ide_char COMP_def null_char"], ["proof (prove)\nusing this:\n  b \\<in> codomains f\n  codomains ?f \\<equiv> {b. ide b \\<and> COMP b ?f \\<noteq> null}\n  ide ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and> Cod ?f = Dom ?f \\<and> Map ?f = Id (Dom ?f))\n  COMP ?g ?f \\<equiv>\n  if (?f \\<noteq> Null \\<and>\n      Dom ?f \\<in> Obj \\<and>\n      Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n     (?g \\<noteq> Null \\<and>\n      Dom ?g \\<in> Obj \\<and>\n      Cod ?g \\<in> Obj \\<and> Map ?g \\<in> Hom (Dom ?g) (Cod ?g)) \\<and>\n     Dom ?g = Cod ?f\n  then MkArr (Dom ?f) (Cod ?g)\n        (Comp (Cod ?g) (Dom ?g) (Dom ?f) (Map ?g) (Map ?f))\n  else Null\n  null = Null\n\ngoal (1 subgoal):\n 1. b \\<noteq> Null \\<and>\n    Dom b \\<in> Obj \\<and> Cod b = Dom b \\<and> Map b = Id (Dom b)", "by auto"], ["proof (state)\nthis:\n  b \\<noteq> Null \\<and>\n  Dom b \\<in> Obj \\<and> Cod b = Dom b \\<and> Map b = Id (Dom b)\n\ngoal (2 subgoals):\n 1. b \\<in> codomains f \\<Longrightarrow>\n    (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    b = MkIde (Cod f)\n 2. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    b = MkIde (Cod f) \\<Longrightarrow>\n    b \\<in> codomains f", "moreover"], ["proof (state)\nthis:\n  b \\<noteq> Null \\<and>\n  Dom b \\<in> Obj \\<and> Cod b = Dom b \\<and> Map b = Id (Dom b)\n\ngoal (2 subgoals):\n 1. b \\<in> codomains f \\<Longrightarrow>\n    (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    b = MkIde (Cod f)\n 2. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    b = MkIde (Cod f) \\<Longrightarrow>\n    b \\<in> codomains f", "have \"Arr f \\<and> Dom b = Cod f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    Dom b = Cod f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    Dom b = Cod f", "have \"COMP b f \\<noteq> null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. COMP b f \\<noteq> null", "using b codomains_def"], ["proof (prove)\nusing this:\n  b \\<in> codomains f\n  codomains ?f \\<equiv> {b. ide b \\<and> COMP b ?f \\<noteq> null}\n\ngoal (1 subgoal):\n 1. COMP b f \\<noteq> null", "by simp"], ["proof (state)\nthis:\n  COMP b f \\<noteq> null\n\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    Dom b = Cod f", "thus ?thesis"], ["proof (prove)\nusing this:\n  COMP b f \\<noteq> null\n\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    Dom b = Cod f", "using b codomains_def COMP_def [of b f] null_char"], ["proof (prove)\nusing this:\n  COMP b f \\<noteq> null\n  b \\<in> codomains f\n  codomains ?f \\<equiv> {b. ide b \\<and> COMP b ?f \\<noteq> null}\n  COMP b f \\<equiv>\n  if (f \\<noteq> Null \\<and>\n      Dom f \\<in> Obj \\<and>\n      Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n     (b \\<noteq> Null \\<and>\n      Dom b \\<in> Obj \\<and>\n      Cod b \\<in> Obj \\<and> Map b \\<in> Hom (Dom b) (Cod b)) \\<and>\n     Dom b = Cod f\n  then MkArr (Dom f) (Cod b) (Comp (Cod b) (Dom b) (Dom f) (Map b) (Map f))\n  else Null\n  null = Null\n\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    Dom b = Cod f", "by metis"], ["proof (state)\nthis:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  Dom b = Cod f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  Dom b = Cod f\n\ngoal (2 subgoals):\n 1. b \\<in> codomains f \\<Longrightarrow>\n    (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    b = MkIde (Cod f)\n 2. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    b = MkIde (Cod f) \\<Longrightarrow>\n    b \\<in> codomains f", "ultimately"], ["proof (chain)\npicking this:\n  b \\<noteq> Null \\<and>\n  Dom b \\<in> Obj \\<and> Cod b = Dom b \\<and> Map b = Id (Dom b)\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  Dom b = Cod f", "show \"Arr f \\<and> b = MkIde (Cod f)\""], ["proof (prove)\nusing this:\n  b \\<noteq> Null \\<and>\n  Dom b \\<in> Obj \\<and> Cod b = Dom b \\<and> Map b = Id (Dom b)\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  Dom b = Cod f\n\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    b = MkIde (Cod f)", "by (cases b, auto)"], ["proof (state)\nthis:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  b = MkIde (Cod f)\n\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    b = MkIde (Cod f) \\<Longrightarrow>\n    b \\<in> codomains f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    b = MkIde (Cod f) \\<Longrightarrow>\n    b \\<in> codomains f", "assume b: \"Arr f \\<and> b = MkIde (Cod f)\""], ["proof (state)\nthis:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  b = MkIde (Cod f)\n\ngoal (1 subgoal):\n 1. (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n    b = MkIde (Cod f) \\<Longrightarrow>\n    b \\<in> codomains f", "show \"b \\<in> codomains f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> codomains f", "using b Id_in_Hom COMP_def null_char codomains_def"], ["proof (prove)\nusing this:\n  (f \\<noteq> Null \\<and>\n   Dom f \\<in> Obj \\<and>\n   Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n  b = MkIde (Cod f)\n  ?A \\<in> Obj \\<Longrightarrow> Id ?A \\<in> Hom ?A ?A\n  COMP ?g ?f \\<equiv>\n  if (?f \\<noteq> Null \\<and>\n      Dom ?f \\<in> Obj \\<and>\n      Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n     (?g \\<noteq> Null \\<and>\n      Dom ?g \\<in> Obj \\<and>\n      Cod ?g \\<in> Obj \\<and> Map ?g \\<in> Hom (Dom ?g) (Cod ?g)) \\<and>\n     Dom ?g = Cod ?f\n  then MkArr (Dom ?f) (Cod ?g)\n        (Comp (Cod ?g) (Dom ?g) (Dom ?f) (Map ?g) (Map ?f))\n  else Null\n  null = Null\n  codomains ?f \\<equiv> {b. ide b \\<and> COMP b ?f \\<noteq> null}\n\ngoal (1 subgoal):\n 1. b \\<in> codomains f", "by auto"], ["proof (state)\nthis:\n  b \\<in> codomains f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma arr_char:\n    shows \"arr f \\<longleftrightarrow> Arr f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr f =\n    (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f))", "using arr_def in_domains_char in_codomains_char"], ["proof (prove)\nusing this:\n  arr ?f \\<equiv> domains ?f \\<noteq> {} \\<or> codomains ?f \\<noteq> {}\n  (?a \\<in> domains ?f) =\n  ((?f \\<noteq> Null \\<and>\n    Dom ?f \\<in> Obj \\<and>\n    Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n   ?a = MkIde (Dom ?f))\n  (?b \\<in> codomains ?f) =\n  ((?f \\<noteq> Null \\<and>\n    Dom ?f \\<in> Obj \\<and>\n    Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n   ?b = MkIde (Cod ?f))\n\ngoal (1 subgoal):\n 1. arr f =\n    (f \\<noteq> Null \\<and>\n     Dom f \\<in> Obj \\<and>\n     Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f))", "by auto"], ["", "lemma arrI:\n    assumes \"f \\<noteq> Null\" and \"Dom f \\<in> Obj\" \"Cod f \\<in> Obj\" \"Map f \\<in> Hom (Dom f) (Cod f)\"\n    shows \"arr f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr f", "using assms arr_char"], ["proof (prove)\nusing this:\n  f \\<noteq> Null\n  Dom f \\<in> Obj\n  Cod f \\<in> Obj\n  Map f \\<in> Hom (Dom f) (Cod f)\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n\ngoal (1 subgoal):\n 1. arr f", "by blast"], ["", "lemma arrE:\n    assumes \"arr f\"\n    and \"\\<lbrakk> f \\<noteq> Null; Dom f \\<in> Obj; Cod f \\<in> Obj; Map f \\<in> Hom (Dom f) (Cod f) \\<rbrakk> \\<Longrightarrow> T\"\n    shows T"], ["proof (prove)\ngoal (1 subgoal):\n 1. T", "using assms arr_char"], ["proof (prove)\nusing this:\n  arr f\n  \\<lbrakk>f \\<noteq> Null; Dom f \\<in> Obj; Cod f \\<in> Obj;\n   Map f \\<in> Hom (Dom f) (Cod f)\\<rbrakk>\n  \\<Longrightarrow> T\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n\ngoal (1 subgoal):\n 1. T", "by simp"], ["", "lemma arr_MkArr [simp]:\n    assumes \"A \\<in> Obj\" and \"B \\<in> Obj\" and \"f \\<in> Hom A B\"\n    shows \"arr (MkArr A B f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr (MkArr A B f)", "using assms arr_char"], ["proof (prove)\nusing this:\n  A \\<in> Obj\n  B \\<in> Obj\n  f \\<in> Hom A B\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n\ngoal (1 subgoal):\n 1. arr (MkArr A B f)", "by simp"], ["", "lemma MkArr_Map:\n    assumes \"arr f\"\n    shows \"MkArr (Dom f) (Cod f) (Map f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MkArr (Dom f) (Cod f) (Map f) = f", "using assms arr_char"], ["proof (prove)\nusing this:\n  arr f\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n\ngoal (1 subgoal):\n 1. MkArr (Dom f) (Cod f) (Map f) = f", "by (cases f, auto)"], ["", "lemma Arr_comp:\n    assumes \"arr f\" and \"arr g\" and \"Dom g = Cod f\"\n    shows \"Arr (COMP g f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. COMP g f \\<noteq> Null \\<and>\n    Dom (COMP g f) \\<in> Obj \\<and>\n    Cod (COMP g f) \\<in> Obj \\<and>\n    Map (COMP g f) \\<in> Hom (Dom (COMP g f)) (Cod (COMP g f))", "unfolding COMP_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if (f \\<noteq> Null \\<and>\n         Dom f \\<in> Obj \\<and>\n         Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n        (g \\<noteq> Null \\<and>\n         Dom g \\<in> Obj \\<and>\n         Cod g \\<in> Obj \\<and> Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n        Dom g = Cod f\n     then MkArr (Dom f) (Cod g)\n           (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n     else Null) \\<noteq>\n    Null \\<and>\n    Dom (if (f \\<noteq> Null \\<and>\n             Dom f \\<in> Obj \\<and>\n             Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n            (g \\<noteq> Null \\<and>\n             Dom g \\<in> Obj \\<and>\n             Cod g \\<in> Obj \\<and> Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n            Dom g = Cod f\n         then MkArr (Dom f) (Cod g)\n               (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n         else Null)\n    \\<in> Obj \\<and>\n    Cod (if (f \\<noteq> Null \\<and>\n             Dom f \\<in> Obj \\<and>\n             Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n            (g \\<noteq> Null \\<and>\n             Dom g \\<in> Obj \\<and>\n             Cod g \\<in> Obj \\<and> Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n            Dom g = Cod f\n         then MkArr (Dom f) (Cod g)\n               (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n         else Null)\n    \\<in> Obj \\<and>\n    Map (if (f \\<noteq> Null \\<and>\n             Dom f \\<in> Obj \\<and>\n             Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n            (g \\<noteq> Null \\<and>\n             Dom g \\<in> Obj \\<and>\n             Cod g \\<in> Obj \\<and> Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n            Dom g = Cod f\n         then MkArr (Dom f) (Cod g)\n               (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n         else Null)\n    \\<in> Hom (Dom (if (f \\<noteq> Null \\<and>\n                        Dom f \\<in> Obj \\<and>\n                        Cod f \\<in> Obj \\<and>\n                        Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n                       (g \\<noteq> Null \\<and>\n                        Dom g \\<in> Obj \\<and>\n                        Cod g \\<in> Obj \\<and>\n                        Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n                       Dom g = Cod f\n                    then MkArr (Dom f) (Cod g)\n                          (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n                    else Null))\n           (Cod (if (f \\<noteq> Null \\<and>\n                     Dom f \\<in> Obj \\<and>\n                     Cod f \\<in> Obj \\<and>\n                     Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n                    (g \\<noteq> Null \\<and>\n                     Dom g \\<in> Obj \\<and>\n                     Cod g \\<in> Obj \\<and>\n                     Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n                    Dom g = Cod f\n                 then MkArr (Dom f) (Cod g)\n                       (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n                 else Null))", "using assms arr_char Comp_in_Hom"], ["proof (prove)\nusing this:\n  arr f\n  arr g\n  Dom g = Cod f\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n  \\<lbrakk>?A \\<in> Obj; ?B \\<in> Obj; ?C \\<in> Obj; ?f \\<in> Hom ?A ?B;\n   ?g \\<in> Hom ?B ?C\\<rbrakk>\n  \\<Longrightarrow> Comp ?C ?B ?A ?g ?f \\<in> Hom ?A ?C\n\ngoal (1 subgoal):\n 1. (if (f \\<noteq> Null \\<and>\n         Dom f \\<in> Obj \\<and>\n         Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n        (g \\<noteq> Null \\<and>\n         Dom g \\<in> Obj \\<and>\n         Cod g \\<in> Obj \\<and> Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n        Dom g = Cod f\n     then MkArr (Dom f) (Cod g)\n           (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n     else Null) \\<noteq>\n    Null \\<and>\n    Dom (if (f \\<noteq> Null \\<and>\n             Dom f \\<in> Obj \\<and>\n             Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n            (g \\<noteq> Null \\<and>\n             Dom g \\<in> Obj \\<and>\n             Cod g \\<in> Obj \\<and> Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n            Dom g = Cod f\n         then MkArr (Dom f) (Cod g)\n               (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n         else Null)\n    \\<in> Obj \\<and>\n    Cod (if (f \\<noteq> Null \\<and>\n             Dom f \\<in> Obj \\<and>\n             Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n            (g \\<noteq> Null \\<and>\n             Dom g \\<in> Obj \\<and>\n             Cod g \\<in> Obj \\<and> Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n            Dom g = Cod f\n         then MkArr (Dom f) (Cod g)\n               (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n         else Null)\n    \\<in> Obj \\<and>\n    Map (if (f \\<noteq> Null \\<and>\n             Dom f \\<in> Obj \\<and>\n             Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n            (g \\<noteq> Null \\<and>\n             Dom g \\<in> Obj \\<and>\n             Cod g \\<in> Obj \\<and> Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n            Dom g = Cod f\n         then MkArr (Dom f) (Cod g)\n               (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n         else Null)\n    \\<in> Hom (Dom (if (f \\<noteq> Null \\<and>\n                        Dom f \\<in> Obj \\<and>\n                        Cod f \\<in> Obj \\<and>\n                        Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n                       (g \\<noteq> Null \\<and>\n                        Dom g \\<in> Obj \\<and>\n                        Cod g \\<in> Obj \\<and>\n                        Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n                       Dom g = Cod f\n                    then MkArr (Dom f) (Cod g)\n                          (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n                    else Null))\n           (Cod (if (f \\<noteq> Null \\<and>\n                     Dom f \\<in> Obj \\<and>\n                     Cod f \\<in> Obj \\<and>\n                     Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n                    (g \\<noteq> Null \\<and>\n                     Dom g \\<in> Obj \\<and>\n                     Cod g \\<in> Obj \\<and>\n                     Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n                    Dom g = Cod f\n                 then MkArr (Dom f) (Cod g)\n                       (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n                 else Null))", "by simp"], ["", "lemma Dom_comp [simp]:\n    assumes \"arr f\" and \"arr g\" and \"Dom g = Cod f\"\n    shows \"Dom (COMP g f) = Dom f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dom (COMP g f) = Dom f", "unfolding COMP_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Dom (if (f \\<noteq> Null \\<and>\n             Dom f \\<in> Obj \\<and>\n             Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n            (g \\<noteq> Null \\<and>\n             Dom g \\<in> Obj \\<and>\n             Cod g \\<in> Obj \\<and> Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n            Dom g = Cod f\n         then MkArr (Dom f) (Cod g)\n               (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n         else Null) =\n    Dom f", "using assms arr_char"], ["proof (prove)\nusing this:\n  arr f\n  arr g\n  Dom g = Cod f\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n\ngoal (1 subgoal):\n 1. Dom (if (f \\<noteq> Null \\<and>\n             Dom f \\<in> Obj \\<and>\n             Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n            (g \\<noteq> Null \\<and>\n             Dom g \\<in> Obj \\<and>\n             Cod g \\<in> Obj \\<and> Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n            Dom g = Cod f\n         then MkArr (Dom f) (Cod g)\n               (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n         else Null) =\n    Dom f", "by simp"], ["", "lemma Cod_comp [simp]:\n    assumes \"arr f\" and \"arr g\" and \"Dom g = Cod f\"\n    shows \"Cod (COMP g f) = Cod g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Cod (COMP g f) = Cod g", "unfolding COMP_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Cod (if (f \\<noteq> Null \\<and>\n             Dom f \\<in> Obj \\<and>\n             Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n            (g \\<noteq> Null \\<and>\n             Dom g \\<in> Obj \\<and>\n             Cod g \\<in> Obj \\<and> Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n            Dom g = Cod f\n         then MkArr (Dom f) (Cod g)\n               (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n         else Null) =\n    Cod g", "using assms arr_char"], ["proof (prove)\nusing this:\n  arr f\n  arr g\n  Dom g = Cod f\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n\ngoal (1 subgoal):\n 1. Cod (if (f \\<noteq> Null \\<and>\n             Dom f \\<in> Obj \\<and>\n             Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n            (g \\<noteq> Null \\<and>\n             Dom g \\<in> Obj \\<and>\n             Cod g \\<in> Obj \\<and> Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n            Dom g = Cod f\n         then MkArr (Dom f) (Cod g)\n               (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n         else Null) =\n    Cod g", "by simp"], ["", "lemma Map_comp [simp]:\n    assumes \"arr f\" and \"arr g\" and \"Dom g = Cod f\"\n    shows \"Map (COMP g f) = Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Map (COMP g f) = Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f)", "unfolding COMP_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Map (if (f \\<noteq> Null \\<and>\n             Dom f \\<in> Obj \\<and>\n             Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n            (g \\<noteq> Null \\<and>\n             Dom g \\<in> Obj \\<and>\n             Cod g \\<in> Obj \\<and> Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n            Dom g = Cod f\n         then MkArr (Dom f) (Cod g)\n               (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n         else Null) =\n    Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f)", "using assms arr_char"], ["proof (prove)\nusing this:\n  arr f\n  arr g\n  Dom g = Cod f\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n\ngoal (1 subgoal):\n 1. Map (if (f \\<noteq> Null \\<and>\n             Dom f \\<in> Obj \\<and>\n             Cod f \\<in> Obj \\<and> Map f \\<in> Hom (Dom f) (Cod f)) \\<and>\n            (g \\<noteq> Null \\<and>\n             Dom g \\<in> Obj \\<and>\n             Cod g \\<in> Obj \\<and> Map g \\<in> Hom (Dom g) (Cod g)) \\<and>\n            Dom g = Cod f\n         then MkArr (Dom f) (Cod g)\n               (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n         else Null) =\n    Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f)", "by simp"], ["", "lemma seq_char:\n    shows \"seq g f \\<longleftrightarrow> arr f \\<and> arr g \\<and> Dom g = Cod f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. seq g f = (arr f \\<and> arr g \\<and> Dom g = Cod f)", "using arr_char not_arr_null null_char COMP_def Arr_comp"], ["proof (prove)\nusing this:\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n  \\<not> arr null\n  null = Null\n  COMP ?g ?f \\<equiv>\n  if (?f \\<noteq> Null \\<and>\n      Dom ?f \\<in> Obj \\<and>\n      Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n     (?g \\<noteq> Null \\<and>\n      Dom ?g \\<in> Obj \\<and>\n      Cod ?g \\<in> Obj \\<and> Map ?g \\<in> Hom (Dom ?g) (Cod ?g)) \\<and>\n     Dom ?g = Cod ?f\n  then MkArr (Dom ?f) (Cod ?g)\n        (Comp (Cod ?g) (Dom ?g) (Dom ?f) (Map ?g) (Map ?f))\n  else Null\n  \\<lbrakk>arr ?f; arr ?g; Dom ?g = Cod ?f\\<rbrakk>\n  \\<Longrightarrow> COMP ?g ?f \\<noteq> Null \\<and>\n                    Dom (COMP ?g ?f) \\<in> Obj \\<and>\n                    Cod (COMP ?g ?f) \\<in> Obj \\<and>\n                    Map (COMP ?g ?f)\n                    \\<in> Hom (Dom (COMP ?g ?f)) (Cod (COMP ?g ?f))\n\ngoal (1 subgoal):\n 1. seq g f = (arr f \\<and> arr g \\<and> Dom g = Cod f)", "by metis"], ["", "interpretation category COMP"], ["proof (prove)\ngoal (1 subgoal):\n 1. category COMP", "proof"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>g f. COMP g f \\<noteq> null \\<Longrightarrow> seq g f\n 2. \\<And>f. (domains f \\<noteq> {}) = (codomains f \\<noteq> {})\n 3. \\<And>h g f.\n       \\<lbrakk>seq h g; seq (COMP h g) f\\<rbrakk> \\<Longrightarrow> seq g f\n 4. \\<And>h g f.\n       \\<lbrakk>seq h (COMP g f); seq g f\\<rbrakk> \\<Longrightarrow> seq h g\n 5. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk> \\<Longrightarrow> seq (COMP h g) f\n 6. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> COMP (COMP h g) f = COMP h (COMP g f)", "show \"\\<And>g f. COMP g f \\<noteq> null \\<Longrightarrow> seq g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g f. COMP g f \\<noteq> null \\<Longrightarrow> seq g f", "using arr_char COMP_def null_char Comp_in_Hom"], ["proof (prove)\nusing this:\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n  COMP ?g ?f \\<equiv>\n  if (?f \\<noteq> Null \\<and>\n      Dom ?f \\<in> Obj \\<and>\n      Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n     (?g \\<noteq> Null \\<and>\n      Dom ?g \\<in> Obj \\<and>\n      Cod ?g \\<in> Obj \\<and> Map ?g \\<in> Hom (Dom ?g) (Cod ?g)) \\<and>\n     Dom ?g = Cod ?f\n  then MkArr (Dom ?f) (Cod ?g)\n        (Comp (Cod ?g) (Dom ?g) (Dom ?f) (Map ?g) (Map ?f))\n  else Null\n  null = Null\n  \\<lbrakk>?A \\<in> Obj; ?B \\<in> Obj; ?C \\<in> Obj; ?f \\<in> Hom ?A ?B;\n   ?g \\<in> Hom ?B ?C\\<rbrakk>\n  \\<Longrightarrow> Comp ?C ?B ?A ?g ?f \\<in> Hom ?A ?C\n\ngoal (1 subgoal):\n 1. \\<And>g f. COMP g f \\<noteq> null \\<Longrightarrow> seq g f", "by auto"], ["proof (state)\nthis:\n  COMP ?g ?f \\<noteq> null \\<Longrightarrow> seq ?g ?f\n\ngoal (5 subgoals):\n 1. \\<And>f. (domains f \\<noteq> {}) = (codomains f \\<noteq> {})\n 2. \\<And>h g f.\n       \\<lbrakk>seq h g; seq (COMP h g) f\\<rbrakk> \\<Longrightarrow> seq g f\n 3. \\<And>h g f.\n       \\<lbrakk>seq h (COMP g f); seq g f\\<rbrakk> \\<Longrightarrow> seq h g\n 4. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk> \\<Longrightarrow> seq (COMP h g) f\n 5. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> COMP (COMP h g) f = COMP h (COMP g f)", "show 1: \"\\<And>f. (domains f \\<noteq> {}) = (codomains f \\<noteq> {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f. (domains f \\<noteq> {}) = (codomains f \\<noteq> {})", "using in_domains_char in_codomains_char"], ["proof (prove)\nusing this:\n  (?a \\<in> domains ?f) =\n  ((?f \\<noteq> Null \\<and>\n    Dom ?f \\<in> Obj \\<and>\n    Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n   ?a = MkIde (Dom ?f))\n  (?b \\<in> codomains ?f) =\n  ((?f \\<noteq> Null \\<and>\n    Dom ?f \\<in> Obj \\<and>\n    Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n   ?b = MkIde (Cod ?f))\n\ngoal (1 subgoal):\n 1. \\<And>f. (domains f \\<noteq> {}) = (codomains f \\<noteq> {})", "by auto"], ["proof (state)\nthis:\n  (domains ?f \\<noteq> {}) = (codomains ?f \\<noteq> {})\n\ngoal (4 subgoals):\n 1. \\<And>h g f.\n       \\<lbrakk>seq h g; seq (COMP h g) f\\<rbrakk> \\<Longrightarrow> seq g f\n 2. \\<And>h g f.\n       \\<lbrakk>seq h (COMP g f); seq g f\\<rbrakk> \\<Longrightarrow> seq h g\n 3. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk> \\<Longrightarrow> seq (COMP h g) f\n 4. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> COMP (COMP h g) f = COMP h (COMP g f)", "show \"\\<And>f g h. seq h g \\<Longrightarrow> seq (COMP h g) f \\<Longrightarrow> seq g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f g h.\n       \\<lbrakk>seq h g; seq (COMP h g) f\\<rbrakk> \\<Longrightarrow> seq g f", "by (auto simp add: seq_char)"], ["proof (state)\nthis:\n  \\<lbrakk>seq ?h ?g; seq (COMP ?h ?g) ?f\\<rbrakk>\n  \\<Longrightarrow> seq ?g ?f\n\ngoal (3 subgoals):\n 1. \\<And>h g f.\n       \\<lbrakk>seq h (COMP g f); seq g f\\<rbrakk> \\<Longrightarrow> seq h g\n 2. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk> \\<Longrightarrow> seq (COMP h g) f\n 3. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> COMP (COMP h g) f = COMP h (COMP g f)", "show \"\\<And>f g h. seq h (COMP g f) \\<Longrightarrow> seq g f \\<Longrightarrow> seq h g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f g h.\n       \\<lbrakk>seq h (COMP g f); seq g f\\<rbrakk> \\<Longrightarrow> seq h g", "using seq_char COMP_def Comp_in_Hom"], ["proof (prove)\nusing this:\n  seq ?g ?f = (arr ?f \\<and> arr ?g \\<and> Dom ?g = Cod ?f)\n  COMP ?g ?f \\<equiv>\n  if (?f \\<noteq> Null \\<and>\n      Dom ?f \\<in> Obj \\<and>\n      Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n     (?g \\<noteq> Null \\<and>\n      Dom ?g \\<in> Obj \\<and>\n      Cod ?g \\<in> Obj \\<and> Map ?g \\<in> Hom (Dom ?g) (Cod ?g)) \\<and>\n     Dom ?g = Cod ?f\n  then MkArr (Dom ?f) (Cod ?g)\n        (Comp (Cod ?g) (Dom ?g) (Dom ?f) (Map ?g) (Map ?f))\n  else Null\n  \\<lbrakk>?A \\<in> Obj; ?B \\<in> Obj; ?C \\<in> Obj; ?f \\<in> Hom ?A ?B;\n   ?g \\<in> Hom ?B ?C\\<rbrakk>\n  \\<Longrightarrow> Comp ?C ?B ?A ?g ?f \\<in> Hom ?A ?C\n\ngoal (1 subgoal):\n 1. \\<And>f g h.\n       \\<lbrakk>seq h (COMP g f); seq g f\\<rbrakk> \\<Longrightarrow> seq h g", "by (metis Cod_comp)"], ["proof (state)\nthis:\n  \\<lbrakk>seq ?h (COMP ?g ?f); seq ?g ?f\\<rbrakk>\n  \\<Longrightarrow> seq ?h ?g\n\ngoal (2 subgoals):\n 1. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk> \\<Longrightarrow> seq (COMP h g) f\n 2. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> COMP (COMP h g) f = COMP h (COMP g f)", "show \"\\<And>f g h. seq g f \\<Longrightarrow> seq h g \\<Longrightarrow> seq (COMP h g) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f g h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk> \\<Longrightarrow> seq (COMP h g) f", "using Comp_in_Hom"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<in> Obj; ?B \\<in> Obj; ?C \\<in> Obj; ?f \\<in> Hom ?A ?B;\n   ?g \\<in> Hom ?B ?C\\<rbrakk>\n  \\<Longrightarrow> Comp ?C ?B ?A ?g ?f \\<in> Hom ?A ?C\n\ngoal (1 subgoal):\n 1. \\<And>f g h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk> \\<Longrightarrow> seq (COMP h g) f", "by (auto simp add: COMP_def seq_char)"], ["proof (state)\nthis:\n  \\<lbrakk>seq ?g ?f; seq ?h ?g\\<rbrakk>\n  \\<Longrightarrow> seq (COMP ?h ?g) ?f\n\ngoal (1 subgoal):\n 1. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> COMP (COMP h g) f = COMP h (COMP g f)", "show \"\\<And>g f h. seq g f \\<Longrightarrow> seq h g \\<Longrightarrow> COMP (COMP h g) f = COMP h (COMP g f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> COMP (COMP h g) f = COMP h (COMP g f)", "using seq_char COMP_def Comp_assoc Comp_in_Hom Dom_comp Cod_comp Map_comp"], ["proof (prove)\nusing this:\n  seq ?g ?f = (arr ?f \\<and> arr ?g \\<and> Dom ?g = Cod ?f)\n  COMP ?g ?f \\<equiv>\n  if (?f \\<noteq> Null \\<and>\n      Dom ?f \\<in> Obj \\<and>\n      Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n     (?g \\<noteq> Null \\<and>\n      Dom ?g \\<in> Obj \\<and>\n      Cod ?g \\<in> Obj \\<and> Map ?g \\<in> Hom (Dom ?g) (Cod ?g)) \\<and>\n     Dom ?g = Cod ?f\n  then MkArr (Dom ?f) (Cod ?g)\n        (Comp (Cod ?g) (Dom ?g) (Dom ?f) (Map ?g) (Map ?f))\n  else Null\n  \\<lbrakk>?A \\<in> Obj; ?B \\<in> Obj; ?C \\<in> Obj; ?D \\<in> Obj;\n   ?f \\<in> Hom ?A ?B; ?g \\<in> Hom ?B ?C; ?h \\<in> Hom ?C ?D\\<rbrakk>\n  \\<Longrightarrow> Comp ?D ?C ?A ?h (Comp ?C ?B ?A ?g ?f) =\n                    Comp ?D ?B ?A (Comp ?D ?C ?B ?h ?g) ?f\n  \\<lbrakk>?A \\<in> Obj; ?B \\<in> Obj; ?C \\<in> Obj; ?f \\<in> Hom ?A ?B;\n   ?g \\<in> Hom ?B ?C\\<rbrakk>\n  \\<Longrightarrow> Comp ?C ?B ?A ?g ?f \\<in> Hom ?A ?C\n  \\<lbrakk>arr ?f; arr ?g; Dom ?g = Cod ?f\\<rbrakk>\n  \\<Longrightarrow> Dom (COMP ?g ?f) = Dom ?f\n  \\<lbrakk>arr ?f; arr ?g; Dom ?g = Cod ?f\\<rbrakk>\n  \\<Longrightarrow> Cod (COMP ?g ?f) = Cod ?g\n  \\<lbrakk>arr ?f; arr ?g; Dom ?g = Cod ?f\\<rbrakk>\n  \\<Longrightarrow> Map (COMP ?g ?f) =\n                    Comp (Cod ?g) (Dom ?g) (Dom ?f) (Map ?g) (Map ?f)\n\ngoal (1 subgoal):\n 1. \\<And>g f h.\n       \\<lbrakk>seq g f; seq h g\\<rbrakk>\n       \\<Longrightarrow> COMP (COMP h g) f = COMP h (COMP g f)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>seq ?g ?f; seq ?h ?g\\<rbrakk>\n  \\<Longrightarrow> COMP (COMP ?h ?g) ?f = COMP ?h (COMP ?g ?f)\n\ngoal:\nNo subgoals!", "qed"], ["", "proposition is_category:\n    shows \"category COMP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category COMP", ".."], ["", "text \\<open>\n      Functions \\<open>Dom\\<close>, \\<open>Cod\\<close>, and \\<open>Map\\<close> establish a correspondence between the\n      arrows of the constructed category and the elements of the originally given\n      parameters \\<open>Obj\\<close> and \\<open>Hom\\<close>.\n    \\<close>"], ["", "lemma Dom_in_Obj:\n    assumes \"arr f\"\n    shows \"Dom f \\<in> Obj\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dom f \\<in> Obj", "using assms arr_char"], ["proof (prove)\nusing this:\n  arr f\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n\ngoal (1 subgoal):\n 1. Dom f \\<in> Obj", "by simp"], ["", "lemma Cod_in_Obj:\n    assumes \"arr f\"\n    shows \"Cod f \\<in> Obj\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Cod f \\<in> Obj", "using assms arr_char"], ["proof (prove)\nusing this:\n  arr f\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n\ngoal (1 subgoal):\n 1. Cod f \\<in> Obj", "by simp"], ["", "lemma Map_in_Hom:\n    assumes \"arr f\"\n    shows \"Map f \\<in> Hom (Dom f) (Cod f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Map f \\<in> Hom (Dom f) (Cod f)", "using assms arr_char"], ["proof (prove)\nusing this:\n  arr f\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n\ngoal (1 subgoal):\n 1. Map f \\<in> Hom (Dom f) (Cod f)", "by simp"], ["", "lemma MkArr_in_hom:\n    assumes \"A \\<in> Obj\" and \"B \\<in> Obj\" and \"f \\<in> Hom A B\"\n    shows \"in_hom (MkArr A B f) (MkIde A) (MkIde B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. in_hom (MkArr A B f) (MkIde A) (MkIde B)", "using assms arr_char ide_MkIde"], ["proof (prove)\nusing this:\n  A \\<in> Obj\n  B \\<in> Obj\n  f \\<in> Hom A B\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n  ?A \\<in> Obj \\<Longrightarrow> ide (MkIde ?A)\n\ngoal (1 subgoal):\n 1. in_hom (MkArr A B f) (MkIde A) (MkIde B)", "by (simp add: in_codomains_char in_domains_char in_hom_def)"], ["", "text \\<open>\n      The next few results show that domains, codomains, and composition in the constructed\n      category are as expected according to the just-given correspondence.\n    \\<close>"], ["", "lemma dom_char:\n    shows \"dom f = (if arr f then MkIde (Dom f) else null)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.dom f = (if arr f then MkIde (Dom f) else null)", "using dom_def in_domains_char dom_in_domains has_domain_iff_arr"], ["proof (prove)\nusing this:\n  local.dom ?f =\n  (if domains ?f \\<noteq> {} then SOME a. a \\<in> domains ?f else null)\n  (?a \\<in> domains ?f) =\n  ((?f \\<noteq> Null \\<and>\n    Dom ?f \\<in> Obj \\<and>\n    Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n   ?a = MkIde (Dom ?f))\n  domains ?f \\<noteq> {} \\<Longrightarrow> local.dom ?f \\<in> domains ?f\n  (domains ?f \\<noteq> {}) = arr ?f\n\ngoal (1 subgoal):\n 1. local.dom f = (if arr f then MkIde (Dom f) else null)", "by auto"], ["", "lemma cod_char:\n    shows \"cod f = (if arr f then MkIde (Cod f) else null)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cod f = (if arr f then MkIde (Cod f) else null)", "using cod_def in_codomains_char cod_in_codomains has_codomain_iff_arr"], ["proof (prove)\nusing this:\n  cod ?f =\n  (if codomains ?f \\<noteq> {} then SOME b. b \\<in> codomains ?f else null)\n  (?b \\<in> codomains ?f) =\n  ((?f \\<noteq> Null \\<and>\n    Dom ?f \\<in> Obj \\<and>\n    Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n   ?b = MkIde (Cod ?f))\n  codomains ?f \\<noteq> {} \\<Longrightarrow> cod ?f \\<in> codomains ?f\n  (codomains ?f \\<noteq> {}) = arr ?f\n\ngoal (1 subgoal):\n 1. cod f = (if arr f then MkIde (Cod f) else null)", "by auto"], ["", "lemma comp_char:\n    shows \"COMP g f = (if seq g f then\n                         MkArr (Dom f) (Cod g) (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n                       else\n                         null)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. COMP g f =\n    (if seq g f\n     then MkArr (Dom f) (Cod g)\n           (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n     else null)", "using COMP_def seq_char arr_char null_char"], ["proof (prove)\nusing this:\n  COMP ?g ?f \\<equiv>\n  if (?f \\<noteq> Null \\<and>\n      Dom ?f \\<in> Obj \\<and>\n      Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)) \\<and>\n     (?g \\<noteq> Null \\<and>\n      Dom ?g \\<in> Obj \\<and>\n      Cod ?g \\<in> Obj \\<and> Map ?g \\<in> Hom (Dom ?g) (Cod ?g)) \\<and>\n     Dom ?g = Cod ?f\n  then MkArr (Dom ?f) (Cod ?g)\n        (Comp (Cod ?g) (Dom ?g) (Dom ?f) (Map ?g) (Map ?f))\n  else Null\n  seq ?g ?f = (arr ?f \\<and> arr ?g \\<and> Dom ?g = Cod ?f)\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n  null = Null\n\ngoal (1 subgoal):\n 1. COMP g f =\n    (if seq g f\n     then MkArr (Dom f) (Cod g)\n           (Comp (Cod g) (Dom g) (Dom f) (Map g) (Map f))\n     else null)", "by auto"], ["", "lemma in_hom_char:\n    shows \"in_hom f a b \\<longleftrightarrow> arr f \\<and> ide a \\<and> ide b \\<and> Dom f = Dom a \\<and> Cod f = Dom b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. in_hom f a b =\n    (arr f \\<and>\n     ide a \\<and> ide b \\<and> Dom f = Dom a \\<and> Cod f = Dom b)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. in_hom f a b \\<Longrightarrow>\n    arr f \\<and>\n    ide a \\<and> ide b \\<and> Dom f = Dom a \\<and> Cod f = Dom b\n 2. arr f \\<and>\n    ide a \\<and>\n    ide b \\<and> Dom f = Dom a \\<and> Cod f = Dom b \\<Longrightarrow>\n    in_hom f a b", "show \"in_hom f a b \\<Longrightarrow> arr f \\<and> ide a \\<and> ide b \\<and> Dom f = Dom a \\<and> Cod f = Dom b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. in_hom f a b \\<Longrightarrow>\n    arr f \\<and>\n    ide a \\<and> ide b \\<and> Dom f = Dom a \\<and> Cod f = Dom b", "using arr_char dom_char cod_char"], ["proof (prove)\nusing this:\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n  local.dom ?f = (if arr ?f then MkIde (Dom ?f) else null)\n  cod ?f = (if arr ?f then MkIde (Cod ?f) else null)\n\ngoal (1 subgoal):\n 1. in_hom f a b \\<Longrightarrow>\n    arr f \\<and>\n    ide a \\<and> ide b \\<and> Dom f = Dom a \\<and> Cod f = Dom b", "by auto"], ["proof (state)\nthis:\n  in_hom f a b \\<Longrightarrow>\n  arr f \\<and> ide a \\<and> ide b \\<and> Dom f = Dom a \\<and> Cod f = Dom b\n\ngoal (1 subgoal):\n 1. arr f \\<and>\n    ide a \\<and>\n    ide b \\<and> Dom f = Dom a \\<and> Cod f = Dom b \\<Longrightarrow>\n    in_hom f a b", "show \"arr f \\<and> ide a \\<and> ide b \\<and> Dom f = Dom a \\<and> Cod f = Dom b \\<Longrightarrow> in_hom f a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr f \\<and>\n    ide a \\<and>\n    ide b \\<and> Dom f = Dom a \\<and> Cod f = Dom b \\<Longrightarrow>\n    in_hom f a b", "using arr_char dom_char cod_char ide_char Id_in_Hom MkArr_Map in_homI"], ["proof (prove)\nusing this:\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n  local.dom ?f = (if arr ?f then MkIde (Dom ?f) else null)\n  cod ?f = (if arr ?f then MkIde (Cod ?f) else null)\n  ide ?a = (arr ?a \\<and> local.dom ?a = ?a \\<and> cod ?a = ?a)\n  ?A \\<in> Obj \\<Longrightarrow> Id ?A \\<in> Hom ?A ?A\n  arr ?f \\<Longrightarrow> MkArr (Dom ?f) (Cod ?f) (Map ?f) = ?f\n  \\<lbrakk>arr ?f; local.dom ?f = ?a; cod ?f = ?b\\<rbrakk>\n  \\<Longrightarrow> in_hom ?f ?a ?b\n\ngoal (1 subgoal):\n 1. arr f \\<and>\n    ide a \\<and>\n    ide b \\<and> Dom f = Dom a \\<and> Cod f = Dom b \\<Longrightarrow>\n    in_hom f a b", "by metis"], ["proof (state)\nthis:\n  arr f \\<and>\n  ide a \\<and>\n  ide b \\<and> Dom f = Dom a \\<and> Cod f = Dom b \\<Longrightarrow>\n  in_hom f a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Dom_dom [simp]:\n    assumes \"arr f\"\n    shows \"Dom (dom f) = Dom f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dom (local.dom f) = Dom f", "using assms MkArr_Map dom_char"], ["proof (prove)\nusing this:\n  arr f\n  arr ?f \\<Longrightarrow> MkArr (Dom ?f) (Cod ?f) (Map ?f) = ?f\n  local.dom ?f = (if arr ?f then MkIde (Dom ?f) else null)\n\ngoal (1 subgoal):\n 1. Dom (local.dom f) = Dom f", "by simp"], ["", "lemma Cod_dom [simp]:\n    assumes \"arr f\"\n    shows \"Cod (dom f) = Dom f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Cod (local.dom f) = Dom f", "using assms MkArr_Map dom_char"], ["proof (prove)\nusing this:\n  arr f\n  arr ?f \\<Longrightarrow> MkArr (Dom ?f) (Cod ?f) (Map ?f) = ?f\n  local.dom ?f = (if arr ?f then MkIde (Dom ?f) else null)\n\ngoal (1 subgoal):\n 1. Cod (local.dom f) = Dom f", "by simp"], ["", "lemma Dom_cod [simp]:\n    assumes \"arr f\"\n    shows \"Dom (cod f) = Cod f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dom (cod f) = Cod f", "using assms MkArr_Map cod_char"], ["proof (prove)\nusing this:\n  arr f\n  arr ?f \\<Longrightarrow> MkArr (Dom ?f) (Cod ?f) (Map ?f) = ?f\n  cod ?f = (if arr ?f then MkIde (Cod ?f) else null)\n\ngoal (1 subgoal):\n 1. Dom (cod f) = Cod f", "by simp"], ["", "lemma Cod_cod [simp]:\n    assumes \"arr f\"\n    shows \"Cod (cod f) = Cod f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Cod (cod f) = Cod f", "using assms MkArr_Map cod_char"], ["proof (prove)\nusing this:\n  arr f\n  arr ?f \\<Longrightarrow> MkArr (Dom ?f) (Cod ?f) (Map ?f) = ?f\n  cod ?f = (if arr ?f then MkIde (Cod ?f) else null)\n\ngoal (1 subgoal):\n 1. Cod (cod f) = Cod f", "by simp"], ["", "lemma Map_dom [simp]:\n    assumes \"arr f\"\n    shows \"Map (dom f) = Id (Dom f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Map (local.dom f) = Id (Dom f)", "using assms MkArr_Map dom_char"], ["proof (prove)\nusing this:\n  arr f\n  arr ?f \\<Longrightarrow> MkArr (Dom ?f) (Cod ?f) (Map ?f) = ?f\n  local.dom ?f = (if arr ?f then MkIde (Dom ?f) else null)\n\ngoal (1 subgoal):\n 1. Map (local.dom f) = Id (Dom f)", "by simp"], ["", "lemma Map_cod [simp]:\n    assumes \"arr f\"\n    shows \"Map (cod f) = Id (Cod f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Map (cod f) = Id (Cod f)", "using assms MkArr_Map cod_char"], ["proof (prove)\nusing this:\n  arr f\n  arr ?f \\<Longrightarrow> MkArr (Dom ?f) (Cod ?f) (Map ?f) = ?f\n  cod ?f = (if arr ?f then MkIde (Cod ?f) else null)\n\ngoal (1 subgoal):\n 1. Map (cod f) = Id (Cod f)", "by simp"], ["", "lemma Map_ide:\n    assumes \"ide a\"\n    shows \"Map a = Id (Dom a)\" and \"Map a = Id (Cod a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Map a = Id (Dom a) &&& Map a = Id (Cod a)", "using assms ide_char dom_char [of a] Map_dom Map_cod ideD(1)"], ["proof (prove)\nusing this:\n  ide a\n  ide ?a = (arr ?a \\<and> local.dom ?a = ?a \\<and> cod ?a = ?a)\n  local.dom a = (if arr a then MkIde (Dom a) else null)\n  arr ?f \\<Longrightarrow> Map (local.dom ?f) = Id (Dom ?f)\n  arr ?f \\<Longrightarrow> Map (cod ?f) = Id (Cod ?f)\n  ide ?a \\<Longrightarrow> arr ?a\n\ngoal (1 subgoal):\n 1. Map a = Id (Dom a) &&& Map a = Id (Cod a)", "by metis+"], ["", "(*\n     * TODO: The next two ought to be simps, but they cause looping when they find themselves\n     * in combination with dom_char and cod_char.\n     *)"], ["", "lemma MkIde_Dom:\n    assumes \"arr a\"\n    shows \"MkIde (Dom a) = dom a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MkIde (Dom a) = local.dom a", "using assms arr_char dom_char"], ["proof (prove)\nusing this:\n  arr a\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n  local.dom ?f = (if arr ?f then MkIde (Dom ?f) else null)\n\ngoal (1 subgoal):\n 1. MkIde (Dom a) = local.dom a", "by (cases a, auto)"], ["", "lemma MkIde_Cod:\n    assumes \"arr a\"\n    shows \"MkIde (Cod a) = cod a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MkIde (Cod a) = cod a", "using assms arr_char cod_char"], ["proof (prove)\nusing this:\n  arr a\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n  cod ?f = (if arr ?f then MkIde (Cod ?f) else null)\n\ngoal (1 subgoal):\n 1. MkIde (Cod a) = cod a", "by (cases a, auto)"], ["", "lemma MkIde_Dom' [simp]:\n    assumes \"ide a\"\n    shows \"MkIde (Dom a) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MkIde (Dom a) = a", "using assms MkIde_Dom"], ["proof (prove)\nusing this:\n  ide a\n  arr ?a \\<Longrightarrow> MkIde (Dom ?a) = local.dom ?a\n\ngoal (1 subgoal):\n 1. MkIde (Dom a) = a", "by simp"], ["", "lemma MkIde_Cod' [simp]:\n    assumes \"ide a\"\n    shows \"MkIde (Cod a) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MkIde (Cod a) = a", "using assms MkIde_Cod"], ["proof (prove)\nusing this:\n  ide a\n  arr ?a \\<Longrightarrow> MkIde (Cod ?a) = cod ?a\n\ngoal (1 subgoal):\n 1. MkIde (Cod a) = a", "by simp"], ["", "lemma dom_MkArr [simp]:\n    assumes \"arr (MkArr A B F)\"\n    shows \"dom (MkArr A B F) = MkIde A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.dom (MkArr A B F) = MkIde A", "using assms dom_char"], ["proof (prove)\nusing this:\n  arr (MkArr A B F)\n  local.dom ?f = (if arr ?f then MkIde (Dom ?f) else null)\n\ngoal (1 subgoal):\n 1. local.dom (MkArr A B F) = MkIde A", "by simp"], ["", "lemma cod_MkArr [simp]:\n    assumes \"arr (MkArr A B F)\"\n    shows \"cod (MkArr A B F) = MkIde B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cod (MkArr A B F) = MkIde B", "using assms cod_char"], ["proof (prove)\nusing this:\n  arr (MkArr A B F)\n  cod ?f = (if arr ?f then MkIde (Cod ?f) else null)\n\ngoal (1 subgoal):\n 1. cod (MkArr A B F) = MkIde B", "by simp"], ["", "lemma comp_MkArr [simp]:\n    assumes \"arr (MkArr A B F)\" and \"arr (MkArr B C G)\"\n    shows \"COMP (MkArr B C G) (MkArr A B F) = MkArr A C (Comp C B A G F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. COMP (MkArr B C G) (MkArr A B F) = MkArr A C (Comp C B A G F)", "using assms comp_char [of \"MkArr B C G\" \"MkArr A B F\"]"], ["proof (prove)\nusing this:\n  arr (MkArr A B F)\n  arr (MkArr B C G)\n  COMP (MkArr B C G) (MkArr A B F) =\n  (if seq (MkArr B C G) (MkArr A B F)\n   then MkArr (Dom (MkArr A B F)) (Cod (MkArr B C G))\n         (Comp (Cod (MkArr B C G)) (Dom (MkArr B C G)) (Dom (MkArr A B F))\n           (Map (MkArr B C G)) (Map (MkArr A B F)))\n   else null)\n\ngoal (1 subgoal):\n 1. COMP (MkArr B C G) (MkArr A B F) = MkArr A C (Comp C B A G F)", "by simp"], ["", "text \\<open>\n      The set \\<open>Obj\\<close> of ``objects'' given as a parameter is in bijective correspondence\n      (via function \\<open>MkIde\\<close>) with the set of identities of the resulting category.\n    \\<close>"], ["", "proposition bij_betw_ide_Obj:\n    shows \"MkIde \\<in> Obj \\<rightarrow> Collect ide\"\n    and \"Dom \\<in> Collect ide \\<rightarrow> Obj\"\n    and \"A \\<in> Obj \\<Longrightarrow> Dom (MkIde A) = A\"\n    and \"a \\<in> Collect ide \\<Longrightarrow> MkIde (Dom a) = a\"\n    and \"bij_betw Dom (Collect ide) Obj\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (MkIde \\<in> Obj \\<rightarrow> Collect ide &&&\n     Dom \\<in> Collect ide \\<rightarrow> Obj) &&&\n    (A \\<in> Obj \\<Longrightarrow> Dom (MkIde A) = A) &&&\n    (a \\<in> Collect ide \\<Longrightarrow> MkIde (Dom a) = a) &&&\n    bij_betw Dom (Collect ide) Obj", "proof -"], ["proof (state)\ngoal (5 subgoals):\n 1. MkIde \\<in> Obj \\<rightarrow> Collect ide\n 2. Dom \\<in> Collect ide \\<rightarrow> Obj\n 3. A \\<in> Obj \\<Longrightarrow> Dom (MkIde A) = A\n 4. a \\<in> Collect ide \\<Longrightarrow> MkIde (Dom a) = a\n 5. bij_betw Dom (Collect ide) Obj", "show \"MkIde \\<in> Obj \\<rightarrow> Collect ide\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MkIde \\<in> Obj \\<rightarrow> Collect ide", "using ide_MkIde"], ["proof (prove)\nusing this:\n  ?A \\<in> Obj \\<Longrightarrow> ide (MkIde ?A)\n\ngoal (1 subgoal):\n 1. MkIde \\<in> Obj \\<rightarrow> Collect ide", "by simp"], ["proof (state)\nthis:\n  MkIde \\<in> Obj \\<rightarrow> Collect ide\n\ngoal (4 subgoals):\n 1. Dom \\<in> Collect ide \\<rightarrow> Obj\n 2. A \\<in> Obj \\<Longrightarrow> Dom (MkIde A) = A\n 3. a \\<in> Collect ide \\<Longrightarrow> MkIde (Dom a) = a\n 4. bij_betw Dom (Collect ide) Obj", "moreover"], ["proof (state)\nthis:\n  MkIde \\<in> Obj \\<rightarrow> Collect ide\n\ngoal (4 subgoals):\n 1. Dom \\<in> Collect ide \\<rightarrow> Obj\n 2. A \\<in> Obj \\<Longrightarrow> Dom (MkIde A) = A\n 3. a \\<in> Collect ide \\<Longrightarrow> MkIde (Dom a) = a\n 4. bij_betw Dom (Collect ide) Obj", "show \"Dom \\<in> Collect ide \\<rightarrow> Obj\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dom \\<in> Collect ide \\<rightarrow> Obj", "using arr_char ideD(1)"], ["proof (prove)\nusing this:\n  arr ?f =\n  (?f \\<noteq> Null \\<and>\n   Dom ?f \\<in> Obj \\<and>\n   Cod ?f \\<in> Obj \\<and> Map ?f \\<in> Hom (Dom ?f) (Cod ?f))\n  ide ?a \\<Longrightarrow> arr ?a\n\ngoal (1 subgoal):\n 1. Dom \\<in> Collect ide \\<rightarrow> Obj", "by simp"], ["proof (state)\nthis:\n  Dom \\<in> Collect ide \\<rightarrow> Obj\n\ngoal (3 subgoals):\n 1. A \\<in> Obj \\<Longrightarrow> Dom (MkIde A) = A\n 2. a \\<in> Collect ide \\<Longrightarrow> MkIde (Dom a) = a\n 3. bij_betw Dom (Collect ide) Obj", "moreover"], ["proof (state)\nthis:\n  Dom \\<in> Collect ide \\<rightarrow> Obj\n\ngoal (3 subgoals):\n 1. A \\<in> Obj \\<Longrightarrow> Dom (MkIde A) = A\n 2. a \\<in> Collect ide \\<Longrightarrow> MkIde (Dom a) = a\n 3. bij_betw Dom (Collect ide) Obj", "show \"\\<And>A. A \\<in> Obj \\<Longrightarrow> Dom (MkIde A) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A. A \\<in> Obj \\<Longrightarrow> Dom (MkIde A) = A", "by simp"], ["proof (state)\nthis:\n  ?A \\<in> Obj \\<Longrightarrow> Dom (MkIde ?A) = ?A\n\ngoal (2 subgoals):\n 1. a \\<in> Collect ide \\<Longrightarrow> MkIde (Dom a) = a\n 2. bij_betw Dom (Collect ide) Obj", "moreover"], ["proof (state)\nthis:\n  ?A \\<in> Obj \\<Longrightarrow> Dom (MkIde ?A) = ?A\n\ngoal (2 subgoals):\n 1. a \\<in> Collect ide \\<Longrightarrow> MkIde (Dom a) = a\n 2. bij_betw Dom (Collect ide) Obj", "show \"\\<And>a. a \\<in> Collect ide \\<Longrightarrow> MkIde (Dom a) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> Collect ide \\<Longrightarrow> MkIde (Dom a) = a", "using MkIde_Dom"], ["proof (prove)\nusing this:\n  arr ?a \\<Longrightarrow> MkIde (Dom ?a) = local.dom ?a\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> Collect ide \\<Longrightarrow> MkIde (Dom a) = a", "by simp"], ["proof (state)\nthis:\n  ?a \\<in> Collect ide \\<Longrightarrow> MkIde (Dom ?a) = ?a\n\ngoal (1 subgoal):\n 1. bij_betw Dom (Collect ide) Obj", "ultimately"], ["proof (chain)\npicking this:\n  MkIde \\<in> Obj \\<rightarrow> Collect ide\n  Dom \\<in> Collect ide \\<rightarrow> Obj\n  ?A \\<in> Obj \\<Longrightarrow> Dom (MkIde ?A) = ?A\n  ?a \\<in> Collect ide \\<Longrightarrow> MkIde (Dom ?a) = ?a", "show \"bij_betw Dom (Collect ide) Obj\""], ["proof (prove)\nusing this:\n  MkIde \\<in> Obj \\<rightarrow> Collect ide\n  Dom \\<in> Collect ide \\<rightarrow> Obj\n  ?A \\<in> Obj \\<Longrightarrow> Dom (MkIde ?A) = ?A\n  ?a \\<in> Collect ide \\<Longrightarrow> MkIde (Dom ?a) = ?a\n\ngoal (1 subgoal):\n 1. bij_betw Dom (Collect ide) Obj", "using bij_betwI"], ["proof (prove)\nusing this:\n  MkIde \\<in> Obj \\<rightarrow> Collect ide\n  Dom \\<in> Collect ide \\<rightarrow> Obj\n  ?A \\<in> Obj \\<Longrightarrow> Dom (MkIde ?A) = ?A\n  ?a \\<in> Collect ide \\<Longrightarrow> MkIde (Dom ?a) = ?a\n  \\<lbrakk>?f \\<in> ?A \\<rightarrow> ?B; ?g \\<in> ?B \\<rightarrow> ?A;\n   \\<And>x. x \\<in> ?A \\<Longrightarrow> ?g (?f x) = x;\n   \\<And>y. y \\<in> ?B \\<Longrightarrow> ?f (?g y) = y\\<rbrakk>\n  \\<Longrightarrow> bij_betw ?f ?A ?B\n\ngoal (1 subgoal):\n 1. bij_betw Dom (Collect ide) Obj", "by blast"], ["proof (state)\nthis:\n  bij_betw Dom (Collect ide) Obj\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n      For each pair of identities \\<open>a\\<close> and \\<open>b\\<close>, the set \\<open>Hom (Dom a) (Dom b)\\<close> is in\n      bijective correspondence (via function \\<open>MkArr (Dom a) (Dom b)\\<close>) with the\n      ``hom-set'' \\<open>hom a b\\<close> of the resulting category.\n    \\<close>"], ["", "proposition bij_betw_hom_Hom:\n    assumes \"ide a\" and \"ide b\"\n    shows \"Map \\<in> hom a b \\<rightarrow> Hom (Dom a) (Dom b)\"\n    and \"MkArr (Dom a) (Dom b) \\<in> Hom (Dom a) (Dom b) \\<rightarrow> hom a b\"\n    and \"\\<And>f. f \\<in> hom a b \\<Longrightarrow> MkArr (Dom a) (Dom b) (Map f) = f\"\n    and \"\\<And>F. F \\<in> Hom (Dom a) (Dom b) \\<Longrightarrow> Map (MkArr (Dom a) (Dom b) F) = F\"\n    and \"bij_betw Map (hom a b) (Hom (Dom a) (Dom b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Map \\<in> hom a b \\<rightarrow> Hom (Dom a) (Dom b) &&&\n     MkArr (Dom a) (Dom b)\n     \\<in> Hom (Dom a) (Dom b) \\<rightarrow> hom a b) &&&\n    (\\<And>f.\n        f \\<in> hom a b \\<Longrightarrow>\n        MkArr (Dom a) (Dom b) (Map f) = f) &&&\n    (\\<And>F.\n        F \\<in> Hom (Dom a) (Dom b) \\<Longrightarrow>\n        Map (MkArr (Dom a) (Dom b) F) = F) &&&\n    bij_betw Map (hom a b) (Hom (Dom a) (Dom b))", "proof -"], ["proof (state)\ngoal (5 subgoals):\n 1. Map \\<in> hom a b \\<rightarrow> Hom (Dom a) (Dom b)\n 2. MkArr (Dom a) (Dom b) \\<in> Hom (Dom a) (Dom b) \\<rightarrow> hom a b\n 3. \\<And>f.\n       f \\<in> hom a b \\<Longrightarrow> MkArr (Dom a) (Dom b) (Map f) = f\n 4. \\<And>F.\n       F \\<in> Hom (Dom a) (Dom b) \\<Longrightarrow>\n       Map (MkArr (Dom a) (Dom b) F) = F\n 5. bij_betw Map (hom a b) (Hom (Dom a) (Dom b))", "show \"Map \\<in> hom a b \\<rightarrow> Hom (Dom a) (Dom b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Map \\<in> hom a b \\<rightarrow> Hom (Dom a) (Dom b)", "using Map_in_Hom cod_char dom_char in_hom_char"], ["proof (prove)\nusing this:\n  arr ?f \\<Longrightarrow> Map ?f \\<in> Hom (Dom ?f) (Cod ?f)\n  cod ?f = (if arr ?f then MkIde (Cod ?f) else null)\n  local.dom ?f = (if arr ?f then MkIde (Dom ?f) else null)\n  in_hom ?f ?a ?b =\n  (arr ?f \\<and>\n   ide ?a \\<and> ide ?b \\<and> Dom ?f = Dom ?a \\<and> Cod ?f = Dom ?b)\n\ngoal (1 subgoal):\n 1. Map \\<in> hom a b \\<rightarrow> Hom (Dom a) (Dom b)", "by fastforce"], ["proof (state)\nthis:\n  Map \\<in> hom a b \\<rightarrow> Hom (Dom a) (Dom b)\n\ngoal (4 subgoals):\n 1. MkArr (Dom a) (Dom b) \\<in> Hom (Dom a) (Dom b) \\<rightarrow> hom a b\n 2. \\<And>f.\n       f \\<in> hom a b \\<Longrightarrow> MkArr (Dom a) (Dom b) (Map f) = f\n 3. \\<And>F.\n       F \\<in> Hom (Dom a) (Dom b) \\<Longrightarrow>\n       Map (MkArr (Dom a) (Dom b) F) = F\n 4. bij_betw Map (hom a b) (Hom (Dom a) (Dom b))", "moreover"], ["proof (state)\nthis:\n  Map \\<in> hom a b \\<rightarrow> Hom (Dom a) (Dom b)\n\ngoal (4 subgoals):\n 1. MkArr (Dom a) (Dom b) \\<in> Hom (Dom a) (Dom b) \\<rightarrow> hom a b\n 2. \\<And>f.\n       f \\<in> hom a b \\<Longrightarrow> MkArr (Dom a) (Dom b) (Map f) = f\n 3. \\<And>F.\n       F \\<in> Hom (Dom a) (Dom b) \\<Longrightarrow>\n       Map (MkArr (Dom a) (Dom b) F) = F\n 4. bij_betw Map (hom a b) (Hom (Dom a) (Dom b))", "show \"MkArr (Dom a) (Dom b) \\<in> Hom (Dom a) (Dom b) \\<rightarrow> hom a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MkArr (Dom a) (Dom b) \\<in> Hom (Dom a) (Dom b) \\<rightarrow> hom a b", "using assms Dom_in_Obj MkArr_in_hom [of \"Dom a\" \"Dom b\"]"], ["proof (prove)\nusing this:\n  ide a\n  ide b\n  arr ?f \\<Longrightarrow> Dom ?f \\<in> Obj\n  \\<lbrakk>Dom a \\<in> Obj; Dom b \\<in> Obj;\n   ?f \\<in> Hom (Dom a) (Dom b)\\<rbrakk>\n  \\<Longrightarrow> in_hom (MkArr (Dom a) (Dom b) ?f) (MkIde (Dom a))\n                     (MkIde (Dom b))\n\ngoal (1 subgoal):\n 1. MkArr (Dom a) (Dom b) \\<in> Hom (Dom a) (Dom b) \\<rightarrow> hom a b", "by simp"], ["proof (state)\nthis:\n  MkArr (Dom a) (Dom b) \\<in> Hom (Dom a) (Dom b) \\<rightarrow> hom a b\n\ngoal (3 subgoals):\n 1. \\<And>f.\n       f \\<in> hom a b \\<Longrightarrow> MkArr (Dom a) (Dom b) (Map f) = f\n 2. \\<And>F.\n       F \\<in> Hom (Dom a) (Dom b) \\<Longrightarrow>\n       Map (MkArr (Dom a) (Dom b) F) = F\n 3. bij_betw Map (hom a b) (Hom (Dom a) (Dom b))", "moreover"], ["proof (state)\nthis:\n  MkArr (Dom a) (Dom b) \\<in> Hom (Dom a) (Dom b) \\<rightarrow> hom a b\n\ngoal (3 subgoals):\n 1. \\<And>f.\n       f \\<in> hom a b \\<Longrightarrow> MkArr (Dom a) (Dom b) (Map f) = f\n 2. \\<And>F.\n       F \\<in> Hom (Dom a) (Dom b) \\<Longrightarrow>\n       Map (MkArr (Dom a) (Dom b) F) = F\n 3. bij_betw Map (hom a b) (Hom (Dom a) (Dom b))", "show \"\\<And>f. f \\<in> hom a b \\<Longrightarrow> MkArr (Dom a) (Dom b) (Map f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> hom a b \\<Longrightarrow> MkArr (Dom a) (Dom b) (Map f) = f", "using MkArr_Map"], ["proof (prove)\nusing this:\n  arr ?f \\<Longrightarrow> MkArr (Dom ?f) (Cod ?f) (Map ?f) = ?f\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> hom a b \\<Longrightarrow> MkArr (Dom a) (Dom b) (Map f) = f", "by auto"], ["proof (state)\nthis:\n  ?f \\<in> hom a b \\<Longrightarrow> MkArr (Dom a) (Dom b) (Map ?f) = ?f\n\ngoal (2 subgoals):\n 1. \\<And>F.\n       F \\<in> Hom (Dom a) (Dom b) \\<Longrightarrow>\n       Map (MkArr (Dom a) (Dom b) F) = F\n 2. bij_betw Map (hom a b) (Hom (Dom a) (Dom b))", "moreover"], ["proof (state)\nthis:\n  ?f \\<in> hom a b \\<Longrightarrow> MkArr (Dom a) (Dom b) (Map ?f) = ?f\n\ngoal (2 subgoals):\n 1. \\<And>F.\n       F \\<in> Hom (Dom a) (Dom b) \\<Longrightarrow>\n       Map (MkArr (Dom a) (Dom b) F) = F\n 2. bij_betw Map (hom a b) (Hom (Dom a) (Dom b))", "show \"\\<And>F. F \\<in> Hom (Dom a) (Dom b)\n                            \\<Longrightarrow> Map (MkArr (Dom a) (Dom b) F) = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>F.\n       F \\<in> Hom (Dom a) (Dom b) \\<Longrightarrow>\n       Map (MkArr (Dom a) (Dom b) F) = F", "by simp"], ["proof (state)\nthis:\n  ?F \\<in> Hom (Dom a) (Dom b) \\<Longrightarrow>\n  Map (MkArr (Dom a) (Dom b) ?F) = ?F\n\ngoal (1 subgoal):\n 1. bij_betw Map (hom a b) (Hom (Dom a) (Dom b))", "ultimately"], ["proof (chain)\npicking this:\n  Map \\<in> hom a b \\<rightarrow> Hom (Dom a) (Dom b)\n  MkArr (Dom a) (Dom b) \\<in> Hom (Dom a) (Dom b) \\<rightarrow> hom a b\n  ?f \\<in> hom a b \\<Longrightarrow> MkArr (Dom a) (Dom b) (Map ?f) = ?f\n  ?F \\<in> Hom (Dom a) (Dom b) \\<Longrightarrow>\n  Map (MkArr (Dom a) (Dom b) ?F) = ?F", "show \"bij_betw Map (hom a b) (Hom (Dom a) (Dom b))\""], ["proof (prove)\nusing this:\n  Map \\<in> hom a b \\<rightarrow> Hom (Dom a) (Dom b)\n  MkArr (Dom a) (Dom b) \\<in> Hom (Dom a) (Dom b) \\<rightarrow> hom a b\n  ?f \\<in> hom a b \\<Longrightarrow> MkArr (Dom a) (Dom b) (Map ?f) = ?f\n  ?F \\<in> Hom (Dom a) (Dom b) \\<Longrightarrow>\n  Map (MkArr (Dom a) (Dom b) ?F) = ?F\n\ngoal (1 subgoal):\n 1. bij_betw Map (hom a b) (Hom (Dom a) (Dom b))", "using bij_betwI"], ["proof (prove)\nusing this:\n  Map \\<in> hom a b \\<rightarrow> Hom (Dom a) (Dom b)\n  MkArr (Dom a) (Dom b) \\<in> Hom (Dom a) (Dom b) \\<rightarrow> hom a b\n  ?f \\<in> hom a b \\<Longrightarrow> MkArr (Dom a) (Dom b) (Map ?f) = ?f\n  ?F \\<in> Hom (Dom a) (Dom b) \\<Longrightarrow>\n  Map (MkArr (Dom a) (Dom b) ?F) = ?F\n  \\<lbrakk>?f \\<in> ?A \\<rightarrow> ?B; ?g \\<in> ?B \\<rightarrow> ?A;\n   \\<And>x. x \\<in> ?A \\<Longrightarrow> ?g (?f x) = x;\n   \\<And>y. y \\<in> ?B \\<Longrightarrow> ?f (?g y) = y\\<rbrakk>\n  \\<Longrightarrow> bij_betw ?f ?A ?B\n\ngoal (1 subgoal):\n 1. bij_betw Map (hom a b) (Hom (Dom a) (Dom b))", "by blast"], ["proof (state)\nthis:\n  bij_betw Map (hom a b) (Hom (Dom a) (Dom b))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma arr_eqI:\n    assumes \"arr t\" and \"arr t'\" and \"Dom t = Dom t'\" and \"Cod t = Cod t'\" and \"Map t = Map t'\"\n    shows \"t = t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = t'", "using assms MkArr_Map"], ["proof (prove)\nusing this:\n  arr t\n  arr t'\n  Dom t = Dom t'\n  Cod t = Cod t'\n  Map t = Map t'\n  arr ?f \\<Longrightarrow> MkArr (Dom ?f) (Cod ?f) (Map ?f) = ?f\n\ngoal (1 subgoal):\n 1. t = t'", "by metis"], ["", "end"], ["", "sublocale concrete_category \\<subseteq> category COMP"], ["proof (prove)\ngoal (1 subgoal):\n 1. category COMP", "using is_category"], ["proof (prove)\nusing this:\n  category COMP\n\ngoal (1 subgoal):\n 1. category COMP", "by auto"], ["", "end"]]}