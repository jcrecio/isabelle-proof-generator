{"file_name": "/home/qj213/afp-2021-10-22/thys/PseudoHoops/Examples.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/PseudoHoops", "problem_names": ["lemmas diff_minus = diff_conv_add_uminus", "lemma (in lgroup) less_eq_inf_2: \"(x \\<le> y) = (inf y x = x)\"", "lemma [simp]: \"sup (Rep_G a - u + Rep_G b) 0 \\<in> G\"", "lemma [simp]: \"inf (Rep_G (b::'a G) - Rep_G a + u) u \\<in> G\"", "lemma [simp]: \"inf (u - Rep_G a + Rep_G b) u \\<in> G\"", "lemma [simp]: \"(u::'a) \\<in> G\"", "lemma [simp]: \"(1::'a G) * a = a\"", "lemma [simp]: \"a * (1::'a G) = a\"", "lemma [simp]: \"a l\\<rightarrow> a = (1::'a G)\"", "lemma [simp]: \"a r\\<rightarrow> a = (1::'a G)\"", "lemma [simp]: \"a \\<in> G \\<Longrightarrow> Rep_G (Abs_G a) = a\"", "lemma inf_def_1: \"((a::'a G) l\\<rightarrow> b) * a = Abs_G (inf (Rep_G a) (Rep_G b))\"", "lemma inf_def_2: \"(a::'a G) * (a r\\<rightarrow> b) = Abs_G (inf (Rep_G a) (Rep_G b))\"", "lemma Rep_G_order: \"(a \\<le> b) = (Rep_G a \\<le> Rep_G b)\"", "lemma ded_left: \"((a::'a G) * b) l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\"", "lemma ded_right: \"((a::'a G) * b) r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\"", "lemma [simp]: \"0 \\<in> G\"", "lemma [simp]: \"0 \\<le> (a::'a G)\"", "lemma lemma_W1: \"((a::'a G) l\\<rightarrow> b) r\\<rightarrow> b = (b l\\<rightarrow> a) r\\<rightarrow> a\"", "lemma lemma_W2: \"((a::'a G) r\\<rightarrow> b) l\\<rightarrow> b = (b r\\<rightarrow> a) l\\<rightarrow> a\"", "lemma [simp]: \"A \\<in> subgroup \\<Longrightarrow> 0 \\<in> A\"", "lemma [simp]: \"A \\<in> subgroup \\<Longrightarrow> a \\<in> A \\<Longrightarrow> b \\<in> A \\<Longrightarrow> a + b \\<in> A\"", "lemma minus_subgroup: \"A \\<in> subgroup \\<Longrightarrow> -a \\<in> A \\<Longrightarrow> a \\<in> A\"", "lemma inf_lsubgroup:\n  \"A \\<in> lsubgroup \\<Longrightarrow> a \\<in> A \\<Longrightarrow> b \\<in> A \\<Longrightarrow> inf a b \\<in> A\"", "lemma sup_lsubgroup:\n  \"A \\<in> lsubgroup \\<Longrightarrow> a \\<in> A \\<Longrightarrow> b \\<in> A \\<Longrightarrow> sup a b \\<in> A\"", "lemma F_def2: \"K \\<in> normal \\<Longrightarrow> F K = {a:: 'a G . - Rep_G a + (u::'a::lgroup_with_const) \\<in> K}\"", "lemma sup_assoc_lgroup: \"a \\<squnion> b \\<squnion> c = a \\<squnion> (b \\<squnion> c)\"", "lemma normal_1: \"K \\<in> normal \\<Longrightarrow> K \\<in> convex \\<Longrightarrow> K \\<in> lsubgroup \\<Longrightarrow> x \\<in> {a} ** F K \\<Longrightarrow> x \\<in> F K ** {a}\"", "lemma normal_2: \"K \\<in> normal \\<Longrightarrow> K \\<in> convex \\<Longrightarrow> K \\<in> lsubgroup \\<Longrightarrow> x \\<in> F K ** {a} \\<Longrightarrow> x \\<in> {a} ** F K\"", "lemma \"K \\<in> normal \\<Longrightarrow> K \\<in> convex \\<Longrightarrow> K \\<in> lsubgroup \\<Longrightarrow> F K \\<in> normalfilters\"", "lemma [simp]: \"Rep_N a + Rep_N b \\<in> N\"", "lemma [simp]: \"inf (Rep_N b - Rep_N a) 0 \\<in> N\"", "lemma [simp]: \"inf (- Rep_N a + Rep_N b) 0 \\<in> N\"", "lemma [simp]: \"0 \\<in> N\"", "lemma order_Rep_N:\n  \"((a::'a N) \\<le> b) = (Rep_N a \\<le> Rep_N b)\"", "lemma order_Abs_N:\n  \"a \\<in> N \\<Longrightarrow> b \\<in> N \\<Longrightarrow> (a \\<le> b) = (Abs_N a \\<le> Abs_N b)\"", "lemma [simp]: \"(1::'a N) * a = a\"", "lemma [simp]: \"a * (1::'a N) = a\"", "lemma [simp]: \"a l\\<rightarrow> a = (1::'a N)\"", "lemma [simp]: \"a r\\<rightarrow> a = (1::'a N)\"", "lemma impl_times: \"(a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * (b::'a N)\"", "lemma impr_times: \"a * (a r\\<rightarrow> b) = (b::'a N) * (b r\\<rightarrow> a)\"", "lemma impr_impl_times: \"(a l\\<rightarrow> b) * a = (a::'a N) * (a r\\<rightarrow> b)\"", "lemma impl_ded: \"(a::'a N) * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\"", "lemma impr_ded: \"(a::'a N) * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\"", "lemma Rep_N_inf: \"Rep_N ((a::'a::lgroup N) \\<sqinter> b) = (Rep_N a) \\<sqinter> (Rep_N b)\"", "lemma sup_inf_distrib2_lgroup: \"(b \\<sqinter> c) \\<squnion> a = (b \\<squnion> a) \\<sqinter> (c \\<squnion> a)\"", "lemma inf_sup_distrib2_lgroup: \"(b \\<squnion> c) \\<sqinter> a = (b \\<sqinter> a) \\<squnion> (c \\<sqinter> a)\"", "lemma cancel_times_left: \"(a::'a N) * b = a * c \\<Longrightarrow> b = c\"", "lemma cancel_times_right: \"b * (a::'a N) = c * a \\<Longrightarrow> b = c\"", "lemma prod_1: \"((a::'a N) l\\<rightarrow> b) l\\<rightarrow> c \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c\"", "lemma prod_2: \"((a::'a N) r\\<rightarrow> b) r\\<rightarrow> c \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c\"", "lemma prod_3: \"(b::'a N) l\\<rightarrow> b * b \\<le> a \\<sqinter> (a l\\<rightarrow> b) l\\<rightarrow> b\"", "lemma prod_4: \"(b::'a N) r\\<rightarrow> b * b \\<le> a \\<sqinter> (a r\\<rightarrow> b) r\\<rightarrow> b\"", "lemma prod_5: \"(((a::'a N) l\\<rightarrow> b) l\\<rightarrow> b) * (c * a l\\<rightarrow> f * a) * (c * b l\\<rightarrow> f * b) \\<le> c l\\<rightarrow> f\"", "lemma prod_6: \"(((a::'a N) r\\<rightarrow> b) r\\<rightarrow> b) * (a * c r\\<rightarrow> a * f) * (b * c r\\<rightarrow> b * f) \\<le> c r\\<rightarrow> f\"", "lemma [simp]: \"(1, b) \\<in> OrdSum\"", "lemma [simp]: \"(a, 1) \\<in> OrdSum\"", "lemma if_unfold_left: \"((if a then b else c) = d) = ((a\\<longrightarrow> b = d) \\<and> (\\<not> a \\<longrightarrow> c = d))\"", "lemma if_unfold_right: \"(d = (if a then b else c)) = ((a \\<longrightarrow> d = b) \\<and> (\\<not> a \\<longrightarrow> d = c))\"", "lemma fst_snd_eq: \"fst a = x \\<Longrightarrow> snd a = y \\<Longrightarrow> (x, y) = a\"", "lemma OrdSum_first [simp]: \"(a, 1) \\<in> OrdSum\"", "lemma OrdSum_second [simp]: \"(1, b) \\<in> OrdSum\"", "lemma Rep_OrdSum_eq: \"Rep_OrdSum x = Rep_OrdSum y \\<Longrightarrow> x = y\"", "lemma Abs_OrdSum_eq: \"x \\<in> OrdSum \\<Longrightarrow> y \\<in> OrdSum \\<Longrightarrow> Abs_OrdSum x = Abs_OrdSum y \\<Longrightarrow> x = y\"", "lemma [simp]: \"fst (Rep_OrdSum a) \\<noteq> 1 \\<Longrightarrow> (snd (Rep_OrdSum a) \\<noteq> 1 = False)\"", "lemma fst_not_one_snd: \"fst (Rep_OrdSum a) \\<noteq> 1 \\<Longrightarrow> (snd (Rep_OrdSum a) = 1)\"", "lemma snd_not_one_fst: \"snd (Rep_OrdSum a) \\<noteq> 1 \\<Longrightarrow> (fst (Rep_OrdSum a) = 1)\"", "lemma fst_not_one_simp [simp]: \"fst (Rep_OrdSum c) \\<noteq> 1 \\<Longrightarrow> Abs_OrdSum (fst (Rep_OrdSum c), 1) = c\"", "lemma snd_not_one_simp [simp]: \"snd (Rep_OrdSum c) \\<noteq> 1 \\<Longrightarrow> Abs_OrdSum (1, snd (Rep_OrdSum c)) = c\"", "lemma  A: fixes a b::\"('a, 'b) OrdSum\" shows \"(a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\"", "lemma \"Second \\<in> normalfilters\"", "lemma inf_bool_def: \"(a :: bool) \\<sqinter> b = (a l\\<rightarrow> b) * a\"", "lemma \"\\<not> class.cancel_pseudo_hoop_algebra (*) (\\<sqinter>)  (l\\<rightarrow>) (\\<le>) (<) (1:: bool) (r\\<rightarrow>) \"", "lemma classorder: \"class.order (\\<le>) (<)\"", "lemma impl_OrdSum_first: \"Abs_OrdSum (x, 1) l\\<rightarrow> Abs_OrdSum (y, 1) = Abs_OrdSum (x l\\<rightarrow> y, 1)\"", "lemma impl_OrdSum_second: \"Abs_OrdSum (1, x) l\\<rightarrow> Abs_OrdSum (1, y) = Abs_OrdSum (1, x l\\<rightarrow> y)\"", "lemma impl_OrdSum_first_second: \"x \\<noteq> 1 \\<Longrightarrow> Abs_OrdSum (x, 1) l\\<rightarrow> Abs_OrdSum (1, y) = 1\"", "lemma Abs_OrdSum_bijective: \"x \\<in> OrdSum \\<Longrightarrow> y \\<in> OrdSum \\<Longrightarrow> (Abs_OrdSum x = Abs_OrdSum y) = (x = y)\"", "lemma \"class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>) (<) (1::'a::pseudo_hoop_algebra) (r\\<rightarrow>)\n          \\<Longrightarrow> \\<not> (class.linear_pseudo_hoop_algebra (\\<le>) (<)  (*) (\\<sqinter>) (l\\<rightarrow>) (1::'a) (r\\<rightarrow>))\n          \\<Longrightarrow> \\<not> class.basic_pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>) (<) (1::('a, bool) OrdSum) (r\\<rightarrow>)\""], "translations": [["", "lemmas diff_minus = diff_conv_add_uminus"], ["", "context lgroup\nbegin"], ["", "lemma (in lgroup) less_eq_inf_2: \"(x \\<le> y) = (inf y x = x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> y) = (y \\<sqinter> x = x)", "by (simp add: le_iff_inf inf_commute)"], ["", "end"], ["", "class lgroup_with_const = lgroup +\n  fixes u::'a\n  assumes [simp]: \"0 \\<le> u\""], ["", "definition \"G = {a::'a::lgroup_with_const. (0 \\<le> a \\<and> a \\<le> u)}\""], ["", "typedef (overloaded) 'a G = \"G::'a::lgroup_with_const set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> G", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. ?x \\<in> G", "show \"0 \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'b) \\<in> G", "by (simp add: G_def)"], ["proof (state)\nthis:\n  (0::?'b1) \\<in> G\n\ngoal:\nNo subgoals!", "qed"], ["", "instantiation \"G\" :: (lgroup_with_const) bounded_wajsberg_pseudo_hoop_algebra\nbegin"], ["", "definition\n  times_def: \"a * b \\<equiv> Abs_G (sup (Rep_G a - u + Rep_G b) 0)\""], ["", "lemma [simp]: \"sup (Rep_G a - u + Rep_G b) 0 \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a - u + Rep_G b \\<squnion> (0::'b) \\<in> G", "apply (cut_tac x = a in Rep_G)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<in> G \\<Longrightarrow>\n    Rep_G a - u + Rep_G b \\<squnion> (0::'b) \\<in> G", "apply (cut_tac x = b in Rep_G)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_G a \\<in> G; Rep_G b \\<in> G\\<rbrakk>\n    \\<Longrightarrow> Rep_G a - u + Rep_G b \\<squnion> (0::'b) \\<in> G", "apply (unfold G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_G a \\<in> {a. (0::'b) \\<le> a \\<and> a \\<le> u};\n     Rep_G b \\<in> {a. (0::'b) \\<le> a \\<and> a \\<le> u}\\<rbrakk>\n    \\<Longrightarrow> Rep_G a - u + Rep_G b \\<squnion> (0::'b)\n                      \\<in> {a. (0::'b) \\<le> a \\<and> a \\<le> u}", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> (0::'b) \\<le> Rep_G a - u + Rep_G b \\<squnion> (0::'b)\n 2. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> Rep_G a - u + Rep_G b \\<squnion> (0::'b) \\<le> u", "apply (simp_all add: diff_minus)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> Rep_G a + - u + Rep_G b \\<le> u", "apply (rule right_move_to_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> Rep_G a + - u \\<le> u + - Rep_G b", "apply (rule_tac y = 0 in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> Rep_G a + - u \\<le> (0::'b)\n 2. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> (0::'b) \\<le> u + - Rep_G b", "apply (rule right_move_to_right)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> Rep_G a \\<le> (0::'b) + - (- u)\n 2. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> (0::'b) \\<le> u + - Rep_G b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> (0::'b) \\<le> u + - Rep_G b", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> (0::'b) + - (- Rep_G b) \\<le> u", "by simp"], ["", "definition\n  impl_def: \"a l\\<rightarrow> b \\<equiv> Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u)\""], ["", "lemma [simp]: \"inf (Rep_G (b::'a G) - Rep_G a + u) u \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_G b - Rep_G a + u) \\<sqinter> u \\<in> G", "apply (cut_tac x = a in Rep_G)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<in> G \\<Longrightarrow>\n    (Rep_G b - Rep_G a + u) \\<sqinter> u \\<in> G", "apply (cut_tac x = b in Rep_G)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_G a \\<in> G; Rep_G b \\<in> G\\<rbrakk>\n    \\<Longrightarrow> (Rep_G b - Rep_G a + u) \\<sqinter> u \\<in> G", "apply (unfold G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_G a \\<in> {a. (0::'a) \\<le> a \\<and> a \\<le> u};\n     Rep_G b \\<in> {a. (0::'a) \\<le> a \\<and> a \\<le> u}\\<rbrakk>\n    \\<Longrightarrow> (Rep_G b - Rep_G a + u) \\<sqinter> u\n                      \\<in> {a. (0::'a) \\<le> a \\<and> a \\<le> u}", "apply (simp_all add: diff_minus)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> Rep_G a \\<and> Rep_G a \\<le> u;\n     (0::'a) \\<le> Rep_G b \\<and> Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> Rep_G b + - Rep_G a + u", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'a) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> Rep_G b + - Rep_G a + u", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'a) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> (0::'a) + - u \\<le> Rep_G b + - Rep_G a", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'a) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> (0::'a) + - u + - (- Rep_G a) \\<le> Rep_G b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'a) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> - u + Rep_G a \\<le> Rep_G b", "apply (rule_tac y = 0 in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(0::'a) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'a) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> - u + Rep_G a \\<le> (0::'a)\n 2. \\<lbrakk>(0::'a) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'a) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> Rep_G b", "apply (rule left_move_to_right)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(0::'a) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'a) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> Rep_G a \\<le> - (- u) + (0::'a)\n 2. \\<lbrakk>(0::'a) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'a) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> Rep_G b", "by simp_all"], ["", "definition\n  impr_def: \"a r\\<rightarrow> b \\<equiv> Abs_G (inf (u - Rep_G a + Rep_G b) u)\""], ["", "lemma [simp]: \"inf (u - Rep_G a + Rep_G b) u \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u - Rep_G a + Rep_G b) \\<sqinter> u \\<in> G", "apply (cut_tac x = a in Rep_G)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<in> G \\<Longrightarrow>\n    (u - Rep_G a + Rep_G b) \\<sqinter> u \\<in> G", "apply (cut_tac x = b in Rep_G)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_G a \\<in> G; Rep_G b \\<in> G\\<rbrakk>\n    \\<Longrightarrow> (u - Rep_G a + Rep_G b) \\<sqinter> u \\<in> G", "apply (unfold G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_G a \\<in> {a. (0::'b) \\<le> a \\<and> a \\<le> u};\n     Rep_G b \\<in> {a. (0::'b) \\<le> a \\<and> a \\<le> u}\\<rbrakk>\n    \\<Longrightarrow> (u - Rep_G a + Rep_G b) \\<sqinter> u\n                      \\<in> {a. (0::'b) \\<le> a \\<and> a \\<le> u}", "apply (simp_all add: diff_minus)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'b) \\<le> Rep_G a \\<and> Rep_G a \\<le> u;\n     (0::'b) \\<le> Rep_G b \\<and> Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> (0::'b) \\<le> u + - Rep_G a + Rep_G b", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> (0::'b) \\<le> u + - Rep_G a + Rep_G b", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> (0::'b) + - Rep_G b \\<le> u + - Rep_G a", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> (0::'b) + - Rep_G b + - (- Rep_G a) \\<le> u", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> - Rep_G b + Rep_G a \\<le> u", "apply (rule left_move_to_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> Rep_G a \\<le> - (- Rep_G b) + u", "apply (rule_tac y = u in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> Rep_G a \\<le> u\n 2. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> u \\<le> - (- Rep_G b) + u", "apply  simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> u \\<le> Rep_G b + u", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'b) \\<le> Rep_G a; Rep_G a \\<le> u; (0::'b) \\<le> Rep_G b;\n     Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> u + - u \\<le> Rep_G b", "by simp_all"], ["", "definition\n  one_def: \"1 \\<equiv> Abs_G u\""], ["", "definition\n  zero_def: \"0 \\<equiv> Abs_G 0\""], ["", "definition\n  order_def: \"((a::'a G) \\<le> b) \\<equiv> (a l\\<rightarrow> b = 1)\""], ["", "definition\n  strict_order_def: \"(a::'a G) < b \\<equiv> (a \\<le> b \\<and> \\<not> b \\<le> a)\""], ["", "definition\n  inf_def: \"(a::'a G) \\<sqinter> b = ((a l\\<rightarrow> b) * a)\""], ["", "lemma [simp]: \"(u::'a) \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> G", "by (simp add: G_def)"], ["", "lemma [simp]: \"(1::'a G) * a = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 * a = a", "apply (simp add: one_def times_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G (Rep_G (Abs_G u) - u + Rep_G a \\<squnion> (0::'a)) = a", "apply (cut_tac y = \"u::'a\" in Abs_G_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. u \\<in> G\n 2. Rep_G (Abs_G u) = u \\<Longrightarrow>\n    Abs_G (Rep_G (Abs_G u) - u + Rep_G a \\<squnion> (0::'a)) = a", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G (Abs_G u) = u \\<Longrightarrow>\n    Abs_G (Rep_G a \\<squnion> (0::'a)) = a", "apply (subgoal_tac \"sup (Rep_G a) (0::'a) = Rep_G a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Rep_G (Abs_G u) = u;\n     Rep_G a \\<squnion> (0::'a) = Rep_G a\\<rbrakk>\n    \\<Longrightarrow> Abs_G (Rep_G a \\<squnion> (0::'a)) = a\n 2. Rep_G (Abs_G u) = u \\<Longrightarrow>\n    Rep_G a \\<squnion> (0::'a) = Rep_G a", "apply (simp add: Rep_G_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G (Abs_G u) = u \\<Longrightarrow>\n    Rep_G a \\<squnion> (0::'a) = Rep_G a", "apply (cut_tac x = a in Rep_G)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_G (Abs_G u) = u; Rep_G a \\<in> G\\<rbrakk>\n    \\<Longrightarrow> Rep_G a \\<squnion> (0::'a) = Rep_G a", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Rep_G (Abs_G u) = u; Rep_G a \\<in> G\\<rbrakk>\n    \\<Longrightarrow> Rep_G a \\<squnion> (0::'a) \\<le> Rep_G a\n 2. \\<lbrakk>Rep_G (Abs_G u) = u; Rep_G a \\<in> G\\<rbrakk>\n    \\<Longrightarrow> Rep_G a \\<le> Rep_G a \\<squnion> (0::'a)", "apply (simp add: G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_G (Abs_G u) = u; Rep_G a \\<in> G\\<rbrakk>\n    \\<Longrightarrow> Rep_G a \\<le> Rep_G a \\<squnion> (0::'a)", "by simp"], ["", "lemma [simp]: \"a * (1::'a G) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * 1 = a", "apply (simp add: one_def times_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G (Rep_G a - u + Rep_G (Abs_G u) \\<squnion> (0::'a)) = a", "apply (cut_tac y = \"u::'a\" in Abs_G_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. u \\<in> G\n 2. Rep_G (Abs_G u) = u \\<Longrightarrow>\n    Abs_G (Rep_G a - u + Rep_G (Abs_G u) \\<squnion> (0::'a)) = a", "apply (simp_all add: diff_minus add.assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G (Abs_G u) = u \\<Longrightarrow>\n    Abs_G (Rep_G a \\<squnion> (0::'a)) = a", "apply (subgoal_tac \"sup (Rep_G a) (0::'a) = Rep_G a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Rep_G (Abs_G u) = u;\n     Rep_G a \\<squnion> (0::'a) = Rep_G a\\<rbrakk>\n    \\<Longrightarrow> Abs_G (Rep_G a \\<squnion> (0::'a)) = a\n 2. Rep_G (Abs_G u) = u \\<Longrightarrow>\n    Rep_G a \\<squnion> (0::'a) = Rep_G a", "apply (simp add: Rep_G_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G (Abs_G u) = u \\<Longrightarrow>\n    Rep_G a \\<squnion> (0::'a) = Rep_G a", "apply (cut_tac x = a in Rep_G)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_G (Abs_G u) = u; Rep_G a \\<in> G\\<rbrakk>\n    \\<Longrightarrow> Rep_G a \\<squnion> (0::'a) = Rep_G a", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Rep_G (Abs_G u) = u; Rep_G a \\<in> G\\<rbrakk>\n    \\<Longrightarrow> Rep_G a \\<squnion> (0::'a) \\<le> Rep_G a\n 2. \\<lbrakk>Rep_G (Abs_G u) = u; Rep_G a \\<in> G\\<rbrakk>\n    \\<Longrightarrow> Rep_G a \\<le> Rep_G a \\<squnion> (0::'a)", "by (simp_all add: G_def)"], ["", "lemma [simp]: \"a l\\<rightarrow> a = (1::'a G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a l\\<rightarrow> a = 1", "by (simp add: one_def impl_def)"], ["", "lemma [simp]: \"a r\\<rightarrow> a = (1::'a G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a r\\<rightarrow> a = 1", "by (simp add: one_def impr_def diff_minus add.assoc)"], ["", "lemma [simp]: \"a \\<in> G \\<Longrightarrow> Rep_G (Abs_G a) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> G \\<Longrightarrow> Rep_G (Abs_G a) = a", "apply (rule Abs_G_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> G \\<Longrightarrow> a \\<in> G", "by simp"], ["", "lemma inf_def_1: \"((a::'a G) l\\<rightarrow> b) * a = Abs_G (inf (Rep_G a) (Rep_G b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a l\\<rightarrow> b) * a = Abs_G (Rep_G a \\<sqinter> Rep_G b)", "apply (simp add: times_def impl_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G (Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)) =\n    Abs_G (Rep_G a \\<sqinter> Rep_G b)", "apply (subgoal_tac \"sup (inf (Rep_G b) (Rep_G a)) 0 = inf (Rep_G a) (Rep_G b)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a) =\n    Rep_G a \\<sqinter> Rep_G b \\<Longrightarrow>\n    Abs_G (Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)) =\n    Abs_G (Rep_G a \\<sqinter> Rep_G b)\n 2. Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a) =\n    Rep_G a \\<sqinter> Rep_G b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a) =\n    Rep_G a \\<sqinter> Rep_G b", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)\n    \\<le> Rep_G a \\<sqinter> Rep_G b\n 2. Rep_G a \\<sqinter> Rep_G b\n    \\<le> Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)", "apply (cut_tac x = \"a\" in Rep_G)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_G a \\<in> G \\<Longrightarrow>\n    Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)\n    \\<le> Rep_G a \\<sqinter> Rep_G b\n 2. Rep_G a \\<sqinter> Rep_G b\n    \\<le> Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)", "apply (cut_tac x = \"b\" in Rep_G)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Rep_G a \\<in> G; Rep_G b \\<in> G\\<rbrakk>\n    \\<Longrightarrow> Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)\n                      \\<le> Rep_G a \\<sqinter> Rep_G b\n 2. Rep_G a \\<sqinter> Rep_G b\n    \\<le> Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)", "apply (simp add: G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<sqinter> Rep_G b\n    \\<le> Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)", "apply (subgoal_tac \"inf (Rep_G a) (Rep_G b) = inf (Rep_G b) (Rep_G a)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_G a \\<sqinter> Rep_G b =\n    Rep_G b \\<sqinter> Rep_G a \\<Longrightarrow>\n    Rep_G a \\<sqinter> Rep_G b\n    \\<le> Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)\n 2. Rep_G a \\<sqinter> Rep_G b = Rep_G b \\<sqinter> Rep_G a", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<sqinter> Rep_G b = Rep_G b \\<sqinter> Rep_G a", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_G a \\<sqinter> Rep_G b \\<le> Rep_G b \\<sqinter> Rep_G a\n 2. Rep_G b \\<sqinter> Rep_G a \\<le> Rep_G a \\<sqinter> Rep_G b", "by simp_all"], ["", "lemma inf_def_2: \"(a::'a G) * (a r\\<rightarrow> b) = Abs_G (inf (Rep_G a) (Rep_G b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * (a r\\<rightarrow> b) = Abs_G (Rep_G a \\<sqinter> Rep_G b)", "apply (simp add: times_def impr_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G\n     ((Rep_G a - u + (u - Rep_G a + Rep_G b)) \\<sqinter> Rep_G a \\<squnion>\n      (0::'a)) =\n    Abs_G (Rep_G a \\<sqinter> Rep_G b)", "apply (simp add: diff_minus add.assoc [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G\n     ((Rep_G a + - u + u + - Rep_G a + Rep_G b) \\<sqinter>\n      Rep_G a \\<squnion>\n      (0::'a)) =\n    Abs_G (Rep_G a \\<sqinter> Rep_G b)", "apply (simp add: add.assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G (Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)) =\n    Abs_G (Rep_G a \\<sqinter> Rep_G b)", "apply (subgoal_tac \"sup (inf (Rep_G b) (Rep_G a)) 0 = inf (Rep_G a) (Rep_G b)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a) =\n    Rep_G a \\<sqinter> Rep_G b \\<Longrightarrow>\n    Abs_G (Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)) =\n    Abs_G (Rep_G a \\<sqinter> Rep_G b)\n 2. Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a) =\n    Rep_G a \\<sqinter> Rep_G b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a) =\n    Rep_G a \\<sqinter> Rep_G b", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)\n    \\<le> Rep_G a \\<sqinter> Rep_G b\n 2. Rep_G a \\<sqinter> Rep_G b\n    \\<le> Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)", "apply (cut_tac x = \"a\" in Rep_G)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_G a \\<in> G \\<Longrightarrow>\n    Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)\n    \\<le> Rep_G a \\<sqinter> Rep_G b\n 2. Rep_G a \\<sqinter> Rep_G b\n    \\<le> Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)", "apply (cut_tac x = \"b\" in Rep_G)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Rep_G a \\<in> G; Rep_G b \\<in> G\\<rbrakk>\n    \\<Longrightarrow> Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)\n                      \\<le> Rep_G a \\<sqinter> Rep_G b\n 2. Rep_G a \\<sqinter> Rep_G b\n    \\<le> Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)", "apply (simp add: G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<sqinter> Rep_G b\n    \\<le> Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)", "apply (subgoal_tac \"inf (Rep_G a) (Rep_G b) = inf (Rep_G b) (Rep_G a)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_G a \\<sqinter> Rep_G b =\n    Rep_G b \\<sqinter> Rep_G a \\<Longrightarrow>\n    Rep_G a \\<sqinter> Rep_G b\n    \\<le> Rep_G b \\<sqinter> Rep_G a \\<squnion> (0::'a)\n 2. Rep_G a \\<sqinter> Rep_G b = Rep_G b \\<sqinter> Rep_G a", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<sqinter> Rep_G b = Rep_G b \\<sqinter> Rep_G a", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_G a \\<sqinter> Rep_G b \\<le> Rep_G b \\<sqinter> Rep_G a\n 2. Rep_G b \\<sqinter> Rep_G a \\<le> Rep_G a \\<sqinter> Rep_G b", "by simp_all"], ["", "lemma Rep_G_order: \"(a \\<le> b) = (Rep_G a \\<le> Rep_G b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<le> b) = (Rep_G a \\<le> Rep_G b)", "apply (simp add: order_def impl_def one_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u) =\n    (Rep_G a \\<le> Rep_G b)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u \\<Longrightarrow>\n    Rep_G a \\<le> Rep_G b\n 2. Rep_G a \\<le> Rep_G b \\<Longrightarrow>\n    Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u", "apply (subgoal_tac \"Rep_G (Abs_G (inf (Rep_G b - Rep_G a + u) u)) = Rep_G (Abs_G u)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u;\n     Rep_G (Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u)) =\n     Rep_G (Abs_G u)\\<rbrakk>\n    \\<Longrightarrow> Rep_G a \\<le> Rep_G b\n 2. Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u \\<Longrightarrow>\n    Rep_G (Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u)) = Rep_G (Abs_G u)\n 3. Rep_G a \\<le> Rep_G b \\<Longrightarrow>\n    Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Rep_G (Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u)) =\n             Rep_G (Abs_G u);\n     True\\<rbrakk>\n    \\<Longrightarrow> Rep_G a \\<le> Rep_G b\n 2. Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u \\<Longrightarrow>\n    Rep_G (Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u)) = Rep_G (Abs_G u)\n 3. Rep_G a \\<le> Rep_G b \\<Longrightarrow>\n    Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. (Rep_G b - Rep_G a + u) \\<sqinter> u = u \\<Longrightarrow>\n    Rep_G a \\<le> Rep_G b\n 2. Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u \\<Longrightarrow>\n    Rep_G (Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u)) = Rep_G (Abs_G u)\n 3. Rep_G a \\<le> Rep_G b \\<Longrightarrow>\n    Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u", "apply (subst (asm) less_eq_inf_2 [THEN sym])"], ["proof (prove)\ngoal (3 subgoals):\n 1. u \\<le> Rep_G b - Rep_G a + u \\<Longrightarrow> Rep_G a \\<le> Rep_G b\n 2. Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u \\<Longrightarrow>\n    Rep_G (Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u)) = Rep_G (Abs_G u)\n 3. Rep_G a \\<le> Rep_G b \\<Longrightarrow>\n    Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u", "apply (simp add: diff_minus)"], ["proof (prove)\ngoal (3 subgoals):\n 1. u \\<le> Rep_G b + - Rep_G a + u \\<Longrightarrow> Rep_G a \\<le> Rep_G b\n 2. Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u \\<Longrightarrow>\n    Rep_G (Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u)) = Rep_G (Abs_G u)\n 3. Rep_G a \\<le> Rep_G b \\<Longrightarrow>\n    Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u", "apply (drule_tac a = \"u\" and b = \" Rep_G b + - Rep_G a + u\" and v = \"-u\" in add_order_preserving_right)"], ["proof (prove)\ngoal (3 subgoals):\n 1. u + - u \\<le> Rep_G b + - Rep_G a + u + - u \\<Longrightarrow>\n    Rep_G a \\<le> Rep_G b\n 2. Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u \\<Longrightarrow>\n    Rep_G (Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u)) = Rep_G (Abs_G u)\n 3. Rep_G a \\<le> Rep_G b \\<Longrightarrow>\n    Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u", "apply (simp add: add.assoc)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (0::'a) \\<le> Rep_G b + - Rep_G a \\<Longrightarrow>\n    Rep_G a \\<le> Rep_G b\n 2. Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u \\<Longrightarrow>\n    Rep_G (Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u)) = Rep_G (Abs_G u)\n 3. Rep_G a \\<le> Rep_G b \\<Longrightarrow>\n    Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u", "apply (drule_tac a = \"0\" and b = \" Rep_G b + - Rep_G a\" and v = \"Rep_G a\" in add_order_preserving_right)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (0::'a) + Rep_G a \\<le> Rep_G b + - Rep_G a + Rep_G a \\<Longrightarrow>\n    Rep_G a \\<le> Rep_G b\n 2. Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u \\<Longrightarrow>\n    Rep_G (Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u)) = Rep_G (Abs_G u)\n 3. Rep_G a \\<le> Rep_G b \\<Longrightarrow>\n    Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u", "apply (simp add: add.assoc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u \\<Longrightarrow>\n    Rep_G (Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u)) = Rep_G (Abs_G u)\n 2. Rep_G a \\<le> Rep_G b \\<Longrightarrow>\n    Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<le> Rep_G b \\<Longrightarrow>\n    Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u", "apply (subgoal_tac \"Rep_G (Abs_G (inf (Rep_G b - Rep_G a + u) u)) = Rep_G (Abs_G u)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Rep_G a \\<le> Rep_G b;\n     Rep_G (Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u)) =\n     Rep_G (Abs_G u)\\<rbrakk>\n    \\<Longrightarrow> Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u) = Abs_G u\n 2. Rep_G a \\<le> Rep_G b \\<Longrightarrow>\n    Rep_G (Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u)) = Rep_G (Abs_G u)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<le> Rep_G b \\<Longrightarrow>\n    Rep_G (Abs_G ((Rep_G b - Rep_G a + u) \\<sqinter> u)) = Rep_G (Abs_G u)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<le> Rep_G b \\<Longrightarrow>\n    (Rep_G b - Rep_G a + u) \\<sqinter> u = u", "apply (subst less_eq_inf_2 [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<le> Rep_G b \\<Longrightarrow> u \\<le> Rep_G b - Rep_G a + u", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<le> Rep_G b \\<Longrightarrow> u + - u \\<le> Rep_G b - Rep_G a", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<le> Rep_G b \\<Longrightarrow> (0::'a) \\<le> Rep_G b - Rep_G a", "apply (simp add: diff_minus)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<le> Rep_G b \\<Longrightarrow>\n    (0::'a) \\<le> Rep_G b + - Rep_G a", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<le> Rep_G b \\<Longrightarrow>\n    (0::'a) + - (- Rep_G a) \\<le> Rep_G b", "by simp"], ["", "lemma ded_left: \"((a::'a G) * b) l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c", "apply (simp add: times_def impl_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G\n     ((Rep_G c - (Rep_G a - u + Rep_G b) + u) \\<sqinter>\n      (Rep_G c + u) \\<sqinter>\n      u) =\n    Abs_G\n     ((Rep_G c - Rep_G b + u - Rep_G a + u) \\<sqinter>\n      (u - Rep_G a + u) \\<sqinter>\n      u)", "apply (simp add: diff_minus minus_add)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G\n     ((Rep_G c + (- Rep_G b + (u + - Rep_G a)) + u) \\<sqinter>\n      (Rep_G c + u) \\<sqinter>\n      u) =\n    Abs_G\n     ((Rep_G c + - Rep_G b + u + - Rep_G a + u) \\<sqinter>\n      (u + - Rep_G a + u) \\<sqinter>\n      u)", "apply (simp add: add.assoc [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G\n     ((Rep_G c + - Rep_G b + u + - Rep_G a + u) \\<sqinter>\n      (Rep_G c + u) \\<sqinter>\n      u) =\n    Abs_G\n     ((Rep_G c + - Rep_G b + u + - Rep_G a + u) \\<sqinter>\n      (u + - Rep_G a + u) \\<sqinter>\n      u)", "apply (simp add: inf_assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G\n     ((Rep_G c + - Rep_G b + u + - Rep_G a + u) \\<sqinter>\n      ((Rep_G c + u) \\<sqinter> u)) =\n    Abs_G\n     ((Rep_G c + - Rep_G b + u + - Rep_G a + u) \\<sqinter>\n      ((u + - Rep_G a + u) \\<sqinter> u))", "apply (subgoal_tac \"inf (Rep_G c + u) u = u\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_G c + u) \\<sqinter> u = u \\<Longrightarrow>\n    Abs_G\n     ((Rep_G c + - Rep_G b + u + - Rep_G a + u) \\<sqinter>\n      ((Rep_G c + u) \\<sqinter> u)) =\n    Abs_G\n     ((Rep_G c + - Rep_G b + u + - Rep_G a + u) \\<sqinter>\n      ((u + - Rep_G a + u) \\<sqinter> u))\n 2. (Rep_G c + u) \\<sqinter> u = u", "apply (subgoal_tac \"inf (u + - Rep_G a + u) u = u\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(Rep_G c + u) \\<sqinter> u = u;\n     (u + - Rep_G a + u) \\<sqinter> u = u\\<rbrakk>\n    \\<Longrightarrow> Abs_G\n                       ((Rep_G c + - Rep_G b + u + - Rep_G a + u) \\<sqinter>\n                        ((Rep_G c + u) \\<sqinter> u)) =\n                      Abs_G\n                       ((Rep_G c + - Rep_G b + u + - Rep_G a + u) \\<sqinter>\n                        ((u + - Rep_G a + u) \\<sqinter> u))\n 2. (Rep_G c + u) \\<sqinter> u = u \\<Longrightarrow>\n    (u + - Rep_G a + u) \\<sqinter> u = u\n 3. (Rep_G c + u) \\<sqinter> u = u", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_G c + u) \\<sqinter> u = u \\<Longrightarrow>\n    (u + - Rep_G a + u) \\<sqinter> u = u\n 2. (Rep_G c + u) \\<sqinter> u = u", "apply (rule antisym)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (Rep_G c + u) \\<sqinter> u = u \\<Longrightarrow>\n    (u + - Rep_G a + u) \\<sqinter> u \\<le> u\n 2. (Rep_G c + u) \\<sqinter> u = u \\<Longrightarrow>\n    u \\<le> (u + - Rep_G a + u) \\<sqinter> u\n 3. (Rep_G c + u) \\<sqinter> u = u", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_G c + u) \\<sqinter> u = u \\<Longrightarrow>\n    u \\<le> (u + - Rep_G a + u) \\<sqinter> u\n 2. (Rep_G c + u) \\<sqinter> u = u", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_G c + u) \\<sqinter> u = u \\<Longrightarrow>\n    u \\<le> u + - Rep_G a + u\n 2. (Rep_G c + u) \\<sqinter> u = u", "apply (simp add: add.assoc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_G c + u) \\<sqinter> u = u \\<Longrightarrow>\n    u \\<le> u + (- Rep_G a + u)\n 2. (Rep_G c + u) \\<sqinter> u = u", "apply (rule add_pos)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_G c + u) \\<sqinter> u = u \\<Longrightarrow>\n    (0::'a) \\<le> - Rep_G a + u\n 2. (Rep_G c + u) \\<sqinter> u = u", "apply (cut_tac x = a in Rep_G)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(Rep_G c + u) \\<sqinter> u = u; Rep_G a \\<in> G\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> - Rep_G a + u\n 2. (Rep_G c + u) \\<sqinter> u = u", "apply (simp add: G_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(Rep_G c + u) \\<sqinter> u = u;\n     (0::'a) \\<le> Rep_G a \\<and> Rep_G a \\<le> u\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> - Rep_G a + u\n 2. (Rep_G c + u) \\<sqinter> u = u", "apply (rule left_move_to_left)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(Rep_G c + u) \\<sqinter> u = u;\n     (0::'a) \\<le> Rep_G a \\<and> Rep_G a \\<le> u\\<rbrakk>\n    \\<Longrightarrow> - (- Rep_G a) + (0::'a) \\<le> u\n 2. (Rep_G c + u) \\<sqinter> u = u", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_G c + u) \\<sqinter> u = u", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_G c + u) \\<sqinter> u \\<le> u\n 2. u \\<le> (Rep_G c + u) \\<sqinter> u", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le> (Rep_G c + u) \\<sqinter> u", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le> Rep_G c + u", "apply (rule add_pos_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> Rep_G c", "apply (cut_tac x = c in Rep_G)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G c \\<in> G \\<Longrightarrow> (0::'a) \\<le> Rep_G c", "by (simp add: G_def)"], ["", "lemma ded_right: \"((a::'a G) * b) r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c", "apply (simp add: times_def impr_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G\n     ((u - (Rep_G a - u + Rep_G b) + Rep_G c) \\<sqinter>\n      (u + Rep_G c) \\<sqinter>\n      u) =\n    Abs_G\n     ((u - Rep_G b + (u - Rep_G a + Rep_G c)) \\<sqinter>\n      (u - Rep_G b + u) \\<sqinter>\n      u)", "apply (simp add: diff_minus minus_add)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G\n     ((u + (- Rep_G b + (u + - Rep_G a)) + Rep_G c) \\<sqinter>\n      (u + Rep_G c) \\<sqinter>\n      u) =\n    Abs_G\n     ((u + - Rep_G b + (u + - Rep_G a + Rep_G c)) \\<sqinter>\n      (u + - Rep_G b + u) \\<sqinter>\n      u)", "apply (simp add: add.assoc [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G\n     ((u + - Rep_G b + u + - Rep_G a + Rep_G c) \\<sqinter>\n      (u + Rep_G c) \\<sqinter>\n      u) =\n    Abs_G\n     ((u + - Rep_G b + u + - Rep_G a + Rep_G c) \\<sqinter>\n      (u + - Rep_G b + u) \\<sqinter>\n      u)", "apply (simp add: inf_assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G\n     ((u + - Rep_G b + u + - Rep_G a + Rep_G c) \\<sqinter>\n      ((u + Rep_G c) \\<sqinter> u)) =\n    Abs_G\n     ((u + - Rep_G b + u + - Rep_G a + Rep_G c) \\<sqinter>\n      ((u + - Rep_G b + u) \\<sqinter> u))", "apply (subgoal_tac \"inf (u + Rep_G c) u = u\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. (u + Rep_G c) \\<sqinter> u = u \\<Longrightarrow>\n    Abs_G\n     ((u + - Rep_G b + u + - Rep_G a + Rep_G c) \\<sqinter>\n      ((u + Rep_G c) \\<sqinter> u)) =\n    Abs_G\n     ((u + - Rep_G b + u + - Rep_G a + Rep_G c) \\<sqinter>\n      ((u + - Rep_G b + u) \\<sqinter> u))\n 2. (u + Rep_G c) \\<sqinter> u = u", "apply (subgoal_tac \"inf (u + - Rep_G b + u) u = u\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(u + Rep_G c) \\<sqinter> u = u;\n     (u + - Rep_G b + u) \\<sqinter> u = u\\<rbrakk>\n    \\<Longrightarrow> Abs_G\n                       ((u + - Rep_G b + u + - Rep_G a + Rep_G c) \\<sqinter>\n                        ((u + Rep_G c) \\<sqinter> u)) =\n                      Abs_G\n                       ((u + - Rep_G b + u + - Rep_G a + Rep_G c) \\<sqinter>\n                        ((u + - Rep_G b + u) \\<sqinter> u))\n 2. (u + Rep_G c) \\<sqinter> u = u \\<Longrightarrow>\n    (u + - Rep_G b + u) \\<sqinter> u = u\n 3. (u + Rep_G c) \\<sqinter> u = u", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (u + Rep_G c) \\<sqinter> u = u \\<Longrightarrow>\n    (u + - Rep_G b + u) \\<sqinter> u = u\n 2. (u + Rep_G c) \\<sqinter> u = u", "apply (rule antisym)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (u + Rep_G c) \\<sqinter> u = u \\<Longrightarrow>\n    (u + - Rep_G b + u) \\<sqinter> u \\<le> u\n 2. (u + Rep_G c) \\<sqinter> u = u \\<Longrightarrow>\n    u \\<le> (u + - Rep_G b + u) \\<sqinter> u\n 3. (u + Rep_G c) \\<sqinter> u = u", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (u + Rep_G c) \\<sqinter> u = u \\<Longrightarrow>\n    u \\<le> (u + - Rep_G b + u) \\<sqinter> u\n 2. (u + Rep_G c) \\<sqinter> u = u", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (u + Rep_G c) \\<sqinter> u = u \\<Longrightarrow>\n    u \\<le> u + - Rep_G b + u\n 2. (u + Rep_G c) \\<sqinter> u = u", "apply (simp add: add.assoc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (u + Rep_G c) \\<sqinter> u = u \\<Longrightarrow>\n    u \\<le> u + (- Rep_G b + u)\n 2. (u + Rep_G c) \\<sqinter> u = u", "apply (rule add_pos)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (u + Rep_G c) \\<sqinter> u = u \\<Longrightarrow>\n    (0::'a) \\<le> - Rep_G b + u\n 2. (u + Rep_G c) \\<sqinter> u = u", "apply (cut_tac x = b in Rep_G)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(u + Rep_G c) \\<sqinter> u = u; Rep_G b \\<in> G\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> - Rep_G b + u\n 2. (u + Rep_G c) \\<sqinter> u = u", "apply (simp add: G_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(u + Rep_G c) \\<sqinter> u = u;\n     (0::'a) \\<le> Rep_G b \\<and> Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> - Rep_G b + u\n 2. (u + Rep_G c) \\<sqinter> u = u", "apply (rule left_move_to_left)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(u + Rep_G c) \\<sqinter> u = u;\n     (0::'a) \\<le> Rep_G b \\<and> Rep_G b \\<le> u\\<rbrakk>\n    \\<Longrightarrow> - (- Rep_G b) + (0::'a) \\<le> u\n 2. (u + Rep_G c) \\<sqinter> u = u", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (u + Rep_G c) \\<sqinter> u = u", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (u + Rep_G c) \\<sqinter> u \\<le> u\n 2. u \\<le> (u + Rep_G c) \\<sqinter> u", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le> (u + Rep_G c) \\<sqinter> u", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le> u + Rep_G c", "apply (rule add_pos)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> Rep_G c", "apply (cut_tac x = c in Rep_G)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G c \\<in> G \\<Longrightarrow> (0::'a) \\<le> Rep_G c", "by (simp add: G_def)"], ["", "lemma [simp]: \"0 \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'b) \\<in> G", "by (simp add: G_def)"], ["", "lemma [simp]: \"0 \\<le> (a::'a G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> a", "apply (simp add: order_def impl_def zero_def one_def diff_minus)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G ((Rep_G a + u) \\<sqinter> u) = Abs_G u", "apply (subgoal_tac \"inf (Rep_G a + u) u = u\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_G a + u) \\<sqinter> u = u \\<Longrightarrow>\n    Abs_G ((Rep_G a + u) \\<sqinter> u) = Abs_G u\n 2. (Rep_G a + u) \\<sqinter> u = u", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_G a + u) \\<sqinter> u = u", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_G a + u) \\<sqinter> u \\<le> u\n 2. u \\<le> (Rep_G a + u) \\<sqinter> u", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le> (Rep_G a + u) \\<sqinter> u", "apply (cut_tac x = a in Rep_G)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<in> G \\<Longrightarrow> u \\<le> (Rep_G a + u) \\<sqinter> u", "apply (unfold G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<in> {a. (0::'a) \\<le> a \\<and> a \\<le> u} \\<Longrightarrow>\n    u \\<le> (Rep_G a + u) \\<sqinter> u", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> Rep_G a \\<and> Rep_G a \\<le> u \\<Longrightarrow>\n    u \\<le> Rep_G a + u", "apply (rule add_pos_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> Rep_G a \\<and> Rep_G a \\<le> u \\<Longrightarrow>\n    (0::'a) \\<le> Rep_G a", "by simp"], ["", "lemma lemma_W1: \"((a::'a G) l\\<rightarrow> b) r\\<rightarrow> b = (b l\\<rightarrow> a) r\\<rightarrow> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a l\\<rightarrow> b) r\\<rightarrow> b =\n    (b l\\<rightarrow> a) r\\<rightarrow> a", "apply (simp add: impl_def impr_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G\n     ((u - (Rep_G b - Rep_G a + u) + Rep_G b \\<squnion> Rep_G b) \\<sqinter>\n      u) =\n    Abs_G\n     ((u - (Rep_G a - Rep_G b + u) + Rep_G a \\<squnion> Rep_G a) \\<sqinter>\n      u)", "apply (simp add: diff_minus minus_add)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G\n     ((Rep_G a + - Rep_G b + Rep_G b \\<squnion> Rep_G b) \\<sqinter> u) =\n    Abs_G ((Rep_G b + - Rep_G a + Rep_G a \\<squnion> Rep_G a) \\<sqinter> u)", "apply (simp add: add.assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G ((Rep_G a \\<squnion> Rep_G b) \\<sqinter> u) =\n    Abs_G ((Rep_G b \\<squnion> Rep_G a) \\<sqinter> u)", "apply (subgoal_tac \"Rep_G a \\<squnion> Rep_G b = Rep_G b \\<squnion> Rep_G a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_G a \\<squnion> Rep_G b =\n    Rep_G b \\<squnion> Rep_G a \\<Longrightarrow>\n    Abs_G ((Rep_G a \\<squnion> Rep_G b) \\<sqinter> u) =\n    Abs_G ((Rep_G b \\<squnion> Rep_G a) \\<sqinter> u)\n 2. Rep_G a \\<squnion> Rep_G b = Rep_G b \\<squnion> Rep_G a", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<squnion> Rep_G b = Rep_G b \\<squnion> Rep_G a", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_G a \\<squnion> Rep_G b \\<le> Rep_G b \\<squnion> Rep_G a\n 2. Rep_G b \\<squnion> Rep_G a \\<le> Rep_G a \\<squnion> Rep_G b", "by simp_all"], ["", "(*by (simp add: sup_commute)*)"], ["", "lemma lemma_W2: \"((a::'a G) r\\<rightarrow> b) l\\<rightarrow> b = (b r\\<rightarrow> a) l\\<rightarrow> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a r\\<rightarrow> b) l\\<rightarrow> b =\n    (b r\\<rightarrow> a) l\\<rightarrow> a", "apply (simp add: impl_def impr_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G\n     ((Rep_G b - (u - Rep_G a + Rep_G b) + u \\<squnion> Rep_G b) \\<sqinter>\n      u) =\n    Abs_G\n     ((Rep_G a - (u - Rep_G b + Rep_G a) + u \\<squnion> Rep_G a) \\<sqinter>\n      u)", "apply (simp add: diff_minus minus_add)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G ((Rep_G a + - u + u \\<squnion> Rep_G b) \\<sqinter> u) =\n    Abs_G ((Rep_G b + - u + u \\<squnion> Rep_G a) \\<sqinter> u)", "apply (simp add: add.assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_G ((Rep_G a \\<squnion> Rep_G b) \\<sqinter> u) =\n    Abs_G ((Rep_G b \\<squnion> Rep_G a) \\<sqinter> u)", "apply (subgoal_tac \"Rep_G a \\<squnion> Rep_G b = Rep_G b \\<squnion> Rep_G a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_G a \\<squnion> Rep_G b =\n    Rep_G b \\<squnion> Rep_G a \\<Longrightarrow>\n    Abs_G ((Rep_G a \\<squnion> Rep_G b) \\<sqinter> u) =\n    Abs_G ((Rep_G b \\<squnion> Rep_G a) \\<sqinter> u)\n 2. Rep_G a \\<squnion> Rep_G b = Rep_G b \\<squnion> Rep_G a", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_G a \\<squnion> Rep_G b = Rep_G b \\<squnion> Rep_G a", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_G a \\<squnion> Rep_G b \\<le> Rep_G b \\<squnion> Rep_G a\n 2. Rep_G b \\<squnion> Rep_G a \\<le> Rep_G a \\<squnion> Rep_G b", "by simp_all"], ["", "(*by (simp add: sup_commute)*)"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a G, bounded_wajsberg_pseudo_hoop_algebra_class)", "proof"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. 1 * a = a\n 4. \\<And>a. a * 1 = a\n 5. \\<And>a. a l\\<rightarrow> a = 1\n 6. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 7. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 8. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 9. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 10. \\<And>a. a r\\<rightarrow> a = 1\nA total of 16 subgoals...", "fix a"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. 1 * a = a\n 4. \\<And>a. a * 1 = a\n 5. \\<And>a. a l\\<rightarrow> a = 1\n 6. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 7. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 8. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 9. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 10. \\<And>a. a r\\<rightarrow> a = 1\nA total of 16 subgoals...", "show \"(1::'a G) * a = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 * a = a", "by simp"], ["proof (state)\nthis:\n  1 * a = a\n\ngoal (15 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. a * 1 = a\n 4. \\<And>a. a l\\<rightarrow> a = 1\n 5. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 6. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 7. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 8. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 9. \\<And>a. a r\\<rightarrow> a = 1\n 10. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\nA total of 15 subgoals...", "fix a"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. a * 1 = a\n 4. \\<And>a. a l\\<rightarrow> a = 1\n 5. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 6. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 7. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 8. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 9. \\<And>a. a r\\<rightarrow> a = 1\n 10. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\nA total of 15 subgoals...", "show \"a * (1::'a G) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * 1 = a", "by simp"], ["proof (state)\nthis:\n  a * 1 = a\n\ngoal (14 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. a l\\<rightarrow> a = 1\n 4. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 5. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 6. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 7. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 8. \\<And>a. a r\\<rightarrow> a = 1\n 9. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 10. \\<And>a b c.\n        a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\nA total of 14 subgoals...", "fix a"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. a l\\<rightarrow> a = 1\n 4. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 5. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 6. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 7. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 8. \\<And>a. a r\\<rightarrow> a = 1\n 9. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 10. \\<And>a b c.\n        a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\nA total of 14 subgoals...", "show \"a l\\<rightarrow> a = (1::'a G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a l\\<rightarrow> a = 1", "by simp"], ["proof (state)\nthis:\n  a l\\<rightarrow> a = 1\n\ngoal (13 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 4. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 6. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 7. \\<And>a. a r\\<rightarrow> a = 1\n 8. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 9. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 10. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\nA total of 13 subgoals...", "fix a"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 4. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 6. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 7. \\<And>a. a r\\<rightarrow> a = 1\n 8. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 9. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 10. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\nA total of 13 subgoals...", "show \"a r\\<rightarrow> a = (1::'a G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a r\\<rightarrow> a = 1", "by simp"], ["proof (state)\nthis:\n  a r\\<rightarrow> a = 1\n\ngoal (12 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 4. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 6. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 7. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 8. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 9. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\n 10. \\<And>a b.\n        (a l\\<rightarrow> b) r\\<rightarrow> b =\n        (b l\\<rightarrow> a) r\\<rightarrow> a\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 4. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 6. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 7. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 8. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 9. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\n 10. \\<And>a b.\n        (a l\\<rightarrow> b) r\\<rightarrow> b =\n        (b l\\<rightarrow> a) r\\<rightarrow> a\nA total of 12 subgoals...", "fix a b"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 4. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 6. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 7. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 8. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 9. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\n 10. \\<And>a b.\n        (a l\\<rightarrow> b) r\\<rightarrow> b =\n        (b l\\<rightarrow> a) r\\<rightarrow> a\nA total of 12 subgoals...", "have a: \"((a::'a G) l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b", "by (simp add: inf_def_1 inf_commute)"], ["proof (state)\nthis:\n  (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n\ngoal (12 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 4. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 6. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 7. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 8. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 9. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\n 10. \\<And>a b.\n        (a l\\<rightarrow> b) r\\<rightarrow> b =\n        (b l\\<rightarrow> a) r\\<rightarrow> a\nA total of 12 subgoals...", "show \"((a::'a G) l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b", "by (rule a)"], ["proof (state)\nthis:\n  (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n\ngoal (11 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 7. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 8. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\n 9. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 10. \\<And>a b.\n        (a r\\<rightarrow> b) l\\<rightarrow> b =\n        (b r\\<rightarrow> a) l\\<rightarrow> a\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 7. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 8. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\n 9. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 10. \\<And>a b.\n        (a r\\<rightarrow> b) l\\<rightarrow> b =\n        (b r\\<rightarrow> a) l\\<rightarrow> a\nA total of 11 subgoals...", "fix a b"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 7. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 8. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\n 9. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 10. \\<And>a b.\n        (a r\\<rightarrow> b) l\\<rightarrow> b =\n        (b r\\<rightarrow> a) l\\<rightarrow> a\nA total of 11 subgoals...", "have a: \"a * ((a::'a G) r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)", "by (simp add: inf_def_2 inf_commute)"], ["proof (state)\nthis:\n  a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n\ngoal (11 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 7. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 8. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\n 9. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 10. \\<And>a b.\n        (a r\\<rightarrow> b) l\\<rightarrow> b =\n        (b r\\<rightarrow> a) l\\<rightarrow> a\nA total of 11 subgoals...", "show \"a * ((a::'a G) r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)", "by (rule a)"], ["proof (state)\nthis:\n  a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n\ngoal (10 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 7. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\n 8. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 9. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a\n 10. \\<And>a. 0 \\<le> a", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 7. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\n 8. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 9. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a\n 10. \\<And>a. 0 \\<le> a", "fix a b"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 7. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\n 8. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 9. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a\n 10. \\<And>a. 0 \\<le> a", "have \"!!a b . ((a::'a G) l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "by (simp add: inf_def_2 inf_def_1)"], ["proof (state)\nthis:\n  (?a l\\<rightarrow> ?b) * ?a = ?a * (?a r\\<rightarrow> ?b)\n\ngoal (10 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 7. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\n 8. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 9. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a\n 10. \\<And>a. 0 \\<le> a", "from this"], ["proof (chain)\npicking this:\n  (?a l\\<rightarrow> ?b) * ?a = ?a * (?a r\\<rightarrow> ?b)", "show \"((a::'a G) l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\""], ["proof (prove)\nusing this:\n  (?a l\\<rightarrow> ?b) * ?a = ?a * (?a r\\<rightarrow> ?b)\n\ngoal (1 subgoal):\n 1. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "by simp"], ["proof (state)\nthis:\n  (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\n\ngoal (9 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 7. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 8. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a\n 9. \\<And>a. 0 \\<le> a", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 7. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 8. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a\n 9. \\<And>a. 0 \\<le> a", "fix a b c"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 7. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 8. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a\n 9. \\<And>a. 0 \\<le> a", "show \"(a::'a G) * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c", "by (rule ded_left)"], ["proof (state)\nthis:\n  a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n\ngoal (8 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 5. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 6. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 7. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a\n 8. \\<And>a. 0 \\<le> a", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 5. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 6. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 7. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a\n 8. \\<And>a. 0 \\<le> a", "fix a b c"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 5. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 6. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 7. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a\n 8. \\<And>a. 0 \\<le> a", "show \"(a::'a G) * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c", "by (rule ded_right)"], ["proof (state)\nthis:\n  a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n\ngoal (7 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 5. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 6. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a\n 7. \\<And>a. 0 \\<le> a", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 5. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 6. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a\n 7. \\<And>a. 0 \\<le> a", "fix a::\"'a G\""], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 5. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 6. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a\n 7. \\<And>a. 0 \\<le> a", "have \"0 \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> a", "by simp"], ["proof (state)\nthis:\n  0 \\<le> a\n\ngoal (7 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 5. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 6. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a\n 7. \\<And>a. 0 \\<le> a", "from this"], ["proof (chain)\npicking this:\n  0 \\<le> a", "show \"0 \\<le> a\""], ["proof (prove)\nusing this:\n  0 \\<le> a\n\ngoal (1 subgoal):\n 1. 0 \\<le> a", "by simp"], ["proof (state)\nthis:\n  0 \\<le> a\n\ngoal (6 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 5. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 6. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 5. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 6. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a", "fix a b::\"'a G\""], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 5. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 6. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a", "show \"(a \\<le> b) = (a l\\<rightarrow> b = 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<le> b) = (a l\\<rightarrow> b = 1)", "by (simp add: order_def)"], ["proof (state)\nthis:\n  (a \\<le> b) = (a l\\<rightarrow> b = 1)\n\ngoal (5 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 4. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 5. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 4. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 5. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a", "fix a b::\"'a G\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 4. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 5. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a", "show \"(a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)", "by (simp add: strict_order_def)"], ["proof (state)\nthis:\n  (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n\ngoal (4 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 3. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 4. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 3. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 4. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a", "fix a b::\"'a G\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 3. \\<And>a b.\n       (a l\\<rightarrow> b) r\\<rightarrow> b =\n       (b l\\<rightarrow> a) r\\<rightarrow> a\n 4. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a", "show \"(a l\\<rightarrow> b) r\\<rightarrow> b = (b l\\<rightarrow> a) r\\<rightarrow> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a l\\<rightarrow> b) r\\<rightarrow> b =\n    (b l\\<rightarrow> a) r\\<rightarrow> a", "by (rule lemma_W1)"], ["proof (state)\nthis:\n  (a l\\<rightarrow> b) r\\<rightarrow> b =\n  (b l\\<rightarrow> a) r\\<rightarrow> a\n\ngoal (3 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 3. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 3. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a", "fix a b::\"'a G\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 3. \\<And>a b.\n       (a r\\<rightarrow> b) l\\<rightarrow> b =\n       (b r\\<rightarrow> a) l\\<rightarrow> a", "show \"(a r\\<rightarrow> b) l\\<rightarrow> b = (b r\\<rightarrow> a) l\\<rightarrow> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a r\\<rightarrow> b) l\\<rightarrow> b =\n    (b r\\<rightarrow> a) l\\<rightarrow> a", "by (rule lemma_W2)"], ["proof (state)\nthis:\n  (a r\\<rightarrow> b) l\\<rightarrow> b =\n  (b r\\<rightarrow> a) l\\<rightarrow> a\n\ngoal (2 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "fix a b::\"'a G\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "show \"a \\<sqinter> b = (a l\\<rightarrow> b) * a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sqinter> b = (a l\\<rightarrow> b) * a", "by (rule inf_def)"], ["proof (state)\nthis:\n  a \\<sqinter> b = (a l\\<rightarrow> b) * a\n\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "fix a b::\"'a G\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "show \"a \\<sqinter> b = a * (a r\\<rightarrow> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "by (simp add: inf_def inf_def_2 inf_def_1)"], ["proof (state)\nthis:\n  a \\<sqinter> b = a * (a r\\<rightarrow> b)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context order\nbegin"], ["", "definition\n  closed_interval::\"'a\\<Rightarrow>'a\\<Rightarrow>'a set\" (\"|[ _ , _ ]|\" [0, 0] 900) where\n  \"closed_interval a b = {c . a \\<le> c \\<and> c \\<le> b}\""], ["", "definition\n  \"convex = {A . \\<forall> a b . a \\<in> A \\<and> b \\<in> A \\<longrightarrow> |[a, b]| \\<subseteq> A}\""], ["", "end"], ["", "context group_add\nbegin"], ["", "definition\n  \"subgroup = {A . 0 \\<in> A \\<and> (\\<forall> a b . a \\<in> A \\<and> b \\<in> A \\<longrightarrow> a + b \\<in> A \\<and> -a \\<in> A)}\""], ["", "lemma [simp]: \"A \\<in> subgroup \\<Longrightarrow> 0 \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> subgroup \\<Longrightarrow> (0::'a) \\<in> A", "by (simp add: subgroup_def)"], ["", "lemma [simp]: \"A \\<in> subgroup \\<Longrightarrow> a \\<in> A \\<Longrightarrow> b \\<in> A \\<Longrightarrow> a + b \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> subgroup; a \\<in> A; b \\<in> A\\<rbrakk>\n    \\<Longrightarrow> a + b \\<in> A", "apply (subst (asm) subgroup_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> {A. (0::'a) \\<in> A \\<and>\n                         (\\<forall>a b.\n                             a \\<in> A \\<and> b \\<in> A \\<longrightarrow>\n                             a + b \\<in> A \\<and> - a \\<in> A)};\n     a \\<in> A; b \\<in> A\\<rbrakk>\n    \\<Longrightarrow> a + b \\<in> A", "by simp"], ["", "lemma minus_subgroup: \"A \\<in> subgroup \\<Longrightarrow> -a \\<in> A \\<Longrightarrow> a \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> subgroup; - a \\<in> A\\<rbrakk>\n    \\<Longrightarrow> a \\<in> A", "apply (subst (asm) subgroup_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> {A. (0::'a) \\<in> A \\<and>\n                         (\\<forall>a b.\n                             a \\<in> A \\<and> b \\<in> A \\<longrightarrow>\n                             a + b \\<in> A \\<and> - a \\<in> A)};\n     - a \\<in> A\\<rbrakk>\n    \\<Longrightarrow> a \\<in> A", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>- a \\<in> A; (0::'a) \\<in> A;\n     \\<forall>a b.\n        a \\<in> A \\<and> b \\<in> A \\<longrightarrow>\n        a + b \\<in> A \\<and> - a \\<in> A\\<rbrakk>\n    \\<Longrightarrow> a \\<in> A", "apply (drule_tac x=\"-a\" in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>- a \\<in> A; (0::'a) \\<in> A;\n     \\<forall>b.\n        - a \\<in> A \\<and> b \\<in> A \\<longrightarrow>\n        - a + b \\<in> A \\<and> - (- a) \\<in> A\\<rbrakk>\n    \\<Longrightarrow> a \\<in> A", "by simp"], ["", "definition\n  add_set:: \"'a set \\<Rightarrow> 'a set \\<Rightarrow> 'a set\" (infixl \"+++\" 70) where\n  \"add_set A B = {c . \\<exists> a \\<in> A .\\<exists> b \\<in> B . c = a + b}\""], ["", "definition\n  \"normal = {A . (\\<forall> a . A +++ {a} = {a} +++ A)}\""], ["", "end"], ["", "context lgroup\nbegin"], ["", "definition\n  \"lsubgroup = {A . A \\<in> subgroup \\<and> (\\<forall> a b . a \\<in> A \\<and> b \\<in> A \\<longrightarrow> inf a b \\<in> A \\<and> sup a b \\<in> A)}\""], ["", "lemma inf_lsubgroup:\n  \"A \\<in> lsubgroup \\<Longrightarrow> a \\<in> A \\<Longrightarrow> b \\<in> A \\<Longrightarrow> inf a b \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> lsubgroup; a \\<in> A; b \\<in> A\\<rbrakk>\n    \\<Longrightarrow> a \\<sqinter> b \\<in> A", "by (simp add: lsubgroup_def)"], ["", "lemma sup_lsubgroup:\n  \"A \\<in> lsubgroup \\<Longrightarrow> a \\<in> A \\<Longrightarrow> b \\<in> A \\<Longrightarrow> sup a b \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> lsubgroup; a \\<in> A; b \\<in> A\\<rbrakk>\n    \\<Longrightarrow> a \\<squnion> b \\<in> A", "by (simp add: lsubgroup_def)"], ["", "end"], ["", "definition\n  \"F K = {a:: 'a G . (u::'a::lgroup_with_const) - Rep_G a \\<in> K}\""], ["", "lemma F_def2: \"K \\<in> normal \\<Longrightarrow> F K = {a:: 'a G . - Rep_G a + (u::'a::lgroup_with_const) \\<in> K}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K \\<in> normal \\<Longrightarrow> F K = {a. - Rep_G a + u \\<in> K}", "apply (simp add: normal_def F_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a. K +++ {a} = {a} +++ K \\<Longrightarrow>\n    {a. u - Rep_G a \\<in> K} = {a. - Rep_G a + u \\<in> K}", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> - Rep_G x + u \\<in> K\n 2. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        - Rep_G x + u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply (drule_tac x = \"Rep_G x\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> - Rep_G x + u \\<in> K\n 2. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        - Rep_G x + u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply (subgoal_tac \"u \\<in> K +++ {Rep_G x}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K; K +++ {Rep_G x} = {Rep_G x} +++ K;\n        u \\<in> K +++ {Rep_G x}\\<rbrakk>\n       \\<Longrightarrow> - Rep_G x + u \\<in> K\n 2. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}\n 3. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        - Rep_G x + u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K; K +++ {Rep_G x} = {Rep_G x} +++ K;\n        u \\<in> {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> - Rep_G x + u \\<in> K\n 2. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}\n 3. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        - Rep_G x + u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K +++ {Rep_G x} = {Rep_G x} +++ K; u \\<in> {Rep_G x} +++ K;\n        True\\<rbrakk>\n       \\<Longrightarrow> - Rep_G x + u \\<in> K\n 2. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}\n 3. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        - Rep_G x + u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>u \\<in> {Rep_G x} +++ K; True; True\\<rbrakk>\n       \\<Longrightarrow> - Rep_G x + u \\<in> K\n 2. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}\n 3. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        - Rep_G x + u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply (simp add: add_set_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<exists>b\\<in>K. u = Rep_G x + b \\<Longrightarrow>\n       - Rep_G x + u \\<in> K\n 2. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}\n 3. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        - Rep_G x + u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>b \\<in> K; u = Rep_G x + b\\<rbrakk>\n       \\<Longrightarrow> - Rep_G x + u \\<in> K\n 2. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}\n 3. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        - Rep_G x + u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply (subgoal_tac \"- Rep_G x + u = - Rep_G x + Rep_G x + b\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>b \\<in> K; u = Rep_G x + b;\n        - Rep_G x + u = - Rep_G x + Rep_G x + b\\<rbrakk>\n       \\<Longrightarrow> - Rep_G x + u \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>b \\<in> K; u = Rep_G x + b\\<rbrakk>\n       \\<Longrightarrow> - Rep_G x + u = - Rep_G x + Rep_G x + b\n 3. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}\n 4. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        - Rep_G x + u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>b \\<in> K; u = Rep_G x + b\\<rbrakk>\n       \\<Longrightarrow> - Rep_G x + u = - Rep_G x + Rep_G x + b\n 2. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}\n 3. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        - Rep_G x + u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply (subst add.assoc)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>b \\<in> K; u = Rep_G x + b\\<rbrakk>\n       \\<Longrightarrow> - Rep_G x + u = - Rep_G x + (Rep_G x + b)\n 2. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}\n 3. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        - Rep_G x + u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}\n 2. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        - Rep_G x + u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply (subst add_set_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> {c. \\<exists>a\\<in>K.\n  \\<exists>b\\<in>{Rep_G x}. c = a + b}\n 2. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        - Rep_G x + u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>K. u = a + Rep_G x\n 2. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        - Rep_G x + u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply (rule_tac x = \"u - Rep_G x\" in bexI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u = u - Rep_G x + Rep_G x\n 2. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K\n 3. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        - Rep_G x + u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply (simp add: diff_minus add.assoc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>u - Rep_G x \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K\n 2. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        - Rep_G x + u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K;\n        - Rep_G x + u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply (drule_tac x = \"Rep_G x\" in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K", "apply (subgoal_tac \"u \\<in> K +++ {Rep_G x}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K; K +++ {Rep_G x} = {Rep_G x} +++ K;\n        u \\<in> K +++ {Rep_G x}\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K\n 2. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K +++ {Rep_G x} = {Rep_G x} +++ K; u \\<in> K +++ {Rep_G x};\n        True\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K\n 2. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>u \\<in> K +++ {Rep_G x}; True; True\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K\n 2. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}", "apply (simp add: add_set_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<exists>a\\<in>K. u = a + Rep_G x \\<Longrightarrow>\n       u - Rep_G x \\<in> K\n 2. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>a \\<in> K; u = a + Rep_G x\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K\n 2. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}", "apply (subgoal_tac \"u - Rep_G x = a +  (Rep_G x -  Rep_G x)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>a \\<in> K; u = a + Rep_G x;\n        u - Rep_G x = a + (Rep_G x - Rep_G x)\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x \\<in> K\n 2. \\<And>x a.\n       \\<lbrakk>a \\<in> K; u = a + Rep_G x\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x = a + (Rep_G x - Rep_G x)\n 3. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>a \\<in> K; u = a + Rep_G x\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G x = a + (Rep_G x - Rep_G x)\n 2. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}", "apply (subst diff_minus)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>a \\<in> K; u = a + Rep_G x\\<rbrakk>\n       \\<Longrightarrow> u + - Rep_G x = a + (Rep_G x - Rep_G x)\n 2. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}", "apply (subst diff_minus)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>a \\<in> K; u = a + Rep_G x\\<rbrakk>\n       \\<Longrightarrow> u + - Rep_G x = a + (Rep_G x + - Rep_G x)\n 2. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}", "apply (subst add.assoc [THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>a \\<in> K; u = a + Rep_G x\\<rbrakk>\n       \\<Longrightarrow> u + - Rep_G x = a + Rep_G x + - Rep_G x\n 2. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> K +++ {Rep_G x}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> {Rep_G x} +++ K", "apply (subst add_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u \\<in> {c. \\<exists>a\\<in>{Rep_G x}.\n  \\<exists>b\\<in>K. c = a + b}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b\\<in>K. u = Rep_G x + b", "apply (rule_tac x = \"- Rep_G x + u\" in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> u = Rep_G x + (- Rep_G x + u)\n 2. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> - Rep_G x + u \\<in> K", "apply (simp add: add.assoc [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>- Rep_G x + u \\<in> K;\n        K +++ {Rep_G x} = {Rep_G x} +++ K\\<rbrakk>\n       \\<Longrightarrow> - Rep_G x + u \\<in> K", "by simp"], ["", "context lgroup begin"], ["", "lemma sup_assoc_lgroup: \"a \\<squnion> b \\<squnion> c = a \\<squnion> (b \\<squnion> c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<squnion> b \\<squnion> c = a \\<squnion> (b \\<squnion> c)", "by (rule sup_assoc)"], ["", "end"], ["", "lemma normal_1: \"K \\<in> normal \\<Longrightarrow> K \\<in> convex \\<Longrightarrow> K \\<in> lsubgroup \\<Longrightarrow> x \\<in> {a} ** F K \\<Longrightarrow> x \\<in> F K ** {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n     x \\<in> {a} ** F K\\<rbrakk>\n    \\<Longrightarrow> x \\<in> F K ** {a}", "apply (subst (asm) times_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n     x \\<in> {aa.\n              \\<exists>x\\<in>{a}. \\<exists>y\\<in>F K. aa = x * y}\\<rbrakk>\n    \\<Longrightarrow> x \\<in> F K ** {a}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n     \\<exists>y\\<in>F K. x = a * y\\<rbrakk>\n    \\<Longrightarrow> x \\<in> F K ** {a}", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        y \\<in> F K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> a * y \\<in> F K ** {a}", "apply (subst (asm) F_def2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>x = a * y; K \\<in> normal; K \\<in> convex;\n        K \\<in> lsubgroup\\<rbrakk>\n       \\<Longrightarrow> K \\<in> normal\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        y \\<in> {a. - Rep_G a + u \\<in> K}; x = a * y\\<rbrakk>\n       \\<Longrightarrow> a * y \\<in> F K ** {a}", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> a * y \\<in> F K ** {a}", "apply (subgoal_tac \"-u + Rep_G y \\<in> K\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> a * y \\<in> F K ** {a}\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (subgoal_tac \"Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\\<rbrakk>\n       \\<Longrightarrow> a * y \\<in> F K ** {a}\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (subst (asm) add_set_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y\n        \\<in> {c. \\<exists>aa\\<in>K.\n                     \\<exists>b\\<in>{Rep_G a}. c = aa + b}\\<rbrakk>\n       \\<Longrightarrow> a * y \\<in> F K ** {a}\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        \\<exists>aa\\<in>K. Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> a * y \\<in> F K ** {a}\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> a * y \\<in> F K ** {a}\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>F K. a * y = x * a\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (rule_tac x = \"Abs_G (inf (sup (aa + u) 0) u)\" in bexI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> a * y =\n                         Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u) *\n                         a\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (subgoal_tac \"aa =  Rep_G a - u + Rep_G y - Rep_G a\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a;\n        aa = Rep_G a - u + Rep_G y - Rep_G a\\<rbrakk>\n       \\<Longrightarrow> a * y =\n                         Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u) *\n                         a\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (subgoal_tac \"inf (sup (aa + u) (0::'a)) u \\<in> G\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a;\n        aa = Rep_G a - u + Rep_G y - Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\\<rbrakk>\n       \\<Longrightarrow> a * y =\n                         Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u) *\n                         a\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a;\n        aa = Rep_G a - u + Rep_G y - Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply safe"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y = Rep_G a - u + Rep_G y - Rep_G a + Rep_G a;\n        (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion> (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> a * y =\n                         Abs_G\n                          ((Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                            (0::'a)) \\<sqinter>\n                           u) *\n                         a\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion> (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> a * y =\n                         Abs_G\n                          ((Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                            (0::'a)) \\<sqinter>\n                           u) *\n                         a\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (simp add: times_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a - u + Rep_G y \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K; Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion> (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Abs_G (Rep_G a - u + Rep_G y \\<squnion> (0::'a)) =\n                         Abs_G\n                          ((Rep_G a - u + Rep_G y \\<squnion>\n                            (- u + Rep_G a)) \\<sqinter>\n                           Rep_G a \\<squnion>\n                           (0::'a))\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (subgoal_tac \"(sup (Rep_G a - u + Rep_G y) 0) = (sup (inf (sup (Rep_G a - u + Rep_G y - Rep_G a + u - u + Rep_G a) (- u + Rep_G a)) (Rep_G a)) 0)\")"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a - u + Rep_G y \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K; Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion> (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        Rep_G a - u + Rep_G y \\<squnion> (0::'a) =\n        (Rep_G a - u + Rep_G y - Rep_G a + u - u + Rep_G a \\<squnion>\n         (- u + Rep_G a)) \\<sqinter>\n        Rep_G a \\<squnion>\n        (0::'a)\\<rbrakk>\n       \\<Longrightarrow> Abs_G (Rep_G a - u + Rep_G y \\<squnion> (0::'a)) =\n                         Abs_G\n                          ((Rep_G a - u + Rep_G y \\<squnion>\n                            (- u + Rep_G a)) \\<sqinter>\n                           Rep_G a \\<squnion>\n                           (0::'a))\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a - u + Rep_G y \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K; Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion> (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<squnion> (0::'a) =\n                         (Rep_G a - u + Rep_G y - Rep_G a + u - u +\n                          Rep_G a \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a \\<squnion>\n                         (0::'a)\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a - u + Rep_G y \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K; Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion> (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<squnion> (0::'a) =\n                         (Rep_G a - u + Rep_G y - Rep_G a + u - u +\n                          Rep_G a \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a \\<squnion>\n                         (0::'a)\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (simp add: diff_minus add.assoc)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a) =\n                         (Rep_G a + (- u + Rep_G y) \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a \\<squnion>\n                         (0::'a)\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (subgoal_tac \"inf (sup (Rep_G a + (- u + Rep_G y)) (- u + Rep_G a)) (Rep_G a) = (sup (Rep_G a + (- u + Rep_G y)) (- u + Rep_G a))\")"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a) =\n                         (Rep_G a + (- u + Rep_G y) \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a \\<squnion>\n                         (0::'a)\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a + (- u + Rep_G y) \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a)\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a) =\n                         Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a) \\<squnion>\n                         (0::'a)\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a + (- u + Rep_G y) \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a)\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "(*apply (subst sup_assoc) - why it does not work*)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a) =\n                         Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a) \\<squnion>\n                         (0::'a)\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a + (- u + Rep_G y) \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a)\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (subst sup_assoc_lgroup)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a) =\n                         Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a \\<squnion> (0::'a))\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a + (- u + Rep_G y) \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a)\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (subgoal_tac \"(sup (- u + Rep_G a) (0::'a)) = 0\")"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a);\n        - u + Rep_G a \\<squnion> (0::'a) = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a) =\n                         Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a \\<squnion> (0::'a))\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G a \\<squnion> (0::'a) = (0::'a)\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a + (- u + Rep_G y) \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a)\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 6. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 8. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G a \\<squnion> (0::'a) = (0::'a)\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a + (- u + Rep_G y) \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a)\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (rule antisym)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G a \\<squnion> (0::'a) \\<le> (0::'a)\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> - u + Rep_G a \\<squnion> (0::'a)\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a + (- u + Rep_G y) \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a)\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 6. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 8. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G a \\<le> (0::'a)\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> - u + Rep_G a \\<squnion> (0::'a)\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a + (- u + Rep_G y) \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a)\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 6. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 8. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (rule left_move_to_right)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> Rep_G a \\<le> - (- u) + (0::'a)\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> - u + Rep_G a \\<squnion> (0::'a)\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a + (- u + Rep_G y) \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a)\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 6. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 8. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> Rep_G a \\<le> u\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> - u + Rep_G a \\<squnion> (0::'a)\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a + (- u + Rep_G y) \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a)\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 6. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 8. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (cut_tac x = a in Rep_G)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a);\n        Rep_G a \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a \\<le> u\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> - u + Rep_G a \\<squnion> (0::'a)\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a + (- u + Rep_G y) \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a)\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 6. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 8. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (simp add: G_def)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)) \\<sqinter>\n        Rep_G a =\n        Rep_G a + (- u + Rep_G y) \\<squnion> (- u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> - u + Rep_G a \\<squnion> (0::'a)\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a + (- u + Rep_G y) \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a)\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a + (- u + Rep_G y) \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a)\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (rule antisym)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a + (- u + Rep_G y) \\<squnion>\n                          (- u + Rep_G a)) \\<sqinter>\n                         Rep_G a\n                         \\<le> Rep_G a + (- u + Rep_G y) \\<squnion>\n                               (- u + Rep_G a)\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a)\n                         \\<le> (Rep_G a + (- u + Rep_G y) \\<squnion>\n                                (- u + Rep_G a)) \\<sqinter>\n                               Rep_G a\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + (- u + Rep_G y) \\<squnion>\n                         (- u + Rep_G a)\n                         \\<le> (Rep_G a + (- u + Rep_G y) \\<squnion>\n                                (- u + Rep_G a)) \\<sqinter>\n                               Rep_G a\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + (- u + Rep_G y) \\<le> Rep_G a \\<and>\n                         - u + Rep_G a \\<le> Rep_G a\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply safe"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + (- u + Rep_G y) \\<le> Rep_G a\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G a \\<le> Rep_G a\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (rule left_move_to_right)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<le> - Rep_G a + Rep_G a\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G a \\<le> Rep_G a\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<le> (0::'a)\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G a \\<le> Rep_G a\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (rule left_move_to_right)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G y \\<le> - (- u) + (0::'a)\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G a \\<le> Rep_G a\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G y \\<le> u\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G a \\<le> Rep_G a\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (cut_tac x = y in Rep_G)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        Rep_G y \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G y \\<le> u\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G a \\<le> Rep_G a\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (simp add: G_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G a \\<le> Rep_G a\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (rule left_move_to_right)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a \\<le> - (- u) + Rep_G a\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a \\<le> u + Rep_G a\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K;\n        x = Abs_G (Rep_G a + (- u + Rep_G y) \\<squnion> (0::'a));\n        - u + Rep_G y \\<in> K;\n        Rep_G a + (- u + (Rep_G y + - Rep_G a)) \\<in> K;\n        (Rep_G a + (- u + (Rep_G y + (- Rep_G a + u))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + - Rep_G a \\<le> u\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K;\n        Rep_G a - u + Rep_G y - Rep_G a \\<in> K;\n        Rep_G a - u + Rep_G y =\n        Rep_G a - u + Rep_G y - Rep_G a + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (Rep_G a - u + Rep_G y - Rep_G a + u \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (simp add: G_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = Rep_G a - u + Rep_G y - Rep_G a\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (simp add: diff_minus)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> aa = aa + Rep_G a + - Rep_G a\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (simp add: add.assoc)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (simp add: F_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> u -\n                         Rep_G\n                          (Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u))\n                         \\<in> K\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (subgoal_tac \"inf (sup (aa + u) (0::'a)) u \\<in> G\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\\<rbrakk>\n       \\<Longrightarrow> u -\n                         Rep_G\n                          (Abs_G ((aa + u \\<squnion> (0::'a)) \\<sqinter> u))\n                         \\<in> K\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (u - (aa + u)) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (simp add: diff_minus minus_add add.assoc [THEN sym])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (subst (asm) convex_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal;\n        K \\<in> {A. \\<forall>a b.\n                       a \\<in> A \\<and> b \\<in> A \\<longrightarrow>\n                       |[ a , b ]| \\<subseteq> A};\n        K \\<in> lsubgroup; - Rep_G y + u \\<in> K; x = a * y;\n        - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal;\n        \\<forall>a b.\n           a \\<in> K \\<and> b \\<in> K \\<longrightarrow>\n           |[ a , b ]| \\<subseteq> K;\n        K \\<in> lsubgroup; - Rep_G y + u \\<in> K; x = a * y;\n        - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (drule_tac x = 0 in spec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        \\<forall>b.\n           (0::'a) \\<in> K \\<and> b \\<in> K \\<longrightarrow>\n           |[ 0::'a , b ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (drule_tac x = \"sup (- aa) 0\" in spec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (0::'a) \\<in> K \\<and>\n        - aa \\<squnion> (0::'a) \\<in> K \\<longrightarrow>\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply safe"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<squnion> (0::'a) \\<in> K\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (subst (asm) lsubgroup_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal;\n        K \\<in> {A \\<in> subgroup.\n                 \\<forall>a b.\n                    a \\<in> A \\<and> b \\<in> A \\<longrightarrow>\n                    a \\<sqinter> b \\<in> A \\<and> a \\<squnion> b \\<in> A};\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<squnion> (0::'a) \\<in> K\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<squnion> (0::'a) \\<in> K\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (rule sup_lsubgroup)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> K \\<in> lsubgroup\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<in> K\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<in> K\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (rule minus_subgroup)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> K \\<in> subgroup\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> - (- aa) \\<in> K\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (subst (asm) lsubgroup_def)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal;\n        K \\<in> {A \\<in> subgroup.\n                 \\<forall>a b.\n                    a \\<in> A \\<and> b \\<in> A \\<longrightarrow>\n                    a \\<sqinter> b \\<in> A \\<and> a \\<squnion> b \\<in> A};\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> K \\<in> subgroup\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> - (- aa) \\<in> K\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 5. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 7. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> - (- aa) \\<in> K\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 4. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 6. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (subst (asm) lsubgroup_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal;\n        K \\<in> {A \\<in> subgroup.\n                 \\<forall>a b.\n                    a \\<in> A \\<and> b \\<in> A \\<longrightarrow>\n                    a \\<sqinter> b \\<in> A \\<and> a \\<squnion> b \\<in> A};\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        - aa \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (subgoal_tac \"sup (inf (- aa) u) (0::'a) \\<in> |[ 0::'a , sup (- aa) (0::'a) ]|\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K;\n        - aa \\<sqinter> u \\<squnion> (0::'a)\n        \\<in> |[ 0::'a , - aa \\<squnion> (0::'a) ]|\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> |[ 0::'a , - aa \\<squnion> (0::'a) ]|\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> |[ 0::'a , - aa \\<squnion> (0::'a) ]|\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (subst closed_interval_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> {c. (0::'a) \\<le> c \\<and>\n                                   c \\<le> - aa \\<squnion> (0::'a)}\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply safe"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> - aa \\<sqinter> u \\<squnion> (0::'a)\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a)\n                         \\<le> - aa \\<squnion> (0::'a)\n 3. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 5. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a + - u + Rep_G y = aa + Rep_G a;\n        (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - aa \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - aa \\<sqinter> u \\<squnion> (0::'a)\n                         \\<le> - aa \\<squnion> (0::'a)\n 2. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 4. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "(*\n  apply (rule_tac y = \"-aa\" in order_trans)\n  apply simp\n  apply simp\n*)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y aa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K; aa \\<in> K;\n        Rep_G a - u + Rep_G y = aa + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (aa + u \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (simp add: G_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (subst (asm) normal_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> {A. \\<forall>a. A +++ {a} = {a} +++ A};\n        K \\<in> convex; K \\<in> lsubgroup; - Rep_G y + u \\<in> K; x = a * y;\n        - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> K +++ {Rep_G a}\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>\\<forall>a. K +++ {a} = {a} +++ K; K \\<in> convex;\n        K \\<in> lsubgroup; - Rep_G y + u \\<in> K; x = a * y;\n        - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> {Rep_G a} +++ K\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> convex; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K; True\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y \\<in> {Rep_G a} +++ K\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (simp add: add_set_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> convex; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b\\<in>K.\n                            Rep_G a - u + Rep_G y = Rep_G a + b\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (rule_tac x = \"-u + Rep_G y\" in bexI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> convex; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G a - u + Rep_G y = Rep_G a + (- u + Rep_G y)\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> convex; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K\n 3. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (simp add: diff_minus add.assoc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> convex; K \\<in> lsubgroup; - Rep_G y + u \\<in> K;\n        x = a * y; - u + Rep_G y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - u + Rep_G y \\<in> K", "apply (rule minus_subgroup)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> K \\<in> subgroup\n 2. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - (- u + Rep_G y) \\<in> K", "apply (simp add: lsubgroup_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        - Rep_G y + u \\<in> K; x = a * y\\<rbrakk>\n       \\<Longrightarrow> - (- u + Rep_G y) \\<in> K", "by (simp add: minus_add)"], ["", "lemma normal_2: \"K \\<in> normal \\<Longrightarrow> K \\<in> convex \\<Longrightarrow> K \\<in> lsubgroup \\<Longrightarrow> x \\<in> F K ** {a} \\<Longrightarrow> x \\<in> {a} ** F K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n     x \\<in> F K ** {a}\\<rbrakk>\n    \\<Longrightarrow> x \\<in> {a} ** F K", "apply (subst (asm) times_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n     x \\<in> {aa.\n              \\<exists>x\\<in>F K. \\<exists>y\\<in>{a}. aa = x * y}\\<rbrakk>\n    \\<Longrightarrow> x \\<in> {a} ** F K", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n     \\<exists>xa\\<in>F K. x = xa * a\\<rbrakk>\n    \\<Longrightarrow> x \\<in> {a} ** F K", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        xa \\<in> F K; x = xa * a\\<rbrakk>\n       \\<Longrightarrow> xa * a \\<in> {a} ** F K", "apply (subst (asm) F_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        xa \\<in> {a. u - Rep_G a \\<in> K}; x = xa * a\\<rbrakk>\n       \\<Longrightarrow> xa * a \\<in> {a} ** F K", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G xa \\<in> K; x = xa * a\\<rbrakk>\n       \\<Longrightarrow> xa * a \\<in> {a} ** F K", "apply hypsubst_thin"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> x * a \\<in> {a} ** F K", "apply (subgoal_tac \"Rep_G x - u \\<in> K\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> x * a \\<in> {a} ** F K\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (subgoal_tac \"Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\\<rbrakk>\n       \\<Longrightarrow> x * a \\<in> {a} ** F K\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (subst (asm) add_set_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        Rep_G x - u + Rep_G a\n        \\<in> {c. \\<exists>a\\<in>{Rep_G a}.\n                     \\<exists>b\\<in>K. c = a + b}\\<rbrakk>\n       \\<Longrightarrow> x * a \\<in> {a} ** F K\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        \\<exists>b\\<in>K. Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> x * a \\<in> {a} ** F K\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> x * a \\<in> {a} ** F K\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>F K. x * a = a * y\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (rule_tac x = \"Abs_G (inf (sup (u + b) 0) u)\" in bexI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> x * a =\n                         a * Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (subgoal_tac \"b =  - Rep_G a + Rep_G x - u + Rep_G a\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b;\n        b = - Rep_G a + Rep_G x - u + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> x * a =\n                         a * Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (subgoal_tac \"inf (sup (u + b) 0) u \\<in> G\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b;\n        b = - Rep_G a + Rep_G x - u + Rep_G a;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x * a =\n                         a * Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b;\n        b = - Rep_G a + Rep_G x - u + Rep_G a\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply safe"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a);\n        (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x * a =\n                         a *\n                         Abs_G\n                          ((u +\n                            (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                            (0::'a)) \\<sqinter>\n                           u)\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a);\n        (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x * a =\n                         a *\n                         Abs_G\n                          ((u +\n                            (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                            (0::'a)) \\<sqinter>\n                           u)\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (simp add: times_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a);\n        (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Abs_G\n                          (Rep_G a +\n                           (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                           (0::'a)) =\n                         Abs_G\n                          ((Rep_G a - u +\n                            (u +\n                             (- Rep_G a + Rep_G x - u + Rep_G a)) \\<squnion>\n                            (Rep_G a - u)) \\<sqinter>\n                           Rep_G a \\<squnion>\n                           (0::'a))\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (simp add: diff_minus add.assoc)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + (Rep_G x + (- u + Rep_G a)) \\<in> K;\n        (u + (- Rep_G a + (Rep_G x + (- u + Rep_G a))) \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Abs_G\n                          (Rep_G x + (- u + Rep_G a) \\<squnion> (0::'a)) =\n                         Abs_G\n                          ((Rep_G x + (- u + Rep_G a) \\<squnion>\n                            (Rep_G a + - u)) \\<sqinter>\n                           Rep_G a \\<squnion>\n                           (0::'a))\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (simp add: add.assoc [THEN sym])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Abs_G\n                          (Rep_G x + - u + Rep_G a \\<squnion> (0::'a)) =\n                         Abs_G\n                          ((Rep_G x + - u + Rep_G a \\<squnion>\n                            (Rep_G a + - u)) \\<sqinter>\n                           Rep_G a \\<squnion>\n                           (0::'a))\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (subgoal_tac \"sup (Rep_G x + - u + Rep_G a) 0 = sup (inf (sup (Rep_G x + - u + Rep_G a) (Rep_G a + - u)) (Rep_G a)) 0\")"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        Rep_G x + - u + Rep_G a \\<squnion> (0::'a) =\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a \\<squnion>\n        (0::'a)\\<rbrakk>\n       \\<Longrightarrow> Abs_G\n                          (Rep_G x + - u + Rep_G a \\<squnion> (0::'a)) =\n                         Abs_G\n                          ((Rep_G x + - u + Rep_G a \\<squnion>\n                            (Rep_G a + - u)) \\<sqinter>\n                           Rep_G a \\<squnion>\n                           (0::'a))\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G x + - u + Rep_G a \\<squnion> (0::'a) =\n                         (Rep_G x + - u + Rep_G a \\<squnion>\n                          (Rep_G a + - u)) \\<sqinter>\n                         Rep_G a \\<squnion>\n                         (0::'a)\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G x + - u + Rep_G a \\<squnion> (0::'a) =\n                         (Rep_G x + - u + Rep_G a \\<squnion>\n                          (Rep_G a + - u)) \\<sqinter>\n                         Rep_G a \\<squnion>\n                         (0::'a)\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (subgoal_tac \"inf (sup (Rep_G x + - u + Rep_G a) (Rep_G a + - u)) (Rep_G a) = sup (Rep_G x + - u + Rep_G a) (Rep_G a + - u)\")"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\\<rbrakk>\n       \\<Longrightarrow> Rep_G x + - u + Rep_G a \\<squnion> (0::'a) =\n                         (Rep_G x + - u + Rep_G a \\<squnion>\n                          (Rep_G a + - u)) \\<sqinter>\n                         Rep_G a \\<squnion>\n                         (0::'a)\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G x + - u + Rep_G a \\<squnion>\n                          (Rep_G a + - u)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\\<rbrakk>\n       \\<Longrightarrow> Rep_G x + - u + Rep_G a \\<squnion> (0::'a) =\n                         Rep_G x + - u + Rep_G a \\<squnion>\n                         (Rep_G a + - u) \\<squnion>\n                         (0::'a)\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G x + - u + Rep_G a \\<squnion>\n                          (Rep_G a + - u)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "(*apply (subst sup_assoc) - why it does not work*)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\\<rbrakk>\n       \\<Longrightarrow> Rep_G x + - u + Rep_G a \\<squnion> (0::'a) =\n                         Rep_G x + - u + Rep_G a \\<squnion>\n                         (Rep_G a + - u) \\<squnion>\n                         (0::'a)\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G x + - u + Rep_G a \\<squnion>\n                          (Rep_G a + - u)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (subst sup_assoc_lgroup)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\\<rbrakk>\n       \\<Longrightarrow> Rep_G x + - u + Rep_G a \\<squnion> (0::'a) =\n                         Rep_G x + - u + Rep_G a \\<squnion>\n                         (Rep_G a + - u \\<squnion> (0::'a))\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G x + - u + Rep_G a \\<squnion>\n                          (Rep_G a + - u)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (subgoal_tac \"(sup (Rep_G a + - u) (0::'a)) = 0\")"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u);\n        Rep_G a + - u \\<squnion> (0::'a) = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> Rep_G x + - u + Rep_G a \\<squnion> (0::'a) =\n                         Rep_G x + - u + Rep_G a \\<squnion>\n                         (Rep_G a + - u \\<squnion> (0::'a))\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + - u \\<squnion> (0::'a) = (0::'a)\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G x + - u + Rep_G a \\<squnion>\n                          (Rep_G a + - u)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 6. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 8. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + - u \\<squnion> (0::'a) = (0::'a)\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G x + - u + Rep_G a \\<squnion>\n                          (Rep_G a + - u)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (rule antisym)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + - u \\<squnion> (0::'a) \\<le> (0::'a)\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> Rep_G a + - u \\<squnion> (0::'a)\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G x + - u + Rep_G a \\<squnion>\n                          (Rep_G a + - u)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 6. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 8. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + - u \\<le> (0::'a)\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> Rep_G a + - u \\<squnion> (0::'a)\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G x + - u + Rep_G a \\<squnion>\n                          (Rep_G a + - u)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 6. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 8. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (rule right_move_to_right)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\\<rbrakk>\n       \\<Longrightarrow> Rep_G a \\<le> (0::'a) + - (- u)\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> Rep_G a + - u \\<squnion> (0::'a)\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G x + - u + Rep_G a \\<squnion>\n                          (Rep_G a + - u)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 6. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 8. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\\<rbrakk>\n       \\<Longrightarrow> Rep_G a \\<le> u\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> Rep_G a + - u \\<squnion> (0::'a)\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G x + - u + Rep_G a \\<squnion>\n                          (Rep_G a + - u)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 6. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 8. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (cut_tac x = a in Rep_G)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u);\n        Rep_G a \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a \\<le> u\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> Rep_G a + - u \\<squnion> (0::'a)\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G x + - u + Rep_G a \\<squnion>\n                          (Rep_G a + - u)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 6. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 8. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (simp add: G_def)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        (Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)) \\<sqinter>\n        Rep_G a =\n        Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> Rep_G a + - u \\<squnion> (0::'a)\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G x + - u + Rep_G a \\<squnion>\n                          (Rep_G a + - u)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G x + - u + Rep_G a \\<squnion>\n                          (Rep_G a + - u)) \\<sqinter>\n                         Rep_G a =\n                         Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (rule antisym)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (Rep_G x + - u + Rep_G a \\<squnion>\n                          (Rep_G a + - u)) \\<sqinter>\n                         Rep_G a\n                         \\<le> Rep_G x + - u + Rep_G a \\<squnion>\n                               (Rep_G a + - u)\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\n                         \\<le> (Rep_G x + - u + Rep_G a \\<squnion>\n                                (Rep_G a + - u)) \\<sqinter>\n                               Rep_G a\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G x + - u + Rep_G a \\<squnion> (Rep_G a + - u)\n                         \\<le> (Rep_G x + - u + Rep_G a \\<squnion>\n                                (Rep_G a + - u)) \\<sqinter>\n                               Rep_G a\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G x + - u + Rep_G a \\<le> Rep_G a \\<and>\n                         Rep_G a + - u \\<le> Rep_G a\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply safe"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G x + - u + Rep_G a \\<le> Rep_G a\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + - u \\<le> Rep_G a\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (rule right_move_to_right)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G x + - u \\<le> Rep_G a + - Rep_G a\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + - u \\<le> Rep_G a\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G x + - u \\<le> (0::'a)\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + - u \\<le> Rep_G a\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (rule right_move_to_right)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G x \\<le> (0::'a) + - (- u)\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + - u \\<le> Rep_G a\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G x \\<le> u\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + - u \\<le> Rep_G a\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (cut_tac x = x in Rep_G)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G;\n        Rep_G x \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G x \\<le> u\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + - u \\<le> Rep_G a\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (simp add: G_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a + - u \\<le> Rep_G a\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (rule right_move_to_right)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a \\<le> Rep_G a + - (- u)\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> Rep_G a \\<le> Rep_G a + u\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (rule left_move_to_left)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        - Rep_G a + Rep_G x + - u + Rep_G a \\<in> K;\n        (u + - Rep_G a + Rep_G x + - u + Rep_G a \\<squnion>\n         (0::'a)) \\<sqinter>\n        u\n        \\<in> G\\<rbrakk>\n       \\<Longrightarrow> - Rep_G a + Rep_G a \\<le> u\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        - Rep_G a + Rep_G x - u + Rep_G a \\<in> K;\n        Rep_G x - u + Rep_G a =\n        Rep_G a + (- Rep_G a + Rep_G x - u + Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u + (- Rep_G a + Rep_G x - u + Rep_G a) \\<squnion>\n                          (0::'a)) \\<sqinter>\n                         u\n                         \\<in> G\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (simp add: G_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x - u + Rep_G a\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (simp add: diff_minus)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> b = - Rep_G a + Rep_G x + - u + Rep_G a\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (simp add: add.assoc)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> Abs_G ((u + b \\<squnion> (0::'a)) \\<sqinter> u)\n                         \\<in> F K\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (simp add: F_def2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> - Rep_G\n                            (Abs_G\n                              ((u + b \\<squnion> (0::'a)) \\<sqinter> u)) +\n                         u\n                         \\<in> K\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (subgoal_tac \"inf (sup (u + b) (0::'a)) u \\<in> G\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\\<rbrakk>\n       \\<Longrightarrow> - Rep_G\n                            (Abs_G\n                              ((u + b \\<squnion> (0::'a)) \\<sqinter> u)) +\n                         u\n                         \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (- (u + b) + u) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (simp add: diff_minus minus_add add.assoc [THEN sym])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (subst (asm) convex_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal;\n        K \\<in> {A. \\<forall>a b.\n                       a \\<in> A \\<and> b \\<in> A \\<longrightarrow>\n                       |[ a , b ]| \\<subseteq> A};\n        K \\<in> lsubgroup; u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        b \\<in> K; Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal;\n        \\<forall>a b.\n           a \\<in> K \\<and> b \\<in> K \\<longrightarrow>\n           |[ a , b ]| \\<subseteq> K;\n        K \\<in> lsubgroup; u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K;\n        b \\<in> K; Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (drule_tac x = 0 in spec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        \\<forall>b.\n           (0::'a) \\<in> K \\<and> b \\<in> K \\<longrightarrow>\n           |[ 0::'a , b ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (drule_tac x = \"sup (- b) 0\" in spec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (0::'a) \\<in> K \\<and>\n        - b \\<squnion> (0::'a) \\<in> K \\<longrightarrow>\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply safe"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> - b \\<squnion> (0::'a) \\<in> K\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (subst (asm) lsubgroup_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal;\n        K \\<in> {A \\<in> subgroup.\n                 \\<forall>a b.\n                    a \\<in> A \\<and> b \\<in> A \\<longrightarrow>\n                    a \\<sqinter> b \\<in> A \\<and> a \\<squnion> b \\<in> A};\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> - b \\<squnion> (0::'a) \\<in> K\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> - b \\<squnion> (0::'a) \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (rule sup_lsubgroup)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> K \\<in> lsubgroup\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> - b \\<in> K\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> - b \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (rule minus_subgroup)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> K \\<in> subgroup\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> - (- b) \\<in> K\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (subst (asm) lsubgroup_def)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal;\n        K \\<in> {A \\<in> subgroup.\n                 \\<forall>a b.\n                    a \\<in> A \\<and> b \\<in> A \\<longrightarrow>\n                    a \\<sqinter> b \\<in> A \\<and> a \\<squnion> b \\<in> A};\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> K \\<in> subgroup\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> - (- b) \\<in> K\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 5. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 7. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> - (- b) \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 4. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 6. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (subst (asm) lsubgroup_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal;\n        K \\<in> {A \\<in> subgroup.\n                 \\<forall>a b.\n                    a \\<in> A \\<and> b \\<in> A \\<longrightarrow>\n                    a \\<sqinter> b \\<in> A \\<and> a \\<squnion> b \\<in> A};\n        u + - Rep_G x \\<in> K; Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a) \\<notin> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + - u + Rep_G a = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (- b + - u + u) \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (simp add: add.assoc)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + (- u + Rep_G a) = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - b \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (subgoal_tac \"sup (inf (- b) u) (0::'a) \\<in> |[ 0::'a , sup (-b) 0]|\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + (- u + Rep_G a) = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K;\n        - b \\<sqinter> u \\<squnion> (0::'a)\n        \\<in> |[ 0::'a , - b \\<squnion> (0::'a) ]|\\<rbrakk>\n       \\<Longrightarrow> - b \\<sqinter> u \\<squnion> (0::'a) \\<in> K\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + (- u + Rep_G a) = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - b \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> |[ 0::'a , - b \\<squnion> (0::'a) ]|\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + (- u + Rep_G a) = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - b \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> |[ 0::'a , - b \\<squnion> (0::'a) ]|\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (subst closed_interval_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + (- u + Rep_G a) = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - b \\<sqinter> u \\<squnion> (0::'a)\n                         \\<in> {c. (0::'a) \\<le> c \\<and>\n                                   c \\<le> - b \\<squnion> (0::'a)}\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply safe"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + (- u + Rep_G a) = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> - b \\<sqinter> u \\<squnion> (0::'a)\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + (- u + Rep_G a) = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - b \\<sqinter> u \\<squnion> (0::'a)\n                         \\<le> - b \\<squnion> (0::'a)\n 3. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 5. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; u + - Rep_G x \\<in> K;\n        Rep_G x + - u \\<in> K; b \\<in> K;\n        Rep_G x + (- u + Rep_G a) = Rep_G a + b;\n        (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G;\n        |[ 0::'a , - b \\<squnion> (0::'a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - b \\<sqinter> u \\<squnion> (0::'a)\n                         \\<le> - b \\<squnion> (0::'a)\n 2. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 4. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "(*\n  apply (rule_tac y = \"-b\" in order_trans)\n  apply simp\n  apply simp\n*)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K; b \\<in> K;\n        Rep_G x - u + Rep_G a = Rep_G a + b\\<rbrakk>\n       \\<Longrightarrow> (u + b \\<squnion> (0::'a)) \\<sqinter> u \\<in> G\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (simp add: G_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (subgoal_tac  \"{Rep_G a} +++ K = K +++ {Rep_G a}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        {Rep_G a} +++ K = K +++ {Rep_G a}\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> {Rep_G a} +++ K\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> {Rep_G a} +++ K = K +++ {Rep_G a}\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K;\n        {Rep_G a} +++ K = K +++ {Rep_G a}\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u + Rep_G a \\<in> K +++ {Rep_G a}\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> {Rep_G a} +++ K = K +++ {Rep_G a}\n 3. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (simp add: add_set_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K; Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> {Rep_G a} +++ K = K +++ {Rep_G a}\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (subst (asm) normal_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> {A. \\<forall>a. A +++ {a} = {a} +++ A};\n        K \\<in> convex; K \\<in> lsubgroup; u - Rep_G x \\<in> K;\n        Rep_G x - u \\<in> K\\<rbrakk>\n       \\<Longrightarrow> {Rep_G a} +++ K = K +++ {Rep_G a}\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> Rep_G x - u \\<in> K", "apply (rule minus_subgroup)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> K \\<in> subgroup\n 2. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> - (Rep_G x - u) \\<in> K", "apply (simp add: lsubgroup_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        u - Rep_G x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> - (Rep_G x - u) \\<in> K", "by (simp add: diff_minus minus_add)"], ["", "lemma \"K \\<in> normal \\<Longrightarrow> K \\<in> convex \\<Longrightarrow> K \\<in> lsubgroup \\<Longrightarrow> F K \\<in> normalfilters\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> F K \\<in> normalfilters", "apply (rule lemma_3_10_ii_i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> F K \\<in> filters\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a. {a} ** F K = F K ** {a}", "apply (subgoal_tac \"K \\<in> subgroup\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n     K \\<in> subgroup\\<rbrakk>\n    \\<Longrightarrow> F K \\<in> filters\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a. {a} ** F K = F K ** {a}", "apply (subst filters_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n     K \\<in> subgroup\\<rbrakk>\n    \\<Longrightarrow> F K\n                      \\<in> {F. F \\<noteq> {} \\<and>\n                                (\\<forall>a b.\n                                    a \\<in> F \\<and>\n                                    b \\<in> F \\<longrightarrow>\n                                    a * b \\<in> F) \\<and>\n                                (\\<forall>a b.\n                                    a \\<in> F \\<and>\n                                    a \\<le> b \\<longrightarrow>\n                                    b \\<in> F)}\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a. {a} ** F K = F K ** {a}", "apply safe"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n     K \\<in> subgroup; F K = {}\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; b \\<in> F K\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> F K\n 3. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 4. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 6. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (subgoal_tac \"1 \\<in> F K\")"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n     K \\<in> subgroup; F K = {}; 1 \\<in> F K\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n     K \\<in> subgroup; F K = {}\\<rbrakk>\n    \\<Longrightarrow> 1 \\<in> F K\n 3. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; b \\<in> F K\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> F K\n 4. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 5. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 6. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 7. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n     K \\<in> subgroup; F K = {}\\<rbrakk>\n    \\<Longrightarrow> 1 \\<in> F K\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; b \\<in> F K\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> F K\n 3. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 4. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 6. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (subst F_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n     K \\<in> subgroup; F K = {}\\<rbrakk>\n    \\<Longrightarrow> 1 \\<in> {a. u - Rep_G a \\<in> K}\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; b \\<in> F K\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> F K\n 3. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 4. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 6. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply safe"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n     K \\<in> subgroup; F K = {}\\<rbrakk>\n    \\<Longrightarrow> u - Rep_G 1 \\<in> K\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; b \\<in> F K\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> F K\n 3. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 4. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 6. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (subst one_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n     K \\<in> subgroup; F K = {}\\<rbrakk>\n    \\<Longrightarrow> u - Rep_G (Abs_G u) \\<in> K\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; b \\<in> F K\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> F K\n 3. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 4. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 6. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; b \\<in> F K\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> F K\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (simp add: F_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; u - Rep_G a \\<in> K; u - Rep_G b \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G (a * b) \\<in> K\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (simp add: convex_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal;\n        \\<forall>a b.\n           a \\<in> K \\<and> b \\<in> K \\<longrightarrow>\n           |[ a , b ]| \\<subseteq> K;\n        K \\<in> lsubgroup; K \\<in> subgroup; u - Rep_G a \\<in> K;\n        u - Rep_G b \\<in> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G (a * b) \\<in> K\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (drule_tac x = 0 in spec)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        \\<forall>b.\n           (0::'a) \\<in> K \\<and> b \\<in> K \\<longrightarrow>\n           |[ 0::'a , b ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G (a * b) \\<in> K\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (drule_tac x = \"(u - Rep_G b) + (u - Rep_G a) \" in spec)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        (0::'a) \\<in> K \\<and>\n        u - Rep_G b + (u - Rep_G a) \\<in> K \\<longrightarrow>\n        |[ 0::'a , u - Rep_G b + (u - Rep_G a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G (a * b) \\<in> K\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        |[ 0::'a , u - Rep_G b + (u - Rep_G a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G (a * b) \\<in> K\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (subgoal_tac \"u - Rep_G (a * b) \\<in> |[ 0::'a , u - Rep_G b + (u - Rep_G a) ]|\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        |[ 0::'a , u - Rep_G b + (u - Rep_G a) ]| \\<subseteq> K;\n        u - Rep_G (a * b)\n        \\<in> |[ 0::'a , u - Rep_G b + (u - Rep_G a) ]|\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G (a * b) \\<in> K\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        |[ 0::'a , u - Rep_G b + (u - Rep_G a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G (a * b)\n                         \\<in> |[ 0::'a , u - Rep_G b + (u - Rep_G a) ]|\n 3. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 4. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 6. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply blast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        |[ 0::'a , u - Rep_G b + (u - Rep_G a) ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G (a * b)\n                         \\<in> |[ 0::'a , u - Rep_G b + (u - Rep_G a) ]|\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (simp add: closed_interval_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        {c. (0::'a) \\<le> c \\<and> c \\<le> u - Rep_G b + (u - Rep_G a)}\n        \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> u - Rep_G (a * b) \\<and>\n                         u - Rep_G (a * b) \\<le> u - Rep_G b + (u - Rep_G a)\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply safe"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        {c. (0::'a) \\<le> c \\<and> c \\<le> u - Rep_G b + (u - Rep_G a)}\n        \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> u - Rep_G (a * b)\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        {c. (0::'a) \\<le> c \\<and> c \\<le> u - Rep_G b + (u - Rep_G a)}\n        \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G (a * b) \\<le> u - Rep_G b + (u - Rep_G a)\n 3. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 4. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 6. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (cut_tac x = \"a * b\" in Rep_G)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        {c. (0::'a) \\<le> c \\<and> c \\<le> u - Rep_G b + (u - Rep_G a)}\n        \\<subseteq> K;\n        Rep_G (a * b) \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> u - Rep_G (a * b)\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        {c. (0::'a) \\<le> c \\<and> c \\<le> u - Rep_G b + (u - Rep_G a)}\n        \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G (a * b) \\<le> u - Rep_G b + (u - Rep_G a)\n 3. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 4. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 6. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (simp add: G_def diff_minus)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u + - Rep_G a \\<in> K; u + - Rep_G b \\<in> K;\n        {c. (0::'a) \\<le> c \\<and> c \\<le> u + - Rep_G b + (u + - Rep_G a)}\n        \\<subseteq> K;\n        (0::'a) \\<le> Rep_G (a * b) \\<and> Rep_G (a * b) \\<le> u\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> u + - Rep_G (a * b)\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        {c. (0::'a) \\<le> c \\<and> c \\<le> u - Rep_G b + (u - Rep_G a)}\n        \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G (a * b) \\<le> u - Rep_G b + (u - Rep_G a)\n 3. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 4. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 6. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u + - Rep_G a \\<in> K; u + - Rep_G b \\<in> K;\n        {c. (0::'a) \\<le> c \\<and> c \\<le> u + - Rep_G b + (u + - Rep_G a)}\n        \\<subseteq> K;\n        (0::'a) \\<le> Rep_G (a * b) \\<and> Rep_G (a * b) \\<le> u\\<rbrakk>\n       \\<Longrightarrow> (0::'a) + - (- Rep_G (a * b)) \\<le> u\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        {c. (0::'a) \\<le> c \\<and> c \\<le> u - Rep_G b + (u - Rep_G a)}\n        \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G (a * b) \\<le> u - Rep_G b + (u - Rep_G a)\n 3. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 4. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 6. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        {c. (0::'a) \\<le> c \\<and> c \\<le> u - Rep_G b + (u - Rep_G a)}\n        \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G (a * b) \\<le> u - Rep_G b + (u - Rep_G a)\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (simp add: times_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        {c. (0::'a) \\<le> c \\<and> c \\<le> u - Rep_G b + (u - Rep_G a)}\n        \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (u - (Rep_G a - u + Rep_G b)) \\<sqinter> u\n                         \\<le> u - Rep_G b + (u - Rep_G a)\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (subgoal_tac \"(u - (Rep_G a - u + Rep_G b)) = u - Rep_G b + (u - Rep_G a)\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        {c. (0::'a) \\<le> c \\<and> c \\<le> u - Rep_G b + (u - Rep_G a)}\n        \\<subseteq> K;\n        u - (Rep_G a - u + Rep_G b) = u - Rep_G b + (u - Rep_G a)\\<rbrakk>\n       \\<Longrightarrow> (u - (Rep_G a - u + Rep_G b)) \\<sqinter> u\n                         \\<le> u - Rep_G b + (u - Rep_G a)\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        {c. (0::'a) \\<le> c \\<and> c \\<le> u - Rep_G b + (u - Rep_G a)}\n        \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - (Rep_G a - u + Rep_G b) =\n                         u - Rep_G b + (u - Rep_G a)\n 3. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 4. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 6. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; u - Rep_G b \\<in> K;\n        {c. (0::'a) \\<le> c \\<and> c \\<le> u - Rep_G b + (u - Rep_G a)}\n        \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - (Rep_G a - u + Rep_G b) =\n                         u - Rep_G b + (u - Rep_G a)\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (simp add: diff_minus add.assoc minus_add)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (subst (asm) Rep_G_order)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; a \\<in> F K; Rep_G a \\<le> Rep_G b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F K\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (simp add: F_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        K \\<in> subgroup; u - Rep_G a \\<in> K;\n        Rep_G a \\<le> Rep_G b\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G b \\<in> K\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (subst (asm) convex_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal;\n        K \\<in> {A. \\<forall>a b.\n                       a \\<in> A \\<and> b \\<in> A \\<longrightarrow>\n                       |[ a , b ]| \\<subseteq> A};\n        K \\<in> lsubgroup; K \\<in> subgroup; u - Rep_G a \\<in> K;\n        Rep_G a \\<le> Rep_G b\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G b \\<in> K\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal;\n        \\<forall>a b.\n           a \\<in> K \\<and> b \\<in> K \\<longrightarrow>\n           |[ a , b ]| \\<subseteq> K;\n        K \\<in> lsubgroup; K \\<in> subgroup; u - Rep_G a \\<in> K;\n        Rep_G a \\<le> Rep_G b\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G b \\<in> K\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (drule_tac x = 0 in spec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        \\<forall>b.\n           (0::'a) \\<in> K \\<and> b \\<in> K \\<longrightarrow>\n           |[ 0::'a , b ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G b \\<in> K\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (drule_tac x = \" u - Rep_G a\" in spec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        (0::'a) \\<in> K \\<and> u - Rep_G a \\<in> K \\<longrightarrow>\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G b \\<in> K\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G b \\<in> K\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (subgoal_tac \"u - Rep_G b \\<in> |[ 0::'a , u - Rep_G a ]|\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K;\n        u - Rep_G b \\<in> |[ 0::'a , u - Rep_G a ]|\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G b \\<in> K\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G b \\<in> |[ 0::'a , u - Rep_G a ]|\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G b \\<in> |[ 0::'a , u - Rep_G a ]|\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (subst closed_interval_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G b\n                         \\<in> {c. (0::'a) \\<le> c \\<and>\n                                   c \\<le> u - Rep_G a}\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> u - Rep_G b \\<and>\n                         u - Rep_G b \\<le> u - Rep_G a\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply safe"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> u - Rep_G b\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G b \\<le> u - Rep_G a\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (cut_tac x = \"b\" in Rep_G)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K; Rep_G b \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> u - Rep_G b\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G b \\<le> u - Rep_G a\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (simp add: G_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K;\n        (0::'a) \\<le> Rep_G b \\<and> Rep_G b \\<le> u\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> u - Rep_G b\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G b \\<le> u - Rep_G a\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (safe)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K; (0::'a) \\<le> Rep_G b;\n        Rep_G b \\<le> u\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> u - Rep_G b\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G b \\<le> u - Rep_G a\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (simp add: diff_minus)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u + - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u + - Rep_G a ]| \\<subseteq> K; (0::'a) \\<le> Rep_G b;\n        Rep_G b \\<le> u\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> u + - Rep_G b\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G b \\<le> u - Rep_G a\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u + - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u + - Rep_G a ]| \\<subseteq> K; (0::'a) \\<le> Rep_G b;\n        Rep_G b \\<le> u\\<rbrakk>\n       \\<Longrightarrow> (0::'a) + - (- Rep_G b) \\<le> u\n 2. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G b \\<le> u - Rep_G a\n 3. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u - Rep_G a ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u - Rep_G b \\<le> u - Rep_G a\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (simp add: diff_minus)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u + - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u + - Rep_G a ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> u + - Rep_G b \\<le> u + - Rep_G a\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (rule add_order_preserving_left)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u + - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u + - Rep_G a ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - Rep_G b \\<le> - Rep_G a\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (rule minus_order)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>K \\<in> normal; K \\<in> lsubgroup; K \\<in> subgroup;\n        u + - Rep_G a \\<in> K; Rep_G a \\<le> Rep_G b;\n        |[ 0::'a , u + - Rep_G a ]| \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> - (- Rep_G a) \\<le> - (- Rep_G b)\n 2. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup\\<rbrakk>\n    \\<Longrightarrow> K \\<in> subgroup\n 2. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (simp add: lsubgroup_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}\n 2. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (rule normal_1)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> K \\<in> normal\n 2. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> K \\<in> convex\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> K \\<in> lsubgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> {a} ** F K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K\n 5. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a} ** F K", "apply (rule normal_2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> K \\<in> normal\n 2. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> K \\<in> convex\n 3. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> K \\<in> lsubgroup\n 4. \\<And>a x.\n       \\<lbrakk>K \\<in> normal; K \\<in> convex; K \\<in> lsubgroup;\n        x \\<in> F K ** {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F K ** {a}", "by simp_all"], ["", "definition \"N = {a::'a::lgroup. a \\<le> 0}\""], ["", "typedef (overloaded) ('a::lgroup) N = \"N :: 'a::lgroup set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> N", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. ?x \\<in> N", "show \"0 \\<in> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'b) \\<in> N", "by (simp add: N_def)"], ["proof (state)\nthis:\n  (0::?'b1) \\<in> N\n\ngoal:\nNo subgoals!", "qed"], ["", "class cancel_product_pseudo_hoop_algebra = cancel_pseudo_hoop_algebra + product_pseudo_hoop_algebra"], ["", "context group_add\nbegin"], ["", "subclass cancel_semigroup_add"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.cancel_semigroup_add (+)", "proof"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "(*\n  fix a b c :: 'a\n  assume \"a + b = a + c\"\n  then have \"- a + a + b = - a + a + c\"\n    unfolding add.assoc by simp\n  then show \"b = c\" by simp\nnext\n  fix a b c :: 'a\n  assume \"b + a = c + a\"\n  then have \"b + a + - a = c + a  + - a\" by simp\n  then show \"b = c\" unfolding add.assoc by simp\nqed\n*)"], ["", "end"], ["", "instantiation \"N\" :: (lgroup) pseudo_hoop_algebra\nbegin"], ["", "definition\n  times_N_def: \"a * b \\<equiv> Abs_N (Rep_N a +  Rep_N b)\""], ["", "lemma [simp]: \"Rep_N a + Rep_N b \\<in> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N a + Rep_N b \\<in> N", "apply (cut_tac x = a in Rep_N)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N a \\<in> N \\<Longrightarrow> Rep_N a + Rep_N b \\<in> N", "apply (cut_tac x = b in Rep_N)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_N a \\<in> N; Rep_N b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> Rep_N a + Rep_N b \\<in> N", "apply (simp add: N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_N a \\<le> (0::'b); Rep_N b \\<le> (0::'b)\\<rbrakk>\n    \\<Longrightarrow> Rep_N a + Rep_N b \\<le> (0::'b)", "apply (rule_tac left_move_to_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_N a \\<le> (0::'b); Rep_N b \\<le> (0::'b)\\<rbrakk>\n    \\<Longrightarrow> Rep_N b \\<le> - Rep_N a + (0::'b)", "apply (rule_tac y = 0 in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Rep_N a \\<le> (0::'b); Rep_N b \\<le> (0::'b)\\<rbrakk>\n    \\<Longrightarrow> Rep_N b \\<le> (0::'b)\n 2. \\<lbrakk>Rep_N a \\<le> (0::'b); Rep_N b \\<le> (0::'b)\\<rbrakk>\n    \\<Longrightarrow> (0::'b) \\<le> - Rep_N a + (0::'b)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_N a \\<le> (0::'b); Rep_N b \\<le> (0::'b)\\<rbrakk>\n    \\<Longrightarrow> (0::'b) \\<le> - Rep_N a", "apply (rule_tac minus_order)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_N a \\<le> (0::'b); Rep_N b \\<le> (0::'b)\\<rbrakk>\n    \\<Longrightarrow> - (- Rep_N a) \\<le> - (0::'b)", "by simp"], ["", "definition\n  impl_N_def: \"a l\\<rightarrow> b \\<equiv> Abs_N (inf (Rep_N b - Rep_N a) 0)\""], ["", "definition \n  inf_N_def: \"(a:: 'a N) \\<sqinter> b = (a l\\<rightarrow> b) * a\""], ["", "lemma [simp]: \"inf (Rep_N b - Rep_N a) 0 \\<in> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N b - Rep_N a) \\<sqinter> (0::'b) \\<in> N", "apply (cut_tac x = a in Rep_N)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N a \\<in> N \\<Longrightarrow>\n    (Rep_N b - Rep_N a) \\<sqinter> (0::'b) \\<in> N", "apply (cut_tac x = b in Rep_N)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_N a \\<in> N; Rep_N b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (Rep_N b - Rep_N a) \\<sqinter> (0::'b) \\<in> N", "by (simp add: N_def)"], ["", "definition\n  impr_N_def: \"a r\\<rightarrow> b \\<equiv> Abs_N (inf (- Rep_N a + Rep_N b) 0)\""], ["", "lemma [simp]: \"inf (- Rep_N a + Rep_N b) 0 \\<in> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N a + Rep_N b) \\<sqinter> (0::'b) \\<in> N", "apply (cut_tac x = a in Rep_N)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N a \\<in> N \\<Longrightarrow>\n    (- Rep_N a + Rep_N b) \\<sqinter> (0::'b) \\<in> N", "apply (cut_tac x = b in Rep_N)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_N a \\<in> N; Rep_N b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (- Rep_N a + Rep_N b) \\<sqinter> (0::'b) \\<in> N", "by (simp add: N_def)"], ["", "definition\n  one_N_def: \"1 \\<equiv> Abs_N 0\""], ["", "lemma [simp]: \"0 \\<in> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'b) \\<in> N", "by (simp add: N_def)"], ["", "definition\n  order_N_def: \"((a::'a N) \\<le> b) \\<equiv> (a l\\<rightarrow> b = 1)\""], ["", "definition\n  strict_order_N_def: \"(a::'a N) < b \\<equiv> (a \\<le> b \\<and> \\<not> b \\<le> a)\""], ["", "lemma order_Rep_N:\n  \"((a::'a N) \\<le> b) = (Rep_N a \\<le> Rep_N b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<le> b) = (Rep_N a \\<le> Rep_N b)", "apply (subst order_N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a l\\<rightarrow> b = 1) = (Rep_N a \\<le> Rep_N b)", "apply (simp add: impl_N_def one_N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n    (Rep_N a \\<le> Rep_N b)", "apply (subgoal_tac \"(Abs_N (inf (Rep_N b - Rep_N a) (0::'a)) = Abs_N (0::'a)) = ((Rep_N (Abs_N (inf (Rep_N b - Rep_N a) (0::'a))) = Rep_N(Abs_N (0::'a))))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n    (Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a))) \\<Longrightarrow>\n    (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n    (Rep_N a \\<le> Rep_N b)\n 2. (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n    (Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a)))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n    (Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a))) \\<Longrightarrow>\n    (Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a))) =\n    (Rep_N a \\<le> Rep_N b)\n 2. (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n    (Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a)))", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. True \\<Longrightarrow>\n    (Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a))) =\n    (Rep_N a \\<le> Rep_N b)\n 2. (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n    (Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a)))", "apply (simp add: Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a)) =\n    (Rep_N a \\<le> Rep_N b)\n 2. (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n    (Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a)))", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. (Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow>\n    Rep_N a \\<le> Rep_N b\n 2. Rep_N a \\<le> Rep_N b \\<Longrightarrow>\n    (Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a)\n 3. Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) =\n    Abs_N (0::'a) \\<Longrightarrow>\n    Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a))\n 4. Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a)) \\<Longrightarrow>\n    Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)", "apply (subgoal_tac \"0 \\<le> Rep_N b - Rep_N a\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>(Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a);\n     (0::'a) \\<le> Rep_N b - Rep_N a\\<rbrakk>\n    \\<Longrightarrow> Rep_N a \\<le> Rep_N b\n 2. (Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow>\n    (0::'a) \\<le> Rep_N b - Rep_N a\n 3. Rep_N a \\<le> Rep_N b \\<Longrightarrow>\n    (Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a)\n 4. Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) =\n    Abs_N (0::'a) \\<Longrightarrow>\n    Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a))\n 5. Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a)) \\<Longrightarrow>\n    Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)", "apply (drule_tac v = \"Rep_N a\" in add_order_preserving_right)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>(Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a);\n     (0::'a) + Rep_N a \\<le> Rep_N b - Rep_N a + Rep_N a\\<rbrakk>\n    \\<Longrightarrow> Rep_N a \\<le> Rep_N b\n 2. (Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow>\n    (0::'a) \\<le> Rep_N b - Rep_N a\n 3. Rep_N a \\<le> Rep_N b \\<Longrightarrow>\n    (Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a)\n 4. Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) =\n    Abs_N (0::'a) \\<Longrightarrow>\n    Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a))\n 5. Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a)) \\<Longrightarrow>\n    Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)", "apply (simp add: diff_minus add.assoc)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow>\n    (0::'a) \\<le> Rep_N b - Rep_N a\n 2. Rep_N a \\<le> Rep_N b \\<Longrightarrow>\n    (Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a)\n 3. Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) =\n    Abs_N (0::'a) \\<Longrightarrow>\n    Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a))\n 4. Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a)) \\<Longrightarrow>\n    Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)", "apply (rule_tac y = \"inf (Rep_N b - Rep_N a) (0::'a)\" in order_trans)"], ["proof (prove)\ngoal (5 subgoals):\n 1. (Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow>\n    (0::'a) \\<le> (Rep_N b - Rep_N a) \\<sqinter> (0::'a)\n 2. (Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow>\n    (Rep_N b - Rep_N a) \\<sqinter> (0::'a) \\<le> Rep_N b - Rep_N a\n 3. Rep_N a \\<le> Rep_N b \\<Longrightarrow>\n    (Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a)\n 4. Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) =\n    Abs_N (0::'a) \\<Longrightarrow>\n    Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a))\n 5. Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a)) \\<Longrightarrow>\n    Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. (Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow>\n    (Rep_N b - Rep_N a) \\<sqinter> (0::'a) \\<le> Rep_N b - Rep_N a\n 2. Rep_N a \\<le> Rep_N b \\<Longrightarrow>\n    (Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a)\n 3. Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) =\n    Abs_N (0::'a) \\<Longrightarrow>\n    Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a))\n 4. Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a)) \\<Longrightarrow>\n    Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (4 subgoals):\n 1. True \\<Longrightarrow>\n    (Rep_N b - Rep_N a) \\<sqinter> (0::'a) \\<le> Rep_N b - Rep_N a\n 2. Rep_N a \\<le> Rep_N b \\<Longrightarrow>\n    (Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a)\n 3. Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) =\n    Abs_N (0::'a) \\<Longrightarrow>\n    Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a))\n 4. Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a)) \\<Longrightarrow>\n    Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. Rep_N a \\<le> Rep_N b \\<Longrightarrow>\n    (Rep_N b - Rep_N a) \\<sqinter> (0::'a) = (0::'a)\n 2. Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) =\n    Abs_N (0::'a) \\<Longrightarrow>\n    Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a))\n 3. Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a)) \\<Longrightarrow>\n    Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)", "apply (rule antisym)"], ["proof (prove)\ngoal (4 subgoals):\n 1. Rep_N a \\<le> Rep_N b \\<Longrightarrow>\n    (Rep_N b - Rep_N a) \\<sqinter> (0::'a) \\<le> (0::'a)\n 2. Rep_N a \\<le> Rep_N b \\<Longrightarrow>\n    (0::'a) \\<le> (Rep_N b - Rep_N a) \\<sqinter> (0::'a)\n 3. Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) =\n    Abs_N (0::'a) \\<Longrightarrow>\n    Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a))\n 4. Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a)) \\<Longrightarrow>\n    Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. Rep_N a \\<le> Rep_N b \\<Longrightarrow>\n    (0::'a) \\<le> (Rep_N b - Rep_N a) \\<sqinter> (0::'a)\n 2. Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) =\n    Abs_N (0::'a) \\<Longrightarrow>\n    Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a))\n 3. Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a)) \\<Longrightarrow>\n    Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. Rep_N a \\<le> Rep_N b \\<Longrightarrow> (0::'a) \\<le> Rep_N b - Rep_N a\n 2. Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) =\n    Abs_N (0::'a) \\<Longrightarrow>\n    Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a))\n 3. Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a)) \\<Longrightarrow>\n    Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)", "apply (simp add: diff_minus)"], ["proof (prove)\ngoal (3 subgoals):\n 1. Rep_N a \\<le> Rep_N b \\<Longrightarrow>\n    (0::'a) \\<le> Rep_N b + - Rep_N a\n 2. Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) =\n    Abs_N (0::'a) \\<Longrightarrow>\n    Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a))\n 3. Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a)) \\<Longrightarrow>\n    Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (3 subgoals):\n 1. Rep_N a \\<le> Rep_N b \\<Longrightarrow>\n    (0::'a) + - (- Rep_N a) \\<le> Rep_N b\n 2. Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) =\n    Abs_N (0::'a) \\<Longrightarrow>\n    Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a))\n 3. Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a)) \\<Longrightarrow>\n    Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) =\n    Abs_N (0::'a) \\<Longrightarrow>\n    Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a))\n 2. Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a)) \\<Longrightarrow>\n    Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a))) =\n    Rep_N (Abs_N (0::'a)) \\<Longrightarrow>\n    Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)) = Abs_N (0::'a)", "by (simp add: Abs_N_inverse)"], ["", "lemma order_Abs_N:\n  \"a \\<in> N \\<Longrightarrow> b \\<in> N \\<Longrightarrow> (a \\<le> b) = (Abs_N a \\<le> Abs_N b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (a \\<le> b) = (Abs_N a \\<le> Abs_N b)", "apply (subst order_N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (a \\<le> b) = (Abs_N a l\\<rightarrow> Abs_N b = 1)", "apply (simp add: impl_N_def one_N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (a \\<le> b) =\n                      (Abs_N\n                        ((Rep_N (Abs_N b) - Rep_N (Abs_N a)) \\<sqinter>\n                         (0::'a)) =\n                       Abs_N (0::'a))", "apply (simp add: Abs_N_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (a \\<le> b) =\n                      (Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a))", "apply (subgoal_tac \"inf (b - a) 0 \\<in> N\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> N; b \\<in> N;\n     (b - a) \\<sqinter> (0::'a) \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (a \\<le> b) =\n                      (Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a))\n 2. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply (subgoal_tac \"(Abs_N (inf (b - a) (0::'a)) = Abs_N (0::'a)) = (Rep_N (Abs_N (inf (b - a) (0::'a))) = Rep_N (Abs_N (0::'a)))\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     (Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n     (Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n      Rep_N (Abs_N (0::'a)))\\<rbrakk>\n    \\<Longrightarrow> (a \\<le> b) =\n                      (Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a))\n 2. \\<lbrakk>a \\<in> N; b \\<in> N;\n     (b - a) \\<sqinter> (0::'a) \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n                      (Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n                       Rep_N (Abs_N (0::'a)))\n 3. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     (Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n     (Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n      Rep_N (Abs_N (0::'a)))\\<rbrakk>\n    \\<Longrightarrow> (a \\<le> b) =\n                      (Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n                       Rep_N (Abs_N (0::'a)))\n 2. \\<lbrakk>a \\<in> N; b \\<in> N;\n     (b - a) \\<sqinter> (0::'a) \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n                      (Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n                       Rep_N (Abs_N (0::'a)))\n 3. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply (simp add: Abs_N_inverse)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     (Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n     ((b - a) \\<sqinter> (0::'a) = (0::'a))\\<rbrakk>\n    \\<Longrightarrow> (a \\<le> b) = ((b - a) \\<sqinter> (0::'a) = (0::'a))\n 2. \\<lbrakk>a \\<in> N; b \\<in> N;\n     (b - a) \\<sqinter> (0::'a) \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n                      (Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n                       Rep_N (Abs_N (0::'a)))\n 3. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     (Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n     ((b - a) \\<sqinter> (0::'a) = (0::'a));\n     True\\<rbrakk>\n    \\<Longrightarrow> (a \\<le> b) = ((b - a) \\<sqinter> (0::'a) = (0::'a))\n 2. \\<lbrakk>a \\<in> N; b \\<in> N;\n     (b - a) \\<sqinter> (0::'a) \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n                      (Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n                       Rep_N (Abs_N (0::'a)))\n 3. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(b - a) \\<sqinter> (0::'a) \\<in> N;\n     (Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n     ((b - a) \\<sqinter> (0::'a) = (0::'a));\n     True; True\\<rbrakk>\n    \\<Longrightarrow> (a \\<le> b) = ((b - a) \\<sqinter> (0::'a) = (0::'a))\n 2. \\<lbrakk>a \\<in> N; b \\<in> N;\n     (b - a) \\<sqinter> (0::'a) \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n                      (Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n                       Rep_N (Abs_N (0::'a)))\n 3. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n             ((b - a) \\<sqinter> (0::'a) = (0::'a));\n     True; True; True\\<rbrakk>\n    \\<Longrightarrow> (a \\<le> b) = ((b - a) \\<sqinter> (0::'a) = (0::'a))\n 2. \\<lbrakk>a \\<in> N; b \\<in> N;\n     (b - a) \\<sqinter> (0::'a) \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n                      (Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n                       Rep_N (Abs_N (0::'a)))\n 3. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>True; True; True; True\\<rbrakk>\n    \\<Longrightarrow> (a \\<le> b) = ((b - a) \\<sqinter> (0::'a) = (0::'a))\n 2. \\<lbrakk>a \\<in> N; b \\<in> N;\n     (b - a) \\<sqinter> (0::'a) \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n                      (Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n                       Rep_N (Abs_N (0::'a)))\n 3. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. (a \\<le> b) = ((b - a) \\<sqinter> (0::'a) = (0::'a))\n 2. \\<lbrakk>a \\<in> N; b \\<in> N;\n     (b - a) \\<sqinter> (0::'a) \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)) =\n                      (Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n                       Rep_N (Abs_N (0::'a)))\n 3. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply safe"], ["proof (prove)\ngoal (5 subgoals):\n 1. a \\<le> b \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) = (0::'a)\n 2. (b - a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow> a \\<le> b\n 3. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)\\<rbrakk>\n    \\<Longrightarrow> Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n                      Rep_N (Abs_N (0::'a))\n 4. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a))\\<rbrakk>\n    \\<Longrightarrow> Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)\n 5. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply (rule antisym)"], ["proof (prove)\ngoal (6 subgoals):\n 1. a \\<le> b \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<le> (0::'a)\n 2. a \\<le> b \\<Longrightarrow> (0::'a) \\<le> (b - a) \\<sqinter> (0::'a)\n 3. (b - a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow> a \\<le> b\n 4. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)\\<rbrakk>\n    \\<Longrightarrow> Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n                      Rep_N (Abs_N (0::'a))\n 5. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a))\\<rbrakk>\n    \\<Longrightarrow> Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)\n 6. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply simp_all"], ["proof (prove)\ngoal (4 subgoals):\n 1. a \\<le> b \\<Longrightarrow> (0::'a) \\<le> b - a\n 2. (b - a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow> a \\<le> b\n 3. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a))\\<rbrakk>\n    \\<Longrightarrow> Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)\n 4. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply (simp add: diff_minus)"], ["proof (prove)\ngoal (4 subgoals):\n 1. a \\<le> b \\<Longrightarrow> (0::'a) \\<le> b + - a\n 2. (b - a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow> a \\<le> b\n 3. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a))\\<rbrakk>\n    \\<Longrightarrow> Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)\n 4. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (4 subgoals):\n 1. a \\<le> b \\<Longrightarrow> (0::'a) + - (- a) \\<le> b\n 2. (b - a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow> a \\<le> b\n 3. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a))\\<rbrakk>\n    \\<Longrightarrow> Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)\n 4. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. (b - a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow> a \\<le> b\n 2. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a))\\<rbrakk>\n    \\<Longrightarrow> Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)\n 3. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply (subgoal_tac \"0 \\<le> b - a\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>(b - a) \\<sqinter> (0::'a) = (0::'a);\n     (0::'a) \\<le> b - a\\<rbrakk>\n    \\<Longrightarrow> a \\<le> b\n 2. (b - a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow>\n    (0::'a) \\<le> b - a\n 3. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a))\\<rbrakk>\n    \\<Longrightarrow> Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)\n 4. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply (drule_tac v = \"a\" in add_order_preserving_right)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>(b - a) \\<sqinter> (0::'a) = (0::'a);\n     (0::'a) + a \\<le> b - a + a\\<rbrakk>\n    \\<Longrightarrow> a \\<le> b\n 2. (b - a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow>\n    (0::'a) \\<le> b - a\n 3. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a))\\<rbrakk>\n    \\<Longrightarrow> Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)\n 4. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply (simp add: diff_minus add.assoc)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (b - a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow>\n    (0::'a) \\<le> b - a\n 2. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a))\\<rbrakk>\n    \\<Longrightarrow> Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)\n 3. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply (rule_tac y = \"inf (b - a) (0::'a)\" in order_trans)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (b - a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow>\n    (0::'a) \\<le> (b - a) \\<sqinter> (0::'a)\n 2. (b - a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow>\n    (b - a) \\<sqinter> (0::'a) \\<le> b - a\n 3. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a))\\<rbrakk>\n    \\<Longrightarrow> Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)\n 4. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. (b - a) \\<sqinter> (0::'a) = (0::'a) \\<Longrightarrow>\n    (b - a) \\<sqinter> (0::'a) \\<le> b - a\n 2. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a))\\<rbrakk>\n    \\<Longrightarrow> Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)\n 3. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. True \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<le> b - a\n 2. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a))\\<rbrakk>\n    \\<Longrightarrow> Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)\n 3. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> N; b \\<in> N; (b - a) \\<sqinter> (0::'a) \\<in> N;\n     Rep_N (Abs_N ((b - a) \\<sqinter> (0::'a))) =\n     Rep_N (Abs_N (0::'a))\\<rbrakk>\n    \\<Longrightarrow> Abs_N ((b - a) \\<sqinter> (0::'a)) = Abs_N (0::'a)\n 2. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "apply (simp add: Abs_N_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> N; b \\<in> N\\<rbrakk>\n    \\<Longrightarrow> (b - a) \\<sqinter> (0::'a) \\<in> N", "by (simp add: N_def)"], ["", "lemma [simp]: \"(1::'a N) * a = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 * a = a", "by (simp add: one_N_def times_N_def Abs_N_inverse Rep_N_inverse)"], ["", "lemma [simp]: \"a * (1::'a N) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * 1 = a", "by (simp add: one_N_def times_N_def Abs_N_inverse Rep_N_inverse)"], ["", "lemma [simp]: \"a l\\<rightarrow> a = (1::'a N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a l\\<rightarrow> a = 1", "by (simp add: impl_N_def one_N_def Abs_N_inverse Rep_N_inverse)"], ["", "lemma [simp]: \"a r\\<rightarrow> a = (1::'a N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a r\\<rightarrow> a = 1", "by (simp add: impr_N_def one_N_def Abs_N_inverse Rep_N_inverse)"], ["", "lemma impl_times: \"(a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * (b::'a N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b", "apply (simp add: impl_N_def impr_N_def times_N_def Abs_N_inverse Rep_N_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N (Rep_N b \\<sqinter> Rep_N a) = Abs_N (Rep_N a \\<sqinter> Rep_N b)", "apply (subgoal_tac \"inf (Rep_N b - Rep_N a + Rep_N a) (Rep_N a) = inf (Rep_N a - Rep_N b + Rep_N b) (Rep_N b)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N b - Rep_N a + Rep_N a) \\<sqinter> Rep_N a =\n    (Rep_N a - Rep_N b + Rep_N b) \\<sqinter> Rep_N b \\<Longrightarrow>\n    Abs_N (Rep_N b \\<sqinter> Rep_N a) = Abs_N (Rep_N a \\<sqinter> Rep_N b)\n 2. (Rep_N b - Rep_N a + Rep_N a) \\<sqinter> Rep_N a =\n    (Rep_N a - Rep_N b + Rep_N b) \\<sqinter> Rep_N b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N b - Rep_N a + Rep_N a) \\<sqinter> Rep_N a =\n    (Rep_N a - Rep_N b + Rep_N b) \\<sqinter> Rep_N b", "apply (subgoal_tac \"Rep_N b - Rep_N a + Rep_N a = Rep_N b \")"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N b - Rep_N a + Rep_N a = Rep_N b \\<Longrightarrow>\n    (Rep_N b - Rep_N a + Rep_N a) \\<sqinter> Rep_N a =\n    (Rep_N a - Rep_N b + Rep_N b) \\<sqinter> Rep_N b\n 2. Rep_N b - Rep_N a + Rep_N a = Rep_N b", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N b \\<sqinter> Rep_N a = Rep_N a \\<sqinter> Rep_N b\n 2. Rep_N b - Rep_N a + Rep_N a = Rep_N b", "apply (subgoal_tac \"Rep_N a - Rep_N b + Rep_N b = Rep_N a\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. Rep_N a - Rep_N b + Rep_N b = Rep_N a \\<Longrightarrow>\n    Rep_N b \\<sqinter> Rep_N a = Rep_N a \\<sqinter> Rep_N b\n 2. Rep_N a - Rep_N b + Rep_N b = Rep_N a\n 3. Rep_N b - Rep_N a + Rep_N a = Rep_N b", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. Rep_N b \\<sqinter> Rep_N a = Rep_N a \\<sqinter> Rep_N b\n 2. Rep_N a - Rep_N b + Rep_N b = Rep_N a\n 3. Rep_N b - Rep_N a + Rep_N a = Rep_N b", "apply (rule antisym)"], ["proof (prove)\ngoal (4 subgoals):\n 1. Rep_N b \\<sqinter> Rep_N a \\<le> Rep_N a \\<sqinter> Rep_N b\n 2. Rep_N a \\<sqinter> Rep_N b \\<le> Rep_N b \\<sqinter> Rep_N a\n 3. Rep_N a - Rep_N b + Rep_N b = Rep_N a\n 4. Rep_N b - Rep_N a + Rep_N a = Rep_N b", "by simp_all"], ["", "lemma impr_times: \"a * (a r\\<rightarrow> b) = (b::'a N) * (b r\\<rightarrow> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)", "apply (simp add: impr_N_def times_N_def Abs_N_inverse Rep_N_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N (Rep_N b \\<sqinter> Rep_N a) = Abs_N (Rep_N a \\<sqinter> Rep_N b)", "apply (subgoal_tac \"inf (Rep_N a + (- Rep_N a + Rep_N b)) (Rep_N a) = inf (Rep_N b + (- Rep_N b + Rep_N a)) (Rep_N b)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N a + (- Rep_N a + Rep_N b)) \\<sqinter> Rep_N a =\n    (Rep_N b + (- Rep_N b + Rep_N a)) \\<sqinter> Rep_N b \\<Longrightarrow>\n    Abs_N (Rep_N b \\<sqinter> Rep_N a) = Abs_N (Rep_N a \\<sqinter> Rep_N b)\n 2. (Rep_N a + (- Rep_N a + Rep_N b)) \\<sqinter> Rep_N a =\n    (Rep_N b + (- Rep_N b + Rep_N a)) \\<sqinter> Rep_N b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N a + (- Rep_N a + Rep_N b)) \\<sqinter> Rep_N a =\n    (Rep_N b + (- Rep_N b + Rep_N a)) \\<sqinter> Rep_N b", "apply (simp add: add.assoc [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N b \\<sqinter> Rep_N a = Rep_N a \\<sqinter> Rep_N b", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N b \\<sqinter> Rep_N a \\<le> Rep_N a \\<sqinter> Rep_N b\n 2. Rep_N a \\<sqinter> Rep_N b \\<le> Rep_N b \\<sqinter> Rep_N a", "by simp_all"], ["", "lemma impr_impl_times: \"(a l\\<rightarrow> b) * a = (a::'a N) * (a r\\<rightarrow> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "by (simp add: impl_N_def impr_N_def times_N_def Abs_N_inverse Rep_N_inverse)"], ["", "lemma impl_ded: \"(a::'a N) * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c", "apply (simp add: impl_N_def impr_N_def times_N_def Abs_N_inverse Rep_N_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N ((Rep_N c - (Rep_N a + Rep_N b)) \\<sqinter> (0::'a)) =\n    Abs_N\n     ((Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter> (0::'a))", "apply (subgoal_tac \"inf (Rep_N c - (Rep_N a + Rep_N b)) (0::'a) = inf (inf (Rep_N c - Rep_N b - Rep_N a) (- Rep_N a)) (0::'a)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N c - (Rep_N a + Rep_N b)) \\<sqinter> (0::'a) =\n    (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter>\n    (0::'a) \\<Longrightarrow>\n    Abs_N ((Rep_N c - (Rep_N a + Rep_N b)) \\<sqinter> (0::'a)) =\n    Abs_N\n     ((Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter> (0::'a))\n 2. (Rep_N c - (Rep_N a + Rep_N b)) \\<sqinter> (0::'a) =\n    (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter> (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N c - (Rep_N a + Rep_N b)) \\<sqinter> (0::'a) =\n    (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter> (0::'a)", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N c - (Rep_N a + Rep_N b)) \\<sqinter> (0::'a)\n    \\<le> (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter>\n          (0::'a)\n 2. (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter> (0::'a)\n    \\<le> (Rep_N c - (Rep_N a + Rep_N b)) \\<sqinter> (0::'a)", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N c - (Rep_N a + Rep_N b)) \\<sqinter> (0::'a)\n    \\<le> Rep_N c - Rep_N b - Rep_N a \\<and>\n    (Rep_N c - (Rep_N a + Rep_N b)) \\<sqinter> (0::'a) \\<le> - Rep_N a\n 2. (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter> (0::'a)\n    \\<le> Rep_N c - (Rep_N a + Rep_N b)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. (Rep_N c - (Rep_N a + Rep_N b)) \\<sqinter> (0::'a)\n    \\<le> Rep_N c - Rep_N b - Rep_N a\n 2. (Rep_N c - (Rep_N a + Rep_N b)) \\<sqinter> (0::'a) \\<le> - Rep_N a\n 3. (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter> (0::'a)\n    \\<le> Rep_N c - (Rep_N a + Rep_N b)", "apply (rule_tac y = \"Rep_N c - (Rep_N a + Rep_N b)\" in order_trans)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (Rep_N c - (Rep_N a + Rep_N b)) \\<sqinter> (0::'a)\n    \\<le> Rep_N c - (Rep_N a + Rep_N b)\n 2. Rep_N c - (Rep_N a + Rep_N b) \\<le> Rep_N c - Rep_N b - Rep_N a\n 3. (Rep_N c - (Rep_N a + Rep_N b)) \\<sqinter> (0::'a) \\<le> - Rep_N a\n 4. (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter> (0::'a)\n    \\<le> Rep_N c - (Rep_N a + Rep_N b)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. Rep_N c - (Rep_N a + Rep_N b) \\<le> Rep_N c - Rep_N b - Rep_N a\n 2. (Rep_N c - (Rep_N a + Rep_N b)) \\<sqinter> (0::'a) \\<le> - Rep_N a\n 3. (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter> (0::'a)\n    \\<le> Rep_N c - (Rep_N a + Rep_N b)", "apply (simp add: diff_minus minus_add add.assoc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N c - (Rep_N a + Rep_N b)) \\<sqinter> (0::'a) \\<le> - Rep_N a\n 2. (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter> (0::'a)\n    \\<le> Rep_N c - (Rep_N a + Rep_N b)", "apply (rule_tac y = \"0\" in order_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (Rep_N c - (Rep_N a + Rep_N b)) \\<sqinter> (0::'a) \\<le> (0::'a)\n 2. (0::'a) \\<le> - Rep_N a\n 3. (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter> (0::'a)\n    \\<le> Rep_N c - (Rep_N a + Rep_N b)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (0::'a) \\<le> - Rep_N a\n 2. (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter> (0::'a)\n    \\<le> Rep_N c - (Rep_N a + Rep_N b)", "apply (cut_tac x = a in \"Rep_N\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N a \\<in> N \\<Longrightarrow> (0::'a) \\<le> - Rep_N a\n 2. (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter> (0::'a)\n    \\<le> Rep_N c - (Rep_N a + Rep_N b)", "apply (simp add: N_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N a \\<le> (0::'a) \\<Longrightarrow> (0::'a) \\<le> - Rep_N a\n 2. (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter> (0::'a)\n    \\<le> Rep_N c - (Rep_N a + Rep_N b)", "apply (drule_tac u = 0 and v = \"- Rep_N a\" in add_order_preserving)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (0::'a) + Rep_N a + - Rep_N a\n    \\<le> (0::'a) + (0::'a) + - Rep_N a \\<Longrightarrow>\n    (0::'a) \\<le> - Rep_N a\n 2. (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter> (0::'a)\n    \\<le> Rep_N c - (Rep_N a + Rep_N b)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter> (0::'a)\n    \\<le> Rep_N c - (Rep_N a + Rep_N b)", "apply (rule_tac y = \"inf (Rep_N c - Rep_N b - Rep_N a) (- Rep_N a)\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a \\<sqinter> (0::'a)\n    \\<le> (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a\n 2. (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a\n    \\<le> Rep_N c - (Rep_N a + Rep_N b)", "apply (rule inf_le1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a\n    \\<le> Rep_N c - (Rep_N a + Rep_N b)", "apply (rule_tac y = \"Rep_N c - Rep_N b - Rep_N a\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N c - Rep_N b - Rep_N a) \\<sqinter> - Rep_N a\n    \\<le> Rep_N c - Rep_N b - Rep_N a\n 2. Rep_N c - Rep_N b - Rep_N a \\<le> Rep_N c - (Rep_N a + Rep_N b)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N c - Rep_N b - Rep_N a \\<le> Rep_N c - (Rep_N a + Rep_N b)", "by (simp add: diff_minus minus_add add.assoc)"], ["", "lemma impr_ded: \"(a::'a N) * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c", "apply (simp add: impr_N_def impr_N_def times_N_def Abs_N_inverse Rep_N_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N ((- (Rep_N a + Rep_N b) + Rep_N c) \\<sqinter> (0::'a)) =\n    Abs_N\n     ((- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n      (0::'a))", "apply (subgoal_tac \"inf (- (Rep_N a + Rep_N b) + Rep_N c) (0::'a) = inf (inf (- Rep_N b + (- Rep_N a + Rep_N c)) (- Rep_N b)) (0::'a)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- (Rep_N a + Rep_N b) + Rep_N c) \\<sqinter> (0::'a) =\n    (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n    (0::'a) \\<Longrightarrow>\n    Abs_N ((- (Rep_N a + Rep_N b) + Rep_N c) \\<sqinter> (0::'a)) =\n    Abs_N\n     ((- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n      (0::'a))\n 2. (- (Rep_N a + Rep_N b) + Rep_N c) \\<sqinter> (0::'a) =\n    (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n    (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- (Rep_N a + Rep_N b) + Rep_N c) \\<sqinter> (0::'a) =\n    (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n    (0::'a)", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- (Rep_N a + Rep_N b) + Rep_N c) \\<sqinter> (0::'a)\n    \\<le> (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter>\n          - Rep_N b \\<sqinter>\n          (0::'a)\n 2. (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n    (0::'a)\n    \\<le> (- (Rep_N a + Rep_N b) + Rep_N c) \\<sqinter> (0::'a)", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- (Rep_N a + Rep_N b) + Rep_N c) \\<sqinter> (0::'a)\n    \\<le> - Rep_N b + (- Rep_N a + Rep_N c) \\<and>\n    (- (Rep_N a + Rep_N b) + Rep_N c) \\<sqinter> (0::'a) \\<le> - Rep_N b\n 2. (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n    (0::'a)\n    \\<le> - (Rep_N a + Rep_N b) + Rep_N c", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. (- (Rep_N a + Rep_N b) + Rep_N c) \\<sqinter> (0::'a)\n    \\<le> - Rep_N b + (- Rep_N a + Rep_N c)\n 2. (- (Rep_N a + Rep_N b) + Rep_N c) \\<sqinter> (0::'a) \\<le> - Rep_N b\n 3. (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n    (0::'a)\n    \\<le> - (Rep_N a + Rep_N b) + Rep_N c", "apply (rule_tac y = \"- (Rep_N a + Rep_N b) + Rep_N c\" in order_trans)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (- (Rep_N a + Rep_N b) + Rep_N c) \\<sqinter> (0::'a)\n    \\<le> - (Rep_N a + Rep_N b) + Rep_N c\n 2. - (Rep_N a + Rep_N b) + Rep_N c \\<le> - Rep_N b + (- Rep_N a + Rep_N c)\n 3. (- (Rep_N a + Rep_N b) + Rep_N c) \\<sqinter> (0::'a) \\<le> - Rep_N b\n 4. (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n    (0::'a)\n    \\<le> - (Rep_N a + Rep_N b) + Rep_N c", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. - (Rep_N a + Rep_N b) + Rep_N c \\<le> - Rep_N b + (- Rep_N a + Rep_N c)\n 2. (- (Rep_N a + Rep_N b) + Rep_N c) \\<sqinter> (0::'a) \\<le> - Rep_N b\n 3. (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n    (0::'a)\n    \\<le> - (Rep_N a + Rep_N b) + Rep_N c", "apply (simp add: diff_minus minus_add add.assoc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- (Rep_N a + Rep_N b) + Rep_N c) \\<sqinter> (0::'a) \\<le> - Rep_N b\n 2. (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n    (0::'a)\n    \\<le> - (Rep_N a + Rep_N b) + Rep_N c", "apply (rule_tac y = \"0\" in order_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (- (Rep_N a + Rep_N b) + Rep_N c) \\<sqinter> (0::'a) \\<le> (0::'a)\n 2. (0::'a) \\<le> - Rep_N b\n 3. (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n    (0::'a)\n    \\<le> - (Rep_N a + Rep_N b) + Rep_N c", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (0::'a) \\<le> - Rep_N b\n 2. (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n    (0::'a)\n    \\<le> - (Rep_N a + Rep_N b) + Rep_N c", "apply (cut_tac x = b in \"Rep_N\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N b \\<in> N \\<Longrightarrow> (0::'a) \\<le> - Rep_N b\n 2. (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n    (0::'a)\n    \\<le> - (Rep_N a + Rep_N b) + Rep_N c", "apply (simp add: N_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N b \\<le> (0::'a) \\<Longrightarrow> (0::'a) \\<le> - Rep_N b\n 2. (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n    (0::'a)\n    \\<le> - (Rep_N a + Rep_N b) + Rep_N c", "apply (drule_tac u = 0 and v = \"- Rep_N b\" in add_order_preserving)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (0::'a) + Rep_N b + - Rep_N b\n    \\<le> (0::'a) + (0::'a) + - Rep_N b \\<Longrightarrow>\n    (0::'a) \\<le> - Rep_N b\n 2. (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n    (0::'a)\n    \\<le> - (Rep_N a + Rep_N b) + Rep_N c", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n    (0::'a)\n    \\<le> - (Rep_N a + Rep_N b) + Rep_N c", "apply (rule_tac y = \"inf (- Rep_N b + (- Rep_N a + Rep_N c)) (- Rep_N b)\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b \\<sqinter>\n    (0::'a)\n    \\<le> (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b\n 2. (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b\n    \\<le> - (Rep_N a + Rep_N b) + Rep_N c", "apply (rule inf_le1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b\n    \\<le> - (Rep_N a + Rep_N b) + Rep_N c", "apply (rule_tac y = \"- Rep_N b + (- Rep_N a + Rep_N c)\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- Rep_N b + (- Rep_N a + Rep_N c)) \\<sqinter> - Rep_N b\n    \\<le> - Rep_N b + (- Rep_N a + Rep_N c)\n 2. - Rep_N b + (- Rep_N a + Rep_N c) \\<le> - (Rep_N a + Rep_N b) + Rep_N c", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. - Rep_N b + (- Rep_N a + Rep_N c) \\<le> - (Rep_N a + Rep_N b) + Rep_N c", "by (simp add: diff_minus minus_add add.assoc)"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a N, pseudo_hoop_algebra_class)", "proof"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. 1 * a = a\n 4. \\<And>a. a * 1 = a\n 5. \\<And>a. a l\\<rightarrow> a = 1\n 6. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 7. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 8. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 9. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 10. \\<And>a. a r\\<rightarrow> a = 1\nA total of 13 subgoals...", "fix a"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. 1 * a = a\n 4. \\<And>a. a * 1 = a\n 5. \\<And>a. a l\\<rightarrow> a = 1\n 6. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 7. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 8. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 9. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 10. \\<And>a. a r\\<rightarrow> a = 1\nA total of 13 subgoals...", "show \"(1::'a N) * a = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 * a = a", "by simp"], ["proof (state)\nthis:\n  1 * a = a\n\ngoal (12 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. a * 1 = a\n 4. \\<And>a. a l\\<rightarrow> a = 1\n 5. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 6. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 7. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 8. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 9. \\<And>a. a r\\<rightarrow> a = 1\n 10. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\nA total of 12 subgoals...", "fix a"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. a * 1 = a\n 4. \\<And>a. a l\\<rightarrow> a = 1\n 5. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 6. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 7. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 8. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 9. \\<And>a. a r\\<rightarrow> a = 1\n 10. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\nA total of 12 subgoals...", "show \"a * (1::'a N) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * 1 = a", "by simp"], ["proof (state)\nthis:\n  a * 1 = a\n\ngoal (11 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. a l\\<rightarrow> a = 1\n 4. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 5. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 6. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 7. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 8. \\<And>a. a r\\<rightarrow> a = 1\n 9. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 10. \\<And>a b c.\n        a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\nA total of 11 subgoals...", "fix a"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. a l\\<rightarrow> a = 1\n 4. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 5. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 6. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 7. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 8. \\<And>a. a r\\<rightarrow> a = 1\n 9. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 10. \\<And>a b c.\n        a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\nA total of 11 subgoals...", "show \"a l\\<rightarrow> a = (1::'a N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a l\\<rightarrow> a = 1", "by simp"], ["proof (state)\nthis:\n  a l\\<rightarrow> a = 1\n\ngoal (10 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 4. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 6. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 7. \\<And>a. a r\\<rightarrow> a = 1\n 8. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 9. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 10. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "fix a"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 4. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 6. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 7. \\<And>a. a r\\<rightarrow> a = 1\n 8. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 9. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 10. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "show \"a r\\<rightarrow> a = (1::'a N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a r\\<rightarrow> a = 1", "by simp"], ["proof (state)\nthis:\n  a r\\<rightarrow> a = 1\n\ngoal (9 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 4. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 6. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 7. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 8. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 9. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 4. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 6. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 7. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 8. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 9. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "fix a b::\"'a N\""], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 4. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 6. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 7. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 8. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 9. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "show \"(a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b", "by (simp add: impl_times)"], ["proof (state)\nthis:\n  (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n\ngoal (8 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 7. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 8. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 7. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 8. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "fix a b::\"'a N\""], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 7. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 8. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "show \"a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)", "by (simp add: impr_times)"], ["proof (state)\nthis:\n  a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n\ngoal (7 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 7. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 7. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "fix a b::\"'a N\""], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 7. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "show \"(a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "by (simp add: impr_impl_times)"], ["proof (state)\nthis:\n  (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\n\ngoal (6 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c", "fix a b c::\"'a N\""], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c", "show \"a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c", "by (simp add: impl_ded)"], ["proof (state)\nthis:\n  a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n\ngoal (5 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 5. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c", "fix a b c::\"'a N\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 5. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c", "show \"a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c", "by (simp add: impr_ded)"], ["proof (state)\nthis:\n  a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n\ngoal (4 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "fix a b::\"'a N\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "show \"(a \\<le> b) = (a l\\<rightarrow> b = 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<le> b) = (a l\\<rightarrow> b = 1)", "by (simp add: order_N_def)"], ["proof (state)\nthis:\n  (a \\<le> b) = (a l\\<rightarrow> b = 1)\n\ngoal (3 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "fix a b::\"'a N\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "show \"(a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)", "by (simp add: strict_order_N_def)"], ["proof (state)\nthis:\n  (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n\ngoal (2 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "fix a b::\"'a N\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "show \"a \\<sqinter> b = (a l\\<rightarrow> b) * a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sqinter> b = (a l\\<rightarrow> b) * a", "by (simp add: inf_N_def)"], ["proof (state)\nthis:\n  a \\<sqinter> b = (a l\\<rightarrow> b) * a\n\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "fix a b::\"'a N\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "show \"a \\<sqinter> b = a * (a r\\<rightarrow> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "by (simp add: inf_N_def impr_impl_times)"], ["proof (state)\nthis:\n  a \\<sqinter> b = a * (a r\\<rightarrow> b)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma Rep_N_inf: \"Rep_N ((a::'a::lgroup N) \\<sqinter> b) = (Rep_N a) \\<sqinter> (Rep_N b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N (a \\<sqinter> b) = Rep_N a \\<sqinter> Rep_N b", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N (a \\<sqinter> b) \\<le> Rep_N a \\<sqinter> Rep_N b\n 2. Rep_N a \\<sqinter> Rep_N b \\<le> Rep_N (a \\<sqinter> b)", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N (a \\<sqinter> b) \\<le> Rep_N a \\<and>\n    Rep_N (a \\<sqinter> b) \\<le> Rep_N b\n 2. Rep_N a \\<sqinter> Rep_N b \\<le> Rep_N (a \\<sqinter> b)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. Rep_N (a \\<sqinter> b) \\<le> Rep_N a\n 2. Rep_N (a \\<sqinter> b) \\<le> Rep_N b\n 3. Rep_N a \\<sqinter> Rep_N b \\<le> Rep_N (a \\<sqinter> b)", "apply (simp add: order_Rep_N [THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N (a \\<sqinter> b) \\<le> Rep_N b\n 2. Rep_N a \\<sqinter> Rep_N b \\<le> Rep_N (a \\<sqinter> b)", "apply (simp add: order_Rep_N [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N a \\<sqinter> Rep_N b \\<le> Rep_N (a \\<sqinter> b)", "apply (subgoal_tac \"inf (Rep_N a) (Rep_N b) \\<in> N\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N a \\<sqinter> Rep_N b \\<in> N \\<Longrightarrow>\n    Rep_N a \\<sqinter> Rep_N b \\<le> Rep_N (a \\<sqinter> b)\n 2. Rep_N a \\<sqinter> Rep_N b \\<in> N", "apply (subst order_Abs_N)"], ["proof (prove)\ngoal (4 subgoals):\n 1. Rep_N a \\<sqinter> Rep_N b \\<in> N \\<Longrightarrow>\n    Rep_N a \\<sqinter> Rep_N b \\<in> N\n 2. Rep_N a \\<sqinter> Rep_N b \\<in> N \\<Longrightarrow>\n    Rep_N (a \\<sqinter> b) \\<in> N\n 3. Rep_N a \\<sqinter> Rep_N b \\<in> N \\<Longrightarrow>\n    Abs_N (Rep_N a \\<sqinter> Rep_N b) \\<le> Abs_N (Rep_N (a \\<sqinter> b))\n 4. Rep_N a \\<sqinter> Rep_N b \\<in> N", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. Rep_N a \\<sqinter> Rep_N b \\<in> N \\<Longrightarrow>\n    Rep_N (a \\<sqinter> b) \\<in> N\n 2. Rep_N a \\<sqinter> Rep_N b \\<in> N \\<Longrightarrow>\n    Abs_N (Rep_N a \\<sqinter> Rep_N b) \\<le> Abs_N (Rep_N (a \\<sqinter> b))\n 3. Rep_N a \\<sqinter> Rep_N b \\<in> N", "apply (cut_tac x = \"a \\<sqinter> b\" in Rep_N)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Rep_N a \\<sqinter> Rep_N b \\<in> N;\n     Rep_N (a \\<sqinter> b) \\<in> N\\<rbrakk>\n    \\<Longrightarrow> Rep_N (a \\<sqinter> b) \\<in> N\n 2. Rep_N a \\<sqinter> Rep_N b \\<in> N \\<Longrightarrow>\n    Abs_N (Rep_N a \\<sqinter> Rep_N b) \\<le> Abs_N (Rep_N (a \\<sqinter> b))\n 3. Rep_N a \\<sqinter> Rep_N b \\<in> N", "apply (simp add: N_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N a \\<sqinter> Rep_N b \\<in> N \\<Longrightarrow>\n    Abs_N (Rep_N a \\<sqinter> Rep_N b) \\<le> Abs_N (Rep_N (a \\<sqinter> b))\n 2. Rep_N a \\<sqinter> Rep_N b \\<in> N", "apply (simp add: Rep_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N a \\<sqinter> Rep_N b \\<in> N \\<Longrightarrow>\n    Abs_N (Rep_N a \\<sqinter> Rep_N b) \\<le> a \\<and>\n    Abs_N (Rep_N a \\<sqinter> Rep_N b) \\<le> b\n 2. Rep_N a \\<sqinter> Rep_N b \\<in> N", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. Rep_N a \\<sqinter> Rep_N b \\<in> N \\<Longrightarrow>\n    Abs_N (Rep_N a \\<sqinter> Rep_N b) \\<le> a\n 2. Rep_N a \\<sqinter> Rep_N b \\<in> N \\<Longrightarrow>\n    Abs_N (Rep_N a \\<sqinter> Rep_N b) \\<le> b\n 3. Rep_N a \\<sqinter> Rep_N b \\<in> N", "apply (subst order_Rep_N)"], ["proof (prove)\ngoal (3 subgoals):\n 1. Rep_N a \\<sqinter> Rep_N b \\<in> N \\<Longrightarrow>\n    Rep_N (Abs_N (Rep_N a \\<sqinter> Rep_N b)) \\<le> Rep_N a\n 2. Rep_N a \\<sqinter> Rep_N b \\<in> N \\<Longrightarrow>\n    Abs_N (Rep_N a \\<sqinter> Rep_N b) \\<le> b\n 3. Rep_N a \\<sqinter> Rep_N b \\<in> N", "apply (simp add: Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N a \\<sqinter> Rep_N b \\<in> N \\<Longrightarrow>\n    Abs_N (Rep_N a \\<sqinter> Rep_N b) \\<le> b\n 2. Rep_N a \\<sqinter> Rep_N b \\<in> N", "apply (subst order_Rep_N)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N a \\<sqinter> Rep_N b \\<in> N \\<Longrightarrow>\n    Rep_N (Abs_N (Rep_N a \\<sqinter> Rep_N b)) \\<le> Rep_N b\n 2. Rep_N a \\<sqinter> Rep_N b \\<in> N", "apply (simp add: Abs_N_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N a \\<sqinter> Rep_N b \\<in> N", "apply (simp add: N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N a \\<sqinter> Rep_N b \\<le> (0::'a)", "apply (rule_tac y = \"Rep_N a\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N a \\<sqinter> Rep_N b \\<le> Rep_N a\n 2. Rep_N a \\<le> (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N a \\<le> (0::'a)", "apply (cut_tac x = a in Rep_N)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N a \\<in> N \\<Longrightarrow> Rep_N a \\<le> (0::'a)", "by (simp add: N_def)"], ["", "context lgroup begin"], ["", "lemma sup_inf_distrib2_lgroup: \"(b \\<sqinter> c) \\<squnion> a = (b \\<squnion> a) \\<sqinter> (c \\<squnion> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<sqinter> c \\<squnion> a =\n    (b \\<squnion> a) \\<sqinter> (c \\<squnion> a)", "by (rule sup_inf_distrib2)"], ["", "lemma inf_sup_distrib2_lgroup: \"(b \\<squnion> c) \\<sqinter> a = (b \\<sqinter> a) \\<squnion> (c \\<sqinter> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b \\<squnion> c) \\<sqinter> a = b \\<sqinter> a \\<squnion> c \\<sqinter> a", "by (rule inf_sup_distrib2)"], ["", "end"], ["", "instantiation \"N\" :: (lgroup) cancel_product_pseudo_hoop_algebra\nbegin"], ["", "lemma cancel_times_left: \"(a::'a N) * b = a * c \\<Longrightarrow> b = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b = a * c \\<Longrightarrow> b = c", "apply (simp add: times_N_def Abs_N_inverse Rep_N_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N (Rep_N a + Rep_N b) = Abs_N (Rep_N a + Rep_N c) \\<Longrightarrow>\n    b = c", "apply (subgoal_tac \"Rep_N (Abs_N (Rep_N a + Rep_N b)) = Rep_N (Abs_N (Rep_N a + Rep_N c))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Abs_N (Rep_N a + Rep_N b) = Abs_N (Rep_N a + Rep_N c);\n     Rep_N (Abs_N (Rep_N a + Rep_N b)) =\n     Rep_N (Abs_N (Rep_N a + Rep_N c))\\<rbrakk>\n    \\<Longrightarrow> b = c\n 2. Abs_N (Rep_N a + Rep_N b) = Abs_N (Rep_N a + Rep_N c) \\<Longrightarrow>\n    Rep_N (Abs_N (Rep_N a + Rep_N b)) = Rep_N (Abs_N (Rep_N a + Rep_N c))", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Rep_N (Abs_N (Rep_N a + Rep_N b)) =\n             Rep_N (Abs_N (Rep_N a + Rep_N c));\n     True\\<rbrakk>\n    \\<Longrightarrow> b = c\n 2. Abs_N (Rep_N a + Rep_N b) = Abs_N (Rep_N a + Rep_N c) \\<Longrightarrow>\n    Rep_N (Abs_N (Rep_N a + Rep_N b)) = Rep_N (Abs_N (Rep_N a + Rep_N c))", "apply (simp add: Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N b = Rep_N c \\<Longrightarrow> b = c\n 2. Abs_N (Rep_N a + Rep_N b) = Abs_N (Rep_N a + Rep_N c) \\<Longrightarrow>\n    Rep_N (Abs_N (Rep_N a + Rep_N b)) = Rep_N (Abs_N (Rep_N a + Rep_N c))", "apply (subgoal_tac \"Abs_N (Rep_N b) = Abs_N (Rep_N c)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Rep_N b = Rep_N c; Abs_N (Rep_N b) = Abs_N (Rep_N c)\\<rbrakk>\n    \\<Longrightarrow> b = c\n 2. Rep_N b = Rep_N c \\<Longrightarrow> Abs_N (Rep_N b) = Abs_N (Rep_N c)\n 3. Abs_N (Rep_N a + Rep_N b) = Abs_N (Rep_N a + Rep_N c) \\<Longrightarrow>\n    Rep_N (Abs_N (Rep_N a + Rep_N b)) = Rep_N (Abs_N (Rep_N a + Rep_N c))", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Abs_N (Rep_N b) = Abs_N (Rep_N c); True\\<rbrakk>\n    \\<Longrightarrow> b = c\n 2. Rep_N b = Rep_N c \\<Longrightarrow> Abs_N (Rep_N b) = Abs_N (Rep_N c)\n 3. Abs_N (Rep_N a + Rep_N b) = Abs_N (Rep_N a + Rep_N c) \\<Longrightarrow>\n    Rep_N (Abs_N (Rep_N a + Rep_N b)) = Rep_N (Abs_N (Rep_N a + Rep_N c))", "apply (simp add: Rep_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N b = Rep_N c \\<Longrightarrow> Abs_N (Rep_N b) = Abs_N (Rep_N c)\n 2. Abs_N (Rep_N a + Rep_N b) = Abs_N (Rep_N a + Rep_N c) \\<Longrightarrow>\n    Rep_N (Abs_N (Rep_N a + Rep_N b)) = Rep_N (Abs_N (Rep_N a + Rep_N c))", "by simp_all"], ["", "lemma cancel_times_right: \"b * (a::'a N) = c * a \\<Longrightarrow> b = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b * a = c * a \\<Longrightarrow> b = c", "apply (simp add: times_N_def Abs_N_inverse Rep_N_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N (Rep_N b + Rep_N a) = Abs_N (Rep_N c + Rep_N a) \\<Longrightarrow>\n    b = c", "apply (subgoal_tac \"Rep_N (Abs_N (Rep_N b + Rep_N a)) = Rep_N (Abs_N (Rep_N c + Rep_N a))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Abs_N (Rep_N b + Rep_N a) = Abs_N (Rep_N c + Rep_N a);\n     Rep_N (Abs_N (Rep_N b + Rep_N a)) =\n     Rep_N (Abs_N (Rep_N c + Rep_N a))\\<rbrakk>\n    \\<Longrightarrow> b = c\n 2. Abs_N (Rep_N b + Rep_N a) = Abs_N (Rep_N c + Rep_N a) \\<Longrightarrow>\n    Rep_N (Abs_N (Rep_N b + Rep_N a)) = Rep_N (Abs_N (Rep_N c + Rep_N a))", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Rep_N (Abs_N (Rep_N b + Rep_N a)) =\n             Rep_N (Abs_N (Rep_N c + Rep_N a));\n     True\\<rbrakk>\n    \\<Longrightarrow> b = c\n 2. Abs_N (Rep_N b + Rep_N a) = Abs_N (Rep_N c + Rep_N a) \\<Longrightarrow>\n    Rep_N (Abs_N (Rep_N b + Rep_N a)) = Rep_N (Abs_N (Rep_N c + Rep_N a))", "apply (simp add: Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N b = Rep_N c \\<Longrightarrow> b = c\n 2. Abs_N (Rep_N b + Rep_N a) = Abs_N (Rep_N c + Rep_N a) \\<Longrightarrow>\n    Rep_N (Abs_N (Rep_N b + Rep_N a)) = Rep_N (Abs_N (Rep_N c + Rep_N a))", "apply (subgoal_tac \"Abs_N (Rep_N b) = Abs_N (Rep_N c)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Rep_N b = Rep_N c; Abs_N (Rep_N b) = Abs_N (Rep_N c)\\<rbrakk>\n    \\<Longrightarrow> b = c\n 2. Rep_N b = Rep_N c \\<Longrightarrow> Abs_N (Rep_N b) = Abs_N (Rep_N c)\n 3. Abs_N (Rep_N b + Rep_N a) = Abs_N (Rep_N c + Rep_N a) \\<Longrightarrow>\n    Rep_N (Abs_N (Rep_N b + Rep_N a)) = Rep_N (Abs_N (Rep_N c + Rep_N a))", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Abs_N (Rep_N b) = Abs_N (Rep_N c); True\\<rbrakk>\n    \\<Longrightarrow> b = c\n 2. Rep_N b = Rep_N c \\<Longrightarrow> Abs_N (Rep_N b) = Abs_N (Rep_N c)\n 3. Abs_N (Rep_N b + Rep_N a) = Abs_N (Rep_N c + Rep_N a) \\<Longrightarrow>\n    Rep_N (Abs_N (Rep_N b + Rep_N a)) = Rep_N (Abs_N (Rep_N c + Rep_N a))", "apply (simp add: Rep_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N b = Rep_N c \\<Longrightarrow> Abs_N (Rep_N b) = Abs_N (Rep_N c)\n 2. Abs_N (Rep_N b + Rep_N a) = Abs_N (Rep_N c + Rep_N a) \\<Longrightarrow>\n    Rep_N (Abs_N (Rep_N b + Rep_N a)) = Rep_N (Abs_N (Rep_N c + Rep_N a))", "by simp_all"], ["", "lemma prod_1: \"((a::'a N) l\\<rightarrow> b) l\\<rightarrow> c \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a l\\<rightarrow> b) l\\<rightarrow> c\n    \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c", "apply (unfold impl_N_def times_N_def Abs_N_inverse Rep_N_inverse order_N_def one_N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     ((Rep_N\n        (Abs_N\n          ((Rep_N c -\n            Rep_N\n             (Abs_N\n               ((Rep_N c -\n                 Rep_N\n                  (Abs_N\n                    ((Rep_N a - Rep_N b) \\<sqinter> (0::'a)))) \\<sqinter>\n                (0::'a)))) \\<sqinter>\n           (0::'a))) -\n       Rep_N\n        (Abs_N\n          ((Rep_N c -\n            Rep_N\n             (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)))) \\<sqinter>\n           (0::'a)))) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N c -\n     Rep_N\n      (Abs_N\n        ((Rep_N c -\n          Rep_N (Abs_N ((Rep_N a - Rep_N b) \\<sqinter> (0::'a)))) \\<sqinter>\n         (0::'a)))) \\<sqinter>\n    (0::'a)\n    \\<in> N\n 2. Abs_N\n     (((Rep_N c -\n        Rep_N\n         (Abs_N\n           ((Rep_N c -\n             Rep_N\n              (Abs_N ((Rep_N a - Rep_N b) \\<sqinter> (0::'a)))) \\<sqinter>\n            (0::'a)))) \\<sqinter>\n       (0::'a) -\n       Rep_N\n        (Abs_N\n          ((Rep_N c -\n            Rep_N\n             (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)))) \\<sqinter>\n           (0::'a)))) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     (((Rep_N c -\n        Rep_N\n         (Abs_N\n           ((Rep_N c -\n             Rep_N\n              (Abs_N ((Rep_N a - Rep_N b) \\<sqinter> (0::'a)))) \\<sqinter>\n            (0::'a)))) \\<sqinter>\n       (0::'a) -\n       Rep_N\n        (Abs_N\n          ((Rep_N c -\n            Rep_N\n             (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)))) \\<sqinter>\n           (0::'a)))) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N c -\n     Rep_N (Abs_N ((Rep_N a - Rep_N b) \\<sqinter> (0::'a)))) \\<sqinter>\n    (0::'a)\n    \\<in> N\n 2. Abs_N\n     (((Rep_N c -\n        (Rep_N c -\n         Rep_N (Abs_N ((Rep_N a - Rep_N b) \\<sqinter> (0::'a)))) \\<sqinter>\n        (0::'a)) \\<sqinter>\n       (0::'a) -\n       Rep_N\n        (Abs_N\n          ((Rep_N c -\n            Rep_N\n             (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)))) \\<sqinter>\n           (0::'a)))) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     (((Rep_N c -\n        (Rep_N c -\n         Rep_N (Abs_N ((Rep_N a - Rep_N b) \\<sqinter> (0::'a)))) \\<sqinter>\n        (0::'a)) \\<sqinter>\n       (0::'a) -\n       Rep_N\n        (Abs_N\n          ((Rep_N c -\n            Rep_N\n             (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)))) \\<sqinter>\n           (0::'a)))) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N a - Rep_N b) \\<sqinter> (0::'a) \\<in> N\n 2. Abs_N\n     (((Rep_N c -\n        (Rep_N c - (Rep_N a - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n        (0::'a)) \\<sqinter>\n       (0::'a) -\n       Rep_N\n        (Abs_N\n          ((Rep_N c -\n            Rep_N\n             (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)))) \\<sqinter>\n           (0::'a)))) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     (((Rep_N c -\n        (Rep_N c - (Rep_N a - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n        (0::'a)) \\<sqinter>\n       (0::'a) -\n       Rep_N\n        (Abs_N\n          ((Rep_N c -\n            Rep_N\n             (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)))) \\<sqinter>\n           (0::'a)))) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N c -\n     Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)))) \\<sqinter>\n    (0::'a)\n    \\<in> N\n 2. Abs_N\n     (((Rep_N c -\n        (Rep_N c - (Rep_N a - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n        (0::'a)) \\<sqinter>\n       (0::'a) -\n       (Rep_N c -\n        Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)))) \\<sqinter>\n       (0::'a)) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     (((Rep_N c -\n        (Rep_N c - (Rep_N a - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n        (0::'a)) \\<sqinter>\n       (0::'a) -\n       (Rep_N c -\n        Rep_N (Abs_N ((Rep_N b - Rep_N a) \\<sqinter> (0::'a)))) \\<sqinter>\n       (0::'a)) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N b - Rep_N a) \\<sqinter> (0::'a) \\<in> N\n 2. Abs_N\n     (((Rep_N c -\n        (Rep_N c - (Rep_N a - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n        (0::'a)) \\<sqinter>\n       (0::'a) -\n       (Rep_N c - (Rep_N b - Rep_N a) \\<sqinter> (0::'a)) \\<sqinter>\n       (0::'a)) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     (((Rep_N c -\n        (Rep_N c - (Rep_N a - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n        (0::'a)) \\<sqinter>\n       (0::'a) -\n       (Rep_N c - (Rep_N b - Rep_N a) \\<sqinter> (0::'a)) \\<sqinter>\n       (0::'a)) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply (subgoal_tac \"inf (inf (Rep_N c - inf (Rep_N c - inf (Rep_N a - Rep_N b) 0) 0) 0 - inf (Rep_N c - inf (Rep_N b - Rep_N a) 0) 0) 0 = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((Rep_N c -\n      (Rep_N c - (Rep_N a - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n      (0::'a)) \\<sqinter>\n     (0::'a) -\n     (Rep_N c - (Rep_N b - Rep_N a) \\<sqinter> (0::'a)) \\<sqinter>\n     (0::'a)) \\<sqinter>\n    (0::'a) =\n    (0::'a) \\<Longrightarrow>\n    Abs_N\n     (((Rep_N c -\n        (Rep_N c - (Rep_N a - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n        (0::'a)) \\<sqinter>\n       (0::'a) -\n       (Rep_N c - (Rep_N b - Rep_N a) \\<sqinter> (0::'a)) \\<sqinter>\n       (0::'a)) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)\n 2. ((Rep_N c -\n      (Rep_N c - (Rep_N a - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n      (0::'a)) \\<sqinter>\n     (0::'a) -\n     (Rep_N c - (Rep_N b - Rep_N a) \\<sqinter> (0::'a)) \\<sqinter>\n     (0::'a)) \\<sqinter>\n    (0::'a) =\n    (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((Rep_N c -\n      (Rep_N c - (Rep_N a - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n      (0::'a)) \\<sqinter>\n     (0::'a) -\n     (Rep_N c - (Rep_N b - Rep_N a) \\<sqinter> (0::'a)) \\<sqinter>\n     (0::'a)) \\<sqinter>\n    (0::'a) =\n    (0::'a)", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((Rep_N c -\n      (Rep_N c - (Rep_N a - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n      (0::'a)) \\<sqinter>\n     (0::'a) -\n     (Rep_N c - (Rep_N b - Rep_N a) \\<sqinter> (0::'a)) \\<sqinter>\n     (0::'a)) \\<sqinter>\n    (0::'a)\n    \\<le> (0::'a)\n 2. (0::'a)\n    \\<le> ((Rep_N c -\n            (Rep_N c - (Rep_N a - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n            (0::'a)) \\<sqinter>\n           (0::'a) -\n           (Rep_N c - (Rep_N b - Rep_N a) \\<sqinter> (0::'a)) \\<sqinter>\n           (0::'a)) \\<sqinter>\n          (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a)\n    \\<le> ((Rep_N c -\n            (Rep_N c - (Rep_N a - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n            (0::'a)) \\<sqinter>\n           (0::'a) -\n           (Rep_N c - (Rep_N b - Rep_N a) \\<sqinter> (0::'a)) \\<sqinter>\n           (0::'a)) \\<sqinter>\n          (0::'a)", "apply (rule inf_greatest)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (0::'a)\n    \\<le> (Rep_N c -\n           (Rep_N c - (Rep_N a - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n           (0::'a)) \\<sqinter>\n          (0::'a) -\n          (Rep_N c - (Rep_N b - Rep_N a) \\<sqinter> (0::'a)) \\<sqinter>\n          (0::'a)\n 2. (0::'a) \\<le> (0::'a)", "apply (subst diff_minus)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (0::'a)\n    \\<le> (Rep_N c +\n           - ((Rep_N c - (Rep_N a - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n              (0::'a))) \\<sqinter>\n          (0::'a) -\n          (Rep_N c - (Rep_N b - Rep_N a) \\<sqinter> (0::'a)) \\<sqinter>\n          (0::'a)\n 2. (0::'a) \\<le> (0::'a)", "apply (subst diff_minus)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (0::'a)\n    \\<le> (Rep_N c +\n           - ((Rep_N c +\n               - ((Rep_N a - Rep_N b) \\<sqinter> (0::'a))) \\<sqinter>\n              (0::'a))) \\<sqinter>\n          (0::'a) -\n          (Rep_N c - (Rep_N b - Rep_N a) \\<sqinter> (0::'a)) \\<sqinter>\n          (0::'a)\n 2. (0::'a) \\<le> (0::'a)", "apply (subst diff_minus)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (0::'a)\n    \\<le> (Rep_N c +\n           - ((Rep_N c +\n               - ((Rep_N a + - Rep_N b) \\<sqinter> (0::'a))) \\<sqinter>\n              (0::'a))) \\<sqinter>\n          (0::'a) -\n          (Rep_N c - (Rep_N b - Rep_N a) \\<sqinter> (0::'a)) \\<sqinter>\n          (0::'a)\n 2. (0::'a) \\<le> (0::'a)", "apply (subst diff_minus)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (0::'a)\n    \\<le> (Rep_N c +\n           - ((Rep_N c +\n               - ((Rep_N a + - Rep_N b) \\<sqinter> (0::'a))) \\<sqinter>\n              (0::'a))) \\<sqinter>\n          (0::'a) +\n          - ((Rep_N c - (Rep_N b - Rep_N a) \\<sqinter> (0::'a)) \\<sqinter>\n             (0::'a))\n 2. (0::'a) \\<le> (0::'a)", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (0::'a) +\n    - (- ((Rep_N c - (Rep_N b - Rep_N a) \\<sqinter> (0::'a)) \\<sqinter>\n          (0::'a)))\n    \\<le> (Rep_N c +\n           - ((Rep_N c +\n               - ((Rep_N a + - Rep_N b) \\<sqinter> (0::'a))) \\<sqinter>\n              (0::'a))) \\<sqinter>\n          (0::'a)\n 2. (0::'a) \\<le> (0::'a)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N c - (Rep_N b - Rep_N a) \\<squnion> Rep_N c) \\<sqinter> (0::'a)\n    \\<le> (Rep_N c + - (Rep_N c + - (Rep_N a + - Rep_N b))) \\<sqinter>\n          (0::'a) \\<squnion>\n          Rep_N c", "apply (simp add: diff_minus minus_add)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N c + (Rep_N a + - Rep_N b) \\<squnion> Rep_N c) \\<sqinter> (0::'a)\n    \\<le> (Rep_N c + (Rep_N a + - Rep_N b + - Rep_N c)) \\<sqinter>\n          (0::'a) \\<squnion>\n          Rep_N c", "(*apply (subst sup_inf_distrib2) - why it does not work*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N c + (Rep_N a + - Rep_N b) \\<squnion> Rep_N c) \\<sqinter> (0::'a)\n    \\<le> (Rep_N c + (Rep_N a + - Rep_N b + - Rep_N c)) \\<sqinter>\n          (0::'a) \\<squnion>\n          Rep_N c", "apply (subst sup_inf_distrib2_lgroup)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N c + (Rep_N a + - Rep_N b) \\<squnion> Rep_N c) \\<sqinter> (0::'a)\n    \\<le> (Rep_N c + (Rep_N a + - Rep_N b + - Rep_N c) \\<squnion>\n           Rep_N c) \\<sqinter>\n          ((0::'a) \\<squnion> Rep_N c)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N c + (Rep_N a + - Rep_N b) \\<squnion> Rep_N c) \\<sqinter> (0::'a)\n    \\<le> Rep_N c + (Rep_N a + - Rep_N b + - Rep_N c) \\<squnion> Rep_N c", "(*apply safe*)\n  (*apply (subst inf_sup_distrib2) - why it does not work*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N c + (Rep_N a + - Rep_N b) \\<squnion> Rep_N c) \\<sqinter> (0::'a)\n    \\<le> Rep_N c + (Rep_N a + - Rep_N b + - Rep_N c) \\<squnion> Rep_N c", "apply (subst inf_sup_distrib2_lgroup)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N c + (Rep_N a + - Rep_N b)) \\<sqinter> (0::'a) \\<squnion>\n    Rep_N c \\<sqinter> (0::'a)\n    \\<le> Rep_N c + (Rep_N a + - Rep_N b + - Rep_N c) \\<squnion> Rep_N c", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N c + (Rep_N a + - Rep_N b)) \\<sqinter> (0::'a)\n    \\<le> Rep_N c + (Rep_N a + - Rep_N b + - Rep_N c) \\<squnion> Rep_N c", "(*apply safe*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N c + (Rep_N a + - Rep_N b)) \\<sqinter> (0::'a)\n    \\<le> Rep_N c + (Rep_N a + - Rep_N b + - Rep_N c) \\<squnion> Rep_N c", "apply (rule_tac y=\"Rep_N c + (Rep_N a + - Rep_N b + - Rep_N c)\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N c + (Rep_N a + - Rep_N b)) \\<sqinter> (0::'a)\n    \\<le> Rep_N c + (Rep_N a + - Rep_N b + - Rep_N c)\n 2. Rep_N c + (Rep_N a + - Rep_N b + - Rep_N c)\n    \\<le> Rep_N c + (Rep_N a + - Rep_N b + - Rep_N c) \\<squnion> Rep_N c", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N c + (Rep_N a + - Rep_N b)) \\<sqinter> (0::'a)\n    \\<le> Rep_N c + (Rep_N a + - Rep_N b + - Rep_N c)", "apply (rule_tac y=\"Rep_N c + (Rep_N a + - Rep_N b)\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N c + (Rep_N a + - Rep_N b)) \\<sqinter> (0::'a)\n    \\<le> Rep_N c + (Rep_N a + - Rep_N b)\n 2. Rep_N c + (Rep_N a + - Rep_N b)\n    \\<le> Rep_N c + (Rep_N a + - Rep_N b + - Rep_N c)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N c + (Rep_N a + - Rep_N b)\n    \\<le> Rep_N c + (Rep_N a + - Rep_N b + - Rep_N c)", "apply (rule add_order_preserving_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N a + - Rep_N b \\<le> Rep_N a + - Rep_N b + - Rep_N c", "apply (simp add: add.assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N a + - Rep_N b \\<le> Rep_N a + (- Rep_N b + - Rep_N c)", "apply (rule add_order_preserving_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. - Rep_N b \\<le> - Rep_N b + - Rep_N c", "apply (rule left_move_to_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. - (- Rep_N b) + - Rep_N b \\<le> - Rep_N c", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> - Rep_N c", "apply (cut_tac x = c in Rep_N)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N c \\<in> N \\<Longrightarrow> (0::'a) \\<le> - Rep_N c", "apply (simp add: N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N c \\<le> (0::'a) \\<Longrightarrow> (0::'a) \\<le> - Rep_N c", "apply (rule minus_order)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N c \\<le> (0::'a) \\<Longrightarrow> - (- Rep_N c) \\<le> - (0::'a)", "by simp"], ["", "lemma prod_2: \"((a::'a N) r\\<rightarrow> b) r\\<rightarrow> c \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a r\\<rightarrow> b) r\\<rightarrow> c\n    \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c", "apply (unfold impr_N_def times_N_def Abs_N_inverse Rep_N_inverse right_lesseq one_N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     ((- Rep_N\n          (Abs_N\n            ((- Rep_N (Abs_N ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a))) +\n              Rep_N c) \\<sqinter>\n             (0::'a))) +\n       Rep_N\n        (Abs_N\n          ((- Rep_N\n               (Abs_N\n                 ((- Rep_N\n                      (Abs_N ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a))) +\n                   Rep_N c) \\<sqinter>\n                  (0::'a))) +\n            Rep_N c) \\<sqinter>\n           (0::'a)))) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- Rep_N (Abs_N ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a))) +\n     Rep_N c) \\<sqinter>\n    (0::'a)\n    \\<in> N\n 2. Abs_N\n     ((- ((- Rep_N (Abs_N ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a))) +\n           Rep_N c) \\<sqinter>\n          (0::'a)) +\n       Rep_N\n        (Abs_N\n          ((- Rep_N\n               (Abs_N\n                 ((- Rep_N\n                      (Abs_N ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a))) +\n                   Rep_N c) \\<sqinter>\n                  (0::'a))) +\n            Rep_N c) \\<sqinter>\n           (0::'a)))) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     ((- ((- Rep_N (Abs_N ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a))) +\n           Rep_N c) \\<sqinter>\n          (0::'a)) +\n       Rep_N\n        (Abs_N\n          ((- Rep_N\n               (Abs_N\n                 ((- Rep_N\n                      (Abs_N ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a))) +\n                   Rep_N c) \\<sqinter>\n                  (0::'a))) +\n            Rep_N c) \\<sqinter>\n           (0::'a)))) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- Rep_N a + Rep_N b) \\<sqinter> (0::'a) \\<in> N\n 2. Abs_N\n     ((- ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) +\n           Rep_N c) \\<sqinter>\n          (0::'a)) +\n       Rep_N\n        (Abs_N\n          ((- Rep_N\n               (Abs_N\n                 ((- Rep_N\n                      (Abs_N ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a))) +\n                   Rep_N c) \\<sqinter>\n                  (0::'a))) +\n            Rep_N c) \\<sqinter>\n           (0::'a)))) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     ((- ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) +\n           Rep_N c) \\<sqinter>\n          (0::'a)) +\n       Rep_N\n        (Abs_N\n          ((- Rep_N\n               (Abs_N\n                 ((- Rep_N\n                      (Abs_N ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a))) +\n                   Rep_N c) \\<sqinter>\n                  (0::'a))) +\n            Rep_N c) \\<sqinter>\n           (0::'a)))) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- Rep_N\n        (Abs_N\n          ((- Rep_N (Abs_N ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a))) +\n            Rep_N c) \\<sqinter>\n           (0::'a))) +\n     Rep_N c) \\<sqinter>\n    (0::'a)\n    \\<in> N\n 2. Abs_N\n     ((- ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) +\n           Rep_N c) \\<sqinter>\n          (0::'a)) +\n       (- Rep_N\n           (Abs_N\n             ((- Rep_N (Abs_N ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a))) +\n               Rep_N c) \\<sqinter>\n              (0::'a))) +\n        Rep_N c) \\<sqinter>\n       (0::'a)) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     ((- ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) +\n           Rep_N c) \\<sqinter>\n          (0::'a)) +\n       (- Rep_N\n           (Abs_N\n             ((- Rep_N (Abs_N ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a))) +\n               Rep_N c) \\<sqinter>\n              (0::'a))) +\n        Rep_N c) \\<sqinter>\n       (0::'a)) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- Rep_N (Abs_N ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a))) +\n     Rep_N c) \\<sqinter>\n    (0::'a)\n    \\<in> N\n 2. Abs_N\n     ((- ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) +\n           Rep_N c) \\<sqinter>\n          (0::'a)) +\n       (- ((- Rep_N (Abs_N ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a))) +\n            Rep_N c) \\<sqinter>\n           (0::'a)) +\n        Rep_N c) \\<sqinter>\n       (0::'a)) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     ((- ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) +\n           Rep_N c) \\<sqinter>\n          (0::'a)) +\n       (- ((- Rep_N (Abs_N ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a))) +\n            Rep_N c) \\<sqinter>\n           (0::'a)) +\n        Rep_N c) \\<sqinter>\n       (0::'a)) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- Rep_N b + Rep_N a) \\<sqinter> (0::'a) \\<in> N\n 2. Abs_N\n     ((- ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) +\n           Rep_N c) \\<sqinter>\n          (0::'a)) +\n       (- ((- ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a)) +\n            Rep_N c) \\<sqinter>\n           (0::'a)) +\n        Rep_N c) \\<sqinter>\n       (0::'a)) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     ((- ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) +\n           Rep_N c) \\<sqinter>\n          (0::'a)) +\n       (- ((- ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a)) +\n            Rep_N c) \\<sqinter>\n           (0::'a)) +\n        Rep_N c) \\<sqinter>\n       (0::'a)) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply (subgoal_tac \"inf (- inf (- inf (- Rep_N a + Rep_N b) (0::'a) + Rep_N c) (0::'a) + inf (- inf (- inf (- Rep_N b + Rep_N a) (0::'a) + Rep_N c) (0::'a) + Rep_N c) (0::'a))\n            (0::'a) = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) + Rep_N c) \\<sqinter>\n        (0::'a)) +\n     (- ((- ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a)) + Rep_N c) \\<sqinter>\n         (0::'a)) +\n      Rep_N c) \\<sqinter>\n     (0::'a)) \\<sqinter>\n    (0::'a) =\n    (0::'a) \\<Longrightarrow>\n    Abs_N\n     ((- ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) +\n           Rep_N c) \\<sqinter>\n          (0::'a)) +\n       (- ((- ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a)) +\n            Rep_N c) \\<sqinter>\n           (0::'a)) +\n        Rep_N c) \\<sqinter>\n       (0::'a)) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)\n 2. (- ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) + Rep_N c) \\<sqinter>\n        (0::'a)) +\n     (- ((- ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a)) + Rep_N c) \\<sqinter>\n         (0::'a)) +\n      Rep_N c) \\<sqinter>\n     (0::'a)) \\<sqinter>\n    (0::'a) =\n    (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) + Rep_N c) \\<sqinter>\n        (0::'a)) +\n     (- ((- ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a)) + Rep_N c) \\<sqinter>\n         (0::'a)) +\n      Rep_N c) \\<sqinter>\n     (0::'a)) \\<sqinter>\n    (0::'a) =\n    (0::'a)", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) + Rep_N c) \\<sqinter>\n        (0::'a)) +\n     (- ((- ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a)) + Rep_N c) \\<sqinter>\n         (0::'a)) +\n      Rep_N c) \\<sqinter>\n     (0::'a)) \\<sqinter>\n    (0::'a)\n    \\<le> (0::'a)\n 2. (0::'a)\n    \\<le> (- ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) +\n               Rep_N c) \\<sqinter>\n              (0::'a)) +\n           (- ((- ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a)) +\n                Rep_N c) \\<sqinter>\n               (0::'a)) +\n            Rep_N c) \\<sqinter>\n           (0::'a)) \\<sqinter>\n          (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a)\n    \\<le> (- ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) +\n               Rep_N c) \\<sqinter>\n              (0::'a)) +\n           (- ((- ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a)) +\n                Rep_N c) \\<sqinter>\n               (0::'a)) +\n            Rep_N c) \\<sqinter>\n           (0::'a)) \\<sqinter>\n          (0::'a)", "apply (rule inf_greatest)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (0::'a)\n    \\<le> - ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) +\n              Rep_N c) \\<sqinter>\n             (0::'a)) +\n          (- ((- ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a)) +\n               Rep_N c) \\<sqinter>\n              (0::'a)) +\n           Rep_N c) \\<sqinter>\n          (0::'a)\n 2. (0::'a) \\<le> (0::'a)", "apply (rule minus_order)"], ["proof (prove)\ngoal (2 subgoals):\n 1. - (- ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) +\n           Rep_N c) \\<sqinter>\n          (0::'a)) +\n       (- ((- ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a)) +\n            Rep_N c) \\<sqinter>\n           (0::'a)) +\n        Rep_N c) \\<sqinter>\n       (0::'a))\n    \\<le> - (0::'a)\n 2. (0::'a) \\<le> (0::'a)", "apply (subst minus_add)"], ["proof (prove)\ngoal (2 subgoals):\n 1. - ((- ((- ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a)) +\n            Rep_N c) \\<sqinter>\n           (0::'a)) +\n        Rep_N c) \\<sqinter>\n       (0::'a)) +\n    - (- ((- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) +\n           Rep_N c) \\<sqinter>\n          (0::'a)))\n    \\<le> - (0::'a)\n 2. (0::'a) \\<le> (0::'a)", "apply (subst minus_minus)"], ["proof (prove)\ngoal (2 subgoals):\n 1. - ((- ((- ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a)) +\n            Rep_N c) \\<sqinter>\n           (0::'a)) +\n        Rep_N c) \\<sqinter>\n       (0::'a)) +\n    (- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) + Rep_N c) \\<sqinter>\n    (0::'a)\n    \\<le> - (0::'a)\n 2. (0::'a) \\<le> (0::'a)", "apply (subst minus_zero)"], ["proof (prove)\ngoal (2 subgoals):\n 1. - ((- ((- ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a)) +\n            Rep_N c) \\<sqinter>\n           (0::'a)) +\n        Rep_N c) \\<sqinter>\n       (0::'a)) +\n    (- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) + Rep_N c) \\<sqinter>\n    (0::'a)\n    \\<le> (0::'a)\n 2. (0::'a) \\<le> (0::'a)", "apply (rule left_move_to_right)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) + Rep_N c) \\<sqinter>\n    (0::'a)\n    \\<le> - (- ((- ((- ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a)) +\n                     Rep_N c) \\<sqinter>\n                    (0::'a)) +\n                 Rep_N c) \\<sqinter>\n                (0::'a))) +\n          (0::'a)\n 2. (0::'a) \\<le> (0::'a)", "apply (subst minus_minus)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- ((- Rep_N a + Rep_N b) \\<sqinter> (0::'a)) + Rep_N c) \\<sqinter>\n    (0::'a)\n    \\<le> (- ((- ((- Rep_N b + Rep_N a) \\<sqinter> (0::'a)) +\n               Rep_N c) \\<sqinter>\n              (0::'a)) +\n           Rep_N c) \\<sqinter>\n          (0::'a) +\n          (0::'a)\n 2. (0::'a) \\<le> (0::'a)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- (- Rep_N a + Rep_N b) + Rep_N c \\<squnion> Rep_N c) \\<sqinter>\n    (0::'a)\n    \\<le> (- (- (- Rep_N b + Rep_N a) + Rep_N c) + Rep_N c) \\<sqinter>\n          (0::'a) \\<squnion>\n          Rep_N c\n 2. (0::'a) \\<le> (0::'a)", "apply (simp add: minus_add)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- Rep_N b + Rep_N a + Rep_N c \\<squnion> Rep_N c) \\<sqinter> (0::'a)\n    \\<le> (- Rep_N c + (- Rep_N b + Rep_N a) + Rep_N c) \\<sqinter>\n          (0::'a) \\<squnion>\n          Rep_N c\n 2. (0::'a) \\<le> (0::'a)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + Rep_N a + Rep_N c \\<squnion> Rep_N c) \\<sqinter> (0::'a)\n    \\<le> (- Rep_N c + (- Rep_N b + Rep_N a) + Rep_N c) \\<sqinter>\n          (0::'a) \\<squnion>\n          Rep_N c", "(*apply (subst sup_inf_distrib2) - why it does not work*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + Rep_N a + Rep_N c \\<squnion> Rep_N c) \\<sqinter> (0::'a)\n    \\<le> (- Rep_N c + (- Rep_N b + Rep_N a) + Rep_N c) \\<sqinter>\n          (0::'a) \\<squnion>\n          Rep_N c", "apply (subst sup_inf_distrib2_lgroup)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + Rep_N a + Rep_N c \\<squnion> Rep_N c) \\<sqinter> (0::'a)\n    \\<le> (- Rep_N c + (- Rep_N b + Rep_N a) + Rep_N c \\<squnion>\n           Rep_N c) \\<sqinter>\n          ((0::'a) \\<squnion> Rep_N c)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + Rep_N a + Rep_N c \\<squnion> Rep_N c) \\<sqinter> (0::'a)\n    \\<le> - Rep_N c + (- Rep_N b + Rep_N a) + Rep_N c \\<squnion> Rep_N c", "(*  apply safe*)\n  (*apply (subst inf_sup_distrib2) - why it does not work*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + Rep_N a + Rep_N c \\<squnion> Rep_N c) \\<sqinter> (0::'a)\n    \\<le> - Rep_N c + (- Rep_N b + Rep_N a) + Rep_N c \\<squnion> Rep_N c", "apply (subst inf_sup_distrib2_lgroup)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + Rep_N a + Rep_N c) \\<sqinter> (0::'a) \\<squnion>\n    Rep_N c \\<sqinter> (0::'a)\n    \\<le> - Rep_N c + (- Rep_N b + Rep_N a) + Rep_N c \\<squnion> Rep_N c", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + Rep_N a + Rep_N c) \\<sqinter> (0::'a)\n    \\<le> - Rep_N c + (- Rep_N b + Rep_N a) + Rep_N c \\<squnion> Rep_N c", "(*  apply safe*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + Rep_N a + Rep_N c) \\<sqinter> (0::'a)\n    \\<le> - Rep_N c + (- Rep_N b + Rep_N a) + Rep_N c \\<squnion> Rep_N c", "apply (rule_tac y = \"- Rep_N c + (- Rep_N b + Rep_N a) + Rep_N c\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- Rep_N b + Rep_N a + Rep_N c) \\<sqinter> (0::'a)\n    \\<le> - Rep_N c + (- Rep_N b + Rep_N a) + Rep_N c\n 2. - Rep_N c + (- Rep_N b + Rep_N a) + Rep_N c\n    \\<le> - Rep_N c + (- Rep_N b + Rep_N a) + Rep_N c \\<squnion> Rep_N c", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + Rep_N a + Rep_N c) \\<sqinter> (0::'a)\n    \\<le> - Rep_N c + (- Rep_N b + Rep_N a) + Rep_N c", "apply (rule_tac y = \"- Rep_N b + Rep_N a + Rep_N c\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- Rep_N b + Rep_N a + Rep_N c) \\<sqinter> (0::'a)\n    \\<le> - Rep_N b + Rep_N a + Rep_N c\n 2. - Rep_N b + Rep_N a + Rep_N c\n    \\<le> - Rep_N c + (- Rep_N b + Rep_N a) + Rep_N c", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. - Rep_N b + Rep_N a + Rep_N c\n    \\<le> - Rep_N c + (- Rep_N b + Rep_N a) + Rep_N c", "apply (rule add_order_preserving_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. - Rep_N b + Rep_N a \\<le> - Rep_N c + (- Rep_N b + Rep_N a)", "apply (simp add: add.assoc [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. - Rep_N b + Rep_N a \\<le> - Rep_N c + - Rep_N b + Rep_N a", "apply (rule add_order_preserving_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. - Rep_N b \\<le> - Rep_N c + - Rep_N b", "apply (rule left_move_to_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. - (- Rep_N c) + - Rep_N b \\<le> - Rep_N b", "apply (rule right_move_to_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. - (- Rep_N c) \\<le> - Rep_N b + - (- Rep_N b)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N c \\<le> (0::'a)", "apply (cut_tac x = c in Rep_N)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N c \\<in> N \\<Longrightarrow> Rep_N c \\<le> (0::'a)", "by (simp add: N_def)"], ["", "lemma prod_3: \"(b::'a N) l\\<rightarrow> b * b \\<le> a \\<sqinter> (a l\\<rightarrow> b) l\\<rightarrow> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b l\\<rightarrow> b * b\n    \\<le> a \\<sqinter> (a l\\<rightarrow> b) l\\<rightarrow> b", "apply (simp add: impl_N_def times_N_def Abs_N_inverse Rep_N_inverse order_N_def one_N_def Rep_N_inf)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     ((Rep_N\n        (Abs_N\n          ((Rep_N b - Rep_N a \\<squnion>\n            (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b)) \\<sqinter>\n           (0::'a))) -\n       Rep_N (Abs_N (Rep_N b \\<sqinter> (0::'a)))) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N b - Rep_N a \\<squnion>\n     (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b)) \\<sqinter>\n    (0::'a)\n    \\<in> N\n 2. Abs_N\n     (((Rep_N b - Rep_N a \\<squnion>\n        (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b)) \\<sqinter>\n       (0::'a) -\n       Rep_N (Abs_N (Rep_N b \\<sqinter> (0::'a)))) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply (simp add: add.assoc N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     (((Rep_N b - Rep_N a \\<squnion>\n        (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b)) \\<sqinter>\n       (0::'a) -\n       Rep_N (Abs_N (Rep_N b \\<sqinter> (0::'a)))) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N b \\<sqinter> (0::'a) \\<in> N\n 2. Abs_N\n     (((Rep_N b - Rep_N a \\<squnion>\n        (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b)) \\<sqinter>\n       (0::'a) -\n       Rep_N b \\<sqinter> (0::'a)) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply (simp add: add.assoc N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     (((Rep_N b - Rep_N a \\<squnion>\n        (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b)) \\<sqinter>\n       (0::'a) -\n       Rep_N b \\<sqinter> (0::'a)) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)", "apply (subgoal_tac \"inf (inf (sup (Rep_N b - Rep_N a) (sup (Rep_N b - (Rep_N b - Rep_N a)) (Rep_N b))) (0::'a) - inf (Rep_N b + Rep_N b - Rep_N b) (0::'a)) (0::'a) = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((Rep_N b - Rep_N a \\<squnion>\n      (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b)) \\<sqinter>\n     (0::'a) -\n     (Rep_N b + Rep_N b - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n    (0::'a) =\n    (0::'a) \\<Longrightarrow>\n    Abs_N\n     (((Rep_N b - Rep_N a \\<squnion>\n        (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b)) \\<sqinter>\n       (0::'a) -\n       Rep_N b \\<sqinter> (0::'a)) \\<sqinter>\n      (0::'a)) =\n    Abs_N (0::'a)\n 2. ((Rep_N b - Rep_N a \\<squnion>\n      (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b)) \\<sqinter>\n     (0::'a) -\n     (Rep_N b + Rep_N b - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n    (0::'a) =\n    (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((Rep_N b - Rep_N a \\<squnion>\n      (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b)) \\<sqinter>\n     (0::'a) -\n     (Rep_N b + Rep_N b - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n    (0::'a) =\n    (0::'a)", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((Rep_N b - Rep_N a \\<squnion>\n      (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b)) \\<sqinter>\n     (0::'a) -\n     (Rep_N b + Rep_N b - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n    (0::'a)\n    \\<le> (0::'a)\n 2. (0::'a)\n    \\<le> ((Rep_N b - Rep_N a \\<squnion>\n            (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b)) \\<sqinter>\n           (0::'a) -\n           (Rep_N b + Rep_N b - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n          (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a)\n    \\<le> ((Rep_N b - Rep_N a \\<squnion>\n            (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b)) \\<sqinter>\n           (0::'a) -\n           (Rep_N b + Rep_N b - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n          (0::'a)", "apply (subst diff_minus)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a)\n    \\<le> ((Rep_N b + - Rep_N a \\<squnion>\n            (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b)) \\<sqinter>\n           (0::'a) -\n           (Rep_N b + Rep_N b - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n          (0::'a)", "apply (subst diff_minus)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a)\n    \\<le> ((Rep_N b + - Rep_N a \\<squnion>\n            (Rep_N b + - (Rep_N b - Rep_N a) \\<squnion> Rep_N b)) \\<sqinter>\n           (0::'a) -\n           (Rep_N b + Rep_N b - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n          (0::'a)", "apply (subst diff_minus)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a)\n    \\<le> ((Rep_N b + - Rep_N a \\<squnion>\n            (Rep_N b + - (Rep_N b + - Rep_N a) \\<squnion>\n             Rep_N b)) \\<sqinter>\n           (0::'a) -\n           (Rep_N b + Rep_N b - Rep_N b) \\<sqinter> (0::'a)) \\<sqinter>\n          (0::'a)", "apply (subst diff_minus)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a)\n    \\<le> ((Rep_N b + - Rep_N a \\<squnion>\n            (Rep_N b + - (Rep_N b + - Rep_N a) \\<squnion>\n             Rep_N b)) \\<sqinter>\n           (0::'a) +\n           - ((Rep_N b + Rep_N b - Rep_N b) \\<sqinter> (0::'a))) \\<sqinter>\n          (0::'a)", "apply (subst diff_minus)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a)\n    \\<le> ((Rep_N b + - Rep_N a \\<squnion>\n            (Rep_N b + - (Rep_N b + - Rep_N a) \\<squnion>\n             Rep_N b)) \\<sqinter>\n           (0::'a) +\n           - ((Rep_N b + Rep_N b + - Rep_N b) \\<sqinter>\n              (0::'a))) \\<sqinter>\n          (0::'a)", "apply (rule inf_greatest)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (0::'a)\n    \\<le> (Rep_N b + - Rep_N a \\<squnion>\n           (Rep_N b + - (Rep_N b + - Rep_N a) \\<squnion>\n            Rep_N b)) \\<sqinter>\n          (0::'a) +\n          - ((Rep_N b + Rep_N b + - Rep_N b) \\<sqinter> (0::'a))\n 2. (0::'a) \\<le> (0::'a)", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (0::'a) + - (- ((Rep_N b + Rep_N b + - Rep_N b) \\<sqinter> (0::'a)))\n    \\<le> (Rep_N b + - Rep_N a \\<squnion>\n           (Rep_N b + - (Rep_N b + - Rep_N a) \\<squnion>\n            Rep_N b)) \\<sqinter>\n          (0::'a)\n 2. (0::'a) \\<le> (0::'a)", "apply (subst minus_minus)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (0::'a) + (Rep_N b + Rep_N b + - Rep_N b) \\<sqinter> (0::'a)\n    \\<le> (Rep_N b + - Rep_N a \\<squnion>\n           (Rep_N b + - (Rep_N b + - Rep_N a) \\<squnion>\n            Rep_N b)) \\<sqinter>\n          (0::'a)\n 2. (0::'a) \\<le> (0::'a)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N b + Rep_N b + - Rep_N b) \\<sqinter> (0::'a)\n    \\<le> Rep_N b + - Rep_N a \\<squnion>\n          (Rep_N b + - (Rep_N b + - Rep_N a) \\<squnion> Rep_N b)", "apply (simp add: add.assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N b \\<sqinter> (0::'a)\n    \\<le> Rep_N b + - Rep_N a \\<squnion>\n          (Rep_N b + - (Rep_N b + - Rep_N a) \\<squnion> Rep_N b)", "apply (rule_tac y = \"Rep_N b\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N b \\<sqinter> (0::'a) \\<le> Rep_N b\n 2. Rep_N b\n    \\<le> Rep_N b + - Rep_N a \\<squnion>\n          (Rep_N b + - (Rep_N b + - Rep_N a) \\<squnion> Rep_N b)", "by simp_all"], ["", "lemma prod_4: \"(b::'a N) r\\<rightarrow> b * b \\<le> a \\<sqinter> (a r\\<rightarrow> b) r\\<rightarrow> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b r\\<rightarrow> b * b\n    \\<le> a \\<sqinter> (a r\\<rightarrow> b) r\\<rightarrow> b", "apply (simp add: impr_N_def times_N_def Abs_N_inverse Rep_N_inverse Rep_N_inf minus_add)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N (Rep_N b \\<sqinter> (0::'a))\n    \\<le> Abs_N\n           ((- Rep_N a + Rep_N b \\<squnion>\n             (- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b)) \\<sqinter>\n            (0::'a))", "apply (subst order_Abs_N [THEN sym])"], ["proof (prove)\ngoal (3 subgoals):\n 1. Rep_N b \\<sqinter> (0::'a) \\<in> N\n 2. (- Rep_N a + Rep_N b \\<squnion>\n     (- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b)) \\<sqinter>\n    (0::'a)\n    \\<in> N\n 3. Rep_N b \\<sqinter> (0::'a)\n    \\<le> (- Rep_N a + Rep_N b \\<squnion>\n           (- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b)) \\<sqinter>\n          (0::'a)", "apply (simp add:  N_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- Rep_N a + Rep_N b \\<squnion>\n     (- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b)) \\<sqinter>\n    (0::'a)\n    \\<in> N\n 2. Rep_N b \\<sqinter> (0::'a)\n    \\<le> (- Rep_N a + Rep_N b \\<squnion>\n           (- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b)) \\<sqinter>\n          (0::'a)", "apply (simp add:  N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N b \\<sqinter> (0::'a)\n    \\<le> (- Rep_N a + Rep_N b \\<squnion>\n           (- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b)) \\<sqinter>\n          (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N b \\<sqinter> (0::'a)\n    \\<le> - Rep_N a + Rep_N b \\<squnion>\n          (- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b)", "apply (rule_tac y = \"- Rep_N a + Rep_N b\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N b \\<sqinter> (0::'a) \\<le> - Rep_N a + Rep_N b\n 2. - Rep_N a + Rep_N b\n    \\<le> - Rep_N a + Rep_N b \\<squnion>\n          (- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N b \\<sqinter> (0::'a) \\<le> - Rep_N a + Rep_N b", "apply (rule_tac y = \"Rep_N b\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Rep_N b \\<sqinter> (0::'a) \\<le> Rep_N b\n 2. Rep_N b \\<le> - Rep_N a + Rep_N b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N b \\<le> - Rep_N a + Rep_N b", "apply (rule right_move_to_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N b + - Rep_N b \\<le> - Rep_N a", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> - Rep_N a", "apply (rule minus_order)"], ["proof (prove)\ngoal (1 subgoal):\n 1. - (- Rep_N a) \\<le> - (0::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N a \\<le> (0::'a)", "apply (cut_tac x = a in Rep_N)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_N a \\<in> N \\<Longrightarrow> Rep_N a \\<le> (0::'a)", "by (simp add: N_def)"], ["", "lemma prod_5: \"(((a::'a N) l\\<rightarrow> b) l\\<rightarrow> b) * (c * a l\\<rightarrow> f * a) * (c * b l\\<rightarrow> f * b) \\<le> c l\\<rightarrow> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((a l\\<rightarrow> b) l\\<rightarrow> b) * (c * a l\\<rightarrow> f * a) *\n    (c * b l\\<rightarrow> f * b)\n    \\<le> c l\\<rightarrow> f", "apply (simp add: impl_N_def times_N_def Abs_N_inverse Rep_N_inverse Rep_N_inf minus_add)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     (Rep_N\n       (Abs_N\n         ((Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b) \\<sqinter>\n          (0::'a))) +\n      Rep_N\n       (Abs_N\n         ((Rep_N f + Rep_N a - (Rep_N c + Rep_N a)) \\<sqinter> (0::'a))) +\n      Rep_N\n       (Abs_N\n         ((Rep_N f + Rep_N b - (Rep_N c + Rep_N b)) \\<sqinter> (0::'a))))\n    \\<le> Abs_N ((Rep_N f - Rep_N c) \\<sqinter> (0::'a))", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b) \\<sqinter> (0::'a)\n    \\<in> N\n 2. Abs_N\n     ((Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b) \\<sqinter>\n      (0::'a) +\n      Rep_N\n       (Abs_N\n         ((Rep_N f + Rep_N a - (Rep_N c + Rep_N a)) \\<sqinter> (0::'a))) +\n      Rep_N\n       (Abs_N\n         ((Rep_N f + Rep_N b - (Rep_N c + Rep_N b)) \\<sqinter> (0::'a))))\n    \\<le> Abs_N ((Rep_N f - Rep_N c) \\<sqinter> (0::'a))", "apply (simp add: N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     ((Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b) \\<sqinter>\n      (0::'a) +\n      Rep_N\n       (Abs_N\n         ((Rep_N f + Rep_N a - (Rep_N c + Rep_N a)) \\<sqinter> (0::'a))) +\n      Rep_N\n       (Abs_N\n         ((Rep_N f + Rep_N b - (Rep_N c + Rep_N b)) \\<sqinter> (0::'a))))\n    \\<le> Abs_N ((Rep_N f - Rep_N c) \\<sqinter> (0::'a))", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N f + Rep_N a - (Rep_N c + Rep_N a)) \\<sqinter> (0::'a) \\<in> N\n 2. Abs_N\n     ((Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b) \\<sqinter>\n      (0::'a) +\n      (Rep_N f + Rep_N a - (Rep_N c + Rep_N a)) \\<sqinter> (0::'a) +\n      Rep_N\n       (Abs_N\n         ((Rep_N f + Rep_N b - (Rep_N c + Rep_N b)) \\<sqinter> (0::'a))))\n    \\<le> Abs_N ((Rep_N f - Rep_N c) \\<sqinter> (0::'a))", "apply (simp add: N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     ((Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b) \\<sqinter>\n      (0::'a) +\n      (Rep_N f + Rep_N a - (Rep_N c + Rep_N a)) \\<sqinter> (0::'a) +\n      Rep_N\n       (Abs_N\n         ((Rep_N f + Rep_N b - (Rep_N c + Rep_N b)) \\<sqinter> (0::'a))))\n    \\<le> Abs_N ((Rep_N f - Rep_N c) \\<sqinter> (0::'a))", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N f + Rep_N b - (Rep_N c + Rep_N b)) \\<sqinter> (0::'a) \\<in> N\n 2. Abs_N\n     ((Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b) \\<sqinter>\n      (0::'a) +\n      (Rep_N f + Rep_N a - (Rep_N c + Rep_N a)) \\<sqinter> (0::'a) +\n      (Rep_N f + Rep_N b - (Rep_N c + Rep_N b)) \\<sqinter> (0::'a))\n    \\<le> Abs_N ((Rep_N f - Rep_N c) \\<sqinter> (0::'a))", "apply (simp add: N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     ((Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b) \\<sqinter>\n      (0::'a) +\n      (Rep_N f + Rep_N a - (Rep_N c + Rep_N a)) \\<sqinter> (0::'a) +\n      (Rep_N f + Rep_N b - (Rep_N c + Rep_N b)) \\<sqinter> (0::'a))\n    \\<le> Abs_N ((Rep_N f - Rep_N c) \\<sqinter> (0::'a))", "apply (subst order_Abs_N [THEN sym])"], ["proof (prove)\ngoal (3 subgoals):\n 1. (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b) \\<sqinter> (0::'a) +\n    (Rep_N f + Rep_N a - (Rep_N c + Rep_N a)) \\<sqinter> (0::'a) +\n    (Rep_N f + Rep_N b - (Rep_N c + Rep_N b)) \\<sqinter> (0::'a)\n    \\<in> N\n 2. (Rep_N f - Rep_N c) \\<sqinter> (0::'a) \\<in> N\n 3. (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b) \\<sqinter> (0::'a) +\n    (Rep_N f + Rep_N a - (Rep_N c + Rep_N a)) \\<sqinter> (0::'a) +\n    (Rep_N f + Rep_N b - (Rep_N c + Rep_N b)) \\<sqinter> (0::'a)\n    \\<le> (Rep_N f - Rep_N c) \\<sqinter> (0::'a)", "apply (simp add: N_def inf_assoc [THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Rep_N f - Rep_N c) \\<sqinter> (0::'a) \\<in> N\n 2. (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b) \\<sqinter> (0::'a) +\n    (Rep_N f + Rep_N a - (Rep_N c + Rep_N a)) \\<sqinter> (0::'a) +\n    (Rep_N f + Rep_N b - (Rep_N c + Rep_N b)) \\<sqinter> (0::'a)\n    \\<le> (Rep_N f - Rep_N c) \\<sqinter> (0::'a)", "apply (simp add: N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N b - (Rep_N b - Rep_N a) \\<squnion> Rep_N b) \\<sqinter> (0::'a) +\n    (Rep_N f + Rep_N a - (Rep_N c + Rep_N a)) \\<sqinter> (0::'a) +\n    (Rep_N f + Rep_N b - (Rep_N c + Rep_N b)) \\<sqinter> (0::'a)\n    \\<le> (Rep_N f - Rep_N c) \\<sqinter> (0::'a)", "apply (simp only: diff_minus minus_add minus_minus add.assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N b + (Rep_N a + - Rep_N b) \\<squnion> Rep_N b) \\<sqinter>\n    (0::'a) +\n    ((Rep_N f + (Rep_N a + (- Rep_N a + - Rep_N c))) \\<sqinter> (0::'a) +\n     (Rep_N f + (Rep_N b + (- Rep_N b + - Rep_N c))) \\<sqinter> (0::'a))\n    \\<le> (Rep_N f + - Rep_N c) \\<sqinter> (0::'a)", "apply (subst (4) add.assoc [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N b + (Rep_N a + - Rep_N b) \\<squnion> Rep_N b) \\<sqinter>\n    (0::'a) +\n    ((Rep_N f + (Rep_N a + - Rep_N a + - Rep_N c)) \\<sqinter> (0::'a) +\n     (Rep_N f + (Rep_N b + (- Rep_N b + - Rep_N c))) \\<sqinter> (0::'a))\n    \\<le> (Rep_N f + - Rep_N c) \\<sqinter> (0::'a)", "apply (subst (5) add.assoc [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N b + (Rep_N a + - Rep_N b) \\<squnion> Rep_N b) \\<sqinter>\n    (0::'a) +\n    ((Rep_N f + (Rep_N a + - Rep_N a + - Rep_N c)) \\<sqinter> (0::'a) +\n     (Rep_N f + (Rep_N b + - Rep_N b + - Rep_N c)) \\<sqinter> (0::'a))\n    \\<le> (Rep_N f + - Rep_N c) \\<sqinter> (0::'a)", "apply (simp only: right_minus add_0_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N b + (Rep_N a + - Rep_N b) \\<squnion> Rep_N b) \\<sqinter>\n    (0::'a) +\n    ((Rep_N f + - Rep_N c) \\<sqinter> (0::'a) +\n     (Rep_N f + - Rep_N c) \\<sqinter> (0::'a))\n    \\<le> (Rep_N f + - Rep_N c) \\<sqinter> (0::'a)", "apply (rule right_move_to_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N b + (Rep_N a + - Rep_N b) \\<squnion> Rep_N b) \\<sqinter> (0::'a)\n    \\<le> (Rep_N f + - Rep_N c) \\<sqinter> (0::'a) +\n          - ((Rep_N f + - Rep_N c) \\<sqinter> (0::'a) +\n             (Rep_N f + - Rep_N c) \\<sqinter> (0::'a))", "apply (simp only: minus_add add.assoc [THEN sym] add_0_left right_minus)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_N b + Rep_N a + - Rep_N b \\<squnion> Rep_N b) \\<sqinter> (0::'a)\n    \\<le> - ((Rep_N f + - Rep_N c) \\<sqinter> (0::'a))", "by (simp add: minus_add)"], ["", "lemma prod_6: \"(((a::'a N) r\\<rightarrow> b) r\\<rightarrow> b) * (a * c r\\<rightarrow> a * f) * (b * c r\\<rightarrow> b * f) \\<le> c r\\<rightarrow> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((a r\\<rightarrow> b) r\\<rightarrow> b) * (a * c r\\<rightarrow> a * f) *\n    (b * c r\\<rightarrow> b * f)\n    \\<le> c r\\<rightarrow> f", "apply (simp add: impr_N_def times_N_def Abs_N_inverse Rep_N_inverse Rep_N_inf minus_add)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     (Rep_N\n       (Abs_N\n         ((- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b) \\<sqinter>\n          (0::'a))) +\n      Rep_N\n       (Abs_N\n         ((- Rep_N c + - Rep_N a + (Rep_N a + Rep_N f)) \\<sqinter>\n          (0::'a))) +\n      Rep_N\n       (Abs_N\n         ((- Rep_N c + - Rep_N b + (Rep_N b + Rep_N f)) \\<sqinter>\n          (0::'a))))\n    \\<le> Abs_N ((- Rep_N c + Rep_N f) \\<sqinter> (0::'a))", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b) \\<sqinter> (0::'a)\n    \\<in> N\n 2. Abs_N\n     ((- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b) \\<sqinter>\n      (0::'a) +\n      Rep_N\n       (Abs_N\n         ((- Rep_N c + - Rep_N a + (Rep_N a + Rep_N f)) \\<sqinter>\n          (0::'a))) +\n      Rep_N\n       (Abs_N\n         ((- Rep_N c + - Rep_N b + (Rep_N b + Rep_N f)) \\<sqinter>\n          (0::'a))))\n    \\<le> Abs_N ((- Rep_N c + Rep_N f) \\<sqinter> (0::'a))", "apply (simp add: N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     ((- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b) \\<sqinter>\n      (0::'a) +\n      Rep_N\n       (Abs_N\n         ((- Rep_N c + - Rep_N a + (Rep_N a + Rep_N f)) \\<sqinter>\n          (0::'a))) +\n      Rep_N\n       (Abs_N\n         ((- Rep_N c + - Rep_N b + (Rep_N b + Rep_N f)) \\<sqinter>\n          (0::'a))))\n    \\<le> Abs_N ((- Rep_N c + Rep_N f) \\<sqinter> (0::'a))", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- Rep_N c + - Rep_N a + (Rep_N a + Rep_N f)) \\<sqinter> (0::'a) \\<in> N\n 2. Abs_N\n     ((- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b) \\<sqinter>\n      (0::'a) +\n      (- Rep_N c + - Rep_N a + (Rep_N a + Rep_N f)) \\<sqinter> (0::'a) +\n      Rep_N\n       (Abs_N\n         ((- Rep_N c + - Rep_N b + (Rep_N b + Rep_N f)) \\<sqinter>\n          (0::'a))))\n    \\<le> Abs_N ((- Rep_N c + Rep_N f) \\<sqinter> (0::'a))", "apply (simp add: N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     ((- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b) \\<sqinter>\n      (0::'a) +\n      (- Rep_N c + - Rep_N a + (Rep_N a + Rep_N f)) \\<sqinter> (0::'a) +\n      Rep_N\n       (Abs_N\n         ((- Rep_N c + - Rep_N b + (Rep_N b + Rep_N f)) \\<sqinter>\n          (0::'a))))\n    \\<le> Abs_N ((- Rep_N c + Rep_N f) \\<sqinter> (0::'a))", "apply (subst Abs_N_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- Rep_N c + - Rep_N b + (Rep_N b + Rep_N f)) \\<sqinter> (0::'a) \\<in> N\n 2. Abs_N\n     ((- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b) \\<sqinter>\n      (0::'a) +\n      (- Rep_N c + - Rep_N a + (Rep_N a + Rep_N f)) \\<sqinter> (0::'a) +\n      (- Rep_N c + - Rep_N b + (Rep_N b + Rep_N f)) \\<sqinter> (0::'a))\n    \\<le> Abs_N ((- Rep_N c + Rep_N f) \\<sqinter> (0::'a))", "apply (simp add: N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_N\n     ((- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b) \\<sqinter>\n      (0::'a) +\n      (- Rep_N c + - Rep_N a + (Rep_N a + Rep_N f)) \\<sqinter> (0::'a) +\n      (- Rep_N c + - Rep_N b + (Rep_N b + Rep_N f)) \\<sqinter> (0::'a))\n    \\<le> Abs_N ((- Rep_N c + Rep_N f) \\<sqinter> (0::'a))", "apply (subst order_Abs_N [THEN sym])"], ["proof (prove)\ngoal (3 subgoals):\n 1. (- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b) \\<sqinter> (0::'a) +\n    (- Rep_N c + - Rep_N a + (Rep_N a + Rep_N f)) \\<sqinter> (0::'a) +\n    (- Rep_N c + - Rep_N b + (Rep_N b + Rep_N f)) \\<sqinter> (0::'a)\n    \\<in> N\n 2. (- Rep_N c + Rep_N f) \\<sqinter> (0::'a) \\<in> N\n 3. (- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b) \\<sqinter> (0::'a) +\n    (- Rep_N c + - Rep_N a + (Rep_N a + Rep_N f)) \\<sqinter> (0::'a) +\n    (- Rep_N c + - Rep_N b + (Rep_N b + Rep_N f)) \\<sqinter> (0::'a)\n    \\<le> (- Rep_N c + Rep_N f) \\<sqinter> (0::'a)", "apply (simp add: N_def inf_assoc [THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. (- Rep_N c + Rep_N f) \\<sqinter> (0::'a) \\<in> N\n 2. (- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b) \\<sqinter> (0::'a) +\n    (- Rep_N c + - Rep_N a + (Rep_N a + Rep_N f)) \\<sqinter> (0::'a) +\n    (- Rep_N c + - Rep_N b + (Rep_N b + Rep_N f)) \\<sqinter> (0::'a)\n    \\<le> (- Rep_N c + Rep_N f) \\<sqinter> (0::'a)", "apply (simp add: N_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b) \\<sqinter> (0::'a) +\n    (- Rep_N c + - Rep_N a + (Rep_N a + Rep_N f)) \\<sqinter> (0::'a) +\n    (- Rep_N c + - Rep_N b + (Rep_N b + Rep_N f)) \\<sqinter> (0::'a)\n    \\<le> (- Rep_N c + Rep_N f) \\<sqinter> (0::'a)", "apply (simp only: diff_minus minus_add minus_minus add.assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + (Rep_N a + Rep_N b) \\<squnion> Rep_N b) \\<sqinter>\n    (0::'a) +\n    ((- Rep_N c + (- Rep_N a + (Rep_N a + Rep_N f))) \\<sqinter> (0::'a) +\n     (- Rep_N c + (- Rep_N b + (Rep_N b + Rep_N f))) \\<sqinter> (0::'a))\n    \\<le> (- Rep_N c + Rep_N f) \\<sqinter> (0::'a)", "apply (subst (4) add.assoc [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + (Rep_N a + Rep_N b) \\<squnion> Rep_N b) \\<sqinter>\n    (0::'a) +\n    ((- Rep_N c + (- Rep_N a + Rep_N a + Rep_N f)) \\<sqinter> (0::'a) +\n     (- Rep_N c + (- Rep_N b + (Rep_N b + Rep_N f))) \\<sqinter> (0::'a))\n    \\<le> (- Rep_N c + Rep_N f) \\<sqinter> (0::'a)", "apply (subst (5) add.assoc [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + (Rep_N a + Rep_N b) \\<squnion> Rep_N b) \\<sqinter>\n    (0::'a) +\n    ((- Rep_N c + (- Rep_N a + Rep_N a + Rep_N f)) \\<sqinter> (0::'a) +\n     (- Rep_N c + (- Rep_N b + Rep_N b + Rep_N f)) \\<sqinter> (0::'a))\n    \\<le> (- Rep_N c + Rep_N f) \\<sqinter> (0::'a)", "apply (simp only: left_minus add_0_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + (Rep_N a + Rep_N b) \\<squnion> Rep_N b) \\<sqinter>\n    (0::'a) +\n    ((- Rep_N c + Rep_N f) \\<sqinter> (0::'a) +\n     (- Rep_N c + Rep_N f) \\<sqinter> (0::'a))\n    \\<le> (- Rep_N c + Rep_N f) \\<sqinter> (0::'a)", "apply (rule right_move_to_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + (Rep_N a + Rep_N b) \\<squnion> Rep_N b) \\<sqinter> (0::'a)\n    \\<le> (- Rep_N c + Rep_N f) \\<sqinter> (0::'a) +\n          - ((- Rep_N c + Rep_N f) \\<sqinter> (0::'a) +\n             (- Rep_N c + Rep_N f) \\<sqinter> (0::'a))", "apply (simp only: minus_add add.assoc [THEN sym] add_0_left right_minus)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Rep_N b + Rep_N a + Rep_N b \\<squnion> Rep_N b) \\<sqinter> (0::'a)\n    \\<le> - ((- Rep_N c + Rep_N f) \\<sqinter> (0::'a))", "by (simp add: minus_add)"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a N, cancel_product_pseudo_hoop_algebra_class)", "apply intro_classes"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>a b c. a * b = a * c \\<Longrightarrow> b = c\n 2. \\<And>b a c. b * a = c * a \\<Longrightarrow> b = c\n 3. \\<And>a b c.\n       (a l\\<rightarrow> b) l\\<rightarrow> c\n       \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c\n 4. \\<And>a b c.\n       (a r\\<rightarrow> b) r\\<rightarrow> c\n       \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c\n 5. \\<And>b a.\n       b l\\<rightarrow> b * b\n       \\<le> a \\<sqinter> (a l\\<rightarrow> b) l\\<rightarrow> b\n 6. \\<And>b a.\n       b r\\<rightarrow> b * b\n       \\<le> a \\<sqinter> (a r\\<rightarrow> b) r\\<rightarrow> b\n 7. \\<And>a b c d.\n       ((a l\\<rightarrow> b) l\\<rightarrow> b) *\n       (c * a l\\<rightarrow> d * a) *\n       (c * b l\\<rightarrow> d * b)\n       \\<le> c l\\<rightarrow> d\n 8. \\<And>a b c d.\n       ((a r\\<rightarrow> b) r\\<rightarrow> b) *\n       (a * c r\\<rightarrow> a * d) *\n       (b * c r\\<rightarrow> b * d)\n       \\<le> c r\\<rightarrow> d", "by (fact cancel_times_left cancel_times_right prod_1 prod_2 prod_3 prod_4 prod_5 prod_6)+"], ["", "end"], ["", "definition \"OrdSum =\n  {x. (\\<exists>a::'a::pseudo_hoop_algebra. x = (a, 1::'b::pseudo_hoop_algebra)) \\<or> (\\<exists>b::'b. x = (1::'a, b))}\""], ["", "typedef (overloaded) ('a, 'b) OrdSum = \"OrdSum :: ('a::pseudo_hoop_algebra \\<times> 'b::pseudo_hoop_algebra) set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> OrdSum", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. ?x \\<in> OrdSum", "show \"(1, 1) \\<in> OrdSum\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'c, 1::'d) \\<in> OrdSum", "by (simp add: OrdSum_def)"], ["proof (state)\nthis:\n  (1::?'c1, 1::?'d1) \\<in> OrdSum\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma [simp]: \"(1, b) \\<in> OrdSum\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a, b) \\<in> OrdSum", "by (simp add: OrdSum_def)"], ["", "lemma [simp]: \"(a, 1) \\<in> OrdSum\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, 1::'b) \\<in> OrdSum", "by (simp add: OrdSum_def)"], ["", "definition\n  \"first x = fst (Rep_OrdSum x)\""], ["", "definition\n  \"second x = snd (Rep_OrdSum x)\""], ["", "lemma if_unfold_left: \"((if a then b else c) = d) = ((a\\<longrightarrow> b = d) \\<and> (\\<not> a \\<longrightarrow> c = d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((if a then b else c) = d) =\n    ((a \\<longrightarrow> b = d) \\<and> (\\<not> a \\<longrightarrow> c = d))", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma if_unfold_right: \"(d = (if a then b else c)) = ((a \\<longrightarrow> d = b) \\<and> (\\<not> a \\<longrightarrow> d = c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d = (if a then b else c)) =\n    ((a \\<longrightarrow> d = b) \\<and> (\\<not> a \\<longrightarrow> d = c))", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fst_snd_eq: \"fst a = x \\<Longrightarrow> snd a = y \\<Longrightarrow> (x, y) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fst a = x; snd a = y\\<rbrakk> \\<Longrightarrow> (x, y) = a", "apply (subgoal_tac \"x = fst a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fst a = x; snd a = y; x = fst a\\<rbrakk>\n    \\<Longrightarrow> (x, y) = a\n 2. \\<lbrakk>fst a = x; snd a = y\\<rbrakk> \\<Longrightarrow> x = fst a", "apply (subgoal_tac \"y = snd a\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fst a = x; snd a = y; x = fst a; y = snd a\\<rbrakk>\n    \\<Longrightarrow> (x, y) = a\n 2. \\<lbrakk>fst a = x; snd a = y; x = fst a\\<rbrakk>\n    \\<Longrightarrow> y = snd a\n 3. \\<lbrakk>fst a = x; snd a = y\\<rbrakk> \\<Longrightarrow> x = fst a", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>snd a = y; x = fst a; y = snd a; True\\<rbrakk>\n    \\<Longrightarrow> (x, y) = a\n 2. \\<lbrakk>fst a = x; snd a = y; x = fst a\\<rbrakk>\n    \\<Longrightarrow> y = snd a\n 3. \\<lbrakk>fst a = x; snd a = y\\<rbrakk> \\<Longrightarrow> x = fst a", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>x = fst a; y = snd a; True; True\\<rbrakk>\n    \\<Longrightarrow> (x, y) = a\n 2. \\<lbrakk>fst a = x; snd a = y; x = fst a\\<rbrakk>\n    \\<Longrightarrow> y = snd a\n 3. \\<lbrakk>fst a = x; snd a = y\\<rbrakk> \\<Longrightarrow> x = fst a", "by simp_all"], ["", "instantiation \"OrdSum\" :: (pseudo_hoop_algebra, pseudo_hoop_algebra) pseudo_hoop_algebra\nbegin"], ["", "definition\n  times_OrdSum_def: \"a * b \\<equiv> (\n    if second a = 1 \\<and> second b = 1 then \n      Abs_OrdSum (first a * first b, 1) \n    else if first a = 1 \\<and> first b = 1 then\n      Abs_OrdSum (1, second a * second b)\n    else if first a = 1 \\<and> second b = 1 then\n      b\n    else\n      a)\""], ["", "definition\n  one_OrdSum_def: \"1 \\<equiv> Abs_OrdSum (1, 1)\""], ["", "definition\n  impl_OrdSum_def: \"a l\\<rightarrow> b \\<equiv> \n    (if second a = 1 \\<and> second b = 1 then \n      Abs_OrdSum (first a l\\<rightarrow> first b, 1) \n    else if first a = 1 \\<and> first b = 1 then\n      Abs_OrdSum (1, second a l\\<rightarrow> second b)\n    else if first a = 1 \\<and> second b = 1 then\n      b\n    else\n      1)\""], ["", "definition\n  impr_OrdSum_def: \"a r\\<rightarrow> b \\<equiv> \n    (if second a = 1 \\<and> second b = 1 then \n      Abs_OrdSum (first a r\\<rightarrow> first b, 1) \n    else if first a = 1 \\<and> first b = 1 then\n      Abs_OrdSum (1, second a r\\<rightarrow> second b)\n    else if first a = 1 \\<and> second b = 1 then\n      b\n    else\n      1)\""], ["", "definition\n  order_OrdSum_def: \"((a::('a, 'b) OrdSum) \\<le> b) \\<equiv> (a l\\<rightarrow> b = 1)\""], ["", "definition \n  inf_OrdSum_def: \"(a::('a, 'b) OrdSum) \\<sqinter> b = (a l\\<rightarrow> b) * a\""], ["", "definition\n  strict_order_OrdSum_def: \"(a::('a, 'b) OrdSum) < b \\<equiv> (a \\<le> b \\<and> \\<not> b \\<le> a)\""], ["", "lemma OrdSum_first [simp]: \"(a, 1) \\<in> OrdSum\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, 1::'d) \\<in> OrdSum", "by (simp add: OrdSum_def)"], ["", "lemma OrdSum_second [simp]: \"(1, b) \\<in> OrdSum\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'c, b) \\<in> OrdSum", "by (simp add: OrdSum_def)"], ["", "lemma Rep_OrdSum_eq: \"Rep_OrdSum x = Rep_OrdSum y \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_OrdSum x = Rep_OrdSum y \\<Longrightarrow> x = y", "apply (subgoal_tac \"Abs_OrdSum (Rep_OrdSum x) = Abs_OrdSum (Rep_OrdSum y)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Rep_OrdSum x = Rep_OrdSum y;\n     Abs_OrdSum (Rep_OrdSum x) = Abs_OrdSum (Rep_OrdSum y)\\<rbrakk>\n    \\<Longrightarrow> x = y\n 2. Rep_OrdSum x = Rep_OrdSum y \\<Longrightarrow>\n    Abs_OrdSum (Rep_OrdSum x) = Abs_OrdSum (Rep_OrdSum y)", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Abs_OrdSum (Rep_OrdSum x) = Abs_OrdSum (Rep_OrdSum y);\n     True\\<rbrakk>\n    \\<Longrightarrow> x = y\n 2. Rep_OrdSum x = Rep_OrdSum y \\<Longrightarrow>\n    Abs_OrdSum (Rep_OrdSum x) = Abs_OrdSum (Rep_OrdSum y)", "apply (simp add: Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_OrdSum x = Rep_OrdSum y \\<Longrightarrow>\n    Abs_OrdSum (Rep_OrdSum x) = Abs_OrdSum (Rep_OrdSum y)", "by simp"], ["", "lemma Abs_OrdSum_eq: \"x \\<in> OrdSum \\<Longrightarrow> y \\<in> OrdSum \\<Longrightarrow> Abs_OrdSum x = Abs_OrdSum y \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> OrdSum; y \\<in> OrdSum;\n     Abs_OrdSum x = Abs_OrdSum y\\<rbrakk>\n    \\<Longrightarrow> x = y", "apply (subgoal_tac \"Rep_OrdSum (Abs_OrdSum x) = Rep_OrdSum (Abs_OrdSum y)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> OrdSum; y \\<in> OrdSum; Abs_OrdSum x = Abs_OrdSum y;\n     Rep_OrdSum (Abs_OrdSum x) = Rep_OrdSum (Abs_OrdSum y)\\<rbrakk>\n    \\<Longrightarrow> x = y\n 2. \\<lbrakk>x \\<in> OrdSum; y \\<in> OrdSum;\n     Abs_OrdSum x = Abs_OrdSum y\\<rbrakk>\n    \\<Longrightarrow> Rep_OrdSum (Abs_OrdSum x) = Rep_OrdSum (Abs_OrdSum y)", "apply (unfold Abs_OrdSum_inverse) [1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> OrdSum; y \\<in> OrdSum; Abs_OrdSum x = Abs_OrdSum y;\n     x = y\\<rbrakk>\n    \\<Longrightarrow> x = y\n 2. \\<lbrakk>x \\<in> OrdSum; y \\<in> OrdSum;\n     Abs_OrdSum x = Abs_OrdSum y\\<rbrakk>\n    \\<Longrightarrow> Rep_OrdSum (Abs_OrdSum x) = Rep_OrdSum (Abs_OrdSum y)", "by simp_all"], ["", "lemma [simp]: \"fst (Rep_OrdSum a) \\<noteq> 1 \\<Longrightarrow> (snd (Rep_OrdSum a) \\<noteq> 1 = False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Rep_OrdSum a) \\<noteq> (1::'c) \\<Longrightarrow>\n    (snd (Rep_OrdSum a) \\<noteq> (1::'d)) = False", "apply (cut_tac x = a in Rep_OrdSum)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'c);\n     Rep_OrdSum a \\<in> OrdSum\\<rbrakk>\n    \\<Longrightarrow> (snd (Rep_OrdSum a) \\<noteq> (1::'d)) = False", "apply (simp add: OrdSum_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'c);\n     (\\<exists>aa. Rep_OrdSum a = (aa, 1::'d)) \\<or>\n     (\\<exists>b. Rep_OrdSum a = (1::'c, b))\\<rbrakk>\n    \\<Longrightarrow> snd (Rep_OrdSum a) = (1::'d)", "by auto"], ["", "lemma fst_not_one_snd: \"fst (Rep_OrdSum a) \\<noteq> 1 \\<Longrightarrow> (snd (Rep_OrdSum a) = 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Rep_OrdSum a) \\<noteq> (1::'c) \\<Longrightarrow>\n    snd (Rep_OrdSum a) = (1::'d)", "apply (cut_tac x = a in Rep_OrdSum)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'c);\n     Rep_OrdSum a \\<in> OrdSum\\<rbrakk>\n    \\<Longrightarrow> snd (Rep_OrdSum a) = (1::'d)", "apply (simp add: OrdSum_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'c);\n     (\\<exists>aa. Rep_OrdSum a = (aa, 1::'d)) \\<or>\n     (\\<exists>b. Rep_OrdSum a = (1::'c, b))\\<rbrakk>\n    \\<Longrightarrow> snd (Rep_OrdSum a) = (1::'d)", "by auto"], ["", "lemma snd_not_one_fst: \"snd (Rep_OrdSum a) \\<noteq> 1 \\<Longrightarrow> (fst (Rep_OrdSum a) = 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Rep_OrdSum a) \\<noteq> (1::'c) \\<Longrightarrow>\n    fst (Rep_OrdSum a) = (1::'d)", "apply (cut_tac x = a in Rep_OrdSum)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>snd (Rep_OrdSum a) \\<noteq> (1::'c);\n     Rep_OrdSum a \\<in> OrdSum\\<rbrakk>\n    \\<Longrightarrow> fst (Rep_OrdSum a) = (1::'d)", "apply (simp add: OrdSum_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>snd (Rep_OrdSum a) \\<noteq> (1::'c);\n     (\\<exists>aa. Rep_OrdSum a = (aa, 1::'c)) \\<or>\n     (\\<exists>b. Rep_OrdSum a = (1::'d, b))\\<rbrakk>\n    \\<Longrightarrow> fst (Rep_OrdSum a) = (1::'d)", "by auto"], ["", "lemma fst_not_one_simp [simp]: \"fst (Rep_OrdSum c) \\<noteq> 1 \\<Longrightarrow> Abs_OrdSum (fst (Rep_OrdSum c), 1) = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Rep_OrdSum c) \\<noteq> (1::'c) \\<Longrightarrow>\n    Abs_OrdSum (fst (Rep_OrdSum c), 1::'d) = c", "apply (rule  Rep_OrdSum_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Rep_OrdSum c) \\<noteq> (1::'c) \\<Longrightarrow>\n    Rep_OrdSum (Abs_OrdSum (fst (Rep_OrdSum c), 1::'d)) = Rep_OrdSum c", "apply (simp add: Abs_OrdSum_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Rep_OrdSum c) \\<noteq> (1::'c) \\<Longrightarrow>\n    (fst (Rep_OrdSum c), 1::'d) = Rep_OrdSum c", "apply (rule fst_snd_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. fst (Rep_OrdSum c) \\<noteq> (1::'c) \\<Longrightarrow>\n    fst (Rep_OrdSum c) = fst (Rep_OrdSum c)\n 2. fst (Rep_OrdSum c) \\<noteq> (1::'c) \\<Longrightarrow>\n    snd (Rep_OrdSum c) = (1::'d)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Rep_OrdSum c) \\<noteq> (1::'c) \\<Longrightarrow>\n    snd (Rep_OrdSum c) = (1::'d)", "by (simp add: fst_not_one_snd)"], ["", "lemma snd_not_one_simp [simp]: \"snd (Rep_OrdSum c) \\<noteq> 1 \\<Longrightarrow> Abs_OrdSum (1, snd (Rep_OrdSum c)) = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Rep_OrdSum c) \\<noteq> (1::'c) \\<Longrightarrow>\n    Abs_OrdSum (1::'d, snd (Rep_OrdSum c)) = c", "apply (rule  Rep_OrdSum_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Rep_OrdSum c) \\<noteq> (1::'c) \\<Longrightarrow>\n    Rep_OrdSum (Abs_OrdSum (1::'d, snd (Rep_OrdSum c))) = Rep_OrdSum c", "apply (simp add: Abs_OrdSum_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Rep_OrdSum c) \\<noteq> (1::'c) \\<Longrightarrow>\n    (1::'d, snd (Rep_OrdSum c)) = Rep_OrdSum c", "apply (rule fst_snd_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. snd (Rep_OrdSum c) \\<noteq> (1::'c) \\<Longrightarrow>\n    fst (Rep_OrdSum c) = (1::'d)\n 2. snd (Rep_OrdSum c) \\<noteq> (1::'c) \\<Longrightarrow>\n    snd (Rep_OrdSum c) = snd (Rep_OrdSum c)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Rep_OrdSum c) \\<noteq> (1::'c) \\<Longrightarrow>\n    fst (Rep_OrdSum c) = (1::'d)", "by (simp add: snd_not_one_fst)"], ["", "lemma  A: fixes a b::\"('a, 'b) OrdSum\" shows \"(a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "apply (simp add: one_OrdSum_def impr_OrdSum_def impl_OrdSum_def second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (fst (Rep_OrdSum a) = (1::'a) \\<and>\n     fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n     (snd (Rep_OrdSum a) = (1::'b) \\<and>\n      snd (Rep_OrdSum b) = (1::'b) \\<longrightarrow>\n      Abs_OrdSum (1::'a, 1::'b) * a = a * Abs_OrdSum (1::'a, 1::'b)) \\<and>\n     ((snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n       snd (Rep_OrdSum b) \\<noteq> (1::'b)) \\<longrightarrow>\n      (snd (Rep_OrdSum b) = (1::'b) \\<longrightarrow>\n       Abs_OrdSum (1::'a, 1::'b) * a = a * Abs_OrdSum (1::'a, 1::'b)) \\<and>\n      (snd (Rep_OrdSum b) \\<noteq> (1::'b) \\<longrightarrow>\n       Abs_OrdSum\n        (1::'a, snd (Rep_OrdSum a) l\\<rightarrow> snd (Rep_OrdSum b)) *\n       a =\n       a *\n       Abs_OrdSum\n        (1::'a,\n         snd (Rep_OrdSum a) r\\<rightarrow> snd (Rep_OrdSum b))))) \\<and>\n    ((fst (Rep_OrdSum a) = (1::'a) \\<longrightarrow>\n      fst (Rep_OrdSum b) \\<noteq> (1::'a)) \\<longrightarrow>\n     (snd (Rep_OrdSum a) = (1::'b) \\<and>\n      snd (Rep_OrdSum b) = (1::'b) \\<longrightarrow>\n      (fst (Rep_OrdSum a) = (1::'a) \\<longrightarrow> b * a = a * b) \\<and>\n      (fst (Rep_OrdSum a) \\<noteq> (1::'a) \\<longrightarrow>\n       Abs_OrdSum\n        (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b), 1::'b) *\n       a =\n       a *\n       Abs_OrdSum\n        (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n         1::'b))) \\<and>\n     ((snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n       snd (Rep_OrdSum b) \\<noteq> (1::'b)) \\<longrightarrow>\n      (fst (Rep_OrdSum a) = (1::'a) \\<and>\n       snd (Rep_OrdSum b) = (1::'b) \\<longrightarrow>\n       b * a = a * b) \\<and>\n      (fst (Rep_OrdSum a) \\<noteq> (1::'a) \\<longrightarrow>\n       (snd (Rep_OrdSum a) = (1::'b) \\<and>\n        snd (Rep_OrdSum b) = (1::'b) \\<longrightarrow>\n        Abs_OrdSum\n         (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b), 1::'b) *\n        a =\n        a *\n        Abs_OrdSum\n         (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n          1::'b)) \\<and>\n       Abs_OrdSum (1::'a, 1::'b) * a = a * Abs_OrdSum (1::'a, 1::'b))))", "apply safe"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); fst (Rep_OrdSum b) = (1::'a);\n     snd (Rep_OrdSum a) = (1::'b); snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum (1::'a, 1::'b) * a =\n                      a * Abs_OrdSum (1::'a, 1::'b)\n 2. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); fst (Rep_OrdSum b) = (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b);\n     snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum (1::'a, 1::'b) * a =\n                      a * Abs_OrdSum (1::'a, 1::'b)\n 3. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); fst (Rep_OrdSum b) = (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum\n                       (1::'a,\n                        snd (Rep_OrdSum a) l\\<rightarrow>\n                        snd (Rep_OrdSum b)) *\n                      a =\n                      a *\n                      Abs_OrdSum\n                       (1::'a,\n                        snd (Rep_OrdSum a) r\\<rightarrow>\n                        snd (Rep_OrdSum b))\n 4. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); fst (Rep_OrdSum b) = (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum\n                       (1::'a,\n                        snd (Rep_OrdSum a) l\\<rightarrow>\n                        snd (Rep_OrdSum b)) *\n                      a =\n                      a *\n                      Abs_OrdSum\n                       (1::'a,\n                        snd (Rep_OrdSum a) r\\<rightarrow>\n                        snd (Rep_OrdSum b))\n 5. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) = (1::'b); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b) *\n                      a =\n                      a *\n                      Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n 6. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum (1::'a, 1::'b) * a =\n                      a * Abs_OrdSum (1::'a, 1::'b)\n 7. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum (1::'a, 1::'b) * a =\n                      a * Abs_OrdSum (1::'a, 1::'b)\n 8. \\<lbrakk>fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) = (1::'b); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum a) = (1::'a)\\<rbrakk>\n    \\<Longrightarrow> b * a = a * b\n 9. \\<lbrakk>fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) = (1::'b); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b) *\n                      a =\n                      a *\n                      Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n 10. \\<lbrakk>fst (Rep_OrdSum b) \\<noteq> (1::'a);\n      snd (Rep_OrdSum a) \\<noteq> (1::'b); fst (Rep_OrdSum a) = (1::'a);\n      snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n     \\<Longrightarrow> b * a = a * b\nA total of 12 subgoals...", "apply (simp_all add: fst_snd_eq times_OrdSum_def left_right_impl_times first_def second_def Abs_OrdSum_inverse Rep_OrdSum_inverse )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); fst (Rep_OrdSum b) = (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (snd (Rep_OrdSum a) l\\<rightarrow>\n                       snd (Rep_OrdSum b) =\n                       (1::'b) \\<and>\n                       snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                       a = b) \\<and>\n                      ((snd (Rep_OrdSum a) l\\<rightarrow>\n                        snd (Rep_OrdSum b) =\n                        (1::'b) \\<longrightarrow>\n                        snd (Rep_OrdSum a) \\<noteq>\n                        (1::'b)) \\<longrightarrow>\n                       snd (Rep_OrdSum a) = (1::'b) \\<and>\n                       snd (Rep_OrdSum a) r\\<rightarrow>\n                       snd (Rep_OrdSum b) =\n                       (1::'b) \\<longrightarrow>\n                       b = a)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); fst (Rep_OrdSum b) = (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b);\n     snd (Rep_OrdSum a) l\\<rightarrow> snd (Rep_OrdSum b) = (1::'b);\n     snd (Rep_OrdSum a) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> a = b\n 2. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); fst (Rep_OrdSum b) = (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b); snd (Rep_OrdSum a) = (1::'b);\n     snd (Rep_OrdSum a) r\\<rightarrow> snd (Rep_OrdSum b) = (1::'b);\n     snd (Rep_OrdSum a) l\\<rightarrow> snd (Rep_OrdSum b) \\<noteq>\n     (1::'b)\\<rbrakk>\n    \\<Longrightarrow> b = a", "by simp_all"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(('a, 'b) OrdSum, pseudo_hoop_algebra_class)", "proof"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. 1 * a = a\n 4. \\<And>a. a * 1 = a\n 5. \\<And>a. a l\\<rightarrow> a = 1\n 6. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 7. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 8. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 9. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 10. \\<And>a. a r\\<rightarrow> a = 1\nA total of 13 subgoals...", "fix a::\"('a, 'b) OrdSum\""], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. 1 * a = a\n 4. \\<And>a. a * 1 = a\n 5. \\<And>a. a l\\<rightarrow> a = 1\n 6. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 7. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 8. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 9. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 10. \\<And>a. a r\\<rightarrow> a = 1\nA total of 13 subgoals...", "show \"1 * a = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 * a = a", "by (simp add: fst_snd_eq one_OrdSum_def times_OrdSum_def first_def second_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (state)\nthis:\n  1 * a = a\n\ngoal (12 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. a * 1 = a\n 4. \\<And>a. a l\\<rightarrow> a = 1\n 5. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 6. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 7. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 8. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 9. \\<And>a. a r\\<rightarrow> a = 1\n 10. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. a * 1 = a\n 4. \\<And>a. a l\\<rightarrow> a = 1\n 5. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 6. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 7. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 8. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 9. \\<And>a. a r\\<rightarrow> a = 1\n 10. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\nA total of 12 subgoals...", "fix a::\"('a, 'b) OrdSum\""], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. a * 1 = a\n 4. \\<And>a. a l\\<rightarrow> a = 1\n 5. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 6. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 7. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 8. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 9. \\<And>a. a r\\<rightarrow> a = 1\n 10. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\nA total of 12 subgoals...", "show \"a * 1 = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * 1 = a", "by (simp add: fst_snd_eq one_OrdSum_def times_OrdSum_def first_def second_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (state)\nthis:\n  a * 1 = a\n\ngoal (11 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. a l\\<rightarrow> a = 1\n 4. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 5. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 6. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 7. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 8. \\<And>a. a r\\<rightarrow> a = 1\n 9. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 10. \\<And>a b c.\n        a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. a l\\<rightarrow> a = 1\n 4. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 5. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 6. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 7. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 8. \\<And>a. a r\\<rightarrow> a = 1\n 9. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 10. \\<And>a b c.\n        a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\nA total of 11 subgoals...", "fix a::\"('a, 'b) OrdSum\""], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. a l\\<rightarrow> a = 1\n 4. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 5. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 6. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 7. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 8. \\<And>a. a r\\<rightarrow> a = 1\n 9. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 10. \\<And>a b c.\n        a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\nA total of 11 subgoals...", "show \"a l\\<rightarrow> a = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a l\\<rightarrow> a = 1", "by (simp add: one_OrdSum_def impl_OrdSum_def)"], ["proof (state)\nthis:\n  a l\\<rightarrow> a = 1\n\ngoal (10 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 4. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 6. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 7. \\<And>a. a r\\<rightarrow> a = 1\n 8. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 9. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 10. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 4. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 6. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 7. \\<And>a. a r\\<rightarrow> a = 1\n 8. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 9. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 10. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "fix a::\"('a, 'b) OrdSum\""], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 4. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 6. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 7. \\<And>a. a r\\<rightarrow> a = 1\n 8. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 9. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 10. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "show \"a r\\<rightarrow> a = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a r\\<rightarrow> a = 1", "by (simp add: one_OrdSum_def impr_OrdSum_def)"], ["proof (state)\nthis:\n  a r\\<rightarrow> a = 1\n\ngoal (9 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 4. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 6. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 7. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 8. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 9. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 4. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 6. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 7. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 8. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 9. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "fix a b::\"('a, 'b) OrdSum\""], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 4. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 6. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 7. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 8. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 9. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "show \"(a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b", "apply (unfold one_OrdSum_def impl_OrdSum_def second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if snd (Rep_OrdSum a) = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b)\n     then Abs_OrdSum\n           (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b), 1::'b)\n     else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n             fst (Rep_OrdSum b) = (1::'a)\n          then Abs_OrdSum\n                (1::'a,\n                 snd (Rep_OrdSum a) l\\<rightarrow> snd (Rep_OrdSum b))\n          else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                  snd (Rep_OrdSum b) = (1::'b)\n               then b else Abs_OrdSum (1::'a, 1::'b)) *\n    a =\n    (if snd (Rep_OrdSum b) = (1::'b) \\<and> snd (Rep_OrdSum a) = (1::'b)\n     then Abs_OrdSum\n           (fst (Rep_OrdSum b) l\\<rightarrow> fst (Rep_OrdSum a), 1::'b)\n     else if fst (Rep_OrdSum b) = (1::'a) \\<and>\n             fst (Rep_OrdSum a) = (1::'a)\n          then Abs_OrdSum\n                (1::'a,\n                 snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum a))\n          else if fst (Rep_OrdSum b) = (1::'a) \\<and>\n                  snd (Rep_OrdSum a) = (1::'b)\n               then a else Abs_OrdSum (1::'a, 1::'b)) *\n    b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (fst (Rep_OrdSum a) = (1::'a) \\<and>\n     snd (Rep_OrdSum b) = (1::'b) \\<longrightarrow>\n     (fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n      (snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n       Abs_OrdSum (1::'a, 1::'b) * a = Abs_OrdSum (1::'a, 1::'b) * b) \\<and>\n      (snd (Rep_OrdSum a) \\<noteq> (1::'b) \\<longrightarrow>\n       Abs_OrdSum (1::'a, 1::'b) * a = a * b)) \\<and>\n     (fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n      b * a = Abs_OrdSum (1::'a, 1::'b) * b)) \\<and>\n    ((fst (Rep_OrdSum a) = (1::'a) \\<longrightarrow>\n      snd (Rep_OrdSum b) \\<noteq> (1::'b)) \\<longrightarrow>\n     (fst (Rep_OrdSum a) = (1::'a) \\<and>\n      fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n      (snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n       b * a = Abs_OrdSum (1::'a, 1::'b) * b) \\<and>\n      (snd (Rep_OrdSum a) \\<noteq> (1::'b) \\<longrightarrow>\n       Abs_OrdSum\n        (1::'a, snd (Rep_OrdSum a) l\\<rightarrow> snd (Rep_OrdSum b)) *\n       a =\n       Abs_OrdSum\n        (1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum a)) *\n       b)) \\<and>\n     ((fst (Rep_OrdSum a) = (1::'a) \\<longrightarrow>\n       fst (Rep_OrdSum b) \\<noteq> (1::'a)) \\<longrightarrow>\n      (snd (Rep_OrdSum a) = (1::'b) \\<and>\n       snd (Rep_OrdSum b) = (1::'b) \\<longrightarrow>\n       (fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n        (fst (Rep_OrdSum a) = (1::'a) \\<longrightarrow>\n         Abs_OrdSum (1::'a, 1::'b) * a =\n         Abs_OrdSum (1::'a, 1::'b) * b) \\<and>\n        (fst (Rep_OrdSum a) \\<noteq> (1::'a) \\<longrightarrow>\n         Abs_OrdSum (1::'a, 1::'b) * a = a * b)) \\<and>\n       (fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n        Abs_OrdSum\n         (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b), 1::'b) *\n        a =\n        Abs_OrdSum\n         (fst (Rep_OrdSum b) l\\<rightarrow> fst (Rep_OrdSum a), 1::'b) *\n        b)) \\<and>\n      ((snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)) \\<longrightarrow>\n       (fst (Rep_OrdSum b) = (1::'a) \\<and>\n        snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n        (fst (Rep_OrdSum a) = (1::'a) \\<longrightarrow>\n         b * a = Abs_OrdSum (1::'a, 1::'b) * b) \\<and>\n        (fst (Rep_OrdSum a) \\<noteq> (1::'a) \\<longrightarrow>\n         Abs_OrdSum (1::'a, 1::'b) * a = a * b)) \\<and>\n       ((fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n         snd (Rep_OrdSum a) \\<noteq> (1::'b)) \\<longrightarrow>\n        (fst (Rep_OrdSum b) = (1::'a) \\<and>\n         fst (Rep_OrdSum a) = (1::'a) \\<longrightarrow>\n         Abs_OrdSum\n          (1::'a, snd (Rep_OrdSum a) l\\<rightarrow> snd (Rep_OrdSum b)) *\n         a =\n         Abs_OrdSum\n          (1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum a)) *\n         b) \\<and>\n        ((fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n          fst (Rep_OrdSum a) \\<noteq> (1::'a)) \\<longrightarrow>\n         (snd (Rep_OrdSum b) = (1::'b) \\<and>\n          snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n          Abs_OrdSum\n           (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b), 1::'b) *\n          a =\n          Abs_OrdSum\n           (fst (Rep_OrdSum b) l\\<rightarrow> fst (Rep_OrdSum a), 1::'b) *\n          b) \\<and>\n         ((snd (Rep_OrdSum b) = (1::'b) \\<longrightarrow>\n           snd (Rep_OrdSum a) \\<noteq> (1::'b)) \\<longrightarrow>\n          Abs_OrdSum (1::'a, 1::'b) * a =\n          Abs_OrdSum (1::'a, 1::'b) * b))))))", "apply safe"], ["proof (prove)\ngoal (74 subgoals):\n 1. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) = (1::'a); snd (Rep_OrdSum a) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum (1::'a, 1::'b) * a =\n                      Abs_OrdSum (1::'a, 1::'b) * b\n 2. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) = (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum (1::'a, 1::'b) * a = a * b\n 3. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n    \\<Longrightarrow> b * a = Abs_OrdSum (1::'a, 1::'b) * b\n 4. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n     snd (Rep_OrdSum b) = (1::'b); fst (Rep_OrdSum b) = (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum (1::'a, 1::'b) * a = a * b\n 5. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n     snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b) *\n                      a =\n                      Abs_OrdSum\n                       (fst (Rep_OrdSum b) l\\<rightarrow>\n                        fst (Rep_OrdSum a),\n                        1::'b) *\n                      b\n 6. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum (1::'a, 1::'b) * a =\n                      Abs_OrdSum (1::'a, 1::'b) * b\n 7. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum (1::'a, 1::'b) * a =\n                      Abs_OrdSum (1::'a, 1::'b) * b\n 8. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum (1::'a, 1::'b) * a =\n                      Abs_OrdSum (1::'a, 1::'b) * b\n 9. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum (1::'a, 1::'b) * a =\n                      Abs_OrdSum (1::'a, 1::'b) * b\n 10. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n      fst (Rep_OrdSum a) \\<noteq> (1::'a);\n      snd (Rep_OrdSum a) \\<noteq> (1::'b);\n      snd (Rep_OrdSum a) \\<noteq> (1::'b);\n      fst (Rep_OrdSum b) \\<noteq> (1::'a);\n      snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n     \\<Longrightarrow> Abs_OrdSum (1::'a, 1::'b) * a =\n                       Abs_OrdSum (1::'a, 1::'b) * b\nA total of 74 subgoals...", "by (simp_all add: times_OrdSum_def left_impl_times first_def second_def Abs_OrdSum_inverse Rep_OrdSum_inverse )"], ["proof (state)\nthis:\n  (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n\ngoal (8 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 7. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 8. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 7. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 8. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "fix a b::\"('a, 'b) OrdSum\""], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 7. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 8. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "show \"a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)", "apply (unfold one_OrdSum_def impr_OrdSum_def second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a *\n    (if snd (Rep_OrdSum a) = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b)\n     then Abs_OrdSum\n           (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b), 1::'b)\n     else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n             fst (Rep_OrdSum b) = (1::'a)\n          then Abs_OrdSum\n                (1::'a,\n                 snd (Rep_OrdSum a) r\\<rightarrow> snd (Rep_OrdSum b))\n          else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                  snd (Rep_OrdSum b) = (1::'b)\n               then b else Abs_OrdSum (1::'a, 1::'b)) =\n    b *\n    (if snd (Rep_OrdSum b) = (1::'b) \\<and> snd (Rep_OrdSum a) = (1::'b)\n     then Abs_OrdSum\n           (fst (Rep_OrdSum b) r\\<rightarrow> fst (Rep_OrdSum a), 1::'b)\n     else if fst (Rep_OrdSum b) = (1::'a) \\<and>\n             fst (Rep_OrdSum a) = (1::'a)\n          then Abs_OrdSum\n                (1::'a,\n                 snd (Rep_OrdSum b) r\\<rightarrow> snd (Rep_OrdSum a))\n          else if fst (Rep_OrdSum b) = (1::'a) \\<and>\n                  snd (Rep_OrdSum a) = (1::'b)\n               then a else Abs_OrdSum (1::'a, 1::'b))", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (fst (Rep_OrdSum a) = (1::'a) \\<and>\n     snd (Rep_OrdSum b) = (1::'b) \\<longrightarrow>\n     (fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n      (snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n       a * Abs_OrdSum (1::'a, 1::'b) = b * Abs_OrdSum (1::'a, 1::'b)) \\<and>\n      (snd (Rep_OrdSum a) \\<noteq> (1::'b) \\<longrightarrow>\n       a * Abs_OrdSum (1::'a, 1::'b) = b * a)) \\<and>\n     (fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n      a * b = b * Abs_OrdSum (1::'a, 1::'b))) \\<and>\n    ((fst (Rep_OrdSum a) = (1::'a) \\<longrightarrow>\n      snd (Rep_OrdSum b) \\<noteq> (1::'b)) \\<longrightarrow>\n     (fst (Rep_OrdSum a) = (1::'a) \\<and>\n      fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n      (snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n       a * b = b * Abs_OrdSum (1::'a, 1::'b)) \\<and>\n      (snd (Rep_OrdSum a) \\<noteq> (1::'b) \\<longrightarrow>\n       a *\n       Abs_OrdSum\n        (1::'a, snd (Rep_OrdSum a) r\\<rightarrow> snd (Rep_OrdSum b)) =\n       b *\n       Abs_OrdSum\n        (1::'a,\n         snd (Rep_OrdSum b) r\\<rightarrow> snd (Rep_OrdSum a)))) \\<and>\n     ((fst (Rep_OrdSum a) = (1::'a) \\<longrightarrow>\n       fst (Rep_OrdSum b) \\<noteq> (1::'a)) \\<longrightarrow>\n      (snd (Rep_OrdSum a) = (1::'b) \\<and>\n       snd (Rep_OrdSum b) = (1::'b) \\<longrightarrow>\n       (fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n        (fst (Rep_OrdSum a) = (1::'a) \\<longrightarrow>\n         a * Abs_OrdSum (1::'a, 1::'b) =\n         b * Abs_OrdSum (1::'a, 1::'b)) \\<and>\n        (fst (Rep_OrdSum a) \\<noteq> (1::'a) \\<longrightarrow>\n         a * Abs_OrdSum (1::'a, 1::'b) = b * a)) \\<and>\n       (fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n        a *\n        Abs_OrdSum\n         (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b), 1::'b) =\n        b *\n        Abs_OrdSum\n         (fst (Rep_OrdSum b) r\\<rightarrow> fst (Rep_OrdSum a),\n          1::'b))) \\<and>\n      ((snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)) \\<longrightarrow>\n       (fst (Rep_OrdSum b) = (1::'a) \\<and>\n        snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n        (fst (Rep_OrdSum a) = (1::'a) \\<longrightarrow>\n         a * b = b * Abs_OrdSum (1::'a, 1::'b)) \\<and>\n        (fst (Rep_OrdSum a) \\<noteq> (1::'a) \\<longrightarrow>\n         a * Abs_OrdSum (1::'a, 1::'b) = b * a)) \\<and>\n       ((fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n         snd (Rep_OrdSum a) \\<noteq> (1::'b)) \\<longrightarrow>\n        (fst (Rep_OrdSum b) = (1::'a) \\<and>\n         fst (Rep_OrdSum a) = (1::'a) \\<longrightarrow>\n         a *\n         Abs_OrdSum\n          (1::'a, snd (Rep_OrdSum a) r\\<rightarrow> snd (Rep_OrdSum b)) =\n         b *\n         Abs_OrdSum\n          (1::'a,\n           snd (Rep_OrdSum b) r\\<rightarrow> snd (Rep_OrdSum a))) \\<and>\n        ((fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n          fst (Rep_OrdSum a) \\<noteq> (1::'a)) \\<longrightarrow>\n         (snd (Rep_OrdSum b) = (1::'b) \\<and>\n          snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n          a *\n          Abs_OrdSum\n           (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b), 1::'b) =\n          b *\n          Abs_OrdSum\n           (fst (Rep_OrdSum b) r\\<rightarrow> fst (Rep_OrdSum a),\n            1::'b)) \\<and>\n         ((snd (Rep_OrdSum b) = (1::'b) \\<longrightarrow>\n           snd (Rep_OrdSum a) \\<noteq> (1::'b)) \\<longrightarrow>\n          a * Abs_OrdSum (1::'a, 1::'b) =\n          b * Abs_OrdSum (1::'a, 1::'b)))))))", "apply safe"], ["proof (prove)\ngoal (74 subgoals):\n 1. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) = (1::'a); snd (Rep_OrdSum a) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> a * Abs_OrdSum (1::'a, 1::'b) =\n                      b * Abs_OrdSum (1::'a, 1::'b)\n 2. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) = (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> a * Abs_OrdSum (1::'a, 1::'b) = b * a\n 3. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n    \\<Longrightarrow> a * b = b * Abs_OrdSum (1::'a, 1::'b)\n 4. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n     snd (Rep_OrdSum b) = (1::'b); fst (Rep_OrdSum b) = (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a)\\<rbrakk>\n    \\<Longrightarrow> a * Abs_OrdSum (1::'a, 1::'b) = b * a\n 5. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n     snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n    \\<Longrightarrow> a *\n                      Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b) =\n                      b *\n                      Abs_OrdSum\n                       (fst (Rep_OrdSum b) r\\<rightarrow>\n                        fst (Rep_OrdSum a),\n                        1::'b)\n 6. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> a * Abs_OrdSum (1::'a, 1::'b) =\n                      b * Abs_OrdSum (1::'a, 1::'b)\n 7. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> a * Abs_OrdSum (1::'a, 1::'b) =\n                      b * Abs_OrdSum (1::'a, 1::'b)\n 8. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> a * Abs_OrdSum (1::'a, 1::'b) =\n                      b * Abs_OrdSum (1::'a, 1::'b)\n 9. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> a * Abs_OrdSum (1::'a, 1::'b) =\n                      b * Abs_OrdSum (1::'a, 1::'b)\n 10. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n      fst (Rep_OrdSum a) \\<noteq> (1::'a);\n      snd (Rep_OrdSum a) \\<noteq> (1::'b);\n      snd (Rep_OrdSum a) \\<noteq> (1::'b);\n      fst (Rep_OrdSum b) \\<noteq> (1::'a);\n      snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n     \\<Longrightarrow> a * Abs_OrdSum (1::'a, 1::'b) =\n                       b * Abs_OrdSum (1::'a, 1::'b)\nA total of 74 subgoals...", "by (simp_all add: fst_snd_eq times_OrdSum_def right_impl_times first_def second_def Abs_OrdSum_inverse Rep_OrdSum_inverse )"], ["proof (state)\nthis:\n  a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n\ngoal (7 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 7. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 7. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "fix a b::\"('a, 'b) OrdSum\""], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n 7. \\<And>a b. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "show \"(a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)", "by (rule A)"], ["proof (state)\nthis:\n  (a l\\<rightarrow> b) * a = a * (a r\\<rightarrow> b)\n\ngoal (6 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c", "fix a b c::\"('a, 'b) OrdSum\""], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 5. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 6. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c", "show \"a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c", "apply (unfold times_OrdSum_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if second a = (1::'b) \\<and> second b = (1::'b)\n     then Abs_OrdSum (first a * first b, 1::'b)\n     else if first a = (1::'a) \\<and> first b = (1::'a)\n          then Abs_OrdSum (1::'a, second a * second b)\n          else if first a = (1::'a) \\<and> second b = (1::'b) then b\n               else a) l\\<rightarrow>\n    c =\n    a l\\<rightarrow> b l\\<rightarrow> c", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (first a = (1::'a) \\<and> second b = (1::'b) \\<longrightarrow>\n     (first b = (1::'a) \\<longrightarrow>\n      (second a = (1::'b) \\<longrightarrow>\n       Abs_OrdSum (1::'a, 1::'b) l\\<rightarrow> c =\n       a l\\<rightarrow> b l\\<rightarrow> c) \\<and>\n      (second a \\<noteq> (1::'b) \\<longrightarrow>\n       Abs_OrdSum (1::'a, second a) l\\<rightarrow> c =\n       a l\\<rightarrow> b l\\<rightarrow> c)) \\<and>\n     (first b \\<noteq> (1::'a) \\<longrightarrow>\n      (second a = (1::'b) \\<longrightarrow>\n       Abs_OrdSum (first b, 1::'b) l\\<rightarrow> c =\n       a l\\<rightarrow> b l\\<rightarrow> c) \\<and>\n      (second a \\<noteq> (1::'b) \\<longrightarrow>\n       b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c))) \\<and>\n    ((first a = (1::'a) \\<longrightarrow>\n      second b \\<noteq> (1::'b)) \\<longrightarrow>\n     (first a = (1::'a) \\<and> first b = (1::'a) \\<longrightarrow>\n      Abs_OrdSum (1::'a, second a * second b) l\\<rightarrow> c =\n      a l\\<rightarrow> b l\\<rightarrow> c) \\<and>\n     ((first a = (1::'a) \\<longrightarrow>\n       first b \\<noteq> (1::'a)) \\<longrightarrow>\n      (second a = (1::'b) \\<and> second b = (1::'b) \\<longrightarrow>\n       Abs_OrdSum (first a * first b, 1::'b) l\\<rightarrow> c =\n       a l\\<rightarrow> b l\\<rightarrow> c) \\<and>\n      ((second a = (1::'b) \\<longrightarrow>\n        second b \\<noteq> (1::'b)) \\<longrightarrow>\n       a l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c)))", "apply safe"], ["proof (prove)\ngoal (15 subgoals):\n 1. \\<lbrakk>first a = (1::'a); second b = (1::'b); first b = (1::'a);\n     second a = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum (1::'a, 1::'b) l\\<rightarrow> c =\n                      a l\\<rightarrow> b l\\<rightarrow> c\n 2. \\<lbrakk>first a = (1::'a); second b = (1::'b); first b = (1::'a);\n     second a \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum (1::'a, second a) l\\<rightarrow> c =\n                      a l\\<rightarrow> b l\\<rightarrow> c\n 3. \\<lbrakk>first a = (1::'a); second b = (1::'b);\n     first b \\<noteq> (1::'a); second a = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum (first b, 1::'b) l\\<rightarrow> c =\n                      a l\\<rightarrow> b l\\<rightarrow> c\n 4. \\<lbrakk>first a = (1::'a); second b = (1::'b);\n     first b \\<noteq> (1::'a); second a \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> b l\\<rightarrow> c =\n                      a l\\<rightarrow> b l\\<rightarrow> c\n 5. \\<lbrakk>first a \\<noteq> (1::'a); first a \\<noteq> (1::'a);\n     second a = (1::'b); second b = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum (first a * first b, 1::'b) l\\<rightarrow>\n                      c =\n                      a l\\<rightarrow> b l\\<rightarrow> c\n 6. \\<lbrakk>first a \\<noteq> (1::'a); first a \\<noteq> (1::'a);\n     second a \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> a l\\<rightarrow> c =\n                      a l\\<rightarrow> b l\\<rightarrow> c\n 7. \\<lbrakk>first a \\<noteq> (1::'a); first a \\<noteq> (1::'a);\n     second b \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> a l\\<rightarrow> c =\n                      a l\\<rightarrow> b l\\<rightarrow> c\n 8. \\<lbrakk>first a \\<noteq> (1::'a); first b \\<noteq> (1::'a);\n     second a = (1::'b); second b = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> Abs_OrdSum (first a * first b, 1::'b) l\\<rightarrow>\n                      c =\n                      a l\\<rightarrow> b l\\<rightarrow> c\n 9. \\<lbrakk>first a \\<noteq> (1::'a); first b \\<noteq> (1::'a);\n     second a \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> a l\\<rightarrow> c =\n                      a l\\<rightarrow> b l\\<rightarrow> c\n 10. \\<lbrakk>first a \\<noteq> (1::'a); first b \\<noteq> (1::'a);\n      second b \\<noteq> (1::'b)\\<rbrakk>\n     \\<Longrightarrow> a l\\<rightarrow> c =\n                       a l\\<rightarrow> b l\\<rightarrow> c\nA total of 15 subgoals...", "apply (simp_all add: impl_OrdSum_def)"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<lbrakk>first a = (1::'a); second b = (1::'b); first b = (1::'a);\n     second a = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (first (Abs_OrdSum (1::'a, 1::'b)) =\n                       (1::'a) \\<longrightarrow>\n                       (second (Abs_OrdSum (1::'a, 1::'b)) =\n                        (1::'b) \\<longrightarrow>\n                        (first c = (1::'a) \\<longrightarrow>\n                         second c \\<noteq> (1::'b) \\<longrightarrow>\n                         (first (Abs_OrdSum (1::'a, second c)) =\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second c)) =\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, second c) =\n                           Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                          (second (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, second c) =\n                           Abs_OrdSum\n                            (1::'a,\n                             second (Abs_OrdSum (1::'a, second c))))) \\<and>\n                         (first (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second c)) =\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, second c) =\n                           Abs_OrdSum\n                            (first (Abs_OrdSum (1::'a, second c)),\n                             1::'b)) \\<and>\n                          (second (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, second c) = 1))) \\<and>\n                        (first c \\<noteq> (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          (first (Abs_OrdSum (first c, 1::'b)) =\n                           (1::'a) \\<longrightarrow>\n                           (second (Abs_OrdSum (first c, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (first c, 1::'b) =\n                            Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (second (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (first c, 1::'b) =\n                            Abs_OrdSum\n                             (1::'a,\n                              second (Abs_OrdSum (first c, 1::'b))))) \\<and>\n                          (first (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                           (1::'a) \\<longrightarrow>\n                           (second (Abs_OrdSum (first c, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (first c, 1::'b) =\n                            Abs_OrdSum\n                             (first (Abs_OrdSum (first c, 1::'b)),\n                              1::'b)) \\<and>\n                           (second (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (first c, 1::'b) = 1))) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (first 1 = (1::'a) \\<longrightarrow>\n                           (second 1 = (1::'b) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, second 1))) \\<and>\n                          (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                           second 1 = (1::'b) \\<longrightarrow>\n                           1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                       (second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (first c = (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          Abs_OrdSum (1::'a, 1::'b) =\n                          Abs_OrdSum\n                           (1::'a,\n                            second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (first (Abs_OrdSum (1::'a, second c)) =\n                           (1::'a) \\<longrightarrow>\n                           (second (Abs_OrdSum (1::'a, second c)) =\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (1::'a,\n                              second\n                               (Abs_OrdSum (1::'a, 1::'b)) l\\<rightarrow>\n                              second c) =\n                            Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (second (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (1::'a,\n                              second\n                               (Abs_OrdSum (1::'a, 1::'b)) l\\<rightarrow>\n                              second c) =\n                            Abs_OrdSum\n                             (1::'a,\n                              second\n                               (Abs_OrdSum (1::'a, second c))))) \\<and>\n                          (first (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                           (1::'a) \\<longrightarrow>\n                           (second (Abs_OrdSum (1::'a, second c)) =\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (1::'a,\n                              second\n                               (Abs_OrdSum (1::'a, 1::'b)) l\\<rightarrow>\n                              second c) =\n                            Abs_OrdSum\n                             (first (Abs_OrdSum (1::'a, second c)),\n                              1::'b)) \\<and>\n                           (second (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (1::'a,\n                              second\n                               (Abs_OrdSum (1::'a, 1::'b)) l\\<rightarrow>\n                              second c) =\n                            1)))) \\<and>\n                        (first c \\<noteq> (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          (first (Abs_OrdSum (first c, 1::'b)) =\n                           (1::'a) \\<longrightarrow>\n                           (second (Abs_OrdSum (first c, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            c = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (second (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            c =\n                            Abs_OrdSum\n                             (1::'a,\n                              second (Abs_OrdSum (first c, 1::'b))))) \\<and>\n                          (first (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                           (1::'a) \\<longrightarrow>\n                           (second (Abs_OrdSum (first c, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            c =\n                            Abs_OrdSum\n                             (first (Abs_OrdSum (first c, 1::'b)),\n                              1::'b)) \\<and>\n                           (second (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            c = 1))) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (first 1 = (1::'a) \\<longrightarrow>\n                           (second 1 = (1::'b) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, second 1))) \\<and>\n                          (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                           second 1 = (1::'b) \\<longrightarrow>\n                           1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                      (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                       (1::'a) \\<longrightarrow>\n                       (second (Abs_OrdSum (1::'a, 1::'b)) =\n                        (1::'b) \\<longrightarrow>\n                        (first c = (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          Abs_OrdSum (1::'a, 1::'b) =\n                          Abs_OrdSum\n                           (first (Abs_OrdSum (1::'a, 1::'b)),\n                            1::'b)) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (first (Abs_OrdSum (1::'a, second c)) =\n                           (1::'a) \\<longrightarrow>\n                           (second (Abs_OrdSum (1::'a, second c)) =\n                            (1::'b) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (second (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            1 =\n                            Abs_OrdSum\n                             (1::'a,\n                              second\n                               (Abs_OrdSum (1::'a, second c))))) \\<and>\n                          (first (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                           (1::'a) \\<longrightarrow>\n                           second (Abs_OrdSum (1::'a, second c)) =\n                           (1::'b) \\<longrightarrow>\n                           1 =\n                           Abs_OrdSum\n                            (first (Abs_OrdSum (1::'a, second c)),\n                             1::'b)))) \\<and>\n                        (first c \\<noteq> (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          (first (Abs_OrdSum (first c, 1::'b)) =\n                           (1::'a) \\<longrightarrow>\n                           (second (Abs_OrdSum (first c, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (first\n                               (Abs_OrdSum (1::'a, 1::'b)) l\\<rightarrow>\n                              first c,\n                              1::'b) =\n                            Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (second (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (first\n                               (Abs_OrdSum (1::'a, 1::'b)) l\\<rightarrow>\n                              first c,\n                              1::'b) =\n                            Abs_OrdSum\n                             (1::'a,\n                              second (Abs_OrdSum (first c, 1::'b))))) \\<and>\n                          (first (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                           (1::'a) \\<longrightarrow>\n                           (second (Abs_OrdSum (first c, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (first\n                               (Abs_OrdSum (1::'a, 1::'b)) l\\<rightarrow>\n                              first c,\n                              1::'b) =\n                            Abs_OrdSum\n                             (first (Abs_OrdSum (first c, 1::'b)),\n                              1::'b)) \\<and>\n                           (second (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (first\n                               (Abs_OrdSum (1::'a, 1::'b)) l\\<rightarrow>\n                              first c,\n                              1::'b) =\n                            1))) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (first 1 = (1::'a) \\<longrightarrow>\n                           (second 1 = (1::'b) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, second 1))) \\<and>\n                          (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                           second 1 = (1::'b) \\<longrightarrow>\n                           1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                       (second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (first c = (1::'a) \\<longrightarrow>\n                         second c \\<noteq> (1::'b) \\<longrightarrow>\n                         (first (Abs_OrdSum (1::'a, second c)) =\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second c)) =\n                           (1::'b) \\<longrightarrow>\n                           1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                          (second (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           1 =\n                           Abs_OrdSum\n                            (1::'a,\n                             second (Abs_OrdSum (1::'a, second c))))) \\<and>\n                         (first (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          second (Abs_OrdSum (1::'a, second c)) =\n                          (1::'b) \\<longrightarrow>\n                          1 =\n                          Abs_OrdSum\n                           (first (Abs_OrdSum (1::'a, second c)),\n                            1::'b))) \\<and>\n                        (first c \\<noteq> (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          (first (Abs_OrdSum (first c, 1::'b)) =\n                           (1::'a) \\<longrightarrow>\n                           (second (Abs_OrdSum (first c, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (second (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            1 =\n                            Abs_OrdSum\n                             (1::'a,\n                              second (Abs_OrdSum (first c, 1::'b))))) \\<and>\n                          (first (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                           (1::'a) \\<longrightarrow>\n                           second (Abs_OrdSum (first c, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           1 =\n                           Abs_OrdSum\n                            (first (Abs_OrdSum (first c, 1::'b)),\n                             1::'b))) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (first 1 = (1::'a) \\<longrightarrow>\n                           (second 1 = (1::'b) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, second 1))) \\<and>\n                          (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                           second 1 = (1::'b) \\<longrightarrow>\n                           1 = Abs_OrdSum (first 1, 1::'b))))))\n 2. \\<lbrakk>first a = (1::'a); second b = (1::'b); first b = (1::'a);\n     second a \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (first (Abs_OrdSum (1::'a, second a)) =\n                       (1::'a) \\<longrightarrow>\n                       (second (Abs_OrdSum (1::'a, second a)) =\n                        (1::'b) \\<longrightarrow>\n                        (first c = (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                          (1::'b) \\<longrightarrow>\n                          (first (Abs_OrdSum (1::'a, 1::'b)) =\n                           (1::'a) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, 1::'b) =\n                           Abs_OrdSum\n                            (1::'a,\n                             second a l\\<rightarrow>\n                             second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                          (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                           (1::'a) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second c)) =\n                           (1::'b) \\<longrightarrow>\n                           first (Abs_OrdSum (1::'a, second c)) =\n                           (1::'a) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, second c) =\n                           Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                          (second (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first (Abs_OrdSum (1::'a, second c)) =\n                            (1::'a) \\<longrightarrow>\n                            Abs_OrdSum (1::'a, second c) =\n                            Abs_OrdSum\n                             (1::'a,\n                              second a l\\<rightarrow>\n                              second (Abs_OrdSum (1::'a, second c)))) \\<and>\n                           (first (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            Abs_OrdSum (1::'a, second c) = 1)))) \\<and>\n                        (first c \\<noteq> (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          (second (Abs_OrdSum (first c, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           first (Abs_OrdSum (first c, 1::'b)) =\n                           (1::'a) \\<longrightarrow>\n                           Abs_OrdSum (first c, 1::'b) =\n                           Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                          (second (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first (Abs_OrdSum (first c, 1::'b)) =\n                            (1::'a) \\<longrightarrow>\n                            Abs_OrdSum (first c, 1::'b) =\n                            Abs_OrdSum\n                             (1::'a,\n                              second a l\\<rightarrow>\n                              second (Abs_OrdSum (first c, 1::'b)))) \\<and>\n                           (first (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            Abs_OrdSum (first c, 1::'b) = 1))) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (second 1 = (1::'b) \\<longrightarrow>\n                           first 1 = (1::'a) \\<longrightarrow>\n                           1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                          (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                           first 1 = (1::'a) \\<longrightarrow>\n                           1 =\n                           Abs_OrdSum\n                            (1::'a,\n                             second a l\\<rightarrow> second 1))))) \\<and>\n                       (second (Abs_OrdSum (1::'a, second a)) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (first c = (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                          (1::'b) \\<longrightarrow>\n                          (first (Abs_OrdSum (1::'a, 1::'b)) =\n                           (1::'a) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, 1::'b) =\n                           Abs_OrdSum\n                            (1::'a,\n                             second a l\\<rightarrow>\n                             second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                          (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                           (1::'a) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second c)) =\n                           (1::'b) \\<longrightarrow>\n                           (first (Abs_OrdSum (1::'a, second c)) =\n                            (1::'a) \\<longrightarrow>\n                            Abs_OrdSum\n                             (1::'a,\n                              second\n                               (Abs_OrdSum (1::'a, second a)) l\\<rightarrow>\n                              second c) =\n                            Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (first (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            Abs_OrdSum\n                             (1::'a,\n                              second\n                               (Abs_OrdSum (1::'a, second a)) l\\<rightarrow>\n                              second c) =\n                            Abs_OrdSum (1::'a, second c))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first (Abs_OrdSum (1::'a, second c)) =\n                            (1::'a) \\<longrightarrow>\n                            Abs_OrdSum\n                             (1::'a,\n                              second\n                               (Abs_OrdSum (1::'a, second a)) l\\<rightarrow>\n                              second c) =\n                            Abs_OrdSum\n                             (1::'a,\n                              second a l\\<rightarrow>\n                              second (Abs_OrdSum (1::'a, second c)))) \\<and>\n                           (first (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            Abs_OrdSum\n                             (1::'a,\n                              second\n                               (Abs_OrdSum (1::'a, second a)) l\\<rightarrow>\n                              second c) =\n                            1)))) \\<and>\n                        (first c \\<noteq> (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          (second (Abs_OrdSum (first c, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first (Abs_OrdSum (first c, 1::'b)) =\n                            (1::'a) \\<longrightarrow>\n                            c = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (first (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            c = Abs_OrdSum (first c, 1::'b))) \\<and>\n                          (second (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first (Abs_OrdSum (first c, 1::'b)) =\n                            (1::'a) \\<longrightarrow>\n                            c =\n                            Abs_OrdSum\n                             (1::'a,\n                              second a l\\<rightarrow>\n                              second (Abs_OrdSum (first c, 1::'b)))) \\<and>\n                           (first (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            c = 1))) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (second 1 = (1::'b) \\<longrightarrow>\n                           first 1 = (1::'a) \\<longrightarrow>\n                           1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                          (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                           first 1 = (1::'a) \\<longrightarrow>\n                           1 =\n                           Abs_OrdSum\n                            (1::'a,\n                             second a l\\<rightarrow> second 1)))))) \\<and>\n                      (first (Abs_OrdSum (1::'a, second a)) \\<noteq>\n                       (1::'a) \\<longrightarrow>\n                       (second (Abs_OrdSum (1::'a, second a)) =\n                        (1::'b) \\<longrightarrow>\n                        (first c = (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                          (1::'b) \\<longrightarrow>\n                          (first (Abs_OrdSum (1::'a, 1::'b)) =\n                           (1::'a) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, 1::'b) =\n                           Abs_OrdSum\n                            (1::'a,\n                             second a l\\<rightarrow>\n                             second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                          (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                           (1::'a) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second c)) =\n                           (1::'b) \\<longrightarrow>\n                           (first (Abs_OrdSum (1::'a, second c)) =\n                            (1::'a) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (first (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, second c))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           first (Abs_OrdSum (1::'a, second c)) =\n                           (1::'a) \\<longrightarrow>\n                           1 =\n                           Abs_OrdSum\n                            (1::'a,\n                             second a l\\<rightarrow>\n                             second\n                              (Abs_OrdSum (1::'a, second c)))))) \\<and>\n                        (first c \\<noteq> (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          (second (Abs_OrdSum (first c, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first (Abs_OrdSum (first c, 1::'b)) =\n                            (1::'a) \\<longrightarrow>\n                            Abs_OrdSum\n                             (first\n                               (Abs_OrdSum (1::'a, second a)) l\\<rightarrow>\n                              first c,\n                              1::'b) =\n                            Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (first (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            Abs_OrdSum\n                             (first\n                               (Abs_OrdSum (1::'a, second a)) l\\<rightarrow>\n                              first c,\n                              1::'b) =\n                            Abs_OrdSum (first c, 1::'b))) \\<and>\n                          (second (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first (Abs_OrdSum (first c, 1::'b)) =\n                            (1::'a) \\<longrightarrow>\n                            Abs_OrdSum\n                             (first\n                               (Abs_OrdSum (1::'a, second a)) l\\<rightarrow>\n                              first c,\n                              1::'b) =\n                            Abs_OrdSum\n                             (1::'a,\n                              second a l\\<rightarrow>\n                              second (Abs_OrdSum (first c, 1::'b)))) \\<and>\n                           (first (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            Abs_OrdSum\n                             (first\n                               (Abs_OrdSum (1::'a, second a)) l\\<rightarrow>\n                              first c,\n                              1::'b) =\n                            1))) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (second 1 = (1::'b) \\<longrightarrow>\n                           first 1 = (1::'a) \\<longrightarrow>\n                           1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                          (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                           first 1 = (1::'a) \\<longrightarrow>\n                           1 =\n                           Abs_OrdSum\n                            (1::'a,\n                             second a l\\<rightarrow> second 1))))) \\<and>\n                       (second (Abs_OrdSum (1::'a, second a)) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (first c = (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                          (second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           first (Abs_OrdSum (1::'a, 1::'b)) =\n                           (1::'a) \\<longrightarrow>\n                           1 =\n                           Abs_OrdSum\n                            (1::'a,\n                             second a l\\<rightarrow>\n                             second (Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second c)) =\n                           (1::'b) \\<longrightarrow>\n                           (first (Abs_OrdSum (1::'a, second c)) =\n                            (1::'a) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (first (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, second c))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           first (Abs_OrdSum (1::'a, second c)) =\n                           (1::'a) \\<longrightarrow>\n                           1 =\n                           Abs_OrdSum\n                            (1::'a,\n                             second a l\\<rightarrow>\n                             second\n                              (Abs_OrdSum (1::'a, second c)))))) \\<and>\n                        (first c \\<noteq> (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          (second (Abs_OrdSum (first c, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first (Abs_OrdSum (first c, 1::'b)) =\n                            (1::'a) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (first (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            1 = Abs_OrdSum (first c, 1::'b))) \\<and>\n                          (second (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           first (Abs_OrdSum (first c, 1::'b)) =\n                           (1::'a) \\<longrightarrow>\n                           1 =\n                           Abs_OrdSum\n                            (1::'a,\n                             second a l\\<rightarrow>\n                             second (Abs_OrdSum (first c, 1::'b))))) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (second 1 = (1::'b) \\<longrightarrow>\n                           first 1 = (1::'a) \\<longrightarrow>\n                           1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                          (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                           first 1 = (1::'a) \\<longrightarrow>\n                           1 =\n                           Abs_OrdSum\n                            (1::'a, second a l\\<rightarrow> second 1))))))\n 3. \\<lbrakk>first a = (1::'a); second b = (1::'b);\n     first b \\<noteq> (1::'a); second a = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (first (Abs_OrdSum (first b, 1::'b)) =\n                       (1::'a) \\<longrightarrow>\n                       (second (Abs_OrdSum (first b, 1::'b)) =\n                        (1::'b) \\<longrightarrow>\n                        (first c = (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          (first (Abs_OrdSum (1::'a, 1::'b)) =\n                           (1::'a) \\<longrightarrow>\n                           second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, 1::'b) =\n                           Abs_OrdSum\n                            (1::'a,\n                             second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                          (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                           (1::'a) \\<longrightarrow>\n                           (second (Abs_OrdSum (1::'a, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (1::'a, 1::'b) =\n                            Abs_OrdSum\n                             (first (Abs_OrdSum (1::'a, 1::'b)),\n                              1::'b)) \\<and>\n                           (second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (1::'a, 1::'b) = 1))) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (first 1 = (1::'a) \\<longrightarrow>\n                           (second 1 = (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (1::'a, second c) =\n                            Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (1::'a, second c) =\n                            Abs_OrdSum (1::'a, second 1))) \\<and>\n                          (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                           (second 1 = (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (1::'a, second c) =\n                            Abs_OrdSum (first 1, 1::'b)) \\<and>\n                           (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (1::'a, second c) = 1)))) \\<and>\n                        (first c \\<noteq> (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          (first\n                            (Abs_OrdSum\n                              (first b l\\<rightarrow> first c, 1::'b)) =\n                           (1::'a) \\<longrightarrow>\n                           (second\n                             (Abs_OrdSum\n                               (first b l\\<rightarrow> first c, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (first c, 1::'b) =\n                            Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (second\n                             (Abs_OrdSum\n                               (first b l\\<rightarrow> first c,\n                                1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (first c, 1::'b) =\n                            Abs_OrdSum\n                             (1::'a,\n                              second\n                               (Abs_OrdSum\n                                 (first b l\\<rightarrow> first c,\n                                  1::'b))))) \\<and>\n                          (first\n                            (Abs_OrdSum\n                              (first b l\\<rightarrow> first c,\n                               1::'b)) \\<noteq>\n                           (1::'a) \\<longrightarrow>\n                           (second\n                             (Abs_OrdSum\n                               (first b l\\<rightarrow> first c, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (first c, 1::'b) =\n                            Abs_OrdSum\n                             (first\n                               (Abs_OrdSum\n                                 (first b l\\<rightarrow> first c, 1::'b)),\n                              1::'b)) \\<and>\n                           (second\n                             (Abs_OrdSum\n                               (first b l\\<rightarrow> first c,\n                                1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (first c, 1::'b) = 1))) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (first 1 = (1::'a) \\<longrightarrow>\n                           (second 1 = (1::'b) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, second 1))) \\<and>\n                          (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                           second 1 = (1::'b) \\<longrightarrow>\n                           1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                       (second (Abs_OrdSum (first b, 1::'b)) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (first c = (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          (first (Abs_OrdSum (1::'a, 1::'b)) =\n                           (1::'a) \\<longrightarrow>\n                           second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, 1::'b) =\n                           Abs_OrdSum\n                            (1::'a,\n                             second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                          (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                           (1::'a) \\<longrightarrow>\n                           (second (Abs_OrdSum (1::'a, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (1::'a, 1::'b) =\n                            Abs_OrdSum\n                             (first (Abs_OrdSum (1::'a, 1::'b)),\n                              1::'b)) \\<and>\n                           (second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (1::'a, 1::'b) = 1))) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (first 1 = (1::'a) \\<longrightarrow>\n                           (second 1 = (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (1::'a,\n                              second\n                               (Abs_OrdSum (first b, 1::'b)) l\\<rightarrow>\n                              second c) =\n                            Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (1::'a,\n                              second\n                               (Abs_OrdSum (first b, 1::'b)) l\\<rightarrow>\n                              second c) =\n                            Abs_OrdSum (1::'a, second 1))) \\<and>\n                          (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                           (second 1 = (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (1::'a,\n                              second\n                               (Abs_OrdSum (first b, 1::'b)) l\\<rightarrow>\n                              second c) =\n                            Abs_OrdSum (first 1, 1::'b)) \\<and>\n                           (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (1::'a,\n                              second\n                               (Abs_OrdSum (first b, 1::'b)) l\\<rightarrow>\n                              second c) =\n                            1)))) \\<and>\n                        (first c \\<noteq> (1::'a) \\<longrightarrow>\n                         (second c = (1::'b) \\<longrightarrow>\n                          (first\n                            (Abs_OrdSum\n                              (first b l\\<rightarrow> first c, 1::'b)) =\n                           (1::'a) \\<longrightarrow>\n                           (second\n                             (Abs_OrdSum\n                               (first b l\\<rightarrow> first c, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            c = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (second\n                             (Abs_OrdSum\n                               (first b l\\<rightarrow> first c,\n                                1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            c =\n                            Abs_OrdSum\n                             (1::'a,\n                              second\n                               (Abs_OrdSum\n                                 (first b l\\<rightarrow> first c,\n                                  1::'b))))) \\<and>\n                          (first\n                            (Abs_OrdSum\n                              (first b l\\<rightarrow> first c,\n                               1::'b)) \\<noteq>\n                           (1::'a) \\<longrightarrow>\n                           (second\n                             (Abs_OrdSum\n                               (first b l\\<rightarrow> first c, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            c =\n                            Abs_OrdSum\n                             (first\n                               (Abs_OrdSum\n                                 (first b l\\<rightarrow> first c, 1::'b)),\n                              1::'b)) \\<and>\n                           (second\n                             (Abs_OrdSum\n                               (first b l\\<rightarrow> first c,\n                                1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            c = 1))) \\<and>\n                         (second c \\<noteq> (1::'b) \\<longrightarrow>\n                          (first 1 = (1::'a) \\<longrightarrow>\n                           (second 1 = (1::'b) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                           (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, second 1))) \\<and>\n                          (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                           second 1 = (1::'b) \\<longrightarrow>\n                           1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                      (first (Abs_OrdSum (first b, 1::'b)) \\<noteq>\n                       (1::'a) \\<longrightarrow>\n                       (second (Abs_OrdSum (first b, 1::'b)) =\n                        (1::'b) \\<longrightarrow>\n                        (second c = (1::'b) \\<longrightarrow>\n                         (first\n                           (Abs_OrdSum\n                             (first b l\\<rightarrow> first c, 1::'b)) =\n                          (1::'a) \\<longrightarrow>\n                          (second\n                            (Abs_OrdSum\n                              (first b l\\<rightarrow> first c, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum\n                            (first\n                              (Abs_OrdSum (first b, 1::'b)) l\\<rightarrow>\n                             first c,\n                             1::'b) =\n                           Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                          (second\n                            (Abs_OrdSum\n                              (first b l\\<rightarrow> first c,\n                               1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum\n                            (first\n                              (Abs_OrdSum (first b, 1::'b)) l\\<rightarrow>\n                             first c,\n                             1::'b) =\n                           Abs_OrdSum\n                            (1::'a,\n                             second\n                              (Abs_OrdSum\n                                (first b l\\<rightarrow> first c,\n                                 1::'b))))) \\<and>\n                         (first\n                           (Abs_OrdSum\n                             (first b l\\<rightarrow> first c,\n                              1::'b)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          (second\n                            (Abs_OrdSum\n                              (first b l\\<rightarrow> first c, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum\n                            (first\n                              (Abs_OrdSum (first b, 1::'b)) l\\<rightarrow>\n                             first c,\n                             1::'b) =\n                           Abs_OrdSum\n                            (first\n                              (Abs_OrdSum\n                                (first b l\\<rightarrow> first c, 1::'b)),\n                             1::'b)) \\<and>\n                          (second\n                            (Abs_OrdSum\n                              (first b l\\<rightarrow> first c,\n                               1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum\n                            (first\n                              (Abs_OrdSum (first b, 1::'b)) l\\<rightarrow>\n                             first c,\n                             1::'b) =\n                           1))) \\<and>\n                        (second c \\<noteq> (1::'b) \\<longrightarrow>\n                         (first 1 = (1::'a) \\<longrightarrow>\n                          (second 1 = (1::'b) \\<longrightarrow>\n                           1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                          (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                           1 = Abs_OrdSum (1::'a, second 1))) \\<and>\n                         (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                          second 1 = (1::'b) \\<longrightarrow>\n                          1 = Abs_OrdSum (first 1, 1::'b)))) \\<and>\n                       (second (Abs_OrdSum (first b, 1::'b)) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (second c = (1::'b) \\<longrightarrow>\n                         (first\n                           (Abs_OrdSum\n                             (first b l\\<rightarrow> first c, 1::'b)) =\n                          (1::'a) \\<longrightarrow>\n                          (second\n                            (Abs_OrdSum\n                              (first b l\\<rightarrow> first c, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                          (second\n                            (Abs_OrdSum\n                              (first b l\\<rightarrow> first c,\n                               1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           1 =\n                           Abs_OrdSum\n                            (1::'a,\n                             second\n                              (Abs_OrdSum\n                                (first b l\\<rightarrow> first c,\n                                 1::'b))))) \\<and>\n                         (first\n                           (Abs_OrdSum\n                             (first b l\\<rightarrow> first c,\n                              1::'b)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          second\n                           (Abs_OrdSum\n                             (first b l\\<rightarrow> first c, 1::'b)) =\n                          (1::'b) \\<longrightarrow>\n                          1 =\n                          Abs_OrdSum\n                           (first\n                             (Abs_OrdSum\n                               (first b l\\<rightarrow> first c, 1::'b)),\n                            1::'b))) \\<and>\n                        (second c \\<noteq> (1::'b) \\<longrightarrow>\n                         (first 1 = (1::'a) \\<longrightarrow>\n                          (second 1 = (1::'b) \\<longrightarrow>\n                           1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                          (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                           1 = Abs_OrdSum (1::'a, second 1))) \\<and>\n                         (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                          second 1 = (1::'b) \\<longrightarrow>\n                          1 = Abs_OrdSum (first 1, 1::'b)))))\n 4. \\<lbrakk>first a = (1::'a); second b = (1::'b);\n     first b \\<noteq> (1::'a); second a \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (second c = (1::'b) \\<longrightarrow>\n                       (second\n                         (Abs_OrdSum\n                           (first b l\\<rightarrow> first c, 1::'b)) =\n                        (1::'b) \\<longrightarrow>\n                        first\n                         (Abs_OrdSum\n                           (first b l\\<rightarrow> first c, 1::'b)) =\n                        (1::'a) \\<longrightarrow>\n                        Abs_OrdSum (first b l\\<rightarrow> first c, 1::'b) =\n                        Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                       (second\n                         (Abs_OrdSum\n                           (first b l\\<rightarrow> first c, 1::'b)) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (first\n                          (Abs_OrdSum\n                            (first b l\\<rightarrow> first c, 1::'b)) =\n                         (1::'a) \\<longrightarrow>\n                         Abs_OrdSum\n                          (first b l\\<rightarrow> first c, 1::'b) =\n                         Abs_OrdSum\n                          (1::'a,\n                           second a l\\<rightarrow>\n                           second\n                            (Abs_OrdSum\n                              (first b l\\<rightarrow> first c,\n                               1::'b)))) \\<and>\n                        (first\n                          (Abs_OrdSum\n                            (first b l\\<rightarrow> first c,\n                             1::'b)) \\<noteq>\n                         (1::'a) \\<longrightarrow>\n                         Abs_OrdSum\n                          (first b l\\<rightarrow> first c, 1::'b) =\n                         1))) \\<and>\n                      (second c \\<noteq> (1::'b) \\<longrightarrow>\n                       (second 1 = (1::'b) \\<longrightarrow>\n                        first 1 = (1::'a) \\<longrightarrow>\n                        1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                       (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                        first 1 = (1::'a) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (1::'a, second a l\\<rightarrow> second 1)))\n 5. \\<lbrakk>first a \\<noteq> (1::'a); second a = (1::'b);\n     second b = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (first c = (1::'a) \\<longrightarrow>\n                       (second c = (1::'b) \\<longrightarrow>\n                        (first b = (1::'a) \\<longrightarrow>\n                         (first (Abs_OrdSum (first a, 1::'b)) =\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, 1::'b) =\n                           Abs_OrdSum\n                            (first a l\\<rightarrow>\n                             first (Abs_OrdSum (1::'a, 1::'b)),\n                             1::'b)) \\<and>\n                          (second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                         (first (Abs_OrdSum (first a, 1::'b)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (first a, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           (second (Abs_OrdSum (1::'a, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (1::'a, 1::'b) =\n                            Abs_OrdSum\n                             (first a l\\<rightarrow>\n                              first (Abs_OrdSum (1::'a, 1::'b)),\n                              1::'b)) \\<and>\n                           (second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                          (second (Abs_OrdSum (first a, 1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           second (Abs_OrdSum (1::'a, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           1 =\n                           Abs_OrdSum\n                            (first a l\\<rightarrow>\n                             first (Abs_OrdSum (1::'a, 1::'b)),\n                             1::'b)))) \\<and>\n                        (first b \\<noteq> (1::'a) \\<longrightarrow>\n                         (first (Abs_OrdSum (first a * first b, 1::'b)) =\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, 1::'b) =\n                           Abs_OrdSum\n                            (first a l\\<rightarrow>\n                             first (Abs_OrdSum (1::'a, 1::'b)),\n                             1::'b)) \\<and>\n                          (second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                         (first\n                           (Abs_OrdSum (first a * first b, 1::'b)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (first a * first b, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           (second (Abs_OrdSum (1::'a, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (1::'a, 1::'b) =\n                            Abs_OrdSum\n                             (first a l\\<rightarrow>\n                              first (Abs_OrdSum (1::'a, 1::'b)),\n                              1::'b)) \\<and>\n                           (second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                          (second\n                            (Abs_OrdSum (first a * first b, 1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           second (Abs_OrdSum (1::'a, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           1 =\n                           Abs_OrdSum\n                            (first a l\\<rightarrow>\n                             first (Abs_OrdSum (1::'a, 1::'b)),\n                             1::'b))))) \\<and>\n                       (second c \\<noteq> (1::'b) \\<longrightarrow>\n                        (first b = (1::'a) \\<longrightarrow>\n                         (first (Abs_OrdSum (first a, 1::'b)) =\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second c)) =\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum\n                            (1::'a,\n                             second\n                              (Abs_OrdSum (first a, 1::'b)) l\\<rightarrow>\n                             second c) =\n                           Abs_OrdSum\n                            (first a l\\<rightarrow>\n                             first (Abs_OrdSum (1::'a, second c)),\n                             1::'b)) \\<and>\n                          (second (Abs_OrdSum (1::'a, second c)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum\n                            (1::'a,\n                             second\n                              (Abs_OrdSum (first a, 1::'b)) l\\<rightarrow>\n                             second c) =\n                           1)) \\<and>\n                         (first (Abs_OrdSum (first a, 1::'b)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          second (Abs_OrdSum (1::'a, second c)) =\n                          (1::'b) \\<longrightarrow>\n                          1 =\n                          Abs_OrdSum\n                           (first a l\\<rightarrow>\n                            first (Abs_OrdSum (1::'a, second c)),\n                            1::'b))) \\<and>\n                        (first b \\<noteq> (1::'a) \\<longrightarrow>\n                         (first (Abs_OrdSum (first a * first b, 1::'b)) =\n                          (1::'a) \\<longrightarrow>\n                          (second 1 = (1::'b) \\<longrightarrow>\n                           Abs_OrdSum\n                            (1::'a,\n                             second\n                              (Abs_OrdSum\n                                (first a * first b, 1::'b)) l\\<rightarrow>\n                             second c) =\n                           Abs_OrdSum\n                            (first a l\\<rightarrow> first 1, 1::'b)) \\<and>\n                          (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                           Abs_OrdSum\n                            (1::'a,\n                             second\n                              (Abs_OrdSum\n                                (first a * first b, 1::'b)) l\\<rightarrow>\n                             second c) =\n                           1)) \\<and>\n                         (first\n                           (Abs_OrdSum (first a * first b, 1::'b)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          second 1 = (1::'b) \\<longrightarrow>\n                          1 =\n                          Abs_OrdSum\n                           (first a l\\<rightarrow> first 1,\n                            1::'b))))) \\<and>\n                      (first c \\<noteq> (1::'a) \\<longrightarrow>\n                       (second c = (1::'b) \\<longrightarrow>\n                        (first b = (1::'a) \\<longrightarrow>\n                         (first (Abs_OrdSum (first a, 1::'b)) =\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (first a, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           (second (Abs_OrdSum (first c, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (first c, 1::'b) =\n                            Abs_OrdSum\n                             (first a l\\<rightarrow>\n                              first (Abs_OrdSum (first c, 1::'b)),\n                              1::'b)) \\<and>\n                           (second (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (first c, 1::'b) = 1)) \\<and>\n                          (second (Abs_OrdSum (first a, 1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (second (Abs_OrdSum (first c, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            c =\n                            Abs_OrdSum\n                             (first a l\\<rightarrow>\n                              first (Abs_OrdSum (first c, 1::'b)),\n                              1::'b)) \\<and>\n                           (second (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            c = 1))) \\<and>\n                         (first (Abs_OrdSum (first a, 1::'b)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (first a, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           (second (Abs_OrdSum (first c, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (first\n                               (Abs_OrdSum (first a, 1::'b)) l\\<rightarrow>\n                              first c,\n                              1::'b) =\n                            Abs_OrdSum\n                             (first a l\\<rightarrow>\n                              first (Abs_OrdSum (first c, 1::'b)),\n                              1::'b)) \\<and>\n                           (second (Abs_OrdSum (first c, 1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (first\n                               (Abs_OrdSum (first a, 1::'b)) l\\<rightarrow>\n                              first c,\n                              1::'b) =\n                            1)) \\<and>\n                          (second (Abs_OrdSum (first a, 1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           second (Abs_OrdSum (first c, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           1 =\n                           Abs_OrdSum\n                            (first a l\\<rightarrow>\n                             first (Abs_OrdSum (first c, 1::'b)),\n                             1::'b)))) \\<and>\n                        (first b \\<noteq> (1::'a) \\<longrightarrow>\n                         (first (Abs_OrdSum (first a * first b, 1::'b)) =\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (first a * first b, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           (second\n                             (Abs_OrdSum\n                               (first b l\\<rightarrow> first c, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (first c, 1::'b) =\n                            Abs_OrdSum\n                             (first a l\\<rightarrow>\n                              first\n                               (Abs_OrdSum\n                                 (first b l\\<rightarrow> first c, 1::'b)),\n                              1::'b)) \\<and>\n                           (second\n                             (Abs_OrdSum\n                               (first b l\\<rightarrow> first c,\n                                1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum (first c, 1::'b) = 1)) \\<and>\n                          (second\n                            (Abs_OrdSum (first a * first b, 1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (second\n                             (Abs_OrdSum\n                               (first b l\\<rightarrow> first c, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            c =\n                            Abs_OrdSum\n                             (first a l\\<rightarrow>\n                              first\n                               (Abs_OrdSum\n                                 (first b l\\<rightarrow> first c, 1::'b)),\n                              1::'b)) \\<and>\n                           (second\n                             (Abs_OrdSum\n                               (first b l\\<rightarrow> first c,\n                                1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            c = 1))) \\<and>\n                         (first\n                           (Abs_OrdSum (first a * first b, 1::'b)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (first a * first b, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           (second\n                             (Abs_OrdSum\n                               (first b l\\<rightarrow> first c, 1::'b)) =\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (first\n                               (Abs_OrdSum\n                                 (first a * first b, 1::'b)) l\\<rightarrow>\n                              first c,\n                              1::'b) =\n                            Abs_OrdSum\n                             (first a l\\<rightarrow>\n                              first\n                               (Abs_OrdSum\n                                 (first b l\\<rightarrow> first c, 1::'b)),\n                              1::'b)) \\<and>\n                           (second\n                             (Abs_OrdSum\n                               (first b l\\<rightarrow> first c,\n                                1::'b)) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (first\n                               (Abs_OrdSum\n                                 (first a * first b, 1::'b)) l\\<rightarrow>\n                              first c,\n                              1::'b) =\n                            1)) \\<and>\n                          (second\n                            (Abs_OrdSum (first a * first b, 1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           second\n                            (Abs_OrdSum\n                              (first b l\\<rightarrow> first c, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           1 =\n                           Abs_OrdSum\n                            (first a l\\<rightarrow>\n                             first\n                              (Abs_OrdSum\n                                (first b l\\<rightarrow> first c, 1::'b)),\n                             1::'b))))) \\<and>\n                       (second c \\<noteq> (1::'b) \\<longrightarrow>\n                        second 1 = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum (first a l\\<rightarrow> first 1, 1::'b)))\n 6. \\<lbrakk>first a \\<noteq> (1::'a); second b \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (first b = (1::'a) \\<longrightarrow>\n                       (second c = (1::'b) \\<longrightarrow>\n                        first c = (1::'a) \\<longrightarrow>\n                        second a = (1::'b) \\<longrightarrow>\n                        (second (Abs_OrdSum (1::'a, 1::'b)) =\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum (1::'a, 1::'b) =\n                         Abs_OrdSum\n                          (first a l\\<rightarrow>\n                           first (Abs_OrdSum (1::'a, 1::'b)),\n                           1::'b)) \\<and>\n                        (second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                       (second c \\<noteq> (1::'b) \\<longrightarrow>\n                        (first c = (1::'a) \\<longrightarrow>\n                         second a = (1::'b) \\<and>\n                         second\n                          (Abs_OrdSum\n                            (1::'a, second b l\\<rightarrow> second c)) =\n                         (1::'b) \\<longrightarrow>\n                         1 =\n                         Abs_OrdSum\n                          (first a l\\<rightarrow>\n                           first\n                            (Abs_OrdSum\n                              (1::'a, second b l\\<rightarrow> second c)),\n                           1::'b)) \\<and>\n                        (first c \\<noteq> (1::'a) \\<longrightarrow>\n                         second a = (1::'b) \\<and>\n                         second 1 = (1::'b) \\<longrightarrow>\n                         1 =\n                         Abs_OrdSum\n                          (first a l\\<rightarrow> first 1, 1::'b)))) \\<and>\n                      (first b \\<noteq> (1::'a) \\<longrightarrow>\n                       (second a = (1::'b) \\<and>\n                        second c = (1::'b) \\<longrightarrow>\n                        (second 1 = (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (first a l\\<rightarrow> first c, 1::'b) =\n                         Abs_OrdSum\n                          (first a l\\<rightarrow> first 1, 1::'b)) \\<and>\n                        (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (first a l\\<rightarrow> first c, 1::'b) =\n                         1)) \\<and>\n                       ((second a = (1::'b) \\<longrightarrow>\n                         second c \\<noteq> (1::'b)) \\<longrightarrow>\n                        second a = (1::'b) \\<and>\n                        second 1 = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum (first a l\\<rightarrow> first 1, 1::'b)))\n 7. \\<lbrakk>first a \\<noteq> (1::'a); first b \\<noteq> (1::'a);\n     second a = (1::'b); second b = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (second c = (1::'b) \\<longrightarrow>\n                       (first (Abs_OrdSum (first a * first b, 1::'b)) =\n                        (1::'a) \\<longrightarrow>\n                        (first c = (1::'a) \\<longrightarrow>\n                         (second (Abs_OrdSum (1::'a, 1::'b)) =\n                          (1::'b) \\<longrightarrow>\n                          Abs_OrdSum (1::'a, 1::'b) =\n                          Abs_OrdSum\n                           (first a l\\<rightarrow>\n                            first (Abs_OrdSum (1::'a, 1::'b)),\n                            1::'b)) \\<and>\n                         (second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                          (1::'b) \\<longrightarrow>\n                          Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                        (first c \\<noteq> (1::'a) \\<longrightarrow>\n                         (second (Abs_OrdSum (first a * first b, 1::'b)) =\n                          (1::'b) \\<longrightarrow>\n                          (second\n                            (Abs_OrdSum\n                              (first b l\\<rightarrow> first c, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum (first c, 1::'b) =\n                           Abs_OrdSum\n                            (first a l\\<rightarrow>\n                             first\n                              (Abs_OrdSum\n                                (first b l\\<rightarrow> first c, 1::'b)),\n                             1::'b)) \\<and>\n                          (second\n                            (Abs_OrdSum\n                              (first b l\\<rightarrow> first c,\n                               1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum (first c, 1::'b) = 1)) \\<and>\n                         (second\n                           (Abs_OrdSum (first a * first b, 1::'b)) \\<noteq>\n                          (1::'b) \\<longrightarrow>\n                          (second\n                            (Abs_OrdSum\n                              (first b l\\<rightarrow> first c, 1::'b)) =\n                           (1::'b) \\<longrightarrow>\n                           c =\n                           Abs_OrdSum\n                            (first a l\\<rightarrow>\n                             first\n                              (Abs_OrdSum\n                                (first b l\\<rightarrow> first c, 1::'b)),\n                             1::'b)) \\<and>\n                          (second\n                            (Abs_OrdSum\n                              (first b l\\<rightarrow> first c,\n                               1::'b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           c = 1)))) \\<and>\n                       (first\n                         (Abs_OrdSum (first a * first b, 1::'b)) \\<noteq>\n                        (1::'a) \\<longrightarrow>\n                        (second (Abs_OrdSum (first a * first b, 1::'b)) =\n                         (1::'b) \\<longrightarrow>\n                         (second\n                           (Abs_OrdSum\n                             (first b l\\<rightarrow> first c, 1::'b)) =\n                          (1::'b) \\<longrightarrow>\n                          Abs_OrdSum\n                           (first\n                             (Abs_OrdSum\n                               (first a * first b, 1::'b)) l\\<rightarrow>\n                            first c,\n                            1::'b) =\n                          Abs_OrdSum\n                           (first a l\\<rightarrow>\n                            first\n                             (Abs_OrdSum\n                               (first b l\\<rightarrow> first c, 1::'b)),\n                            1::'b)) \\<and>\n                         (second\n                           (Abs_OrdSum\n                             (first b l\\<rightarrow> first c,\n                              1::'b)) \\<noteq>\n                          (1::'b) \\<longrightarrow>\n                          Abs_OrdSum\n                           (first\n                             (Abs_OrdSum\n                               (first a * first b, 1::'b)) l\\<rightarrow>\n                            first c,\n                            1::'b) =\n                          1)) \\<and>\n                        (second\n                          (Abs_OrdSum (first a * first b, 1::'b)) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         second\n                          (Abs_OrdSum\n                            (first b l\\<rightarrow> first c, 1::'b)) =\n                         (1::'b) \\<longrightarrow>\n                         1 =\n                         Abs_OrdSum\n                          (first a l\\<rightarrow>\n                           first\n                            (Abs_OrdSum\n                              (first b l\\<rightarrow> first c, 1::'b)),\n                           1::'b)))) \\<and>\n                      (second c \\<noteq> (1::'b) \\<longrightarrow>\n                       (first (Abs_OrdSum (first a * first b, 1::'b)) =\n                        (1::'a) \\<and>\n                        first c = (1::'a) \\<longrightarrow>\n                        (second 1 = (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (1::'a,\n                           second\n                            (Abs_OrdSum\n                              (first a * first b, 1::'b)) l\\<rightarrow>\n                           second c) =\n                         Abs_OrdSum\n                          (first a l\\<rightarrow> first 1, 1::'b)) \\<and>\n                        (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (1::'a,\n                           second\n                            (Abs_OrdSum\n                              (first a * first b, 1::'b)) l\\<rightarrow>\n                           second c) =\n                         1)) \\<and>\n                       ((first (Abs_OrdSum (first a * first b, 1::'b)) =\n                         (1::'a) \\<longrightarrow>\n                         first c \\<noteq> (1::'a)) \\<longrightarrow>\n                        second 1 = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum (first a l\\<rightarrow> first 1, 1::'b)))\n 8. \\<lbrakk>first a \\<noteq> (1::'a); first b \\<noteq> (1::'a);\n     second b \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (second a = (1::'b) \\<and>\n                       second c = (1::'b) \\<longrightarrow>\n                       (second 1 = (1::'b) \\<longrightarrow>\n                        Abs_OrdSum (first a l\\<rightarrow> first c, 1::'b) =\n                        Abs_OrdSum\n                         (first a l\\<rightarrow> first 1, 1::'b)) \\<and>\n                       (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                        Abs_OrdSum (first a l\\<rightarrow> first c, 1::'b) =\n                        1)) \\<and>\n                      ((second a = (1::'b) \\<longrightarrow>\n                        second c \\<noteq> (1::'b)) \\<longrightarrow>\n                       second a = (1::'b) \\<and>\n                       second 1 = (1::'b) \\<longrightarrow>\n                       1 =\n                       Abs_OrdSum (first a l\\<rightarrow> first 1, 1::'b))\n 9. \\<lbrakk>second b \\<noteq> (1::'b); first a = (1::'a);\n     first b = (1::'a)\\<rbrakk>\n    \\<Longrightarrow> (second\n                        (Abs_OrdSum\n                          (1::'a, second b l\\<rightarrow> second c)) =\n                       (1::'b) \\<longrightarrow>\n                       (second 1 = (1::'b) \\<longrightarrow>\n                        (second (Abs_OrdSum (1::'a, 1::'b)) =\n                         (1::'b) \\<longrightarrow>\n                         (first (Abs_OrdSum (1::'a, second b)) =\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (first c, 1::'b) = c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              first c = (1::'a) \\<longrightarrow>\n                              first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                              (1::'a) \\<longrightarrow>\n                              second a = (1::'b) \\<longrightarrow>\n                              Abs_OrdSum (1::'a, 1::'b) =\n                              Abs_OrdSum\n                               (first (Abs_OrdSum (1::'a, 1::'b)),\n                                1::'b)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (first\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second a * second b)) l\\<rightarrow>\n                                 first c,\n                                 1::'b) =\n                               c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, 1::'b) =\n                                 Abs_OrdSum\n                                  (first (Abs_OrdSum (1::'a, 1::'b)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               1 = c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               c = Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, 1::'b) =\n                                 Abs_OrdSum\n                                  (first (Abs_OrdSum (1::'a, 1::'b)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum (first 1, 1::'b)))))))) \\<and>\n                         (first (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (first\n                                  (Abs_OrdSum\n                                    (1::'a, second b)) l\\<rightarrow>\n                                 first c,\n                                 1::'b) =\n                               Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, 1::'b) =\n                                 Abs_OrdSum\n                                  (first (Abs_OrdSum (1::'a, 1::'b)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum\n                                 (first (Abs_OrdSum (1::'a, 1::'b)),\n                                  1::'b))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum\n                                 (first (Abs_OrdSum (1::'a, 1::'b)),\n                                  1::'b))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               1 = Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum\n                                 (first (Abs_OrdSum (1::'a, 1::'b)),\n                                  1::'b))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first (Abs_OrdSum (1::'a, 1::'b)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum (first 1, 1::'b))))))))) \\<and>\n                        (second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         (first (Abs_OrdSum (1::'a, second b)) =\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (first c, 1::'b) = c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              first c = (1::'a) \\<longrightarrow>\n                              (first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (first\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second a * second b)) l\\<rightarrow>\n                                 first c,\n                                 1::'b) =\n                               c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               1 = c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               c = Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum (first 1, 1::'b)))))))) \\<and>\n                         (first (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (first\n                                  (Abs_OrdSum\n                                    (1::'a, second b)) l\\<rightarrow>\n                                 first c,\n                                 1::'b) =\n                               Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               1 = Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum (first 1, 1::'b)))))))))) \\<and>\n                       (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                        (second (Abs_OrdSum (1::'a, 1::'b)) =\n                         (1::'b) \\<longrightarrow>\n                         (first (Abs_OrdSum (1::'a, second b)) =\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (first c, 1::'b) = c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              first c = (1::'a) \\<longrightarrow>\n                              first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                              (1::'a) \\<longrightarrow>\n                              second a = (1::'b) \\<longrightarrow>\n                              Abs_OrdSum (1::'a, 1::'b) =\n                              Abs_OrdSum\n                               (first (Abs_OrdSum (1::'a, 1::'b)),\n                                1::'b)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (first\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second a * second b)) l\\<rightarrow>\n                                 first c,\n                                 1::'b) =\n                               c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, 1::'b) =\n                                 Abs_OrdSum\n                                  (first (Abs_OrdSum (1::'a, 1::'b)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               1 = c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1)))))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               c = Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, 1::'b) =\n                                 Abs_OrdSum\n                                  (first (Abs_OrdSum (1::'a, 1::'b)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))))) \\<and>\n                         (first (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (first\n                                  (Abs_OrdSum\n                                    (1::'a, second b)) l\\<rightarrow>\n                                 first c,\n                                 1::'b) =\n                               Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, 1::'b) =\n                                 Abs_OrdSum\n                                  (first (Abs_OrdSum (1::'a, 1::'b)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1)))))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum\n                                 (first (Abs_OrdSum (1::'a, 1::'b)),\n                                  1::'b))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum\n                                 (first (Abs_OrdSum (1::'a, 1::'b)),\n                                  1::'b))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               1 = Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum\n                                 (first (Abs_OrdSum (1::'a, 1::'b)),\n                                  1::'b))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first (Abs_OrdSum (1::'a, 1::'b)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1)))))))) \\<and>\n                        (second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         (first (Abs_OrdSum (1::'a, second b)) =\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (first c, 1::'b) = c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              first c = (1::'a) \\<longrightarrow>\n                              (first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (first\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second a * second b)) l\\<rightarrow>\n                                 first c,\n                                 1::'b) =\n                               c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               1 = c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1)))))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               c = Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))))) \\<and>\n                         (first (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (first\n                                  (Abs_OrdSum\n                                    (1::'a, second b)) l\\<rightarrow>\n                                 first c,\n                                 1::'b) =\n                               Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1)))))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               1 = Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second\n                                    (Abs_OrdSum\n(1::'a, second a * second b)) l\\<rightarrow>\n                                   second c) =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first\n                                    (Abs_OrdSum\n(1::'a, second b l\\<rightarrow> second c)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow>\n                                   second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1)))))))))) \\<and>\n                      (second\n                        (Abs_OrdSum\n                          (1::'a,\n                           second b l\\<rightarrow> second c)) \\<noteq>\n                       (1::'b) \\<longrightarrow>\n                       (second 1 = (1::'b) \\<longrightarrow>\n                        (second (Abs_OrdSum (1::'a, 1::'b)) =\n                         (1::'b) \\<longrightarrow>\n                         (first (Abs_OrdSum (1::'a, second b)) =\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (first c, 1::'b) = c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              first c = (1::'a) \\<longrightarrow>\n                              first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                              (1::'a) \\<longrightarrow>\n                              second a = (1::'b) \\<longrightarrow>\n                              Abs_OrdSum (1::'a, 1::'b) =\n                              Abs_OrdSum\n                               (first (Abs_OrdSum (1::'a, 1::'b)),\n                                1::'b)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (first\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second a * second b)) l\\<rightarrow>\n                                 first c,\n                                 1::'b) =\n                               c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, 1::'b) =\n                                 Abs_OrdSum\n                                  (first (Abs_OrdSum (1::'a, 1::'b)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               1 = c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               c = Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, 1::'b) =\n                                 Abs_OrdSum\n                                  (first (Abs_OrdSum (1::'a, 1::'b)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum (first 1, 1::'b)))))))) \\<and>\n                         (first (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (first\n                                  (Abs_OrdSum\n                                    (1::'a, second b)) l\\<rightarrow>\n                                 first c,\n                                 1::'b) =\n                               Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, 1::'b) =\n                                 Abs_OrdSum\n                                  (first (Abs_OrdSum (1::'a, 1::'b)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum\n                                 (first (Abs_OrdSum (1::'a, 1::'b)),\n                                  1::'b))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum\n                                 (first (Abs_OrdSum (1::'a, 1::'b)),\n                                  1::'b))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               1 = Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum\n                                 (first (Abs_OrdSum (1::'a, 1::'b)),\n                                  1::'b))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first (Abs_OrdSum (1::'a, 1::'b)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum (first 1, 1::'b))))))))) \\<and>\n                        (second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         (first (Abs_OrdSum (1::'a, second b)) =\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (first c, 1::'b) = c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              first c = (1::'a) \\<longrightarrow>\n                              (first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (first\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second a * second b)) l\\<rightarrow>\n                                 first c,\n                                 1::'b) =\n                               c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               1 = c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               c = Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum (first 1, 1::'b)))))))) \\<and>\n                         (first (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (first\n                                  (Abs_OrdSum\n                                    (1::'a, second b)) l\\<rightarrow>\n                                 first c,\n                                 1::'b) =\n                               Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               1 = Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b)))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first 1, 1::'b))))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (first 1 = (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first 1 \\<noteq> (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum (first 1, 1::'b)))))))))) \\<and>\n                       (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                        (second (Abs_OrdSum (1::'a, 1::'b)) =\n                         (1::'b) \\<longrightarrow>\n                         (first (Abs_OrdSum (1::'a, second b)) =\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (first c, 1::'b) = c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              first c = (1::'a) \\<longrightarrow>\n                              first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                              (1::'a) \\<longrightarrow>\n                              second a = (1::'b) \\<longrightarrow>\n                              Abs_OrdSum (1::'a, 1::'b) =\n                              Abs_OrdSum\n                               (first (Abs_OrdSum (1::'a, 1::'b)),\n                                1::'b)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (first\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second a * second b)) l\\<rightarrow>\n                                 first c,\n                                 1::'b) =\n                               c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, 1::'b) =\n                                 Abs_OrdSum\n                                  (first (Abs_OrdSum (1::'a, 1::'b)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               1 = c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1)))))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               c = Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, 1::'b) =\n                                 Abs_OrdSum\n                                  (first (Abs_OrdSum (1::'a, 1::'b)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))))) \\<and>\n                         (first (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (first\n                                  (Abs_OrdSum\n                                    (1::'a, second b)) l\\<rightarrow>\n                                 first c,\n                                 1::'b) =\n                               Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (first (Abs_OrdSum (1::'a, 1::'b)),\n                                 1::'b)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 Abs_OrdSum (1::'a, 1::'b) =\n                                 Abs_OrdSum\n                                  (first (Abs_OrdSum (1::'a, 1::'b)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1)))))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum\n                                 (first (Abs_OrdSum (1::'a, 1::'b)),\n                                  1::'b))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum\n                                 (first (Abs_OrdSum (1::'a, 1::'b)),\n                                  1::'b))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               1 = Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                second a = (1::'b) \\<longrightarrow>\n                                1 =\n                                Abs_OrdSum\n                                 (first (Abs_OrdSum (1::'a, 1::'b)),\n                                  1::'b))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                (second a = (1::'b) \\<longrightarrow>\n                                 1 =\n                                 Abs_OrdSum\n                                  (first (Abs_OrdSum (1::'a, 1::'b)),\n                                   1::'b)) \\<and>\n                                (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                 1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1)))))))) \\<and>\n                        (second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         (first (Abs_OrdSum (1::'a, second b)) =\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               Abs_OrdSum (first c, 1::'b) = c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              first c = (1::'a) \\<longrightarrow>\n                              (first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                               (1::'a) \\<longrightarrow>\n                               Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (first\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second a * second b)) l\\<rightarrow>\n                                 first c,\n                                 1::'b) =\n                               c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a \\<noteq> (1::'b) \\<longrightarrow>\n                               1 = c)) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1)))))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               c = Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                c = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))))) \\<and>\n                         (first (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          (second (Abs_OrdSum (1::'a, second b)) =\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (first\n                                  (Abs_OrdSum\n                                    (1::'a, second b)) l\\<rightarrow>\n                                 first c,\n                                 1::'b) =\n                               Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a, second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1)))))) \\<and>\n                          (second (Abs_OrdSum (1::'a, second b)) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (first\n                             (Abs_OrdSum (1::'a, second a * second b)) =\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum (first c, 1::'b) = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, second c) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               second a = (1::'b) \\<longrightarrow>\n                               1 = Abs_OrdSum (first c, 1::'b))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow> second c)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond b l\\<rightarrow> second c)))) \\<and>\n                               (first\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    second b l\\<rightarrow>\n                                    second c)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  second c) =\n                                1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second 1))))) \\<and>\n                           (first\n                             (Abs_OrdSum\n                               (1::'a, second a * second b)) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            (second\n                              (Abs_OrdSum (1::'a, second a * second b)) =\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) =\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) =\n                                Abs_OrdSum\n                                 (1::'a,\n                                  second a l\\<rightarrow>\n                                  second\n                                   (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                               (first (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                                (1::'a) \\<longrightarrow>\n                                Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                Abs_OrdSum\n                                 (first\n                                   (Abs_OrdSum\n                                     (1::'a,\nsecond a * second b)) l\\<rightarrow>\n                                  first c,\n                                  1::'b) =\n                                c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1)))) \\<and>\n                            (second\n                              (Abs_OrdSum\n                                (1::'a, second a * second b)) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             (second c = (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first (Abs_OrdSum (1::'a, 1::'b)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second (Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               (second a = (1::'b) \\<longrightarrow>\n                                1 = Abs_OrdSum (first c, 1::'b)) \\<and>\n                               (second a \\<noteq> (1::'b) \\<longrightarrow>\n                                1 = c))) \\<and>\n                             (second c \\<noteq> (1::'b) \\<longrightarrow>\n                              (first c = (1::'a) \\<longrightarrow>\n                               first\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   second b l\\<rightarrow> second c)) =\n                               (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow>\n                                 second\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     second b l\\<rightarrow>\n                                     second c)))) \\<and>\n                              (first c \\<noteq> (1::'a) \\<longrightarrow>\n                               first 1 = (1::'a) \\<longrightarrow>\n                               1 =\n                               Abs_OrdSum\n                                (1::'a,\n                                 second a l\\<rightarrow> second 1))))))))))\n 10. \\<lbrakk>first a \\<noteq> (1::'a); second b \\<noteq> (1::'b)\\<rbrakk>\n     \\<Longrightarrow> (first b = (1::'a) \\<longrightarrow>\n                        (second c = (1::'b) \\<longrightarrow>\n                         first c = (1::'a) \\<longrightarrow>\n                         second a = (1::'b) \\<longrightarrow>\n                         (second (Abs_OrdSum (1::'a, 1::'b)) =\n                          (1::'b) \\<longrightarrow>\n                          Abs_OrdSum (1::'a, 1::'b) =\n                          Abs_OrdSum\n                           (first a l\\<rightarrow>\n                            first (Abs_OrdSum (1::'a, 1::'b)),\n                            1::'b)) \\<and>\n                         (second (Abs_OrdSum (1::'a, 1::'b)) \\<noteq>\n                          (1::'b) \\<longrightarrow>\n                          Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                        (second c \\<noteq> (1::'b) \\<longrightarrow>\n                         (first c = (1::'a) \\<longrightarrow>\n                          second a = (1::'b) \\<and>\n                          second\n                           (Abs_OrdSum\n                             (1::'a, second b l\\<rightarrow> second c)) =\n                          (1::'b) \\<longrightarrow>\n                          1 =\n                          Abs_OrdSum\n                           (first a l\\<rightarrow>\n                            first\n                             (Abs_OrdSum\n                               (1::'a, second b l\\<rightarrow> second c)),\n                            1::'b)) \\<and>\n                         (first c \\<noteq> (1::'a) \\<longrightarrow>\n                          second a = (1::'b) \\<and>\n                          second 1 = (1::'b) \\<longrightarrow>\n                          1 =\n                          Abs_OrdSum\n                           (first a l\\<rightarrow> first 1, 1::'b)))) \\<and>\n                       (first b \\<noteq> (1::'a) \\<longrightarrow>\n                        (second a = (1::'b) \\<and>\n                         second c = (1::'b) \\<longrightarrow>\n                         (second 1 = (1::'b) \\<longrightarrow>\n                          Abs_OrdSum\n                           (first a l\\<rightarrow> first c, 1::'b) =\n                          Abs_OrdSum\n                           (first a l\\<rightarrow> first 1, 1::'b)) \\<and>\n                         (second 1 \\<noteq> (1::'b) \\<longrightarrow>\n                          Abs_OrdSum\n                           (first a l\\<rightarrow> first c, 1::'b) =\n                          1)) \\<and>\n                        ((second a = (1::'b) \\<longrightarrow>\n                          second c \\<noteq> (1::'b)) \\<longrightarrow>\n                         second a = (1::'b) \\<and>\n                         second 1 = (1::'b) \\<longrightarrow>\n                         1 =\n                         Abs_OrdSum\n                          (first a l\\<rightarrow> first 1, 1::'b)))\nA total of 12 subgoals...", "apply (simp_all add: first_def second_def)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) = (1::'a); snd (Rep_OrdSum a) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                       (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                       (1::'b) \\<longrightarrow>\n                       fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       Abs_OrdSum\n                        (1::'a,\n                         snd (Rep_OrdSum\n                               (Abs_OrdSum (1::'a, 1::'b))) l\\<rightarrow>\n                         snd (Rep_OrdSum c)) =\n                       c) \\<and>\n                      (fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                       (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                       (1::'b) \\<longrightarrow>\n                       (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum c) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        1 = c) \\<and>\n                       (fst (Rep_OrdSum c) \\<noteq>\n                        (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum (1::'a, 1::'b))) l\\<rightarrow>\n                          fst (Rep_OrdSum c),\n                          1::'b) =\n                        c))\n 2. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) = (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                      snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                      snd (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                      (1::'b) \\<longrightarrow>\n                      (fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                       (1::'a) \\<longrightarrow>\n                       Abs_OrdSum (1::'a, 1::'b) =\n                       Abs_OrdSum\n                        (1::'a,\n                         snd (Rep_OrdSum a) l\\<rightarrow>\n                         snd (Rep_OrdSum\n                               (Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                      (fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                       (1::'a) \\<longrightarrow>\n                       Abs_OrdSum (1::'a, 1::'b) = 1)\n 3. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                       fst (Rep_OrdSum\n                             (Abs_OrdSum\n                               (fst (Rep_OrdSum b) l\\<rightarrow>\n                                fst (Rep_OrdSum c),\n                                1::'b))) =\n                       (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum\n                             (Abs_OrdSum\n                               (fst (Rep_OrdSum b) l\\<rightarrow>\n                                fst (Rep_OrdSum c),\n                                1::'b))) =\n                       (1::'b) \\<longrightarrow>\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum b) l\\<rightarrow>\n                         fst (Rep_OrdSum c),\n                         1::'b) =\n                       Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                      (snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                       1 = Abs_OrdSum (1::'a, 1::'b))\n 4. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                       (snd (Rep_OrdSum\n                              (Abs_OrdSum\n                                (fst (Rep_OrdSum b) l\\<rightarrow>\n                                 fst (Rep_OrdSum c),\n                                 1::'b))) =\n                        (1::'b) \\<longrightarrow>\n                        fst (Rep_OrdSum\n                              (Abs_OrdSum\n                                (fst (Rep_OrdSum b) l\\<rightarrow>\n                                 fst (Rep_OrdSum c),\n                                 1::'b))) =\n                        (1::'a) \\<longrightarrow>\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum b) l\\<rightarrow>\n                          fst (Rep_OrdSum c),\n                          1::'b) =\n                        Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                       (snd (Rep_OrdSum\n                              (Abs_OrdSum\n                                (fst (Rep_OrdSum b) l\\<rightarrow>\n                                 fst (Rep_OrdSum c),\n                                 1::'b))) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (fst (Rep_OrdSum\n                               (Abs_OrdSum\n                                 (fst (Rep_OrdSum b) l\\<rightarrow>\n                                  fst (Rep_OrdSum c),\n                                  1::'b))) =\n                         (1::'a) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum b) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) l\\<rightarrow>\n                           snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (fst (Rep_OrdSum b) l\\<rightarrow>\n                                    fst (Rep_OrdSum c),\n                                    1::'b))))) \\<and>\n                        (fst (Rep_OrdSum\n                               (Abs_OrdSum\n                                 (fst (Rep_OrdSum b) l\\<rightarrow>\n                                  fst (Rep_OrdSum c),\n                                  1::'b))) \\<noteq>\n                         (1::'a) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum b) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         1))) \\<and>\n                      (snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                        1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                       (snd (Rep_OrdSum 1) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (1::'a,\n                          snd (Rep_OrdSum a) l\\<rightarrow>\n                          snd (Rep_OrdSum 1))))\n 5. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) = (1::'b); snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                       (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                        (fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n                         (snd (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                          (1::'b) \\<longrightarrow>\n                          Abs_OrdSum (1::'a, 1::'b) =\n                          Abs_OrdSum\n                           (fst (Rep_OrdSum a) l\\<rightarrow>\n                            fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))),\n                            1::'b)) \\<and>\n                         (snd (Rep_OrdSum\n                                (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                          (1::'b) \\<longrightarrow>\n                          Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                        (fst (Rep_OrdSum b) \\<noteq>\n                         (1::'a) \\<longrightarrow>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                   1::'b))) =\n                          (1::'a) \\<longrightarrow>\n                          (snd (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, 1::'b) =\n                           Abs_OrdSum\n                            (fst (Rep_OrdSum a) l\\<rightarrow>\n                             fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))),\n                             1::'b)) \\<and>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                   1::'b))) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          snd (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                   1::'b))) =\n                          (1::'b) \\<longrightarrow>\n                          (snd (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, 1::'b) =\n                           Abs_OrdSum\n                            (fst (Rep_OrdSum a) l\\<rightarrow>\n                             fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))),\n                             1::'b)) \\<and>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum (1::'a, 1::'b) = 1)))) \\<and>\n                       (snd (Rep_OrdSum c) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        fst (Rep_OrdSum b) \\<noteq>\n                        (1::'a) \\<longrightarrow>\n                        (fst (Rep_OrdSum\n                               (Abs_OrdSum\n                                 (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                  1::'b))) =\n                         (1::'a) \\<longrightarrow>\n                         (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                          Abs_OrdSum\n                           (1::'a,\n                            snd (Rep_OrdSum\n                                  (Abs_OrdSum\n                                    (fst (Rep_OrdSum a) *\n                                     fst (Rep_OrdSum b),\n                                     1::'b))) l\\<rightarrow>\n                            snd (Rep_OrdSum c)) =\n                          Abs_OrdSum\n                           (fst (Rep_OrdSum a) l\\<rightarrow>\n                            fst (Rep_OrdSum 1),\n                            1::'b)) \\<and>\n                         (snd (Rep_OrdSum 1) \\<noteq>\n                          (1::'b) \\<longrightarrow>\n                          Abs_OrdSum\n                           (1::'a,\n                            snd (Rep_OrdSum\n                                  (Abs_OrdSum\n                                    (fst (Rep_OrdSum a) *\n                                     fst (Rep_OrdSum b),\n                                     1::'b))) l\\<rightarrow>\n                            snd (Rep_OrdSum c)) =\n                          1)) \\<and>\n                        (fst (Rep_OrdSum\n                               (Abs_OrdSum\n                                 (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                  1::'b))) \\<noteq>\n                         (1::'a) \\<longrightarrow>\n                         snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                         1 =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum 1),\n                           1::'b)))) \\<and>\n                      (fst (Rep_OrdSum c) \\<noteq> (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                       fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                       (fst (Rep_OrdSum\n                              (Abs_OrdSum\n                                (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                 1::'b))) =\n                        (1::'a) \\<longrightarrow>\n                        (snd (Rep_OrdSum\n                               (Abs_OrdSum\n                                 (fst (Rep_OrdSum b) l\\<rightarrow>\n                                  fst (Rep_OrdSum c),\n                                  1::'b))) =\n                         (1::'b) \\<longrightarrow>\n                         c =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (fst (Rep_OrdSum b) l\\<rightarrow>\n                                    fst (Rep_OrdSum c),\n                                    1::'b))),\n                           1::'b)) \\<and>\n                        (snd (Rep_OrdSum\n                               (Abs_OrdSum\n                                 (fst (Rep_OrdSum b) l\\<rightarrow>\n                                  fst (Rep_OrdSum c),\n                                  1::'b))) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         c = 1)) \\<and>\n                       (fst (Rep_OrdSum\n                              (Abs_OrdSum\n                                (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                 1::'b))) \\<noteq>\n                        (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum\n                              (Abs_OrdSum\n                                (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                 1::'b))) =\n                        (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum\n                               (Abs_OrdSum\n                                 (fst (Rep_OrdSum b) l\\<rightarrow>\n                                  fst (Rep_OrdSum c),\n                                  1::'b))) =\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                    1::'b))) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (fst (Rep_OrdSum b) l\\<rightarrow>\n                                    fst (Rep_OrdSum c),\n                                    1::'b))),\n                           1::'b)) \\<and>\n                        (snd (Rep_OrdSum\n                               (Abs_OrdSum\n                                 (fst (Rep_OrdSum b) l\\<rightarrow>\n                                  fst (Rep_OrdSum c),\n                                  1::'b))) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                    1::'b))) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         1)))\n 6. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n                       (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                        fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum (1::'a, 1::'b) =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))),\n                           1::'b)) \\<and>\n                        (snd (Rep_OrdSum\n                               (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                       (snd (Rep_OrdSum c) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                         snd (Rep_OrdSum a) = (1::'b) \\<and>\n                         snd (Rep_OrdSum\n                               (Abs_OrdSum\n                                 (1::'a,\n                                  snd (Rep_OrdSum b) l\\<rightarrow>\n                                  snd (Rep_OrdSum c)))) =\n                         (1::'b) \\<longrightarrow>\n                         1 =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum b) l\\<rightarrow>\n                                    snd (Rep_OrdSum c)))),\n                           1::'b)) \\<and>\n                        (fst (Rep_OrdSum c) \\<noteq>\n                         (1::'a) \\<longrightarrow>\n                         snd (Rep_OrdSum a) = (1::'b) \\<and>\n                         snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                         1 =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum 1),\n                           1::'b)))) \\<and>\n                      (fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                       (snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum 1),\n                           1::'b)) \\<and>\n                        (snd (Rep_OrdSum 1) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         1)) \\<and>\n                       ((snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                         snd (Rep_OrdSum c) \\<noteq>\n                         (1::'b)) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b)))\n 7. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n     snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                       (fst (Rep_OrdSum\n                              (Abs_OrdSum\n                                (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                 1::'b))) =\n                        (1::'a) \\<longrightarrow>\n                        (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                         (snd (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                          (1::'b) \\<longrightarrow>\n                          Abs_OrdSum (1::'a, 1::'b) =\n                          Abs_OrdSum\n                           (fst (Rep_OrdSum a) l\\<rightarrow>\n                            fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))),\n                            1::'b)) \\<and>\n                         (snd (Rep_OrdSum\n                                (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                          (1::'b) \\<longrightarrow>\n                          Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                        (fst (Rep_OrdSum c) \\<noteq>\n                         (1::'a) \\<longrightarrow>\n                         (snd (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (fst (Rep_OrdSum b) l\\<rightarrow>\n                                   fst (Rep_OrdSum c),\n                                   1::'b))) =\n                          (1::'b) \\<longrightarrow>\n                          c =\n                          Abs_OrdSum\n                           (fst (Rep_OrdSum a) l\\<rightarrow>\n                            fst (Rep_OrdSum\n                                  (Abs_OrdSum\n                                    (fst (Rep_OrdSum b) l\\<rightarrow>\n                                     fst (Rep_OrdSum c),\n                                     1::'b))),\n                            1::'b)) \\<and>\n                         (snd (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (fst (Rep_OrdSum b) l\\<rightarrow>\n                                   fst (Rep_OrdSum c),\n                                   1::'b))) \\<noteq>\n                          (1::'b) \\<longrightarrow>\n                          c = 1))) \\<and>\n                       (fst (Rep_OrdSum\n                              (Abs_OrdSum\n                                (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                 1::'b))) \\<noteq>\n                        (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum\n                              (Abs_OrdSum\n                                (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                 1::'b))) =\n                        (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum\n                               (Abs_OrdSum\n                                 (fst (Rep_OrdSum b) l\\<rightarrow>\n                                  fst (Rep_OrdSum c),\n                                  1::'b))) =\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                    1::'b))) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (fst (Rep_OrdSum b) l\\<rightarrow>\n                                    fst (Rep_OrdSum c),\n                                    1::'b))),\n                           1::'b)) \\<and>\n                        (snd (Rep_OrdSum\n                               (Abs_OrdSum\n                                 (fst (Rep_OrdSum b) l\\<rightarrow>\n                                  fst (Rep_OrdSum c),\n                                  1::'b))) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                    1::'b))) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         1))) \\<and>\n                      (snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       (fst (Rep_OrdSum\n                              (Abs_OrdSum\n                                (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                 1::'b))) =\n                        (1::'a) \\<and>\n                        fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                        (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                    1::'b))) l\\<rightarrow>\n                           snd (Rep_OrdSum c)) =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum 1),\n                           1::'b)) \\<and>\n                        (snd (Rep_OrdSum 1) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                    1::'b))) l\\<rightarrow>\n                           snd (Rep_OrdSum c)) =\n                         1)) \\<and>\n                       ((fst (Rep_OrdSum\n                               (Abs_OrdSum\n                                 (fst (Rep_OrdSum a) * fst (Rep_OrdSum b),\n                                  1::'b))) =\n                         (1::'a) \\<longrightarrow>\n                         fst (Rep_OrdSum c) \\<noteq>\n                         (1::'a)) \\<longrightarrow>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b)))\n 8. \\<lbrakk>snd (Rep_OrdSum b) \\<noteq> (1::'b);\n     fst (Rep_OrdSum a) = (1::'a); fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n    \\<Longrightarrow> (snd (Rep_OrdSum\n                             (Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum b) l\\<rightarrow>\n                                snd (Rep_OrdSum c)))) =\n                       (1::'b) \\<longrightarrow>\n                       (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                         (1::'b) \\<longrightarrow>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) =\n                          (1::'a) \\<longrightarrow>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum a) *\n                                    snd (Rep_OrdSum b)))) =\n                           (1::'b) \\<longrightarrow>\n                           snd (Rep_OrdSum c) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                             (1::'a) \\<longrightarrow>\n                             (snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum b) l\\<rightarrow>\n                                snd (Rep_OrdSum c)) =\n                              Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                             (snd (Rep_OrdSum a) \\<noteq>\n                              (1::'b) \\<longrightarrow>\n                              c = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             snd (Rep_OrdSum a) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             c =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum b) l\\<rightarrow>\n                               snd (Rep_OrdSum c)))) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum a) *\n                                    snd (Rep_OrdSum b)))) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           snd (Rep_OrdSum c) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                             (1::'a) \\<longrightarrow>\n                             (snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum b) l\\<rightarrow>\n                                snd (Rep_OrdSum c)) =\n                              Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                             (snd (Rep_OrdSum a) \\<noteq>\n                              (1::'b) \\<longrightarrow>\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum\n(Abs_OrdSum\n  (1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                                snd (Rep_OrdSum c)) =\n                              Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             snd (Rep_OrdSum a) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum\n (1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                               snd (Rep_OrdSum c)) =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum b) l\\<rightarrow>\n                               snd (Rep_OrdSum c)))) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          snd (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) =\n                          (1::'b) \\<longrightarrow>\n                          (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                           fst (Rep_OrdSum c) \\<noteq>\n                           (1::'a) \\<longrightarrow>\n                           snd (Rep_OrdSum a) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                             fst (Rep_OrdSum c),\n                             1::'b) =\n                           c) \\<and>\n                          (snd (Rep_OrdSum c) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                             (1::'a) \\<longrightarrow>\n                             (snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum b) l\\<rightarrow>\n                                snd (Rep_OrdSum c)) =\n                              Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                             (snd (Rep_OrdSum a) \\<noteq>\n                              (1::'b) \\<longrightarrow>\n                              1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             snd (Rep_OrdSum a) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             1 =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum b) l\\<rightarrow>\n                               snd (Rep_OrdSum c)))) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                        (snd (Rep_OrdSum\n                               (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) =\n                          (1::'a) \\<longrightarrow>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum a) *\n                                    snd (Rep_OrdSum b)))) =\n                           (1::'b) \\<longrightarrow>\n                           (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                            fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                           (snd (Rep_OrdSum c) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                              (1::'a) \\<longrightarrow>\n                              (snd (Rep_OrdSum a) =\n                               (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (1::'a,\n                                 snd (Rep_OrdSum b) l\\<rightarrow>\n                                 snd (Rep_OrdSum c)) =\n                               Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                              (snd (Rep_OrdSum a) \\<noteq>\n                               (1::'b) \\<longrightarrow>\n                               c = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                              (1::'a) \\<longrightarrow>\n                              snd (Rep_OrdSum a) \\<noteq>\n                              (1::'b) \\<longrightarrow>\n                              c =\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum b) l\\<rightarrow>\n                                snd (Rep_OrdSum c)))) \\<and>\n                            (fst (Rep_OrdSum c) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                             1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum a) *\n                                    snd (Rep_OrdSum b)))) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                            fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                           (snd (Rep_OrdSum c) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                              (1::'a) \\<longrightarrow>\n                              (snd (Rep_OrdSum a) =\n                               (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (1::'a,\n                                 snd (Rep_OrdSum b) l\\<rightarrow>\n                                 snd (Rep_OrdSum c)) =\n                               Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                              (snd (Rep_OrdSum a) \\<noteq>\n                               (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (1::'a,\n                                 snd (Rep_OrdSum\n (Abs_OrdSum\n   (1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                                 snd (Rep_OrdSum c)) =\n                               Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                              (1::'a) \\<longrightarrow>\n                              snd (Rep_OrdSum a) \\<noteq>\n                              (1::'b) \\<longrightarrow>\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum\n(Abs_OrdSum\n  (1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                                snd (Rep_OrdSum c)) =\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum b) l\\<rightarrow>\n                                snd (Rep_OrdSum c)))) \\<and>\n                            (fst (Rep_OrdSum c) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                             1 = Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          snd (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) =\n                          (1::'b) \\<longrightarrow>\n                          (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            snd (Rep_OrdSum a) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                              fst (Rep_OrdSum c),\n                              1::'b) =\n                            c)) \\<and>\n                          (snd (Rep_OrdSum c) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                             (1::'a) \\<longrightarrow>\n                             (snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum b) l\\<rightarrow>\n                                snd (Rep_OrdSum c)) =\n                              Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                             (snd (Rep_OrdSum a) \\<noteq>\n                              (1::'b) \\<longrightarrow>\n                              1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             snd (Rep_OrdSum a) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             1 =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum b) l\\<rightarrow>\n                               snd (Rep_OrdSum c)))) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b)))))) \\<and>\n                       (snd (Rep_OrdSum 1) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                         (1::'b) \\<longrightarrow>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) =\n                          (1::'a) \\<longrightarrow>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum a) *\n                                    snd (Rep_OrdSum b)))) =\n                           (1::'b) \\<longrightarrow>\n                           snd (Rep_OrdSum c) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                             (1::'a) \\<longrightarrow>\n                             (snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum b) l\\<rightarrow>\n                                snd (Rep_OrdSum c)) =\n                              Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                             (snd (Rep_OrdSum a) \\<noteq>\n                              (1::'b) \\<longrightarrow>\n                              c = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             snd (Rep_OrdSum a) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             c =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum b) l\\<rightarrow>\n                               snd (Rep_OrdSum c)))) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                            1 =\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum 1)))) \\<and>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum a) *\n                                    snd (Rep_OrdSum b)))) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           snd (Rep_OrdSum c) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                             (1::'a) \\<longrightarrow>\n                             (snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum b) l\\<rightarrow>\n                                snd (Rep_OrdSum c)) =\n                              Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                             (snd (Rep_OrdSum a) \\<noteq>\n                              (1::'b) \\<longrightarrow>\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum\n(Abs_OrdSum\n  (1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                                snd (Rep_OrdSum c)) =\n                              Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             snd (Rep_OrdSum a) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum\n (1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                               snd (Rep_OrdSum c)) =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum b) l\\<rightarrow>\n                               snd (Rep_OrdSum c)))) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                            1 =\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum 1))))) \\<and>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          snd (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) =\n                          (1::'b) \\<longrightarrow>\n                          (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                           fst (Rep_OrdSum c) \\<noteq>\n                           (1::'a) \\<longrightarrow>\n                           snd (Rep_OrdSum a) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                             fst (Rep_OrdSum c),\n                             1::'b) =\n                           c) \\<and>\n                          (snd (Rep_OrdSum c) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                             (1::'a) \\<longrightarrow>\n                             (snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum b) l\\<rightarrow>\n                                snd (Rep_OrdSum c)) =\n                              Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                             (snd (Rep_OrdSum a) \\<noteq>\n                              (1::'b) \\<longrightarrow>\n                              1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             snd (Rep_OrdSum a) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             1 =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum b) l\\<rightarrow>\n                               snd (Rep_OrdSum c)))) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                            1 =\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum 1)))))) \\<and>\n                        (snd (Rep_OrdSum\n                               (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) =\n                          (1::'a) \\<longrightarrow>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum a) *\n                                    snd (Rep_OrdSum b)))) =\n                           (1::'b) \\<longrightarrow>\n                           (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                            fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                           (snd (Rep_OrdSum c) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                              (1::'a) \\<longrightarrow>\n                              (snd (Rep_OrdSum a) =\n                               (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (1::'a,\n                                 snd (Rep_OrdSum b) l\\<rightarrow>\n                                 snd (Rep_OrdSum c)) =\n                               Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                              (snd (Rep_OrdSum a) \\<noteq>\n                               (1::'b) \\<longrightarrow>\n                               c = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                              (1::'a) \\<longrightarrow>\n                              snd (Rep_OrdSum a) \\<noteq>\n                              (1::'b) \\<longrightarrow>\n                              c =\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum b) l\\<rightarrow>\n                                snd (Rep_OrdSum c)))) \\<and>\n                            (fst (Rep_OrdSum c) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                             1 =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum 1))))) \\<and>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum a) *\n                                    snd (Rep_OrdSum b)))) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                            fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                           (snd (Rep_OrdSum c) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                              (1::'a) \\<longrightarrow>\n                              (snd (Rep_OrdSum a) =\n                               (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (1::'a,\n                                 snd (Rep_OrdSum b) l\\<rightarrow>\n                                 snd (Rep_OrdSum c)) =\n                               Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                              (snd (Rep_OrdSum a) \\<noteq>\n                               (1::'b) \\<longrightarrow>\n                               Abs_OrdSum\n                                (1::'a,\n                                 snd (Rep_OrdSum\n (Abs_OrdSum\n   (1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                                 snd (Rep_OrdSum c)) =\n                               Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                              (1::'a) \\<longrightarrow>\n                              snd (Rep_OrdSum a) \\<noteq>\n                              (1::'b) \\<longrightarrow>\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum\n(Abs_OrdSum\n  (1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                                snd (Rep_OrdSum c)) =\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum b) l\\<rightarrow>\n                                snd (Rep_OrdSum c)))) \\<and>\n                            (fst (Rep_OrdSum c) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                             1 =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum 1)))))) \\<and>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          snd (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) =\n                          (1::'b) \\<longrightarrow>\n                          (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            snd (Rep_OrdSum a) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                              fst (Rep_OrdSum c),\n                              1::'b) =\n                            c)) \\<and>\n                          (snd (Rep_OrdSum c) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                             (1::'a) \\<longrightarrow>\n                             (snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum b) l\\<rightarrow>\n                                snd (Rep_OrdSum c)) =\n                              Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                             (snd (Rep_OrdSum a) \\<noteq>\n                              (1::'b) \\<longrightarrow>\n                              1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             snd (Rep_OrdSum a) \\<noteq>\n                             (1::'b) \\<longrightarrow>\n                             1 =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum b) l\\<rightarrow>\n                               snd (Rep_OrdSum c)))) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                            1 =\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum 1)))))))) \\<and>\n                      (snd (Rep_OrdSum\n                             (Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum b) l\\<rightarrow>\n                                snd (Rep_OrdSum c)))) \\<noteq>\n                       (1::'b) \\<longrightarrow>\n                       (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                         (1::'b) \\<longrightarrow>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) =\n                          (1::'a) \\<longrightarrow>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum a) *\n                                    snd (Rep_OrdSum b)))) =\n                           (1::'b) \\<longrightarrow>\n                           snd (Rep_OrdSum c) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                             (1::'a) \\<longrightarrow>\n                             c =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum\n (1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             c = 1)) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum a) *\n                                    snd (Rep_OrdSum b)))) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           snd (Rep_OrdSum c) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum\n (1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                               snd (Rep_OrdSum c)) =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum\n (1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum\n (1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                               snd (Rep_OrdSum c)) =\n                             1)) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          snd (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) =\n                          (1::'b) \\<longrightarrow>\n                          (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                           fst (Rep_OrdSum c) \\<noteq>\n                           (1::'a) \\<longrightarrow>\n                           snd (Rep_OrdSum a) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                             fst (Rep_OrdSum c),\n                             1::'b) =\n                           c) \\<and>\n                          (snd (Rep_OrdSum c) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     snd (Rep_OrdSum b) l\\<rightarrow>\n                                     snd (Rep_OrdSum c)))) =\n                            (1::'a) \\<longrightarrow>\n                            1 =\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))))) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                        (snd (Rep_OrdSum\n                               (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) =\n                          (1::'a) \\<longrightarrow>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum a) *\n                                    snd (Rep_OrdSum b)))) =\n                           (1::'b) \\<longrightarrow>\n                           (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                            fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                           (snd (Rep_OrdSum c) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                              (1::'a) \\<longrightarrow>\n                              c =\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum a) l\\<rightarrow>\n                                snd (Rep_OrdSum\n(Abs_OrdSum\n  (1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))))) \\<and>\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                              (1::'a) \\<longrightarrow>\n                              c = 1)) \\<and>\n                            (fst (Rep_OrdSum c) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                             1 = Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum a) *\n                                    snd (Rep_OrdSum b)))) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                            fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                           (snd (Rep_OrdSum c) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                              (1::'a) \\<longrightarrow>\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum\n(Abs_OrdSum\n  (1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                                snd (Rep_OrdSum c)) =\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum a) l\\<rightarrow>\n                                snd (Rep_OrdSum\n(Abs_OrdSum\n  (1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))))) \\<and>\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                              (1::'a) \\<longrightarrow>\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum\n(Abs_OrdSum\n  (1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                                snd (Rep_OrdSum c)) =\n                              1)) \\<and>\n                            (fst (Rep_OrdSum c) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                             1 = Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          snd (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) =\n                          (1::'b) \\<longrightarrow>\n                          (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            snd (Rep_OrdSum a) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                              fst (Rep_OrdSum c),\n                              1::'b) =\n                            c)) \\<and>\n                          (snd (Rep_OrdSum c) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     snd (Rep_OrdSum b) l\\<rightarrow>\n                                     snd (Rep_OrdSum c)))) =\n                            (1::'a) \\<longrightarrow>\n                            1 =\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))))) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                            1 = Abs_OrdSum (1::'a, 1::'b)))))) \\<and>\n                       (snd (Rep_OrdSum 1) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                         (1::'b) \\<longrightarrow>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) =\n                          (1::'a) \\<longrightarrow>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum a) *\n                                    snd (Rep_OrdSum b)))) =\n                           (1::'b) \\<longrightarrow>\n                           snd (Rep_OrdSum c) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                             (1::'a) \\<longrightarrow>\n                             c =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum\n (1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             c = 1)) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                            1 =\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum 1)))) \\<and>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum a) *\n                                    snd (Rep_OrdSum b)))) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           snd (Rep_OrdSum c) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum\n (1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                               snd (Rep_OrdSum c)) =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum\n (1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum\n (1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                               snd (Rep_OrdSum c)) =\n                             1)) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                            1 =\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum 1))))) \\<and>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          snd (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) =\n                          (1::'b) \\<longrightarrow>\n                          (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                           fst (Rep_OrdSum c) \\<noteq>\n                           (1::'a) \\<longrightarrow>\n                           snd (Rep_OrdSum a) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           Abs_OrdSum\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum\n                                     (1::'a,\nsnd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                             fst (Rep_OrdSum c),\n                             1::'b) =\n                           c) \\<and>\n                          (snd (Rep_OrdSum c) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     snd (Rep_OrdSum b) l\\<rightarrow>\n                                     snd (Rep_OrdSum c)))) =\n                            (1::'a) \\<longrightarrow>\n                            1 =\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))))) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                            1 =\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum 1)))))) \\<and>\n                        (snd (Rep_OrdSum\n                               (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) =\n                          (1::'a) \\<longrightarrow>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum a) *\n                                    snd (Rep_OrdSum b)))) =\n                           (1::'b) \\<longrightarrow>\n                           (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                            fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                           (snd (Rep_OrdSum c) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                              (1::'a) \\<longrightarrow>\n                              c =\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum a) l\\<rightarrow>\n                                snd (Rep_OrdSum\n(Abs_OrdSum\n  (1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))))) \\<and>\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                              (1::'a) \\<longrightarrow>\n                              c = 1)) \\<and>\n                            (fst (Rep_OrdSum c) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                             1 =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum 1))))) \\<and>\n                          (snd (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum a) *\n                                    snd (Rep_OrdSum b)))) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                            fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                           (snd (Rep_OrdSum c) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) =\n                              (1::'a) \\<longrightarrow>\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum\n(Abs_OrdSum\n  (1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                                snd (Rep_OrdSum c)) =\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum a) l\\<rightarrow>\n                                snd (Rep_OrdSum\n(Abs_OrdSum\n  (1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))))) \\<and>\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))) \\<noteq>\n                              (1::'a) \\<longrightarrow>\n                              Abs_OrdSum\n                               (1::'a,\n                                snd (Rep_OrdSum\n(Abs_OrdSum\n  (1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                                snd (Rep_OrdSum c)) =\n                              1)) \\<and>\n                            (fst (Rep_OrdSum c) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                             1 =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum 1)))))) \\<and>\n                         (fst (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) \\<noteq>\n                          (1::'a) \\<longrightarrow>\n                          snd (Rep_OrdSum\n                                (Abs_OrdSum\n                                  (1::'a,\n                                   snd (Rep_OrdSum a) *\n                                   snd (Rep_OrdSum b)))) =\n                          (1::'b) \\<longrightarrow>\n                          (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            (fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) =\n                             Abs_OrdSum\n                              (1::'a,\n                               snd (Rep_OrdSum a) l\\<rightarrow>\n                               snd (Rep_OrdSum\n                                     (Abs_OrdSum (1::'a, 1::'b))))) \\<and>\n                            (fst (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                             (1::'a) \\<longrightarrow>\n                             Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            snd (Rep_OrdSum a) \\<noteq>\n                            (1::'b) \\<longrightarrow>\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum a) * snd (Rep_OrdSum b)))) l\\<rightarrow>\n                              fst (Rep_OrdSum c),\n                              1::'b) =\n                            c)) \\<and>\n                          (snd (Rep_OrdSum c) \\<noteq>\n                           (1::'b) \\<longrightarrow>\n                           (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum\n                                  (Abs_OrdSum\n                                    (1::'a,\n                                     snd (Rep_OrdSum b) l\\<rightarrow>\n                                     snd (Rep_OrdSum c)))) =\n                            (1::'a) \\<longrightarrow>\n                            1 =\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum\n                                    (Abs_OrdSum\n(1::'a, snd (Rep_OrdSum b) l\\<rightarrow> snd (Rep_OrdSum c)))))) \\<and>\n                           (fst (Rep_OrdSum c) \\<noteq>\n                            (1::'a) \\<longrightarrow>\n                            fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                            1 =\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum 1))))))))\n 9. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n                       (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                        fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) =\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum (1::'a, 1::'b) =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))),\n                           1::'b)) \\<and>\n                        (snd (Rep_OrdSum\n                               (Abs_OrdSum (1::'a, 1::'b))) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum (1::'a, 1::'b) = 1)) \\<and>\n                       (snd (Rep_OrdSum c) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                         snd (Rep_OrdSum a) = (1::'b) \\<and>\n                         snd (Rep_OrdSum\n                               (Abs_OrdSum\n                                 (1::'a,\n                                  snd (Rep_OrdSum b) l\\<rightarrow>\n                                  snd (Rep_OrdSum c)))) =\n                         (1::'b) \\<longrightarrow>\n                         1 =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum\n                                 (Abs_OrdSum\n                                   (1::'a,\n                                    snd (Rep_OrdSum b) l\\<rightarrow>\n                                    snd (Rep_OrdSum c)))),\n                           1::'b)) \\<and>\n                        (fst (Rep_OrdSum c) \\<noteq>\n                         (1::'a) \\<longrightarrow>\n                         snd (Rep_OrdSum a) = (1::'b) \\<and>\n                         snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                         1 =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum 1),\n                           1::'b)))) \\<and>\n                      (fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                       (snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum 1),\n                           1::'b)) \\<and>\n                        (snd (Rep_OrdSum 1) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         1)) \\<and>\n                       ((snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                         snd (Rep_OrdSum c) \\<noteq>\n                         (1::'b)) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b)))", "apply (simp_all add: Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                      fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                      snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                      1 = Abs_OrdSum (1::'a, 1::'b)\n 2. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                      (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                       fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                       1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                      (snd (Rep_OrdSum 1) \\<noteq> (1::'b) \\<longrightarrow>\n                       fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                       1 =\n                       Abs_OrdSum\n                        (1::'a,\n                         snd (Rep_OrdSum a) l\\<rightarrow>\n                         snd (Rep_OrdSum 1)))\n 3. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) = (1::'b); snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                       1 =\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum 1),\n                         1::'b)) \\<and>\n                      (fst (Rep_OrdSum c) \\<noteq> (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                       fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) *\n                         fst (Rep_OrdSum b) l\\<rightarrow>\n                         fst (Rep_OrdSum c),\n                         1::'b) =\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum b) l\\<rightarrow>\n                         fst (Rep_OrdSum c),\n                         1::'b))\n 4. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum b) l\\<rightarrow>\n                        snd (Rep_OrdSum c) =\n                        (1::'b) \\<longrightarrow>\n                        1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                       (fst (Rep_OrdSum c) \\<noteq>\n                        (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b))) \\<and>\n                      (fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                       (snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum 1),\n                           1::'b)) \\<and>\n                        (snd (Rep_OrdSum 1) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         1)) \\<and>\n                       ((snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                         snd (Rep_OrdSum c) \\<noteq>\n                         (1::'b)) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b)))\n 5. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n     snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) *\n                         fst (Rep_OrdSum b) l\\<rightarrow>\n                         fst (Rep_OrdSum c),\n                         1::'b) =\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum b) l\\<rightarrow>\n                         fst (Rep_OrdSum c),\n                         1::'b)) \\<and>\n                      (snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                       1 =\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum 1),\n                         1::'b))\n 6. \\<lbrakk>snd (Rep_OrdSum b) \\<noteq> (1::'b);\n     fst (Rep_OrdSum a) = (1::'a); fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n    \\<Longrightarrow> (snd (Rep_OrdSum b) l\\<rightarrow>\n                       snd (Rep_OrdSum c) =\n                       (1::'b) \\<longrightarrow>\n                       (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        snd (Rep_OrdSum c) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                         snd (Rep_OrdSum a) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) *\n                           snd (Rep_OrdSum b) l\\<rightarrow>\n                           snd (Rep_OrdSum c)) =\n                         Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                        (fst (Rep_OrdSum c) \\<noteq>\n                         (1::'a) \\<longrightarrow>\n                         fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                         1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                       (snd (Rep_OrdSum 1) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        snd (Rep_OrdSum c) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                         snd (Rep_OrdSum a) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) *\n                           snd (Rep_OrdSum b) l\\<rightarrow>\n                           snd (Rep_OrdSum c)) =\n                         Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                        (fst (Rep_OrdSum c) \\<noteq>\n                         (1::'a) \\<longrightarrow>\n                         fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                         1 =\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) l\\<rightarrow>\n                           snd (Rep_OrdSum 1))))) \\<and>\n                      (snd (Rep_OrdSum b) l\\<rightarrow>\n                       snd (Rep_OrdSum c) \\<noteq>\n                       (1::'b) \\<longrightarrow>\n                       (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        snd (Rep_OrdSum c) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) *\n                           snd (Rep_OrdSum b) l\\<rightarrow>\n                           snd (Rep_OrdSum c)) =\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) l\\<rightarrow>\n                           snd (Rep_OrdSum b) l\\<rightarrow>\n                           snd (Rep_OrdSum c))) \\<and>\n                        (fst (Rep_OrdSum c) \\<noteq>\n                         (1::'a) \\<longrightarrow>\n                         fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                         1 = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n                       (snd (Rep_OrdSum 1) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        snd (Rep_OrdSum c) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) *\n                           snd (Rep_OrdSum b) l\\<rightarrow>\n                           snd (Rep_OrdSum c)) =\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) l\\<rightarrow>\n                           snd (Rep_OrdSum b) l\\<rightarrow>\n                           snd (Rep_OrdSum c))) \\<and>\n                        (fst (Rep_OrdSum c) \\<noteq>\n                         (1::'a) \\<longrightarrow>\n                         fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                         1 =\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) l\\<rightarrow>\n                           snd (Rep_OrdSum 1)))))\n 7. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum b) l\\<rightarrow>\n                        snd (Rep_OrdSum c) =\n                        (1::'b) \\<longrightarrow>\n                        1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                       (fst (Rep_OrdSum c) \\<noteq>\n                        (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b))) \\<and>\n                      (fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                       (snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum 1),\n                           1::'b)) \\<and>\n                        (snd (Rep_OrdSum 1) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         1)) \\<and>\n                       ((snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                         snd (Rep_OrdSum c) \\<noteq>\n                         (1::'b)) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b)))", "apply (simp_all add: fst_snd_eq)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                      fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                      snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                      1 = Abs_OrdSum (Rep_OrdSum 1)\n 2. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                      (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                       fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                       1 = Abs_OrdSum (Rep_OrdSum 1)) \\<and>\n                      (snd (Rep_OrdSum 1) \\<noteq> (1::'b) \\<longrightarrow>\n                       fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                       1 =\n                       Abs_OrdSum\n                        (1::'a,\n                         snd (Rep_OrdSum a) l\\<rightarrow>\n                         snd (Rep_OrdSum 1)))\n 3. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) = (1::'b); snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                       1 =\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum 1),\n                         1::'b)) \\<and>\n                      (fst (Rep_OrdSum c) \\<noteq> (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                       fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) *\n                         fst (Rep_OrdSum b) l\\<rightarrow>\n                         fst (Rep_OrdSum c),\n                         1::'b) =\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum b) l\\<rightarrow>\n                         fst (Rep_OrdSum c),\n                         1::'b))\n 4. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum b) l\\<rightarrow>\n                        snd (Rep_OrdSum c) =\n                        (1::'b) \\<longrightarrow>\n                        1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                       (fst (Rep_OrdSum c) \\<noteq>\n                        (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b))) \\<and>\n                      (fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                       (snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum 1),\n                           1::'b)) \\<and>\n                        (snd (Rep_OrdSum 1) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         1)) \\<and>\n                       ((snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                         snd (Rep_OrdSum c) \\<noteq>\n                         (1::'b)) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b)))\n 5. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n     snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) *\n                         fst (Rep_OrdSum b) l\\<rightarrow>\n                         fst (Rep_OrdSum c),\n                         1::'b) =\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum b) l\\<rightarrow>\n                         fst (Rep_OrdSum c),\n                         1::'b)) \\<and>\n                      (snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                       1 =\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum 1),\n                         1::'b))\n 6. \\<lbrakk>snd (Rep_OrdSum b) \\<noteq> (1::'b);\n     fst (Rep_OrdSum a) = (1::'a); fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n    \\<Longrightarrow> (snd (Rep_OrdSum b) l\\<rightarrow>\n                       snd (Rep_OrdSum c) =\n                       (1::'b) \\<longrightarrow>\n                       (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        snd (Rep_OrdSum c) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                         snd (Rep_OrdSum a) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) *\n                           snd (Rep_OrdSum b) l\\<rightarrow>\n                           snd (Rep_OrdSum c)) =\n                         Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                        (fst (Rep_OrdSum c) \\<noteq>\n                         (1::'a) \\<longrightarrow>\n                         fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                         1 = Abs_OrdSum (Rep_OrdSum 1))) \\<and>\n                       (snd (Rep_OrdSum 1) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        snd (Rep_OrdSum c) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                         snd (Rep_OrdSum a) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) *\n                           snd (Rep_OrdSum b) l\\<rightarrow>\n                           snd (Rep_OrdSum c)) =\n                         Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                        (fst (Rep_OrdSum c) \\<noteq>\n                         (1::'a) \\<longrightarrow>\n                         fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                         1 =\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) l\\<rightarrow>\n                           snd (Rep_OrdSum 1))))) \\<and>\n                      (snd (Rep_OrdSum b) l\\<rightarrow>\n                       snd (Rep_OrdSum c) \\<noteq>\n                       (1::'b) \\<longrightarrow>\n                       (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        snd (Rep_OrdSum c) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) *\n                           snd (Rep_OrdSum b) l\\<rightarrow>\n                           snd (Rep_OrdSum c)) =\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) l\\<rightarrow>\n                           snd (Rep_OrdSum b) l\\<rightarrow>\n                           snd (Rep_OrdSum c))) \\<and>\n                        (fst (Rep_OrdSum c) \\<noteq>\n                         (1::'a) \\<longrightarrow>\n                         fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                         1 = Abs_OrdSum (Rep_OrdSum 1))) \\<and>\n                       (snd (Rep_OrdSum 1) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        snd (Rep_OrdSum c) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) *\n                           snd (Rep_OrdSum b) l\\<rightarrow>\n                           snd (Rep_OrdSum c)) =\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) l\\<rightarrow>\n                           snd (Rep_OrdSum b) l\\<rightarrow>\n                           snd (Rep_OrdSum c))) \\<and>\n                        (fst (Rep_OrdSum c) \\<noteq>\n                         (1::'a) \\<longrightarrow>\n                         fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                         1 =\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) l\\<rightarrow>\n                           snd (Rep_OrdSum 1)))))\n 7. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum b) l\\<rightarrow>\n                        snd (Rep_OrdSum c) =\n                        (1::'b) \\<longrightarrow>\n                        1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                       (fst (Rep_OrdSum c) \\<noteq>\n                        (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b))) \\<and>\n                      (fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                       (snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum 1),\n                           1::'b)) \\<and>\n                        (snd (Rep_OrdSum 1) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         1)) \\<and>\n                       ((snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                         snd (Rep_OrdSum c) \\<noteq>\n                         (1::'b)) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b)))", "apply (simp_all add: Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                      snd (Rep_OrdSum 1) \\<noteq> (1::'b) \\<longrightarrow>\n                      fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                      1 =\n                      Abs_OrdSum\n                       (1::'a,\n                        snd (Rep_OrdSum a) l\\<rightarrow>\n                        snd (Rep_OrdSum 1))\n 2. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) = (1::'b); snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                       1 =\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum 1),\n                         1::'b)) \\<and>\n                      (fst (Rep_OrdSum c) \\<noteq> (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                       fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) *\n                         fst (Rep_OrdSum b) l\\<rightarrow>\n                         fst (Rep_OrdSum c),\n                         1::'b) =\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum b) l\\<rightarrow>\n                         fst (Rep_OrdSum c),\n                         1::'b))\n 3. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum b) l\\<rightarrow>\n                        snd (Rep_OrdSum c) =\n                        (1::'b) \\<longrightarrow>\n                        1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                       (fst (Rep_OrdSum c) \\<noteq>\n                        (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b))) \\<and>\n                      (fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                       (snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum 1),\n                           1::'b)) \\<and>\n                        (snd (Rep_OrdSum 1) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         1)) \\<and>\n                       ((snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                         snd (Rep_OrdSum c) \\<noteq>\n                         (1::'b)) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b)))\n 4. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n     snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) *\n                         fst (Rep_OrdSum b) l\\<rightarrow>\n                         fst (Rep_OrdSum c),\n                         1::'b) =\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum b) l\\<rightarrow>\n                         fst (Rep_OrdSum c),\n                         1::'b)) \\<and>\n                      (snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                       1 =\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum 1),\n                         1::'b))\n 5. \\<lbrakk>snd (Rep_OrdSum b) \\<noteq> (1::'b);\n     fst (Rep_OrdSum a) = (1::'a); fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n    \\<Longrightarrow> (snd (Rep_OrdSum b) l\\<rightarrow>\n                       snd (Rep_OrdSum c) =\n                       (1::'b) \\<longrightarrow>\n                       (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        snd (Rep_OrdSum c) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        Abs_OrdSum\n                         (1::'a,\n                          snd (Rep_OrdSum a) *\n                          snd (Rep_OrdSum b) l\\<rightarrow>\n                          snd (Rep_OrdSum c)) =\n                        Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                       (snd (Rep_OrdSum 1) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        snd (Rep_OrdSum c) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                         snd (Rep_OrdSum a) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) *\n                           snd (Rep_OrdSum b) l\\<rightarrow>\n                           snd (Rep_OrdSum c)) =\n                         Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                        (fst (Rep_OrdSum c) \\<noteq>\n                         (1::'a) \\<longrightarrow>\n                         fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                         1 =\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) l\\<rightarrow>\n                           snd (Rep_OrdSum 1))))) \\<and>\n                      (snd (Rep_OrdSum b) l\\<rightarrow>\n                       snd (Rep_OrdSum c) \\<noteq>\n                       (1::'b) \\<longrightarrow>\n                       (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        snd (Rep_OrdSum c) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                        Abs_OrdSum\n                         (1::'a,\n                          snd (Rep_OrdSum a) *\n                          snd (Rep_OrdSum b) l\\<rightarrow>\n                          snd (Rep_OrdSum c)) =\n                        Abs_OrdSum\n                         (1::'a,\n                          snd (Rep_OrdSum a) l\\<rightarrow>\n                          snd (Rep_OrdSum b) l\\<rightarrow>\n                          snd (Rep_OrdSum c))) \\<and>\n                       (snd (Rep_OrdSum 1) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        snd (Rep_OrdSum c) \\<noteq>\n                        (1::'b) \\<longrightarrow>\n                        (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) *\n                           snd (Rep_OrdSum b) l\\<rightarrow>\n                           snd (Rep_OrdSum c)) =\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) l\\<rightarrow>\n                           snd (Rep_OrdSum b) l\\<rightarrow>\n                           snd (Rep_OrdSum c))) \\<and>\n                        (fst (Rep_OrdSum c) \\<noteq>\n                         (1::'a) \\<longrightarrow>\n                         fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                         1 =\n                         Abs_OrdSum\n                          (1::'a,\n                           snd (Rep_OrdSum a) l\\<rightarrow>\n                           snd (Rep_OrdSum 1)))))\n 6. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum b) l\\<rightarrow>\n                        snd (Rep_OrdSum c) =\n                        (1::'b) \\<longrightarrow>\n                        1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                       (fst (Rep_OrdSum c) \\<noteq>\n                        (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b))) \\<and>\n                      (fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                       (snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum 1),\n                           1::'b)) \\<and>\n                        (snd (Rep_OrdSum 1) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         1)) \\<and>\n                       ((snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                         snd (Rep_OrdSum c) \\<noteq>\n                         (1::'b)) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b)))", "apply (simp_all add: left_impl_ded)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                      snd (Rep_OrdSum 1) \\<noteq> (1::'b) \\<longrightarrow>\n                      fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                      1 =\n                      Abs_OrdSum\n                       (1::'a,\n                        snd (Rep_OrdSum a) l\\<rightarrow>\n                        snd (Rep_OrdSum 1))\n 2. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum a) = (1::'b); snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                      snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                      fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                      snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                      1 =\n                      Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum 1),\n                        1::'b)\n 3. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum b) l\\<rightarrow>\n                        snd (Rep_OrdSum c) =\n                        (1::'b) \\<longrightarrow>\n                        1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                       (fst (Rep_OrdSum c) \\<noteq>\n                        (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b))) \\<and>\n                      (fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                       (snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum 1),\n                           1::'b)) \\<and>\n                        (snd (Rep_OrdSum 1) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         1)) \\<and>\n                       ((snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                         snd (Rep_OrdSum c) \\<noteq>\n                         (1::'b)) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b)))\n 4. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n     snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                      snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                      1 =\n                      Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum 1),\n                        1::'b)\n 5. \\<lbrakk>snd (Rep_OrdSum b) \\<noteq> (1::'b);\n     fst (Rep_OrdSum a) = (1::'a); fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n    \\<Longrightarrow> snd (Rep_OrdSum 1) \\<noteq> (1::'b) \\<longrightarrow>\n                      snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                      fst (Rep_OrdSum c) \\<noteq> (1::'a) \\<longrightarrow>\n                      fst (Rep_OrdSum 1) = (1::'a) \\<longrightarrow>\n                      1 =\n                      Abs_OrdSum\n                       (1::'a,\n                        snd (Rep_OrdSum a) l\\<rightarrow>\n                        snd (Rep_OrdSum 1))\n 6. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n                       (fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum b) l\\<rightarrow>\n                        snd (Rep_OrdSum c) =\n                        (1::'b) \\<longrightarrow>\n                        1 = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                       (fst (Rep_OrdSum c) \\<noteq>\n                        (1::'a) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b))) \\<and>\n                      (fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                       (snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                        (snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum 1),\n                           1::'b)) \\<and>\n                        (snd (Rep_OrdSum 1) \\<noteq>\n                         (1::'b) \\<longrightarrow>\n                         Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum c),\n                           1::'b) =\n                         1)) \\<and>\n                       ((snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n                         snd (Rep_OrdSum c) \\<noteq>\n                         (1::'b)) \\<longrightarrow>\n                        snd (Rep_OrdSum a) = (1::'b) \\<and>\n                        snd (Rep_OrdSum 1) = (1::'b) \\<longrightarrow>\n                        1 =\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum a) l\\<rightarrow>\n                          fst (Rep_OrdSum 1),\n                          1::'b)))", "apply (simp_all add: fst_snd_eq one_OrdSum_def times_OrdSum_def left_impl_ded impl_OrdSum_def second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                      snd (Rep_OrdSum a) = (1::'b) \\<and>\n                      snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                      Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum c),\n                        1::'b) =\n                      Abs_OrdSum (1::'a, 1::'b)\n 2. \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n     snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n    \\<Longrightarrow> fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n                      snd (Rep_OrdSum a) = (1::'b) \\<and>\n                      snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n                      Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum c),\n                        1::'b) =\n                      Abs_OrdSum (1::'a, 1::'b)", "by auto"], ["proof (state)\nthis:\n  a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n\ngoal (5 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 5. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 5. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c", "fix a b c::\"('a, 'b) OrdSum\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 5. \\<And>a b c.\n       a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c", "show \"a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c", "apply (simp add: right_impl_ded impr_OrdSum_def second_def first_def one_OrdSum_def  times_OrdSum_def  second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (fst (Rep_OrdSum a) = (1::'a) \\<longrightarrow>\n     (snd (Rep_OrdSum b) = (1::'b) \\<longrightarrow>\n      snd (Rep_OrdSum a) \\<noteq> (1::'b)) \\<longrightarrow>\n     (snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n      (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n       fst (Rep_OrdSum c) \\<noteq> (1::'a) \\<longrightarrow>\n       snd (Rep_OrdSum b) \\<noteq> (1::'b) \\<longrightarrow>\n       fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n       c = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n      (snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n       fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n       snd (Rep_OrdSum b) \\<noteq> (1::'b) \\<longrightarrow>\n       fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n       c = Abs_OrdSum (1::'a, 1::'b))) \\<and>\n     (snd (Rep_OrdSum a) \\<noteq> (1::'b) \\<longrightarrow>\n      (snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n       fst (Rep_OrdSum c) \\<noteq> (1::'a) \\<longrightarrow>\n       snd (Rep_OrdSum b) \\<noteq> (1::'b) \\<longrightarrow>\n       fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n       c = Abs_OrdSum (1::'a, 1::'b)) \\<and>\n      (snd (Rep_OrdSum c) \\<noteq> (1::'b) \\<longrightarrow>\n       fst (Rep_OrdSum c) = (1::'a) \\<longrightarrow>\n       snd (Rep_OrdSum b) \\<noteq> (1::'b) \\<longrightarrow>\n       fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n       Abs_OrdSum\n        (1::'a, snd (Rep_OrdSum a) r\\<rightarrow> snd (Rep_OrdSum c)) =\n       Abs_OrdSum (1::'a, 1::'b)))) \\<and>\n    (fst (Rep_OrdSum a) \\<noteq> (1::'a) \\<longrightarrow>\n     snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n     snd (Rep_OrdSum c) = (1::'b) \\<longrightarrow>\n     fst (Rep_OrdSum c) \\<noteq> (1::'a) \\<longrightarrow>\n     snd (Rep_OrdSum b) \\<noteq> (1::'b) \\<longrightarrow>\n     fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n     Abs_OrdSum\n      (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum c), 1::'b) =\n     Abs_OrdSum (1::'a, 1::'b))", "by auto"], ["proof (state)\nthis:\n  a * b r\\<rightarrow> c = b r\\<rightarrow> a r\\<rightarrow> c\n\ngoal (4 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "fix a b::\"('a, 'b) OrdSum\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 4. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "show \"(a \\<le> b) = (a l\\<rightarrow> b = 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<le> b) = (a l\\<rightarrow> b = 1)", "by (simp add:  order_OrdSum_def)"], ["proof (state)\nthis:\n  (a \\<le> b) = (a l\\<rightarrow> b = 1)\n\ngoal (3 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "fix a b::\"('a, 'b) OrdSum\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "show \"(a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)", "by (simp add:  strict_order_OrdSum_def)"], ["proof (state)\nthis:\n  (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n\ngoal (2 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "fix a b::\"('a, 'b) OrdSum\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "show \"a \\<sqinter> b = (a l\\<rightarrow> b) * a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sqinter> b = (a l\\<rightarrow> b) * a", "by (simp add: inf_OrdSum_def)"], ["proof (state)\nthis:\n  a \\<sqinter> b = (a l\\<rightarrow> b) * a\n\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "fix a b::\"('a, 'b) OrdSum\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "show \"a \\<sqinter> b = a * (a r\\<rightarrow> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sqinter> b = a * (a r\\<rightarrow> b)", "by (simp add: inf_OrdSum_def A)"], ["proof (state)\nthis:\n  a \\<sqinter> b = a * (a r\\<rightarrow> b)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n   \"Second = {x . \\<exists> b . x =  Abs_OrdSum(1::'a, b::'b)}\""], ["", "end"], ["", "lemma \"Second \\<in> normalfilters\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Second \\<in> normalfilters", "apply (unfold normalfilters_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Second\n    \\<in> {F \\<in> filters.\n           \\<forall>a b.\n              (a l\\<rightarrow> b \\<in> F) = (a r\\<rightarrow> b \\<in> F)}", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. Second \\<in> filters\n 2. \\<And>a b.\n       a l\\<rightarrow> b \\<in> Second \\<Longrightarrow>\n       a r\\<rightarrow> b \\<in> Second\n 3. \\<And>a b.\n       a r\\<rightarrow> b \\<in> Second \\<Longrightarrow>\n       a l\\<rightarrow> b \\<in> Second", "apply (unfold filters_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. Second\n    \\<in> {F. F \\<noteq> {} \\<and>\n              (\\<forall>a b.\n                  a \\<in> F \\<and> b \\<in> F \\<longrightarrow>\n                  a * b \\<in> F) \\<and>\n              (\\<forall>a b.\n                  a \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)}\n 2. \\<And>a b.\n       a l\\<rightarrow> b \\<in> Second \\<Longrightarrow>\n       a r\\<rightarrow> b \\<in> Second\n 3. \\<And>a b.\n       a r\\<rightarrow> b \\<in> Second \\<Longrightarrow>\n       a l\\<rightarrow> b \\<in> Second", "apply safe"], ["proof (prove)\ngoal (5 subgoals):\n 1. Second = {} \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> Second; b \\<in> Second\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> Second\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> Second; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> Second\n 4. \\<And>a b.\n       a l\\<rightarrow> b \\<in> Second \\<Longrightarrow>\n       a r\\<rightarrow> b \\<in> Second\n 5. \\<And>a b.\n       a r\\<rightarrow> b \\<in> Second \\<Longrightarrow>\n       a l\\<rightarrow> b \\<in> Second", "apply (unfold Second_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. {x. \\<exists>b. x = Abs_OrdSum (1::'a, b)} = {} \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> {x. \\<exists>b. x = Abs_OrdSum (1::'a, b)};\n        b \\<in> {x. \\<exists>b. x = Abs_OrdSum (1::'a, b)}\\<rbrakk>\n       \\<Longrightarrow> a * b\n                         \\<in> {x. \\<exists>b. x = Abs_OrdSum (1::'a, b)}\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> {x. \\<exists>b. x = Abs_OrdSum (1::'a, b)};\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> {x. \\<exists>b. x = Abs_OrdSum (1::'a, b)}\n 4. \\<And>a b.\n       a l\\<rightarrow> b\n       \\<in> {x. \\<exists>b. x = Abs_OrdSum (1::'a, b)} \\<Longrightarrow>\n       a r\\<rightarrow> b \\<in> {x. \\<exists>b. x = Abs_OrdSum (1::'a, b)}\n 5. \\<And>a b.\n       a r\\<rightarrow> b\n       \\<in> {x. \\<exists>b. x = Abs_OrdSum (1::'a, b)} \\<Longrightarrow>\n       a l\\<rightarrow> b \\<in> {x. \\<exists>b. x = Abs_OrdSum (1::'a, b)}", "apply auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>ba bb.\n       \\<exists>b.\n          Abs_OrdSum (1::'a, ba) * Abs_OrdSum (1::'a, bb) =\n          Abs_OrdSum (1::'a, b)\n 2. \\<And>b ba.\n       Abs_OrdSum (1::'a, ba) \\<le> b \\<Longrightarrow>\n       \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (rule_tac x = \"ba * bb\" in exI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>ba bb.\n       Abs_OrdSum (1::'a, ba) * Abs_OrdSum (1::'a, bb) =\n       Abs_OrdSum (1::'a, ba * bb)\n 2. \\<And>b ba.\n       Abs_OrdSum (1::'a, ba) \\<le> b \\<Longrightarrow>\n       \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (simp add: times_OrdSum_def second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b ba.\n       Abs_OrdSum (1::'a, ba) \\<le> b \\<Longrightarrow>\n       \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 2. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (rule_tac x = \"second b\" in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b ba.\n       Abs_OrdSum (1::'a, ba) \\<le> b \\<Longrightarrow>\n       b = Abs_OrdSum (1::'a, second b)\n 2. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (subgoal_tac \"Abs_OrdSum (1::'a, second b) = Abs_OrdSum (first b, second b)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, ba) \\<le> b;\n        Abs_OrdSum (1::'a, second b) =\n        Abs_OrdSum (first b, second b)\\<rbrakk>\n       \\<Longrightarrow> b = Abs_OrdSum (1::'a, second b)\n 2. \\<And>b ba.\n       Abs_OrdSum (1::'a, ba) \\<le> b \\<Longrightarrow>\n       Abs_OrdSum (1::'a, second b) = Abs_OrdSum (first b, second b)\n 3. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, ba) \\<le> b;\n        Abs_OrdSum (1::'a, second b) =\n        Abs_OrdSum (first b, second b)\\<rbrakk>\n       \\<Longrightarrow> b = Abs_OrdSum (first b, second b)\n 2. \\<And>b ba.\n       Abs_OrdSum (1::'a, ba) \\<le> b \\<Longrightarrow>\n       Abs_OrdSum (1::'a, second b) = Abs_OrdSum (first b, second b)\n 3. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (simp add: first_def second_def Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b ba.\n       Abs_OrdSum (1::'a, ba) \\<le> b \\<Longrightarrow>\n       Abs_OrdSum (1::'a, second b) = Abs_OrdSum (first b, second b)\n 2. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (subgoal_tac \"first b = 1\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, ba) \\<le> b; first b = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> Abs_OrdSum (1::'a, second b) =\n                         Abs_OrdSum (first b, second b)\n 2. \\<And>b ba.\n       Abs_OrdSum (1::'a, ba) \\<le> b \\<Longrightarrow> first b = (1::'a)\n 3. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b ba.\n       Abs_OrdSum (1::'a, ba) \\<le> b \\<Longrightarrow> first b = (1::'a)\n 2. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (simp add: order_OrdSum_def one_OrdSum_def impl_OrdSum_def second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b ba.\n       (if ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b)\n        then Abs_OrdSum\n              (first (Abs_OrdSum (1::'a, ba)) l\\<rightarrow> first b, 1::'b)\n        else if first (Abs_OrdSum (1::'a, ba)) = (1::'a) \\<and>\n                first b = (1::'a)\n             then Abs_OrdSum\n                   (1::'a,\n                    second (Abs_OrdSum (1::'a, ba)) l\\<rightarrow> second b)\n             else if first (Abs_OrdSum (1::'a, ba)) = (1::'a) \\<and>\n                     second b = (1::'b)\n                  then b else 1) =\n       Abs_OrdSum (1::'a, 1::'b) \\<Longrightarrow>\n       fst (Rep_OrdSum b) = (1::'a)\n 2. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (unfold second_def first_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b ba.\n       (if ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b)\n        then Abs_OrdSum\n              (fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n               fst (Rep_OrdSum b),\n               1::'b)\n        else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) = (1::'a) \\<and>\n                fst (Rep_OrdSum b) = (1::'a)\n             then Abs_OrdSum\n                   (1::'a,\n                    snd (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                    snd (Rep_OrdSum b))\n             else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                     (1::'a) \\<and>\n                     snd (Rep_OrdSum b) = (1::'b)\n                  then b else 1) =\n       Abs_OrdSum (1::'a, 1::'b) \\<Longrightarrow>\n       fst (Rep_OrdSum b) = (1::'a)\n 2. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (case_tac \"ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>(if ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum\n                              (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                         (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                              (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, 1::'b);\n        ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum b) = (1::'a)\n 2. \\<And>b ba.\n       \\<lbrakk>(if ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum\n                              (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                         (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                              (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, 1::'b);\n        \\<not> (ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b))\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum b) = (1::'a)\n 3. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum\n                        (Abs_OrdSum (1::'a, 1::'b))) l\\<rightarrow>\n                  fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, 1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum b) = (1::'a)\n 2. \\<And>b ba.\n       \\<lbrakk>(if ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum\n                              (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                         (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                              (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, 1::'b);\n        \\<not> (ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b))\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum b) = (1::'a)\n 3. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (simp add: Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>Abs_OrdSum (fst (Rep_OrdSum b), 1::'b) =\n                Abs_OrdSum (1::'a, 1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum b) = (1::'a)\n 2. \\<And>b ba.\n       \\<lbrakk>(if ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum\n                              (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                         (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                              (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, 1::'b);\n        \\<not> (ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b))\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum b) = (1::'a)\n 3. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (subgoal_tac \"Rep_OrdSum (Abs_OrdSum (fst (Rep_OrdSum b), 1::'b)) = Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>Abs_OrdSum (fst (Rep_OrdSum b), 1::'b) =\n                Abs_OrdSum (1::'a, 1::'b);\n        snd (Rep_OrdSum b) = (1::'b);\n        Rep_OrdSum (Abs_OrdSum (fst (Rep_OrdSum b), 1::'b)) =\n        Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum b) = (1::'a)\n 2. \\<And>b.\n       \\<lbrakk>Abs_OrdSum (fst (Rep_OrdSum b), 1::'b) =\n                Abs_OrdSum (1::'a, 1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum (fst (Rep_OrdSum b), 1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))\n 3. \\<And>b ba.\n       \\<lbrakk>(if ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum\n                              (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                         (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                              (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, 1::'b);\n        \\<not> (ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b))\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum b) = (1::'a)\n 4. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 5. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>snd (Rep_OrdSum b) = (1::'b);\n        Rep_OrdSum (Abs_OrdSum (fst (Rep_OrdSum b), 1::'b)) =\n        Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b));\n        True\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum b) = (1::'a)\n 2. \\<And>b.\n       \\<lbrakk>Abs_OrdSum (fst (Rep_OrdSum b), 1::'b) =\n                Abs_OrdSum (1::'a, 1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum (fst (Rep_OrdSum b), 1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))\n 3. \\<And>b ba.\n       \\<lbrakk>(if ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum\n                              (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                         (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                              (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, 1::'b);\n        \\<not> (ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b))\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum b) = (1::'a)\n 4. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 5. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (simp add: Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>Abs_OrdSum (fst (Rep_OrdSum b), 1::'b) =\n                Abs_OrdSum (1::'a, 1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum (fst (Rep_OrdSum b), 1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))\n 2. \\<And>b ba.\n       \\<lbrakk>(if ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum\n                              (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                         (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                              (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, 1::'b);\n        \\<not> (ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b))\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum b) = (1::'a)\n 3. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>(if ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum\n                              (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                         (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum\n                                   (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                              (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, 1::'b);\n        \\<not> (ba = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b))\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum b) = (1::'a)\n 2. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>(if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                    (1::'a) \\<and>\n                    fst (Rep_OrdSum b) = (1::'a)\n                 then Abs_OrdSum\n                       (1::'a,\n                        snd (Rep_OrdSum\n                              (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                        snd (Rep_OrdSum b))\n                 else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                         (1::'a) \\<and>\n                         snd (Rep_OrdSum b) = (1::'b)\n                      then b else 1) =\n                Abs_OrdSum (1::'a, 1::'b);\n        ba = (1::'b) \\<longrightarrow>\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum b) = (1::'a)\n 2. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (simp add: Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>(if fst (Rep_OrdSum b) = (1::'a)\n                 then Abs_OrdSum\n                       (1::'a,\n                        snd (Rep_OrdSum\n                              (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                        snd (Rep_OrdSum b))\n                 else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                         (1::'a) \\<and>\n                         snd (Rep_OrdSum b) = (1::'b)\n                      then b else 1) =\n                Abs_OrdSum (1::'a, 1::'b);\n        ba = (1::'b) \\<longrightarrow>\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum b) = (1::'a)\n 2. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (case_tac \"fst (Rep_OrdSum b) = (1::'a)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>(if fst (Rep_OrdSum b) = (1::'a)\n                 then Abs_OrdSum\n                       (1::'a,\n                        snd (Rep_OrdSum\n                              (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                        snd (Rep_OrdSum b))\n                 else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                         (1::'a) \\<and>\n                         snd (Rep_OrdSum b) = (1::'b)\n                      then b else 1) =\n                Abs_OrdSum (1::'a, 1::'b);\n        ba = (1::'b) \\<longrightarrow> snd (Rep_OrdSum b) \\<noteq> (1::'b);\n        fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum b) = (1::'a)\n 2. \\<And>b ba.\n       \\<lbrakk>(if fst (Rep_OrdSum b) = (1::'a)\n                 then Abs_OrdSum\n                       (1::'a,\n                        snd (Rep_OrdSum\n                              (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                        snd (Rep_OrdSum b))\n                 else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                         (1::'a) \\<and>\n                         snd (Rep_OrdSum b) = (1::'b)\n                      then b else 1) =\n                Abs_OrdSum (1::'a, 1::'b);\n        ba = (1::'b) \\<longrightarrow> snd (Rep_OrdSum b) \\<noteq> (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum b) = (1::'a)\n 3. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>(if fst (Rep_OrdSum b) = (1::'a)\n                 then Abs_OrdSum\n                       (1::'a,\n                        snd (Rep_OrdSum\n                              (Abs_OrdSum (1::'a, ba))) l\\<rightarrow>\n                        snd (Rep_OrdSum b))\n                 else if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                         (1::'a) \\<and>\n                         snd (Rep_OrdSum b) = (1::'b)\n                      then b else 1) =\n                Abs_OrdSum (1::'a, 1::'b);\n        ba = (1::'b) \\<longrightarrow> snd (Rep_OrdSum b) \\<noteq> (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum b) = (1::'a)\n 2. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>(if fst (Rep_OrdSum (Abs_OrdSum (1::'a, ba))) =\n                    (1::'a) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then b else 1) =\n                Abs_OrdSum (1::'a, 1::'b);\n        ba \\<noteq> (1::'b); fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (simp add: Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum b) = (1::'b) then b else 1) =\n                Abs_OrdSum (1::'a, 1::'b);\n        ba \\<noteq> (1::'b); fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (case_tac \"snd (Rep_OrdSum b) = (1::'b)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum b) = (1::'b) then b else 1) =\n                Abs_OrdSum (1::'a, 1::'b);\n        ba \\<noteq> (1::'b); fst (Rep_OrdSum b) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum b) = (1::'b) then b else 1) =\n                Abs_OrdSum (1::'a, 1::'b);\n        ba \\<noteq> (1::'b); fst (Rep_OrdSum b) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b ba.\n       \\<lbrakk>b = Abs_OrdSum (1::'a, 1::'b); ba \\<noteq> (1::'b);\n        fst (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) \\<noteq> (1::'a);\n        snd (Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (simp add: Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b ba.\n       a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba)\n 2. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (simp add: impr_OrdSum_def impl_OrdSum_def second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b ba.\n       (if snd (Rep_OrdSum a) = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b)\n        then Abs_OrdSum (first a l\\<rightarrow> first b, 1::'b)\n        else if first a = (1::'a) \\<and> first b = (1::'a)\n             then Abs_OrdSum (1::'a, second a l\\<rightarrow> second b)\n             else if first a = (1::'a) \\<and> second b = (1::'b) then b\n                  else 1) =\n       Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       (fst (Rep_OrdSum a) = (1::'a) \\<and>\n        snd (Rep_OrdSum b) = (1::'b) \\<longrightarrow>\n        (fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n         (\\<exists>b.\n             Abs_OrdSum (1::'a, 1::'b) = Abs_OrdSum (1::'a, b))) \\<and>\n        (fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n         (\\<exists>ba. b = Abs_OrdSum (1::'a, ba)))) \\<and>\n       ((fst (Rep_OrdSum a) = (1::'a) \\<longrightarrow>\n         snd (Rep_OrdSum b) \\<noteq> (1::'b)) \\<longrightarrow>\n        (fst (Rep_OrdSum a) = (1::'a) \\<and>\n         fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n         (\\<exists>ba.\n             Abs_OrdSum\n              (1::'a,\n               snd (Rep_OrdSum a) r\\<rightarrow> snd (Rep_OrdSum b)) =\n             Abs_OrdSum (1::'a, ba))) \\<and>\n        ((fst (Rep_OrdSum a) = (1::'a) \\<longrightarrow>\n          fst (Rep_OrdSum b) \\<noteq> (1::'a)) \\<longrightarrow>\n         (snd (Rep_OrdSum a) = (1::'b) \\<and>\n          snd (Rep_OrdSum b) = (1::'b) \\<longrightarrow>\n          (\\<exists>ba.\n              Abs_OrdSum\n               (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                1::'b) =\n              Abs_OrdSum (1::'a, ba))) \\<and>\n         ((snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n           snd (Rep_OrdSum b) \\<noteq> (1::'b)) \\<longrightarrow>\n          (\\<exists>b. Abs_OrdSum (1::'a, b) = 1))))\n 2. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply safe"], ["proof (prove)\ngoal (14 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a l\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a l\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            Abs_OrdSum (1::'a, 1::'b) =\n                            Abs_OrdSum (1::'a, b)\n 2. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a l\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a l\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a l\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a l\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a l\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a l\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 5. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a l\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a l\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 6. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a l\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a l\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 7. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a l\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a l\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a);\n        snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 8. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a l\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a l\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 9. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a l\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a l\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b); fst (Rep_OrdSum a) = (1::'a);\n        fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) r\\<rightarrow>\n                              snd (Rep_OrdSum b)) =\n                            Abs_OrdSum (1::'a, ba)\n 10. \\<And>a b ba.\n        \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                     snd (Rep_OrdSum b) = (1::'b)\n                  then Abs_OrdSum (first a l\\<rightarrow> first b, 1::'b)\n                  else if first a = (1::'a) \\<and> first b = (1::'a)\n                       then Abs_OrdSum\n                             (1::'a, second a l\\<rightarrow> second b)\n                       else if first a = (1::'a) \\<and> second b = (1::'b)\n                            then b else 1) =\n                 Abs_OrdSum (1::'a, ba);\n         snd (Rep_OrdSum b) \\<noteq> (1::'b);\n         fst (Rep_OrdSum a) \\<noteq> (1::'a);\n         snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\nA total of 14 subgoals...", "apply (unfold second_def first_def)"], ["proof (prove)\ngoal (14 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            Abs_OrdSum (1::'a, 1::'b) =\n                            Abs_OrdSum (1::'a, b)\n 2. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 5. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 6. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 7. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a);\n        snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 8. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 9. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b); fst (Rep_OrdSum a) = (1::'a);\n        fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) r\\<rightarrow>\n                              snd (Rep_OrdSum b)) =\n                            Abs_OrdSum (1::'a, ba)\n 10. \\<And>a b ba.\n        \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                     snd (Rep_OrdSum b) = (1::'b)\n                  then Abs_OrdSum\n                        (fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum b),\n                         1::'b)\n                  else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                          fst (Rep_OrdSum b) = (1::'a)\n                       then Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum b))\n                       else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                               snd (Rep_OrdSum b) = (1::'b)\n                            then b else 1) =\n                 Abs_OrdSum (1::'a, ba);\n         snd (Rep_OrdSum b) \\<noteq> (1::'b);\n         fst (Rep_OrdSum a) \\<noteq> (1::'a);\n         snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\nA total of 14 subgoals...", "apply (simp_all add: second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            Abs_OrdSum (1::'a, 1::'b) =\n                            Abs_OrdSum (1::'a, b)\n 2. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, ba) = 1;\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 5. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 6. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (1::'a,\n                  snd (Rep_OrdSum a) l\\<rightarrow> snd (Rep_OrdSum b)) =\n                Abs_OrdSum (1::'a, ba);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b); fst (Rep_OrdSum a) = (1::'a);\n        fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) r\\<rightarrow>\n                              snd (Rep_OrdSum b)) =\n                            Abs_OrdSum (1::'a, ba)\n 7. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, ba) = 1;\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 8. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (case_tac \"snd (Rep_OrdSum a) = (1::'b)\")"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) = (1::'a); snd (Rep_OrdSum a) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            Abs_OrdSum (1::'a, 1::'b) =\n                            Abs_OrdSum (1::'a, b)\n 2. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) = (1::'a);\n        snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            Abs_OrdSum (1::'a, 1::'b) =\n                            Abs_OrdSum (1::'a, b)\n 3. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 5. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, ba) = 1;\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 6. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 7. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (1::'a,\n                  snd (Rep_OrdSum a) l\\<rightarrow> snd (Rep_OrdSum b)) =\n                Abs_OrdSum (1::'a, ba);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b); fst (Rep_OrdSum a) = (1::'a);\n        fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) r\\<rightarrow>\n                              snd (Rep_OrdSum b)) =\n                            Abs_OrdSum (1::'a, ba)\n 8. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, ba) = 1;\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 9. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply simp_all"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, 1::'b) = Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) = (1::'a); snd (Rep_OrdSum a) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            Abs_OrdSum (1::'a, ba) = Abs_OrdSum (1::'a, b)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, 1::'b) = Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) = (1::'a);\n        snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            Abs_OrdSum (1::'a, ba) = Abs_OrdSum (1::'a, b)\n 3. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 5. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, ba) = 1;\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 6. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 7. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (1::'a,\n                  snd (Rep_OrdSum a) l\\<rightarrow> snd (Rep_OrdSum b)) =\n                Abs_OrdSum (1::'a, ba);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b); fst (Rep_OrdSum a) = (1::'a);\n        fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) r\\<rightarrow>\n                              snd (Rep_OrdSum b)) =\n                            Abs_OrdSum (1::'a, ba)\n 8. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, ba) = 1;\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 9. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (case_tac \"snd (Rep_OrdSum a) = (1::'b)\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a);\n        snd (Rep_OrdSum a) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 2. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) l\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) l\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a);\n        snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 5. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (rule_tac x = 1 in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Abs_OrdSum\n                          (fst (Rep_OrdSum a) r\\<rightarrow>\n                           fst (Rep_OrdSum b),\n                           1::'b) =\n                         Abs_OrdSum (1::'a, 1::'b)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (rule Rep_OrdSum_eq)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) r\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (simp_all add: second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum a) r\\<rightarrow>\n                         fst (Rep_OrdSum b) =\n                         (1::'a)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (subgoal_tac \"Rep_OrdSum (Abs_OrdSum (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b), 1::'b)) = Rep_OrdSum (Abs_OrdSum (1::'a, ba))\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b);\n        Rep_OrdSum\n         (Abs_OrdSum\n           (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b), 1::'b)) =\n        Rep_OrdSum (Abs_OrdSum (1::'a, ba))\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum a) r\\<rightarrow>\n                         fst (Rep_OrdSum b) =\n                         (1::'a)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) l\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, ba))\n 3. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum a) = (1::'b); snd (Rep_OrdSum b) = (1::'b);\n        Rep_OrdSum\n         (Abs_OrdSum\n           (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b), 1::'b)) =\n        Rep_OrdSum (Abs_OrdSum (1::'a, ba));\n        True\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum a) r\\<rightarrow>\n                         fst (Rep_OrdSum b) =\n                         (1::'a)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) l\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, ba))\n 3. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (simp add: second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum a) = (1::'b); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b) =\n        (1::'a)\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum a) r\\<rightarrow>\n                         fst (Rep_OrdSum b) =\n                         (1::'a)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) l\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, ba))\n 3. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (simp add: left_lesseq [THEN sym] right_lesseq [THEN sym])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) l\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, ba))\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) r\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 2. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (rule_tac x = 1 in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Abs_OrdSum\n                          (fst (Rep_OrdSum a) r\\<rightarrow>\n                           fst (Rep_OrdSum b),\n                           1::'b) =\n                         Abs_OrdSum (1::'a, 1::'b)\n 2. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (rule Rep_OrdSum_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) r\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))\n 2. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (simp_all add: second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum a) r\\<rightarrow>\n                         fst (Rep_OrdSum b) =\n                         (1::'a)\n 2. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (subgoal_tac \"Rep_OrdSum (Abs_OrdSum (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b), 1::'b)) = Rep_OrdSum (Abs_OrdSum (1::'a, ba))\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b);\n        Rep_OrdSum\n         (Abs_OrdSum\n           (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b), 1::'b)) =\n        Rep_OrdSum (Abs_OrdSum (1::'a, ba))\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum a) r\\<rightarrow>\n                         fst (Rep_OrdSum b) =\n                         (1::'a)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) l\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, ba))\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b);\n        Rep_OrdSum\n         (Abs_OrdSum\n           (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b), 1::'b)) =\n        Rep_OrdSum (Abs_OrdSum (1::'a, ba));\n        True\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum a) r\\<rightarrow>\n                         fst (Rep_OrdSum b) =\n                         (1::'a)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) l\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, ba))\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (simp add: second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b) =\n        (1::'a)\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum a) r\\<rightarrow>\n                         fst (Rep_OrdSum b) =\n                         (1::'a)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) l\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, ba))\n 3. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (simp add: left_lesseq [THEN sym] right_lesseq [THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) l\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, ba))\n 2. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b ba.\n       a r\\<rightarrow> b = Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       \\<exists>ba. a l\\<rightarrow> b = Abs_OrdSum (1::'a, ba)", "apply (simp add: impr_OrdSum_def impl_OrdSum_def second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b ba.\n       (if snd (Rep_OrdSum a) = (1::'b) \\<and> snd (Rep_OrdSum b) = (1::'b)\n        then Abs_OrdSum (first a r\\<rightarrow> first b, 1::'b)\n        else if first a = (1::'a) \\<and> first b = (1::'a)\n             then Abs_OrdSum (1::'a, second a r\\<rightarrow> second b)\n             else if first a = (1::'a) \\<and> second b = (1::'b) then b\n                  else 1) =\n       Abs_OrdSum (1::'a, ba) \\<Longrightarrow>\n       (fst (Rep_OrdSum a) = (1::'a) \\<and>\n        snd (Rep_OrdSum b) = (1::'b) \\<longrightarrow>\n        (fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n         (\\<exists>b.\n             Abs_OrdSum (1::'a, 1::'b) = Abs_OrdSum (1::'a, b))) \\<and>\n        (fst (Rep_OrdSum b) \\<noteq> (1::'a) \\<longrightarrow>\n         (\\<exists>ba. b = Abs_OrdSum (1::'a, ba)))) \\<and>\n       ((fst (Rep_OrdSum a) = (1::'a) \\<longrightarrow>\n         snd (Rep_OrdSum b) \\<noteq> (1::'b)) \\<longrightarrow>\n        (fst (Rep_OrdSum a) = (1::'a) \\<and>\n         fst (Rep_OrdSum b) = (1::'a) \\<longrightarrow>\n         (\\<exists>ba.\n             Abs_OrdSum\n              (1::'a,\n               snd (Rep_OrdSum a) l\\<rightarrow> snd (Rep_OrdSum b)) =\n             Abs_OrdSum (1::'a, ba))) \\<and>\n        ((fst (Rep_OrdSum a) = (1::'a) \\<longrightarrow>\n          fst (Rep_OrdSum b) \\<noteq> (1::'a)) \\<longrightarrow>\n         (snd (Rep_OrdSum a) = (1::'b) \\<and>\n          snd (Rep_OrdSum b) = (1::'b) \\<longrightarrow>\n          (\\<exists>ba.\n              Abs_OrdSum\n               (fst (Rep_OrdSum a) l\\<rightarrow> fst (Rep_OrdSum b),\n                1::'b) =\n              Abs_OrdSum (1::'a, ba))) \\<and>\n         ((snd (Rep_OrdSum a) = (1::'b) \\<longrightarrow>\n           snd (Rep_OrdSum b) \\<noteq> (1::'b)) \\<longrightarrow>\n          (\\<exists>b. Abs_OrdSum (1::'a, b) = 1))))", "apply safe"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a r\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a r\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            Abs_OrdSum (1::'a, 1::'b) =\n                            Abs_OrdSum (1::'a, b)\n 2. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a r\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a r\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a r\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a r\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a r\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a r\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 5. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a r\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a r\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 6. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a r\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a r\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 7. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a r\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a r\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a);\n        snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 8. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a r\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a r\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 9. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum (first a r\\<rightarrow> first b, 1::'b)\n                 else if first a = (1::'a) \\<and> first b = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a, second a r\\<rightarrow> second b)\n                      else if first a = (1::'a) \\<and> second b = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b); fst (Rep_OrdSum a) = (1::'a);\n        fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum b)) =\n                            Abs_OrdSum (1::'a, ba)\n 10. \\<And>a b ba.\n        \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                     snd (Rep_OrdSum b) = (1::'b)\n                  then Abs_OrdSum (first a r\\<rightarrow> first b, 1::'b)\n                  else if first a = (1::'a) \\<and> first b = (1::'a)\n                       then Abs_OrdSum\n                             (1::'a, second a r\\<rightarrow> second b)\n                       else if first a = (1::'a) \\<and> second b = (1::'b)\n                            then b else 1) =\n                 Abs_OrdSum (1::'a, ba);\n         snd (Rep_OrdSum b) \\<noteq> (1::'b);\n         fst (Rep_OrdSum a) \\<noteq> (1::'a);\n         snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\nA total of 13 subgoals...", "apply (unfold second_def first_def)"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            Abs_OrdSum (1::'a, 1::'b) =\n                            Abs_OrdSum (1::'a, b)\n 2. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 5. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 6. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 7. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a);\n        snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 8. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 9. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                    snd (Rep_OrdSum b) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b); fst (Rep_OrdSum a) = (1::'a);\n        fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum b)) =\n                            Abs_OrdSum (1::'a, ba)\n 10. \\<And>a b ba.\n        \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b) \\<and>\n                     snd (Rep_OrdSum b) = (1::'b)\n                  then Abs_OrdSum\n                        (fst (Rep_OrdSum a) r\\<rightarrow>\n                         fst (Rep_OrdSum b),\n                         1::'b)\n                  else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                          fst (Rep_OrdSum b) = (1::'a)\n                       then Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) r\\<rightarrow>\n                              snd (Rep_OrdSum b))\n                       else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                               snd (Rep_OrdSum b) = (1::'b)\n                            then b else 1) =\n                 Abs_OrdSum (1::'a, ba);\n         snd (Rep_OrdSum b) \\<noteq> (1::'b);\n         fst (Rep_OrdSum a) \\<noteq> (1::'a);\n         snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\nA total of 13 subgoals...", "apply (simp_all add: second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            Abs_OrdSum (1::'a, 1::'b) =\n                            Abs_OrdSum (1::'a, b)\n 2. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, ba) = 1;\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 5. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 6. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (1::'a,\n                  snd (Rep_OrdSum a) r\\<rightarrow> snd (Rep_OrdSum b)) =\n                Abs_OrdSum (1::'a, ba);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b); fst (Rep_OrdSum a) = (1::'a);\n        fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum b)) =\n                            Abs_OrdSum (1::'a, ba)\n 7. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, ba) = 1;\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1", "apply (case_tac \"snd (Rep_OrdSum a) = (1::'b)\")"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) = (1::'a); snd (Rep_OrdSum a) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            Abs_OrdSum (1::'a, 1::'b) =\n                            Abs_OrdSum (1::'a, b)\n 2. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) = (1::'a);\n        snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            Abs_OrdSum (1::'a, 1::'b) =\n                            Abs_OrdSum (1::'a, b)\n 3. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 5. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, ba) = 1;\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 6. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 7. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (1::'a,\n                  snd (Rep_OrdSum a) r\\<rightarrow> snd (Rep_OrdSum b)) =\n                Abs_OrdSum (1::'a, ba);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b); fst (Rep_OrdSum a) = (1::'a);\n        fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum b)) =\n                            Abs_OrdSum (1::'a, ba)\n 8. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, ba) = 1;\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1", "apply simp_all"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, 1::'b) = Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) = (1::'a); snd (Rep_OrdSum a) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            Abs_OrdSum (1::'a, ba) = Abs_OrdSum (1::'a, b)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, 1::'b) = Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) = (1::'a);\n        snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            Abs_OrdSum (1::'a, ba) = Abs_OrdSum (1::'a, b)\n 3. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 5. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, ba) = 1;\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1\n 6. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 7. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (1::'a,\n                  snd (Rep_OrdSum a) r\\<rightarrow> snd (Rep_OrdSum b)) =\n                Abs_OrdSum (1::'a, ba);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b); fst (Rep_OrdSum a) = (1::'a);\n        fst (Rep_OrdSum b) = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (1::'a,\n                              snd (Rep_OrdSum a) l\\<rightarrow>\n                              snd (Rep_OrdSum b)) =\n                            Abs_OrdSum (1::'a, ba)\n 8. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum (1::'a, ba) = 1;\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum b) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Abs_OrdSum (1::'a, b) = 1", "apply auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)", "apply (case_tac \"snd (Rep_OrdSum a) = (1::'b)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a);\n        snd (Rep_OrdSum a) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 2. \\<And>a b ba.\n       \\<lbrakk>(if snd (Rep_OrdSum a) = (1::'b)\n                 then Abs_OrdSum\n                       (fst (Rep_OrdSum a) r\\<rightarrow>\n                        fst (Rep_OrdSum b),\n                        1::'b)\n                 else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                         fst (Rep_OrdSum b) = (1::'a)\n                      then Abs_OrdSum\n                            (1::'a,\n                             snd (Rep_OrdSum a) r\\<rightarrow>\n                             snd (Rep_OrdSum b))\n                      else if fst (Rep_OrdSum a) = (1::'a) \\<and>\n                              snd (Rep_OrdSum b) = (1::'b)\n                           then b else 1) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) = (1::'a); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a);\n        snd (Rep_OrdSum a) \\<noteq> (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba. b = Abs_OrdSum (1::'a, ba)\n 3. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 4. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)", "apply (rule_tac x = 1 in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum b),\n                           1::'b) =\n                         Abs_OrdSum (1::'a, 1::'b)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)", "apply (rule Rep_OrdSum_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) l\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)", "apply (simp_all add: second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum b) =\n                         (1::'a)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)", "apply (subgoal_tac \"Rep_OrdSum (Abs_OrdSum (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b), 1::'b)) = Rep_OrdSum (Abs_OrdSum (1::'a, ba))\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b);\n        Rep_OrdSum\n         (Abs_OrdSum\n           (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b), 1::'b)) =\n        Rep_OrdSum (Abs_OrdSum (1::'a, ba))\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum b) =\n                         (1::'a)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) r\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, ba))\n 3. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum a) = (1::'b); snd (Rep_OrdSum b) = (1::'b);\n        Rep_OrdSum\n         (Abs_OrdSum\n           (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b), 1::'b)) =\n        Rep_OrdSum (Abs_OrdSum (1::'a, ba));\n        True\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum b) =\n                         (1::'a)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) r\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, ba))\n 3. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)", "apply (simp add: second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        snd (Rep_OrdSum a) = (1::'b); snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b) =\n        (1::'a)\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum b) =\n                         (1::'a)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) r\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, ba))\n 3. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)", "apply (simp add: left_lesseq [THEN sym] right_lesseq [THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) r\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, ba))\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba.\n                            Abs_OrdSum\n                             (fst (Rep_OrdSum a) l\\<rightarrow>\n                              fst (Rep_OrdSum b),\n                              1::'b) =\n                            Abs_OrdSum (1::'a, ba)", "apply (rule_tac x = 1 in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Abs_OrdSum\n                          (fst (Rep_OrdSum a) l\\<rightarrow>\n                           fst (Rep_OrdSum b),\n                           1::'b) =\n                         Abs_OrdSum (1::'a, 1::'b)", "apply (rule Rep_OrdSum_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) l\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, 1::'b))", "apply (simp_all add: second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum b) =\n                         (1::'a)", "apply (subgoal_tac \"Rep_OrdSum (Abs_OrdSum (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b), 1::'b)) = Rep_OrdSum (Abs_OrdSum (1::'a, ba))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b);\n        Rep_OrdSum\n         (Abs_OrdSum\n           (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b), 1::'b)) =\n        Rep_OrdSum (Abs_OrdSum (1::'a, ba))\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum b) =\n                         (1::'a)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) r\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, ba))", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b);\n        Rep_OrdSum\n         (Abs_OrdSum\n           (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b), 1::'b)) =\n        Rep_OrdSum (Abs_OrdSum (1::'a, ba));\n        True\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum b) =\n                         (1::'a)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) r\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, ba))", "apply (simp add: second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b);\n        fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b) =\n        (1::'a)\\<rbrakk>\n       \\<Longrightarrow> fst (Rep_OrdSum a) l\\<rightarrow>\n                         fst (Rep_OrdSum b) =\n                         (1::'a)\n 2. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) r\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, ba))", "apply (simp add: left_lesseq [THEN sym] right_lesseq [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b ba.\n       \\<lbrakk>Abs_OrdSum\n                 (fst (Rep_OrdSum a) r\\<rightarrow> fst (Rep_OrdSum b),\n                  1::'b) =\n                Abs_OrdSum (1::'a, ba);\n        fst (Rep_OrdSum a) \\<noteq> (1::'a);\n        fst (Rep_OrdSum b) \\<noteq> (1::'a); snd (Rep_OrdSum a) = (1::'b);\n        snd (Rep_OrdSum b) = (1::'b)\\<rbrakk>\n       \\<Longrightarrow> Rep_OrdSum\n                          (Abs_OrdSum\n                            (fst (Rep_OrdSum a) r\\<rightarrow>\n                             fst (Rep_OrdSum b),\n                             1::'b)) =\n                         Rep_OrdSum (Abs_OrdSum (1::'a, ba))", "by simp"], ["", "class linear_pseudo_hoop_algebra = pseudo_hoop_algebra + linorder"], ["", "instantiation \"OrdSum\" :: (linear_pseudo_hoop_algebra, linear_pseudo_hoop_algebra) linear_pseudo_hoop_algebra\nbegin"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(('a, 'b) OrdSum, linear_pseudo_hoop_algebra_class)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. x \\<le> y \\<or> y \\<le> x", "fix x y::\"('a, 'b) OrdSum\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. x \\<le> y \\<or> y \\<le> x", "show \"x \\<le> y \\<or> y \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<or> y \\<le> x", "apply (simp add: order_OrdSum_def impl_OrdSum_def one_OrdSum_def second_def first_def Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (fst (Rep_OrdSum y) = (1::'a) \\<longrightarrow>\n     snd (Rep_OrdSum x) \\<noteq> (1::'b)) \\<longrightarrow>\n    (snd (Rep_OrdSum x) = (1::'b) \\<and>\n     snd (Rep_OrdSum y) = (1::'b) \\<longrightarrow>\n     (fst (Rep_OrdSum y) = (1::'a) \\<longrightarrow>\n      fst (Rep_OrdSum x) \\<noteq> (1::'a)) \\<longrightarrow>\n     Abs_OrdSum\n      (fst (Rep_OrdSum x) l\\<rightarrow> fst (Rep_OrdSum y), 1::'b) =\n     Abs_OrdSum (1::'a, 1::'b) \\<or>\n     Abs_OrdSum\n      (fst (Rep_OrdSum y) l\\<rightarrow> fst (Rep_OrdSum x), 1::'b) =\n     Abs_OrdSum (1::'a, 1::'b)) \\<and>\n    ((snd (Rep_OrdSum x) = (1::'b) \\<longrightarrow>\n      snd (Rep_OrdSum y) \\<noteq> (1::'b)) \\<longrightarrow>\n     (fst (Rep_OrdSum y) = (1::'a) \\<and>\n      fst (Rep_OrdSum x) = (1::'a) \\<longrightarrow>\n      Abs_OrdSum\n       (1::'a, snd (Rep_OrdSum x) l\\<rightarrow> snd (Rep_OrdSum y)) =\n      Abs_OrdSum (1::'a, 1::'b) \\<or>\n      Abs_OrdSum\n       (1::'a, snd (Rep_OrdSum y) l\\<rightarrow> snd (Rep_OrdSum x)) =\n      Abs_OrdSum (1::'a, 1::'b)) \\<and>\n     ((fst (Rep_OrdSum y) = (1::'a) \\<longrightarrow>\n       fst (Rep_OrdSum x) \\<noteq> (1::'a)) \\<longrightarrow>\n      snd (Rep_OrdSum y) = (1::'b) \\<and>\n      snd (Rep_OrdSum x) = (1::'b) \\<longrightarrow>\n      Abs_OrdSum\n       (fst (Rep_OrdSum x) l\\<rightarrow> fst (Rep_OrdSum y), 1::'b) =\n      Abs_OrdSum (1::'a, 1::'b) \\<or>\n      Abs_OrdSum\n       (fst (Rep_OrdSum y) l\\<rightarrow> fst (Rep_OrdSum x), 1::'b) =\n      Abs_OrdSum (1::'a, 1::'b)))", "apply (cut_tac x = \"fst (Rep_OrdSum x)\" and y = \"fst (Rep_OrdSum y)\" in linear)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Rep_OrdSum x) \\<le> fst (Rep_OrdSum y) \\<or>\n    fst (Rep_OrdSum y) \\<le> fst (Rep_OrdSum x) \\<Longrightarrow>\n    (fst (Rep_OrdSum y) = (1::'a) \\<longrightarrow>\n     snd (Rep_OrdSum x) \\<noteq> (1::'b)) \\<longrightarrow>\n    (snd (Rep_OrdSum x) = (1::'b) \\<and>\n     snd (Rep_OrdSum y) = (1::'b) \\<longrightarrow>\n     (fst (Rep_OrdSum y) = (1::'a) \\<longrightarrow>\n      fst (Rep_OrdSum x) \\<noteq> (1::'a)) \\<longrightarrow>\n     Abs_OrdSum\n      (fst (Rep_OrdSum x) l\\<rightarrow> fst (Rep_OrdSum y), 1::'b) =\n     Abs_OrdSum (1::'a, 1::'b) \\<or>\n     Abs_OrdSum\n      (fst (Rep_OrdSum y) l\\<rightarrow> fst (Rep_OrdSum x), 1::'b) =\n     Abs_OrdSum (1::'a, 1::'b)) \\<and>\n    ((snd (Rep_OrdSum x) = (1::'b) \\<longrightarrow>\n      snd (Rep_OrdSum y) \\<noteq> (1::'b)) \\<longrightarrow>\n     (fst (Rep_OrdSum y) = (1::'a) \\<and>\n      fst (Rep_OrdSum x) = (1::'a) \\<longrightarrow>\n      Abs_OrdSum\n       (1::'a, snd (Rep_OrdSum x) l\\<rightarrow> snd (Rep_OrdSum y)) =\n      Abs_OrdSum (1::'a, 1::'b) \\<or>\n      Abs_OrdSum\n       (1::'a, snd (Rep_OrdSum y) l\\<rightarrow> snd (Rep_OrdSum x)) =\n      Abs_OrdSum (1::'a, 1::'b)) \\<and>\n     ((fst (Rep_OrdSum y) = (1::'a) \\<longrightarrow>\n       fst (Rep_OrdSum x) \\<noteq> (1::'a)) \\<longrightarrow>\n      snd (Rep_OrdSum y) = (1::'b) \\<and>\n      snd (Rep_OrdSum x) = (1::'b) \\<longrightarrow>\n      Abs_OrdSum\n       (fst (Rep_OrdSum x) l\\<rightarrow> fst (Rep_OrdSum y), 1::'b) =\n      Abs_OrdSum (1::'a, 1::'b) \\<or>\n      Abs_OrdSum\n       (fst (Rep_OrdSum y) l\\<rightarrow> fst (Rep_OrdSum x), 1::'b) =\n      Abs_OrdSum (1::'a, 1::'b)))", "apply (cut_tac x = \"snd (Rep_OrdSum x)\" and y = \"snd (Rep_OrdSum y)\" in linear)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fst (Rep_OrdSum x) \\<le> fst (Rep_OrdSum y) \\<or>\n             fst (Rep_OrdSum y) \\<le> fst (Rep_OrdSum x);\n     snd (Rep_OrdSum x) \\<le> snd (Rep_OrdSum y) \\<or>\n     snd (Rep_OrdSum y) \\<le> snd (Rep_OrdSum x)\\<rbrakk>\n    \\<Longrightarrow> (fst (Rep_OrdSum y) = (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum x) \\<noteq>\n                       (1::'b)) \\<longrightarrow>\n                      (snd (Rep_OrdSum x) = (1::'b) \\<and>\n                       snd (Rep_OrdSum y) = (1::'b) \\<longrightarrow>\n                       (fst (Rep_OrdSum y) = (1::'a) \\<longrightarrow>\n                        fst (Rep_OrdSum x) \\<noteq>\n                        (1::'a)) \\<longrightarrow>\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum x) l\\<rightarrow>\n                         fst (Rep_OrdSum y),\n                         1::'b) =\n                       Abs_OrdSum (1::'a, 1::'b) \\<or>\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum y) l\\<rightarrow>\n                         fst (Rep_OrdSum x),\n                         1::'b) =\n                       Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                      ((snd (Rep_OrdSum x) = (1::'b) \\<longrightarrow>\n                        snd (Rep_OrdSum y) \\<noteq>\n                        (1::'b)) \\<longrightarrow>\n                       (fst (Rep_OrdSum y) = (1::'a) \\<and>\n                        fst (Rep_OrdSum x) = (1::'a) \\<longrightarrow>\n                        Abs_OrdSum\n                         (1::'a,\n                          snd (Rep_OrdSum x) l\\<rightarrow>\n                          snd (Rep_OrdSum y)) =\n                        Abs_OrdSum (1::'a, 1::'b) \\<or>\n                        Abs_OrdSum\n                         (1::'a,\n                          snd (Rep_OrdSum y) l\\<rightarrow>\n                          snd (Rep_OrdSum x)) =\n                        Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                       ((fst (Rep_OrdSum y) = (1::'a) \\<longrightarrow>\n                         fst (Rep_OrdSum x) \\<noteq>\n                         (1::'a)) \\<longrightarrow>\n                        snd (Rep_OrdSum y) = (1::'b) \\<and>\n                        snd (Rep_OrdSum x) = (1::'b) \\<longrightarrow>\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum x) l\\<rightarrow>\n                          fst (Rep_OrdSum y),\n                          1::'b) =\n                        Abs_OrdSum (1::'a, 1::'b) \\<or>\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum y) l\\<rightarrow>\n                          fst (Rep_OrdSum x),\n                          1::'b) =\n                        Abs_OrdSum (1::'a, 1::'b)))", "apply (simp add: left_lesseq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fst (Rep_OrdSum x) l\\<rightarrow> fst (Rep_OrdSum y) =\n             (1::'a) \\<or>\n             fst (Rep_OrdSum y) l\\<rightarrow> fst (Rep_OrdSum x) = (1::'a);\n     snd (Rep_OrdSum x) l\\<rightarrow> snd (Rep_OrdSum y) = (1::'b) \\<or>\n     snd (Rep_OrdSum y) l\\<rightarrow> snd (Rep_OrdSum x) = (1::'b)\\<rbrakk>\n    \\<Longrightarrow> (fst (Rep_OrdSum y) = (1::'a) \\<longrightarrow>\n                       snd (Rep_OrdSum x) \\<noteq>\n                       (1::'b)) \\<longrightarrow>\n                      (snd (Rep_OrdSum x) = (1::'b) \\<and>\n                       snd (Rep_OrdSum y) = (1::'b) \\<longrightarrow>\n                       (fst (Rep_OrdSum y) = (1::'a) \\<longrightarrow>\n                        fst (Rep_OrdSum x) \\<noteq>\n                        (1::'a)) \\<longrightarrow>\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum x) l\\<rightarrow>\n                         fst (Rep_OrdSum y),\n                         1::'b) =\n                       Abs_OrdSum (1::'a, 1::'b) \\<or>\n                       Abs_OrdSum\n                        (fst (Rep_OrdSum y) l\\<rightarrow>\n                         fst (Rep_OrdSum x),\n                         1::'b) =\n                       Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                      ((snd (Rep_OrdSum x) = (1::'b) \\<longrightarrow>\n                        snd (Rep_OrdSum y) \\<noteq>\n                        (1::'b)) \\<longrightarrow>\n                       (fst (Rep_OrdSum y) = (1::'a) \\<and>\n                        fst (Rep_OrdSum x) = (1::'a) \\<longrightarrow>\n                        Abs_OrdSum\n                         (1::'a,\n                          snd (Rep_OrdSum x) l\\<rightarrow>\n                          snd (Rep_OrdSum y)) =\n                        Abs_OrdSum (1::'a, 1::'b) \\<or>\n                        Abs_OrdSum\n                         (1::'a,\n                          snd (Rep_OrdSum y) l\\<rightarrow>\n                          snd (Rep_OrdSum x)) =\n                        Abs_OrdSum (1::'a, 1::'b)) \\<and>\n                       ((fst (Rep_OrdSum y) = (1::'a) \\<longrightarrow>\n                         fst (Rep_OrdSum x) \\<noteq>\n                         (1::'a)) \\<longrightarrow>\n                        snd (Rep_OrdSum y) = (1::'b) \\<and>\n                        snd (Rep_OrdSum x) = (1::'b) \\<longrightarrow>\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum x) l\\<rightarrow>\n                          fst (Rep_OrdSum y),\n                          1::'b) =\n                        Abs_OrdSum (1::'a, 1::'b) \\<or>\n                        Abs_OrdSum\n                         (fst (Rep_OrdSum y) l\\<rightarrow>\n                          fst (Rep_OrdSum x),\n                          1::'b) =\n                        Abs_OrdSum (1::'a, 1::'b)))", "by auto [1]"], ["proof (state)\nthis:\n  x \\<le> y \\<or> y \\<le> x\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "instantiation bool:: pseudo_hoop_algebra\nbegin"], ["", "definition impl_bool_def:\n  \"a l\\<rightarrow> b = (a \\<longrightarrow> b)\""], ["", "definition impr_bool_def:\n  \"a r\\<rightarrow> b = (a \\<longrightarrow> b)\""], ["", "definition one_bool_def:\n  \"1 = True\""], ["", "definition times_bool_def:\n  \"a * b = (a \\<and> b)\""], ["", "lemma inf_bool_def: \"(a :: bool) \\<sqinter> b = (a l\\<rightarrow> b) * a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sqinter> b = (a l\\<rightarrow> b) * a", "by (auto simp add: times_bool_def impl_bool_def)"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(bool, pseudo_hoop_algebra_class)", "apply intro_classes"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>a b. a \\<sqinter> b = (a l\\<rightarrow> b) * a\n 2. \\<And>a b. (a < b) = (a \\<le> b \\<and> \\<not> b \\<le> a)\n 3. \\<And>a. 1 * a = a\n 4. \\<And>a. a * 1 = a\n 5. \\<And>a. a l\\<rightarrow> a = 1\n 6. \\<And>a b. (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 7. \\<And>a b c.\n       a * b l\\<rightarrow> c = a l\\<rightarrow> b l\\<rightarrow> c\n 8. \\<And>a b. (a \\<le> b) = (a l\\<rightarrow> b = 1)\n 9. \\<And>a b. a \\<sqinter> b = a * (a r\\<rightarrow> b)\n 10. \\<And>a. a r\\<rightarrow> a = 1\nA total of 13 subgoals...", "apply (simp_all add: impl_bool_def impr_bool_def one_bool_def times_bool_def le_bool_def less_bool_def inf_bool_def)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>a b. (a \\<and> b) = ((a \\<longrightarrow> b) \\<and> a)\n 2. \\<And>a b.\n       (\\<not> a \\<and> b) =\n       ((a \\<longrightarrow> b) \\<and> b \\<and> \\<not> a)\n 3. \\<And>a b.\n       ((a \\<longrightarrow> b) \\<and> a) =\n       ((b \\<longrightarrow> a) \\<and> b)\n 4. \\<And>a b c.\n       (a \\<and> b \\<longrightarrow> c) =\n       (a \\<longrightarrow> b \\<longrightarrow> c)\n 5. \\<And>a b. (a \\<and> b) = (a \\<and> (a \\<longrightarrow> b))\n 6. \\<And>a b.\n       (a \\<and> (a \\<longrightarrow> b)) =\n       (b \\<and> (b \\<longrightarrow> a))\n 7. \\<And>a b c.\n       (a \\<and> b \\<longrightarrow> c) =\n       (b \\<longrightarrow> a \\<longrightarrow> c)\n 8. \\<And>a b.\n       ((a \\<longrightarrow> b) \\<and> a) =\n       (a \\<and> (a \\<longrightarrow> b))", "by auto"], ["", "end"], ["", "context cancel_pseudo_hoop_algebra begin"], ["", "end"], ["", "lemma \"\\<not> class.cancel_pseudo_hoop_algebra (*) (\\<sqinter>)  (l\\<rightarrow>) (\\<le>) (<) (1:: bool) (r\\<rightarrow>) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> class.cancel_pseudo_hoop_algebra (*) (\\<sqinter>)\n            (l\\<rightarrow>) (\\<le>) (<) 1 (r\\<rightarrow>)", "apply (unfold  class.cancel_pseudo_hoop_algebra_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n             (\\<le>) (<) 1 (r\\<rightarrow>) \\<and>\n            class.cancel_pseudo_hoop_algebra_axioms (*))", "apply (unfold  class.cancel_pseudo_hoop_algebra_axioms_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n             (\\<le>) (<) 1 (r\\<rightarrow>) \\<and>\n            (\\<forall>a b c. a * b = a * c \\<longrightarrow> b = c) \\<and>\n            (\\<forall>b a c. b * a = c * a \\<longrightarrow> b = c))", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n              (\\<le>) (<) 1 (r\\<rightarrow>);\n     \\<forall>a b c. a * b = a * c \\<longrightarrow> b = c;\n     \\<forall>b a c. b * a = c * a \\<longrightarrow> b = c\\<rbrakk>\n    \\<Longrightarrow> False", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a b c. a * b = a * c \\<longrightarrow> b = c;\n     \\<forall>b a c. b * a = c * a \\<longrightarrow> b = c; True\\<rbrakk>\n    \\<Longrightarrow> False", "apply (drule_tac x = \"False\" in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>b a c. b * a = c * a \\<longrightarrow> b = c; True;\n     \\<forall>b c. False * b = False * c \\<longrightarrow> b = c\\<rbrakk>\n    \\<Longrightarrow> False", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>True;\n     \\<forall>b c. False * b = False * c \\<longrightarrow> b = c;\n     True\\<rbrakk>\n    \\<Longrightarrow> False", "apply (drule_tac x = \"True\" in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>True; True;\n     \\<forall>c.\n        False * True = False * c \\<longrightarrow> True = c\\<rbrakk>\n    \\<Longrightarrow> False", "apply (drule_tac x = \"False\" in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>True; True;\n     False * True = False * False \\<longrightarrow> True = False\\<rbrakk>\n    \\<Longrightarrow> False", "by (simp add: times_bool_def)"], ["", "context pseudo_hoop_algebra begin"], ["", "lemma classorder: \"class.order (\\<le>) (<)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.order (\\<le>) (<)", "proof"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma impl_OrdSum_first: \"Abs_OrdSum (x, 1) l\\<rightarrow> Abs_OrdSum (y, 1) = Abs_OrdSum (x l\\<rightarrow> y, 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_OrdSum (x, 1::'b) l\\<rightarrow> Abs_OrdSum (y, 1::'b) =\n    Abs_OrdSum (x l\\<rightarrow> y, 1::'b)", "by (simp add: impl_OrdSum_def first_def second_def  Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["", "lemma impl_OrdSum_second: \"Abs_OrdSum (1, x) l\\<rightarrow> Abs_OrdSum (1, y) = Abs_OrdSum (1, x l\\<rightarrow> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_OrdSum (1::'a, x) l\\<rightarrow> Abs_OrdSum (1::'a, y) =\n    Abs_OrdSum (1::'a, x l\\<rightarrow> y)", "by (simp add: impl_OrdSum_def first_def second_def  Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["", "lemma impl_OrdSum_first_second: \"x \\<noteq> 1 \\<Longrightarrow> Abs_OrdSum (x, 1) l\\<rightarrow> Abs_OrdSum (1, y) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> (1::'a) \\<Longrightarrow>\n    Abs_OrdSum (x, 1::'b) l\\<rightarrow> Abs_OrdSum (1::'a, y) = 1", "by (simp add: one_OrdSum_def impl_OrdSum_def first_def second_def  Abs_OrdSum_inverse Rep_OrdSum_inverse)"], ["", "lemma Abs_OrdSum_bijective: \"x \\<in> OrdSum \\<Longrightarrow> y \\<in> OrdSum \\<Longrightarrow> (Abs_OrdSum x = Abs_OrdSum y) = (x = y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> OrdSum; y \\<in> OrdSum\\<rbrakk>\n    \\<Longrightarrow> (Abs_OrdSum x = Abs_OrdSum y) = (x = y)", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> OrdSum; y \\<in> OrdSum;\n     Abs_OrdSum x = Abs_OrdSum y\\<rbrakk>\n    \\<Longrightarrow> x = y", "apply (subgoal_tac  \"Rep_OrdSum (Abs_OrdSum x) = Rep_OrdSum (Abs_OrdSum y)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> OrdSum; y \\<in> OrdSum; Abs_OrdSum x = Abs_OrdSum y;\n     Rep_OrdSum (Abs_OrdSum x) = Rep_OrdSum (Abs_OrdSum y)\\<rbrakk>\n    \\<Longrightarrow> x = y\n 2. \\<lbrakk>x \\<in> OrdSum; y \\<in> OrdSum;\n     Abs_OrdSum x = Abs_OrdSum y\\<rbrakk>\n    \\<Longrightarrow> Rep_OrdSum (Abs_OrdSum x) = Rep_OrdSum (Abs_OrdSum y)", "apply (unfold Abs_OrdSum_inverse) [1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> OrdSum; y \\<in> OrdSum; Abs_OrdSum x = Abs_OrdSum y;\n     x = y\\<rbrakk>\n    \\<Longrightarrow> x = y\n 2. \\<lbrakk>x \\<in> OrdSum; y \\<in> OrdSum;\n     Abs_OrdSum x = Abs_OrdSum y\\<rbrakk>\n    \\<Longrightarrow> Rep_OrdSum (Abs_OrdSum x) = Rep_OrdSum (Abs_OrdSum y)", "by simp_all"], ["", "context pseudo_hoop_algebra begin"], ["", "end"], ["", "context linear_pseudo_hoop_algebra begin"], ["", "end"], ["", "context basic_pseudo_hoop_algebra begin"], ["", "end"], ["", "lemma \"class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>) (<) (1::'a::pseudo_hoop_algebra) (r\\<rightarrow>)\n          \\<Longrightarrow> \\<not> (class.linear_pseudo_hoop_algebra (\\<le>) (<)  (*) (\\<sqinter>) (l\\<rightarrow>) (1::'a) (r\\<rightarrow>))\n          \\<Longrightarrow> \\<not> class.basic_pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>) (<) (1::('a, bool) OrdSum) (r\\<rightarrow>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n              (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n     \\<not> class.linear_pseudo_hoop_algebra (\\<le>) (<) (*) (\\<sqinter>)\n             (l\\<rightarrow>) (1::'a) (r\\<rightarrow>)\\<rbrakk>\n    \\<Longrightarrow> \\<not> class.basic_pseudo_hoop_algebra (*)\n                              (\\<sqinter>) (l\\<rightarrow>) (\\<le>) (<) 1\n                              (r\\<rightarrow>)", "apply (unfold class.linear_pseudo_hoop_algebra_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n              (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n     \\<not> (class.linorder (\\<le>) (<) \\<and>\n             class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n              (\\<le>) (<) (1::'a) (r\\<rightarrow>))\\<rbrakk>\n    \\<Longrightarrow> \\<not> class.basic_pseudo_hoop_algebra (*)\n                              (\\<sqinter>) (l\\<rightarrow>) (\\<le>) (<) 1\n                              (r\\<rightarrow>)", "apply (unfold class.linorder_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n              (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n     \\<not> ((class.order (\\<le>) (<) \\<and>\n              class.linorder_axioms (\\<le>)) \\<and>\n             class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n              (\\<le>) (<) (1::'a) (r\\<rightarrow>))\\<rbrakk>\n    \\<Longrightarrow> \\<not> class.basic_pseudo_hoop_algebra (*)\n                              (\\<sqinter>) (l\\<rightarrow>) (\\<le>) (<) 1\n                              (r\\<rightarrow>)", "apply (unfold class.linorder_axioms_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n              (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n     \\<not> ((class.order (\\<le>) (<) \\<and>\n              (\\<forall>x y. x \\<le> y \\<or> y \\<le> x)) \\<and>\n             class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n              (\\<le>) (<) (1::'a) (r\\<rightarrow>))\\<rbrakk>\n    \\<Longrightarrow> \\<not> class.basic_pseudo_hoop_algebra (*)\n                              (\\<sqinter>) (l\\<rightarrow>) (\\<le>) (<) 1\n                              (r\\<rightarrow>)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n              (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n     class.basic_pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n      (\\<le>) (<) 1 (r\\<rightarrow>);\n     \\<not> False\\<rbrakk>\n    \\<Longrightarrow> class.order (\\<le>) (<)\n 2. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        class.basic_pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n         (\\<le>) (<) 1 (r\\<rightarrow>);\n        \\<not> False; \\<not> y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y", "apply (rule classorder)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        class.basic_pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n         (\\<le>) (<) 1 (r\\<rightarrow>);\n        \\<not> False; \\<not> y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y", "apply (unfold class.basic_pseudo_hoop_algebra_def) [1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>) \\<and>\n        class.basic_pseudo_hoop_algebra_axioms (l\\<rightarrow>) (\\<le>)\n         (r\\<rightarrow>);\n        \\<not> False; \\<not> y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>) \\<and>\n        class.basic_pseudo_hoop_algebra_axioms (l\\<rightarrow>) (\\<le>)\n         (r\\<rightarrow>);\n        \\<not> y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y", "apply (unfold class.basic_pseudo_hoop_algebra_axioms_def) [1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>) \\<and>\n        (\\<forall>a b c.\n            (a l\\<rightarrow> b) l\\<rightarrow> c\n            \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow>\n                  c) \\<and>\n        (\\<forall>a b c.\n            (a r\\<rightarrow> b) r\\<rightarrow> c\n            \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c);\n        \\<not> y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow>\n                 c\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y", "apply (subgoal_tac \"(Abs_OrdSum (x, 1) l\\<rightarrow> Abs_OrdSum (y, 1)) l\\<rightarrow> Abs_OrdSum (1, False) \\<le> \n         ((Abs_OrdSum (y, 1) l\\<rightarrow> Abs_OrdSum (x, 1)) l\\<rightarrow> Abs_OrdSum (1, False)) l\\<rightarrow> Abs_OrdSum (1, False)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c;\n        (Abs_OrdSum (x, 1) l\\<rightarrow> Abs_OrdSum (y, 1)) l\\<rightarrow>\n        Abs_OrdSum (1::'a, False)\n        \\<le> ((Abs_OrdSum (y, 1) l\\<rightarrow>\n                Abs_OrdSum (x, 1)) l\\<rightarrow>\n               Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n              Abs_OrdSum (1::'a, False)\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y\n 2. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow>\n                 c\\<rbrakk>\n       \\<Longrightarrow> (Abs_OrdSum (x, 1) l\\<rightarrow>\n                          Abs_OrdSum (y, 1)) l\\<rightarrow>\n                         Abs_OrdSum (1::'a, False)\n                         \\<le> ((Abs_OrdSum (y, 1) l\\<rightarrow>\n                                 Abs_OrdSum (x, 1)) l\\<rightarrow>\n                                Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n                               Abs_OrdSum (1::'a, False)", "apply (unfold impl_OrdSum_first) [1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c;\n        Abs_OrdSum (x l\\<rightarrow> y, 1) l\\<rightarrow>\n        Abs_OrdSum (1::'a, False)\n        \\<le> (Abs_OrdSum (y l\\<rightarrow> x, 1) l\\<rightarrow>\n               Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n              Abs_OrdSum (1::'a, False)\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y\n 2. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow>\n                 c\\<rbrakk>\n       \\<Longrightarrow> (Abs_OrdSum (x, 1) l\\<rightarrow>\n                          Abs_OrdSum (y, 1)) l\\<rightarrow>\n                         Abs_OrdSum (1::'a, False)\n                         \\<le> ((Abs_OrdSum (y, 1) l\\<rightarrow>\n                                 Abs_OrdSum (x, 1)) l\\<rightarrow>\n                                Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n                               Abs_OrdSum (1::'a, False)", "apply (case_tac \"x l\\<rightarrow> y \\<noteq> 1 \\<and> y l\\<rightarrow> x \\<noteq> 1\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c;\n        Abs_OrdSum (x l\\<rightarrow> y, 1) l\\<rightarrow>\n        Abs_OrdSum (1::'a, False)\n        \\<le> (Abs_OrdSum (y l\\<rightarrow> x, 1) l\\<rightarrow>\n               Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n              Abs_OrdSum (1::'a, False);\n        x l\\<rightarrow> y \\<noteq> (1::'a) \\<and>\n        y l\\<rightarrow> x \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y\n 2. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c;\n        Abs_OrdSum (x l\\<rightarrow> y, 1) l\\<rightarrow>\n        Abs_OrdSum (1::'a, False)\n        \\<le> (Abs_OrdSum (y l\\<rightarrow> x, 1) l\\<rightarrow>\n               Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n              Abs_OrdSum (1::'a, False);\n        \\<not> (x l\\<rightarrow> y \\<noteq> (1::'a) \\<and>\n                y l\\<rightarrow> x \\<noteq> (1::'a))\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y\n 3. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow>\n                 c\\<rbrakk>\n       \\<Longrightarrow> (Abs_OrdSum (x, 1) l\\<rightarrow>\n                          Abs_OrdSum (y, 1)) l\\<rightarrow>\n                         Abs_OrdSum (1::'a, False)\n                         \\<le> ((Abs_OrdSum (y, 1) l\\<rightarrow>\n                                 Abs_OrdSum (x, 1)) l\\<rightarrow>\n                                Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n                               Abs_OrdSum (1::'a, False)", "apply (simp add: impl_OrdSum_first_second)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c;\n        1 \\<le> Abs_OrdSum (1::'a, False);\n        x l\\<rightarrow> y \\<noteq> (1::'a) \\<and>\n        y l\\<rightarrow> x \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y\n 2. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c;\n        Abs_OrdSum (x l\\<rightarrow> y, 1) l\\<rightarrow>\n        Abs_OrdSum (1::'a, False)\n        \\<le> (Abs_OrdSum (y l\\<rightarrow> x, 1) l\\<rightarrow>\n               Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n              Abs_OrdSum (1::'a, False);\n        \\<not> (x l\\<rightarrow> y \\<noteq> (1::'a) \\<and>\n                y l\\<rightarrow> x \\<noteq> (1::'a))\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y\n 3. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow>\n                 c\\<rbrakk>\n       \\<Longrightarrow> (Abs_OrdSum (x, 1) l\\<rightarrow>\n                          Abs_OrdSum (y, 1)) l\\<rightarrow>\n                         Abs_OrdSum (1::'a, False)\n                         \\<le> ((Abs_OrdSum (y, 1) l\\<rightarrow>\n                                 Abs_OrdSum (x, 1)) l\\<rightarrow>\n                                Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n                               Abs_OrdSum (1::'a, False)", "apply (unfold order_OrdSum_def one_OrdSum_def one_bool_def impl_OrdSum_second impl_bool_def ) [1]"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n         (\\<lambda>a b. a l\\<rightarrow> b = Abs_OrdSum (1::'a, True)) (<)\n         (Abs_OrdSum (1::'a, True)) (r\\<rightarrow>);\n        \\<forall>a b c.\n           ((a l\\<rightarrow> b) l\\<rightarrow> c) l\\<rightarrow>\n           ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c =\n           Abs_OrdSum (1::'a, True);\n        \\<forall>a b c.\n           ((a r\\<rightarrow> b) r\\<rightarrow> c) l\\<rightarrow>\n           ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c =\n           Abs_OrdSum (1::'a, True);\n        Abs_OrdSum (1::'a, True \\<longrightarrow> False) =\n        Abs_OrdSum (1::'a, True);\n        x l\\<rightarrow> y \\<noteq> (1::'a) \\<and>\n        y l\\<rightarrow> x \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y\n 2. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c;\n        Abs_OrdSum (x l\\<rightarrow> y, 1) l\\<rightarrow>\n        Abs_OrdSum (1::'a, False)\n        \\<le> (Abs_OrdSum (y l\\<rightarrow> x, 1) l\\<rightarrow>\n               Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n              Abs_OrdSum (1::'a, False);\n        \\<not> (x l\\<rightarrow> y \\<noteq> (1::'a) \\<and>\n                y l\\<rightarrow> x \\<noteq> (1::'a))\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y\n 3. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow>\n                 c\\<rbrakk>\n       \\<Longrightarrow> (Abs_OrdSum (x, 1) l\\<rightarrow>\n                          Abs_OrdSum (y, 1)) l\\<rightarrow>\n                         Abs_OrdSum (1::'a, False)\n                         \\<le> ((Abs_OrdSum (y, 1) l\\<rightarrow>\n                                 Abs_OrdSum (x, 1)) l\\<rightarrow>\n                                Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n                               Abs_OrdSum (1::'a, False)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n         (\\<lambda>a b. a l\\<rightarrow> b = Abs_OrdSum (1::'a, True)) (<)\n         (Abs_OrdSum (1::'a, True)) (r\\<rightarrow>);\n        \\<forall>a b c.\n           ((a l\\<rightarrow> b) l\\<rightarrow> c) l\\<rightarrow>\n           ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c =\n           Abs_OrdSum (1::'a, True);\n        \\<forall>a b c.\n           ((a r\\<rightarrow> b) r\\<rightarrow> c) l\\<rightarrow>\n           ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c =\n           Abs_OrdSum (1::'a, True);\n        Abs_OrdSum (1::'a, False) = Abs_OrdSum (1::'a, True);\n        x l\\<rightarrow> y \\<noteq> (1::'a) \\<and>\n        y l\\<rightarrow> x \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y\n 2. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c;\n        Abs_OrdSum (x l\\<rightarrow> y, 1) l\\<rightarrow>\n        Abs_OrdSum (1::'a, False)\n        \\<le> (Abs_OrdSum (y l\\<rightarrow> x, 1) l\\<rightarrow>\n               Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n              Abs_OrdSum (1::'a, False);\n        \\<not> (x l\\<rightarrow> y \\<noteq> (1::'a) \\<and>\n                y l\\<rightarrow> x \\<noteq> (1::'a))\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y\n 3. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow>\n                 c\\<rbrakk>\n       \\<Longrightarrow> (Abs_OrdSum (x, 1) l\\<rightarrow>\n                          Abs_OrdSum (y, 1)) l\\<rightarrow>\n                         Abs_OrdSum (1::'a, False)\n                         \\<le> ((Abs_OrdSum (y, 1) l\\<rightarrow>\n                                 Abs_OrdSum (x, 1)) l\\<rightarrow>\n                                Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n                               Abs_OrdSum (1::'a, False)", "apply (cut_tac x = \"(1::'a, False)\" and y = \"(1::'a, True)\" in  Abs_OrdSum_eq)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n         (\\<lambda>a b. a l\\<rightarrow> b = Abs_OrdSum (1::'a, True)) (<)\n         (Abs_OrdSum (1::'a, True)) (r\\<rightarrow>);\n        \\<forall>a b c.\n           ((a l\\<rightarrow> b) l\\<rightarrow> c) l\\<rightarrow>\n           ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c =\n           Abs_OrdSum (1::'a, True);\n        \\<forall>a b c.\n           ((a r\\<rightarrow> b) r\\<rightarrow> c) l\\<rightarrow>\n           ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c =\n           Abs_OrdSum (1::'a, True);\n        Abs_OrdSum (1::'a, False) = Abs_OrdSum (1::'a, True);\n        x l\\<rightarrow> y \\<noteq> (1::'a) \\<and>\n        y l\\<rightarrow> x \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> (1::'a, False) \\<in> OrdSum\n 2. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n         (\\<lambda>a b. a l\\<rightarrow> b = Abs_OrdSum (1::'a, True)) (<)\n         (Abs_OrdSum (1::'a, True)) (r\\<rightarrow>);\n        \\<forall>a b c.\n           ((a l\\<rightarrow> b) l\\<rightarrow> c) l\\<rightarrow>\n           ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c =\n           Abs_OrdSum (1::'a, True);\n        \\<forall>a b c.\n           ((a r\\<rightarrow> b) r\\<rightarrow> c) l\\<rightarrow>\n           ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c =\n           Abs_OrdSum (1::'a, True);\n        Abs_OrdSum (1::'a, False) = Abs_OrdSum (1::'a, True);\n        x l\\<rightarrow> y \\<noteq> (1::'a) \\<and>\n        y l\\<rightarrow> x \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> (1::'a, True) \\<in> OrdSum\n 3. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n         (\\<lambda>a b. a l\\<rightarrow> b = Abs_OrdSum (1::'a, True)) (<)\n         (Abs_OrdSum (1::'a, True)) (r\\<rightarrow>);\n        \\<forall>a b c.\n           ((a l\\<rightarrow> b) l\\<rightarrow> c) l\\<rightarrow>\n           ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c =\n           Abs_OrdSum (1::'a, True);\n        \\<forall>a b c.\n           ((a r\\<rightarrow> b) r\\<rightarrow> c) l\\<rightarrow>\n           ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c =\n           Abs_OrdSum (1::'a, True);\n        Abs_OrdSum (1::'a, False) = Abs_OrdSum (1::'a, True);\n        x l\\<rightarrow> y \\<noteq> (1::'a) \\<and>\n        y l\\<rightarrow> x \\<noteq> (1::'a)\\<rbrakk>\n       \\<Longrightarrow> Abs_OrdSum (1::'a, False) =\n                         Abs_OrdSum (1::'a, True)\n 4. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n         (\\<lambda>a b. a l\\<rightarrow> b = Abs_OrdSum (1::'a, True)) (<)\n         (Abs_OrdSum (1::'a, True)) (r\\<rightarrow>);\n        \\<forall>a b c.\n           ((a l\\<rightarrow> b) l\\<rightarrow> c) l\\<rightarrow>\n           ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c =\n           Abs_OrdSum (1::'a, True);\n        \\<forall>a b c.\n           ((a r\\<rightarrow> b) r\\<rightarrow> c) l\\<rightarrow>\n           ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c =\n           Abs_OrdSum (1::'a, True);\n        Abs_OrdSum (1::'a, False) = Abs_OrdSum (1::'a, True);\n        x l\\<rightarrow> y \\<noteq> (1::'a) \\<and>\n        y l\\<rightarrow> x \\<noteq> (1::'a);\n        (1::'a, False) = (1::'a, True)\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y\n 5. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c;\n        Abs_OrdSum (x l\\<rightarrow> y, 1) l\\<rightarrow>\n        Abs_OrdSum (1::'a, False)\n        \\<le> (Abs_OrdSum (y l\\<rightarrow> x, 1) l\\<rightarrow>\n               Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n              Abs_OrdSum (1::'a, False);\n        \\<not> (x l\\<rightarrow> y \\<noteq> (1::'a) \\<and>\n                y l\\<rightarrow> x \\<noteq> (1::'a))\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y\n 6. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow>\n                 c\\<rbrakk>\n       \\<Longrightarrow> (Abs_OrdSum (x, 1) l\\<rightarrow>\n                          Abs_OrdSum (y, 1)) l\\<rightarrow>\n                         Abs_OrdSum (1::'a, False)\n                         \\<le> ((Abs_OrdSum (y, 1) l\\<rightarrow>\n                                 Abs_OrdSum (x, 1)) l\\<rightarrow>\n                                Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n                               Abs_OrdSum (1::'a, False)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<le>) (<) (1::'a) (r\\<rightarrow>);\n        \\<not> y \\<le> x;\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>) (\\<le>)\n         (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           (a l\\<rightarrow> b) l\\<rightarrow> c\n           \\<le> ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c;\n        \\<forall>a b c.\n           (a r\\<rightarrow> b) r\\<rightarrow> c\n           \\<le> ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c;\n        Abs_OrdSum (x l\\<rightarrow> y, 1) l\\<rightarrow>\n        Abs_OrdSum (1::'a, False)\n        \\<le> (Abs_OrdSum (y l\\<rightarrow> x, 1) l\\<rightarrow>\n               Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n              Abs_OrdSum (1::'a, False);\n        x l\\<rightarrow> y = (1::'a) \\<or>\n        y l\\<rightarrow> x = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y", "apply (unfold left_lesseq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n                 (\\<lambda>a b. a l\\<rightarrow> b = (1::'a)) (<) (1::'a)\n                 (r\\<rightarrow>);\n        y l\\<rightarrow> x \\<noteq> (1::'a);\n        class.pseudo_hoop_algebra (*) (\\<sqinter>) (l\\<rightarrow>)\n         (\\<lambda>a b. a l\\<rightarrow> b = 1) (<) 1 (r\\<rightarrow>);\n        \\<forall>a b c.\n           ((a l\\<rightarrow> b) l\\<rightarrow> c) l\\<rightarrow>\n           ((b l\\<rightarrow> a) l\\<rightarrow> c) l\\<rightarrow> c =\n           1;\n        \\<forall>a b c.\n           ((a r\\<rightarrow> b) r\\<rightarrow> c) l\\<rightarrow>\n           ((b r\\<rightarrow> a) r\\<rightarrow> c) r\\<rightarrow> c =\n           1;\n        (Abs_OrdSum (x l\\<rightarrow> y, 1) l\\<rightarrow>\n         Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n        (Abs_OrdSum (y l\\<rightarrow> x, 1) l\\<rightarrow>\n         Abs_OrdSum (1::'a, False)) l\\<rightarrow>\n        Abs_OrdSum (1::'a, False) =\n        1;\n        x l\\<rightarrow> y = (1::'a) \\<or>\n        y l\\<rightarrow> x = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> x l\\<rightarrow> y = (1::'a)", "by simp"], ["", "end"]]}