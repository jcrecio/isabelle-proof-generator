{"file_name": "/home/qj213/afp-2021-10-22/thys/PseudoHoops/PseudoHoopFilters.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/PseudoHoops", "problem_names": ["lemma filter_i: \"F \\<in> filters \\<Longrightarrow> a \\<in> F \\<Longrightarrow> b \\<in> F \\<Longrightarrow> a * b \\<in> F\"", "lemma filter_ii: \"F \\<in> filters \\<Longrightarrow> a \\<in> F \\<Longrightarrow> a \\<le> b \\<Longrightarrow> b \\<in> F\"", "lemma filter_iii [simp]: \"F \\<in> filters \\<Longrightarrow> 1 \\<in> F\"", "lemma filter_left_impl:\n  \"(F \\<in> filters) = ((1 \\<in> F) \\<and> (\\<forall> a b . a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow> b \\<in> F))\"", "lemma filter_right_impl:\n  \"(F \\<in> filters) = ((1 \\<in> F) \\<and> (\\<forall> a b . a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow> b \\<in> F))\"", "lemma [simp]: \"A \\<subseteq> filters \\<Longrightarrow> \\<Inter> A \\<in> filters\"", "lemma [simp]: \"filterof X \\<in> filters\"", "lemma times_le_mono [simp]: \"x \\<le> y \\<Longrightarrow> u \\<le> v \\<Longrightarrow> x * u \\<le> y * v\"", "lemma prop_3_2_i:\n  \"filterof X = {a . \\<exists> n x . x \\<in> X *^ n \\<and> x \\<le> a}\"", "lemma ultrafilter_union:\n  \"ultrafilters = {F . F \\<in> filters \\<and> F \\<noteq> UNIV \\<and> (\\<forall> x . x \\<notin> F \\<longrightarrow> filterof (F \\<union> {x}) = UNIV)}\"", "lemma filterof_sub: \"F \\<in> filters \\<Longrightarrow> X \\<subseteq> F \\<Longrightarrow> filterof X \\<subseteq> F\"", "lemma filterof_elem [simp]: \"x \\<in> X \\<Longrightarrow> x \\<in>  filterof X\"", "lemma [simp]: \"filterof X \\<in> filters\"", "lemma singleton_power [simp]: \"{a} *^ n = {b . b = a ^ n}\"", "lemma power_pair: \"x \\<in> {a, b} *^ n \\<Longrightarrow> \\<exists> i j . i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j\"", "lemma filterof_supremum:\n  \"c \\<in> supremum {a, b} \\<Longrightarrow> filterof {c} = filterof {a} \\<inter> filterof {b}\"", "lemma [simp]: \"(a * b = 1) = (a = 1 \\<and> b = 1)\"", "lemma lemma_3_5_i_1: \"(d1 a b = 1) = (a = b)\"", "lemma lemma_3_5_i_2: \"(d2 a b = 1) = (a = b)\"", "lemma lemma_3_5_i_3: \"(d3 a b = 1) = (a = b)\"", "lemma lemma_3_5_i_4: \"(d4 a b = 1) = (a = b)\"", "lemma lemma_3_5_ii_1 [simp]: \"d1 a a = 1\"", "lemma lemma_3_5_ii_2 [simp]: \"d2 a a = 1\"", "lemma lemma_3_5_ii_3 [simp]: \"d3 a a = 1\"", "lemma lemma_3_5_ii_4 [simp]: \"d4 a a = 1\"", "lemma [simp]: \"(a l\\<rightarrow> 1) = 1\"", "lemma [simp]: \"(a r\\<rightarrow> 1) = 1\"", "lemma lemma_3_5_iii_1 [simp]: \"d1 a 1 = a\"", "lemma lemma_3_5_iii_2 [simp]: \"d2 a 1 = a\"", "lemma lemma_3_5_iii_3 [simp]: \"d3 a 1 = a\"", "lemma lemma_3_5_iii_4 [simp]: \"d4 a 1 = a\"", "lemma lemma_3_5_iv_1: \"(d1 b c) * (d1 a b) * (d1 b c) \\<le> d1 a c\"", "lemma lemma_3_5_iv_2: \"(d2 a b) * (d2 b c) * (d2 a b) \\<le> d2 a c\"", "lemma lemma_3_5_iv_3: \"(d3 a b) * (d3 b c) * (d3 a b) \\<le> d3 a c\"", "lemma lemma_3_5_iv_4: \"(d4 b c) * (d4 a b) * (d4 b c) \\<le> d4 a c\"", "lemma cong_r_filter: \"F \\<in> filters \\<Longrightarrow> (cong_r F a b) = (a l\\<rightarrow> b \\<in> F \\<and> b l\\<rightarrow> a \\<in> F)\"", "lemma cong_r_symmetric: \"F \\<in> filters \\<Longrightarrow> (cong_r F a b) = (cong_r F b a)\"", "lemma cong_r_d3: \"F \\<in> filters \\<Longrightarrow> (cong_r F a b) = (d3 a b \\<in> F)\"", "lemma cong_l_filter: \"F \\<in> filters \\<Longrightarrow> (cong_l F a b) = (a r\\<rightarrow> b \\<in> F \\<and> b r\\<rightarrow> a \\<in> F)\"", "lemma cong_l_symmetric: \"F \\<in> filters \\<Longrightarrow> (cong_l F a b) = (cong_l F b a)\"", "lemma cong_l_d4: \"F \\<in> filters \\<Longrightarrow> (cong_l F a b) = (d4 a b \\<in> F)\"", "lemma cong_r_reflexive: \"F \\<in> filters \\<Longrightarrow> cong_r F a a\"", "lemma cong_r_transitive: \"F \\<in> filters \\<Longrightarrow> cong_r F a b \\<Longrightarrow> cong_r F b c \\<Longrightarrow> cong_r F a c\"", "lemma cong_l_reflexive: \"F \\<in> filters \\<Longrightarrow> cong_l F a a\"", "lemma cong_l_transitive: \"F \\<in> filters \\<Longrightarrow> cong_l F a b \\<Longrightarrow> cong_l F b c \\<Longrightarrow> cong_l F a c\"", "lemma lemma_3_7_i: \"F \\<in> filters \\<Longrightarrow> F = {a . cong_r F a 1}\"", "lemma lemma_3_7_ii: \"F \\<in> filters \\<Longrightarrow> F = {a . cong_l F a 1}\"", "lemma lemma_3_8_i: \"F \\<in> filters \\<Longrightarrow> (cong_r F a b) = (\\<exists> x y . x \\<in> F \\<and> y \\<in> F \\<and> x * a = y * b)\"", "lemma lemma_3_8_ii: \"F \\<in> filters \\<Longrightarrow> (cong_l F a b) = (\\<exists> x y . x \\<in> F \\<and> y \\<in> F \\<and> a * x = b * y)\"", "lemma lemma_3_9_i: \"F \\<in> filters \\<Longrightarrow> cong_r F a b  \\<Longrightarrow> cong_r F c d \\<Longrightarrow> (a l\\<rightarrow> c \\<in> F) = (b l\\<rightarrow> d \\<in> F)\"", "lemma lemma_3_9_ii: \"F \\<in> filters \\<Longrightarrow> cong_l F a b  \\<Longrightarrow> cong_l F c d \\<Longrightarrow> (a r\\<rightarrow> c \\<in> F) = (b r\\<rightarrow> d \\<in> F)\"", "lemma normalfilter_i:\n  \"H \\<in> normalfilters \\<Longrightarrow> a l\\<rightarrow> b \\<in> H \\<Longrightarrow> a r\\<rightarrow> b \\<in> H\"", "lemma normalfilter_ii:\n  \"H \\<in> normalfilters \\<Longrightarrow> a r\\<rightarrow> b \\<in> H \\<Longrightarrow> a l\\<rightarrow> b \\<in> H\"", "lemma [simp]: \"H \\<in> normalfilters \\<Longrightarrow> H \\<in> filters\"", "lemma lemma_3_10_i_ii:\n  \"H \\<in> normalfilters \\<Longrightarrow> {a} ** H = H ** {a}\"", "lemma lemma_3_10_ii_iii:\n  \"H \\<in> filters \\<Longrightarrow> (\\<forall> a . {a} ** H = H ** {a}) \\<Longrightarrow> cong_r H = cong_l H\"", "lemma lemma_3_10_i_iii: \n  \"H \\<in> normalfilters \\<Longrightarrow> cong_r H = cong_l H\"", "lemma order_impl_l [simp]: \"a \\<le> b \\<Longrightarrow> a l\\<rightarrow> b = 1\"", "lemma impl_l_d1: \"(a l\\<rightarrow> b) = d1 a (a \\<sqinter> b)\"", "lemma impl_r_d2: \"(a r\\<rightarrow> b) = d2 a (a \\<sqinter> b)\"", "lemma lemma_3_10_iii_i:\n  \"H \\<in> filters \\<Longrightarrow> cong_r H = cong_l H \\<Longrightarrow> H \\<in> normalfilters\"", "lemma lemma_3_10_ii_i:\n  \"H \\<in> filters \\<Longrightarrow>  (\\<forall> a . {a} ** H = H ** {a}) \\<Longrightarrow> H \\<in> normalfilters\"", "lemma times_set_in: \"a \\<in> A \\<Longrightarrow> b \\<in> B \\<Longrightarrow> c = a * b \\<Longrightarrow> c \\<in> A ** B\"", "lemma power_set_power: \"a \\<in> A \\<Longrightarrow> a ^ n \\<in> A *^ n\"", "lemma normal_filter_union: \"H \\<in> normalfilters \\<Longrightarrow> (H \\<union> {x}) *^ n = (H ** (allpowers x n)) \\<union> {x ^ n} \"", "lemma lemma_3_11_i: \"H \\<in> normalfilters \\<Longrightarrow> filterof (H \\<union> {x}) = {a . \\<exists> n h . h \\<in> H \\<and> h * x ^ n \\<le> a}\"", "lemma lemma_3_11_ii: \"H \\<in> normalfilters \\<Longrightarrow> filterof (H \\<union> {x}) = {a . \\<exists> n h . h \\<in> H \\<and> (x ^ n) * h \\<le> a}\"", "lemma lemma_3_12_i_ii:\n  \"H \\<in> normalfilters \\<Longrightarrow> H \\<in> ultrafilters \\<Longrightarrow> x \\<notin> H \\<Longrightarrow> (\\<exists> n . x ^ n l\\<rightarrow> a \\<in> H)\"", "lemma lemma_3_12_ii_i:\n  \"H \\<in> normalfilters \\<Longrightarrow> H \\<in> properfilters \\<Longrightarrow> (\\<forall> x a . x \\<notin> H \\<longrightarrow> (\\<exists> n . x ^ n l\\<rightarrow> a \\<in> H)) \\<Longrightarrow> H \\<in> maximalfilters\"", "lemma lemma_3_12_i_iii:\n  \"H \\<in> normalfilters \\<Longrightarrow> H \\<in> ultrafilters \\<Longrightarrow> x \\<notin> H \\<Longrightarrow> (\\<exists> n . x ^ n r\\<rightarrow> a \\<in> H)\"", "lemma lemma_3_12_iii_i:\n  \"H \\<in> normalfilters \\<Longrightarrow> H \\<in> properfilters \\<Longrightarrow> (\\<forall> x a . x \\<notin> H \\<longrightarrow> (\\<exists> n . x ^ n r\\<rightarrow> a \\<in> H)) \\<Longrightarrow> H \\<in> maximalfilters\"", "lemma cong_l: \"H \\<in> normalfilters \\<Longrightarrow> cong H = cong_l H\"", "lemma cong_r: \"H \\<in> normalfilters \\<Longrightarrow> cong H = cong_r H\"", "lemma cong_equiv: \"H \\<in> normalfilters \\<Longrightarrow> equivp (cong H)\"", "lemma cong_trans: \"H \\<in> normalfilters \\<Longrightarrow> cong H x y \\<Longrightarrow> cong H y z \\<Longrightarrow> cong H x z\"", "lemma lemma_3_13 [simp]: \n  \"H \\<in> normalfilters \\<Longrightarrow> cong H \\<in> congruences\"", "lemma cong_times: \"R \\<in> congruences \\<Longrightarrow> R a b \\<Longrightarrow> R c d \\<Longrightarrow> R (a * c) (b * d)\"", "lemma cong_impl_l: \"R \\<in> congruences \\<Longrightarrow> R a b \\<Longrightarrow> R c d \\<Longrightarrow> R (a l\\<rightarrow> c) (b l\\<rightarrow> d)\"", "lemma cong_impl_r: \"R \\<in> congruences \\<Longrightarrow> R a b \\<Longrightarrow> R c d \\<Longrightarrow> R (a r\\<rightarrow> c) (b r\\<rightarrow> d)\"", "lemma cong_refl [simp]: \"R \\<in> congruences \\<Longrightarrow> R a a\"", "lemma cong_trans_a: \"R \\<in> congruences \\<Longrightarrow> R a b \\<Longrightarrow> R b c \\<Longrightarrow> R a c\"", "lemma cong_sym: \"R \\<in> congruences \\<Longrightarrow> R a b \\<Longrightarrow> R b a\"", "lemma lemma_3_14 [simp]:\n  \"R \\<in> congruences \\<Longrightarrow> (normalfilter R) \\<in> normalfilters\"", "lemma lemma_3_15_i:\n  \"H \\<in> normalfilters \\<Longrightarrow> normalfilter (cong H) = H\"", "lemma lemma_3_15_ii:\n  \"R \\<in> congruences \\<Longrightarrow> cong (normalfilter R) = R\"", "lemma lemma_3_15_iii: \"H1 \\<in> normalfilters \\<Longrightarrow> H2 \\<in> normalfilters \\<Longrightarrow> (H1 \\<subseteq> H2) = (cong H1 \\<le> cong H2)\"", "lemma lemma_3_16_i: \"p x x y = y \\<and> p x y y = x\"", "lemma \"M x x y = x \\<and> M x y x = x \\<and> M y x x = x\""], "translations": [["", "lemma filter_i: \"F \\<in> filters \\<Longrightarrow> a \\<in> F \\<Longrightarrow> b \\<in> F \\<Longrightarrow> a * b \\<in> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; a \\<in> F; b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a * b \\<in> F", "by (simp add: filters_def)"], ["", "lemma filter_ii: \"F \\<in> filters \\<Longrightarrow> a \\<in> F \\<Longrightarrow> a \\<le> b \\<Longrightarrow> b \\<in> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; a \\<in> F; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> b \\<in> F", "by (simp add: filters_def)"], ["", "lemma filter_iii [simp]: \"F \\<in> filters \\<Longrightarrow> 1 \\<in> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow> (1::'a) \\<in> F", "by (auto simp add: filters_def)"], ["", "lemma filter_left_impl:\n  \"(F \\<in> filters) = ((1 \\<in> F) \\<and> (\\<forall> a b . a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow> b \\<in> F))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (F \\<in> filters) =\n    ((1::'a) \\<in> F \\<and>\n     (\\<forall>a b.\n         a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n         b \\<in> F))", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. F \\<in> filters \\<Longrightarrow> (1::'a) \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F;\n        a l\\<rightarrow> b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F\n 3. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F;\n        a l\\<rightarrow> b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F\n 2. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply (frule_tac a = \"a l\\<rightarrow> b\" and b = a in filter_i)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F;\n        a l\\<rightarrow> b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F;\n        a l\\<rightarrow> b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a \\<in> F\n 3. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a l\\<rightarrow> b \\<in> F;\n        (a l\\<rightarrow> b) * a \\<in> F\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F\n 4. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F;\n        a l\\<rightarrow> b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a l\\<rightarrow> b \\<in> F;\n        (a l\\<rightarrow> b) * a \\<in> F\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F\n 3. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a l\\<rightarrow> b \\<in> F;\n        (a l\\<rightarrow> b) * a \\<in> F\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F\n 2. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply (rule_tac a = \"(a l\\<rightarrow> b) * a\" in filter_ii)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a l\\<rightarrow> b \\<in> F;\n        (a l\\<rightarrow> b) * a \\<in> F\\<rbrakk>\n       \\<Longrightarrow> F \\<in> filters\n 2. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a l\\<rightarrow> b \\<in> F;\n        (a l\\<rightarrow> b) * a \\<in> F\\<rbrakk>\n       \\<Longrightarrow> (a l\\<rightarrow> b) * a \\<in> F\n 3. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a l\\<rightarrow> b \\<in> F;\n        (a l\\<rightarrow> b) * a \\<in> F\\<rbrakk>\n       \\<Longrightarrow> (a l\\<rightarrow> b) * a \\<le> b\n 4. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a l\\<rightarrow> b \\<in> F;\n        (a l\\<rightarrow> b) * a \\<in> F\\<rbrakk>\n       \\<Longrightarrow> (a l\\<rightarrow> b) * a \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a l\\<rightarrow> b \\<in> F;\n        (a l\\<rightarrow> b) * a \\<in> F\\<rbrakk>\n       \\<Longrightarrow> (a l\\<rightarrow> b) * a \\<le> b\n 3. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a l\\<rightarrow> b \\<in> F;\n        (a l\\<rightarrow> b) * a \\<in> F\\<rbrakk>\n       \\<Longrightarrow> (a l\\<rightarrow> b) * a \\<le> b\n 2. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply (simp add: inf_l_def [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply (subst filters_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)}", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F", "apply (subgoal_tac \"a l\\<rightarrow> (b l\\<rightarrow> a * b) \\<in> F\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; b \\<in> F;\n        a l\\<rightarrow> b l\\<rightarrow> a * b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b l\\<rightarrow> a * b \\<in> F\n 3. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b l\\<rightarrow> a * b \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F", "apply (subst left_impl_ded [THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a * b l\\<rightarrow> a * b \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F", "apply (subst left_impl_one)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F", "apply (subst (asm) left_lesseq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; a l\\<rightarrow> b = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F", "by blast"], ["", "lemma filter_right_impl:\n  \"(F \\<in> filters) = ((1 \\<in> F) \\<and> (\\<forall> a b . a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow> b \\<in> F))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (F \\<in> filters) =\n    ((1::'a) \\<in> F \\<and>\n     (\\<forall>a b.\n         a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n         b \\<in> F))", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. F \\<in> filters \\<Longrightarrow> (1::'a) \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F;\n        a r\\<rightarrow> b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F\n 3. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F;\n        a r\\<rightarrow> b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F\n 2. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply (frule_tac a = a and b = \"a r\\<rightarrow> b\" in filter_i)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F;\n        a r\\<rightarrow> b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F;\n        a r\\<rightarrow> b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> F\n 3. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a r\\<rightarrow> b \\<in> F;\n        a * (a r\\<rightarrow> b) \\<in> F\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F\n 4. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F;\n        a r\\<rightarrow> b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a r\\<rightarrow> b \\<in> F;\n        a * (a r\\<rightarrow> b) \\<in> F\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F\n 3. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a r\\<rightarrow> b \\<in> F;\n        a * (a r\\<rightarrow> b) \\<in> F\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F\n 2. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply (rule_tac a = \"a * (a r\\<rightarrow> b)\" in filter_ii)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a r\\<rightarrow> b \\<in> F;\n        a * (a r\\<rightarrow> b) \\<in> F\\<rbrakk>\n       \\<Longrightarrow> F \\<in> filters\n 2. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a r\\<rightarrow> b \\<in> F;\n        a * (a r\\<rightarrow> b) \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a * (a r\\<rightarrow> b) \\<in> F\n 3. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a r\\<rightarrow> b \\<in> F;\n        a * (a r\\<rightarrow> b) \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a * (a r\\<rightarrow> b) \\<le> b\n 4. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a r\\<rightarrow> b \\<in> F;\n        a * (a r\\<rightarrow> b) \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a * (a r\\<rightarrow> b) \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a r\\<rightarrow> b \\<in> F;\n        a * (a r\\<rightarrow> b) \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a * (a r\\<rightarrow> b) \\<le> b\n 3. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>F \\<in> filters; a \\<in> F; a r\\<rightarrow> b \\<in> F;\n        a * (a r\\<rightarrow> b) \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a * (a r\\<rightarrow> b) \\<le> b\n 2. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply (simp add: inf_r_def [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters", "apply (subst filters_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(1::'a) \\<in> F;\n     \\<forall>a b.\n        a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n        b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)}", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F", "apply (subgoal_tac \"b r\\<rightarrow> (a r\\<rightarrow> a * b) \\<in> F\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; b \\<in> F;\n        b r\\<rightarrow> a r\\<rightarrow> a * b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> b r\\<rightarrow> a r\\<rightarrow> a * b \\<in> F\n 3. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> b r\\<rightarrow> a r\\<rightarrow> a * b \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F", "apply (subst right_impl_ded [THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> a * b r\\<rightarrow> a * b \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F", "apply (subst right_impl_one)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; b \\<in> F\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<in> F\n 2. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F", "apply (subst (asm) right_lesseq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>(1::'a) \\<in> F;\n        \\<forall>a b.\n           a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F \\<longrightarrow>\n           b \\<in> F;\n        a \\<in> F; a r\\<rightarrow> b = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> b \\<in> F", "by blast"], ["", "lemma [simp]: \"A \\<subseteq> filters \\<Longrightarrow> \\<Inter> A \\<in> filters\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> filters \\<Longrightarrow> \\<Inter> A \\<in> filters", "apply (simp add: filters_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                      (\\<forall>a b.\n                          a \\<in> F \\<and> b \\<in> F \\<longrightarrow>\n                          a * b \\<in> F) \\<and>\n                      (\\<forall>a b.\n                          a \\<in> F \\<and> a \\<le> b \\<longrightarrow>\n                          b \\<in> F)} \\<Longrightarrow>\n    \\<Inter> A \\<noteq> {} \\<and>\n    (\\<forall>a b.\n        (\\<forall>X\\<in>A. a \\<in> X) \\<and>\n        (\\<forall>X\\<in>A. b \\<in> X) \\<longrightarrow>\n        (\\<forall>X\\<in>A. a * b \\<in> X)) \\<and>\n    (\\<forall>a b.\n        (\\<forall>X\\<in>A. a \\<in> X) \\<and> a \\<le> b \\<longrightarrow>\n        (\\<forall>X\\<in>A. b \\<in> X))", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                               (\\<forall>a b.\n                                   a \\<in> F \\<and>\n                                   b \\<in> F \\<longrightarrow>\n                                   a * b \\<in> F) \\<and>\n                               (\\<forall>a b.\n                                   a \\<in> F \\<and>\n                                   a \\<le> b \\<longrightarrow>\n                                   b \\<in> F)};\n     \\<Inter> A = {}\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X;\n        \\<forall>X\\<in>A. b \\<in> X\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> X\n 3. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> X", "apply (simp add: Inter_eq)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                               (\\<forall>a b.\n                                   a \\<in> F \\<and>\n                                   b \\<in> F \\<longrightarrow>\n                                   a * b \\<in> F) \\<and>\n                               (\\<forall>a b.\n                                   a \\<in> F \\<and>\n                                   a \\<le> b \\<longrightarrow>\n                                   b \\<in> F)};\n     \\<forall>x. \\<exists>xa\\<in>A. x \\<notin> xa\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X;\n        \\<forall>X\\<in>A. b \\<in> X\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> X\n 3. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> X", "apply (drule_tac x = \"1\" in spec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                               (\\<forall>a b.\n                                   a \\<in> F \\<and>\n                                   b \\<in> F \\<longrightarrow>\n                                   a * b \\<in> F) \\<and>\n                               (\\<forall>a b.\n                                   a \\<in> F \\<and>\n                                   a \\<le> b \\<longrightarrow>\n                                   b \\<in> F)};\n     \\<exists>x\\<in>A. (1::'a) \\<notin> x\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X;\n        \\<forall>X\\<in>A. b \\<in> X\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> X\n 3. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> X", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        x \\<in> A; (1::'a) \\<notin> x\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X;\n        \\<forall>X\\<in>A. b \\<in> X\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> X\n 3. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> X", "apply (erule notE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<in> x\n 2. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X;\n        \\<forall>X\\<in>A. b \\<in> X\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> X\n 3. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> X", "apply (subgoal_tac \"x \\<in> filters\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        x \\<in> A; x \\<in> filters\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<in> x\n 2. \\<And>x.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filters\n 3. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X;\n        \\<forall>X\\<in>A. b \\<in> X\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> X\n 4. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> X", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filters\n 2. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X;\n        \\<forall>X\\<in>A. b \\<in> X\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> X\n 3. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> X", "apply (simp add: filters_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> x \\<noteq> {} \\<and>\n                         (\\<forall>a b.\n                             a \\<in> x \\<and> b \\<in> x \\<longrightarrow>\n                             a * b \\<in> x) \\<and>\n                         (\\<forall>a b.\n                             a \\<in> x \\<and> a \\<le> b \\<longrightarrow>\n                             b \\<in> x)\n 2. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X;\n        \\<forall>X\\<in>A. b \\<in> X\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> X\n 3. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> X", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X;\n        \\<forall>X\\<in>A. b \\<in> X\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> X\n 2. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> X", "apply (frule rev_subsetD)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X;\n        \\<forall>X\\<in>A. b \\<in> X\\<rbrakk>\n       \\<Longrightarrow> A \\<subseteq> ?B83 a b X\n 2. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; \\<forall>X\\<in>A. b \\<in> X;\n        X \\<in> ?B83 a b X\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> X\n 3. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> X", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; \\<forall>X\\<in>A. b \\<in> X;\n        X \\<in> {F. F \\<noteq> {} \\<and>\n                    (\\<forall>a b.\n                        a \\<in> F \\<and> b \\<in> F \\<longrightarrow>\n                        a * b \\<in> F) \\<and>\n                    (\\<forall>a b.\n                        a \\<in> F \\<and> a \\<le> b \\<longrightarrow>\n                        b \\<in> F)}\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> X\n 2. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> X", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> X", "apply (frule rev_subsetD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> A \\<subseteq> ?B86 a b X\n 2. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b;\n        X \\<in> ?B86 a b X\\<rbrakk>\n       \\<Longrightarrow> b \\<in> X", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b;\n        X \\<in> {F. F \\<noteq> {} \\<and>\n                    (\\<forall>a b.\n                        a \\<in> F \\<and> b \\<in> F \\<longrightarrow>\n                        a * b \\<in> F) \\<and>\n                    (\\<forall>a b.\n                        a \\<in> F \\<and> a \\<le> b \\<longrightarrow>\n                        b \\<in> F)}\\<rbrakk>\n       \\<Longrightarrow> b \\<in> X", "apply (subgoal_tac \"a \\<in> X\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b;\n        X \\<in> {F. F \\<noteq> {} \\<and>\n                    (\\<forall>a b.\n                        a \\<in> F \\<and> b \\<in> F \\<longrightarrow>\n                        a * b \\<in> F) \\<and>\n                    (\\<forall>a b.\n                        a \\<in> F \\<and> a \\<le> b \\<longrightarrow>\n                        b \\<in> F)};\n        a \\<in> X\\<rbrakk>\n       \\<Longrightarrow> b \\<in> X\n 2. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b;\n        X \\<in> {F. F \\<noteq> {} \\<and>\n                    (\\<forall>a b.\n                        a \\<in> F \\<and> b \\<in> F \\<longrightarrow>\n                        a * b \\<in> F) \\<and>\n                    (\\<forall>a b.\n                        a \\<in> F \\<and> a \\<le> b \\<longrightarrow>\n                        b \\<in> F)}\\<rbrakk>\n       \\<Longrightarrow> a \\<in> X", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b X.\n       \\<lbrakk>A \\<subseteq> {F. F \\<noteq> {} \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> b \\<in> F \\<longrightarrow> a * b \\<in> F) \\<and>\n                                  (\\<forall>a b.\na \\<in> F \\<and> a \\<le> b \\<longrightarrow> b \\<in> F)};\n        X \\<in> A; \\<forall>X\\<in>A. a \\<in> X; a \\<le> b;\n        X \\<in> {F. F \\<noteq> {} \\<and>\n                    (\\<forall>a b.\n                        a \\<in> F \\<and> b \\<in> F \\<longrightarrow>\n                        a * b \\<in> F) \\<and>\n                    (\\<forall>a b.\n                        a \\<in> F \\<and> a \\<le> b \\<longrightarrow>\n                        b \\<in> F)}\\<rbrakk>\n       \\<Longrightarrow> a \\<in> X", "by blast"], ["", "definition\n  \"filterof X = \\<Inter> {F . F \\<in> filters \\<and> X \\<subseteq> F}\""], ["", "lemma [simp]: \"filterof X \\<in> filters\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterof X \\<in> filters", "by (auto simp add: filterof_def)"], ["", "lemma times_le_mono [simp]: \"x \\<le> y \\<Longrightarrow> u \\<le> v \\<Longrightarrow> x * u \\<le> y * v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> y; u \\<le> v\\<rbrakk>\n    \\<Longrightarrow> x * u \\<le> y * v", "apply (rule_tac y = \"x * v\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<le> y; u \\<le> v\\<rbrakk>\n    \\<Longrightarrow> x * u \\<le> x * v\n 2. \\<lbrakk>x \\<le> y; u \\<le> v\\<rbrakk>\n    \\<Longrightarrow> x * v \\<le> y * v", "by (simp_all add: mult_left_mono mult_right_mono)"], ["", "lemma prop_3_2_i:\n  \"filterof X = {a . \\<exists> n x . x \\<in> X *^ n \\<and> x \\<le> a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterof X = {a. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a}", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> filterof X \\<Longrightarrow>\n       \\<exists>n xa. xa \\<in> X *^ n \\<and> xa \\<le> x\n 2. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply (subgoal_tac \"{a . \\<exists> n x . x \\<in> X *^ n \\<and> x \\<le> a} \\<in> filters\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> filterof X;\n        {a. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a}\n        \\<in> filters\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n xa. xa \\<in> X *^ n \\<and> xa \\<le> x\n 2. \\<And>x.\n       x \\<in> filterof X \\<Longrightarrow>\n       {a. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a} \\<in> filters\n 3. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply (simp add: filterof_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>xa.\n                   xa \\<in> filters \\<and>\n                   X \\<subseteq> xa \\<longrightarrow>\n                   x \\<in> xa;\n        {a. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a}\n        \\<in> filters\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n xa. xa \\<in> X *^ n \\<and> xa \\<le> x\n 2. \\<And>x.\n       x \\<in> filterof X \\<Longrightarrow>\n       {a. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a} \\<in> filters\n 3. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply (drule_tac x = \"{a::'a. \\<exists>(n::nat) x::'a. x \\<in> X *^ n \\<and> x \\<le> a}\" in spec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>{a. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a}\n                \\<in> filters;\n        {a. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a}\n        \\<in> filters \\<and>\n        X \\<subseteq> {a. \\<exists>n x.\n                             x \\<in> X *^ n \\<and>\n                             x \\<le> a} \\<longrightarrow>\n        x \\<in> {a. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n xa. xa \\<in> X *^ n \\<and> xa \\<le> x\n 2. \\<And>x.\n       x \\<in> filterof X \\<Longrightarrow>\n       {a. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a} \\<in> filters\n 3. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>{a. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a}\n                \\<in> filters;\n        \\<nexists>n xa. xa \\<in> X *^ n \\<and> xa \\<le> x;\n        xa \\<in> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> xa\n 2. \\<And>x.\n       x \\<in> filterof X \\<Longrightarrow>\n       {a. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a} \\<in> filters\n 3. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply (rule_tac x = \"1::nat\" in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>{a. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a}\n                \\<in> filters;\n        \\<nexists>n xa. xa \\<in> X *^ n \\<and> xa \\<le> x;\n        xa \\<in> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<in> X *^ 1 \\<and> x \\<le> xa\n 2. \\<And>x.\n       x \\<in> filterof X \\<Longrightarrow>\n       {a. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a} \\<in> filters\n 3. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply (rule_tac x = \"xa\" in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>{a. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a}\n                \\<in> filters;\n        \\<nexists>n xa. xa \\<in> X *^ n \\<and> xa \\<le> x;\n        xa \\<in> X\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> X *^ 1 \\<and> xa \\<le> xa\n 2. \\<And>x.\n       x \\<in> filterof X \\<Longrightarrow>\n       {a. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a} \\<in> filters\n 3. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> filterof X \\<Longrightarrow>\n       {a. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a} \\<in> filters\n 2. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       True \\<Longrightarrow>\n       {a. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a} \\<in> filters\n 2. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply (simp add: filters_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<exists>x n xa. xa \\<in> X *^ n \\<and> xa \\<le> x) \\<and>\n    (\\<forall>a b.\n        (\\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a) \\<and>\n        (\\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b) \\<longrightarrow>\n        (\\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a * b)) \\<and>\n    (\\<forall>a b.\n        (\\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a) \\<and>\n        a \\<le> b \\<longrightarrow>\n        (\\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b))\n 2. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<exists>x n xa. xa \\<in> X *^ n \\<and> xa \\<le> x\n 2. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a * b\n 3. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b\n 4. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply (rule_tac x = \"1\" in exI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> (1::'a)\n 2. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a * b\n 3. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b\n 4. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply (rule_tac x = \"0\" in exI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<exists>x. x \\<in> X *^ 0 \\<and> x \\<le> (1::'a)\n 2. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a * b\n 3. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b\n 4. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply (rule_tac x = \"1\" in exI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (1::'a) \\<in> X *^ 0 \\<and> (1::'a) \\<le> (1::'a)\n 2. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a * b\n 3. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b\n 4. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a * b\n 2. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b\n 3. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply (rule_tac x = \"n + na\" in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            x \\<in> X *^ (n + na) \\<and> x \\<le> a * b\n 2. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b\n 3. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply (rule_tac x = \"x * xa\" in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> X *^ (n + na) \\<and>\n                         x * xa \\<le> a * b\n 2. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b\n 3. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> X *^ (n + na)\n 2. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<le> a * b\n 3. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b\n 4. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply (simp add: power_set_add times_set_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb\\<in>X *^ n.\n                            \\<exists>y\\<in>X *^ na. x * xa = xb * y\n 2. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<le> a * b\n 3. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b\n 4. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<le> a * b\n 2. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b\n 3. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b\n 2. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply (rule_tac x = \"n\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<in> X *^ n \\<and> x \\<le> b\n 2. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply (rule_tac x = \"x\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> X *^ n \\<and> x \\<le> b\n 2. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof X", "apply (simp add: filterof_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n xa.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>xa.\n                            xa \\<in> filters \\<and>\n                            X \\<subseteq> xa \\<longrightarrow>\n                            x \\<in> xa", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n xa xb.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x; xb \\<in> filters;\n        X \\<subseteq> xb\\<rbrakk>\n       \\<Longrightarrow> x \\<in> xb", "apply (rule filter_ii)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x n xa xb.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x; xb \\<in> filters;\n        X \\<subseteq> xb\\<rbrakk>\n       \\<Longrightarrow> xb \\<in> filters\n 2. \\<And>x n xa xb.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x; xb \\<in> filters;\n        X \\<subseteq> xb\\<rbrakk>\n       \\<Longrightarrow> ?a62 x n xa xb \\<in> xb\n 3. \\<And>x n xa xb.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x; xb \\<in> filters;\n        X \\<subseteq> xb\\<rbrakk>\n       \\<Longrightarrow> ?a62 x n xa xb \\<le> x", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n xa xb.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x; xb \\<in> filters;\n        X \\<subseteq> xb\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> xb", "apply (subgoal_tac \"\\<forall>x . x \\<in> X *^ n \\<longrightarrow> x \\<in> xb\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x n xa xb.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x; xb \\<in> filters;\n        X \\<subseteq> xb;\n        \\<forall>x. x \\<in> X *^ n \\<longrightarrow> x \\<in> xb\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> xb\n 2. \\<And>x n xa xb.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x; xb \\<in> filters;\n        X \\<subseteq> xb\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> X *^ n \\<longrightarrow> x \\<in> xb", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n xa xb.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x; xb \\<in> filters;\n        X \\<subseteq> xb\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> X *^ n \\<longrightarrow> x \\<in> xb", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x n xa xb.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x; xb \\<in> filters;\n        X \\<subseteq> xb\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> X *^ 0 \\<longrightarrow> x \\<in> xb\n 2. \\<And>x n xa xb na.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x; xb \\<in> filters;\n        X \\<subseteq> xb;\n        \\<forall>x. x \\<in> X *^ na \\<longrightarrow> x \\<in> xb\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> X *^ Suc na \\<longrightarrow> x \\<in> xb", "apply (simp add: power_set_0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n xa xb na.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x; xb \\<in> filters;\n        X \\<subseteq> xb;\n        \\<forall>x. x \\<in> X *^ na \\<longrightarrow> x \\<in> xb\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> X *^ Suc na \\<longrightarrow> x \\<in> xb", "apply (simp add: power_set_Suc times_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n xa xb na.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x; xb \\<in> filters;\n        X \\<subseteq> xb;\n        \\<forall>x. x \\<in> X *^ na \\<longrightarrow> x \\<in> xb\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (\\<exists>xa\\<in>X.\n                                \\<exists>y\\<in>X *^ na.\n                                   x = xa * y) \\<longrightarrow>\n                            x \\<in> xb", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n xa xb na xc xd y.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x; xb \\<in> filters;\n        X \\<subseteq> xb;\n        \\<forall>x. x \\<in> X *^ na \\<longrightarrow> x \\<in> xb;\n        xd \\<in> X; y \\<in> X *^ na\\<rbrakk>\n       \\<Longrightarrow> xd * y \\<in> xb", "apply (rule filter_i)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x n xa xb na xc xd y.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x; xb \\<in> filters;\n        X \\<subseteq> xb;\n        \\<forall>x. x \\<in> X *^ na \\<longrightarrow> x \\<in> xb;\n        xd \\<in> X; y \\<in> X *^ na\\<rbrakk>\n       \\<Longrightarrow> xb \\<in> filters\n 2. \\<And>x n xa xb na xc xd y.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x; xb \\<in> filters;\n        X \\<subseteq> xb;\n        \\<forall>x. x \\<in> X *^ na \\<longrightarrow> x \\<in> xb;\n        xd \\<in> X; y \\<in> X *^ na\\<rbrakk>\n       \\<Longrightarrow> xd \\<in> xb\n 3. \\<And>x n xa xb na xc xd y.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x; xb \\<in> filters;\n        X \\<subseteq> xb;\n        \\<forall>x. x \\<in> X *^ na \\<longrightarrow> x \\<in> xb;\n        xd \\<in> X; y \\<in> X *^ na\\<rbrakk>\n       \\<Longrightarrow> y \\<in> xb", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n xa xb na xd y.\n       \\<lbrakk>xa \\<in> X *^ n; xa \\<le> x; xb \\<in> filters;\n        X \\<subseteq> xb;\n        \\<forall>x. x \\<in> X *^ na \\<longrightarrow> x \\<in> xb;\n        xd \\<in> X; y \\<in> X *^ na\\<rbrakk>\n       \\<Longrightarrow> xd \\<in> xb", "by blast"], ["", "lemma ultrafilter_union:\n  \"ultrafilters = {F . F \\<in> filters \\<and> F \\<noteq> UNIV \\<and> (\\<forall> x . x \\<notin> F \\<longrightarrow> filterof (F \\<union> {x}) = UNIV)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ultrafilters =\n    {F \\<in> filters.\n     F \\<noteq> UNIV \\<and>\n     (\\<forall>x.\n         x \\<notin> F \\<longrightarrow> filterof (F \\<union> {x}) = UNIV)}", "apply (simp add: ultrafilters_def maximalfilters_def properfilters_def filterof_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {F \\<in> filters. F \\<noteq> UNIV} \\<inter>\n    {F \\<in> filters.\n     \\<forall>A.\n        A \\<in> filters \\<and> F \\<subseteq> A \\<longrightarrow>\n        A = F \\<or> A = UNIV} =\n    {F \\<in> filters.\n     F \\<noteq> UNIV \\<and>\n     (\\<forall>x.\n         x \\<notin> F \\<longrightarrow>\n         (\\<forall>xa.\n             xa \\<in> filters \\<and>\n             x \\<in> xa \\<and> F \\<subseteq> xa \\<longrightarrow>\n             xa = UNIV))}", "by auto"], ["", "lemma filterof_sub: \"F \\<in> filters \\<Longrightarrow> X \\<subseteq> F \\<Longrightarrow> filterof X \\<subseteq> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; X \\<subseteq> F\\<rbrakk>\n    \\<Longrightarrow> filterof X \\<subseteq> F", "apply (simp add: filterof_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; X \\<subseteq> F\\<rbrakk>\n    \\<Longrightarrow> \\<Inter> {F \\<in> filters. X \\<subseteq> F}\n                      \\<subseteq> F", "by blast"], ["", "lemma filterof_elem [simp]: \"x \\<in> X \\<Longrightarrow> x \\<in>  filterof X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> X \\<Longrightarrow> x \\<in> filterof X", "apply (simp add: filterof_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> X \\<Longrightarrow>\n    \\<forall>xa.\n       xa \\<in> filters \\<and> X \\<subseteq> xa \\<longrightarrow> x \\<in> xa", "by blast"], ["", "lemma [simp]: \"filterof X \\<in> filters\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterof X \\<in> filters", "apply (simp add: filters_def  prop_3_2_i)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x n xa. xa \\<in> X *^ n \\<and> xa \\<le> x) \\<and>\n    (\\<forall>a b.\n        (\\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a) \\<and>\n        (\\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b) \\<longrightarrow>\n        (\\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a * b)) \\<and>\n    (\\<forall>a b.\n        (\\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a) \\<and>\n        a \\<le> b \\<longrightarrow>\n        (\\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b))", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<exists>x n xa. xa \\<in> X *^ n \\<and> xa \\<le> x\n 2. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a * b\n 3. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b", "apply (rule_tac x = 1 in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> (1::'a)\n 2. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a * b\n 3. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b", "apply (rule_tac x = 0 in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<exists>x. x \\<in> X *^ 0 \\<and> x \\<le> (1::'a)\n 2. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a * b\n 3. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b", "apply (rule_tac x = 1 in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (1::'a) \\<in> X *^ 0 \\<and> (1::'a) \\<le> (1::'a)\n 2. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a * b\n 3. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b", "apply auto [1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> a * b\n 2. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b", "apply (rule_tac x = \"n + na\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            x \\<in> X *^ (n + na) \\<and> x \\<le> a * b\n 2. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b", "apply (rule_tac x = \"x * xa\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> X *^ (n + na) \\<and>\n                         x * xa \\<le> a * b\n 2. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> X *^ (n + na)\n 2. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<le> a * b\n 3. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b", "apply (unfold power_set_add)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> X *^ n ** X *^ na\n 2. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<le> a * b\n 3. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb\\<in>X *^ n.\n                            \\<exists>y\\<in>X *^ na. x * xa = xb * y\n 2. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<le> a * b\n 3. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b", "apply auto [1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<le> a * b\n 2. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b", "apply (rule_tac y = \"x * b\" in order_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<le> x * b\n 2. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x * b \\<le> a * b\n 3. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b", "apply (rule mult_left_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> xa \\<le> b\n 2. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x * b \\<le> a * b\n 3. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b n na x xa.\n       \\<lbrakk>x \\<in> X *^ n; x \\<le> a; xa \\<in> X *^ na;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x * b \\<le> a * b\n 2. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b", "apply (simp add: mult_right_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n x. x \\<in> X *^ n \\<and> x \\<le> b", "apply (rule_tac x = n in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<in> X *^ n \\<and> x \\<le> b", "apply (rule_tac x = x in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b n x.\n       \\<lbrakk>a \\<le> b; x \\<in> X *^ n; x \\<le> a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> X *^ n \\<and> x \\<le> b", "by simp"], ["", "lemma singleton_power [simp]: \"{a} *^ n = {b . b = a ^ n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a} *^ n = {b. b = a ^ n}", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. {a} *^ 0 = {b. b = a ^ 0}\n 2. \\<And>n.\n       {a} *^ n = {b. b = a ^ n} \\<Longrightarrow>\n       {a} *^ Suc n = {b. b = a ^ Suc n}", "apply auto [1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       {a} *^ n = {b. b = a ^ n} \\<Longrightarrow>\n       {a} *^ Suc n = {b. b = a ^ Suc n}", "by (simp add: times_set_def)"], ["", "lemma power_pair: \"x \\<in> {a, b} *^ n \\<Longrightarrow> \\<exists> i j . i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {a, b} *^ n \\<Longrightarrow>\n    \\<exists>i j. i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j", "apply (subgoal_tac \"\\<forall> x . x \\<in> {a, b} *^ n \\<longrightarrow> (\\<exists> i j . i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> {a, b} *^ n;\n     \\<forall>x.\n        x \\<in> {a, b} *^ n \\<longrightarrow>\n        (\\<exists>i j.\n            i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j.\n                         i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j\n 2. x \\<in> {a, b} *^ n \\<Longrightarrow>\n    \\<forall>x.\n       x \\<in> {a, b} *^ n \\<longrightarrow>\n       (\\<exists>i j. i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j)", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {a, b} *^ n \\<Longrightarrow>\n    \\<forall>x.\n       x \\<in> {a, b} *^ n \\<longrightarrow>\n       (\\<exists>i j. i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j)", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. True \\<Longrightarrow>\n    \\<forall>x.\n       x \\<in> {a, b} *^ n \\<longrightarrow>\n       (\\<exists>i j. i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j)", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. True \\<Longrightarrow>\n    \\<forall>x.\n       x \\<in> {a, b} *^ 0 \\<longrightarrow>\n       (\\<exists>i j. i + j = 0 \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j)\n 2. \\<And>n.\n       \\<lbrakk>True;\n        \\<forall>x.\n           x \\<in> {a, b} *^ n \\<longrightarrow>\n           (\\<exists>i j.\n               i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> {a, b} *^ Suc n \\<longrightarrow>\n                            (\\<exists>i j.\n                                i + j = Suc n \\<and>\n                                x \\<le> a ^ i \\<and> x \\<le> b ^ j)", "apply auto [1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>True;\n        \\<forall>x.\n           x \\<in> {a, b} *^ n \\<longrightarrow>\n           (\\<exists>i j.\n               i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> {a, b} *^ Suc n \\<longrightarrow>\n                            (\\<exists>i j.\n                                i + j = Suc n \\<and>\n                                x \\<le> a ^ i \\<and> x \\<le> b ^ j)", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>True;\n        \\<forall>x.\n           x \\<in> {a, b} *^ n \\<longrightarrow>\n           (\\<exists>i j.\n               i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j);\n        x \\<in> {a, b} *^ Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i j.\n                            i + j = Suc n \\<and>\n                            x \\<le> a ^ i \\<and> x \\<le> b ^ j", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<forall>x.\n                   x \\<in> {a, b} *^ n \\<longrightarrow>\n                   (\\<exists>i j.\n                       i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j);\n        (\\<exists>y\\<in>{a, b} *^ n. x = a * y) \\<or>\n        (\\<exists>y\\<in>{a, b} *^ n. x = b * y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i j.\n                            i + j = Suc n \\<and>\n                            x \\<le> a ^ i \\<and> x \\<le> b ^ j", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n x y.\n       \\<lbrakk>\\<forall>x.\n                   x \\<in> {a, b} *^ n \\<longrightarrow>\n                   (\\<exists>i j.\n                       i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j);\n        y \\<in> {a, b} *^ n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i j.\n                            i + j = Suc n \\<and>\n                            a * y \\<le> a ^ i \\<and> a * y \\<le> b ^ j\n 2. \\<And>n x y.\n       \\<lbrakk>\\<forall>x.\n                   x \\<in> {a, b} *^ n \\<longrightarrow>\n                   (\\<exists>i j.\n                       i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j);\n        y \\<in> {a, b} *^ n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i j.\n                            i + j = Suc n \\<and>\n                            b * y \\<le> a ^ i \\<and> b * y \\<le> b ^ j", "apply (drule_tac x = y in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n x y.\n       \\<lbrakk>y \\<in> {a, b} *^ n;\n        y \\<in> {a, b} *^ n \\<longrightarrow>\n        (\\<exists>i j.\n            i + j = n \\<and> y \\<le> a ^ i \\<and> y \\<le> b ^ j)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i j.\n                            i + j = Suc n \\<and>\n                            a * y \\<le> a ^ i \\<and> a * y \\<le> b ^ j\n 2. \\<And>n x y.\n       \\<lbrakk>\\<forall>x.\n                   x \\<in> {a, b} *^ n \\<longrightarrow>\n                   (\\<exists>i j.\n                       i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j);\n        y \\<in> {a, b} *^ n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i j.\n                            i + j = Suc n \\<and>\n                            b * y \\<le> a ^ i \\<and> b * y \\<le> b ^ j", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n x y i j.\n       \\<lbrakk>y \\<in> {a, b} *^ (i + j); y \\<le> a ^ i;\n        y \\<le> b ^ j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ia ja.\n                            ia + ja = Suc (i + j) \\<and>\n                            a * y \\<le> a ^ ia \\<and> a * y \\<le> b ^ ja\n 2. \\<And>n x y.\n       \\<lbrakk>\\<forall>x.\n                   x \\<in> {a, b} *^ n \\<longrightarrow>\n                   (\\<exists>i j.\n                       i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j);\n        y \\<in> {a, b} *^ n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i j.\n                            i + j = Suc n \\<and>\n                            b * y \\<le> a ^ i \\<and> b * y \\<le> b ^ j", "apply (rule_tac x = \"i + 1\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n x y i j.\n       \\<lbrakk>y \\<in> {a, b} *^ (i + j); y \\<le> a ^ i;\n        y \\<le> b ^ j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ja.\n                            i + 1 + ja = Suc (i + j) \\<and>\n                            a * y \\<le> a ^ (i + 1) \\<and>\n                            a * y \\<le> b ^ ja\n 2. \\<And>n x y.\n       \\<lbrakk>\\<forall>x.\n                   x \\<in> {a, b} *^ n \\<longrightarrow>\n                   (\\<exists>i j.\n                       i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j);\n        y \\<in> {a, b} *^ n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i j.\n                            i + j = Suc n \\<and>\n                            b * y \\<le> a ^ i \\<and> b * y \\<le> b ^ j", "apply (rule_tac x = \"j\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n x y i j.\n       \\<lbrakk>y \\<in> {a, b} *^ (i + j); y \\<le> a ^ i;\n        y \\<le> b ^ j\\<rbrakk>\n       \\<Longrightarrow> i + 1 + j = Suc (i + j) \\<and>\n                         a * y \\<le> a ^ (i + 1) \\<and> a * y \\<le> b ^ j\n 2. \\<And>n x y.\n       \\<lbrakk>\\<forall>x.\n                   x \\<in> {a, b} *^ n \\<longrightarrow>\n                   (\\<exists>i j.\n                       i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j);\n        y \\<in> {a, b} *^ n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i j.\n                            i + j = Suc n \\<and>\n                            b * y \\<le> a ^ i \\<and> b * y \\<le> b ^ j", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y i j.\n       \\<lbrakk>y \\<in> {a, b} *^ (i + j); y \\<le> a ^ i;\n        y \\<le> b ^ j\\<rbrakk>\n       \\<Longrightarrow> a * y \\<le> b ^ j\n 2. \\<And>n x y.\n       \\<lbrakk>\\<forall>x.\n                   x \\<in> {a, b} *^ n \\<longrightarrow>\n                   (\\<exists>i j.\n                       i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j);\n        y \\<in> {a, b} *^ n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i j.\n                            i + j = Suc n \\<and>\n                            b * y \\<le> a ^ i \\<and> b * y \\<le> b ^ j", "apply (rule_tac y = y in order_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y i j.\n       \\<lbrakk>y \\<in> {a, b} *^ (i + j); y \\<le> a ^ i;\n        y \\<le> b ^ j\\<rbrakk>\n       \\<Longrightarrow> a * y \\<le> y\n 2. \\<And>y i j.\n       \\<lbrakk>y \\<in> {a, b} *^ (i + j); y \\<le> a ^ i;\n        y \\<le> b ^ j\\<rbrakk>\n       \\<Longrightarrow> y \\<le> b ^ j\n 3. \\<And>n x y.\n       \\<lbrakk>\\<forall>x.\n                   x \\<in> {a, b} *^ n \\<longrightarrow>\n                   (\\<exists>i j.\n                       i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j);\n        y \\<in> {a, b} *^ n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i j.\n                            i + j = Suc n \\<and>\n                            b * y \\<le> a ^ i \\<and> b * y \\<le> b ^ j", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n y.\n       \\<lbrakk>\\<forall>x.\n                   x \\<in> {a, b} *^ n \\<longrightarrow>\n                   (\\<exists>i j.\n                       i + j = n \\<and> x \\<le> a ^ i \\<and> x \\<le> b ^ j);\n        y \\<in> {a, b} *^ n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i j.\n                            i + j = Suc n \\<and>\n                            b * y \\<le> a ^ i \\<and> b * y \\<le> b ^ j", "apply (drule_tac x = y in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n y.\n       \\<lbrakk>y \\<in> {a, b} *^ n;\n        y \\<in> {a, b} *^ n \\<longrightarrow>\n        (\\<exists>i j.\n            i + j = n \\<and> y \\<le> a ^ i \\<and> y \\<le> b ^ j)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i j.\n                            i + j = Suc n \\<and>\n                            b * y \\<le> a ^ i \\<and> b * y \\<le> b ^ j", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n y i j.\n       \\<lbrakk>y \\<in> {a, b} *^ (i + j); y \\<le> a ^ i;\n        y \\<le> b ^ j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ia ja.\n                            ia + ja = Suc (i + j) \\<and>\n                            b * y \\<le> a ^ ia \\<and> b * y \\<le> b ^ ja", "apply (rule_tac x = \"i\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n y i j.\n       \\<lbrakk>y \\<in> {a, b} *^ (i + j); y \\<le> a ^ i;\n        y \\<le> b ^ j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ja.\n                            i + ja = Suc (i + j) \\<and>\n                            b * y \\<le> a ^ i \\<and> b * y \\<le> b ^ ja", "apply (rule_tac x = \"j+1\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n y i j.\n       \\<lbrakk>y \\<in> {a, b} *^ (i + j); y \\<le> a ^ i;\n        y \\<le> b ^ j\\<rbrakk>\n       \\<Longrightarrow> i + (j + 1) = Suc (i + j) \\<and>\n                         b * y \\<le> a ^ i \\<and> b * y \\<le> b ^ (j + 1)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y i j.\n       \\<lbrakk>y \\<in> {a, b} *^ (i + j); y \\<le> a ^ i;\n        y \\<le> b ^ j\\<rbrakk>\n       \\<Longrightarrow> b * y \\<le> a ^ i", "apply (rule_tac y = y in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y i j.\n       \\<lbrakk>y \\<in> {a, b} *^ (i + j); y \\<le> a ^ i;\n        y \\<le> b ^ j\\<rbrakk>\n       \\<Longrightarrow> b * y \\<le> y\n 2. \\<And>y i j.\n       \\<lbrakk>y \\<in> {a, b} *^ (i + j); y \\<le> a ^ i;\n        y \\<le> b ^ j\\<rbrakk>\n       \\<Longrightarrow> y \\<le> a ^ i", "by simp_all"], ["", "lemma filterof_supremum:\n  \"c \\<in> supremum {a, b} \\<Longrightarrow> filterof {c} = filterof {a} \\<inter> filterof {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> supremum {a, b} \\<Longrightarrow>\n    filterof {c} = filterof {a} \\<inter> filterof {b}", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {a}\n 2. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {b}\n 3. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {a};\n        x \\<in> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply (cut_tac X = \"{c}\" and F = \"filterof {a}\" in filterof_sub)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c}\\<rbrakk>\n       \\<Longrightarrow> filterof {a} \\<in> filters\n 2. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c}\\<rbrakk>\n       \\<Longrightarrow> {c} \\<subseteq> filterof {a}\n 3. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c};\n        filterof {c} \\<subseteq> filterof {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {a}\n 4. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {b}\n 5. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {a};\n        x \\<in> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply simp_all"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c}\\<rbrakk>\n       \\<Longrightarrow> c \\<in> filterof {a}\n 2. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c};\n        filterof {c} \\<subseteq> filterof {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {a}\n 3. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {b}\n 4. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {a};\n        x \\<in> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply (simp add: supremum_def upper_bound_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>a \\<le> c \\<and>\n                b \\<le> c \\<and>\n                (\\<forall>x.\n                    a \\<le> x \\<and> b \\<le> x \\<longrightarrow> c \\<le> x);\n        x \\<in> filterof {c}\\<rbrakk>\n       \\<Longrightarrow> c \\<in> filterof {a}\n 2. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c};\n        filterof {c} \\<subseteq> filterof {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {a}\n 3. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {b}\n 4. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {a};\n        x \\<in> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> filterof {c}; a \\<le> c; b \\<le> c;\n        \\<forall>x.\n           a \\<le> x \\<and> b \\<le> x \\<longrightarrow> c \\<le> x\\<rbrakk>\n       \\<Longrightarrow> c \\<in> filterof {a}\n 2. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c};\n        filterof {c} \\<subseteq> filterof {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {a}\n 3. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {b}\n 4. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {a};\n        x \\<in> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply (rule_tac  a = a in filter_ii)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> filterof {c}; a \\<le> c; b \\<le> c;\n        \\<forall>x.\n           a \\<le> x \\<and> b \\<le> x \\<longrightarrow> c \\<le> x\\<rbrakk>\n       \\<Longrightarrow> filterof {a} \\<in> filters\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> filterof {c}; a \\<le> c; b \\<le> c;\n        \\<forall>x.\n           a \\<le> x \\<and> b \\<le> x \\<longrightarrow> c \\<le> x\\<rbrakk>\n       \\<Longrightarrow> a \\<in> filterof {a}\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> filterof {c}; a \\<le> c; b \\<le> c;\n        \\<forall>x.\n           a \\<le> x \\<and> b \\<le> x \\<longrightarrow> c \\<le> x\\<rbrakk>\n       \\<Longrightarrow> a \\<le> c\n 4. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c};\n        filterof {c} \\<subseteq> filterof {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {a}\n 5. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {b}\n 6. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {a};\n        x \\<in> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c};\n        filterof {c} \\<subseteq> filterof {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {a}\n 2. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {b}\n 3. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {a};\n        x \\<in> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {b}\n 2. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {a};\n        x \\<in> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply (cut_tac X = \"{c}\" and F = \"filterof {b}\" in filterof_sub)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c}\\<rbrakk>\n       \\<Longrightarrow> filterof {b} \\<in> filters\n 2. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c}\\<rbrakk>\n       \\<Longrightarrow> {c} \\<subseteq> filterof {b}\n 3. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c};\n        filterof {c} \\<subseteq> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {b}\n 4. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {a};\n        x \\<in> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c}\\<rbrakk>\n       \\<Longrightarrow> c \\<in> filterof {b}\n 2. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c};\n        filterof {c} \\<subseteq> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {b}\n 3. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {a};\n        x \\<in> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply (simp add: supremum_def upper_bound_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>a \\<le> c \\<and>\n                b \\<le> c \\<and>\n                (\\<forall>x.\n                    a \\<le> x \\<and> b \\<le> x \\<longrightarrow> c \\<le> x);\n        x \\<in> filterof {c}\\<rbrakk>\n       \\<Longrightarrow> c \\<in> filterof {b}\n 2. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c};\n        filterof {c} \\<subseteq> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {b}\n 3. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {a};\n        x \\<in> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> filterof {c}; a \\<le> c; b \\<le> c;\n        \\<forall>x.\n           a \\<le> x \\<and> b \\<le> x \\<longrightarrow> c \\<le> x\\<rbrakk>\n       \\<Longrightarrow> c \\<in> filterof {b}\n 2. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c};\n        filterof {c} \\<subseteq> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {b}\n 3. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {a};\n        x \\<in> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply (rule_tac  a = b in filter_ii)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> filterof {c}; a \\<le> c; b \\<le> c;\n        \\<forall>x.\n           a \\<le> x \\<and> b \\<le> x \\<longrightarrow> c \\<le> x\\<rbrakk>\n       \\<Longrightarrow> filterof {b} \\<in> filters\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> filterof {c}; a \\<le> c; b \\<le> c;\n        \\<forall>x.\n           a \\<le> x \\<and> b \\<le> x \\<longrightarrow> c \\<le> x\\<rbrakk>\n       \\<Longrightarrow> b \\<in> filterof {b}\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> filterof {c}; a \\<le> c; b \\<le> c;\n        \\<forall>x.\n           a \\<le> x \\<and> b \\<le> x \\<longrightarrow> c \\<le> x\\<rbrakk>\n       \\<Longrightarrow> b \\<le> c\n 4. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c};\n        filterof {c} \\<subseteq> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {b}\n 5. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {a};\n        x \\<in> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {c};\n        filterof {c} \\<subseteq> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {b}\n 2. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {a};\n        x \\<in> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; x \\<in> filterof {a};\n        x \\<in> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply (subst (asm) prop_3_2_i)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b};\n        x \\<in> {aa. \\<exists>n x. x \\<in> {a} *^ n \\<and> x \\<le> aa};\n        x \\<in> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; \\<exists>n. a ^ n \\<le> x;\n        x \\<in> filterof {b}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply (subst (asm) prop_3_2_i)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; \\<exists>n. a ^ n \\<le> x;\n        x \\<in> {a. \\<exists>n x.\n                       x \\<in> {b} *^ n \\<and> x \\<le> a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>c \\<in> supremum {a, b}; \\<exists>n. a ^ n \\<le> x;\n        \\<exists>n. b ^ n \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n na.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x;\n        b ^ na \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply (cut_tac A = \"{a, b}\" and a = c and b = x and n = \"n + na\" in  lemma_2_8_ii1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x n na.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x;\n        b ^ na \\<le> x\\<rbrakk>\n       \\<Longrightarrow> c \\<in> supremum {a, b}\n 2. \\<And>x n na.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) `\n                ({a, b} *^ (n + na)))\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n na.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) `\n                ({a, b} *^ (n + na)))\\<rbrakk>\n       \\<Longrightarrow> x \\<in> filterof {c}", "apply (subst prop_3_2_i)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n na.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) `\n                ({a, b} *^ (n + na)))\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a. \\<exists>n x.\n  x \\<in> {c} *^ n \\<and> x \\<le> a}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n na.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) `\n                ({a, b} *^ (n + na)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. c ^ n \\<le> x", "apply (rule_tac x = \"n + na\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n na.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) `\n                ({a, b} *^ (n + na)))\\<rbrakk>\n       \\<Longrightarrow> c ^ (n + na) \\<le> x", "apply (subgoal_tac \"infimum ((\\<lambda>xa::'a. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na))) = {1}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x n na.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        infimum\n         ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na))) =\n        {1::'a}\\<rbrakk>\n       \\<Longrightarrow> c ^ (n + na) \\<le> x\n 2. \\<And>x n na.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) `\n                ({a, b} *^ (n + na)))\\<rbrakk>\n       \\<Longrightarrow> infimum\n                          ((\\<lambda>xa. xa r\\<rightarrow> x) `\n                           ({a, b} *^ (n + na))) =\n                         {1::'a}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x n na.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x = (1::'a);\n        infimum\n         ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na))) =\n        {1::'a}\\<rbrakk>\n       \\<Longrightarrow> c ^ (n + na) \\<le> x\n 2. \\<And>x n na.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) `\n                ({a, b} *^ (n + na)))\\<rbrakk>\n       \\<Longrightarrow> infimum\n                          ((\\<lambda>xa. xa r\\<rightarrow> x) `\n                           ({a, b} *^ (n + na))) =\n                         {1::'a}", "apply (simp add: right_lesseq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n na.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) `\n                ({a, b} *^ (n + na)))\\<rbrakk>\n       \\<Longrightarrow> infimum\n                          ((\\<lambda>xa. xa r\\<rightarrow> x) `\n                           ({a, b} *^ (n + na))) =\n                         {1::'a}", "apply (subst infimum_unique)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n na.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) `\n                ({a, b} *^ (n + na)))\\<rbrakk>\n       \\<Longrightarrow> (1::'a)\n                         \\<in> infimum\n                                ((\\<lambda>xa. xa r\\<rightarrow> x) `\n                                 ({a, b} *^ (n + na)))", "apply (subst infimum_def lower_bound_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n na.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) `\n                ({a, b} *^ (n + na)))\\<rbrakk>\n       \\<Longrightarrow> (1::'a)\n                         \\<in> {aa \\<in> lower_bound\n    ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na))).\n                                \\<forall>x\n   \\<in>lower_bound\n         ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na))).\n                                   x \\<le> aa}", "apply (subst lower_bound_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n na.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) `\n                ({a, b} *^ (n + na)))\\<rbrakk>\n       \\<Longrightarrow> (1::'a)\n                         \\<in> {aa \\<in> {aa.\n    Ball ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)))\n     ((\\<le>) aa)}.\n                                \\<forall>x\n   \\<in>lower_bound\n         ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na))).\n                                   x \\<le> aa}", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x n na xa xaa.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        xaa \\<in> {a, b} *^ (n + na)\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<le> xaa r\\<rightarrow> x\n 2. \\<And>x n na xa.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        xa \\<in> lower_bound\n                  ((\\<lambda>xa. xa r\\<rightarrow> x) `\n                   ({a, b} *^ (n + na)))\\<rbrakk>\n       \\<Longrightarrow> xa \\<le> (1::'a)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n na xaa.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        xaa \\<in> {a, b} *^ (n + na)\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<le> xaa r\\<rightarrow> x", "apply (drule power_pair)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n na xaa.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        \\<exists>i j.\n           i + j = n + na \\<and>\n           xaa \\<le> a ^ i \\<and> xaa \\<le> b ^ j\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<le> xaa r\\<rightarrow> x", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<le> xaa r\\<rightarrow> x", "apply (subst right_residual [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j\\<rbrakk>\n       \\<Longrightarrow> xaa * (1::'a) \\<le> x", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j\\<rbrakk>\n       \\<Longrightarrow> xaa \\<le> x", "apply (case_tac \"n \\<le> i\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j; n \\<le> i\\<rbrakk>\n       \\<Longrightarrow> xaa \\<le> x\n 2. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j;\n        \\<not> n \\<le> i\\<rbrakk>\n       \\<Longrightarrow> xaa \\<le> x", "apply (rule_tac y = \"a ^ n\" in order_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j; n \\<le> i\\<rbrakk>\n       \\<Longrightarrow> xaa \\<le> a ^ n\n 2. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j; n \\<le> i\\<rbrakk>\n       \\<Longrightarrow> a ^ n \\<le> x\n 3. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j;\n        \\<not> n \\<le> i\\<rbrakk>\n       \\<Longrightarrow> xaa \\<le> x", "apply (rule_tac y = \"a ^ i\" in order_trans)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j; n \\<le> i\\<rbrakk>\n       \\<Longrightarrow> xaa \\<le> a ^ i\n 2. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j; n \\<le> i\\<rbrakk>\n       \\<Longrightarrow> a ^ i \\<le> a ^ n\n 3. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j; n \\<le> i\\<rbrakk>\n       \\<Longrightarrow> a ^ n \\<le> x\n 4. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j;\n        \\<not> n \\<le> i\\<rbrakk>\n       \\<Longrightarrow> xaa \\<le> x", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j;\n        \\<not> n \\<le> i\\<rbrakk>\n       \\<Longrightarrow> xaa \\<le> x", "apply (subgoal_tac \"na \\<le> j\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j; \\<not> n \\<le> i;\n        na \\<le> j\\<rbrakk>\n       \\<Longrightarrow> xaa \\<le> x\n 2. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j;\n        \\<not> n \\<le> i\\<rbrakk>\n       \\<Longrightarrow> na \\<le> j", "apply (rule_tac y = \"b ^ na\" in order_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j; \\<not> n \\<le> i;\n        na \\<le> j\\<rbrakk>\n       \\<Longrightarrow> xaa \\<le> b ^ na\n 2. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j; \\<not> n \\<le> i;\n        na \\<le> j\\<rbrakk>\n       \\<Longrightarrow> b ^ na \\<le> x\n 3. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j;\n        \\<not> n \\<le> i\\<rbrakk>\n       \\<Longrightarrow> na \\<le> j", "apply (rule_tac y = \"b ^ j\" in order_trans)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j; \\<not> n \\<le> i;\n        na \\<le> j\\<rbrakk>\n       \\<Longrightarrow> xaa \\<le> b ^ j\n 2. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j; \\<not> n \\<le> i;\n        na \\<le> j\\<rbrakk>\n       \\<Longrightarrow> b ^ j \\<le> b ^ na\n 3. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j; \\<not> n \\<le> i;\n        na \\<le> j\\<rbrakk>\n       \\<Longrightarrow> b ^ na \\<le> x\n 4. \\<And>x n na xaa i j.\n       \\<lbrakk>c \\<in> supremum {a, b}; a ^ n \\<le> x; b ^ na \\<le> x;\n        c ^ (n + na) r\\<rightarrow> x\n        \\<in> infimum\n               ((\\<lambda>xa. xa r\\<rightarrow> x) ` ({a, b} *^ (n + na)));\n        i + j = n + na; xaa \\<le> a ^ i; xaa \\<le> b ^ j;\n        \\<not> n \\<le> i\\<rbrakk>\n       \\<Longrightarrow> na \\<le> j", "by simp_all"], ["", "definition \"d1 a b = (a l\\<rightarrow> b) * (b l\\<rightarrow> a)\""], ["", "definition \"d2 a b = (a r\\<rightarrow> b) * (b r\\<rightarrow> a)\""], ["", "definition \"d3 a b = d1 b a\""], ["", "definition \"d4 a b = d2 b a\""], ["", "lemma [simp]: \"(a * b = 1) = (a = 1 \\<and> b = 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * b = (1::'a)) = (a = (1::'a) \\<and> b = (1::'a))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a * b = (1::'a) \\<Longrightarrow> a = (1::'a) \\<and> b = (1::'a)\n 2. a = (1::'a) \\<and> b = (1::'a) \\<Longrightarrow> a * b = (1::'a)", "apply (rule conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. a * b = (1::'a) \\<Longrightarrow> a = (1::'a)\n 2. a * b = (1::'a) \\<Longrightarrow> b = (1::'a)\n 3. a = (1::'a) \\<and> b = (1::'a) \\<Longrightarrow> a * b = (1::'a)", "apply (rule antisym)"], ["proof (prove)\ngoal (4 subgoals):\n 1. a * b = (1::'a) \\<Longrightarrow> a \\<le> (1::'a)\n 2. a * b = (1::'a) \\<Longrightarrow> (1::'a) \\<le> a\n 3. a * b = (1::'a) \\<Longrightarrow> b = (1::'a)\n 4. a = (1::'a) \\<and> b = (1::'a) \\<Longrightarrow> a * b = (1::'a)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. a * b = (1::'a) \\<Longrightarrow> (1::'a) \\<le> a\n 2. a * b = (1::'a) \\<Longrightarrow> b = (1::'a)\n 3. a = (1::'a) \\<and> b = (1::'a) \\<Longrightarrow> a * b = (1::'a)", "apply (rule_tac y = \"a*b\" in order_trans)"], ["proof (prove)\ngoal (4 subgoals):\n 1. a * b = (1::'a) \\<Longrightarrow> (1::'a) \\<le> a * b\n 2. a * b = (1::'a) \\<Longrightarrow> a * b \\<le> a\n 3. a * b = (1::'a) \\<Longrightarrow> b = (1::'a)\n 4. a = (1::'a) \\<and> b = (1::'a) \\<Longrightarrow> a * b = (1::'a)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. a * b = (1::'a) \\<Longrightarrow> a * b \\<le> a\n 2. a * b = (1::'a) \\<Longrightarrow> b = (1::'a)\n 3. a = (1::'a) \\<and> b = (1::'a) \\<Longrightarrow> a * b = (1::'a)", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. True \\<Longrightarrow> a * b \\<le> a\n 2. a * b = (1::'a) \\<Longrightarrow> b = (1::'a)\n 3. a = (1::'a) \\<and> b = (1::'a) \\<Longrightarrow> a * b = (1::'a)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. a * b = (1::'a) \\<Longrightarrow> b = (1::'a)\n 2. a = (1::'a) \\<and> b = (1::'a) \\<Longrightarrow> a * b = (1::'a)", "apply (rule antisym)"], ["proof (prove)\ngoal (3 subgoals):\n 1. a * b = (1::'a) \\<Longrightarrow> b \\<le> (1::'a)\n 2. a * b = (1::'a) \\<Longrightarrow> (1::'a) \\<le> b\n 3. a = (1::'a) \\<and> b = (1::'a) \\<Longrightarrow> a * b = (1::'a)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. a * b = (1::'a) \\<Longrightarrow> (1::'a) \\<le> b\n 2. a = (1::'a) \\<and> b = (1::'a) \\<Longrightarrow> a * b = (1::'a)", "apply (rule_tac y = \"a*b\" in order_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. a * b = (1::'a) \\<Longrightarrow> (1::'a) \\<le> a * b\n 2. a * b = (1::'a) \\<Longrightarrow> a * b \\<le> b\n 3. a = (1::'a) \\<and> b = (1::'a) \\<Longrightarrow> a * b = (1::'a)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. a * b = (1::'a) \\<Longrightarrow> a * b \\<le> b\n 2. a = (1::'a) \\<and> b = (1::'a) \\<Longrightarrow> a * b = (1::'a)", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. True \\<Longrightarrow> a * b \\<le> b\n 2. a = (1::'a) \\<and> b = (1::'a) \\<Longrightarrow> a * b = (1::'a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = (1::'a) \\<and> b = (1::'a) \\<Longrightarrow> a * b = (1::'a)", "by simp"], ["", "lemma lemma_3_5_i_1: \"(d1 a b = 1) = (a = b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d1 a b = (1::'a)) = (a = b)", "apply (simp add: d1_def left_lesseq [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<le> b \\<and> b \\<le> a) = (a = b)", "by auto"], ["", "lemma lemma_3_5_i_2: \"(d2 a b = 1) = (a = b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d2 a b = (1::'a)) = (a = b)", "apply (simp add: d2_def right_lesseq [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<le> b \\<and> b \\<le> a) = (a = b)", "by auto"], ["", "lemma lemma_3_5_i_3: \"(d3 a b = 1) = (a = b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d3 a b = (1::'a)) = (a = b)", "apply (simp add: d3_def lemma_3_5_i_1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (b = a) = (a = b)", "by auto"], ["", "lemma lemma_3_5_i_4: \"(d4 a b = 1) = (a = b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d4 a b = (1::'a)) = (a = b)", "apply (simp add: d4_def lemma_3_5_i_2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (b = a) = (a = b)", "by auto"], ["", "lemma lemma_3_5_ii_1 [simp]: \"d1 a a = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d1 a a = (1::'a)", "apply (subst lemma_3_5_i_1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = a", "by simp"], ["", "lemma lemma_3_5_ii_2 [simp]: \"d2 a a = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d2 a a = (1::'a)", "apply (subst lemma_3_5_i_2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = a", "by simp"], ["", "lemma lemma_3_5_ii_3 [simp]: \"d3 a a = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d3 a a = (1::'a)", "apply (subst lemma_3_5_i_3)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = a", "by simp"], ["", "lemma lemma_3_5_ii_4 [simp]: \"d4 a a = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d4 a a = (1::'a)", "apply (subst lemma_3_5_i_4)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = a", "by simp"], ["", "lemma [simp]: \"(a l\\<rightarrow> 1) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a l\\<rightarrow> (1::'a) = (1::'a)", "by (simp add: left_lesseq [THEN sym])"], ["", "end"], ["", "context pseudo_hoop_algebra begin"], ["", "lemma [simp]: \"(a r\\<rightarrow> 1) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a r\\<rightarrow> (1::'a) = (1::'a)", "by simp"], ["", "lemma lemma_3_5_iii_1 [simp]: \"d1 a 1 = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d1 a (1::'a) = a", "by (simp add: d1_def)"], ["", "lemma lemma_3_5_iii_2 [simp]: \"d2 a 1 = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d2 a (1::'a) = a", "by (simp add: d2_def)"], ["", "lemma lemma_3_5_iii_3 [simp]: \"d3 a 1 = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d3 a (1::'a) = a", "by (simp add: d3_def d1_def)"], ["", "lemma lemma_3_5_iii_4 [simp]: \"d4 a 1 = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d4 a (1::'a) = a", "by (simp add: d4_def d2_def)"], ["", "lemma lemma_3_5_iv_1: \"(d1 b c) * (d1 a b) * (d1 b c) \\<le> d1 a c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d1 b c * d1 a b * d1 b c \\<le> d1 a c", "apply (simp add: d1_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b))\n    \\<le> (a l\\<rightarrow> c) * (c l\\<rightarrow> a)", "apply (subgoal_tac \"(b l\\<rightarrow> c) * (c l\\<rightarrow> b) * ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) * ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) = \n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b)) * ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b))\n    \\<le> (a l\\<rightarrow> c) * (c l\\<rightarrow> a)\n 2. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b))\n    \\<le> (a l\\<rightarrow> c) * (c l\\<rightarrow> a)\n 2. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b))", "apply (rule mult_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b)\n    \\<le> a l\\<rightarrow> c\n 2. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b)\n    \\<le> c l\\<rightarrow> a\n 3. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b))", "apply (rule_tac y = \"(b l\\<rightarrow> c) * (a l\\<rightarrow> b)\" in order_trans)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b)\n    \\<le> (b l\\<rightarrow> c) * (a l\\<rightarrow> b)\n 2. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> c) * (a l\\<rightarrow> b) \\<le> a l\\<rightarrow> c\n 3. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b)\n    \\<le> c l\\<rightarrow> a\n 4. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b))", "apply (rule mult_right_mono)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) \\<le> b l\\<rightarrow> c\n 2. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> c) * (a l\\<rightarrow> b) \\<le> a l\\<rightarrow> c\n 3. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b)\n    \\<le> c l\\<rightarrow> a\n 4. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b))", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> c) * (a l\\<rightarrow> b) \\<le> a l\\<rightarrow> c\n 2. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b)\n    \\<le> c l\\<rightarrow> a\n 3. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b))", "apply (simp add: lemma_2_5_14)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b)\n    \\<le> c l\\<rightarrow> a\n 2. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b))", "apply (rule_tac y = \"(b l\\<rightarrow> a) * (c l\\<rightarrow> b)\" in order_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b)\n    \\<le> (b l\\<rightarrow> a) * (c l\\<rightarrow> b)\n 2. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> a) * (c l\\<rightarrow> b) \\<le> c l\\<rightarrow> a\n 3. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b))", "apply (rule mult_right_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> a) * (b l\\<rightarrow> c) \\<le> b l\\<rightarrow> a\n 2. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> a) * (c l\\<rightarrow> b) \\<le> c l\\<rightarrow> a\n 3. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) *\n     (c l\\<rightarrow> b)) \\<Longrightarrow>\n    (b l\\<rightarrow> a) * (c l\\<rightarrow> b) \\<le> c l\\<rightarrow> a\n 2. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b))", "apply (simp add: lemma_2_5_14)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (b l\\<rightarrow> c) * (c l\\<rightarrow> b) *\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a)) *\n    ((b l\\<rightarrow> c) * (c l\\<rightarrow> b)) =\n    (b l\\<rightarrow> c) * (c l\\<rightarrow> b) * (a l\\<rightarrow> b) *\n    ((b l\\<rightarrow> a) * (b l\\<rightarrow> c) * (c l\\<rightarrow> b))", "by (simp add: mult.assoc)"], ["", "lemma lemma_3_5_iv_2: \"(d2 a b) * (d2 b c) * (d2 a b) \\<le> d2 a c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d2 a b * d2 b c * d2 a b \\<le> d2 a c", "apply (simp add: d2_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a))\n    \\<le> (a r\\<rightarrow> c) * (c r\\<rightarrow> a)", "apply (subgoal_tac \"(a r\\<rightarrow> b) * (b r\\<rightarrow> a) * ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) * ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) = \n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c)) * ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a))\n    \\<le> (a r\\<rightarrow> c) * (c r\\<rightarrow> a)\n 2. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a))\n    \\<le> (a r\\<rightarrow> c) * (c r\\<rightarrow> a)\n 2. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a))", "apply (rule mult_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c)\n    \\<le> a r\\<rightarrow> c\n 2. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a)\n    \\<le> c r\\<rightarrow> a\n 3. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a))", "apply (rule_tac y = \"(a r\\<rightarrow> b) * (b r\\<rightarrow> c)\" in order_trans)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c)\n    \\<le> (a r\\<rightarrow> b) * (b r\\<rightarrow> c)\n 2. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> c) \\<le> a r\\<rightarrow> c\n 3. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a)\n    \\<le> c r\\<rightarrow> a\n 4. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a))", "apply (rule mult_right_mono)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<le> a r\\<rightarrow> b\n 2. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> c) \\<le> a r\\<rightarrow> c\n 3. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a)\n    \\<le> c r\\<rightarrow> a\n 4. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a))", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> c) \\<le> a r\\<rightarrow> c\n 2. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a)\n    \\<le> c r\\<rightarrow> a\n 3. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a))", "apply (simp add: lemma_2_5_15)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a)\n    \\<le> c r\\<rightarrow> a\n 2. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a))", "apply (rule_tac y = \"(c r\\<rightarrow> b) * (b r\\<rightarrow> a)\" in order_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a)\n    \\<le> (c r\\<rightarrow> b) * (b r\\<rightarrow> a)\n 2. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (c r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<le> c r\\<rightarrow> a\n 3. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a))", "apply (rule mult_right_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (c r\\<rightarrow> b) * (a r\\<rightarrow> b) \\<le> c r\\<rightarrow> b\n 2. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (c r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<le> c r\\<rightarrow> a\n 3. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) *\n     (b r\\<rightarrow> a)) \\<Longrightarrow>\n    (c r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<le> c r\\<rightarrow> a\n 2. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a))", "apply (simp add: lemma_2_5_15)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a r\\<rightarrow> b) * (b r\\<rightarrow> a) *\n    ((b r\\<rightarrow> c) * (c r\\<rightarrow> b)) *\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a)) =\n    (a r\\<rightarrow> b) * (b r\\<rightarrow> a) * (b r\\<rightarrow> c) *\n    ((c r\\<rightarrow> b) * (a r\\<rightarrow> b) * (b r\\<rightarrow> a))", "by (simp add: mult.assoc)"], ["", "lemma lemma_3_5_iv_3: \"(d3 a b) * (d3 b c) * (d3 a b) \\<le> d3 a c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d3 a b * d3 b c * d3 a b \\<le> d3 a c", "by (simp add: d3_def lemma_3_5_iv_1)"], ["", "lemma lemma_3_5_iv_4: \"(d4 b c) * (d4 a b) * (d4 b c) \\<le> d4 a c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d4 b c * d4 a b * d4 b c \\<le> d4 a c", "by (simp add: d4_def lemma_3_5_iv_2)"], ["", "definition\n  \"cong_r F a b \\<equiv> d1 a b \\<in> F\""], ["", "definition\n  \"cong_l F a b \\<equiv> d2 a b \\<in> F\""], ["", "lemma cong_r_filter: \"F \\<in> filters \\<Longrightarrow> (cong_r F a b) = (a l\\<rightarrow> b \\<in> F \\<and> b l\\<rightarrow> a \\<in> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow>\n    cong_r F a b =\n    (a l\\<rightarrow> b \\<in> F \\<and> b l\\<rightarrow> a \\<in> F)", "apply (simp add: cong_r_def d1_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow>\n    ((a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F) =\n    (a l\\<rightarrow> b \\<in> F \\<and> b l\\<rightarrow> a \\<in> F)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters;\n     (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a l\\<rightarrow> b \\<in> F\n 2. \\<lbrakk>F \\<in> filters;\n     (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> b l\\<rightarrow> a \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F", "apply (rule filter_ii)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>F \\<in> filters;\n     (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters;\n     (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> ?a3 \\<in> F\n 3. \\<lbrakk>F \\<in> filters;\n     (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> ?a3 \\<le> a l\\<rightarrow> b\n 4. \\<lbrakk>F \\<in> filters;\n     (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> b l\\<rightarrow> a \\<in> F\n 5. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters;\n     (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a l\\<rightarrow> b) * (b l\\<rightarrow> a)\n                      \\<le> a l\\<rightarrow> b\n 2. \\<lbrakk>F \\<in> filters;\n     (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> b l\\<rightarrow> a \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters;\n     (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> b l\\<rightarrow> a \\<in> F\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F", "apply (rule filter_ii)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>F \\<in> filters;\n     (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters;\n     (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> ?a7 \\<in> F\n 3. \\<lbrakk>F \\<in> filters;\n     (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> ?a7 \\<le> b l\\<rightarrow> a\n 4. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters;\n     (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a l\\<rightarrow> b) * (b l\\<rightarrow> a)\n                      \\<le> b l\\<rightarrow> a\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a l\\<rightarrow> b) * (b l\\<rightarrow> a) \\<in> F", "by (simp add: filter_i)"], ["", "lemma cong_r_symmetric: \"F \\<in> filters \\<Longrightarrow> (cong_r F a b) = (cong_r F b a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow> cong_r F a b = cong_r F b a", "apply (simp add: cong_r_filter)"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow>\n    (a l\\<rightarrow> b \\<in> F \\<and> b l\\<rightarrow> a \\<in> F) =\n    (b l\\<rightarrow> a \\<in> F \\<and> a l\\<rightarrow> b \\<in> F)", "by blast"], ["", "lemma cong_r_d3: \"F \\<in> filters \\<Longrightarrow> (cong_r F a b) = (d3 a b \\<in> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow> cong_r F a b = (d3 a b \\<in> F)", "apply (simp add: d3_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow> cong_r F a b = (d1 b a \\<in> F)", "apply (subst cong_r_symmetric)"], ["proof (prove)\ngoal (2 subgoals):\n 1. F \\<in> filters \\<Longrightarrow> F \\<in> filters\n 2. F \\<in> filters \\<Longrightarrow> cong_r F b a = (d1 b a \\<in> F)", "by (simp_all add: cong_r_def)"], ["", "lemma cong_l_filter: \"F \\<in> filters \\<Longrightarrow> (cong_l F a b) = (a r\\<rightarrow> b \\<in> F \\<and> b r\\<rightarrow> a \\<in> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow>\n    cong_l F a b =\n    (a r\\<rightarrow> b \\<in> F \\<and> b r\\<rightarrow> a \\<in> F)", "apply (simp add: cong_l_def d2_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow>\n    ((a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F) =\n    (a r\\<rightarrow> b \\<in> F \\<and> b r\\<rightarrow> a \\<in> F)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters;\n     (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a r\\<rightarrow> b \\<in> F\n 2. \\<lbrakk>F \\<in> filters;\n     (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> b r\\<rightarrow> a \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F", "apply (rule filter_ii)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>F \\<in> filters;\n     (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters;\n     (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> ?a3 \\<in> F\n 3. \\<lbrakk>F \\<in> filters;\n     (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> ?a3 \\<le> a r\\<rightarrow> b\n 4. \\<lbrakk>F \\<in> filters;\n     (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> b r\\<rightarrow> a \\<in> F\n 5. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters;\n     (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> a)\n                      \\<le> a r\\<rightarrow> b\n 2. \\<lbrakk>F \\<in> filters;\n     (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> b r\\<rightarrow> a \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters;\n     (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> b r\\<rightarrow> a \\<in> F\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F", "apply (rule filter_ii)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>F \\<in> filters;\n     (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters;\n     (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> ?a7 \\<in> F\n 3. \\<lbrakk>F \\<in> filters;\n     (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> ?a7 \\<le> b r\\<rightarrow> a\n 4. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters;\n     (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> a)\n                      \\<le> b r\\<rightarrow> a\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F", "by (simp add: filter_i)"], ["", "lemma cong_l_symmetric: \"F \\<in> filters \\<Longrightarrow> (cong_l F a b) = (cong_l F b a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow> cong_l F a b = cong_l F b a", "apply (simp add: cong_l_filter)"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow>\n    (a r\\<rightarrow> b \\<in> F \\<and> b r\\<rightarrow> a \\<in> F) =\n    (b r\\<rightarrow> a \\<in> F \\<and> a r\\<rightarrow> b \\<in> F)", "by blast"], ["", "lemma cong_l_d4: \"F \\<in> filters \\<Longrightarrow> (cong_l F a b) = (d4 a b \\<in> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow> cong_l F a b = (d4 a b \\<in> F)", "apply (simp add: d4_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow> cong_l F a b = (d2 b a \\<in> F)", "apply (subst cong_l_symmetric)"], ["proof (prove)\ngoal (2 subgoals):\n 1. F \\<in> filters \\<Longrightarrow> F \\<in> filters\n 2. F \\<in> filters \\<Longrightarrow> cong_l F b a = (d2 b a \\<in> F)", "by (simp_all add: cong_l_def)"], ["", "lemma cong_r_reflexive: \"F \\<in> filters \\<Longrightarrow> cong_r F a a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow> cong_r F a a", "by (simp add: cong_r_def)"], ["", "lemma cong_r_transitive: \"F \\<in> filters \\<Longrightarrow> cong_r F a b \\<Longrightarrow> cong_r F b c \\<Longrightarrow> cong_r F a c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; cong_r F a b; cong_r F b c\\<rbrakk>\n    \\<Longrightarrow> cong_r F a c", "apply (simp add: cong_r_filter)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters;\n     a l\\<rightarrow> b \\<in> F \\<and> b l\\<rightarrow> a \\<in> F;\n     b l\\<rightarrow> c \\<in> F \\<and> c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a l\\<rightarrow> c \\<in> F \\<and>\n                      c l\\<rightarrow> a \\<in> F", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a l\\<rightarrow> c \\<in> F\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> c l\\<rightarrow> a \\<in> F", "apply (rule_tac a = \"(b l\\<rightarrow> c) * (a l\\<rightarrow> b)\" in filter_ii)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b l\\<rightarrow> c) * (a l\\<rightarrow> b) \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b l\\<rightarrow> c) * (a l\\<rightarrow> b)\n                      \\<le> a l\\<rightarrow> c\n 4. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> c l\\<rightarrow> a \\<in> F", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b l\\<rightarrow> c) * (a l\\<rightarrow> b) \\<in> F\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b l\\<rightarrow> c) * (a l\\<rightarrow> b)\n                      \\<le> a l\\<rightarrow> c\n 3. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> c l\\<rightarrow> a \\<in> F", "apply (rule filter_i)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> b l\\<rightarrow> c \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a l\\<rightarrow> b \\<in> F\n 4. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b l\\<rightarrow> c) * (a l\\<rightarrow> b)\n                      \\<le> a l\\<rightarrow> c\n 5. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> c l\\<rightarrow> a \\<in> F", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b l\\<rightarrow> c) * (a l\\<rightarrow> b)\n                      \\<le> a l\\<rightarrow> c\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> c l\\<rightarrow> a \\<in> F", "apply (simp add: lemma_2_5_14)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> c l\\<rightarrow> a \\<in> F", "apply (rule_tac a = \"(b l\\<rightarrow> a) * (c l\\<rightarrow> b)\" in filter_ii)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b l\\<rightarrow> a) * (c l\\<rightarrow> b) \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b l\\<rightarrow> a) * (c l\\<rightarrow> b)\n                      \\<le> c l\\<rightarrow> a", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b l\\<rightarrow> a) * (c l\\<rightarrow> b) \\<in> F\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b l\\<rightarrow> a) * (c l\\<rightarrow> b)\n                      \\<le> c l\\<rightarrow> a", "apply (rule filter_i)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> b l\\<rightarrow> a \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> c l\\<rightarrow> b \\<in> F\n 4. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b l\\<rightarrow> a) * (c l\\<rightarrow> b)\n                      \\<le> c l\\<rightarrow> a", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; b l\\<rightarrow> c \\<in> F;\n     c l\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b l\\<rightarrow> a) * (c l\\<rightarrow> b)\n                      \\<le> c l\\<rightarrow> a", "by (simp add: lemma_2_5_14)"], ["", "lemma cong_l_reflexive: \"F \\<in> filters \\<Longrightarrow> cong_l F a a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow> cong_l F a a", "by (simp add: cong_l_def)"], ["", "lemma cong_l_transitive: \"F \\<in> filters \\<Longrightarrow> cong_l F a b \\<Longrightarrow> cong_l F b c \\<Longrightarrow> cong_l F a c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; cong_l F a b; cong_l F b c\\<rbrakk>\n    \\<Longrightarrow> cong_l F a c", "apply (simp add: cong_l_filter)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters;\n     a r\\<rightarrow> b \\<in> F \\<and> b r\\<rightarrow> a \\<in> F;\n     b r\\<rightarrow> c \\<in> F \\<and> c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a r\\<rightarrow> c \\<in> F \\<and>\n                      c r\\<rightarrow> a \\<in> F", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a r\\<rightarrow> c \\<in> F\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> c r\\<rightarrow> a \\<in> F", "apply (rule_tac a = \"(a r\\<rightarrow> b) * (b r\\<rightarrow> c)\" in filter_ii)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> c) \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> c)\n                      \\<le> a r\\<rightarrow> c\n 4. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> c r\\<rightarrow> a \\<in> F", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> c) \\<in> F\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> c)\n                      \\<le> a r\\<rightarrow> c\n 3. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> c r\\<rightarrow> a \\<in> F", "apply (rule filter_i)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a r\\<rightarrow> b \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> b r\\<rightarrow> c \\<in> F\n 4. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> c)\n                      \\<le> a r\\<rightarrow> c\n 5. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> c r\\<rightarrow> a \\<in> F", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> c)\n                      \\<le> a r\\<rightarrow> c\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> c r\\<rightarrow> a \\<in> F", "apply (simp add: lemma_2_5_15)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> c r\\<rightarrow> a \\<in> F", "apply (rule_tac a = \"(c r\\<rightarrow> b) * (b r\\<rightarrow> a)\" in filter_ii)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (c r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (c r\\<rightarrow> b) * (b r\\<rightarrow> a)\n                      \\<le> c r\\<rightarrow> a", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (c r\\<rightarrow> b) * (b r\\<rightarrow> a) \\<in> F\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (c r\\<rightarrow> b) * (b r\\<rightarrow> a)\n                      \\<le> c r\\<rightarrow> a", "apply (rule filter_i)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> c r\\<rightarrow> b \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> b r\\<rightarrow> a \\<in> F\n 4. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (c r\\<rightarrow> b) * (b r\\<rightarrow> a)\n                      \\<le> c r\\<rightarrow> a", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; b r\\<rightarrow> c \\<in> F;\n     c r\\<rightarrow> b \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (c r\\<rightarrow> b) * (b r\\<rightarrow> a)\n                      \\<le> c r\\<rightarrow> a", "by (simp add: lemma_2_5_15)"], ["", "lemma lemma_3_7_i: \"F \\<in> filters \\<Longrightarrow> F = {a . cong_r F a 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow> F = {a. cong_r F a (1::'a)}", "by (simp add: cong_r_def)"], ["", "lemma lemma_3_7_ii: \"F \\<in> filters \\<Longrightarrow> F = {a . cong_l F a 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow> F = {a. cong_l F a (1::'a)}", "by (simp add: cong_l_def)"], ["", "lemma lemma_3_8_i: \"F \\<in> filters \\<Longrightarrow> (cong_r F a b) = (\\<exists> x y . x \\<in> F \\<and> y \\<in> F \\<and> x * a = y * b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow>\n    cong_r F a b =\n    (\\<exists>x y. x \\<in> F \\<and> y \\<in> F \\<and> x * a = y * b)", "apply (subst cong_r_filter)"], ["proof (prove)\ngoal (2 subgoals):\n 1. F \\<in> filters \\<Longrightarrow> F \\<in> filters\n 2. F \\<in> filters \\<Longrightarrow>\n    (a l\\<rightarrow> b \\<in> F \\<and> b l\\<rightarrow> a \\<in> F) =\n    (\\<exists>x y. x \\<in> F \\<and> y \\<in> F \\<and> x * a = y * b)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x y.\n                         x \\<in> F \\<and> y \\<in> F \\<and> x * a = y * b\n 2. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        x * a = y * b\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> F\n 3. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        x * a = y * b\\<rbrakk>\n       \\<Longrightarrow> b l\\<rightarrow> a \\<in> F", "apply (rule_tac x = \"a l\\<rightarrow> b\" in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y.\n                         a l\\<rightarrow> b \\<in> F \\<and>\n                         y \\<in> F \\<and> (a l\\<rightarrow> b) * a = y * b\n 2. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        x * a = y * b\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> F\n 3. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        x * a = y * b\\<rbrakk>\n       \\<Longrightarrow> b l\\<rightarrow> a \\<in> F", "apply (rule_tac x = \"b l\\<rightarrow> a\" in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a l\\<rightarrow> b \\<in> F \\<and>\n                      b l\\<rightarrow> a \\<in> F \\<and>\n                      (a l\\<rightarrow> b) * a = (b l\\<rightarrow> a) * b\n 2. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        x * a = y * b\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> F\n 3. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        x * a = y * b\\<rbrakk>\n       \\<Longrightarrow> b l\\<rightarrow> a \\<in> F", "apply (simp add: left_impl_times)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        x * a = y * b\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> F\n 2. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        x * a = y * b\\<rbrakk>\n       \\<Longrightarrow> b l\\<rightarrow> a \\<in> F", "apply (subgoal_tac \"x \\<le> a l\\<rightarrow> b\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F; x * a = y * b;\n        x \\<le> a l\\<rightarrow> b\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> F\n 2. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        x * a = y * b\\<rbrakk>\n       \\<Longrightarrow> x \\<le> a l\\<rightarrow> b\n 3. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        x * a = y * b\\<rbrakk>\n       \\<Longrightarrow> b l\\<rightarrow> a \\<in> F", "apply (simp add: filter_ii)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        x * a = y * b\\<rbrakk>\n       \\<Longrightarrow> x \\<le> a l\\<rightarrow> b\n 2. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        x * a = y * b\\<rbrakk>\n       \\<Longrightarrow> b l\\<rightarrow> a \\<in> F", "apply (simp add: left_residual [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        x * a = y * b\\<rbrakk>\n       \\<Longrightarrow> b l\\<rightarrow> a \\<in> F", "apply (subgoal_tac \"y \\<le> b l\\<rightarrow> a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F; x * a = y * b;\n        y \\<le> b l\\<rightarrow> a\\<rbrakk>\n       \\<Longrightarrow> b l\\<rightarrow> a \\<in> F\n 2. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        x * a = y * b\\<rbrakk>\n       \\<Longrightarrow> y \\<le> b l\\<rightarrow> a", "apply (simp add: filter_ii)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        x * a = y * b\\<rbrakk>\n       \\<Longrightarrow> y \\<le> b l\\<rightarrow> a", "apply (simp add: left_residual [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        x * a = y * b\\<rbrakk>\n       \\<Longrightarrow> y * b \\<le> a", "apply (subgoal_tac \"y * b = x * a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F; x * a = y * b;\n        y * b = x * a\\<rbrakk>\n       \\<Longrightarrow> y * b \\<le> a\n 2. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        x * a = y * b\\<rbrakk>\n       \\<Longrightarrow> y * b = x * a", "by simp_all"], ["", "lemma lemma_3_8_ii: \"F \\<in> filters \\<Longrightarrow> (cong_l F a b) = (\\<exists> x y . x \\<in> F \\<and> y \\<in> F \\<and> a * x = b * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<in> filters \\<Longrightarrow>\n    cong_l F a b =\n    (\\<exists>x y. x \\<in> F \\<and> y \\<in> F \\<and> a * x = b * y)", "apply (subst cong_l_filter)"], ["proof (prove)\ngoal (2 subgoals):\n 1. F \\<in> filters \\<Longrightarrow> F \\<in> filters\n 2. F \\<in> filters \\<Longrightarrow>\n    (a r\\<rightarrow> b \\<in> F \\<and> b r\\<rightarrow> a \\<in> F) =\n    (\\<exists>x y. x \\<in> F \\<and> y \\<in> F \\<and> a * x = b * y)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x y.\n                         x \\<in> F \\<and> y \\<in> F \\<and> a * x = b * y\n 2. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        a * x = b * y\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> F\n 3. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        a * x = b * y\\<rbrakk>\n       \\<Longrightarrow> b r\\<rightarrow> a \\<in> F", "apply (rule_tac x = \"a r\\<rightarrow> b\" in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y.\n                         a r\\<rightarrow> b \\<in> F \\<and>\n                         y \\<in> F \\<and> a * (a r\\<rightarrow> b) = b * y\n 2. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        a * x = b * y\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> F\n 3. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        a * x = b * y\\<rbrakk>\n       \\<Longrightarrow> b r\\<rightarrow> a \\<in> F", "apply (rule_tac x = \"b r\\<rightarrow> a\" in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a r\\<rightarrow> b \\<in> F \\<and>\n                      b r\\<rightarrow> a \\<in> F \\<and>\n                      a * (a r\\<rightarrow> b) = b * (b r\\<rightarrow> a)\n 2. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        a * x = b * y\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> F\n 3. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        a * x = b * y\\<rbrakk>\n       \\<Longrightarrow> b r\\<rightarrow> a \\<in> F", "apply (simp add: right_impl_times)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        a * x = b * y\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> F\n 2. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        a * x = b * y\\<rbrakk>\n       \\<Longrightarrow> b r\\<rightarrow> a \\<in> F", "apply (subgoal_tac \"x \\<le> a r\\<rightarrow> b\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F; a * x = b * y;\n        x \\<le> a r\\<rightarrow> b\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> F\n 2. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        a * x = b * y\\<rbrakk>\n       \\<Longrightarrow> x \\<le> a r\\<rightarrow> b\n 3. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        a * x = b * y\\<rbrakk>\n       \\<Longrightarrow> b r\\<rightarrow> a \\<in> F", "apply (simp add: filter_ii)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        a * x = b * y\\<rbrakk>\n       \\<Longrightarrow> x \\<le> a r\\<rightarrow> b\n 2. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        a * x = b * y\\<rbrakk>\n       \\<Longrightarrow> b r\\<rightarrow> a \\<in> F", "apply (simp add: right_residual [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        a * x = b * y\\<rbrakk>\n       \\<Longrightarrow> b r\\<rightarrow> a \\<in> F", "apply (subgoal_tac \"y \\<le> b r\\<rightarrow> a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F; a * x = b * y;\n        y \\<le> b r\\<rightarrow> a\\<rbrakk>\n       \\<Longrightarrow> b r\\<rightarrow> a \\<in> F\n 2. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        a * x = b * y\\<rbrakk>\n       \\<Longrightarrow> y \\<le> b r\\<rightarrow> a", "apply (simp add: filter_ii)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        a * x = b * y\\<rbrakk>\n       \\<Longrightarrow> y \\<le> b r\\<rightarrow> a", "apply (simp add: right_residual [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        a * x = b * y\\<rbrakk>\n       \\<Longrightarrow> b * y \\<le> a", "apply (subgoal_tac \"b * y = a * x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F; a * x = b * y;\n        b * y = a * x\\<rbrakk>\n       \\<Longrightarrow> b * y \\<le> a\n 2. \\<And>x y.\n       \\<lbrakk>F \\<in> filters; x \\<in> F; y \\<in> F;\n        a * x = b * y\\<rbrakk>\n       \\<Longrightarrow> b * y = a * x", "by simp_all"], ["", "lemma lemma_3_9_i: \"F \\<in> filters \\<Longrightarrow> cong_r F a b  \\<Longrightarrow> cong_r F c d \\<Longrightarrow> (a l\\<rightarrow> c \\<in> F) = (b l\\<rightarrow> d \\<in> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; cong_r F a b; cong_r F c d\\<rbrakk>\n    \\<Longrightarrow> (a l\\<rightarrow> c \\<in> F) =\n                      (b l\\<rightarrow> d \\<in> F)", "apply (simp add: cong_r_filter)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters;\n     a l\\<rightarrow> b \\<in> F \\<and> b l\\<rightarrow> a \\<in> F;\n     c l\\<rightarrow> d \\<in> F \\<and> d l\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a l\\<rightarrow> c \\<in> F) =\n                      (b l\\<rightarrow> d \\<in> F)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; a l\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> b l\\<rightarrow> d \\<in> F\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a l\\<rightarrow> c \\<in> F", "apply (rule_tac a = \"(a l\\<rightarrow> d) * (b l\\<rightarrow> a)\" in filter_ii)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; a l\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; a l\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a l\\<rightarrow> d) * (b l\\<rightarrow> a) \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; a l\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a l\\<rightarrow> d) * (b l\\<rightarrow> a)\n                      \\<le> b l\\<rightarrow> d\n 4. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a l\\<rightarrow> c \\<in> F", "apply (simp_all add: lemma_2_5_14)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; a l\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a l\\<rightarrow> d) * (b l\\<rightarrow> a) \\<in> F\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a l\\<rightarrow> c \\<in> F", "apply (rule_tac a = \"((c l\\<rightarrow> d) * (a l\\<rightarrow> c)) * (b l\\<rightarrow> a)\" in filter_ii)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; a l\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; a l\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (c l\\<rightarrow> d) * (a l\\<rightarrow> c) *\n                      (b l\\<rightarrow> a)\n                      \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; a l\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (c l\\<rightarrow> d) * (a l\\<rightarrow> c) *\n                      (b l\\<rightarrow> a)\n                      \\<le> (a l\\<rightarrow> d) * (b l\\<rightarrow> a)\n 4. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a l\\<rightarrow> c \\<in> F", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; a l\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (c l\\<rightarrow> d) * (a l\\<rightarrow> c) *\n                      (b l\\<rightarrow> a)\n                      \\<in> F\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; a l\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (c l\\<rightarrow> d) * (a l\\<rightarrow> c) *\n                      (b l\\<rightarrow> a)\n                      \\<le> (a l\\<rightarrow> d) * (b l\\<rightarrow> a)\n 3. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a l\\<rightarrow> c \\<in> F", "apply (simp add: filter_i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; a l\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (c l\\<rightarrow> d) * (a l\\<rightarrow> c) *\n                      (b l\\<rightarrow> a)\n                      \\<le> (a l\\<rightarrow> d) * (b l\\<rightarrow> a)\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a l\\<rightarrow> c \\<in> F", "apply (rule mult_right_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; a l\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (c l\\<rightarrow> d) * (a l\\<rightarrow> c)\n                      \\<le> a l\\<rightarrow> d\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a l\\<rightarrow> c \\<in> F", "apply (simp_all add: lemma_2_5_14)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a l\\<rightarrow> c \\<in> F", "apply (rule_tac a = \"(b l\\<rightarrow> c) * (a l\\<rightarrow> b)\" in filter_ii)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b l\\<rightarrow> c) * (a l\\<rightarrow> b) \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b l\\<rightarrow> c) * (a l\\<rightarrow> b)\n                      \\<le> a l\\<rightarrow> c", "apply (simp_all add: lemma_2_5_14)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b l\\<rightarrow> c) * (a l\\<rightarrow> b) \\<in> F", "apply (rule_tac a = \"((d l\\<rightarrow> c) * (b l\\<rightarrow> d)) * (a l\\<rightarrow> b)\" in filter_ii)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (d l\\<rightarrow> c) * (b l\\<rightarrow> d) *\n                      (a l\\<rightarrow> b)\n                      \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (d l\\<rightarrow> c) * (b l\\<rightarrow> d) *\n                      (a l\\<rightarrow> b)\n                      \\<le> (b l\\<rightarrow> c) * (a l\\<rightarrow> b)", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (d l\\<rightarrow> c) * (b l\\<rightarrow> d) *\n                      (a l\\<rightarrow> b)\n                      \\<in> F\n 2. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (d l\\<rightarrow> c) * (b l\\<rightarrow> d) *\n                      (a l\\<rightarrow> b)\n                      \\<le> (b l\\<rightarrow> c) * (a l\\<rightarrow> b)", "apply (simp add: filter_i)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (d l\\<rightarrow> c) * (b l\\<rightarrow> d) *\n                      (a l\\<rightarrow> b)\n                      \\<le> (b l\\<rightarrow> c) * (a l\\<rightarrow> b)", "apply (rule mult_right_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; a l\\<rightarrow> b \\<in> F;\n     b l\\<rightarrow> a \\<in> F; c l\\<rightarrow> d \\<in> F;\n     d l\\<rightarrow> c \\<in> F; b l\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (d l\\<rightarrow> c) * (b l\\<rightarrow> d)\n                      \\<le> b l\\<rightarrow> c", "by (simp_all add: lemma_2_5_14)"], ["", "lemma lemma_3_9_ii: \"F \\<in> filters \\<Longrightarrow> cong_l F a b  \\<Longrightarrow> cong_l F c d \\<Longrightarrow> (a r\\<rightarrow> c \\<in> F) = (b r\\<rightarrow> d \\<in> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; cong_l F a b; cong_l F c d\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> c \\<in> F) =\n                      (b r\\<rightarrow> d \\<in> F)", "apply (simp add: cong_l_filter)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters;\n     a r\\<rightarrow> b \\<in> F \\<and> b r\\<rightarrow> a \\<in> F;\n     c r\\<rightarrow> d \\<in> F \\<and> d r\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> c \\<in> F) =\n                      (b r\\<rightarrow> d \\<in> F)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; a r\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> b r\\<rightarrow> d \\<in> F\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a r\\<rightarrow> c \\<in> F", "apply (rule_tac a = \"(b r\\<rightarrow> a) * (a r\\<rightarrow> d)\" in filter_ii)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; a r\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; a r\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b r\\<rightarrow> a) * (a r\\<rightarrow> d) \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; a r\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b r\\<rightarrow> a) * (a r\\<rightarrow> d)\n                      \\<le> b r\\<rightarrow> d\n 4. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a r\\<rightarrow> c \\<in> F", "apply (simp_all add: lemma_2_5_15)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; a r\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b r\\<rightarrow> a) * (a r\\<rightarrow> d) \\<in> F\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a r\\<rightarrow> c \\<in> F", "apply (rule_tac a = \"(b r\\<rightarrow> a) * ((a r\\<rightarrow> c) * (c r\\<rightarrow> d))\" in filter_ii)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; a r\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; a r\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b r\\<rightarrow> a) *\n                      ((a r\\<rightarrow> c) * (c r\\<rightarrow> d))\n                      \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; a r\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b r\\<rightarrow> a) *\n                      ((a r\\<rightarrow> c) * (c r\\<rightarrow> d))\n                      \\<le> (b r\\<rightarrow> a) * (a r\\<rightarrow> d)\n 4. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a r\\<rightarrow> c \\<in> F", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; a r\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b r\\<rightarrow> a) *\n                      ((a r\\<rightarrow> c) * (c r\\<rightarrow> d))\n                      \\<in> F\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; a r\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b r\\<rightarrow> a) *\n                      ((a r\\<rightarrow> c) * (c r\\<rightarrow> d))\n                      \\<le> (b r\\<rightarrow> a) * (a r\\<rightarrow> d)\n 3. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a r\\<rightarrow> c \\<in> F", "apply (simp add: filter_i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; a r\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b r\\<rightarrow> a) *\n                      ((a r\\<rightarrow> c) * (c r\\<rightarrow> d))\n                      \\<le> (b r\\<rightarrow> a) * (a r\\<rightarrow> d)\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a r\\<rightarrow> c \\<in> F", "apply (rule mult_left_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; a r\\<rightarrow> c \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> c) * (c r\\<rightarrow> d)\n                      \\<le> a r\\<rightarrow> d\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a r\\<rightarrow> c \\<in> F", "apply (simp_all add: lemma_2_5_15)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> a r\\<rightarrow> c \\<in> F", "apply (rule_tac a = \"(a r\\<rightarrow> b) * (b r\\<rightarrow> c)\" in filter_ii)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> c) \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> c)\n                      \\<le> a r\\<rightarrow> c", "apply (simp_all add: lemma_2_5_15)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> c) \\<in> F", "apply (rule_tac a = \"(a r\\<rightarrow> b) * ((b r\\<rightarrow> d) * (d r\\<rightarrow> c))\" in filter_ii)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> F \\<in> filters\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) *\n                      ((b r\\<rightarrow> d) * (d r\\<rightarrow> c))\n                      \\<in> F\n 3. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) *\n                      ((b r\\<rightarrow> d) * (d r\\<rightarrow> c))\n                      \\<le> (a r\\<rightarrow> b) * (b r\\<rightarrow> c)", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) *\n                      ((b r\\<rightarrow> d) * (d r\\<rightarrow> c))\n                      \\<in> F\n 2. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) *\n                      ((b r\\<rightarrow> d) * (d r\\<rightarrow> c))\n                      \\<le> (a r\\<rightarrow> b) * (b r\\<rightarrow> c)", "apply (simp add: filter_i)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (a r\\<rightarrow> b) *\n                      ((b r\\<rightarrow> d) * (d r\\<rightarrow> c))\n                      \\<le> (a r\\<rightarrow> b) * (b r\\<rightarrow> c)", "apply (rule mult_left_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> filters; a r\\<rightarrow> b \\<in> F;\n     b r\\<rightarrow> a \\<in> F; c r\\<rightarrow> d \\<in> F;\n     d r\\<rightarrow> c \\<in> F; b r\\<rightarrow> d \\<in> F\\<rbrakk>\n    \\<Longrightarrow> (b r\\<rightarrow> d) * (d r\\<rightarrow> c)\n                      \\<le> b r\\<rightarrow> c", "by (simp_all add: lemma_2_5_15)"], ["", "definition\n  \"normalfilters = {F . F \\<in> filters \\<and> (\\<forall> a b . (a l\\<rightarrow> b \\<in> F) = (a r\\<rightarrow> b \\<in> F))}\""], ["", "lemma normalfilter_i:\n  \"H \\<in> normalfilters \\<Longrightarrow> a l\\<rightarrow> b \\<in> H \\<Longrightarrow> a r\\<rightarrow> b \\<in> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H\\<rbrakk>\n    \\<Longrightarrow> a r\\<rightarrow> b \\<in> H", "by (simp add: normalfilters_def)"], ["", "lemma normalfilter_ii:\n  \"H \\<in> normalfilters \\<Longrightarrow> a r\\<rightarrow> b \\<in> H \\<Longrightarrow> a l\\<rightarrow> b \\<in> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H\\<rbrakk>\n    \\<Longrightarrow> a l\\<rightarrow> b \\<in> H", "by (simp add: normalfilters_def)"], ["", "lemma [simp]: \"H \\<in> normalfilters \\<Longrightarrow> H \\<in> filters\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow> H \\<in> filters", "by (simp add: normalfilters_def)"], ["", "lemma lemma_3_10_i_ii:\n  \"H \\<in> normalfilters \\<Longrightarrow> {a} ** H = H ** {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow> {a} ** H = H ** {a}", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow>\n    {aa. \\<exists>y\\<in>H. aa = a * y} = {aa. \\<exists>x\\<in>H. aa = x * a}", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H. a * y = x * a\n 2. \\<And>x xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>H. xa * a = a * y", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H. a * y = x * a\n 2. \\<And>x xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>H. xa * a = a * y", "apply (rule_tac x = \"a l\\<rightarrow> a * y\" in bexI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a * y = (a l\\<rightarrow> a * y) * a\n 2. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> a * y \\<in> H\n 3. \\<And>x xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>H. xa * a = a * y", "apply (simp add: inf_l_def [THEN sym])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a * y = a \\<sqinter> (a * y)\n 2. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> a * y \\<in> H\n 3. \\<And>x xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>H. xa * a = a * y", "apply (rule antisym)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a * y \\<le> a \\<sqinter> (a * y)\n 2. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a \\<sqinter> (a * y) \\<le> a * y\n 3. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> a * y \\<in> H\n 4. \\<And>x xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>H. xa * a = a * y", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a \\<sqinter> (a * y) \\<le> a * y\n 2. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> a * y \\<in> H\n 3. \\<And>x xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>H. xa * a = a * y", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> a * y \\<in> H\n 2. \\<And>x xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>H. xa * a = a * y", "apply (rule normalfilter_ii)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> H \\<in> normalfilters\n 2. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> a * y \\<in> H\n 3. \\<And>x xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>H. xa * a = a * y", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> a * y \\<in> H\n 2. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>H. xa * a = a * y", "apply (rule_tac a = \"y\" in filter_ii)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> H \\<in> filters\n 2. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> y \\<in> H\n 3. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> y \\<le> a r\\<rightarrow> a * y\n 4. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>H. xa * a = a * y", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>H \\<in> normalfilters; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> y \\<le> a r\\<rightarrow> a * y\n 2. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>H. xa * a = a * y", "apply (simp add: right_residual [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>H. xa * a = a * y", "apply (rule_tac x = \"a r\\<rightarrow> xa * a\" in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa * a = a * (a r\\<rightarrow> xa * a)\n 2. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> xa * a \\<in> H", "apply (simp add: inf_r_def [THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa * a = a \\<sqinter> (xa * a)\n 2. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> xa * a \\<in> H", "apply (rule antisym)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa * a \\<le> a \\<sqinter> (xa * a)\n 2. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a \\<sqinter> (xa * a) \\<le> xa * a\n 3. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> xa * a \\<in> H", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a \\<sqinter> (xa * a) \\<le> xa * a\n 2. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> xa * a \\<in> H", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> xa * a \\<in> H", "apply (rule normalfilter_i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> H \\<in> normalfilters\n 2. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> xa * a \\<in> H", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> xa * a \\<in> H", "apply (rule_tac a = \"xa\" in filter_ii)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> H \\<in> filters\n 2. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> H\n 3. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<le> a l\\<rightarrow> xa * a", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>H \\<in> normalfilters; xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<le> a l\\<rightarrow> xa * a", "by (simp add: left_residual [THEN sym])"], ["", "lemma lemma_3_10_ii_iii:\n  \"H \\<in> filters \\<Longrightarrow> (\\<forall> a . {a} ** H = H ** {a}) \\<Longrightarrow> cong_r H = cong_l H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a}\\<rbrakk>\n    \\<Longrightarrow> cong_r H = cong_l H", "apply (subst fun_eq_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. cong_r H x = cong_l H x", "apply (subst fun_eq_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x xa. cong_r H x xa = cong_l H x xa", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_r H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_l H x xa\n 2. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply (subst (asm) lemma_3_8_i)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a}\\<rbrakk>\n       \\<Longrightarrow> H \\<in> filters\n 2. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        \\<exists>xb y.\n           xb \\<in> H \\<and> y \\<in> H \\<and> xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> cong_l H x xa\n 3. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        \\<exists>xb.\n           xb \\<in> H \\<and>\n           (\\<exists>y. y \\<in> H \\<and> xb * x = y * xa)\\<rbrakk>\n       \\<Longrightarrow> cong_l H x xa\n 2. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> cong_l H x xa\n 2. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply (subst lemma_3_8_ii)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> H \\<in> filters\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb y.\n                            xb \\<in> H \\<and>\n                            y \\<in> H \\<and> x * xb = xa * y\n 3. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb.\n                            xb \\<in> H \\<and>\n                            (\\<exists>y. y \\<in> H \\<and> x * xb = xa * y)\n 2. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply (subgoal_tac \"xb * x \\<in> {x} ** H\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        xb * x \\<in> {x} ** H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb.\n                            xb \\<in> H \\<and>\n                            (\\<exists>y. y \\<in> H \\<and> x * xb = xa * y)\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> xb * x \\<in> {x} ** H\n 3. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply (subgoal_tac \"y * xa \\<in> {xa} ** H\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa; xb * x \\<in> {x} ** H;\n        y * xa \\<in> {xa} ** H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb.\n                            xb \\<in> H \\<and>\n                            (\\<exists>y. y \\<in> H \\<and> x * xb = xa * y)\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        xb * x \\<in> {x} ** H\\<rbrakk>\n       \\<Longrightarrow> y * xa \\<in> {xa} ** H\n 3. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> xb * x \\<in> {x} ** H\n 4. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>\\<forall>a. {a} ** H = H ** {a}; xb \\<in> H; y \\<in> H;\n        xb * x = y * xa; xb * x \\<in> {x} ** H; y * xa \\<in> {xa} ** H;\n        True\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb.\n                            xb \\<in> H \\<and>\n                            (\\<exists>y. y \\<in> H \\<and> x * xb = xa * y)\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        xb * x \\<in> {x} ** H\\<rbrakk>\n       \\<Longrightarrow> y * xa \\<in> {xa} ** H\n 3. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> xb * x \\<in> {x} ** H\n 4. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        xb * x \\<in> {x} ** H; y * xa \\<in> {xa} ** H; True; True\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb.\n                            xb \\<in> H \\<and>\n                            (\\<exists>y. y \\<in> H \\<and> x * xb = xa * y)\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        xb * x \\<in> {x} ** H\\<rbrakk>\n       \\<Longrightarrow> y * xa \\<in> {xa} ** H\n 3. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> xb * x \\<in> {x} ** H\n 4. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        \\<exists>ya\\<in>H. y * xa = x * ya;\n        \\<exists>ya\\<in>H. y * xa = xa * ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb.\n                            xb \\<in> H \\<and>\n                            (\\<exists>y. y \\<in> H \\<and> x * xb = xa * y)\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        xb * x \\<in> {x} ** H\\<rbrakk>\n       \\<Longrightarrow> y * xa \\<in> {xa} ** H\n 3. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> xb * x \\<in> {x} ** H\n 4. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa xb y ya yb.\n       \\<lbrakk>xb \\<in> H; y \\<in> H; xb * x = y * xa; ya \\<in> H;\n        y * xa = x * ya; yb \\<in> H; y * xa = xa * yb\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb.\n                            xb \\<in> H \\<and>\n                            (\\<exists>y. y \\<in> H \\<and> x * xb = xa * y)\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        xb * x \\<in> {x} ** H\\<rbrakk>\n       \\<Longrightarrow> y * xa \\<in> {xa} ** H\n 3. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> xb * x \\<in> {x} ** H\n 4. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply (rule_tac x = ya in exI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa xb y ya yb.\n       \\<lbrakk>xb \\<in> H; y \\<in> H; xb * x = y * xa; ya \\<in> H;\n        y * xa = x * ya; yb \\<in> H; y * xa = xa * yb\\<rbrakk>\n       \\<Longrightarrow> ya \\<in> H \\<and>\n                         (\\<exists>y. y \\<in> H \\<and> x * ya = xa * y)\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        xb * x \\<in> {x} ** H\\<rbrakk>\n       \\<Longrightarrow> y * xa \\<in> {xa} ** H\n 3. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> xb * x \\<in> {x} ** H\n 4. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa xb y ya yb.\n       \\<lbrakk>xb \\<in> H; y \\<in> H; xb * x = x * ya; ya \\<in> H;\n        xa * yb = x * ya; yb \\<in> H; y * xa = x * ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. y \\<in> H \\<and> x * ya = xa * y\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        xb * x \\<in> {x} ** H\\<rbrakk>\n       \\<Longrightarrow> y * xa \\<in> {xa} ** H\n 3. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> xb * x \\<in> {x} ** H\n 4. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply (rule_tac x = yb in exI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa xb y ya yb.\n       \\<lbrakk>xb \\<in> H; y \\<in> H; xb * x = x * ya; ya \\<in> H;\n        xa * yb = x * ya; yb \\<in> H; y * xa = x * ya\\<rbrakk>\n       \\<Longrightarrow> yb \\<in> H \\<and> x * ya = xa * yb\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        xb * x \\<in> {x} ** H\\<rbrakk>\n       \\<Longrightarrow> y * xa \\<in> {xa} ** H\n 3. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> xb * x \\<in> {x} ** H\n 4. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        xb * x \\<in> {x} ** H\\<rbrakk>\n       \\<Longrightarrow> y * xa \\<in> {xa} ** H\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> xb * x \\<in> {x} ** H\n 3. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply (drule_tac x = xa in spec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        xb * x \\<in> {x} ** H; {xa} ** H = H ** {xa}\\<rbrakk>\n       \\<Longrightarrow> y * xa \\<in> {xa} ** H\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> xb * x \\<in> {x} ** H\n 3. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        \\<exists>ya\\<in>H. y * xa = x * ya;\n        {a. \\<exists>y\\<in>H. a = xa * y} =\n        {a. \\<exists>x\\<in>H. a = x * xa}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H. y * xa = x * xa\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> xb * x \\<in> {x} ** H\n 3. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply auto[1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; xb * x = y * xa\\<rbrakk>\n       \\<Longrightarrow> xb * x \\<in> {x} ** H\n 2. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply (drule_tac x = x in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        {x} ** H = H ** {x}\\<rbrakk>\n       \\<Longrightarrow> xb * x \\<in> {x} ** H\n 2. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        {x} ** H = H ** {x}\\<rbrakk>\n       \\<Longrightarrow> y * xa \\<in> H ** {x}\n 2. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        {a. \\<exists>y\\<in>H. a = x * y} =\n        {a. \\<exists>xa\\<in>H. a = xa * x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb\\<in>H. y * xa = xb * x\n 2. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply (rule_tac x = xb in bexI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        {a. \\<exists>y\\<in>H. a = x * y} =\n        {a. \\<exists>xa\\<in>H. a = xa * x}\\<rbrakk>\n       \\<Longrightarrow> y * xa = xb * x\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; xb \\<in> H; y \\<in> H; xb * x = y * xa;\n        {a. \\<exists>y\\<in>H. a = x * y} =\n        {a. \\<exists>xa\\<in>H. a = xa * x}\\<rbrakk>\n       \\<Longrightarrow> xb \\<in> H\n 3. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        cong_l H x xa\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply (subst (asm) lemma_3_8_ii)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a}\\<rbrakk>\n       \\<Longrightarrow> H \\<in> filters\n 2. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        \\<exists>xb y.\n           xb \\<in> H \\<and> y \\<in> H \\<and> x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        \\<exists>xb.\n           xb \\<in> H \\<and>\n           (\\<exists>y. y \\<in> H \\<and> x * xb = xa * y)\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> cong_r H x xa", "apply (subst lemma_3_8_i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> H \\<in> filters\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb y.\n                            xb \\<in> H \\<and>\n                            y \\<in> H \\<and> xb * x = y * xa", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb.\n                            xb \\<in> H \\<and>\n                            (\\<exists>y. y \\<in> H \\<and> xb * x = y * xa)", "apply (subgoal_tac \"x * xb \\<in> H ** {x}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        x * xb \\<in> H ** {x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb.\n                            xb \\<in> H \\<and>\n                            (\\<exists>y. y \\<in> H \\<and> xb * x = y * xa)\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> x * xb \\<in> H ** {x}", "apply (subgoal_tac \"xa * y \\<in> H ** {xa}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y; x * xb \\<in> H ** {x};\n        xa * y \\<in> H ** {xa}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb.\n                            xb \\<in> H \\<and>\n                            (\\<exists>y. y \\<in> H \\<and> xb * x = y * xa)\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        x * xb \\<in> H ** {x}\\<rbrakk>\n       \\<Longrightarrow> xa * y \\<in> H ** {xa}\n 3. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> x * xb \\<in> H ** {x}", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>\\<forall>a. {a} ** H = H ** {a}; xb \\<in> H; y \\<in> H;\n        x * xb = xa * y; x * xb \\<in> H ** {x}; xa * y \\<in> H ** {xa};\n        True\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb.\n                            xb \\<in> H \\<and>\n                            (\\<exists>y. y \\<in> H \\<and> xb * x = y * xa)\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        x * xb \\<in> H ** {x}\\<rbrakk>\n       \\<Longrightarrow> xa * y \\<in> H ** {xa}\n 3. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> x * xb \\<in> H ** {x}", "apply (drule drop_assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        x * xb \\<in> H ** {x}; xa * y \\<in> H ** {xa}; True; True\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb.\n                            xb \\<in> H \\<and>\n                            (\\<exists>y. y \\<in> H \\<and> xb * x = y * xa)\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        x * xb \\<in> H ** {x}\\<rbrakk>\n       \\<Longrightarrow> xa * y \\<in> H ** {xa}\n 3. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> x * xb \\<in> H ** {x}", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        \\<exists>xb\\<in>H. xa * y = xb * x;\n        \\<exists>x\\<in>H. xa * y = x * xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb.\n                            xb \\<in> H \\<and>\n                            (\\<exists>y. y \\<in> H \\<and> xb * x = y * xa)\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        x * xb \\<in> H ** {x}\\<rbrakk>\n       \\<Longrightarrow> xa * y \\<in> H ** {xa}\n 3. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> x * xb \\<in> H ** {x}", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa xb y xc xd.\n       \\<lbrakk>xb \\<in> H; y \\<in> H; x * xb = xa * y; xc \\<in> H;\n        xa * y = xc * x; xd \\<in> H; xa * y = xd * xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb.\n                            xb \\<in> H \\<and>\n                            (\\<exists>y. y \\<in> H \\<and> xb * x = y * xa)\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        x * xb \\<in> H ** {x}\\<rbrakk>\n       \\<Longrightarrow> xa * y \\<in> H ** {xa}\n 3. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> x * xb \\<in> H ** {x}", "apply (rule_tac x = xc in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa xb y xc xd.\n       \\<lbrakk>xb \\<in> H; y \\<in> H; x * xb = xa * y; xc \\<in> H;\n        xa * y = xc * x; xd \\<in> H; xa * y = xd * xa\\<rbrakk>\n       \\<Longrightarrow> xc \\<in> H \\<and>\n                         (\\<exists>y. y \\<in> H \\<and> xc * x = y * xa)\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        x * xb \\<in> H ** {x}\\<rbrakk>\n       \\<Longrightarrow> xa * y \\<in> H ** {xa}\n 3. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> x * xb \\<in> H ** {x}", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa xb y xc xd.\n       \\<lbrakk>xb \\<in> H; y \\<in> H; x * xb = xc * x; xc \\<in> H;\n        xd * xa = xc * x; xd \\<in> H; xa * y = xc * x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. y \\<in> H \\<and> xc * x = y * xa\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        x * xb \\<in> H ** {x}\\<rbrakk>\n       \\<Longrightarrow> xa * y \\<in> H ** {xa}\n 3. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> x * xb \\<in> H ** {x}", "apply (rule_tac x = xd in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa xb y xc xd.\n       \\<lbrakk>xb \\<in> H; y \\<in> H; x * xb = xc * x; xc \\<in> H;\n        xd * xa = xc * x; xd \\<in> H; xa * y = xc * x\\<rbrakk>\n       \\<Longrightarrow> xd \\<in> H \\<and> xc * x = xd * xa\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        x * xb \\<in> H ** {x}\\<rbrakk>\n       \\<Longrightarrow> xa * y \\<in> H ** {xa}\n 3. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> x * xb \\<in> H ** {x}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        x * xb \\<in> H ** {x}\\<rbrakk>\n       \\<Longrightarrow> xa * y \\<in> H ** {xa}\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> x * xb \\<in> H ** {x}", "apply (drule_tac x = xa in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        x * xb \\<in> H ** {x}; {xa} ** H = H ** {xa}\\<rbrakk>\n       \\<Longrightarrow> xa * y \\<in> H ** {xa}\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> x * xb \\<in> H ** {x}", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        \\<exists>xb\\<in>H. xa * y = xb * x;\n        {a. \\<exists>y\\<in>H. a = xa * y} =\n        {a. \\<exists>x\\<in>H. a = x * xa}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H. xa * y = x * xa\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> x * xb \\<in> H ** {x}", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a};\n        xb \\<in> H; y \\<in> H; x * xb = xa * y\\<rbrakk>\n       \\<Longrightarrow> x * xb \\<in> H ** {x}", "apply (drule_tac x = x in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        {x} ** H = H ** {x}\\<rbrakk>\n       \\<Longrightarrow> x * xb \\<in> H ** {x}", "apply (subgoal_tac \"x * xb \\<in> {x} ** H\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        {x} ** H = H ** {x}; x * xb \\<in> {x} ** H\\<rbrakk>\n       \\<Longrightarrow> x * xb \\<in> H ** {x}\n 2. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        {x} ** H = H ** {x}\\<rbrakk>\n       \\<Longrightarrow> x * xb \\<in> {x} ** H", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        {x} ** H = H ** {x}\\<rbrakk>\n       \\<Longrightarrow> x * xb \\<in> {x} ** H", "apply (subst times_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb y.\n       \\<lbrakk>H \\<in> filters; xb \\<in> H; y \\<in> H; x * xb = xa * y;\n        {x} ** H = H ** {x}\\<rbrakk>\n       \\<Longrightarrow> x * xb\n                         \\<in> {a. \\<exists>x\\<in>{x}.\n\\<exists>y\\<in>H. a = x * y}", "by blast"], ["", "lemma lemma_3_10_i_iii: \n  \"H \\<in> normalfilters \\<Longrightarrow> cong_r H = cong_l H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow> cong_r H = cong_l H", "by (simp add: lemma_3_10_i_ii lemma_3_10_ii_iii)"], ["", "lemma order_impl_l [simp]: \"a \\<le> b \\<Longrightarrow> a l\\<rightarrow> b = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> a l\\<rightarrow> b = (1::'a)", "by (simp add: left_lesseq)"], ["", "end"], ["", "context pseudo_hoop_algebra begin"], ["", "lemma impl_l_d1: \"(a l\\<rightarrow> b) = d1 a (a \\<sqinter> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a l\\<rightarrow> b = d1 a (a \\<sqinter> b)", "by (simp add: d1_def lemma_2_6_20_a )"], ["", "lemma impl_r_d2: \"(a r\\<rightarrow> b) = d2 a (a \\<sqinter> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a r\\<rightarrow> b = d2 a (a \\<sqinter> b)", "by (simp add: d2_def lemma_2_6_21_a)"], ["", "lemma lemma_3_10_iii_i:\n  \"H \\<in> filters \\<Longrightarrow> cong_r H = cong_l H \\<Longrightarrow> H \\<in> normalfilters\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> filters; cong_r H = cong_l H\\<rbrakk>\n    \\<Longrightarrow> H \\<in> normalfilters", "apply (unfold normalfilters_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> filters; cong_r H = cong_l H\\<rbrakk>\n    \\<Longrightarrow> H \\<in> {F \\<in> filters.\n                               \\<forall>a b.\n                                  (a l\\<rightarrow> b \\<in> F) =\n                                  (a r\\<rightarrow> b \\<in> F)}", "apply (simp add: impl_l_d1 impl_r_d2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> filters; cong_r H = cong_l H\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a b.\n                         (d1 a (a \\<sqinter> b) \\<in> H) =\n                         (d2 a (a \\<sqinter> b) \\<in> H)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d1 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d2 a (a \\<sqinter> b) \\<in> H\n 2. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d2 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d1 a (a \\<sqinter> b) \\<in> H", "apply (subgoal_tac  \"cong_r H a (a \\<sqinter> b)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d1 a (a \\<sqinter> b) \\<in> H; cong_r H a (a \\<sqinter> b)\\<rbrakk>\n       \\<Longrightarrow> d2 a (a \\<sqinter> b) \\<in> H\n 2. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d1 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> cong_r H a (a \\<sqinter> b)\n 3. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d2 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d1 a (a \\<sqinter> b) \\<in> H", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d1 a (a \\<sqinter> b) \\<in> H; cong_l H a (a \\<sqinter> b)\\<rbrakk>\n       \\<Longrightarrow> d2 a (a \\<sqinter> b) \\<in> H\n 2. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d1 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> cong_r H a (a \\<sqinter> b)\n 3. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d2 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d1 a (a \\<sqinter> b) \\<in> H", "apply (subst (asm) cong_l_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d1 a (a \\<sqinter> b) \\<in> H;\n        d2 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d2 a (a \\<sqinter> b) \\<in> H\n 2. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d1 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> cong_r H a (a \\<sqinter> b)\n 3. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d2 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d1 a (a \\<sqinter> b) \\<in> H", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d1 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> cong_r H a (a \\<sqinter> b)\n 2. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d2 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d1 a (a \\<sqinter> b) \\<in> H", "apply (subst cong_r_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d1 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d1 a (a \\<sqinter> b) \\<in> H\n 2. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d2 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d1 a (a \\<sqinter> b) \\<in> H", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d2 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d1 a (a \\<sqinter> b) \\<in> H", "apply (subgoal_tac  \"cong_r H a (a \\<sqinter> b)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d2 a (a \\<sqinter> b) \\<in> H; cong_r H a (a \\<sqinter> b)\\<rbrakk>\n       \\<Longrightarrow> d1 a (a \\<sqinter> b) \\<in> H\n 2. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d2 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> cong_r H a (a \\<sqinter> b)", "apply (subst (asm) cong_r_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d2 a (a \\<sqinter> b) \\<in> H;\n        d1 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d1 a (a \\<sqinter> b) \\<in> H\n 2. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d2 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> cong_r H a (a \\<sqinter> b)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d2 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> cong_r H a (a \\<sqinter> b)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d2 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> cong_l H a (a \\<sqinter> b)", "apply (subst cong_l_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>H \\<in> filters; cong_r H = cong_l H;\n        d2 a (a \\<sqinter> b) \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d2 a (a \\<sqinter> b) \\<in> H", "by simp"], ["", "lemma lemma_3_10_ii_i:\n  \"H \\<in> filters \\<Longrightarrow>  (\\<forall> a . {a} ** H = H ** {a}) \\<Longrightarrow> H \\<in> normalfilters\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a}\\<rbrakk>\n    \\<Longrightarrow> H \\<in> normalfilters", "apply (rule lemma_3_10_iii_i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a}\\<rbrakk>\n    \\<Longrightarrow> H \\<in> filters\n 2. \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a}\\<rbrakk>\n    \\<Longrightarrow> cong_r H = cong_l H", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a}\\<rbrakk>\n    \\<Longrightarrow> cong_r H = cong_l H", "apply (rule lemma_3_10_ii_iii)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a}\\<rbrakk>\n    \\<Longrightarrow> H \\<in> filters\n 2. \\<lbrakk>H \\<in> filters; \\<forall>a. {a} ** H = H ** {a}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a. {a} ** H = H ** {a}", "by simp_all"], ["", "definition\n  \"allpowers x n = {y . \\<exists> i. i < n \\<and> y = x ^ i}\""], ["", "lemma times_set_in: \"a \\<in> A \\<Longrightarrow> b \\<in> B \\<Longrightarrow> c = a * b \\<Longrightarrow> c \\<in> A ** B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> A; b \\<in> B; c = a * b\\<rbrakk>\n    \\<Longrightarrow> c \\<in> A ** B", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> A; b \\<in> B; c = a * b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x\\<in>A. \\<exists>y\\<in>B. a * b = x * y", "by auto"], ["", "lemma power_set_power: \"a \\<in> A \\<Longrightarrow> a ^ n \\<in> A *^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> A \\<Longrightarrow> a ^ n \\<in> A *^ n", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> A \\<Longrightarrow> a ^ 0 \\<in> A *^ 0\n 2. \\<And>n.\n       \\<lbrakk>a \\<in> A; a ^ n \\<in> A *^ n\\<rbrakk>\n       \\<Longrightarrow> a ^ Suc n \\<in> A *^ Suc n", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> A; a ^ n \\<in> A *^ n\\<rbrakk>\n       \\<Longrightarrow> a ^ Suc n \\<in> A *^ Suc n", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> A; a ^ n \\<in> A *^ n\\<rbrakk>\n       \\<Longrightarrow> a * a ^ n \\<in> A ** A *^ n", "apply (rule_tac a = a and b = \"a ^ n\" in times_set_in)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> A; a ^ n \\<in> A *^ n\\<rbrakk>\n       \\<Longrightarrow> a \\<in> A\n 2. \\<And>n.\n       \\<lbrakk>a \\<in> A; a ^ n \\<in> A *^ n\\<rbrakk>\n       \\<Longrightarrow> a ^ n \\<in> A *^ n\n 3. \\<And>n.\n       \\<lbrakk>a \\<in> A; a ^ n \\<in> A *^ n\\<rbrakk>\n       \\<Longrightarrow> a * a ^ n = a * a ^ n", "by simp_all"], ["", "lemma normal_filter_union: \"H \\<in> normalfilters \\<Longrightarrow> (H \\<union> {x}) *^ n = (H ** (allpowers x n)) \\<union> {x ^ n} \""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow>\n    (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. H \\<in> normalfilters \\<Longrightarrow>\n    (H \\<union> {x}) *^ 0 = H ** allpowers x 0 \\<union> {x ^ 0}\n 2. \\<And>n.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> (H \\<union> {x}) *^ Suc n =\n                         H ** allpowers x (Suc n) \\<union> {x ^ Suc n}", "apply (simp add: times_set_def allpowers_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> (H \\<union> {x}) *^ Suc n =\n                         H ** allpowers x (Suc n) \\<union> {x ^ Suc n}", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> (H \\<union> {x}) *^ Suc n;\n        xa \\<notin> H ** allpowers x (Suc n); xa \\<notin> {}\\<rbrakk>\n       \\<Longrightarrow> xa = x ^ Suc n\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n = insert (x ^ n) (H ** allpowers x n);\n        xa \\<in> insert x H ** insert (x ^ n) (H ** allpowers x n);\n        xa \\<notin> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa = x * x ^ n\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (simp add:  times_set_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xa = x * x ^ n \\<or>\n        (\\<exists>y.\n            (\\<exists>xa\\<in>H.\n                \\<exists>ya\\<in>allpowers x n. y = xa * ya) \\<and>\n            xa = x * y) \\<or>\n        (\\<exists>xb\\<in>H.\n            xa = xb * x ^ n \\<or>\n            (\\<exists>y.\n                (\\<exists>xa\\<in>H.\n                    \\<exists>ya\\<in>allpowers x n. y = xa * ya) \\<and>\n                xa = xb * y));\n        \\<forall>xb\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xa \\<noteq> xb * y\\<rbrakk>\n       \\<Longrightarrow> xa = x * x ^ n\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply safe"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n xa y xaa ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              x * (xaa * ya) \\<noteq> xa * y;\n        xaa \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> x * (xaa * ya) = x * x ^ n\n 2. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 3. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (simp add:  allpowers_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n xa ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * ya) \\<noteq> xb * y;\n        xa \\<in> H; \\<exists>i<n. ya = x ^ i\\<rbrakk>\n       \\<Longrightarrow> x * (xa * ya) = x * x ^ n\n 2. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 3. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply safe"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n xa ya i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n\\<rbrakk>\n       \\<Longrightarrow> x * (xa * x ^ i) = x * x ^ n\n 2. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 3. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (subgoal_tac \"x * xa \\<in> H ** {x}\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n xa ya i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n; x * xa \\<in> H ** {x}\\<rbrakk>\n       \\<Longrightarrow> x * (xa * x ^ i) = x * x ^ n\n 2. \\<And>n xa ya i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> H ** {x}\n 3. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 4. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 6. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n; \\<exists>xb\\<in>H. x * xa = xb * x\\<rbrakk>\n       \\<Longrightarrow> x * (xa * x ^ i) = x * x ^ n\n 2. \\<And>n xa ya i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> H ** {x}\n 3. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 4. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 6. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply safe"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n xa i xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n; xb \\<in> H; x * xa = xb * x\\<rbrakk>\n       \\<Longrightarrow> x * (xa * x ^ i) = x * x ^ n\n 2. \\<And>n xa ya i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> H ** {x}\n 3. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 4. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 6. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (drule_tac x = \"xb\" in bspec)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n xa i xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < n; xb \\<in> H; x * xa = xb * x\\<rbrakk>\n       \\<Longrightarrow> xb \\<in> H\n 2. \\<And>n xa i xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < n; xb \\<in> H; x * xa = xb * x;\n        \\<forall>y.\n           (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n           x * (xa * x ^ i) \\<noteq> xb * y\\<rbrakk>\n       \\<Longrightarrow> x * (xa * x ^ i) = x * x ^ n\n 3. \\<And>n xa ya i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> H ** {x}\n 4. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 5. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 6. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 7. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n xa i xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < n; xb \\<in> H; x * xa = xb * x;\n        \\<forall>y.\n           (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n           x * (xa * x ^ i) \\<noteq> xb * y\\<rbrakk>\n       \\<Longrightarrow> x * (xa * x ^ i) = x * x ^ n\n 2. \\<And>n xa ya i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> H ** {x}\n 3. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 4. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 6. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (drule_tac x = \"x ^ (i + 1)\" in spec)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n xa i xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < n; xb \\<in> H; x * xa = xb * x;\n        (\\<exists>ia<Suc n. x ^ (i + 1) = x ^ ia) \\<longrightarrow>\n        x * (xa * x ^ i) \\<noteq> xb * x ^ (i + 1)\\<rbrakk>\n       \\<Longrightarrow> x * (xa * x ^ i) = x * x ^ n\n 2. \\<And>n xa ya i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> H ** {x}\n 3. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 4. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 6. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n xa i xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < n; xb \\<in> H; x * xa = xb * x;\n        (\\<exists>ia<Suc n. x * x ^ i = x ^ ia) \\<longrightarrow>\n        x * (xa * x ^ i) \\<noteq> xb * (x * x ^ i)\\<rbrakk>\n       \\<Longrightarrow> x * (xa * x ^ i) = x * x ^ n\n 2. \\<And>n xa ya i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> H ** {x}\n 3. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 4. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 6. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply safe"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n xa i xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < n; xb \\<in> H; x * xa = xb * x;\n        \\<not> (\\<exists>ia<Suc n. x * x ^ i = x ^ ia)\\<rbrakk>\n       \\<Longrightarrow> x * (xa * x ^ i) = x * x ^ n\n 2. \\<And>n xa i xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < n; xb \\<in> H; x * xa = xb * x;\n        x * (xa * x ^ i) \\<noteq> xb * (x * x ^ i)\\<rbrakk>\n       \\<Longrightarrow> x * (xa * x ^ i) = x * x ^ n\n 3. \\<And>n xa ya i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> H ** {x}\n 4. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 5. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 6. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 7. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (erule notE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n xa i xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < n; xb \\<in> H; x * xa = xb * x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ia<Suc n. x * x ^ i = x ^ ia\n 2. \\<And>n xa i xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < n; xb \\<in> H; x * xa = xb * x;\n        x * (xa * x ^ i) \\<noteq> xb * (x * x ^ i)\\<rbrakk>\n       \\<Longrightarrow> x * (xa * x ^ i) = x * x ^ n\n 3. \\<And>n xa ya i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> H ** {x}\n 4. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 5. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 6. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 7. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (rule_tac x = \"i + 1\" in exI)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n xa i xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < n; xb \\<in> H; x * xa = xb * x\\<rbrakk>\n       \\<Longrightarrow> i + 1 < Suc n \\<and> x * x ^ i = x ^ (i + 1)\n 2. \\<And>n xa i xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < n; xb \\<in> H; x * xa = xb * x;\n        x * (xa * x ^ i) \\<noteq> xb * (x * x ^ i)\\<rbrakk>\n       \\<Longrightarrow> x * (xa * x ^ i) = x * x ^ n\n 3. \\<And>n xa ya i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> H ** {x}\n 4. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 5. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 6. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 7. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n xa i xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < n; xb \\<in> H; x * xa = xb * x;\n        x * (xa * x ^ i) \\<noteq> xb * (x * x ^ i)\\<rbrakk>\n       \\<Longrightarrow> x * (xa * x ^ i) = x * x ^ n\n 2. \\<And>n xa ya i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> H ** {x}\n 3. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 4. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 6. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (erule notE)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n xa i xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < n; xb \\<in> H; x * xa = xb * x\\<rbrakk>\n       \\<Longrightarrow> x * (xa * x ^ i) = xb * (x * x ^ i)\n 2. \\<And>n xa ya i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> H ** {x}\n 3. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 4. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 6. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (simp add: mult.assoc [THEN sym])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n xa ya i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> H ** {x}\n 2. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 3. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (drule_tac a = x in lemma_3_10_i_ii)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n xa ya i.\n       \\<lbrakk>insert x H *^ n =\n                insert (x ^ n)\n                 {a. \\<exists>xa\\<in>H.\n                        \\<exists>y.\n                           (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n; {x} ** H = H ** {x}\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> H ** {x}\n 2. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 3. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (subgoal_tac \"H ** {x} = {x} ** H\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n xa ya i.\n       \\<lbrakk>insert x H *^ n =\n                insert (x ^ n)\n                 {a. \\<exists>xa\\<in>H.\n                        \\<exists>y.\n                           (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n; {x} ** H = H ** {x}; H ** {x} = {x} ** H\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> H ** {x}\n 2. \\<And>n xa ya i.\n       \\<lbrakk>insert x H *^ n =\n                insert (x ^ n)\n                 {a. \\<exists>xa\\<in>H.\n                        \\<exists>y.\n                           (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n; {x} ** H = H ** {x}\\<rbrakk>\n       \\<Longrightarrow> H ** {x} = {x} ** H\n 3. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 4. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 6. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>insert x H *^ n =\n                insert (x ^ n)\n                 {a. \\<exists>xa\\<in>H.\n                        \\<exists>y.\n                           (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n; H ** {x} = {x} ** H\\<rbrakk>\n       \\<Longrightarrow> x * xa \\<in> {x} ** H\n 2. \\<And>n xa ya i.\n       \\<lbrakk>insert x H *^ n =\n                insert (x ^ n)\n                 {a. \\<exists>xa\\<in>H.\n                        \\<exists>y.\n                           (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n; {x} ** H = H ** {x}\\<rbrakk>\n       \\<Longrightarrow> H ** {x} = {x} ** H\n 3. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 4. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 6. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>insert x H *^ n =\n                insert (x ^ n)\n                 {a. \\<exists>xa\\<in>H.\n                        \\<exists>y.\n                           (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n;\n        {a. \\<exists>xa\\<in>H. a = xa * x} =\n        {a. \\<exists>y\\<in>H. a = x * y}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>H. x * xa = x * y\n 2. \\<And>n xa ya i.\n       \\<lbrakk>insert x H *^ n =\n                insert (x ^ n)\n                 {a. \\<exists>xa\\<in>H.\n                        \\<exists>y.\n                           (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n; {x} ** H = H ** {x}\\<rbrakk>\n       \\<Longrightarrow> H ** {x} = {x} ** H\n 3. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 4. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 6. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply auto[1]"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n xa ya i.\n       \\<lbrakk>insert x H *^ n =\n                insert (x ^ n)\n                 {a. \\<exists>xa\\<in>H.\n                        \\<exists>y.\n                           (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        \\<forall>xb\\<in>H.\n           \\<forall>y.\n              (\\<exists>i<Suc n. y = x ^ i) \\<longrightarrow>\n              x * (xa * x ^ i) \\<noteq> xb * y;\n        xa \\<in> H; i < n; {x} ** H = H ** {x}\\<rbrakk>\n       \\<Longrightarrow> H ** {x} = {x} ** H\n 2. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 3. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n). xaa * x ^ n \\<noteq> xa * y;\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 2. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (drule_tac x = \"xaa\" in bspec)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xaa \\<in> H\n 2. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xaa \\<in> H;\n        \\<forall>y\\<in>allpowers x (Suc n).\n           xaa * x ^ n \\<noteq> xaa * y\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 3. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xaa \\<in> H;\n        \\<forall>y\\<in>allpowers x (Suc n).\n           xaa * x ^ n \\<noteq> xaa * y\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 2. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (drule_tac x = \"x ^ n\" in bspec)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xaa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x ^ n \\<in> allpowers x (Suc n)\n 2. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xaa \\<in> H; xaa * x ^ n \\<noteq> xaa * x ^ n\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 3. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (simp add: allpowers_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i<Suc n. x ^ n = x ^ i\n 2. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xaa \\<in> H; xaa * x ^ n \\<noteq> xaa * x ^ n\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 3. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa xaa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xaa \\<in> H; xaa * x ^ n \\<noteq> xaa * x ^ n\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ n = x * x ^ n\n 2. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<forall>xa\\<in>H.\n           \\<forall>y\\<in>allpowers x (Suc n).\n              xaa * (xb * ya) \\<noteq> xa * y;\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (drule_tac x = \"xaa * xb\" in bspec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> xaa * xb \\<in> H\n 2. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n;\n        \\<forall>y\\<in>allpowers x (Suc n).\n           xaa * (xb * ya) \\<noteq> xaa * xb * y\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (simp add: filter_i)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa xaa y xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xaa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n;\n        \\<forall>y\\<in>allpowers x (Suc n).\n           xaa * (xb * ya) \\<noteq> xaa * xb * y\\<rbrakk>\n       \\<Longrightarrow> xaa * (xb * ya) = x * x ^ n\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (simp add: mult.assoc)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n;\n        \\<forall>y\\<in>allpowers x (Suc n).\n           xa * (xb * ya) \\<noteq> xa * (xb * y)\\<rbrakk>\n       \\<Longrightarrow> xa * (xb * ya) = x * x ^ n\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (drule_tac x = \"ya\" in bspec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n\\<rbrakk>\n       \\<Longrightarrow> ya \\<in> allpowers x (Suc n)\n 2. \\<And>n xa xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n;\n        xa * (xb * ya) \\<noteq> xa * (xb * ya)\\<rbrakk>\n       \\<Longrightarrow> xa * (xb * ya) = x * x ^ n\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (simp add: allpowers_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; xb \\<in> H; \\<exists>i<n. ya = x ^ i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i<Suc n. ya = x ^ i\n 2. \\<And>n xa xb ya.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xa \\<in> H; xb \\<in> H; ya \\<in> allpowers x n;\n        xa * (xb * ya) \\<noteq> xa * (xb * ya)\\<rbrakk>\n       \\<Longrightarrow> xa * (xb * ya) = x * x ^ n\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa xb ya i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; xb \\<in> H; i < n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ia<Suc n. x ^ i = x ^ ia\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (rule_tac x = i in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa xb ya i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; xb \\<in> H; i < n\\<rbrakk>\n       \\<Longrightarrow> i < Suc n \\<and> x ^ i = x ^ i\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> (H \\<union> {x}) *^ Suc n\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n = insert (x ^ n) (H ** allpowers x n);\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> insert x H **\n                                  insert (x ^ n) (H ** allpowers x n)\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (subst (asm)  times_set_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xa \\<in> H ** allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> insert x H **\n                                  insert (x ^ n) (H ** allpowers x n)\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (subst (asm)  times_set_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xa \\<in> {a. \\<exists>xa\\<in>H.\n                        \\<exists>y\\<in>allpowers x (Suc n).\n                           a = xa * y}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> insert x H **\n                                  insert (x ^ n) (H ** allpowers x n)\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        \\<exists>xb\\<in>H.\n           \\<exists>y\\<in>allpowers x (Suc n). xa = xb * y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> insert x H **\n                                  insert (x ^ n) (H ** allpowers x n)\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa xaa y.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H. \\<exists>y\\<in>allpowers x n. a = xa * y};\n        xaa \\<in> H; y \\<in> allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xaa * y\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (subst (asm) allpowers_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa xaa y.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; y \\<in> allpowers x (Suc n)\\<rbrakk>\n       \\<Longrightarrow> xaa * y\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (subst (asm) allpowers_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa xaa y.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; y \\<in> {y. \\<exists>i<Suc n. y = x ^ i}\\<rbrakk>\n       \\<Longrightarrow> xaa * y\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (case_tac \"i = 0\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; i = 0\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 2. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i = 0\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> insert x H **\n                                  insert (x ^ n) (H ** allpowers x n)\n 2. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (rule_tac a = xa and b = 1 in times_set_in)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i = 0\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> insert x H\n 2. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i = 0\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<in> insert (x ^ n) (H ** allpowers x n)\n 3. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i = 0\\<rbrakk>\n       \\<Longrightarrow> xa = xa * (1::'a)\n 4. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i = 0\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<in> insert (x ^ n) (H ** allpowers x n)\n 2. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i = 0\\<rbrakk>\n       \\<Longrightarrow> xa = xa * (1::'a)\n 3. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (simp add: allpowers_def times_set_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i = 0\\<rbrakk>\n       \\<Longrightarrow> (1::'a) = x ^ n \\<or>\n                         (\\<exists>xa\\<in>H.\n                             \\<exists>y.\n                                (\\<exists>i<n. y = x ^ i) \\<and>\n                                (1::'a) = xa * y)\n 2. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i = 0\\<rbrakk>\n       \\<Longrightarrow> xa = xa * (1::'a)\n 3. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H;\n        \\<not> (\\<exists>xa\\<in>H.\n                   \\<exists>y.\n                      (\\<exists>i<n. y = x ^ i) \\<and>\n                      (1::'a) = xa * y)\\<rbrakk>\n       \\<Longrightarrow> (1::'a) = x ^ n\n 2. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa = xa * (1::'a)\n 3. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H;\n        \\<forall>xa\\<in>H.\n           \\<forall>y.\n              (\\<forall>i<n. y \\<noteq> x ^ i) \\<or>\n              (1::'a) \\<noteq> xa * y\\<rbrakk>\n       \\<Longrightarrow> (1::'a) = x ^ n\n 2. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa = xa * (1::'a)\n 3. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (drule_tac x = 1 in bspec)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<in> H\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H;\n        \\<forall>y.\n           (\\<forall>i<n. y \\<noteq> x ^ i) \\<or>\n           (1::'a) \\<noteq> (1::'a) * y\\<rbrakk>\n       \\<Longrightarrow> (1::'a) = x ^ n\n 3. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa = xa * (1::'a)\n 4. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 5. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H;\n        \\<forall>y.\n           (\\<forall>i<n. y \\<noteq> x ^ i) \\<or>\n           (1::'a) \\<noteq> (1::'a) * y\\<rbrakk>\n       \\<Longrightarrow> (1::'a) = x ^ n\n 2. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa = xa * (1::'a)\n 3. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (drule_tac x = 1 in spec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H;\n        (\\<forall>i<n. (1::'a) \\<noteq> x ^ i) \\<or>\n        (1::'a) \\<noteq> (1::'a) * (1::'a)\\<rbrakk>\n       \\<Longrightarrow> (1::'a) = x ^ n\n 2. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa = xa * (1::'a)\n 3. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; \\<forall>i<n. (1::'a) \\<noteq> x ^ i\\<rbrakk>\n       \\<Longrightarrow> (1::'a) = x ^ n\n 2. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa = xa * (1::'a)\n 3. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (drule_tac x = 0 in spec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; 0 < n \\<longrightarrow> (1::'a) \\<noteq> x ^ 0\\<rbrakk>\n       \\<Longrightarrow> (1::'a) = x ^ n\n 2. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa = xa * (1::'a)\n 3. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply auto[1]"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa = xa * (1::'a)\n 2. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i\n                         \\<in> insert x H **\n                               insert (x ^ n) (H ** allpowers x n)\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (rule_tac a = xaa and b = \"x ^ i\" in times_set_in)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> xaa \\<in> insert x H\n 2. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> x ^ i \\<in> insert (x ^ n) (H ** allpowers x n)\n 3. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i = xaa * x ^ i\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> x ^ i \\<in> insert (x ^ n) (H ** allpowers x n)\n 2. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i = xaa * x ^ i\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (case_tac \"i = n\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i; i = n\\<rbrakk>\n       \\<Longrightarrow> x ^ i \\<in> insert (x ^ n) (H ** allpowers x n)\n 2. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i; i \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> x ^ i \\<in> insert (x ^ n) (H ** allpowers x n)\n 3. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i = xaa * x ^ i\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i; i \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> x ^ i \\<in> insert (x ^ n) (H ** allpowers x n)\n 2. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i = xaa * x ^ i\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (simp add: allpowers_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < Suc n; 0 < i; i \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> x ^ i = x ^ n \\<or>\n                         x ^ i \\<in> H ** {y. \\<exists>i<n. y = x ^ i}\n 2. \\<And>n xa xaa y i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y\\<in>{y. \\<exists>i<n. y = x ^ i}. a = xa * y};\n        xaa \\<in> H; i < Suc n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> xaa * x ^ i = xaa * x ^ i\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < Suc n; 0 < i; i \\<noteq> n;\n        x ^ i \\<notin> H ** {y. \\<exists>i<n. y = x ^ i}\\<rbrakk>\n       \\<Longrightarrow> x ^ i = x ^ n\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (subgoal_tac \"x ^ i \\<in>  H ** {y . \\<exists>i<n. y = x ^ i}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < Suc n; 0 < i; i \\<noteq> n;\n        x ^ i \\<notin> H ** {y. \\<exists>i<n. y = x ^ i};\n        x ^ i \\<in> H ** {y. \\<exists>i<n. y = x ^ i}\\<rbrakk>\n       \\<Longrightarrow> x ^ i = x ^ n\n 2. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < Suc n; 0 < i; i \\<noteq> n;\n        x ^ i \\<notin> H ** {y. \\<exists>i<n. y = x ^ i}\\<rbrakk>\n       \\<Longrightarrow> x ^ i \\<in> H ** {y. \\<exists>i<n. y = x ^ i}\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < Suc n; 0 < i; i \\<noteq> n;\n        x ^ i \\<notin> H ** {y. \\<exists>i<n. y = x ^ i}\\<rbrakk>\n       \\<Longrightarrow> x ^ i \\<in> H ** {y. \\<exists>i<n. y = x ^ i}\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (rule_tac a = 1 and b = \"x ^ i\" in times_set_in)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < Suc n; 0 < i; i \\<noteq> n;\n        x ^ i \\<notin> H ** {y. \\<exists>i<n. y = x ^ i}\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<in> H\n 2. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < Suc n; 0 < i; i \\<noteq> n;\n        x ^ i \\<notin> H ** {y. \\<exists>i<n. y = x ^ i}\\<rbrakk>\n       \\<Longrightarrow> x ^ i \\<in> {y. \\<exists>i<n. y = x ^ i}\n 3. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < Suc n; 0 < i; i \\<noteq> n;\n        x ^ i \\<notin> H ** {y. \\<exists>i<n. y = x ^ i}\\<rbrakk>\n       \\<Longrightarrow> x ^ i = (1::'a) * x ^ i\n 4. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < Suc n; 0 < i; i \\<noteq> n;\n        x ^ i \\<notin> H ** {y. \\<exists>i<n. y = x ^ i}\\<rbrakk>\n       \\<Longrightarrow> x ^ i \\<in> {y. \\<exists>i<n. y = x ^ i}\n 2. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < Suc n; 0 < i; i \\<noteq> n;\n        x ^ i \\<notin> H ** {y. \\<exists>i<n. y = x ^ i}\\<rbrakk>\n       \\<Longrightarrow> x ^ i = (1::'a) * x ^ i\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < Suc n; 0 < i; i \\<noteq> n;\n        x ^ i \\<notin> H ** {y. \\<exists>i<n. y = x ^ i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ia<n. x ^ i = x ^ ia\n 2. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < Suc n; 0 < i; i \\<noteq> n;\n        x ^ i \\<notin> H ** {y. \\<exists>i<n. y = x ^ i}\\<rbrakk>\n       \\<Longrightarrow> x ^ i = (1::'a) * x ^ i\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (rule_tac x = i in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < Suc n; 0 < i; i \\<noteq> n;\n        x ^ i \\<notin> H ** {y. \\<exists>i<n. y = x ^ i}\\<rbrakk>\n       \\<Longrightarrow> i < n \\<and> x ^ i = x ^ i\n 2. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < Suc n; 0 < i; i \\<noteq> n;\n        x ^ i \\<notin> H ** {y. \\<exists>i<n. y = x ^ i}\\<rbrakk>\n       \\<Longrightarrow> x ^ i = (1::'a) * x ^ i\n 3. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xa i.\n       \\<lbrakk>H \\<in> normalfilters;\n        insert x H *^ n =\n        insert (x ^ n)\n         {a. \\<exists>xa\\<in>H.\n                \\<exists>y. (\\<exists>i<n. y = x ^ i) \\<and> a = xa * y};\n        xa \\<in> H; i < Suc n; 0 < i; i \\<noteq> n;\n        x ^ i \\<notin> H ** {y. \\<exists>i<n. y = x ^ i}\\<rbrakk>\n       \\<Longrightarrow> x ^ i = (1::'a) * x ^ i\n 2. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n \\<in> (H \\<union> {x}) *^ Suc n", "apply (rule power_set_power)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n xa.\n       \\<lbrakk>H \\<in> normalfilters;\n        (H \\<union> {x}) *^ n = H ** allpowers x n \\<union> {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H \\<union> {x}", "by simp"], ["", "lemma lemma_3_11_i: \"H \\<in> normalfilters \\<Longrightarrow> filterof (H \\<union> {x}) = {a . \\<exists> n h . h \\<in> H \\<and> h * x ^ n \\<le> a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow>\n    filterof (H \\<union> {x}) =\n    {a. \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> a}", "apply (subst prop_3_2_i)"], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow>\n    {a. \\<exists>n xa. xa \\<in> (H \\<union> {x}) *^ n \\<and> xa \\<le> a} =\n    {a. \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> a}", "apply (subst normal_filter_union)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa n a.\n       H \\<in> normalfilters \\<Longrightarrow> H \\<in> normalfilters\n 2. H \\<in> normalfilters \\<Longrightarrow>\n    {a. \\<exists>n xa.\n           xa \\<in> H ** allpowers x n \\<union> {x ^ n} \\<and> xa \\<le> a} =\n    {a. \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> a}", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow>\n    {a. \\<exists>n xa.\n           (xa = x ^ n \\<or> xa \\<in> H ** allpowers x n) \\<and>\n           xa \\<le> a} =\n    {a. \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> a}", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa n xaa.\n       \\<lbrakk>H \\<in> normalfilters; x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xa\n 2. \\<And>xa n xaa.\n       \\<lbrakk>H \\<in> normalfilters; xaa \\<le> xa;\n        xaa \\<in> H ** allpowers x n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xa\n 3. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n xb.\n                            (xb = x ^ n \\<or>\n                             xb \\<in> H ** allpowers x n) \\<and>\n                            xb \\<le> xa", "apply (rule_tac x = n in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa n xaa.\n       \\<lbrakk>H \\<in> normalfilters; x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h. h \\<in> H \\<and> h * x ^ n \\<le> xa\n 2. \\<And>xa n xaa.\n       \\<lbrakk>H \\<in> normalfilters; xaa \\<le> xa;\n        xaa \\<in> H ** allpowers x n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xa\n 3. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n xb.\n                            (xb = x ^ n \\<or>\n                             xb \\<in> H ** allpowers x n) \\<and>\n                            xb \\<le> xa", "apply (rule_tac x = 1 in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa n xaa.\n       \\<lbrakk>H \\<in> normalfilters; x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<in> H \\<and> (1::'a) * x ^ n \\<le> xa\n 2. \\<And>xa n xaa.\n       \\<lbrakk>H \\<in> normalfilters; xaa \\<le> xa;\n        xaa \\<in> H ** allpowers x n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xa\n 3. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n xb.\n                            (xb = x ^ n \\<or>\n                             xb \\<in> H ** allpowers x n) \\<and>\n                            xb \\<le> xa", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa n xaa.\n       \\<lbrakk>H \\<in> normalfilters; xaa \\<le> xa;\n        xaa \\<in> H ** allpowers x n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xa\n 2. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n xb.\n                            (xb = x ^ n \\<or>\n                             xb \\<in> H ** allpowers x n) \\<and>\n                            xb \\<le> xa", "apply (simp_all add: allpowers_def times_set_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa n xaa.\n       \\<lbrakk>H \\<in> normalfilters; xaa \\<le> xa;\n        \\<exists>xa\\<in>H.\n           \\<exists>y.\n              (\\<exists>i<n. y = x ^ i) \\<and> xaa = xa * y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xa\n 2. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n xb.\n                            (xb = x ^ n \\<or>\n                             (\\<exists>xa\\<in>H.\n                                 \\<exists>y.\n                                    (\\<exists>i<n. y = x ^ i) \\<and>\n                                    xb = xa * y)) \\<and>\n                            xb \\<le> xa", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa n xaa xb y i.\n       \\<lbrakk>H \\<in> normalfilters; xb * x ^ i \\<le> xa; xb \\<in> H;\n        i < n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xa\n 2. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n xb.\n                            (xb = x ^ n \\<or>\n                             (\\<exists>xa\\<in>H.\n                                 \\<exists>y.\n                                    (\\<exists>i<n. y = x ^ i) \\<and>\n                                    xb = xa * y)) \\<and>\n                            xb \\<le> xa", "apply (rule_tac x = i in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa n xaa xb y i.\n       \\<lbrakk>H \\<in> normalfilters; xb * x ^ i \\<le> xa; xb \\<in> H;\n        i < n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h. h \\<in> H \\<and> h * x ^ i \\<le> xa\n 2. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n xb.\n                            (xb = x ^ n \\<or>\n                             (\\<exists>xa\\<in>H.\n                                 \\<exists>y.\n                                    (\\<exists>i<n. y = x ^ i) \\<and>\n                                    xb = xa * y)) \\<and>\n                            xb \\<le> xa", "apply (rule_tac x = xb in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa n xaa xb y i.\n       \\<lbrakk>H \\<in> normalfilters; xb * x ^ i \\<le> xa; xb \\<in> H;\n        i < n\\<rbrakk>\n       \\<Longrightarrow> xb \\<in> H \\<and> xb * x ^ i \\<le> xa\n 2. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n xb.\n                            (xb = x ^ n \\<or>\n                             (\\<exists>xa\\<in>H.\n                                 \\<exists>y.\n                                    (\\<exists>i<n. y = x ^ i) \\<and>\n                                    xb = xa * y)) \\<and>\n                            xb \\<le> xa", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n xb.\n                            (xb = x ^ n \\<or>\n                             (\\<exists>xa\\<in>H.\n                                 \\<exists>y.\n                                    (\\<exists>i<n. y = x ^ i) \\<and>\n                                    xb = xa * y)) \\<and>\n                            xb \\<le> xa", "apply (rule_tac x = \"n + 1\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb.\n                            (xb = x ^ (n + 1) \\<or>\n                             (\\<exists>xa\\<in>H.\n                                 \\<exists>y.\n                                    (\\<exists>i<n + 1. y = x ^ i) \\<and>\n                                    xb = xa * y)) \\<and>\n                            xb \\<le> xa", "apply (rule_tac x = \"h * x ^ n\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> (h * x ^ n = x ^ (n + 1) \\<or>\n                          (\\<exists>xa\\<in>H.\n                              \\<exists>y.\n                                 (\\<exists>i<n + 1. y = x ^ i) \\<and>\n                                 h * x ^ n = xa * y)) \\<and>\n                         h * x ^ n \\<le> xa", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H; h * x ^ n \\<le> xa;\n        \\<not> (\\<exists>xa\\<in>H.\n                   \\<exists>y.\n                      (\\<exists>i<n + 1. y = x ^ i) \\<and>\n                      h * x ^ n = xa * y)\\<rbrakk>\n       \\<Longrightarrow> h * x ^ n = x ^ (n + 1)", "apply (erule notE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H.\n                            \\<exists>y.\n                               (\\<exists>i<n + 1. y = x ^ i) \\<and>\n                               h * x ^ n = xa * y", "apply (rule_tac x = h in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (\\<exists>i<n + 1. y = x ^ i) \\<and>\n                            h * x ^ n = h * y\n 2. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> h \\<in> H", "apply (rule_tac x = \"x ^ n\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>i<n + 1. x ^ n = x ^ i) \\<and>\n                         h * x ^ n = h * x ^ n\n 2. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> h \\<in> H", "by auto"], ["", "lemma lemma_3_11_ii: \"H \\<in> normalfilters \\<Longrightarrow> filterof (H \\<union> {x}) = {a . \\<exists> n h . h \\<in> H \\<and> (x ^ n) * h \\<le> a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow>\n    filterof (H \\<union> {x}) =\n    {a. \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> a}", "apply (subst lemma_3_11_i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. H \\<in> normalfilters \\<Longrightarrow> H \\<in> normalfilters\n 2. H \\<in> normalfilters \\<Longrightarrow>\n    {a. \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> a} =\n    {a. \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> a}", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow>\n    {a. \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> a} =\n    {a. \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> a}", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> xa\n 2. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        x ^ n * h \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xa", "apply (rule_tac x = n in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h. h \\<in> H \\<and> x ^ n * h \\<le> xa\n 2. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        x ^ n * h \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xa", "apply (subgoal_tac \"h * x ^ n \\<in> {x ^ n} ** H\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H; h * x ^ n \\<le> xa;\n        h * x ^ n \\<in> {x ^ n} ** H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h. h \\<in> H \\<and> x ^ n * h \\<le> xa\n 2. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> h * x ^ n \\<in> {x ^ n} ** H\n 3. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        x ^ n * h \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xa", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H; h * x ^ n \\<le> xa;\n        \\<exists>y\\<in>H. h * x ^ n = x ^ n * y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h. h \\<in> H \\<and> x ^ n * h \\<le> xa\n 2. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> h * x ^ n \\<in> {x ^ n} ** H\n 3. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        x ^ n * h \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xa", "apply auto[1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        h * x ^ n \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> h * x ^ n \\<in> {x ^ n} ** H\n 2. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        x ^ n * h \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xa", "apply (drule_tac a = \"x ^ n\" in lemma_3_10_i_ii)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa n h.\n       \\<lbrakk>h \\<in> H; h * x ^ n \\<le> xa;\n        {x ^ n} ** H = H ** {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> h * x ^ n \\<in> {x ^ n} ** H\n 2. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        x ^ n * h \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xa", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa n h.\n       \\<lbrakk>h \\<in> H; h * x ^ n \\<le> xa;\n        {x ^ n} ** H = H ** {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> h * x ^ n \\<in> H ** {x ^ n}\n 2. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        x ^ n * h \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xa", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa n h.\n       \\<lbrakk>h \\<in> H; h * x ^ n \\<le> xa;\n        {a. \\<exists>y\\<in>H. a = x ^ n * y} =\n        {a. \\<exists>xa\\<in>H. a = xa * x ^ n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H. h * x ^ n = xa * x ^ n\n 2. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        x ^ n * h \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xa", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        x ^ n * h \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xa", "apply (rule_tac x = n in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        x ^ n * h \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h. h \\<in> H \\<and> h * x ^ n \\<le> xa", "apply (subgoal_tac \"(x ^ n) * h \\<in> H ** {x ^ n}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H; x ^ n * h \\<le> xa;\n        x ^ n * h \\<in> H ** {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h. h \\<in> H \\<and> h * x ^ n \\<le> xa\n 2. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        x ^ n * h \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> x ^ n * h \\<in> H ** {x ^ n}", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H; x ^ n * h \\<le> xa;\n        \\<exists>xa\\<in>H. x ^ n * h = xa * x ^ n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h. h \\<in> H \\<and> h * x ^ n \\<le> xa\n 2. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        x ^ n * h \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> x ^ n * h \\<in> H ** {x ^ n}", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa n h.\n       \\<lbrakk>H \\<in> normalfilters; h \\<in> H;\n        x ^ n * h \\<le> xa\\<rbrakk>\n       \\<Longrightarrow> x ^ n * h \\<in> H ** {x ^ n}", "apply (drule_tac a = \"x ^ n\" in lemma_3_10_i_ii)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa n h.\n       \\<lbrakk>h \\<in> H; x ^ n * h \\<le> xa;\n        {x ^ n} ** H = H ** {x ^ n}\\<rbrakk>\n       \\<Longrightarrow> x ^ n * h \\<in> H ** {x ^ n}", "apply (drule_tac sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa n h.\n       \\<lbrakk>h \\<in> H; x ^ n * h \\<le> xa;\n        H ** {x ^ n} = {x ^ n} ** H\\<rbrakk>\n       \\<Longrightarrow> x ^ n * h \\<in> H ** {x ^ n}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa n h.\n       \\<lbrakk>h \\<in> H; x ^ n * h \\<le> xa;\n        H ** {x ^ n} = {x ^ n} ** H\\<rbrakk>\n       \\<Longrightarrow> x ^ n * h \\<in> {x ^ n} ** H", "apply (simp add: times_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa n h.\n       \\<lbrakk>h \\<in> H; x ^ n * h \\<le> xa;\n        {a. \\<exists>xa\\<in>H. a = xa * x ^ n} =\n        {a. \\<exists>y\\<in>H. a = x ^ n * y}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>H. x ^ n * h = x ^ n * y", "by auto"], ["", "lemma lemma_3_12_i_ii:\n  \"H \\<in> normalfilters \\<Longrightarrow> H \\<in> ultrafilters \\<Longrightarrow> x \\<notin> H \\<Longrightarrow> (\\<exists> n . x ^ n l\\<rightarrow> a \\<in> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; H \\<in> ultrafilters;\n     x \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x ^ n l\\<rightarrow> a \\<in> H", "apply (subst (asm) ultrafilter_union)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters;\n     H \\<in> {F \\<in> filters.\n              F \\<noteq> UNIV \\<and>\n              (\\<forall>x.\n                  x \\<notin> F \\<longrightarrow>\n                  filterof (F \\<union> {x}) = UNIV)};\n     x \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x ^ n l\\<rightarrow> a \\<in> H", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     \\<forall>x.\n        x \\<notin> H \\<longrightarrow>\n        filterof (H \\<union> {x}) = UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x ^ n l\\<rightarrow> a \\<in> H", "apply (drule_tac x = x in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     x \\<notin> H \\<longrightarrow>\n     filterof (H \\<union> {x}) = UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x ^ n l\\<rightarrow> a \\<in> H", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV; filterof (H \\<union> {x}) = UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x ^ n l\\<rightarrow> a \\<in> H", "apply (subst (asm) lemma_3_11_i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV\\<rbrakk>\n    \\<Longrightarrow> H \\<in> normalfilters\n 2. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     {a. \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> a} = UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x ^ n l\\<rightarrow> a \\<in> H", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     {a. \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> a} = UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x ^ n l\\<rightarrow> a \\<in> H", "apply (subgoal_tac \"a \\<in> {a::'a. \\<exists>(n::nat) h::'a. h \\<in> H \\<and> h * x ^ n \\<le> a}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     {a. \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> a} = UNIV;\n     a \\<in> {a. \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> a}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x ^ n l\\<rightarrow> a \\<in> H\n 2. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     {a. \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> a} = UNIV\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a. \\<exists>n h.\n                                     h \\<in> H \\<and> h * x ^ n \\<le> a}", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n h.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n        H \\<noteq> UNIV;\n        {a. \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> a} = UNIV;\n        h \\<in> H; h * x ^ n \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x ^ n l\\<rightarrow> a \\<in> H\n 2. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     {a. \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> a} = UNIV\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a. \\<exists>n h.\n                                     h \\<in> H \\<and> h * x ^ n \\<le> a}", "apply (rule_tac x = n in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n h.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n        H \\<noteq> UNIV;\n        {a. \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> a} = UNIV;\n        h \\<in> H; h * x ^ n \\<le> a\\<rbrakk>\n       \\<Longrightarrow> x ^ n l\\<rightarrow> a \\<in> H\n 2. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     {a. \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> a} = UNIV\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a. \\<exists>n h.\n                                     h \\<in> H \\<and> h * x ^ n \\<le> a}", "apply (simp add: left_residual)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n h.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<noteq> UNIV;\n        {a. \\<exists>n h. h \\<in> H \\<and> h \\<le> x ^ n l\\<rightarrow> a} =\n        UNIV;\n        h \\<in> H; h \\<le> x ^ n l\\<rightarrow> a\\<rbrakk>\n       \\<Longrightarrow> x ^ n l\\<rightarrow> a \\<in> H\n 2. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     {a. \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> a} = UNIV\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a. \\<exists>n h.\n                                     h \\<in> H \\<and> h * x ^ n \\<le> a}", "apply (rule filter_ii)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n h.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<noteq> UNIV;\n        {a. \\<exists>n h. h \\<in> H \\<and> h \\<le> x ^ n l\\<rightarrow> a} =\n        UNIV;\n        h \\<in> H; h \\<le> x ^ n l\\<rightarrow> a\\<rbrakk>\n       \\<Longrightarrow> H \\<in> filters\n 2. \\<And>n h.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<noteq> UNIV;\n        {a. \\<exists>n h. h \\<in> H \\<and> h \\<le> x ^ n l\\<rightarrow> a} =\n        UNIV;\n        h \\<in> H; h \\<le> x ^ n l\\<rightarrow> a\\<rbrakk>\n       \\<Longrightarrow> ?a17 n h \\<in> H\n 3. \\<And>n h.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<noteq> UNIV;\n        {a. \\<exists>n h. h \\<in> H \\<and> h \\<le> x ^ n l\\<rightarrow> a} =\n        UNIV;\n        h \\<in> H; h \\<le> x ^ n l\\<rightarrow> a\\<rbrakk>\n       \\<Longrightarrow> ?a17 n h \\<le> x ^ n l\\<rightarrow> a\n 4. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     {a. \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> a} = UNIV\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a. \\<exists>n h.\n                                     h \\<in> H \\<and> h * x ^ n \\<le> a}", "by simp_all"], ["", "lemma lemma_3_12_ii_i:\n  \"H \\<in> normalfilters \\<Longrightarrow> H \\<in> properfilters \\<Longrightarrow> (\\<forall> x a . x \\<notin> H \\<longrightarrow> (\\<exists> n . x ^ n l\\<rightarrow> a \\<in> H)) \\<Longrightarrow> H \\<in> maximalfilters\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; H \\<in> properfilters;\n     \\<forall>x a.\n        x \\<notin> H \\<longrightarrow>\n        (\\<exists>n. x ^ n l\\<rightarrow> a \\<in> H)\\<rbrakk>\n    \\<Longrightarrow> H \\<in> maximalfilters", "apply (subgoal_tac \"H \\<in> ultrafilters\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>H \\<in> normalfilters; H \\<in> properfilters;\n     \\<forall>x a.\n        x \\<notin> H \\<longrightarrow>\n        (\\<exists>n. x ^ n l\\<rightarrow> a \\<in> H);\n     H \\<in> ultrafilters\\<rbrakk>\n    \\<Longrightarrow> H \\<in> maximalfilters\n 2. \\<lbrakk>H \\<in> normalfilters; H \\<in> properfilters;\n     \\<forall>x a.\n        x \\<notin> H \\<longrightarrow>\n        (\\<exists>n. x ^ n l\\<rightarrow> a \\<in> H)\\<rbrakk>\n    \\<Longrightarrow> H \\<in> ultrafilters", "apply (simp add: ultrafilters_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; H \\<in> properfilters;\n     \\<forall>x a.\n        x \\<notin> H \\<longrightarrow>\n        (\\<exists>n. x ^ n l\\<rightarrow> a \\<in> H)\\<rbrakk>\n    \\<Longrightarrow> H \\<in> ultrafilters", "apply (subst ultrafilter_union)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; H \\<in> properfilters;\n     \\<forall>x a.\n        x \\<notin> H \\<longrightarrow>\n        (\\<exists>n. x ^ n l\\<rightarrow> a \\<in> H)\\<rbrakk>\n    \\<Longrightarrow> H \\<in> {F \\<in> filters.\n                               F \\<noteq> UNIV \\<and>\n                               (\\<forall>x.\n                                   x \\<notin> F \\<longrightarrow>\n                                   filterof (F \\<union> {x}) = UNIV)}", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; H \\<in> properfilters;\n     \\<forall>x a.\n        x \\<notin> H \\<longrightarrow>\n        (\\<exists>n. x ^ n l\\<rightarrow> a \\<in> H)\\<rbrakk>\n    \\<Longrightarrow> H \\<in> filters \\<and>\n                      H \\<noteq> UNIV \\<and>\n                      (\\<forall>x.\n                          x \\<notin> H \\<longrightarrow>\n                          filterof (H \\<union> {x}) = UNIV)", "apply (subst (asm) properfilters_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters;\n     H \\<in> {F \\<in> filters. F \\<noteq> UNIV};\n     \\<forall>x a.\n        x \\<notin> H \\<longrightarrow>\n        (\\<exists>n. x ^ n l\\<rightarrow> a \\<in> H)\\<rbrakk>\n    \\<Longrightarrow> H \\<in> filters \\<and>\n                      H \\<noteq> UNIV \\<and>\n                      (\\<forall>x.\n                          x \\<notin> H \\<longrightarrow>\n                          filterof (H \\<union> {x}) = UNIV)", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x a.\n           x \\<notin> H \\<longrightarrow>\n           (\\<exists>n. x ^ n l\\<rightarrow> a \\<in> H);\n        H \\<in> filters; H \\<noteq> UNIV; x \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> filterof (H \\<union> {x}) = UNIV", "apply (subst lemma_3_11_i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x a.\n           x \\<notin> H \\<longrightarrow>\n           (\\<exists>n. x ^ n l\\<rightarrow> a \\<in> H);\n        H \\<in> filters; H \\<noteq> UNIV; x \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> H \\<in> normalfilters\n 2. \\<And>x.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x a.\n           x \\<notin> H \\<longrightarrow>\n           (\\<exists>n. x ^ n l\\<rightarrow> a \\<in> H);\n        H \\<in> filters; H \\<noteq> UNIV; x \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> {a. \\<exists>n h.\n                                h \\<in> H \\<and> h * x ^ n \\<le> a} =\n                         UNIV", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x.\n           x \\<notin> H \\<longrightarrow>\n           (\\<forall>a. \\<exists>n. x ^ n l\\<rightarrow> a \\<in> H);\n        H \\<noteq> UNIV; x \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> {a. \\<exists>n h.\n                                h \\<in> H \\<and> h * x ^ n \\<le> a} =\n                         UNIV", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa xb n h.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x.\n           x \\<notin> H \\<longrightarrow>\n           (\\<forall>a. \\<exists>n. x ^ n l\\<rightarrow> a \\<in> H);\n        x \\<notin> H; xa \\<in> H; xa \\<notin> UNIV; h \\<in> H;\n        h * x ^ n \\<le> xb\\<rbrakk>\n       \\<Longrightarrow> xb \\<in> UNIV\n 2. \\<And>x xa xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x.\n           x \\<notin> H \\<longrightarrow>\n           (\\<forall>a. \\<exists>n. x ^ n l\\<rightarrow> a \\<in> H);\n        x \\<notin> H; xa \\<in> H; xa \\<notin> UNIV; xb \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xb\n 3. \\<And>x xa xb n h.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x.\n           x \\<notin> H \\<longrightarrow>\n           (\\<forall>a. \\<exists>n. x ^ n l\\<rightarrow> a \\<in> H);\n        x \\<notin> H; xa \\<in> UNIV; xa \\<notin> H; h \\<in> H;\n        h * x ^ n \\<le> xb\\<rbrakk>\n       \\<Longrightarrow> xb \\<in> UNIV\n 4. \\<And>x xa xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x.\n           x \\<notin> H \\<longrightarrow>\n           (\\<forall>a. \\<exists>n. x ^ n l\\<rightarrow> a \\<in> H);\n        x \\<notin> H; xa \\<in> UNIV; xa \\<notin> H; xb \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xb", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x.\n           x \\<notin> H \\<longrightarrow>\n           (\\<forall>a. \\<exists>n. x ^ n l\\<rightarrow> a \\<in> H);\n        x \\<notin> H; xa \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xb", "apply (drule_tac x = x in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; xa \\<notin> H;\n        x \\<notin> H \\<longrightarrow>\n        (\\<forall>a. \\<exists>n. x ^ n l\\<rightarrow> a \\<in> H)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xb", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; xa \\<notin> H;\n        \\<forall>a. \\<exists>n. x ^ n l\\<rightarrow> a \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xb", "apply (drule_tac x = xb in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; xa \\<notin> H;\n        \\<exists>n. x ^ n l\\<rightarrow> xb \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xb", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb n.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; xa \\<notin> H;\n        x ^ n l\\<rightarrow> xb \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> h * x ^ n \\<le> xb", "apply (rule_tac x = n in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb n.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; xa \\<notin> H;\n        x ^ n l\\<rightarrow> xb \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h. h \\<in> H \\<and> h * x ^ n \\<le> xb", "apply (rule_tac x = \"x ^ n l\\<rightarrow> xb\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb n.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; xa \\<notin> H;\n        x ^ n l\\<rightarrow> xb \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x ^ n l\\<rightarrow> xb \\<in> H \\<and>\n                         (x ^ n l\\<rightarrow> xb) * x ^ n \\<le> xb", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb n.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; xa \\<notin> H;\n        x ^ n l\\<rightarrow> xb \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (x ^ n l\\<rightarrow> xb) * x ^ n \\<le> xb", "apply (subst inf_l_def [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb n.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; xa \\<notin> H;\n        x ^ n l\\<rightarrow> xb \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x ^ n \\<sqinter> xb \\<le> xb", "by simp"], ["", "lemma lemma_3_12_i_iii:\n  \"H \\<in> normalfilters \\<Longrightarrow> H \\<in> ultrafilters \\<Longrightarrow> x \\<notin> H \\<Longrightarrow> (\\<exists> n . x ^ n r\\<rightarrow> a \\<in> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; H \\<in> ultrafilters;\n     x \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x ^ n r\\<rightarrow> a \\<in> H", "apply (subst (asm) ultrafilter_union)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters;\n     H \\<in> {F \\<in> filters.\n              F \\<noteq> UNIV \\<and>\n              (\\<forall>x.\n                  x \\<notin> F \\<longrightarrow>\n                  filterof (F \\<union> {x}) = UNIV)};\n     x \\<notin> H\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x ^ n r\\<rightarrow> a \\<in> H", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     \\<forall>x.\n        x \\<notin> H \\<longrightarrow>\n        filterof (H \\<union> {x}) = UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x ^ n r\\<rightarrow> a \\<in> H", "apply (drule_tac x = x in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     x \\<notin> H \\<longrightarrow>\n     filterof (H \\<union> {x}) = UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x ^ n r\\<rightarrow> a \\<in> H", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV; filterof (H \\<union> {x}) = UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x ^ n r\\<rightarrow> a \\<in> H", "apply (subst (asm) lemma_3_11_ii)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV\\<rbrakk>\n    \\<Longrightarrow> H \\<in> normalfilters\n 2. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     {a. \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> a} = UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x ^ n r\\<rightarrow> a \\<in> H", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     {a. \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> a} = UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x ^ n r\\<rightarrow> a \\<in> H", "apply (subgoal_tac \"a \\<in> {a::'a. \\<exists>(n::nat) h::'a. h \\<in> H \\<and> (x ^ n) * h \\<le> a}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     {a. \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> a} = UNIV;\n     a \\<in> {a. \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> a}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x ^ n r\\<rightarrow> a \\<in> H\n 2. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     {a. \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> a} = UNIV\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a. \\<exists>n h.\n                                     h \\<in> H \\<and> x ^ n * h \\<le> a}", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n h.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n        H \\<noteq> UNIV;\n        {a. \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> a} = UNIV;\n        h \\<in> H; x ^ n * h \\<le> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x ^ n r\\<rightarrow> a \\<in> H\n 2. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     {a. \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> a} = UNIV\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a. \\<exists>n h.\n                                     h \\<in> H \\<and> x ^ n * h \\<le> a}", "apply (rule_tac x = n in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n h.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n        H \\<noteq> UNIV;\n        {a. \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> a} = UNIV;\n        h \\<in> H; x ^ n * h \\<le> a\\<rbrakk>\n       \\<Longrightarrow> x ^ n r\\<rightarrow> a \\<in> H\n 2. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     {a. \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> a} = UNIV\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a. \\<exists>n h.\n                                     h \\<in> H \\<and> x ^ n * h \\<le> a}", "apply (simp add: right_residual)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n h.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<noteq> UNIV;\n        {a. \\<exists>n h. h \\<in> H \\<and> h \\<le> x ^ n r\\<rightarrow> a} =\n        UNIV;\n        h \\<in> H; h \\<le> x ^ n r\\<rightarrow> a\\<rbrakk>\n       \\<Longrightarrow> x ^ n r\\<rightarrow> a \\<in> H\n 2. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     {a. \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> a} = UNIV\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a. \\<exists>n h.\n                                     h \\<in> H \\<and> x ^ n * h \\<le> a}", "apply (rule filter_ii)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n h.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<noteq> UNIV;\n        {a. \\<exists>n h. h \\<in> H \\<and> h \\<le> x ^ n r\\<rightarrow> a} =\n        UNIV;\n        h \\<in> H; h \\<le> x ^ n r\\<rightarrow> a\\<rbrakk>\n       \\<Longrightarrow> H \\<in> filters\n 2. \\<And>n h.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<noteq> UNIV;\n        {a. \\<exists>n h. h \\<in> H \\<and> h \\<le> x ^ n r\\<rightarrow> a} =\n        UNIV;\n        h \\<in> H; h \\<le> x ^ n r\\<rightarrow> a\\<rbrakk>\n       \\<Longrightarrow> ?a17 n h \\<in> H\n 3. \\<And>n h.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<noteq> UNIV;\n        {a. \\<exists>n h. h \\<in> H \\<and> h \\<le> x ^ n r\\<rightarrow> a} =\n        UNIV;\n        h \\<in> H; h \\<le> x ^ n r\\<rightarrow> a\\<rbrakk>\n       \\<Longrightarrow> ?a17 n h \\<le> x ^ n r\\<rightarrow> a\n 4. \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; H \\<in> filters;\n     H \\<noteq> UNIV;\n     {a. \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> a} = UNIV\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a. \\<exists>n h.\n                                     h \\<in> H \\<and> x ^ n * h \\<le> a}", "by simp_all"], ["", "lemma lemma_3_12_iii_i:\n  \"H \\<in> normalfilters \\<Longrightarrow> H \\<in> properfilters \\<Longrightarrow> (\\<forall> x a . x \\<notin> H \\<longrightarrow> (\\<exists> n . x ^ n r\\<rightarrow> a \\<in> H)) \\<Longrightarrow> H \\<in> maximalfilters\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; H \\<in> properfilters;\n     \\<forall>x a.\n        x \\<notin> H \\<longrightarrow>\n        (\\<exists>n. x ^ n r\\<rightarrow> a \\<in> H)\\<rbrakk>\n    \\<Longrightarrow> H \\<in> maximalfilters", "apply (subgoal_tac \"H \\<in> ultrafilters\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>H \\<in> normalfilters; H \\<in> properfilters;\n     \\<forall>x a.\n        x \\<notin> H \\<longrightarrow>\n        (\\<exists>n. x ^ n r\\<rightarrow> a \\<in> H);\n     H \\<in> ultrafilters\\<rbrakk>\n    \\<Longrightarrow> H \\<in> maximalfilters\n 2. \\<lbrakk>H \\<in> normalfilters; H \\<in> properfilters;\n     \\<forall>x a.\n        x \\<notin> H \\<longrightarrow>\n        (\\<exists>n. x ^ n r\\<rightarrow> a \\<in> H)\\<rbrakk>\n    \\<Longrightarrow> H \\<in> ultrafilters", "apply (simp add: ultrafilters_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; H \\<in> properfilters;\n     \\<forall>x a.\n        x \\<notin> H \\<longrightarrow>\n        (\\<exists>n. x ^ n r\\<rightarrow> a \\<in> H)\\<rbrakk>\n    \\<Longrightarrow> H \\<in> ultrafilters", "apply (subst ultrafilter_union)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; H \\<in> properfilters;\n     \\<forall>x a.\n        x \\<notin> H \\<longrightarrow>\n        (\\<exists>n. x ^ n r\\<rightarrow> a \\<in> H)\\<rbrakk>\n    \\<Longrightarrow> H \\<in> {F \\<in> filters.\n                               F \\<noteq> UNIV \\<and>\n                               (\\<forall>x.\n                                   x \\<notin> F \\<longrightarrow>\n                                   filterof (F \\<union> {x}) = UNIV)}", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; H \\<in> properfilters;\n     \\<forall>x a.\n        x \\<notin> H \\<longrightarrow>\n        (\\<exists>n. x ^ n r\\<rightarrow> a \\<in> H)\\<rbrakk>\n    \\<Longrightarrow> H \\<in> filters \\<and>\n                      H \\<noteq> UNIV \\<and>\n                      (\\<forall>x.\n                          x \\<notin> H \\<longrightarrow>\n                          filterof (H \\<union> {x}) = UNIV)", "apply (subst (asm) properfilters_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters;\n     H \\<in> {F \\<in> filters. F \\<noteq> UNIV};\n     \\<forall>x a.\n        x \\<notin> H \\<longrightarrow>\n        (\\<exists>n. x ^ n r\\<rightarrow> a \\<in> H)\\<rbrakk>\n    \\<Longrightarrow> H \\<in> filters \\<and>\n                      H \\<noteq> UNIV \\<and>\n                      (\\<forall>x.\n                          x \\<notin> H \\<longrightarrow>\n                          filterof (H \\<union> {x}) = UNIV)", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x a.\n           x \\<notin> H \\<longrightarrow>\n           (\\<exists>n. x ^ n r\\<rightarrow> a \\<in> H);\n        H \\<in> filters; H \\<noteq> UNIV; x \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> filterof (H \\<union> {x}) = UNIV", "apply (subst lemma_3_11_ii)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x a.\n           x \\<notin> H \\<longrightarrow>\n           (\\<exists>n. x ^ n r\\<rightarrow> a \\<in> H);\n        H \\<in> filters; H \\<noteq> UNIV; x \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> H \\<in> normalfilters\n 2. \\<And>x.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x a.\n           x \\<notin> H \\<longrightarrow>\n           (\\<exists>n. x ^ n r\\<rightarrow> a \\<in> H);\n        H \\<in> filters; H \\<noteq> UNIV; x \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> {a. \\<exists>n h.\n                                h \\<in> H \\<and> x ^ n * h \\<le> a} =\n                         UNIV", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x.\n           x \\<notin> H \\<longrightarrow>\n           (\\<forall>a. \\<exists>n. x ^ n r\\<rightarrow> a \\<in> H);\n        H \\<noteq> UNIV; x \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> {a. \\<exists>n h.\n                                h \\<in> H \\<and> x ^ n * h \\<le> a} =\n                         UNIV", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa xb n h.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x.\n           x \\<notin> H \\<longrightarrow>\n           (\\<forall>a. \\<exists>n. x ^ n r\\<rightarrow> a \\<in> H);\n        x \\<notin> H; xa \\<in> H; xa \\<notin> UNIV; h \\<in> H;\n        x ^ n * h \\<le> xb\\<rbrakk>\n       \\<Longrightarrow> xb \\<in> UNIV\n 2. \\<And>x xa xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x.\n           x \\<notin> H \\<longrightarrow>\n           (\\<forall>a. \\<exists>n. x ^ n r\\<rightarrow> a \\<in> H);\n        x \\<notin> H; xa \\<in> H; xa \\<notin> UNIV; xb \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> xb\n 3. \\<And>x xa xb n h.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x.\n           x \\<notin> H \\<longrightarrow>\n           (\\<forall>a. \\<exists>n. x ^ n r\\<rightarrow> a \\<in> H);\n        x \\<notin> H; xa \\<in> UNIV; xa \\<notin> H; h \\<in> H;\n        x ^ n * h \\<le> xb\\<rbrakk>\n       \\<Longrightarrow> xb \\<in> UNIV\n 4. \\<And>x xa xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x.\n           x \\<notin> H \\<longrightarrow>\n           (\\<forall>a. \\<exists>n. x ^ n r\\<rightarrow> a \\<in> H);\n        x \\<notin> H; xa \\<in> UNIV; xa \\<notin> H; xb \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> xb", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<forall>x.\n           x \\<notin> H \\<longrightarrow>\n           (\\<forall>a. \\<exists>n. x ^ n r\\<rightarrow> a \\<in> H);\n        x \\<notin> H; xa \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> xb", "apply (drule_tac x = x in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; xa \\<notin> H;\n        x \\<notin> H \\<longrightarrow>\n        (\\<forall>a. \\<exists>n. x ^ n r\\<rightarrow> a \\<in> H)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> xb", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; xa \\<notin> H;\n        \\<forall>a. \\<exists>n. x ^ n r\\<rightarrow> a \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> xb", "apply (drule_tac x = xb in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; xa \\<notin> H;\n        \\<exists>n. x ^ n r\\<rightarrow> xb \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> xb", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb n.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; xa \\<notin> H;\n        x ^ n r\\<rightarrow> xb \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n h. h \\<in> H \\<and> x ^ n * h \\<le> xb", "apply (rule_tac x = n in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb n.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; xa \\<notin> H;\n        x ^ n r\\<rightarrow> xb \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h. h \\<in> H \\<and> x ^ n * h \\<le> xb", "apply (rule_tac x = \"x ^ n r\\<rightarrow> xb\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb n.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; xa \\<notin> H;\n        x ^ n r\\<rightarrow> xb \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x ^ n r\\<rightarrow> xb \\<in> H \\<and>\n                         x ^ n * (x ^ n r\\<rightarrow> xb) \\<le> xb", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb n.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; xa \\<notin> H;\n        x ^ n r\\<rightarrow> xb \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x ^ n * (x ^ n r\\<rightarrow> xb) \\<le> xb", "apply (subst inf_r_def [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb n.\n       \\<lbrakk>H \\<in> normalfilters; x \\<notin> H; xa \\<notin> H;\n        x ^ n r\\<rightarrow> xb \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x ^ n \\<sqinter> xb \\<le> xb", "by simp"], ["", "definition\n  \"cong H = (\\<lambda> x y . cong_l H x y \\<and> cong_r H x y)\""], ["", "definition \n  \"congruences = {R . equivp R \\<and> (\\<forall> a b c d . R a b \\<and> R c d \\<longrightarrow> R (a * c) (b * d) \\<and>  R (a l\\<rightarrow> c) (b l\\<rightarrow> d) \\<and>  R (a r\\<rightarrow> c) (b r\\<rightarrow> d))}\""], ["", "lemma cong_l: \"H \\<in> normalfilters \\<Longrightarrow> cong H = cong_l H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow> cong H = cong_l H", "by (simp add: cong_def lemma_3_10_i_iii)"], ["", "lemma cong_r: \"H \\<in> normalfilters \\<Longrightarrow> cong H = cong_r H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow> cong H = cong_r H", "by (simp add: cong_def lemma_3_10_i_iii)"], ["", "lemma cong_equiv: \"H \\<in> normalfilters \\<Longrightarrow> equivp (cong H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow> equivp (cong H)", "apply (simp add: cong_l)"], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow> equivp (cong_l H)", "apply (simp add: equivp_reflp_symp_transp reflp_def refl_on_def cong_l_reflexive cong_l_symmetric symp_def sym_def transp_def trans_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow>\n    \\<forall>x y.\n       cong_l H x y \\<longrightarrow>\n       (\\<forall>z. cong_l H y z \\<longrightarrow> cong_l H x z)", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>H \\<in> normalfilters; cong_l H x y; cong_l H y z\\<rbrakk>\n       \\<Longrightarrow> cong_l H x z", "apply (rule cong_l_transitive)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>H \\<in> normalfilters; cong_l H x y; cong_l H y z\\<rbrakk>\n       \\<Longrightarrow> H \\<in> filters\n 2. \\<And>x y z.\n       \\<lbrakk>H \\<in> normalfilters; cong_l H x y; cong_l H y z\\<rbrakk>\n       \\<Longrightarrow> cong_l H x (?b8 x y z)\n 3. \\<And>x y z.\n       \\<lbrakk>H \\<in> normalfilters; cong_l H x y; cong_l H y z\\<rbrakk>\n       \\<Longrightarrow> cong_l H (?b8 x y z) z", "by simp_all"], ["", "lemma cong_trans: \"H \\<in> normalfilters \\<Longrightarrow> cong H x y \\<Longrightarrow> cong H y z \\<Longrightarrow> cong H x z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<in> normalfilters; cong H x y; cong H y z\\<rbrakk>\n    \\<Longrightarrow> cong H x z", "apply (drule cong_equiv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cong H x y; cong H y z; equivp (cong H)\\<rbrakk>\n    \\<Longrightarrow> cong H x z", "apply (drule equivp_transp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>cong H x y; cong H y z\\<rbrakk>\n    \\<Longrightarrow> cong H ?x2 ?y2\n 2. \\<lbrakk>cong H x y; cong H y z\\<rbrakk>\n    \\<Longrightarrow> cong H ?y2 ?z2\n 3. \\<lbrakk>cong H x y; cong H y z; cong H ?x2 ?z2\\<rbrakk>\n    \\<Longrightarrow> cong H x z", "by simp_all"], ["", "lemma lemma_3_13 [simp]: \n  \"H \\<in> normalfilters \\<Longrightarrow> cong H \\<in> congruences\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow> cong H \\<in> congruences", "apply (subst congruences_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow>\n    cong H\n    \\<in> {R. equivp R \\<and>\n              (\\<forall>a b c d.\n                  R a b \\<and> R c d \\<longrightarrow>\n                  R (a * c) (b * d) \\<and>\n                  R (a l\\<rightarrow> c) (b l\\<rightarrow> d) \\<and>\n                  R (a r\\<rightarrow> c) (b r\\<rightarrow> d))}", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. H \\<in> normalfilters \\<Longrightarrow> equivp (cong H)\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a * c) (b * d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (b l\\<rightarrow> d)\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (simp add: cong_equiv)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a * c) (b * d)\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (b l\\<rightarrow> d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (rule_tac y = \"b * c\" in cong_trans)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> H \\<in> normalfilters\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a * c) (b * c)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (b * c) (b * d)\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (b l\\<rightarrow> d)\n 5. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply simp_all"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a * c) (b * c)\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (b * c) (b * d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (b l\\<rightarrow> d)\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (simp add: cong_r lemma_3_8_i)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<exists>x.\n           x \\<in> H \\<and> (\\<exists>y. y \\<in> H \\<and> x * a = y * b);\n        \\<exists>x.\n           x \\<in> H \\<and>\n           (\\<exists>y. y \\<in> H \\<and> x * c = y * d)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            x \\<in> H \\<and>\n                            (\\<exists>y.\n                                y \\<in> H \\<and> x * (a * c) = y * (b * c))\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (b * c) (b * d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (b l\\<rightarrow> d)\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c d x xa y ya.\n       \\<lbrakk>H \\<in> normalfilters; x \\<in> H; xa \\<in> H; y \\<in> H;\n        x * a = y * b; ya \\<in> H; xa * c = ya * d\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            x \\<in> H \\<and>\n                            (\\<exists>y.\n                                y \\<in> H \\<and> x * (a * c) = y * (b * c))\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (b * c) (b * d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (b l\\<rightarrow> d)\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (rule_tac x = x in exI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c d x xa y ya.\n       \\<lbrakk>H \\<in> normalfilters; x \\<in> H; xa \\<in> H; y \\<in> H;\n        x * a = y * b; ya \\<in> H; xa * c = ya * d\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H \\<and>\n                         (\\<exists>y.\n                             y \\<in> H \\<and> x * (a * c) = y * (b * c))\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (b * c) (b * d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (b l\\<rightarrow> d)\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c d x xa y ya.\n       \\<lbrakk>H \\<in> normalfilters; x \\<in> H; xa \\<in> H; y \\<in> H;\n        x * a = y * b; ya \\<in> H; xa * c = ya * d\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            y \\<in> H \\<and> x * (a * c) = y * (b * c)\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (b * c) (b * d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (b l\\<rightarrow> d)\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (rule_tac x = y in exI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c d x xa y ya.\n       \\<lbrakk>H \\<in> normalfilters; x \\<in> H; xa \\<in> H; y \\<in> H;\n        x * a = y * b; ya \\<in> H; xa * c = ya * d\\<rbrakk>\n       \\<Longrightarrow> y \\<in> H \\<and> x * (a * c) = y * (b * c)\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (b * c) (b * d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (b l\\<rightarrow> d)\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (simp add: mult.assoc [THEN sym])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (b * c) (b * d)\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (b l\\<rightarrow> d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (simp add: cong_l lemma_3_8_ii)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters;\n        \\<exists>x.\n           x \\<in> H \\<and> (\\<exists>y. y \\<in> H \\<and> a * x = b * y);\n        \\<exists>x.\n           x \\<in> H \\<and>\n           (\\<exists>y. y \\<in> H \\<and> c * x = d * y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            x \\<in> H \\<and>\n                            (\\<exists>y.\n                                y \\<in> H \\<and> b * c * x = b * d * y)\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (b l\\<rightarrow> d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d x xa y ya.\n       \\<lbrakk>H \\<in> normalfilters; x \\<in> H; xa \\<in> H; y \\<in> H;\n        a * x = b * y; ya \\<in> H; c * xa = d * ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            x \\<in> H \\<and>\n                            (\\<exists>y.\n                                y \\<in> H \\<and> b * c * x = b * d * y)\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (b l\\<rightarrow> d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (rule_tac x = xa in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d x xa y ya.\n       \\<lbrakk>H \\<in> normalfilters; x \\<in> H; xa \\<in> H; y \\<in> H;\n        a * x = b * y; ya \\<in> H; c * xa = d * ya\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> H \\<and>\n                         (\\<exists>y.\n                             y \\<in> H \\<and> b * c * xa = b * d * y)\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (b l\\<rightarrow> d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d x xa y ya.\n       \\<lbrakk>H \\<in> normalfilters; x \\<in> H; xa \\<in> H; y \\<in> H;\n        a * x = b * y; ya \\<in> H; c * xa = d * ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. y \\<in> H \\<and> b * c * xa = b * d * y\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (b l\\<rightarrow> d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (rule_tac x = ya in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d x xa y ya.\n       \\<lbrakk>H \\<in> normalfilters; x \\<in> H; xa \\<in> H; y \\<in> H;\n        a * x = b * y; ya \\<in> H; c * xa = d * ya\\<rbrakk>\n       \\<Longrightarrow> ya \\<in> H \\<and> b * c * xa = b * d * ya\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (b l\\<rightarrow> d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (simp add: mult.assoc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (b l\\<rightarrow> d)\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (rule_tac y = \"a l\\<rightarrow> d\" in cong_trans)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> H \\<in> normalfilters\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (a l\\<rightarrow> d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> d) (b l\\<rightarrow> d)\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> c) (a l\\<rightarrow> d)\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> d) (b l\\<rightarrow> d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (simp add: cong_r cong_r_filter)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters;\n        a l\\<rightarrow> b \\<in> H \\<and> b l\\<rightarrow> a \\<in> H;\n        c l\\<rightarrow> d \\<in> H \\<and>\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a l\\<rightarrow> c) l\\<rightarrow>\n                         a l\\<rightarrow> d\n                         \\<in> H \\<and>\n                         (a l\\<rightarrow> d) l\\<rightarrow>\n                         a l\\<rightarrow> c\n                         \\<in> H\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> d) (b l\\<rightarrow> d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a l\\<rightarrow> c) l\\<rightarrow>\n                         a l\\<rightarrow> d\n                         \\<in> H\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a l\\<rightarrow> d) l\\<rightarrow>\n                         a l\\<rightarrow> c\n                         \\<in> H\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> d) (b l\\<rightarrow> d)\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (rule_tac a = \"c l\\<rightarrow> d\" in filter_ii)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> H \\<in> filters\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> c l\\<rightarrow> d \\<in> H\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> c l\\<rightarrow> d\n                         \\<le> (a l\\<rightarrow> c) l\\<rightarrow>\n                               a l\\<rightarrow> d\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a l\\<rightarrow> d) l\\<rightarrow>\n                         a l\\<rightarrow> c\n                         \\<in> H\n 5. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> d) (b l\\<rightarrow> d)\n 6. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply simp_all"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> c l\\<rightarrow> d\n                         \\<le> (a l\\<rightarrow> c) l\\<rightarrow>\n                               a l\\<rightarrow> d\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a l\\<rightarrow> d) l\\<rightarrow>\n                         a l\\<rightarrow> c\n                         \\<in> H\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> d) (b l\\<rightarrow> d)\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (subst left_residual [THEN sym])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (c l\\<rightarrow> d) * (a l\\<rightarrow> c)\n                         \\<le> a l\\<rightarrow> d\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a l\\<rightarrow> d) l\\<rightarrow>\n                         a l\\<rightarrow> c\n                         \\<in> H\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> d) (b l\\<rightarrow> d)\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (simp add: lemma_2_5_14)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a l\\<rightarrow> d) l\\<rightarrow>\n                         a l\\<rightarrow> c\n                         \\<in> H\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> d) (b l\\<rightarrow> d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (rule_tac a = \"d l\\<rightarrow> c\" in filter_ii)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> H \\<in> filters\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d l\\<rightarrow> c \\<in> H\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d l\\<rightarrow> c\n                         \\<le> (a l\\<rightarrow> d) l\\<rightarrow>\n                               a l\\<rightarrow> c\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> d) (b l\\<rightarrow> d)\n 5. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d l\\<rightarrow> c\n                         \\<le> (a l\\<rightarrow> d) l\\<rightarrow>\n                               a l\\<rightarrow> c\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> d) (b l\\<rightarrow> d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (subst left_residual [THEN sym])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (d l\\<rightarrow> c) * (a l\\<rightarrow> d)\n                         \\<le> a l\\<rightarrow> c\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> d) (b l\\<rightarrow> d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (simp add: lemma_2_5_14)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a l\\<rightarrow> d) (b l\\<rightarrow> d)\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (subst cong_l)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> H \\<in> normalfilters\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong_l H (a l\\<rightarrow> d) (b l\\<rightarrow> d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong_l H (a l\\<rightarrow> d) (b l\\<rightarrow> d)\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (simp add: cong_r cong_r_filter cong_l_filter)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters;\n        a l\\<rightarrow> b \\<in> H \\<and> b l\\<rightarrow> a \\<in> H;\n        c l\\<rightarrow> d \\<in> H \\<and>\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a l\\<rightarrow> d) r\\<rightarrow>\n                         b l\\<rightarrow> d\n                         \\<in> H \\<and>\n                         (b l\\<rightarrow> d) r\\<rightarrow>\n                         a l\\<rightarrow> d\n                         \\<in> H\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a l\\<rightarrow> d) r\\<rightarrow>\n                         b l\\<rightarrow> d\n                         \\<in> H\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (b l\\<rightarrow> d) r\\<rightarrow>\n                         a l\\<rightarrow> d\n                         \\<in> H\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (rule_tac a = \"b l\\<rightarrow> a\" in filter_ii)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> H \\<in> filters\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> b l\\<rightarrow> a \\<in> H\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> b l\\<rightarrow> a\n                         \\<le> (a l\\<rightarrow> d) r\\<rightarrow>\n                               b l\\<rightarrow> d\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (b l\\<rightarrow> d) r\\<rightarrow>\n                         a l\\<rightarrow> d\n                         \\<in> H\n 5. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> b l\\<rightarrow> a\n                         \\<le> (a l\\<rightarrow> d) r\\<rightarrow>\n                               b l\\<rightarrow> d\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (b l\\<rightarrow> d) r\\<rightarrow>\n                         a l\\<rightarrow> d\n                         \\<in> H\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (subst right_residual [THEN sym])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a l\\<rightarrow> d) * (b l\\<rightarrow> a)\n                         \\<le> b l\\<rightarrow> d\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (b l\\<rightarrow> d) r\\<rightarrow>\n                         a l\\<rightarrow> d\n                         \\<in> H\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (simp add: lemma_2_5_14)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (b l\\<rightarrow> d) r\\<rightarrow>\n                         a l\\<rightarrow> d\n                         \\<in> H\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (rule_tac a = \"a l\\<rightarrow> b\" in filter_ii)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> H \\<in> filters\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> H\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b\n                         \\<le> (b l\\<rightarrow> d) r\\<rightarrow>\n                               a l\\<rightarrow> d\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b\n                         \\<le> (b l\\<rightarrow> d) r\\<rightarrow>\n                               a l\\<rightarrow> d\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (subst right_residual [THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a l\\<rightarrow> b \\<in> H;\n        b l\\<rightarrow> a \\<in> H; c l\\<rightarrow> d \\<in> H;\n        d l\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (b l\\<rightarrow> d) * (a l\\<rightarrow> b)\n                         \\<le> a l\\<rightarrow> d\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (simp add: lemma_2_5_14)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "apply (rule_tac y = \"a r\\<rightarrow> d\" in cong_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> H \\<in> normalfilters\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (a r\\<rightarrow> d)\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> d) (b r\\<rightarrow> d)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> c) (a r\\<rightarrow> d)\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> d) (b r\\<rightarrow> d)", "apply (simp add: cong_l cong_l_filter)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters;\n        a r\\<rightarrow> b \\<in> H \\<and> b r\\<rightarrow> a \\<in> H;\n        c r\\<rightarrow> d \\<in> H \\<and>\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a r\\<rightarrow> c) r\\<rightarrow>\n                         a r\\<rightarrow> d\n                         \\<in> H \\<and>\n                         (a r\\<rightarrow> d) r\\<rightarrow>\n                         a r\\<rightarrow> c\n                         \\<in> H\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> d) (b r\\<rightarrow> d)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a r\\<rightarrow> c) r\\<rightarrow>\n                         a r\\<rightarrow> d\n                         \\<in> H\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a r\\<rightarrow> d) r\\<rightarrow>\n                         a r\\<rightarrow> c\n                         \\<in> H\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> d) (b r\\<rightarrow> d)", "apply (rule_tac a = \"c r\\<rightarrow> d\" in filter_ii)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> H \\<in> filters\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> c r\\<rightarrow> d \\<in> H\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> c r\\<rightarrow> d\n                         \\<le> (a r\\<rightarrow> c) r\\<rightarrow>\n                               a r\\<rightarrow> d\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a r\\<rightarrow> d) r\\<rightarrow>\n                         a r\\<rightarrow> c\n                         \\<in> H\n 5. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> d) (b r\\<rightarrow> d)", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> c r\\<rightarrow> d\n                         \\<le> (a r\\<rightarrow> c) r\\<rightarrow>\n                               a r\\<rightarrow> d\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a r\\<rightarrow> d) r\\<rightarrow>\n                         a r\\<rightarrow> c\n                         \\<in> H\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> d) (b r\\<rightarrow> d)", "apply (subst right_residual [THEN sym])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a r\\<rightarrow> c) * (c r\\<rightarrow> d)\n                         \\<le> a r\\<rightarrow> d\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a r\\<rightarrow> d) r\\<rightarrow>\n                         a r\\<rightarrow> c\n                         \\<in> H\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> d) (b r\\<rightarrow> d)", "apply (simp add: lemma_2_5_15)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a r\\<rightarrow> d) r\\<rightarrow>\n                         a r\\<rightarrow> c\n                         \\<in> H\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> d) (b r\\<rightarrow> d)", "apply (rule_tac a = \"d r\\<rightarrow> c\" in filter_ii)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> H \\<in> filters\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d r\\<rightarrow> c \\<in> H\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d r\\<rightarrow> c\n                         \\<le> (a r\\<rightarrow> d) r\\<rightarrow>\n                               a r\\<rightarrow> c\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> d) (b r\\<rightarrow> d)", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> d r\\<rightarrow> c\n                         \\<le> (a r\\<rightarrow> d) r\\<rightarrow>\n                               a r\\<rightarrow> c\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> d) (b r\\<rightarrow> d)", "apply (subst right_residual [THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a r\\<rightarrow> d) * (d r\\<rightarrow> c)\n                         \\<le> a r\\<rightarrow> c\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> d) (b r\\<rightarrow> d)", "apply (simp add: lemma_2_5_15)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong H (a r\\<rightarrow> d) (b r\\<rightarrow> d)", "apply (subst cong_r)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> H \\<in> normalfilters\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong_r H (a r\\<rightarrow> d) (b r\\<rightarrow> d)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; cong H a b; cong H c d\\<rbrakk>\n       \\<Longrightarrow> cong_r H (a r\\<rightarrow> d) (b r\\<rightarrow> d)", "apply (simp add: cong_l cong_l_filter cong_r_filter)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters;\n        a r\\<rightarrow> b \\<in> H \\<and> b r\\<rightarrow> a \\<in> H;\n        c r\\<rightarrow> d \\<in> H \\<and>\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a r\\<rightarrow> d) l\\<rightarrow>\n                         b r\\<rightarrow> d\n                         \\<in> H \\<and>\n                         (b r\\<rightarrow> d) l\\<rightarrow>\n                         a r\\<rightarrow> d\n                         \\<in> H", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a r\\<rightarrow> d) l\\<rightarrow>\n                         b r\\<rightarrow> d\n                         \\<in> H\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (b r\\<rightarrow> d) l\\<rightarrow>\n                         a r\\<rightarrow> d\n                         \\<in> H", "apply (rule_tac a = \"b r\\<rightarrow> a\" in filter_ii)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> H \\<in> filters\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> b r\\<rightarrow> a \\<in> H\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> b r\\<rightarrow> a\n                         \\<le> (a r\\<rightarrow> d) l\\<rightarrow>\n                               b r\\<rightarrow> d\n 4. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (b r\\<rightarrow> d) l\\<rightarrow>\n                         a r\\<rightarrow> d\n                         \\<in> H", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> b r\\<rightarrow> a\n                         \\<le> (a r\\<rightarrow> d) l\\<rightarrow>\n                               b r\\<rightarrow> d\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (b r\\<rightarrow> d) l\\<rightarrow>\n                         a r\\<rightarrow> d\n                         \\<in> H", "apply (subst left_residual [THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (b r\\<rightarrow> a) * (a r\\<rightarrow> d)\n                         \\<le> b r\\<rightarrow> d\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (b r\\<rightarrow> d) l\\<rightarrow>\n                         a r\\<rightarrow> d\n                         \\<in> H", "apply (simp add: lemma_2_5_15)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (b r\\<rightarrow> d) l\\<rightarrow>\n                         a r\\<rightarrow> d\n                         \\<in> H", "apply (rule_tac a = \"a r\\<rightarrow> b\" in filter_ii)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> H \\<in> filters\n 2. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> H\n 3. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b\n                         \\<le> (b r\\<rightarrow> d) l\\<rightarrow>\n                               a r\\<rightarrow> d", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b\n                         \\<le> (b r\\<rightarrow> d) l\\<rightarrow>\n                               a r\\<rightarrow> d", "apply (subst left_residual [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d.\n       \\<lbrakk>H \\<in> normalfilters; a r\\<rightarrow> b \\<in> H;\n        b r\\<rightarrow> a \\<in> H; c r\\<rightarrow> d \\<in> H;\n        d r\\<rightarrow> c \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (a r\\<rightarrow> b) * (b r\\<rightarrow> d)\n                         \\<le> a r\\<rightarrow> d", "by (simp add: lemma_2_5_15)"], ["", "lemma cong_times: \"R \\<in> congruences \\<Longrightarrow> R a b \\<Longrightarrow> R c d \\<Longrightarrow> R (a * c) (b * d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R \\<in> congruences; R a b; R c d\\<rbrakk>\n    \\<Longrightarrow> R (a * c) (b * d)", "by (simp add: congruences_def)"], ["", "lemma cong_impl_l: \"R \\<in> congruences \\<Longrightarrow> R a b \\<Longrightarrow> R c d \\<Longrightarrow> R (a l\\<rightarrow> c) (b l\\<rightarrow> d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R \\<in> congruences; R a b; R c d\\<rbrakk>\n    \\<Longrightarrow> R (a l\\<rightarrow> c) (b l\\<rightarrow> d)", "by (simp add: congruences_def)"], ["", "lemma cong_impl_r: \"R \\<in> congruences \\<Longrightarrow> R a b \\<Longrightarrow> R c d \\<Longrightarrow> R (a r\\<rightarrow> c) (b r\\<rightarrow> d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R \\<in> congruences; R a b; R c d\\<rbrakk>\n    \\<Longrightarrow> R (a r\\<rightarrow> c) (b r\\<rightarrow> d)", "by (simp add: congruences_def)"], ["", "lemma cong_refl [simp]: \"R \\<in> congruences \\<Longrightarrow> R a a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<in> congruences \\<Longrightarrow> R a a", "by (simp add: congruences_def equivp_reflp)"], ["", "lemma cong_trans_a: \"R \\<in> congruences \\<Longrightarrow> R a b \\<Longrightarrow> R b c \\<Longrightarrow> R a c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R \\<in> congruences; R a b; R b c\\<rbrakk>\n    \\<Longrightarrow> R a c", "apply (simp add: congruences_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>equivp R \\<and>\n             (\\<forall>a b c d.\n                 R a b \\<and> R c d \\<longrightarrow>\n                 R (a * c) (b * d) \\<and>\n                 R (a l\\<rightarrow> c) (b l\\<rightarrow> d) \\<and>\n                 R (a r\\<rightarrow> c) (b r\\<rightarrow> d));\n     R a b; R b c\\<rbrakk>\n    \\<Longrightarrow> R a c", "apply (rule_tac y = b in equivp_transp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>equivp R \\<and>\n             (\\<forall>a b c d.\n                 R a b \\<and> R c d \\<longrightarrow>\n                 R (a * c) (b * d) \\<and>\n                 R (a l\\<rightarrow> c) (b l\\<rightarrow> d) \\<and>\n                 R (a r\\<rightarrow> c) (b r\\<rightarrow> d));\n     R a b; R b c\\<rbrakk>\n    \\<Longrightarrow> equivp R\n 2. \\<lbrakk>equivp R \\<and>\n             (\\<forall>a b c d.\n                 R a b \\<and> R c d \\<longrightarrow>\n                 R (a * c) (b * d) \\<and>\n                 R (a l\\<rightarrow> c) (b l\\<rightarrow> d) \\<and>\n                 R (a r\\<rightarrow> c) (b r\\<rightarrow> d));\n     R a b; R b c\\<rbrakk>\n    \\<Longrightarrow> R a b\n 3. \\<lbrakk>equivp R \\<and>\n             (\\<forall>a b c d.\n                 R a b \\<and> R c d \\<longrightarrow>\n                 R (a * c) (b * d) \\<and>\n                 R (a l\\<rightarrow> c) (b l\\<rightarrow> d) \\<and>\n                 R (a r\\<rightarrow> c) (b r\\<rightarrow> d));\n     R a b; R b c\\<rbrakk>\n    \\<Longrightarrow> R b c", "by simp_all"], ["", "lemma cong_sym: \"R \\<in> congruences \\<Longrightarrow> R a b \\<Longrightarrow> R b a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R \\<in> congruences; R a b\\<rbrakk> \\<Longrightarrow> R b a", "by (simp add: congruences_def equivp_symp)"], ["", "definition\n  \"normalfilter R = {a . R a 1}\""], ["", "lemma lemma_3_14 [simp]:\n  \"R \\<in> congruences \\<Longrightarrow> (normalfilter R) \\<in> normalfilters\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<in> congruences \\<Longrightarrow> normalfilter R \\<in> normalfilters", "apply (unfold normalfilters_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<in> congruences \\<Longrightarrow>\n    normalfilter R\n    \\<in> {F \\<in> filters.\n           \\<forall>a b.\n              (a l\\<rightarrow> b \\<in> F) = (a r\\<rightarrow> b \\<in> F)}", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. R \\<in> congruences \\<Longrightarrow> normalfilter R \\<in> filters\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a l\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> normalfilter R\n 3. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a r\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> normalfilter R", "apply (simp add: filters_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. R \\<in> congruences \\<Longrightarrow>\n    normalfilter R \\<noteq> {} \\<and>\n    (\\<forall>a b.\n        a \\<in> normalfilter R \\<and>\n        b \\<in> normalfilter R \\<longrightarrow>\n        a * b \\<in> normalfilter R) \\<and>\n    (\\<forall>a b.\n        a \\<in> normalfilter R \\<and> a \\<le> b \\<longrightarrow>\n        b \\<in> normalfilter R)\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a l\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> normalfilter R\n 3. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a r\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> normalfilter R", "apply safe"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>R \\<in> congruences; normalfilter R = {}\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; a \\<in> normalfilter R;\n        b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> normalfilter R\n 3. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; a \\<in> normalfilter R;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> normalfilter R\n 4. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a l\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> normalfilter R\n 5. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a r\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> normalfilter R", "apply (simp add: normalfilter_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>R \\<in> congruences; \\<forall>x. \\<not> R x (1::'a)\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; a \\<in> normalfilter R;\n        b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> normalfilter R\n 3. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; a \\<in> normalfilter R;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> normalfilter R\n 4. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a l\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> normalfilter R\n 5. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a r\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> normalfilter R", "apply (drule_tac x = 1 in spec)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>R \\<in> congruences; \\<not> R (1::'a) (1::'a)\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; a \\<in> normalfilter R;\n        b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> normalfilter R\n 3. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; a \\<in> normalfilter R;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> normalfilter R\n 4. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a l\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> normalfilter R\n 5. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a r\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> normalfilter R", "apply (simp add: congruences_def  equivp_reflp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; a \\<in> normalfilter R;\n        b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a * b \\<in> normalfilter R\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; a \\<in> normalfilter R;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> normalfilter R\n 3. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a l\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> normalfilter R\n 4. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a r\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> normalfilter R", "apply (simp add: normalfilter_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R a (1::'a); R b (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R (a * b) (1::'a)\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; a \\<in> normalfilter R;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> normalfilter R\n 3. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a l\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> normalfilter R\n 4. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a r\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> normalfilter R", "apply (drule_tac a = a and c = b and b = 1 and d = 1 and R = R in cong_times)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R a (1::'a); R b (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R a (1::'a)\n 2. \\<And>a b.\n       \\<lbrakk>R a (1::'a); R b (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R b (1::'a)\n 3. \\<And>a b.\n       \\<lbrakk>R a (1::'a); R b (1::'a);\n        R (a * b) ((1::'a) * (1::'a))\\<rbrakk>\n       \\<Longrightarrow> R (a * b) (1::'a)\n 4. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; a \\<in> normalfilter R;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> normalfilter R\n 5. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a l\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> normalfilter R\n 6. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a r\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> normalfilter R", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; a \\<in> normalfilter R;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> b \\<in> normalfilter R\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a l\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> normalfilter R\n 3. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a r\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> normalfilter R", "apply (simp add: normalfilter_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R a (1::'a); a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> R b (1::'a)\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a l\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> normalfilter R\n 3. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a r\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> normalfilter R", "apply (simp add: left_lesseq)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R a (1::'a);\n        a l\\<rightarrow> b = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R b (1::'a)\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a l\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> normalfilter R\n 3. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a r\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> normalfilter R", "apply (cut_tac R = R and a = a and b = 1 and c = b and d = b in cong_impl_l)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R a (1::'a);\n        a l\\<rightarrow> b = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R \\<in> congruences\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R a (1::'a);\n        a l\\<rightarrow> b = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R a (1::'a)\n 3. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R a (1::'a);\n        a l\\<rightarrow> b = (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R b b\n 4. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R a (1::'a);\n        a l\\<rightarrow> b = (1::'a);\n        R (a l\\<rightarrow> b) ((1::'a) l\\<rightarrow> b)\\<rbrakk>\n       \\<Longrightarrow> R b (1::'a)\n 5. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a l\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> normalfilter R\n 6. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a r\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> normalfilter R", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R a (1::'a);\n        a l\\<rightarrow> b = (1::'a); R (1::'a) b\\<rbrakk>\n       \\<Longrightarrow> R b (1::'a)\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a l\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> normalfilter R\n 3. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a r\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> normalfilter R", "apply (simp add: cong_sym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a l\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a r\\<rightarrow> b \\<in> normalfilter R\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences;\n        a r\\<rightarrow> b \\<in> normalfilter R\\<rbrakk>\n       \\<Longrightarrow> a l\\<rightarrow> b \\<in> normalfilter R", "apply (simp_all add: normalfilter_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a l\\<rightarrow> b) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R (a r\\<rightarrow> b) (1::'a)\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R (a l\\<rightarrow> b) (1::'a)", "apply (cut_tac R = R and a = \"a l\\<rightarrow> b\" and b = 1 and c = a and d = a in cong_times)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a l\\<rightarrow> b) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R \\<in> congruences\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a l\\<rightarrow> b) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R (a l\\<rightarrow> b) (1::'a)\n 3. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a l\\<rightarrow> b) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R a a\n 4. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a l\\<rightarrow> b) (1::'a);\n        R ((a l\\<rightarrow> b) * a) ((1::'a) * a)\\<rbrakk>\n       \\<Longrightarrow> R (a r\\<rightarrow> b) (1::'a)\n 5. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R (a l\\<rightarrow> b) (1::'a)", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a l\\<rightarrow> b) (1::'a);\n        R ((a l\\<rightarrow> b) * a) a\\<rbrakk>\n       \\<Longrightarrow> R (a r\\<rightarrow> b) (1::'a)\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R (a l\\<rightarrow> b) (1::'a)", "apply (simp add: inf_l_def [THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a l\\<rightarrow> b) (1::'a);\n        R (a \\<sqinter> b) a\\<rbrakk>\n       \\<Longrightarrow> R (a r\\<rightarrow> b) (1::'a)\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R (a l\\<rightarrow> b) (1::'a)", "apply (cut_tac R = R and a = a and b = \"a \\<sqinter> b\" and c = b and d = b in cong_impl_r)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a l\\<rightarrow> b) (1::'a);\n        R (a \\<sqinter> b) a\\<rbrakk>\n       \\<Longrightarrow> R \\<in> congruences\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a l\\<rightarrow> b) (1::'a);\n        R (a \\<sqinter> b) a\\<rbrakk>\n       \\<Longrightarrow> R a (a \\<sqinter> b)\n 3. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a l\\<rightarrow> b) (1::'a);\n        R (a \\<sqinter> b) a\\<rbrakk>\n       \\<Longrightarrow> R b b\n 4. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a l\\<rightarrow> b) (1::'a);\n        R (a \\<sqinter> b) a;\n        R (a r\\<rightarrow> b) (a \\<sqinter> b r\\<rightarrow> b)\\<rbrakk>\n       \\<Longrightarrow> R (a r\\<rightarrow> b) (1::'a)\n 5. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R (a l\\<rightarrow> b) (1::'a)", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a l\\<rightarrow> b) (1::'a);\n        R (a \\<sqinter> b) a\\<rbrakk>\n       \\<Longrightarrow> R a (a \\<sqinter> b)\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R (a l\\<rightarrow> b) (1::'a)", "apply (simp add: cong_sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R (a l\\<rightarrow> b) (1::'a)", "apply (cut_tac R = R and c = \"a r\\<rightarrow> b\" and d = 1 and a = a and b = a in cong_times)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R \\<in> congruences\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R a a\n 3. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R (a r\\<rightarrow> b) (1::'a)\n 4. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a);\n        R (a * (a r\\<rightarrow> b)) (a * (1::'a))\\<rbrakk>\n       \\<Longrightarrow> R (a l\\<rightarrow> b) (1::'a)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a);\n        R (a * (a r\\<rightarrow> b)) a\\<rbrakk>\n       \\<Longrightarrow> R (a l\\<rightarrow> b) (1::'a)", "apply (simp add: inf_r_def [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a);\n        R (a \\<sqinter> b) a\\<rbrakk>\n       \\<Longrightarrow> R (a l\\<rightarrow> b) (1::'a)", "apply (cut_tac R = R and a = a and b = \"a \\<sqinter> b\" and c = b and d = b in cong_impl_l)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a);\n        R (a \\<sqinter> b) a\\<rbrakk>\n       \\<Longrightarrow> R \\<in> congruences\n 2. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a);\n        R (a \\<sqinter> b) a\\<rbrakk>\n       \\<Longrightarrow> R a (a \\<sqinter> b)\n 3. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a);\n        R (a \\<sqinter> b) a\\<rbrakk>\n       \\<Longrightarrow> R b b\n 4. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a);\n        R (a \\<sqinter> b) a;\n        R (a l\\<rightarrow> b) (a \\<sqinter> b l\\<rightarrow> b)\\<rbrakk>\n       \\<Longrightarrow> R (a l\\<rightarrow> b) (1::'a)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>R \\<in> congruences; R (a r\\<rightarrow> b) (1::'a);\n        R (a \\<sqinter> b) a\\<rbrakk>\n       \\<Longrightarrow> R a (a \\<sqinter> b)", "by (simp add: cong_sym)"], ["", "lemma lemma_3_15_i:\n  \"H \\<in> normalfilters \\<Longrightarrow> normalfilter (cong H) = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> normalfilters \\<Longrightarrow> normalfilter (cong H) = H", "by (simp add: normalfilter_def cong_r cong_r_filter)"], ["", "lemma lemma_3_15_ii:\n  \"R \\<in> congruences \\<Longrightarrow> cong (normalfilter R) = R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<in> congruences \\<Longrightarrow> cong (normalfilter R) = R", "apply (simp add: fun_eq_iff cong_r cong_r_filter)"], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<in> congruences \\<Longrightarrow>\n    \\<forall>x xa.\n       (x l\\<rightarrow> xa \\<in> normalfilter R \\<and>\n        xa l\\<rightarrow> x \\<in> normalfilter R) =\n       R x xa", "apply (simp add: normalfilter_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<in> congruences \\<Longrightarrow>\n    \\<forall>x xa.\n       (R (x l\\<rightarrow> xa) (1::'a) \\<and>\n        R (xa l\\<rightarrow> x) (1::'a)) =\n       R x xa", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R x xa\n 2. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (x l\\<rightarrow> xa) (1::'a)\n 3. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (xa l\\<rightarrow> x) (1::'a)", "apply (cut_tac R = R and a = \"x l\\<rightarrow> xa\" and b = 1 and c = x and d = x in cong_times)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R \\<in> congruences\n 2. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R (x l\\<rightarrow> xa) (1::'a)\n 3. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a)\\<rbrakk>\n       \\<Longrightarrow> R x x\n 4. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a);\n        R ((x l\\<rightarrow> xa) * x) ((1::'a) * x)\\<rbrakk>\n       \\<Longrightarrow> R x xa\n 5. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (x l\\<rightarrow> xa) (1::'a)\n 6. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (xa l\\<rightarrow> x) (1::'a)", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a);\n        R ((x l\\<rightarrow> xa) * x) x\\<rbrakk>\n       \\<Longrightarrow> R x xa\n 2. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (x l\\<rightarrow> xa) (1::'a)\n 3. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (xa l\\<rightarrow> x) (1::'a)", "apply (cut_tac R = R and a = \"xa l\\<rightarrow> x\" and b = 1 and c = xa and d = xa in cong_times)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a);\n        R ((x l\\<rightarrow> xa) * x) x\\<rbrakk>\n       \\<Longrightarrow> R \\<in> congruences\n 2. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a);\n        R ((x l\\<rightarrow> xa) * x) x\\<rbrakk>\n       \\<Longrightarrow> R (xa l\\<rightarrow> x) (1::'a)\n 3. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a);\n        R ((x l\\<rightarrow> xa) * x) x\\<rbrakk>\n       \\<Longrightarrow> R xa xa\n 4. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a); R ((x l\\<rightarrow> xa) * x) x;\n        R ((xa l\\<rightarrow> x) * xa) ((1::'a) * xa)\\<rbrakk>\n       \\<Longrightarrow> R x xa\n 5. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (x l\\<rightarrow> xa) (1::'a)\n 6. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (xa l\\<rightarrow> x) (1::'a)", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a); R ((x l\\<rightarrow> xa) * x) x;\n        R ((xa l\\<rightarrow> x) * xa) xa\\<rbrakk>\n       \\<Longrightarrow> R x xa\n 2. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (x l\\<rightarrow> xa) (1::'a)\n 3. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (xa l\\<rightarrow> x) (1::'a)", "apply (simp add: inf_l_def [THEN sym])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a); R (x \\<sqinter> xa) x;\n        R (xa \\<sqinter> x) xa\\<rbrakk>\n       \\<Longrightarrow> R x xa\n 2. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (x l\\<rightarrow> xa) (1::'a)\n 3. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (xa l\\<rightarrow> x) (1::'a)", "apply (rule_tac b = \"x \\<sqinter> xa\" in cong_trans_a)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a); R (x \\<sqinter> xa) x;\n        R (xa \\<sqinter> x) xa\\<rbrakk>\n       \\<Longrightarrow> R \\<in> congruences\n 2. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a); R (x \\<sqinter> xa) x;\n        R (xa \\<sqinter> x) xa\\<rbrakk>\n       \\<Longrightarrow> R x (x \\<sqinter> xa)\n 3. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a); R (x \\<sqinter> xa) x;\n        R (xa \\<sqinter> x) xa\\<rbrakk>\n       \\<Longrightarrow> R (x \\<sqinter> xa) xa\n 4. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (x l\\<rightarrow> xa) (1::'a)\n 5. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (xa l\\<rightarrow> x) (1::'a)", "apply simp_all"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a); R (x \\<sqinter> xa) x;\n        R (xa \\<sqinter> x) xa\\<rbrakk>\n       \\<Longrightarrow> R x (x \\<sqinter> xa)\n 2. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a); R (x \\<sqinter> xa) x;\n        R (xa \\<sqinter> x) xa\\<rbrakk>\n       \\<Longrightarrow> R (x \\<sqinter> xa) xa\n 3. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (x l\\<rightarrow> xa) (1::'a)\n 4. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (xa l\\<rightarrow> x) (1::'a)", "apply (subst cong_sym)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a); R (x \\<sqinter> xa) x;\n        R (xa \\<sqinter> x) xa\\<rbrakk>\n       \\<Longrightarrow> R \\<in> congruences\n 2. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a); R (x \\<sqinter> xa) x;\n        R (xa \\<sqinter> x) xa\\<rbrakk>\n       \\<Longrightarrow> R (x \\<sqinter> xa) x\n 3. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a); R (x \\<sqinter> xa) x;\n        R (xa \\<sqinter> x) xa\\<rbrakk>\n       \\<Longrightarrow> True\n 4. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a); R (x \\<sqinter> xa) x;\n        R (xa \\<sqinter> x) xa\\<rbrakk>\n       \\<Longrightarrow> R (x \\<sqinter> xa) xa\n 5. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (x l\\<rightarrow> xa) (1::'a)\n 6. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (xa l\\<rightarrow> x) (1::'a)", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a); R (x \\<sqinter> xa) x;\n        R (xa \\<sqinter> x) xa\\<rbrakk>\n       \\<Longrightarrow> R (x \\<sqinter> xa) xa\n 2. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (x l\\<rightarrow> xa) (1::'a)\n 3. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (xa l\\<rightarrow> x) (1::'a)", "apply (subst inf.commute)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R (x l\\<rightarrow> xa) (1::'a);\n        R (xa l\\<rightarrow> x) (1::'a); R (x \\<sqinter> xa) x;\n        R (xa \\<sqinter> x) xa\\<rbrakk>\n       \\<Longrightarrow> R (xa \\<sqinter> x) xa\n 2. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (x l\\<rightarrow> xa) (1::'a)\n 3. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (xa l\\<rightarrow> x) (1::'a)", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (x l\\<rightarrow> xa) (1::'a)\n 2. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (xa l\\<rightarrow> x) (1::'a)", "apply (cut_tac R = R and a = x and b = xa and c = xa and d = xa in cong_impl_l)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R \\<in> congruences\n 2. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R x xa\n 3. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R xa xa\n 4. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa;\n        R (x l\\<rightarrow> xa) (xa l\\<rightarrow> xa)\\<rbrakk>\n       \\<Longrightarrow> R (x l\\<rightarrow> xa) (1::'a)\n 5. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (xa l\\<rightarrow> x) (1::'a)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R (xa l\\<rightarrow> x) (1::'a)", "apply (cut_tac R = R and a = xa and b = xa and c = x and d = xa in cong_impl_l)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R \\<in> congruences\n 2. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R xa xa\n 3. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa\\<rbrakk>\n       \\<Longrightarrow> R x xa\n 4. \\<And>x xa.\n       \\<lbrakk>R \\<in> congruences; R x xa;\n        R (xa l\\<rightarrow> x) (xa l\\<rightarrow> xa)\\<rbrakk>\n       \\<Longrightarrow> R (xa l\\<rightarrow> x) (1::'a)", "by simp_all"], ["", "lemma lemma_3_15_iii: \"H1 \\<in> normalfilters \\<Longrightarrow> H2 \\<in> normalfilters \\<Longrightarrow> (H1 \\<subseteq> H2) = (cong H1 \\<le> cong H2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H1 \\<in> normalfilters; H2 \\<in> normalfilters\\<rbrakk>\n    \\<Longrightarrow> (H1 \\<subseteq> H2) = (cong H1 \\<le> cong H2)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>H1 \\<in> normalfilters; H2 \\<in> normalfilters;\n        H1 \\<subseteq> H2; cong H1 x y\\<rbrakk>\n       \\<Longrightarrow> cong H2 x y\n 2. \\<And>x.\n       \\<lbrakk>H1 \\<in> normalfilters; H2 \\<in> normalfilters;\n        cong H1 \\<le> cong H2; x \\<in> H1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H2", "apply (simp add: cong_l cong_l_filter)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>H1 \\<in> normalfilters; H2 \\<in> normalfilters;\n        H1 \\<subseteq> H2;\n        x r\\<rightarrow> y \\<in> H1 \\<and>\n        y r\\<rightarrow> x \\<in> H1\\<rbrakk>\n       \\<Longrightarrow> x r\\<rightarrow> y \\<in> H2 \\<and>\n                         y r\\<rightarrow> x \\<in> H2\n 2. \\<And>x.\n       \\<lbrakk>H1 \\<in> normalfilters; H2 \\<in> normalfilters;\n        cong H1 \\<le> cong H2; x \\<in> H1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H2", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>H1 \\<in> normalfilters; H2 \\<in> normalfilters;\n        cong H1 \\<le> cong H2; x \\<in> H1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H2", "apply (subgoal_tac \"cong H2 x 1\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>H1 \\<in> normalfilters; H2 \\<in> normalfilters;\n        cong H1 \\<le> cong H2; x \\<in> H1; cong H2 x (1::'a)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H2\n 2. \\<And>x.\n       \\<lbrakk>H1 \\<in> normalfilters; H2 \\<in> normalfilters;\n        cong H1 \\<le> cong H2; x \\<in> H1\\<rbrakk>\n       \\<Longrightarrow> cong H2 x (1::'a)", "apply (simp add: cong_l cong_l_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>H1 \\<in> normalfilters; H2 \\<in> normalfilters;\n        cong H1 \\<le> cong H2; x \\<in> H1\\<rbrakk>\n       \\<Longrightarrow> cong H2 x (1::'a)", "apply (subgoal_tac \"cong H1 x 1\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>H1 \\<in> normalfilters; H2 \\<in> normalfilters;\n        cong H1 \\<le> cong H2; x \\<in> H1; cong H1 x (1::'a)\\<rbrakk>\n       \\<Longrightarrow> cong H2 x (1::'a)\n 2. \\<And>x.\n       \\<lbrakk>H1 \\<in> normalfilters; H2 \\<in> normalfilters;\n        cong H1 \\<le> cong H2; x \\<in> H1\\<rbrakk>\n       \\<Longrightarrow> cong H1 x (1::'a)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>H1 \\<in> normalfilters; H2 \\<in> normalfilters;\n        cong H1 \\<le> cong H2; x \\<in> H1\\<rbrakk>\n       \\<Longrightarrow> cong H1 x (1::'a)", "by (simp add: cong_l cong_l_def)"], ["", "definition\n  \"p x y z = ((x l\\<rightarrow> y) r\\<rightarrow> z) \\<sqinter> ((z l\\<rightarrow> y) r\\<rightarrow> x)\""], ["", "lemma lemma_3_16_i: \"p x x y = y \\<and> p x y y = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p x x y = y \\<and> p x y y = x", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. p x x y = y\n 2. p x y y = x", "apply (simp_all add: p_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. y \\<sqinter> ((y l\\<rightarrow> x) r\\<rightarrow> x) = y\n 2. ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter> x = x", "apply (rule antisym)"], ["proof (prove)\ngoal (3 subgoals):\n 1. y \\<sqinter> ((y l\\<rightarrow> x) r\\<rightarrow> x) \\<le> y\n 2. y \\<le> y \\<sqinter> ((y l\\<rightarrow> x) r\\<rightarrow> x)\n 3. ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter> x = x", "apply (simp_all add: lemma_2_10_24)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter> x = x", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter> x \\<le> x\n 2. x \\<le> ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter> x", "by (simp_all add: lemma_2_10_24)"], ["", "definition \"M x y z = ((y l\\<rightarrow> x) r\\<rightarrow> x) \\<sqinter> ((z l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter> ((x l\\<rightarrow> z) r\\<rightarrow> z)\""], ["", "lemma \"M x x y = x \\<and> M x y x = x \\<and> M y x x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M x x y = x \\<and> M x y x = x \\<and> M y x x = x", "apply (simp add: M_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> ((y l\\<rightarrow> x) r\\<rightarrow> x) \\<sqinter>\n    ((x l\\<rightarrow> y) r\\<rightarrow> y) =\n    x \\<and>\n    ((y l\\<rightarrow> x) r\\<rightarrow> x) \\<sqinter>\n    ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter>\n    x =\n    x \\<and>\n    ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter> x \\<sqinter>\n    ((y l\\<rightarrow> x) r\\<rightarrow> x) =\n    x", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. x \\<sqinter> ((y l\\<rightarrow> x) r\\<rightarrow> x) \\<sqinter>\n    ((x l\\<rightarrow> y) r\\<rightarrow> y) =\n    x\n 2. ((y l\\<rightarrow> x) r\\<rightarrow> x) \\<sqinter>\n    ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter>\n    x =\n    x\n 3. ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter> x \\<sqinter>\n    ((y l\\<rightarrow> x) r\\<rightarrow> x) =\n    x", "apply (rule antisym)"], ["proof (prove)\ngoal (4 subgoals):\n 1. x \\<sqinter> ((y l\\<rightarrow> x) r\\<rightarrow> x) \\<sqinter>\n    ((x l\\<rightarrow> y) r\\<rightarrow> y)\n    \\<le> x\n 2. x \\<le> x \\<sqinter> ((y l\\<rightarrow> x) r\\<rightarrow> x) \\<sqinter>\n            ((x l\\<rightarrow> y) r\\<rightarrow> y)\n 3. ((y l\\<rightarrow> x) r\\<rightarrow> x) \\<sqinter>\n    ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter>\n    x =\n    x\n 4. ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter> x \\<sqinter>\n    ((y l\\<rightarrow> x) r\\<rightarrow> x) =\n    x", "apply (simp_all add: lemma_2_10_24 lemma_2_5_9_b)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((y l\\<rightarrow> x) r\\<rightarrow> x) \\<sqinter>\n    ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter>\n    x =\n    x\n 2. ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter> x \\<sqinter>\n    ((y l\\<rightarrow> x) r\\<rightarrow> x) =\n    x", "apply (rule antisym)"], ["proof (prove)\ngoal (3 subgoals):\n 1. ((y l\\<rightarrow> x) r\\<rightarrow> x) \\<sqinter>\n    ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter>\n    x\n    \\<le> x\n 2. x \\<le> ((y l\\<rightarrow> x) r\\<rightarrow> x) \\<sqinter>\n            ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter>\n            x\n 3. ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter> x \\<sqinter>\n    ((y l\\<rightarrow> x) r\\<rightarrow> x) =\n    x", "apply (simp_all add: lemma_2_10_24 lemma_2_5_9_b)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter> x \\<sqinter>\n    ((y l\\<rightarrow> x) r\\<rightarrow> x) =\n    x", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter> x \\<sqinter>\n    ((y l\\<rightarrow> x) r\\<rightarrow> x)\n    \\<le> x\n 2. x \\<le> ((x l\\<rightarrow> y) r\\<rightarrow> y) \\<sqinter> x \\<sqinter>\n            ((y l\\<rightarrow> x) r\\<rightarrow> x)", "by (simp_all add: lemma_2_10_24 lemma_2_5_9_b)"], ["", "end"], ["", "end"]]}