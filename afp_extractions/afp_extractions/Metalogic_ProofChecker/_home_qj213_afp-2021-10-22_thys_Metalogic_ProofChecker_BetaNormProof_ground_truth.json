{"file_name": "/home/qj213/afp-2021-10-22/thys/Metalogic_ProofChecker/BetaNormProof.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Metalogic_ProofChecker", "problem_names": ["lemma beta_preserves_term_ok': \"term_ok' \\<Sigma> r \\<Longrightarrow> r \\<rightarrow>\\<^sub>\\<beta> s \\<Longrightarrow> term_ok' \\<Sigma> s\"", "lemma beta_preserves_term_ok: \"term_ok \\<Theta> r \\<Longrightarrow> r \\<rightarrow>\\<^sub>\\<beta> s \\<Longrightarrow> term_ok \\<Theta> s\"", "lemma beta_star_preserves_term_ok': \"r \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* s \\<Longrightarrow> term_ok' \\<Sigma> r  \\<Longrightarrow> term_ok' \\<Sigma> s\""], "translations": [["", "lemma beta_preserves_term_ok': \"term_ok' \\<Sigma> r \\<Longrightarrow> r \\<rightarrow>\\<^sub>\\<beta> s \\<Longrightarrow> term_ok' \\<Sigma> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>term_ok' \\<Sigma> r; r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n    \\<Longrightarrow> term_ok' \\<Sigma> s", "proof (induction r arbitrary: s)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x1 x2 s.\n       \\<lbrakk>term_ok' \\<Sigma> (Ct x1 x2);\n        Ct x1 x2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 2. \\<And>x1 x2 s.\n       \\<lbrakk>term_ok' \\<Sigma> (Fv x1 x2);\n        Fv x1 x2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 3. \\<And>x s.\n       \\<lbrakk>term_ok' \\<Sigma> (Bv x);\n        Bv x \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 4. \\<And>x1 r s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r;\n                    r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (Abs x1 r);\n        Abs x1 r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 5. \\<And>r1 r2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r1;\n                    r1 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> r2;\n            r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (r1 $ r2);\n        r1 $ r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "case (Ct n T)"], ["proof (state)\nthis:\n  term_ok' \\<Sigma> (Ct n T)\n  Ct n T \\<rightarrow>\\<^sub>\\<beta> s\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2 s.\n       \\<lbrakk>term_ok' \\<Sigma> (Ct x1 x2);\n        Ct x1 x2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 2. \\<And>x1 x2 s.\n       \\<lbrakk>term_ok' \\<Sigma> (Fv x1 x2);\n        Fv x1 x2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 3. \\<And>x s.\n       \\<lbrakk>term_ok' \\<Sigma> (Bv x);\n        Bv x \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 4. \\<And>x1 r s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r;\n                    r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (Abs x1 r);\n        Abs x1 r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 5. \\<And>r1 r2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r1;\n                    r1 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> r2;\n            r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (r1 $ r2);\n        r1 $ r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "then"], ["proof (chain)\npicking this:\n  term_ok' \\<Sigma> (Ct n T)\n  Ct n T \\<rightarrow>\\<^sub>\\<beta> s", "show ?case"], ["proof (prove)\nusing this:\n  term_ok' \\<Sigma> (Ct n T)\n  Ct n T \\<rightarrow>\\<^sub>\\<beta> s\n\ngoal (1 subgoal):\n 1. term_ok' \\<Sigma> s", "apply (simp add: tinstT_def split: option.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>Ct n T \\<rightarrow>\\<^sub>\\<beta> s;\n        const_type \\<Sigma> n = Some x2;\n        typ_ok_sig \\<Sigma> T \\<and>\n        (\\<exists>\\<rho>. tsubstT x2 \\<rho> = T)\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "(* Seems like I miss a simp rule for Ct*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>Ct n T \\<rightarrow>\\<^sub>\\<beta> s;\n        const_type \\<Sigma> n = Some x2;\n        typ_ok_sig \\<Sigma> T \\<and>\n        (\\<exists>\\<rho>. tsubstT x2 \\<rho> = T)\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "using beta_reducible.simps(7) beta_step_imp_beta_reducible"], ["proof (prove)\nusing this:\n  beta_reducible (Ct ?v ?va) = False\n  ?t \\<rightarrow>\\<^sub>\\<beta> ?t' \\<Longrightarrow> beta_reducible ?t\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>Ct n T \\<rightarrow>\\<^sub>\\<beta> s;\n        const_type \\<Sigma> n = Some x2;\n        typ_ok_sig \\<Sigma> T \\<and>\n        (\\<exists>\\<rho>. tsubstT x2 \\<rho> = T)\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "by blast"], ["proof (state)\nthis:\n  term_ok' \\<Sigma> s\n\ngoal (4 subgoals):\n 1. \\<And>x1 x2 s.\n       \\<lbrakk>term_ok' \\<Sigma> (Fv x1 x2);\n        Fv x1 x2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 2. \\<And>x s.\n       \\<lbrakk>term_ok' \\<Sigma> (Bv x);\n        Bv x \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 3. \\<And>x1 r s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r;\n                    r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (Abs x1 r);\n        Abs x1 r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 4. \\<And>r1 r2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r1;\n                    r1 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> r2;\n            r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (r1 $ r2);\n        r1 $ r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1 x2 s.\n       \\<lbrakk>term_ok' \\<Sigma> (Fv x1 x2);\n        Fv x1 x2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 2. \\<And>x s.\n       \\<lbrakk>term_ok' \\<Sigma> (Bv x);\n        Bv x \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 3. \\<And>x1 r s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r;\n                    r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (Abs x1 r);\n        Abs x1 r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 4. \\<And>r1 r2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r1;\n                    r1 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> r2;\n            r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (r1 $ r2);\n        r1 $ r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "case (Fv n T)"], ["proof (state)\nthis:\n  term_ok' \\<Sigma> (Fv n T)\n  Fv n T \\<rightarrow>\\<^sub>\\<beta> s\n\ngoal (4 subgoals):\n 1. \\<And>x1 x2 s.\n       \\<lbrakk>term_ok' \\<Sigma> (Fv x1 x2);\n        Fv x1 x2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 2. \\<And>x s.\n       \\<lbrakk>term_ok' \\<Sigma> (Bv x);\n        Bv x \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 3. \\<And>x1 r s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r;\n                    r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (Abs x1 r);\n        Abs x1 r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 4. \\<And>r1 r2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r1;\n                    r1 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> r2;\n            r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (r1 $ r2);\n        r1 $ r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "then"], ["proof (chain)\npicking this:\n  term_ok' \\<Sigma> (Fv n T)\n  Fv n T \\<rightarrow>\\<^sub>\\<beta> s", "show ?case"], ["proof (prove)\nusing this:\n  term_ok' \\<Sigma> (Fv n T)\n  Fv n T \\<rightarrow>\\<^sub>\\<beta> s\n\ngoal (1 subgoal):\n 1. term_ok' \\<Sigma> s", "by auto"], ["proof (state)\nthis:\n  term_ok' \\<Sigma> s\n\ngoal (3 subgoals):\n 1. \\<And>x s.\n       \\<lbrakk>term_ok' \\<Sigma> (Bv x);\n        Bv x \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 2. \\<And>x1 r s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r;\n                    r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (Abs x1 r);\n        Abs x1 r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 3. \\<And>r1 r2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r1;\n                    r1 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> r2;\n            r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (r1 $ r2);\n        r1 $ r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x s.\n       \\<lbrakk>term_ok' \\<Sigma> (Bv x);\n        Bv x \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 2. \\<And>x1 r s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r;\n                    r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (Abs x1 r);\n        Abs x1 r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 3. \\<And>r1 r2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r1;\n                    r1 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> r2;\n            r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (r1 $ r2);\n        r1 $ r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "case (Bv n)"], ["proof (state)\nthis:\n  term_ok' \\<Sigma> (Bv n)\n  Bv n \\<rightarrow>\\<^sub>\\<beta> s\n\ngoal (3 subgoals):\n 1. \\<And>x s.\n       \\<lbrakk>term_ok' \\<Sigma> (Bv x);\n        Bv x \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 2. \\<And>x1 r s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r;\n                    r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (Abs x1 r);\n        Abs x1 r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 3. \\<And>r1 r2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r1;\n                    r1 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> r2;\n            r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (r1 $ r2);\n        r1 $ r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "then"], ["proof (chain)\npicking this:\n  term_ok' \\<Sigma> (Bv n)\n  Bv n \\<rightarrow>\\<^sub>\\<beta> s", "show ?case"], ["proof (prove)\nusing this:\n  term_ok' \\<Sigma> (Bv n)\n  Bv n \\<rightarrow>\\<^sub>\\<beta> s\n\ngoal (1 subgoal):\n 1. term_ok' \\<Sigma> s", "by auto"], ["proof (state)\nthis:\n  term_ok' \\<Sigma> s\n\ngoal (2 subgoals):\n 1. \\<And>x1 r s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r;\n                    r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (Abs x1 r);\n        Abs x1 r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 2. \\<And>r1 r2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r1;\n                    r1 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> r2;\n            r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (r1 $ r2);\n        r1 $ r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1 r s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r;\n                    r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (Abs x1 r);\n        Abs x1 r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 2. \\<And>r1 r2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r1;\n                    r1 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> r2;\n            r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (r1 $ r2);\n        r1 $ r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "case (Abs R r)"], ["proof (state)\nthis:\n  \\<lbrakk>term_ok' \\<Sigma> r; r \\<rightarrow>\\<^sub>\\<beta> ?s\\<rbrakk>\n  \\<Longrightarrow> term_ok' \\<Sigma> ?s\n  term_ok' \\<Sigma> (Abs R r)\n  Abs R r \\<rightarrow>\\<^sub>\\<beta> s\n\ngoal (2 subgoals):\n 1. \\<And>x1 r s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r;\n                    r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (Abs x1 r);\n        Abs x1 r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 2. \\<And>r1 r2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r1;\n                    r1 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> r2;\n            r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (r1 $ r2);\n        r1 $ r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>term_ok' \\<Sigma> r; r \\<rightarrow>\\<^sub>\\<beta> ?s\\<rbrakk>\n  \\<Longrightarrow> term_ok' \\<Sigma> ?s\n  term_ok' \\<Sigma> (Abs R r)\n  Abs R r \\<rightarrow>\\<^sub>\\<beta> s", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>term_ok' \\<Sigma> r; r \\<rightarrow>\\<^sub>\\<beta> ?s\\<rbrakk>\n  \\<Longrightarrow> term_ok' \\<Sigma> ?s\n  term_ok' \\<Sigma> (Abs R r)\n  Abs R r \\<rightarrow>\\<^sub>\\<beta> s\n\ngoal (1 subgoal):\n 1. term_ok' \\<Sigma> s", "by auto"], ["proof (state)\nthis:\n  term_ok' \\<Sigma> s\n\ngoal (1 subgoal):\n 1. \\<And>r1 r2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r1;\n                    r1 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> r2;\n            r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (r1 $ r2);\n        r1 $ r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r1 r2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r1;\n                    r1 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> r2;\n            r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (r1 $ r2);\n        r1 $ r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "case (App f u)"], ["proof (state)\nthis:\n  \\<lbrakk>term_ok' \\<Sigma> f; f \\<rightarrow>\\<^sub>\\<beta> ?s\\<rbrakk>\n  \\<Longrightarrow> term_ok' \\<Sigma> ?s\n  \\<lbrakk>term_ok' \\<Sigma> u; u \\<rightarrow>\\<^sub>\\<beta> ?s\\<rbrakk>\n  \\<Longrightarrow> term_ok' \\<Sigma> ?s\n  term_ok' \\<Sigma> (f $ u)\n  f $ u \\<rightarrow>\\<^sub>\\<beta> s\n\ngoal (1 subgoal):\n 1. \\<And>r1 r2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> r1;\n                    r1 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> r2;\n            r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (r1 $ r2);\n        r1 $ r2 \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>term_ok' \\<Sigma> f; f \\<rightarrow>\\<^sub>\\<beta> ?s\\<rbrakk>\n  \\<Longrightarrow> term_ok' \\<Sigma> ?s\n  \\<lbrakk>term_ok' \\<Sigma> u; u \\<rightarrow>\\<^sub>\\<beta> ?s\\<rbrakk>\n  \\<Longrightarrow> term_ok' \\<Sigma> ?s\n  term_ok' \\<Sigma> (f $ u)\n  f $ u \\<rightarrow>\\<^sub>\\<beta> s", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>term_ok' \\<Sigma> f; f \\<rightarrow>\\<^sub>\\<beta> ?s\\<rbrakk>\n  \\<Longrightarrow> term_ok' \\<Sigma> ?s\n  \\<lbrakk>term_ok' \\<Sigma> u; u \\<rightarrow>\\<^sub>\\<beta> ?s\\<rbrakk>\n  \\<Longrightarrow> term_ok' \\<Sigma> ?s\n  term_ok' \\<Sigma> (f $ u)\n  f $ u \\<rightarrow>\\<^sub>\\<beta> s\n\ngoal (1 subgoal):\n 1. term_ok' \\<Sigma> s", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s.\n                \\<lbrakk>term_ok' \\<Sigma> f;\n                 f \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                \\<Longrightarrow> term_ok' \\<Sigma> s;\n     \\<And>s.\n        \\<lbrakk>term_ok' \\<Sigma> u;\n         u \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n        \\<Longrightarrow> term_ok' \\<Sigma> s;\n     term_ok' \\<Sigma> (f $ u); f $ u \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n    \\<Longrightarrow> term_ok' \\<Sigma> s", "apply (ind_cases \"f $ u \\<rightarrow>\\<^sub>\\<beta> s\" for f u s)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>T s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> f;\n                    f \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> u;\n            u \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (f $ u); f = Abs T s; s = subst_bv2 s 0 u\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 2. \\<And>t.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> f;\n                    f \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> u;\n            u \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (f $ u); s = t $ u;\n        f \\<rightarrow>\\<^sub>\\<beta> t\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 3. \\<And>t.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> f;\n                    f \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> u;\n            u \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (f $ u); s = f $ t;\n        u \\<rightarrow>\\<^sub>\\<beta> t\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "using term_ok'_subst_bv2 term_ok'.simps(4) term_ok'.simps(5)"], ["proof (prove)\nusing this:\n  \\<lbrakk>term_ok' ?\\<Sigma> ?s; term_ok' ?\\<Sigma> ?u\\<rbrakk>\n  \\<Longrightarrow> term_ok' ?\\<Sigma> (subst_bv2 ?s ?lev ?u)\n  term_ok' ?\\<Sigma> (?t $ ?u) =\n  (term_ok' ?\\<Sigma> ?t \\<and> term_ok' ?\\<Sigma> ?u)\n  term_ok' ?\\<Sigma> (Abs ?T ?t) =\n  (typ_ok_sig ?\\<Sigma> ?T \\<and> term_ok' ?\\<Sigma> ?t)\n\ngoal (3 subgoals):\n 1. \\<And>T s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> f;\n                    f \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> u;\n            u \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (f $ u); f = Abs T s; s = subst_bv2 s 0 u\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 2. \\<And>t.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> f;\n                    f \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> u;\n            u \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (f $ u); s = t $ u;\n        f \\<rightarrow>\\<^sub>\\<beta> t\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 3. \\<And>t.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> f;\n                    f \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> u;\n            u \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (f $ u); s = f $ t;\n        u \\<rightarrow>\\<^sub>\\<beta> t\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> f;\n                    f \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> u;\n            u \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (f $ u); s = t $ u;\n        f \\<rightarrow>\\<^sub>\\<beta> t\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 2. \\<And>t.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> f;\n                    f \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> u;\n            u \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (f $ u); s = f $ t;\n        u \\<rightarrow>\\<^sub>\\<beta> t\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "using term_ok'.simps(4)"], ["proof (prove)\nusing this:\n  term_ok' ?\\<Sigma> (?t $ ?u) =\n  (term_ok' ?\\<Sigma> ?t \\<and> term_ok' ?\\<Sigma> ?u)\n\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> f;\n                    f \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> u;\n            u \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (f $ u); s = t $ u;\n        f \\<rightarrow>\\<^sub>\\<beta> t\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s\n 2. \\<And>t.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> f;\n                    f \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> u;\n            u \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (f $ u); s = f $ t;\n        u \\<rightarrow>\\<^sub>\\<beta> t\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> f;\n                    f \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> u;\n            u \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (f $ u); s = f $ t;\n        u \\<rightarrow>\\<^sub>\\<beta> t\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "using term_ok'.simps(4)"], ["proof (prove)\nusing this:\n  term_ok' ?\\<Sigma> (?t $ ?u) =\n  (term_ok' ?\\<Sigma> ?t \\<and> term_ok' ?\\<Sigma> ?u)\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>term_ok' \\<Sigma> f;\n                    f \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n                   \\<Longrightarrow> term_ok' \\<Sigma> s;\n        \\<And>s.\n           \\<lbrakk>term_ok' \\<Sigma> u;\n            u \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n           \\<Longrightarrow> term_ok' \\<Sigma> s;\n        term_ok' \\<Sigma> (f $ u); s = f $ t;\n        u \\<rightarrow>\\<^sub>\\<beta> t\\<rbrakk>\n       \\<Longrightarrow> term_ok' \\<Sigma> s", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  term_ok' \\<Sigma> s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma beta_preserves_term_ok: \"term_ok \\<Theta> r \\<Longrightarrow> r \\<rightarrow>\\<^sub>\\<beta> s \\<Longrightarrow> term_ok \\<Theta> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>term_ok \\<Theta> r; r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n    \\<Longrightarrow> term_ok \\<Theta> s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>term_ok \\<Theta> r; r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n    \\<Longrightarrow> term_ok \\<Theta> s", "assume a1: \"term_ok \\<Theta> r\""], ["proof (state)\nthis:\n  term_ok \\<Theta> r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>term_ok \\<Theta> r; r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n    \\<Longrightarrow> term_ok \\<Theta> s", "assume a2: \"r \\<rightarrow>\\<^sub>\\<beta> s\""], ["proof (state)\nthis:\n  r \\<rightarrow>\\<^sub>\\<beta> s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>term_ok \\<Theta> r; r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n    \\<Longrightarrow> term_ok \\<Theta> s", "then"], ["proof (chain)\npicking this:\n  r \\<rightarrow>\\<^sub>\\<beta> s", "have \"None \\<noteq> typ_of1 [] s\""], ["proof (prove)\nusing this:\n  r \\<rightarrow>\\<^sub>\\<beta> s\n\ngoal (1 subgoal):\n 1. None \\<noteq> typ_of1 [] s", "using a1 beta_preserves_typ_of1"], ["proof (prove)\nusing this:\n  r \\<rightarrow>\\<^sub>\\<beta> s\n  term_ok \\<Theta> r\n  \\<lbrakk>typ_of1 ?Ts ?r = Some ?T;\n   ?r \\<rightarrow>\\<^sub>\\<beta> ?s\\<rbrakk>\n  \\<Longrightarrow> typ_of1 ?Ts ?s = Some ?T\n\ngoal (1 subgoal):\n 1. None \\<noteq> typ_of1 [] s", "by (metis has_typ1_imp_typ_of1 has_typ_def option.distinct(1) term_ok_def wt_term_def)"], ["proof (state)\nthis:\n  None \\<noteq> typ_of1 [] s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>term_ok \\<Theta> r; r \\<rightarrow>\\<^sub>\\<beta> s\\<rbrakk>\n    \\<Longrightarrow> term_ok \\<Theta> s", "then"], ["proof (chain)\npicking this:\n  None \\<noteq> typ_of1 [] s", "show ?thesis"], ["proof (prove)\nusing this:\n  None \\<noteq> typ_of1 [] s\n\ngoal (1 subgoal):\n 1. term_ok \\<Theta> s", "using a2 a1 beta_preserves_term_ok' has_typ_iff_typ_of wt_term_def typ_of_def"], ["proof (prove)\nusing this:\n  None \\<noteq> typ_of1 [] s\n  r \\<rightarrow>\\<^sub>\\<beta> s\n  term_ok \\<Theta> r\n  \\<lbrakk>term_ok' ?\\<Sigma> ?r; ?r \\<rightarrow>\\<^sub>\\<beta> ?s\\<rbrakk>\n  \\<Longrightarrow> term_ok' ?\\<Sigma> ?s\n  \\<turnstile>\\<^sub>\\<tau> ?t : ?ty = (typ_of ?t = Some ?ty)\n  wt_term ?\\<Sigma> ?t \\<equiv>\n  wf_term ?\\<Sigma> ?t \\<and> (\\<exists>T. \\<turnstile>\\<^sub>\\<tau> ?t : T)\n  typ_of ?t \\<equiv> typ_of1 [] ?t\n\ngoal (1 subgoal):\n 1. term_ok \\<Theta> s", "by (meson beta_preserves_typ_of term_ok_def wf_term_iff_term_ok')"], ["proof (state)\nthis:\n  term_ok \\<Theta> s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma beta_star_preserves_term_ok': \"r \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* s \\<Longrightarrow> term_ok' \\<Sigma> r  \\<Longrightarrow> term_ok' \\<Sigma> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* s;\n     term_ok' \\<Sigma> r\\<rbrakk>\n    \\<Longrightarrow> term_ok' \\<Sigma> s", "by (induction rule: rtranclp.induct) (auto simp add: beta_preserves_term_ok')"], ["", "corollary beta_star_preserves_term_ok: \"r \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* s \\<Longrightarrow> term_ok thy r  \\<Longrightarrow> term_ok thy s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* s; term_ok thy r\\<rbrakk>\n    \\<Longrightarrow> term_ok thy s", "using beta_star_preserves_term_ok' beta_star_preserves_typ_of1 wt_term_def typ_of_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?r \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* ?s;\n   term_ok' ?\\<Sigma> ?r\\<rbrakk>\n  \\<Longrightarrow> term_ok' ?\\<Sigma> ?s\n  \\<lbrakk>?r \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* ?s;\n   typ_of1 ?Ts ?r = Some ?T\\<rbrakk>\n  \\<Longrightarrow> typ_of1 ?Ts ?s = Some ?T\n  wt_term ?\\<Sigma> ?t \\<equiv>\n  wf_term ?\\<Sigma> ?t \\<and> (\\<exists>T. \\<turnstile>\\<^sub>\\<tau> ?t : T)\n  typ_of ?t \\<equiv> typ_of1 [] ?t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* s; term_ok thy r\\<rbrakk>\n    \\<Longrightarrow> term_ok thy s", "by auto"], ["", "corollary term_ok_beta_norm: \"term_ok thy t \\<Longrightarrow> beta_norm t = Some t'\\<Longrightarrow> term_ok thy t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>term_ok thy t; beta_norm t = Some t'\\<rbrakk>\n    \\<Longrightarrow> term_ok thy t'", "using beta_norm_imp_beta_reds beta_star_preserves_term_ok"], ["proof (prove)\nusing this:\n  beta_norm ?t = Some ?t' \\<Longrightarrow>\n  ?t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* ?t'\n  \\<lbrakk>?r \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* ?s;\n   term_ok ?thy ?r\\<rbrakk>\n  \\<Longrightarrow> term_ok ?thy ?s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>term_ok thy t; beta_norm t = Some t'\\<rbrakk>\n    \\<Longrightarrow> term_ok thy t'", "by blast"], ["", "end"]]}