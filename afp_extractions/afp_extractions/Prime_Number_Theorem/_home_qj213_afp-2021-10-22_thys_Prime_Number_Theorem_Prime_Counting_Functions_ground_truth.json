{"file_name": "/home/qj213/afp-2021-10-22/thys/Prime_Number_Theorem/Prime_Counting_Functions.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Prime_Number_Theorem", "problem_names": ["lemma prime_sum_upto_altdef1:\n  \"prime_sum_upto f x = sum_upto (\\<lambda>p. ind prime p * f p) x\"", "lemma prime_sum_upto_altdef2:\n  \"prime_sum_upto f x = (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>. f p)\"", "lemma prime_sum_upto_altdef3:\n  \"prime_sum_upto f x = (\\<Sum>p\\<leftarrow>primes_upto (nat \\<lfloor>x\\<rfloor>). f p)\"", "lemma prime_sum_upto_eqI:\n  assumes \"a \\<le> b\" \"\\<And>k. k \\<in> {nat \\<lfloor>a\\<rfloor><..nat\\<lfloor>b\\<rfloor>} \\<Longrightarrow> \\<not>prime k\"\n  shows   \"prime_sum_upto f a = prime_sum_upto f b\"", "lemma prime_sum_upto_eqI':\n  assumes \"a' \\<le> nat \\<lfloor>a\\<rfloor>\" \"a \\<le> b\" \"nat \\<lfloor>b\\<rfloor> \\<le> b'\" \"\\<And>k. k \\<in> {a'<..b'} \\<Longrightarrow> \\<not>prime k\"\n  shows   \"prime_sum_upto f a = prime_sum_upto f b\"", "lemmas eval_prime_sum_upto = prime_sum_upto_altdef3[unfolded primes_upto_sieve]", "lemma of_nat_prime_sum_upto: \"of_nat (prime_sum_upto f x) = prime_sum_upto (\\<lambda>p. of_nat (f p)) x\"", "lemma prime_sum_upto_mono:\n  assumes \"\\<And>n. n > 0 \\<Longrightarrow> f n \\<ge> (0::real)\" \"x \\<le> y\"\n  shows   \"prime_sum_upto f x \\<le> prime_sum_upto f y\"", "lemma prime_sum_upto_nonneg:\n  assumes \"\\<And>n. n > 0 \\<Longrightarrow> f n \\<ge> (0 :: real)\"\n  shows   \"prime_sum_upto f x \\<ge> 0\"", "lemma prime_sum_upto_eq_0:\n  assumes \"x < 2\"\n  shows   \"prime_sum_upto f x = 0\"", "lemma measurable_prime_sum_upto [measurable]:\n  fixes f :: \"'a \\<Rightarrow> nat \\<Rightarrow> real\"\n  assumes [measurable]: \"\\<And>y. (\\<lambda>t. f t y) \\<in> M \\<rightarrow>\\<^sub>M borel\"\n  assumes [measurable]: \"x \\<in> M \\<rightarrow>\\<^sub>M borel\"\n  shows \"(\\<lambda>t. prime_sum_upto (f t) (x t)) \\<in> M \\<rightarrow>\\<^sub>M borel\"", "lemma sum_upto_primepows:\n  fixes f :: \"nat \\<Rightarrow> 'a :: comm_monoid_add\"\n  assumes \"\\<And>n. \\<not>primepow n \\<Longrightarrow> f n = 0\" \"\\<And>p i. prime p \\<Longrightarrow> i > 0 \\<Longrightarrow> f (p ^ i) = g p i\"\n  shows   \"sum_upto f x = (\\<Sum>(p, i) | prime p \\<and> i > 0 \\<and> real (p ^ i) \\<le> x. g p i)\"", "lemmas \\<pi>_def = primes_pi_def", "lemmas \\<theta>_def = primes_theta_def", "lemmas \\<psi>_def = primes_psi_def", "lemmas eval_\\<pi> = primes_pi_def[unfolded eval_prime_sum_upto]", "lemmas eval_\\<theta> = primes_theta_def[unfolded eval_prime_sum_upto]", "lemmas eval_\\<MM> = primes_M_def[unfolded eval_prime_sum_upto]", "lemma measurable_\\<pi> [measurable]: \"\\<pi> \\<in> borel \\<rightarrow>\\<^sub>M borel\"\n  and measurable_\\<theta> [measurable]: \"\\<theta> \\<in> borel \\<rightarrow>\\<^sub>M borel\"\n  and measurable_\\<psi> [measurable]: \"\\<psi> \\<in> borel \\<rightarrow>\\<^sub>M borel\"\n  and measurable_primes_M [measurable]: \"\\<MM> \\<in> borel \\<rightarrow>\\<^sub>M borel\"", "lemma \\<pi>_eq_0 [simp]: \"x < 2 \\<Longrightarrow> \\<pi> x = 0\"\n  and \\<theta>_eq_0 [simp]: \"x < 2 \\<Longrightarrow> \\<theta> x = 0\"\n  and primes_M_eq_0 [simp]: \"x < 2 \\<Longrightarrow> \\<MM> x = 0\"", "lemma \\<pi>_nat_cancel [simp]: \"\\<pi> (nat x) = \\<pi> x\"\n  and \\<theta>_nat_cancel [simp]: \"\\<theta> (nat x) = \\<theta> x\"\n  and primes_M_nat_cancel [simp]: \"\\<MM> (nat x) = \\<MM> x\"\n  and \\<psi>_nat_cancel [simp]: \"\\<psi> (nat x) = \\<psi> x\"\n  and \\<pi>_floor_cancel [simp]: \"\\<pi> (of_int \\<lfloor>y\\<rfloor>) = \\<pi> y\"\n  and \\<theta>_floor_cancel [simp]: \"\\<theta> (of_int \\<lfloor>y\\<rfloor>) = \\<theta> y\"\n  and primes_M_floor_cancel [simp]: \"\\<MM> (of_int \\<lfloor>y\\<rfloor>) = \\<MM> y\"\n  and \\<psi>_floor_cancel [simp]: \"\\<psi> (of_int \\<lfloor>y\\<rfloor>) = \\<psi> y\"", "lemma \\<pi>_nonneg [intro]: \"\\<pi> x \\<ge> 0\"\n  and \\<theta>_nonneg [intro]: \"\\<theta> x \\<ge> 0\"\n  and primes_M_nonneg [intro]: \"\\<MM> x \\<ge> 0\"", "lemma \\<pi>_mono [intro]: \"x \\<le> y \\<Longrightarrow> \\<pi> x \\<le> \\<pi> y\"\n  and \\<theta>_mono [intro]: \"x \\<le> y \\<Longrightarrow> \\<theta> x \\<le> \\<theta> y\"\n  and primes_M_mono [intro]: \"x \\<le> y \\<Longrightarrow> \\<MM> x \\<le> \\<MM> y\"", "lemma \\<pi>_pos_iff: \"\\<pi> x > 0 \\<longleftrightarrow> x \\<ge> 2\"", "lemma \\<pi>_pos: \"x \\<ge> 2 \\<Longrightarrow> \\<pi> x > 0\"", "lemma \\<psi>_eq_0 [simp]:\n  assumes \"x < 2\"\n  shows   \"\\<psi> x = 0\"", "lemma \\<psi>_nonneg [intro]: \"\\<psi> x \\<ge> 0\"", "lemma \\<psi>_mono: \"x \\<le> y \\<Longrightarrow> \\<psi> x \\<le> \\<psi> y\"", "lemma finite_primes_less [intro]: \"finite {q::nat. prime q \\<and> q < p}\"", "lemma nth_prime_unique_aux:\n  fixes p p' :: nat\n  assumes \"prime p\"  \"card {q. prime q \\<and> q < p} = n\"\n  assumes \"prime p'\" \"card {q. prime q \\<and> q < p'} = n\"\n  shows   \"p = p'\"", "lemma \\<pi>_smallest_prime_beyond:\n  \"\\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1\"", "lemma \\<pi>_inverse_exists: \"\\<exists>n. \\<pi> (real n) = real m\"", "lemma nth_prime_exists: \"\\<exists>p::nat. prime p \\<and> card {q. prime q \\<and> q < p} = n\"", "lemma nth_prime_exists1: \"\\<exists>!p::nat. prime p \\<and> card {q. prime q \\<and> q < p} = n\"", "lemma prime_nth_prime [intro]:    \"prime (nth_prime n)\"\n  and card_less_nth_prime [simp]: \"card {q. prime q \\<and> q < nth_prime n} = n\"", "lemma card_le_nth_prime [simp]: \"card {q. prime q \\<and> q \\<le> nth_prime n} = Suc n\"", "lemma \\<pi>_nth_prime [simp]: \"\\<pi> (real (nth_prime n)) = real n + 1\"", "lemma nth_prime_eqI:\n  assumes \"prime p\" \"card {q. prime q \\<and> q < p} = n\"\n  shows   \"nth_prime n = p\"", "lemma nth_prime_eqI':\n  assumes \"prime p\" \"card {q. prime q \\<and> q \\<le> p} = Suc n\"\n  shows   \"nth_prime n = p\"", "lemma nth_prime_eqI'':\n  assumes \"prime p\" \"\\<pi> (real p) = real n + 1\"\n  shows   \"nth_prime n = p\"", "lemma nth_prime_0 [simp]: \"nth_prime 0 = 2\"", "lemma nth_prime_Suc: \"nth_prime (Suc n) = smallest_prime_beyond (Suc (nth_prime n))\"", "lemmas nth_prime_code [code] = nth_prime_0 nth_prime_Suc", "lemma strict_mono_nth_prime: \"strict_mono nth_prime\"", "lemma nth_prime_le_iff [simp]: \"nth_prime m \\<le> nth_prime n \\<longleftrightarrow> m \\<le> n\"", "lemma nth_prime_less_iff [simp]: \"nth_prime m < nth_prime n \\<longleftrightarrow> m < n\"", "lemma nth_prime_eq_iff [simp]: \"nth_prime m = nth_prime n \\<longleftrightarrow> m = n\"", "lemma nth_prime_ge_2: \"nth_prime n \\<ge> 2\"", "lemma nth_prime_lower_bound: \"nth_prime n \\<ge> Suc (Suc n)\"", "lemma nth_prime_at_top: \"filterlim nth_prime at_top at_top\"", "lemma \\<pi>_at_top: \"filterlim \\<pi> at_top at_top\"", "lemma strict_mono_sequence_partition:\n  assumes \"strict_mono (f :: nat \\<Rightarrow> 'a :: {linorder, no_top})\"\n  assumes \"x \\<ge> f 0\"\n  assumes \"filterlim f at_top at_top\"\n  shows   \"\\<exists>k. x \\<in> {f k..<f (Suc k)}\"", "lemma nth_prime_partition:\n  assumes \"x \\<ge> 2\"\n  shows   \"\\<exists>k. x \\<in> {nth_prime k..<nth_prime (Suc k)}\"", "lemma nth_prime_partition':\n  assumes \"x \\<ge> 2\"\n  shows   \"\\<exists>k. x \\<in> {real (nth_prime k)..<real (nth_prime (Suc k))}\"", "lemma between_nth_primes_imp_nonprime:\n  assumes \"n > nth_prime k\" \"n < nth_prime (Suc k)\"\n  shows   \"\\<not>prime n\"", "lemma nth_prime_partition'':\n  assumes \"x \\<ge> (2 :: real)\"\n  shows \"x \\<in> {real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor> - 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}\"", "lemma \\<psi>_altdef:\n  assumes \"x > 0\"\n  shows   \"\\<psi> x = sum_upto (\\<lambda>m. prime_sum_upto ln (root m x)) (log 2 x)\" (is \"_ = ?rhs\")", "lemma \\<psi>_conv_\\<theta>_sum: \"x > 0 \\<Longrightarrow> \\<psi> x = sum_upto (\\<lambda>m. \\<theta> (root m x)) (log 2 x)\"", "lemma \\<psi>_minus_\\<theta>:\n  assumes x: \"x \\<ge> 2\"\n  shows   \"\\<psi> x - \\<theta> x = (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\"", "lemma \\<theta>_conv_\\<pi>_integral:\n  assumes \"x \\<ge> 2\"\n  shows   \"((\\<lambda>t. \\<pi> t / t) has_integral (\\<pi> x * ln x - \\<theta> x)) {2..x}\"", "lemma \\<pi>_conv_\\<theta>_integral:\n  assumes \"x \\<ge> 2\"\n  shows   \"((\\<lambda>t. \\<theta> t / (t * ln t ^ 2)) has_integral (\\<pi> x - \\<theta> x / ln x)) {2..x}\"", "lemma integrable_weighted_\\<theta>:\n  assumes \"2 \\<le> a\" \"a \\<le> x\"\n  shows   \"((\\<lambda>t. \\<theta> t / (t * ln t ^ 2)) integrable_on {a..x})\"", "lemma \\<theta>_conv_\\<MM>_integral:\n  assumes \"x \\<ge> 2\"\n  shows  \"(\\<MM> has_integral (\\<MM> x * x - \\<theta> x)) {2..x}\"", "lemma \\<MM>_conv_\\<theta>_integral:\n  assumes \"x \\<ge> 2\"\n  shows  \"((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral (\\<MM> x - \\<theta> x / x)) {2..x}\"", "lemma integrable_primes_M: \"\\<MM> integrable_on {x..y}\" if \"2 \\<le> x\" for x y :: real", "lemma \\<theta>_upper_bound_coarse:\n  assumes \"x \\<ge> 1\"\n  shows   \"\\<theta> x \\<le> x * ln x\"", "lemma \\<theta>_le_\\<psi>: \"\\<theta> x \\<le> \\<psi> x\"", "lemma \\<pi>_upper_bound_coarse:\n  assumes \"x \\<ge> 0\"\n  shows   \"\\<pi> x \\<le> x / 3 + 2\"", "lemma le_numeral_iff: \"m \\<le> numeral n \\<longleftrightarrow> m = numeral n \\<or> m \\<le> pred_numeral n\"", "lemma prod_primes_upto_less:\n  defines \"F \\<equiv> (\\<lambda>n. (\\<Prod>{p::nat. prime p \\<and> p \\<le> n}))\"\n  shows   \"n > 0 \\<Longrightarrow> F n < 4 ^ n\"", "lemma \\<theta>_upper_bound:\n  assumes x: \"x \\<ge> 1\"\n  shows   \"\\<theta> x < ln 4 * x\"", "lemma \\<theta>_bigo: \"\\<theta> \\<in> O(\\<lambda>x. x)\"", "lemma \\<psi>_minus_\\<theta>_bound:\n  assumes x: \"x \\<ge> 2\"\n  shows   \"\\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x\"", "lemma \\<psi>_minus_\\<theta>_bigo: \"(\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. ln x * sqrt x)\"", "lemma \\<psi>_bigo: \"\\<psi> \\<in> O(\\<lambda>x. x)\"", "lemma integral_one_over_log_squared_bound:\n  assumes x: \"x \\<ge> 4\"\n  shows   \"integral {2..x} (\\<lambda>t. 1 / ln t ^ 2) \\<le> sqrt x / ln 2 ^ 2 + 4 * x / ln x ^ 2\"", "lemma integral_one_over_log_squared_bigo:\n  \"(\\<lambda>x::real. integral {2..x} (\\<lambda>t. 1 / ln t ^ 2)) \\<in> O(\\<lambda>x. x / ln x ^ 2)\"", "lemma \\<pi>_\\<theta>_bound:\n  assumes \"x \\<ge> (4 :: real)\"\n  defines \"ub \\<equiv> 2 / ln 2 * sqrt x + 8 * ln 2 * x / ln x ^ 2\"\n  shows   \"\\<pi> x - \\<theta> x / ln x \\<in> {0..ub}\"", "lemma \\<pi>_\\<theta>_bigo: \"(\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x ^ 2)\"", "lemma \\<pi>_upper_bound:\n  assumes \"x \\<ge> (4 :: real)\"\n  shows   \"\\<pi> x < ln 4 * x / ln x  +  8 * ln 2 * x / ln x ^ 2  +  2 / ln 2 * sqrt x\"", "lemma \\<pi>_bigo: \"\\<pi> \\<in> O(\\<lambda>x. x / ln x)\"", "lemma PNT1_imp_PNT1':\n  assumes \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\"\n  shows   \"(\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\"", "lemma PNT1_imp_PNT2:\n  assumes \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\"\n  shows   \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\"", "lemma PNT2_imp_PNT3:\n  assumes \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"nth_prime \\<sim>[at_top] (\\<lambda>n. n * ln n)\"", "lemma PNT3_imp_PNT2:\n  assumes \"nth_prime \\<sim>[at_top] (\\<lambda>n. n * ln n)\"\n  shows   \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\"", "lemma PNT2_imp_PNT1:\n  assumes \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"(\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. ln x)\"\n    and   \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\"", "lemma PNT4_imp_PNT5:\n  assumes \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"\\<psi> \\<sim>[at_top] (\\<lambda>x. x)\"", "lemma PNT4_imp_PNT1:\n  assumes \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\"", "lemma PNT1_imp_PNT4:\n  assumes \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\"\n  shows   \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\"", "lemma PNT5_imp_PNT4:\n  assumes \"\\<psi> \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\"", "lemma stirling_weak:\n  assumes x: \"x \\<ge> 1\"\n  shows   \"sum_upto ln x \\<in> {x * ln x - x - ln x + 1 .. x * ln x}\"", "lemma stirling_weak_bigo: \"(\\<lambda>x::real. sum_upto ln x - x * ln x) \\<in> O(\\<lambda>x. x)\"", "lemma floor_floor_div_eq:\n  fixes x :: real and d :: nat\n  assumes \"x \\<ge> 0\"\n  shows   \"\\<lfloor>nat \\<lfloor>x\\<rfloor> / real d\\<rfloor> = \\<lfloor>x / real d\\<rfloor>\"", "lemma sum_upto_mangoldt_over_id_minus_phi_bounded:\n    \"(\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - \\<MM> x) \\<in> O(\\<lambda>_. 1)\"", "lemma sum_upto_mangoldt_over_id_asymptotics:\n  \"(\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x) \\<in> O(\\<lambda>_. 1)\"", "theorem mertens_bounded: \"(\\<lambda>x. \\<MM> x - ln x) \\<in> O(\\<lambda>_. 1)\"", "lemma primes_M_bigo: \"\\<MM> \\<in> O(\\<lambda>x. ln x)\""], "translations": [["", "lemma prime_sum_upto_altdef1:\n  \"prime_sum_upto f x = sum_upto (\\<lambda>p. ind prime p * f p) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_sum_upto f x = sum_upto (\\<lambda>p. ind prime p * f p) x", "unfolding sum_upto_def prime_sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {p. prime p \\<and> real p \\<le> x} =\n    (\\<Sum>p\\<in>{i. 0 < i \\<and> real i \\<le> x}. ind prime p * f p)", "by (intro sum.mono_neutral_cong_left finite_subset[OF _ finite_Nats_le_real[of x]])\n     (auto dest: prime_gt_1_nat simp: ind_def)"], ["", "lemma prime_sum_upto_altdef2:\n  \"prime_sum_upto f x = (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>. f p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_sum_upto f x =\n    (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>. f p)", "unfolding sum_upto_altdef prime_sum_upto_altdef1"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. ind prime p * f p) =\n    (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>. f p)", "by (intro sum.mono_neutral_cong_right) (auto simp: ind_def dest: prime_gt_1_nat)"], ["", "lemma prime_sum_upto_altdef3:\n  \"prime_sum_upto f x = (\\<Sum>p\\<leftarrow>primes_upto (nat \\<lfloor>x\\<rfloor>). f p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_sum_upto f x =\n    sum_list (map f (primes_upto (nat \\<lfloor>x\\<rfloor>)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prime_sum_upto f x =\n    sum_list (map f (primes_upto (nat \\<lfloor>x\\<rfloor>)))", "have \"(\\<Sum>p\\<leftarrow>primes_upto (nat \\<lfloor>x\\<rfloor>). f p) = (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>. f p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (map f (primes_upto (nat \\<lfloor>x\\<rfloor>))) =\n    (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>. f p)", "by (subst sum_list_distinct_conv_sum_set) (auto simp: set_primes_upto conj_commute)"], ["proof (state)\nthis:\n  sum_list (map f (primes_upto (nat \\<lfloor>x\\<rfloor>))) =\n  (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>. f p)\n\ngoal (1 subgoal):\n 1. prime_sum_upto f x =\n    sum_list (map f (primes_upto (nat \\<lfloor>x\\<rfloor>)))", "thus ?thesis"], ["proof (prove)\nusing this:\n  sum_list (map f (primes_upto (nat \\<lfloor>x\\<rfloor>))) =\n  (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>. f p)\n\ngoal (1 subgoal):\n 1. prime_sum_upto f x =\n    sum_list (map f (primes_upto (nat \\<lfloor>x\\<rfloor>)))", "by (simp add: prime_sum_upto_altdef2)"], ["proof (state)\nthis:\n  prime_sum_upto f x =\n  sum_list (map f (primes_upto (nat \\<lfloor>x\\<rfloor>)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prime_sum_upto_eqI:\n  assumes \"a \\<le> b\" \"\\<And>k. k \\<in> {nat \\<lfloor>a\\<rfloor><..nat\\<lfloor>b\\<rfloor>} \\<Longrightarrow> \\<not>prime k\"\n  shows   \"prime_sum_upto f a = prime_sum_upto f b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_sum_upto f a = prime_sum_upto f b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prime_sum_upto f a = prime_sum_upto f b", "have *: \"k \\<le> nat \\<lfloor>a\\<rfloor>\" if \"k \\<le> nat \\<lfloor>b\\<rfloor>\" \"prime k\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> nat \\<lfloor>a\\<rfloor>", "using that assms(2)[of k]"], ["proof (prove)\nusing this:\n  k \\<le> nat \\<lfloor>b\\<rfloor>\n  prime k\n  k \\<in> {nat \\<lfloor>a\\<rfloor><..nat\n\\<lfloor>b\\<rfloor>} \\<Longrightarrow>\n  \\<not> prime k\n\ngoal (1 subgoal):\n 1. k \\<le> nat \\<lfloor>a\\<rfloor>", "by (cases \"k \\<le> nat \\<lfloor>a\\<rfloor>\") auto"], ["proof (state)\nthis:\n  \\<lbrakk>?k \\<le> nat \\<lfloor>b\\<rfloor>; prime ?k\\<rbrakk>\n  \\<Longrightarrow> ?k \\<le> nat \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. prime_sum_upto f a = prime_sum_upto f b", "from assms(1)"], ["proof (chain)\npicking this:\n  a \\<le> b", "have \"nat \\<lfloor>a\\<rfloor> \\<le> nat \\<lfloor>b\\<rfloor>\""], ["proof (prove)\nusing this:\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. nat \\<lfloor>a\\<rfloor> \\<le> nat \\<lfloor>b\\<rfloor>", "by linarith"], ["proof (state)\nthis:\n  nat \\<lfloor>a\\<rfloor> \\<le> nat \\<lfloor>b\\<rfloor>\n\ngoal (1 subgoal):\n 1. prime_sum_upto f a = prime_sum_upto f b", "hence \"(\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>a\\<rfloor>. f p) = (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>b\\<rfloor>. f p)\""], ["proof (prove)\nusing this:\n  nat \\<lfloor>a\\<rfloor> \\<le> nat \\<lfloor>b\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>a\\<rfloor>. f p) =\n    (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>b\\<rfloor>. f p)", "using assms"], ["proof (prove)\nusing this:\n  nat \\<lfloor>a\\<rfloor> \\<le> nat \\<lfloor>b\\<rfloor>\n  a \\<le> b\n  ?k \\<in> {nat \\<lfloor>a\\<rfloor><..nat\n \\<lfloor>b\\<rfloor>} \\<Longrightarrow>\n  \\<not> prime ?k\n\ngoal (1 subgoal):\n 1. (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>a\\<rfloor>. f p) =\n    (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>b\\<rfloor>. f p)", "by (intro sum.mono_neutral_left) (auto dest: *)"], ["proof (state)\nthis:\n  (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>a\\<rfloor>. f p) =\n  (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>b\\<rfloor>. f p)\n\ngoal (1 subgoal):\n 1. prime_sum_upto f a = prime_sum_upto f b", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>a\\<rfloor>. f p) =\n  (\\<Sum>p | prime p \\<and> p \\<le> nat \\<lfloor>b\\<rfloor>. f p)\n\ngoal (1 subgoal):\n 1. prime_sum_upto f a = prime_sum_upto f b", "by (simp add: prime_sum_upto_altdef2)"], ["proof (state)\nthis:\n  prime_sum_upto f a = prime_sum_upto f b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prime_sum_upto_eqI':\n  assumes \"a' \\<le> nat \\<lfloor>a\\<rfloor>\" \"a \\<le> b\" \"nat \\<lfloor>b\\<rfloor> \\<le> b'\" \"\\<And>k. k \\<in> {a'<..b'} \\<Longrightarrow> \\<not>prime k\"\n  shows   \"prime_sum_upto f a = prime_sum_upto f b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_sum_upto f a = prime_sum_upto f b", "by (rule prime_sum_upto_eqI) (use assms in auto)"], ["", "lemmas eval_prime_sum_upto = prime_sum_upto_altdef3[unfolded primes_upto_sieve]"], ["", "lemma of_nat_prime_sum_upto: \"of_nat (prime_sum_upto f x) = prime_sum_upto (\\<lambda>p. of_nat (f p)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat (prime_sum_upto f x) =\n    prime_sum_upto (\\<lambda>p. of_nat (f p)) x", "by (simp add: prime_sum_upto_def)"], ["", "lemma prime_sum_upto_mono:\n  assumes \"\\<And>n. n > 0 \\<Longrightarrow> f n \\<ge> (0::real)\" \"x \\<le> y\"\n  shows   \"prime_sum_upto f x \\<le> prime_sum_upto f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_sum_upto f x \\<le> prime_sum_upto f y", "using assms"], ["proof (prove)\nusing this:\n  0 < ?n \\<Longrightarrow> 0 \\<le> f ?n\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. prime_sum_upto f x \\<le> prime_sum_upto f y", "unfolding prime_sum_upto_altdef1 sum_upto_altdef"], ["proof (prove)\nusing this:\n  0 < ?n \\<Longrightarrow> 0 \\<le> f ?n\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. ind prime p * f p)\n    \\<le> (\\<Sum>p\\<in>{0<..nat \\<lfloor>y\\<rfloor>}. ind prime p * f p)", "by (intro sum_mono2) (auto simp: le_nat_iff' le_floor_iff ind_def)"], ["", "lemma prime_sum_upto_nonneg:\n  assumes \"\\<And>n. n > 0 \\<Longrightarrow> f n \\<ge> (0 :: real)\"\n  shows   \"prime_sum_upto f x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> prime_sum_upto f x", "unfolding prime_sum_upto_altdef1 sum_upto_altdef"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (\\<Sum>p\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. ind prime p * f p)", "by (intro sum_nonneg) (auto simp: ind_def assms)"], ["", "lemma prime_sum_upto_eq_0:\n  assumes \"x < 2\"\n  shows   \"prime_sum_upto f x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_sum_upto f x = (0::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prime_sum_upto f x = (0::'a)", "from assms"], ["proof (chain)\npicking this:\n  x < 2", "have \"nat \\<lfloor>x\\<rfloor> = 0 \\<or> nat \\<lfloor>x\\<rfloor> = 1\""], ["proof (prove)\nusing this:\n  x < 2\n\ngoal (1 subgoal):\n 1. nat \\<lfloor>x\\<rfloor> = 0 \\<or> nat \\<lfloor>x\\<rfloor> = 1", "by linarith"], ["proof (state)\nthis:\n  nat \\<lfloor>x\\<rfloor> = 0 \\<or> nat \\<lfloor>x\\<rfloor> = 1\n\ngoal (1 subgoal):\n 1. prime_sum_upto f x = (0::'a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  nat \\<lfloor>x\\<rfloor> = 0 \\<or> nat \\<lfloor>x\\<rfloor> = 1\n\ngoal (1 subgoal):\n 1. prime_sum_upto f x = (0::'a)", "by (auto simp: eval_prime_sum_upto)"], ["proof (state)\nthis:\n  prime_sum_upto f x = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma measurable_prime_sum_upto [measurable]:\n  fixes f :: \"'a \\<Rightarrow> nat \\<Rightarrow> real\"\n  assumes [measurable]: \"\\<And>y. (\\<lambda>t. f t y) \\<in> M \\<rightarrow>\\<^sub>M borel\"\n  assumes [measurable]: \"x \\<in> M \\<rightarrow>\\<^sub>M borel\"\n  shows \"(\\<lambda>t. prime_sum_upto (f t) (x t)) \\<in> M \\<rightarrow>\\<^sub>M borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. prime_sum_upto (f t) (x t)) \\<in> borel_measurable M", "unfolding prime_sum_upto_altdef1"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. sum_upto (\\<lambda>p. ind prime p * f t p) (x t))\n    \\<in> borel_measurable M", "by measurable"], ["", "text \\<open>\n  The following theorem breaks down a sum over all prime powers no greater than\n  fixed bound into a nicer form.\n\\<close>"], ["", "lemma sum_upto_primepows:\n  fixes f :: \"nat \\<Rightarrow> 'a :: comm_monoid_add\"\n  assumes \"\\<And>n. \\<not>primepow n \\<Longrightarrow> f n = 0\" \"\\<And>p i. prime p \\<Longrightarrow> i > 0 \\<Longrightarrow> f (p ^ i) = g p i\"\n  shows   \"sum_upto f x = (\\<Sum>(p, i) | prime p \\<and> i > 0 \\<and> real (p ^ i) \\<le> x. g p i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto f x =\n    (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n       g p i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_upto f x =\n    (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n       g p i)", "let ?d = aprimedivisor"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_upto f x =\n    (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n       g p i)", "have g: \"g (?d n) (multiplicity (?d n) n) = f n\" if \"primepow n\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. g (aprimedivisor n) (multiplicity (aprimedivisor n) n) = f n", "using that"], ["proof (prove)\nusing this:\n  primepow n\n\ngoal (1 subgoal):\n 1. g (aprimedivisor n) (multiplicity (aprimedivisor n) n) = f n", "by (subst assms(2) [symmetric])\n         (auto simp: primepow_decompose aprimedivisor_prime_power primepow_gt_Suc_0\n               intro!: aprimedivisor_nat multiplicity_aprimedivisor_gt_0_nat)"], ["proof (state)\nthis:\n  primepow ?n1 \\<Longrightarrow>\n  g (aprimedivisor ?n1) (multiplicity (aprimedivisor ?n1) ?n1) = f ?n1\n\ngoal (1 subgoal):\n 1. sum_upto f x =\n    (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n       g p i)", "have \"sum_upto f x = (\\<Sum>n | primepow n \\<and> real n \\<le> x. f n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto f x = (\\<Sum>n | primepow n \\<and> real n \\<le> x. f n)", "unfolding sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {i. 0 < i \\<and> real i \\<le> x} =\n    (\\<Sum>n | primepow n \\<and> real n \\<le> x. f n)", "using assms"], ["proof (prove)\nusing this:\n  \\<not> primepow ?n \\<Longrightarrow> f ?n = (0::'a)\n  \\<lbrakk>prime ?p; 0 < ?i\\<rbrakk> \\<Longrightarrow> f (?p ^ ?i) = g ?p ?i\n\ngoal (1 subgoal):\n 1. sum f {i. 0 < i \\<and> real i \\<le> x} =\n    (\\<Sum>n | primepow n \\<and> real n \\<le> x. f n)", "by (intro sum.mono_neutral_cong_right) (auto simp: primepow_gt_0_nat)"], ["proof (state)\nthis:\n  sum_upto f x = (\\<Sum>n | primepow n \\<and> real n \\<le> x. f n)\n\ngoal (1 subgoal):\n 1. sum_upto f x =\n    (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n       g p i)", "also"], ["proof (state)\nthis:\n  sum_upto f x = (\\<Sum>n | primepow n \\<and> real n \\<le> x. f n)\n\ngoal (1 subgoal):\n 1. sum_upto f x =\n    (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n       g p i)", "have \"\\<dots> = (\\<Sum>(p, i) | prime p \\<and> i > 0 \\<and> real (p ^ i) \\<le> x. g p i)\" (is \"_ = sum _ ?S\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n | primepow n \\<and> real n \\<le> x. f n) =\n    (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n       g p i)", "by (rule sum.reindex_bij_witness[of _ \"\\<lambda>(p,i). p ^ i\" \"\\<lambda>n. (?d n, multiplicity (?d n) n)\"])\n       (auto simp: aprimedivisor_prime_power primepow_decompose primepow_gt_Suc_0 g\n             simp del: of_nat_power intro!: aprimedivisor_nat multiplicity_aprimedivisor_gt_0_nat)"], ["proof (state)\nthis:\n  (\\<Sum>n | primepow n \\<and> real n \\<le> x. f n) =\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n     g p i)\n\ngoal (1 subgoal):\n 1. sum_upto f x =\n    (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n       g p i)", "finally"], ["proof (chain)\npicking this:\n  sum_upto f x =\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n     g p i)", "show ?thesis"], ["proof (prove)\nusing this:\n  sum_upto f x =\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n     g p i)\n\ngoal (1 subgoal):\n 1. sum_upto f x =\n    (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n       g p i)", "."], ["proof (state)\nthis:\n  sum_upto f x =\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n     g p i)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition primes_pi    where \"primes_pi = prime_sum_upto (\\<lambda>p. 1 :: real)\""], ["", "definition primes_theta where \"primes_theta = prime_sum_upto (\\<lambda>p. ln (real p))\""], ["", "definition primes_psi   where \"primes_psi = sum_upto (mangoldt :: nat \\<Rightarrow> real)\""], ["", "definition primes_M     where \"primes_M = prime_sum_upto (\\<lambda>p. ln (real p) / real p)\""], ["", "text \\<open>\n  Next, we define some nice optional notation for these functions.\n\\<close>"], ["", "bundle prime_counting_notation\nbegin"], ["", "notation primes_pi    (\"\\<pi>\")"], ["", "notation primes_theta (\"\\<theta>\")"], ["", "notation primes_psi   (\"\\<psi>\")"], ["", "notation primes_M     (\"\\<MM>\")"], ["", "end"], ["", "bundle no_prime_counting_notation\nbegin"], ["", "no_notation primes_pi    (\"\\<pi>\")"], ["", "no_notation primes_theta (\"\\<theta>\")"], ["", "no_notation primes_psi   (\"\\<psi>\")"], ["", "no_notation primes_M     (\"\\<MM>\")"], ["", "end"], ["", "(*<*)"], ["", "unbundle prime_counting_notation"], ["", "(*>*)"], ["", "lemmas \\<pi>_def = primes_pi_def"], ["", "lemmas \\<theta>_def = primes_theta_def"], ["", "lemmas \\<psi>_def = primes_psi_def"], ["", "lemmas eval_\\<pi> = primes_pi_def[unfolded eval_prime_sum_upto]"], ["", "lemmas eval_\\<theta> = primes_theta_def[unfolded eval_prime_sum_upto]"], ["", "lemmas eval_\\<MM> = primes_M_def[unfolded eval_prime_sum_upto]"], ["", "subsection \\<open>Basic properties\\<close>"], ["", "text \\<open>\n  The proofs in this section are mostly taken from Apostol~\\cite{apostol1976analytic}.\n\\<close>"], ["", "lemma measurable_\\<pi> [measurable]: \"\\<pi> \\<in> borel \\<rightarrow>\\<^sub>M borel\"\n  and measurable_\\<theta> [measurable]: \"\\<theta> \\<in> borel \\<rightarrow>\\<^sub>M borel\"\n  and measurable_\\<psi> [measurable]: \"\\<psi> \\<in> borel \\<rightarrow>\\<^sub>M borel\"\n  and measurable_primes_M [measurable]: \"\\<MM> \\<in> borel \\<rightarrow>\\<^sub>M borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<pi> \\<in> borel_measurable borel &&&\n     \\<theta> \\<in> borel_measurable borel) &&&\n    \\<psi> \\<in> borel_measurable borel &&&\n    \\<MM> \\<in> borel_measurable borel", "unfolding primes_M_def \\<pi>_def \\<theta>_def \\<psi>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (prime_sum_upto (\\<lambda>p. 1) \\<in> borel_measurable borel &&&\n     prime_sum_upto (\\<lambda>p. ln (real p))\n     \\<in> borel_measurable borel) &&&\n    sum_upto mangoldt \\<in> borel_measurable borel &&&\n    prime_sum_upto (\\<lambda>p. ln (real p) / real p)\n    \\<in> borel_measurable borel", "by measurable"], ["", "lemma \\<pi>_eq_0 [simp]: \"x < 2 \\<Longrightarrow> \\<pi> x = 0\"\n  and \\<theta>_eq_0 [simp]: \"x < 2 \\<Longrightarrow> \\<theta> x = 0\"\n  and primes_M_eq_0 [simp]: \"x < 2 \\<Longrightarrow> \\<MM> x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x < 2 \\<Longrightarrow> \\<pi> x = 0) &&&\n    (x < 2 \\<Longrightarrow> \\<theta> x = 0) &&&\n    (x < 2 \\<Longrightarrow> \\<MM> x = 0)", "unfolding primes_pi_def primes_theta_def primes_M_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x < 2 \\<Longrightarrow> prime_sum_upto (\\<lambda>p. 1) x = 0) &&&\n    (x < 2 \\<Longrightarrow>\n     prime_sum_upto (\\<lambda>p. ln (real p)) x = 0) &&&\n    (x < 2 \\<Longrightarrow>\n     prime_sum_upto (\\<lambda>p. ln (real p) / real p) x = 0)", "by (rule prime_sum_upto_eq_0; simp)+"], ["", "lemma \\<pi>_nat_cancel [simp]: \"\\<pi> (nat x) = \\<pi> x\"\n  and \\<theta>_nat_cancel [simp]: \"\\<theta> (nat x) = \\<theta> x\"\n  and primes_M_nat_cancel [simp]: \"\\<MM> (nat x) = \\<MM> x\"\n  and \\<psi>_nat_cancel [simp]: \"\\<psi> (nat x) = \\<psi> x\"\n  and \\<pi>_floor_cancel [simp]: \"\\<pi> (of_int \\<lfloor>y\\<rfloor>) = \\<pi> y\"\n  and \\<theta>_floor_cancel [simp]: \"\\<theta> (of_int \\<lfloor>y\\<rfloor>) = \\<theta> y\"\n  and primes_M_floor_cancel [simp]: \"\\<MM> (of_int \\<lfloor>y\\<rfloor>) = \\<MM> y\"\n  and \\<psi>_floor_cancel [simp]: \"\\<psi> (of_int \\<lfloor>y\\<rfloor>) = \\<psi> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<pi> (real (nat x)) = \\<pi> (real_of_int x) &&&\n      \\<theta> (real (nat x)) = \\<theta> (real_of_int x)) &&&\n     \\<MM> (real (nat x)) = \\<MM> (real_of_int x) &&&\n     \\<psi> (real (nat x)) = \\<psi> (real_of_int x)) &&&\n    (\\<pi> (real_of_int \\<lfloor>y\\<rfloor>) = \\<pi> y &&&\n     \\<theta> (real_of_int \\<lfloor>y\\<rfloor>) = \\<theta> y) &&&\n    \\<MM> (real_of_int \\<lfloor>y\\<rfloor>) = \\<MM> y &&&\n    \\<psi> (real_of_int \\<lfloor>y\\<rfloor>) = \\<psi> y", "by (simp_all add: \\<pi>_def \\<theta>_def \\<psi>_def primes_M_def prime_sum_upto_altdef2 sum_upto_altdef)"], ["", "lemma \\<pi>_nonneg [intro]: \"\\<pi> x \\<ge> 0\"\n  and \\<theta>_nonneg [intro]: \"\\<theta> x \\<ge> 0\"\n  and primes_M_nonneg [intro]: \"\\<MM> x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> \\<pi> x &&& 0 \\<le> \\<theta> x &&& 0 \\<le> \\<MM> x", "unfolding primes_pi_def primes_theta_def primes_M_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> prime_sum_upto (\\<lambda>p. 1) x &&&\n    0 \\<le> prime_sum_upto (\\<lambda>p. ln (real p)) x &&&\n    0 \\<le> prime_sum_upto (\\<lambda>p. ln (real p) / real p) x", "by (rule prime_sum_upto_nonneg; simp)+"], ["", "lemma \\<pi>_mono [intro]: \"x \\<le> y \\<Longrightarrow> \\<pi> x \\<le> \\<pi> y\"\n  and \\<theta>_mono [intro]: \"x \\<le> y \\<Longrightarrow> \\<theta> x \\<le> \\<theta> y\"\n  and primes_M_mono [intro]: \"x \\<le> y \\<Longrightarrow> \\<MM> x \\<le> \\<MM> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> y \\<Longrightarrow> \\<pi> x \\<le> \\<pi> y) &&&\n    (x \\<le> y \\<Longrightarrow> \\<theta> x \\<le> \\<theta> y) &&&\n    (x \\<le> y \\<Longrightarrow> \\<MM> x \\<le> \\<MM> y)", "unfolding primes_pi_def primes_theta_def primes_M_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> y \\<Longrightarrow>\n     prime_sum_upto (\\<lambda>p. 1) x\n     \\<le> prime_sum_upto (\\<lambda>p. 1) y) &&&\n    (x \\<le> y \\<Longrightarrow>\n     prime_sum_upto (\\<lambda>p. ln (real p)) x\n     \\<le> prime_sum_upto (\\<lambda>p. ln (real p)) y) &&&\n    (x \\<le> y \\<Longrightarrow>\n     prime_sum_upto (\\<lambda>p. ln (real p) / real p) x\n     \\<le> prime_sum_upto (\\<lambda>p. ln (real p) / real p) y)", "by (rule prime_sum_upto_mono; simp)+"], ["", "lemma \\<pi>_pos_iff: \"\\<pi> x > 0 \\<longleftrightarrow> x \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < \\<pi> x) = (2 \\<le> x)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < \\<pi> x \\<Longrightarrow> 2 \\<le> x\n 2. 2 \\<le> x \\<Longrightarrow> 0 < \\<pi> x", "assume x: \"x \\<ge> 2\""], ["proof (state)\nthis:\n  2 \\<le> x\n\ngoal (2 subgoals):\n 1. 0 < \\<pi> x \\<Longrightarrow> 2 \\<le> x\n 2. 2 \\<le> x \\<Longrightarrow> 0 < \\<pi> x", "show \"\\<pi> x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<pi> x", "by (rule less_le_trans[OF _ \\<pi>_mono[OF x]]) (auto simp: eval_\\<pi>)"], ["proof (state)\nthis:\n  0 < \\<pi> x\n\ngoal (1 subgoal):\n 1. 0 < \\<pi> x \\<Longrightarrow> 2 \\<le> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < \\<pi> x \\<Longrightarrow> 2 \\<le> x", "assume \"\\<pi> x > 0\""], ["proof (state)\nthis:\n  0 < \\<pi> x\n\ngoal (1 subgoal):\n 1. 0 < \\<pi> x \\<Longrightarrow> 2 \\<le> x", "hence \"\\<not>(x < 2)\""], ["proof (prove)\nusing this:\n  0 < \\<pi> x\n\ngoal (1 subgoal):\n 1. \\<not> x < 2", "by auto"], ["proof (state)\nthis:\n  \\<not> x < 2\n\ngoal (1 subgoal):\n 1. 0 < \\<pi> x \\<Longrightarrow> 2 \\<le> x", "thus \"x \\<ge> 2\""], ["proof (prove)\nusing this:\n  \\<not> x < 2\n\ngoal (1 subgoal):\n 1. 2 \\<le> x", "by simp"], ["proof (state)\nthis:\n  2 \\<le> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<pi>_pos: \"x \\<ge> 2 \\<Longrightarrow> \\<pi> x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> x \\<Longrightarrow> 0 < \\<pi> x", "by (simp add: \\<pi>_pos_iff)"], ["", "lemma \\<psi>_eq_0 [simp]:\n  assumes \"x < 2\"\n  shows   \"\\<psi> x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> x = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<psi> x = 0", "from assms"], ["proof (chain)\npicking this:\n  x < 2", "have \"nat \\<lfloor>x\\<rfloor> \\<le> 1\""], ["proof (prove)\nusing this:\n  x < 2\n\ngoal (1 subgoal):\n 1. nat \\<lfloor>x\\<rfloor> \\<le> 1", "by linarith"], ["proof (state)\nthis:\n  nat \\<lfloor>x\\<rfloor> \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<psi> x = 0", "hence \"mangoldt n = (0 :: real)\" if \"n \\<in> {0<..nat \\<lfloor>x\\<rfloor>}\" for n"], ["proof (prove)\nusing this:\n  nat \\<lfloor>x\\<rfloor> \\<le> 1\n\ngoal (1 subgoal):\n 1. mangoldt n = 0", "using that"], ["proof (prove)\nusing this:\n  nat \\<lfloor>x\\<rfloor> \\<le> 1\n  n \\<in> {0<..nat \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. mangoldt n = 0", "by (auto simp: mangoldt_def dest!: primepow_gt_Suc_0)"], ["proof (state)\nthis:\n  ?n \\<in> {0<..nat \\<lfloor>x\\<rfloor>} \\<Longrightarrow> mangoldt ?n = 0\n\ngoal (1 subgoal):\n 1. \\<psi> x = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?n \\<in> {0<..nat \\<lfloor>x\\<rfloor>} \\<Longrightarrow> mangoldt ?n = 0\n\ngoal (1 subgoal):\n 1. \\<psi> x = 0", "unfolding \\<psi>_def sum_upto_altdef"], ["proof (prove)\nusing this:\n  ?n \\<in> {0<..nat \\<lfloor>x\\<rfloor>} \\<Longrightarrow> mangoldt ?n = 0\n\ngoal (1 subgoal):\n 1. sum mangoldt {0<..nat \\<lfloor>x\\<rfloor>} = 0", "by (intro sum.neutral) auto"], ["proof (state)\nthis:\n  \\<psi> x = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<psi>_nonneg [intro]: \"\\<psi> x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> \\<psi> x", "unfolding \\<psi>_def sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> sum mangoldt {i. 0 < i \\<and> real i \\<le> x}", "by (intro sum_nonneg mangoldt_nonneg)"], ["", "lemma \\<psi>_mono: \"x \\<le> y \\<Longrightarrow> \\<psi> x \\<le> \\<psi> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> \\<psi> x \\<le> \\<psi> y", "unfolding \\<psi>_def sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow>\n    sum mangoldt {i. 0 < i \\<and> real i \\<le> x}\n    \\<le> sum mangoldt {i. 0 < i \\<and> real i \\<le> y}", "by (intro sum_mono2 mangoldt_nonneg) auto"], ["", "subsection \\<open>The $n$-th prime number\\<close>"], ["", "text \\<open>\n  Next we define the $n$-th prime number, where counting starts from 0. In traditional\n  mathematics, it seems that counting usually starts from 1, but it is more natural to\n  start from 0 in HOL and the asymptotics of the function are the same.\n\\<close>"], ["", "definition nth_prime :: \"nat \\<Rightarrow> nat\" where\n  \"nth_prime n = (THE p. prime p \\<and> card {q. prime q \\<and> q < p} = n)\""], ["", "lemma finite_primes_less [intro]: \"finite {q::nat. prime q \\<and> q < p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {q. prime q \\<and> q < p}", "by (rule finite_subset[of _ \"{..<p}\"]) auto"], ["", "lemma nth_prime_unique_aux:\n  fixes p p' :: nat\n  assumes \"prime p\"  \"card {q. prime q \\<and> q < p} = n\"\n  assumes \"prime p'\" \"card {q. prime q \\<and> q < p'} = n\"\n  shows   \"p = p'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = p'", "using assms"], ["proof (prove)\nusing this:\n  prime p\n  card {q. prime q \\<and> q < p} = n\n  prime p'\n  card {q. prime q \\<and> q < p'} = n\n\ngoal (1 subgoal):\n 1. p = p'", "proof (induction p p' rule: linorder_wlog)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; card {q. prime q \\<and> q < a} = n;\n        prime b; card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; card {q. prime q \\<and> q < b} = n;\n                 prime a; card {q. prime q \\<and> q < a} = n\\<rbrakk>\n                \\<Longrightarrow> b = a;\n        prime a; card {q. prime q \\<and> q < a} = n; prime b;\n        card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b", "case (le p p')"], ["proof (state)\nthis:\n  p \\<le> p'\n  prime p\n  card {q. prime q \\<and> q < p} = n\n  prime p'\n  card {q. prime q \\<and> q < p'} = n\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; card {q. prime q \\<and> q < a} = n;\n        prime b; card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; card {q. prime q \\<and> q < b} = n;\n                 prime a; card {q. prime q \\<and> q < a} = n\\<rbrakk>\n                \\<Longrightarrow> b = a;\n        prime a; card {q. prime q \\<and> q < a} = n; prime b;\n        card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b", "have \"finite {q. prime q \\<and> q < p'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {q. prime q \\<and> q < p'}", "by (rule finite_primes_less)"], ["proof (state)\nthis:\n  finite {q. prime q \\<and> q < p'}\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; card {q. prime q \\<and> q < a} = n;\n        prime b; card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; card {q. prime q \\<and> q < b} = n;\n                 prime a; card {q. prime q \\<and> q < a} = n\\<rbrakk>\n                \\<Longrightarrow> b = a;\n        prime a; card {q. prime q \\<and> q < a} = n; prime b;\n        card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b", "moreover"], ["proof (state)\nthis:\n  finite {q. prime q \\<and> q < p'}\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; card {q. prime q \\<and> q < a} = n;\n        prime b; card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; card {q. prime q \\<and> q < b} = n;\n                 prime a; card {q. prime q \\<and> q < a} = n\\<rbrakk>\n                \\<Longrightarrow> b = a;\n        prime a; card {q. prime q \\<and> q < a} = n; prime b;\n        card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b", "from le"], ["proof (chain)\npicking this:\n  p \\<le> p'\n  prime p\n  card {q. prime q \\<and> q < p} = n\n  prime p'\n  card {q. prime q \\<and> q < p'} = n", "have \"{q. prime q \\<and> q < p} \\<subseteq> {q. prime q \\<and> q < p'}\""], ["proof (prove)\nusing this:\n  p \\<le> p'\n  prime p\n  card {q. prime q \\<and> q < p} = n\n  prime p'\n  card {q. prime q \\<and> q < p'} = n\n\ngoal (1 subgoal):\n 1. {q. prime q \\<and> q < p} \\<subseteq> {q. prime q \\<and> q < p'}", "by auto"], ["proof (state)\nthis:\n  {q. prime q \\<and> q < p} \\<subseteq> {q. prime q \\<and> q < p'}\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; card {q. prime q \\<and> q < a} = n;\n        prime b; card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; card {q. prime q \\<and> q < b} = n;\n                 prime a; card {q. prime q \\<and> q < a} = n\\<rbrakk>\n                \\<Longrightarrow> b = a;\n        prime a; card {q. prime q \\<and> q < a} = n; prime b;\n        card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b", "moreover"], ["proof (state)\nthis:\n  {q. prime q \\<and> q < p} \\<subseteq> {q. prime q \\<and> q < p'}\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; card {q. prime q \\<and> q < a} = n;\n        prime b; card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; card {q. prime q \\<and> q < b} = n;\n                 prime a; card {q. prime q \\<and> q < a} = n\\<rbrakk>\n                \\<Longrightarrow> b = a;\n        prime a; card {q. prime q \\<and> q < a} = n; prime b;\n        card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b", "from le"], ["proof (chain)\npicking this:\n  p \\<le> p'\n  prime p\n  card {q. prime q \\<and> q < p} = n\n  prime p'\n  card {q. prime q \\<and> q < p'} = n", "have \"card {q. prime q \\<and> q < p} = card {q. prime q \\<and> q < p'}\""], ["proof (prove)\nusing this:\n  p \\<le> p'\n  prime p\n  card {q. prime q \\<and> q < p} = n\n  prime p'\n  card {q. prime q \\<and> q < p'} = n\n\ngoal (1 subgoal):\n 1. card {q. prime q \\<and> q < p} = card {q. prime q \\<and> q < p'}", "by simp"], ["proof (state)\nthis:\n  card {q. prime q \\<and> q < p} = card {q. prime q \\<and> q < p'}\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; card {q. prime q \\<and> q < a} = n;\n        prime b; card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; card {q. prime q \\<and> q < b} = n;\n                 prime a; card {q. prime q \\<and> q < a} = n\\<rbrakk>\n                \\<Longrightarrow> b = a;\n        prime a; card {q. prime q \\<and> q < a} = n; prime b;\n        card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b", "ultimately"], ["proof (chain)\npicking this:\n  finite {q. prime q \\<and> q < p'}\n  {q. prime q \\<and> q < p} \\<subseteq> {q. prime q \\<and> q < p'}\n  card {q. prime q \\<and> q < p} = card {q. prime q \\<and> q < p'}", "have \"{q. prime q \\<and> q < p} = {q. prime q \\<and> q < p'}\""], ["proof (prove)\nusing this:\n  finite {q. prime q \\<and> q < p'}\n  {q. prime q \\<and> q < p} \\<subseteq> {q. prime q \\<and> q < p'}\n  card {q. prime q \\<and> q < p} = card {q. prime q \\<and> q < p'}\n\ngoal (1 subgoal):\n 1. {q. prime q \\<and> q < p} = {q. prime q \\<and> q < p'}", "by (rule card_subset_eq)"], ["proof (state)\nthis:\n  {q. prime q \\<and> q < p} = {q. prime q \\<and> q < p'}\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; card {q. prime q \\<and> q < a} = n;\n        prime b; card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; card {q. prime q \\<and> q < b} = n;\n                 prime a; card {q. prime q \\<and> q < a} = n\\<rbrakk>\n                \\<Longrightarrow> b = a;\n        prime a; card {q. prime q \\<and> q < a} = n; prime b;\n        card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b", "with \\<open>prime p\\<close>"], ["proof (chain)\npicking this:\n  prime p\n  {q. prime q \\<and> q < p} = {q. prime q \\<and> q < p'}", "have \"\\<not>(p < p')\""], ["proof (prove)\nusing this:\n  prime p\n  {q. prime q \\<and> q < p} = {q. prime q \\<and> q < p'}\n\ngoal (1 subgoal):\n 1. \\<not> p < p'", "by blast"], ["proof (state)\nthis:\n  \\<not> p < p'\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; card {q. prime q \\<and> q < a} = n;\n        prime b; card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; card {q. prime q \\<and> q < b} = n;\n                 prime a; card {q. prime q \\<and> q < a} = n\\<rbrakk>\n                \\<Longrightarrow> b = a;\n        prime a; card {q. prime q \\<and> q < a} = n; prime b;\n        card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b", "with \\<open>p \\<le> p'\\<close>"], ["proof (chain)\npicking this:\n  p \\<le> p'\n  \\<not> p < p'", "show \"p = p'\""], ["proof (prove)\nusing this:\n  p \\<le> p'\n  \\<not> p < p'\n\ngoal (1 subgoal):\n 1. p = p'", "by auto"], ["proof (state)\nthis:\n  p = p'\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; card {q. prime q \\<and> q < b} = n;\n                 prime a; card {q. prime q \\<and> q < a} = n\\<rbrakk>\n                \\<Longrightarrow> b = a;\n        prime a; card {q. prime q \\<and> q < a} = n; prime b;\n        card {q. prime q \\<and> q < b} = n\\<rbrakk>\n       \\<Longrightarrow> a = b", "qed auto"], ["", "lemma \\<pi>_smallest_prime_beyond:\n  \"\\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "proof (cases m)"], ["proof (state)\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1\n 2. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "case 0"], ["proof (state)\nthis:\n  m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1\n 2. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "have \"smallest_prime_beyond 0 = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smallest_prime_beyond 0 = 2", "by (rule smallest_prime_beyond_eq) (auto dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  smallest_prime_beyond 0 = 2\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1\n 2. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "with 0"], ["proof (chain)\npicking this:\n  m = 0\n  smallest_prime_beyond 0 = 2", "show ?thesis"], ["proof (prove)\nusing this:\n  m = 0\n  smallest_prime_beyond 0 = 2\n\ngoal (1 subgoal):\n 1. \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "by (simp add: eval_\\<pi>)"], ["proof (state)\nthis:\n  \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "case (Suc n)"], ["proof (state)\nthis:\n  m = Suc n\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "define n' where \"n' = smallest_prime_beyond (Suc n)\""], ["proof (state)\nthis:\n  n' = smallest_prime_beyond (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "have \"n < n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < n'", "using smallest_prime_beyond_le[of \"Suc n\"]"], ["proof (prove)\nusing this:\n  Suc n \\<le> smallest_prime_beyond (Suc n)\n\ngoal (1 subgoal):\n 1. n < n'", "unfolding n'_def"], ["proof (prove)\nusing this:\n  Suc n \\<le> smallest_prime_beyond (Suc n)\n\ngoal (1 subgoal):\n 1. n < smallest_prime_beyond (Suc n)", "by linarith"], ["proof (state)\nthis:\n  n < n'\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "have \"prime n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime n'", "by (simp add: n'_def)"], ["proof (state)\nthis:\n  prime n'\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "have \"n' \\<le> p\" if \"prime p\" \"p > n\" for p"], ["proof (prove)\ngoal (1 subgoal):\n 1. n' \\<le> p", "using that smallest_prime_beyond_smallest[of p \"Suc n\"]"], ["proof (prove)\nusing this:\n  prime p\n  n < p\n  \\<lbrakk>prime p; Suc n \\<le> p\\<rbrakk>\n  \\<Longrightarrow> smallest_prime_beyond (Suc n) \\<le> p\n\ngoal (1 subgoal):\n 1. n' \\<le> p", "by (auto simp: n'_def)"], ["proof (state)\nthis:\n  \\<lbrakk>prime ?p; n < ?p\\<rbrakk> \\<Longrightarrow> n' \\<le> ?p\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "note n' = \\<open>n < n'\\<close> \\<open>prime n'\\<close> this"], ["proof (state)\nthis:\n  n < n'\n  prime n'\n  \\<lbrakk>prime ?p; n < ?p\\<rbrakk> \\<Longrightarrow> n' \\<le> ?p\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "have \"\\<pi> (real n') = real (card {p. prime p \\<and> p \\<le> n'})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> (real n') = real (card {p. prime p \\<and> p \\<le> n'})", "by (simp add: \\<pi>_def prime_sum_upto_def)"], ["proof (state)\nthis:\n  \\<pi> (real n') = real (card {p. prime p \\<and> p \\<le> n'})\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "also"], ["proof (state)\nthis:\n  \\<pi> (real n') = real (card {p. prime p \\<and> p \\<le> n'})\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "have \"Suc n \\<le> n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc n \\<le> n'", "unfolding n'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc n \\<le> smallest_prime_beyond (Suc n)", "by (rule smallest_prime_beyond_le)"], ["proof (state)\nthis:\n  Suc n \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "hence \"{p. prime p \\<and> p \\<le> n'} = {p. prime p \\<and> p \\<le> n} \\<union> {p. prime p \\<and> p \\<in> {n<..n'}}\""], ["proof (prove)\nusing this:\n  Suc n \\<le> n'\n\ngoal (1 subgoal):\n 1. {p. prime p \\<and> p \\<le> n'} =\n    {p. prime p \\<and> p \\<le> n} \\<union>\n    {p. prime p \\<and> p \\<in> {n<..n'}}", "by auto"], ["proof (state)\nthis:\n  {p. prime p \\<and> p \\<le> n'} =\n  {p. prime p \\<and> p \\<le> n} \\<union>\n  {p. prime p \\<and> p \\<in> {n<..n'}}\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "also"], ["proof (state)\nthis:\n  {p. prime p \\<and> p \\<le> n'} =\n  {p. prime p \\<and> p \\<le> n} \\<union>\n  {p. prime p \\<and> p \\<in> {n<..n'}}\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "have \"real (card \\<dots>) = \\<pi> (real n) + real (card {p. prime p \\<and> p \\<in> {n<..n'}})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real\n     (card\n       ({p. prime p \\<and> p \\<le> n} \\<union>\n        {p. prime p \\<and> p \\<in> {n<..n'}})) =\n    \\<pi> (real n) + real (card {p. prime p \\<and> p \\<in> {n<..n'}})", "by (subst card_Un_disjoint) (auto simp: \\<pi>_def prime_sum_upto_def)"], ["proof (state)\nthis:\n  real\n   (card\n     ({p. prime p \\<and> p \\<le> n} \\<union>\n      {p. prime p \\<and> p \\<in> {n<..n'}})) =\n  \\<pi> (real n) + real (card {p. prime p \\<and> p \\<in> {n<..n'}})\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "also"], ["proof (state)\nthis:\n  real\n   (card\n     ({p. prime p \\<and> p \\<le> n} \\<union>\n      {p. prime p \\<and> p \\<in> {n<..n'}})) =\n  \\<pi> (real n) + real (card {p. prime p \\<and> p \\<in> {n<..n'}})\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "have \"{p. prime p \\<and> p \\<in> {n<..n'}} = {n'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. prime p \\<and> p \\<in> {n<..n'}} = {n'}", "using n'"], ["proof (prove)\nusing this:\n  n < n'\n  prime n'\n  \\<lbrakk>prime ?p; n < ?p\\<rbrakk> \\<Longrightarrow> n' \\<le> ?p\n\ngoal (1 subgoal):\n 1. {p. prime p \\<and> p \\<in> {n<..n'}} = {n'}", "by (auto intro: antisym)"], ["proof (state)\nthis:\n  {p. prime p \\<and> p \\<in> {n<..n'}} = {n'}\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       m = Suc nat \\<Longrightarrow>\n       \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "finally"], ["proof (chain)\npicking this:\n  \\<pi> (real n') = \\<pi> (real n) + real (card {n'})", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi> (real n') = \\<pi> (real n) + real (card {n'})\n\ngoal (1 subgoal):\n 1. \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "using Suc"], ["proof (prove)\nusing this:\n  \\<pi> (real n') = \\<pi> (real n) + real (card {n'})\n  m = Suc n\n\ngoal (1 subgoal):\n 1. \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1", "by (simp add: n'_def)"], ["proof (state)\nthis:\n  \\<pi> (real (smallest_prime_beyond m)) = \\<pi> (real (m - 1)) + 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<pi>_inverse_exists: \"\\<exists>n. \\<pi> (real n) = real m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. \\<pi> (real n) = real m", "proof (induction m)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>n. \\<pi> (real n) = real 0\n 2. \\<And>m.\n       \\<exists>n. \\<pi> (real n) = real m \\<Longrightarrow>\n       \\<exists>n. \\<pi> (real n) = real (Suc m)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<exists>n. \\<pi> (real n) = real 0\n 2. \\<And>m.\n       \\<exists>n. \\<pi> (real n) = real m \\<Longrightarrow>\n       \\<exists>n. \\<pi> (real n) = real (Suc m)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. \\<pi> (real n) = real 0", "by (intro exI[of _ 0]) auto"], ["proof (state)\nthis:\n  \\<exists>n. \\<pi> (real n) = real 0\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>n. \\<pi> (real n) = real m \\<Longrightarrow>\n       \\<exists>n. \\<pi> (real n) = real (Suc m)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>n. \\<pi> (real n) = real m \\<Longrightarrow>\n       \\<exists>n. \\<pi> (real n) = real (Suc m)", "case (Suc m)"], ["proof (state)\nthis:\n  \\<exists>n. \\<pi> (real n) = real m\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>n. \\<pi> (real n) = real m \\<Longrightarrow>\n       \\<exists>n. \\<pi> (real n) = real (Suc m)", "from Suc.IH"], ["proof (chain)\npicking this:\n  \\<exists>n. \\<pi> (real n) = real m", "obtain n where n: \"\\<pi> (real n) = real m\""], ["proof (prove)\nusing this:\n  \\<exists>n. \\<pi> (real n) = real m\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<pi> (real n) = real m \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<pi> (real n) = real m\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>n. \\<pi> (real n) = real m \\<Longrightarrow>\n       \\<exists>n. \\<pi> (real n) = real (Suc m)", "hence \"\\<pi> (real (smallest_prime_beyond (Suc n))) = real (Suc m)\""], ["proof (prove)\nusing this:\n  \\<pi> (real n) = real m\n\ngoal (1 subgoal):\n 1. \\<pi> (real (smallest_prime_beyond (Suc n))) = real (Suc m)", "by (subst \\<pi>_smallest_prime_beyond) auto"], ["proof (state)\nthis:\n  \\<pi> (real (smallest_prime_beyond (Suc n))) = real (Suc m)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>n. \\<pi> (real n) = real m \\<Longrightarrow>\n       \\<exists>n. \\<pi> (real n) = real (Suc m)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<pi> (real (smallest_prime_beyond (Suc n))) = real (Suc m)\n\ngoal (1 subgoal):\n 1. \\<exists>n. \\<pi> (real n) = real (Suc m)", "by blast"], ["proof (state)\nthis:\n  \\<exists>n. \\<pi> (real n) = real (Suc m)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_prime_exists: \"\\<exists>p::nat. prime p \\<and> card {q. prime q \\<and> q < p} = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> card {q. prime q \\<and> q < p} = n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> card {q. prime q \\<and> q < p} = n", "from \\<pi>_inverse_exists[of n]"], ["proof (chain)\npicking this:\n  \\<exists>na. \\<pi> (real na) = real n", "obtain m where \"\\<pi> (real m) = real n\""], ["proof (prove)\nusing this:\n  \\<exists>na. \\<pi> (real na) = real n\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<pi> (real m) = real n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<pi> (real m) = real n\n\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> card {q. prime q \\<and> q < p} = n", "hence card: \"card {q. prime q \\<and> q \\<le> m} = n\""], ["proof (prove)\nusing this:\n  \\<pi> (real m) = real n\n\ngoal (1 subgoal):\n 1. card {q. prime q \\<and> q \\<le> m} = n", "by (auto simp: \\<pi>_def prime_sum_upto_def)"], ["proof (state)\nthis:\n  card {q. prime q \\<and> q \\<le> m} = n\n\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> card {q. prime q \\<and> q < p} = n", "define p where \"p = smallest_prime_beyond (Suc m)\""], ["proof (state)\nthis:\n  p = smallest_prime_beyond (Suc m)\n\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> card {q. prime q \\<and> q < p} = n", "have \"m < p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m < p", "using smallest_prime_beyond_le[of \"Suc m\"]"], ["proof (prove)\nusing this:\n  Suc m \\<le> smallest_prime_beyond (Suc m)\n\ngoal (1 subgoal):\n 1. m < p", "unfolding p_def"], ["proof (prove)\nusing this:\n  Suc m \\<le> smallest_prime_beyond (Suc m)\n\ngoal (1 subgoal):\n 1. m < smallest_prime_beyond (Suc m)", "by linarith"], ["proof (state)\nthis:\n  m < p\n\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> card {q. prime q \\<and> q < p} = n", "have \"prime p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime p", "by (simp add: p_def)"], ["proof (state)\nthis:\n  prime p\n\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> card {q. prime q \\<and> q < p} = n", "have \"p \\<le> q\" if \"prime q\" \"q > m\" for q"], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<le> q", "using smallest_prime_beyond_smallest[of q \"Suc m\"] that"], ["proof (prove)\nusing this:\n  \\<lbrakk>prime q; Suc m \\<le> q\\<rbrakk>\n  \\<Longrightarrow> smallest_prime_beyond (Suc m) \\<le> q\n  prime q\n  m < q\n\ngoal (1 subgoal):\n 1. p \\<le> q", "by (simp add: p_def)"], ["proof (state)\nthis:\n  \\<lbrakk>prime ?q; m < ?q\\<rbrakk> \\<Longrightarrow> p \\<le> ?q\n\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> card {q. prime q \\<and> q < p} = n", "note p = \\<open>m < p\\<close> \\<open>prime p\\<close> this"], ["proof (state)\nthis:\n  m < p\n  prime p\n  \\<lbrakk>prime ?q; m < ?q\\<rbrakk> \\<Longrightarrow> p \\<le> ?q\n\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> card {q. prime q \\<and> q < p} = n", "have \"{q. prime q \\<and> q < p} = {q. prime q \\<and> q \\<le> m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {q. prime q \\<and> q < p} = {q. prime q \\<and> q \\<le> m}", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. \\<lbrakk>prime x; x < p\\<rbrakk> \\<Longrightarrow> x \\<le> m\n 2. \\<And>x. \\<lbrakk>prime x; x \\<le> m\\<rbrakk> \\<Longrightarrow> x < p", "fix q"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. \\<lbrakk>prime x; x < p\\<rbrakk> \\<Longrightarrow> x \\<le> m\n 2. \\<And>x. \\<lbrakk>prime x; x \\<le> m\\<rbrakk> \\<Longrightarrow> x < p", "assume \"prime q\" \"q < p\""], ["proof (state)\nthis:\n  prime q\n  q < p\n\ngoal (2 subgoals):\n 1. \\<And>x. \\<lbrakk>prime x; x < p\\<rbrakk> \\<Longrightarrow> x \\<le> m\n 2. \\<And>x. \\<lbrakk>prime x; x \\<le> m\\<rbrakk> \\<Longrightarrow> x < p", "hence \"\\<not>(q > m)\""], ["proof (prove)\nusing this:\n  prime q\n  q < p\n\ngoal (1 subgoal):\n 1. \\<not> m < q", "using p(1,2) p(3)[of q]"], ["proof (prove)\nusing this:\n  prime q\n  q < p\n  m < p\n  prime p\n  \\<lbrakk>prime q; m < q\\<rbrakk> \\<Longrightarrow> p \\<le> q\n\ngoal (1 subgoal):\n 1. \\<not> m < q", "by auto"], ["proof (state)\nthis:\n  \\<not> m < q\n\ngoal (2 subgoals):\n 1. \\<And>x. \\<lbrakk>prime x; x < p\\<rbrakk> \\<Longrightarrow> x \\<le> m\n 2. \\<And>x. \\<lbrakk>prime x; x \\<le> m\\<rbrakk> \\<Longrightarrow> x < p", "thus \"q \\<le> m\""], ["proof (prove)\nusing this:\n  \\<not> m < q\n\ngoal (1 subgoal):\n 1. q \\<le> m", "by simp"], ["proof (state)\nthis:\n  q \\<le> m\n\ngoal (1 subgoal):\n 1. \\<And>x. \\<lbrakk>prime x; x \\<le> m\\<rbrakk> \\<Longrightarrow> x < p", "qed (insert p, auto)"], ["proof (state)\nthis:\n  {q. prime q \\<and> q < p} = {q. prime q \\<and> q \\<le> m}\n\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> card {q. prime q \\<and> q < p} = n", "also"], ["proof (state)\nthis:\n  {q. prime q \\<and> q < p} = {q. prime q \\<and> q \\<le> m}\n\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> card {q. prime q \\<and> q < p} = n", "have \"card \\<dots> = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {q. prime q \\<and> q \\<le> m} = n", "by fact"], ["proof (state)\nthis:\n  card {q. prime q \\<and> q \\<le> m} = n\n\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> card {q. prime q \\<and> q < p} = n", "finally"], ["proof (chain)\npicking this:\n  card {q. prime q \\<and> q < p} = n", "show ?thesis"], ["proof (prove)\nusing this:\n  card {q. prime q \\<and> q < p} = n\n\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> card {q. prime q \\<and> q < p} = n", "using \\<open>prime p\\<close>"], ["proof (prove)\nusing this:\n  card {q. prime q \\<and> q < p} = n\n  prime p\n\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> card {q. prime q \\<and> q < p} = n", "by blast"], ["proof (state)\nthis:\n  \\<exists>p. prime p \\<and> card {q. prime q \\<and> q < p} = n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_prime_exists1: \"\\<exists>!p::nat. prime p \\<and> card {q. prime q \\<and> q < p} = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!p. prime p \\<and> card {q. prime q \\<and> q < p} = n", "by (intro ex_ex1I nth_prime_exists) (blast intro: nth_prime_unique_aux)"], ["", "lemma prime_nth_prime [intro]:    \"prime (nth_prime n)\"\n  and card_less_nth_prime [simp]: \"card {q. prime q \\<and> q < nth_prime n} = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (nth_prime n) &&& card {q. prime q \\<and> q < nth_prime n} = n", "using theI'[OF nth_prime_exists1[of n]]"], ["proof (prove)\nusing this:\n  prime (THE x. prime x \\<and> card {q. prime q \\<and> q < x} = n) \\<and>\n  card\n   {q. prime q \\<and>\n       q < (THE x. prime x \\<and> card {q. prime q \\<and> q < x} = n)} =\n  n\n\ngoal (1 subgoal):\n 1. prime (nth_prime n) &&& card {q. prime q \\<and> q < nth_prime n} = n", "by (simp_all add: nth_prime_def)"], ["", "lemma card_le_nth_prime [simp]: \"card {q. prime q \\<and> q \\<le> nth_prime n} = Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {q. prime q \\<and> q \\<le> nth_prime n} = Suc n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {q. prime q \\<and> q \\<le> nth_prime n} = Suc n", "have \"{q. prime q \\<and> q \\<le> nth_prime n} = insert (nth_prime n) {q. prime q \\<and> q < nth_prime n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {q. prime q \\<and> q \\<le> nth_prime n} =\n    insert (nth_prime n) {q. prime q \\<and> q < nth_prime n}", "by auto"], ["proof (state)\nthis:\n  {q. prime q \\<and> q \\<le> nth_prime n} =\n  insert (nth_prime n) {q. prime q \\<and> q < nth_prime n}\n\ngoal (1 subgoal):\n 1. card {q. prime q \\<and> q \\<le> nth_prime n} = Suc n", "also"], ["proof (state)\nthis:\n  {q. prime q \\<and> q \\<le> nth_prime n} =\n  insert (nth_prime n) {q. prime q \\<and> q < nth_prime n}\n\ngoal (1 subgoal):\n 1. card {q. prime q \\<and> q \\<le> nth_prime n} = Suc n", "have \"card \\<dots> = Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (insert (nth_prime n) {q. prime q \\<and> q < nth_prime n}) = Suc n", "by simp"], ["proof (state)\nthis:\n  card (insert (nth_prime n) {q. prime q \\<and> q < nth_prime n}) = Suc n\n\ngoal (1 subgoal):\n 1. card {q. prime q \\<and> q \\<le> nth_prime n} = Suc n", "finally"], ["proof (chain)\npicking this:\n  card {q. prime q \\<and> q \\<le> nth_prime n} = Suc n", "show ?thesis"], ["proof (prove)\nusing this:\n  card {q. prime q \\<and> q \\<le> nth_prime n} = Suc n\n\ngoal (1 subgoal):\n 1. card {q. prime q \\<and> q \\<le> nth_prime n} = Suc n", "."], ["proof (state)\nthis:\n  card {q. prime q \\<and> q \\<le> nth_prime n} = Suc n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<pi>_nth_prime [simp]: \"\\<pi> (real (nth_prime n)) = real n + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> (real (nth_prime n)) = real n + 1", "by (simp add: \\<pi>_def prime_sum_upto_def)"], ["", "lemma nth_prime_eqI:\n  assumes \"prime p\" \"card {q. prime q \\<and> q < p} = n\"\n  shows   \"nth_prime n = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_prime n = p", "unfolding nth_prime_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE p. prime p \\<and> card {q. prime q \\<and> q < p} = n) = p", "by (rule the1_equality[OF nth_prime_exists1]) (use assms in auto)"], ["", "lemma nth_prime_eqI':\n  assumes \"prime p\" \"card {q. prime q \\<and> q \\<le> p} = Suc n\"\n  shows   \"nth_prime n = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_prime n = p", "proof (rule nth_prime_eqI)"], ["proof (state)\ngoal (2 subgoals):\n 1. prime p\n 2. card {q. prime q \\<and> q < p} = n", "have \"{q. prime q \\<and> q \\<le> p} = insert p {q. prime q \\<and> q < p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {q. prime q \\<and> q \\<le> p} = insert p {q. prime q \\<and> q < p}", "using assms"], ["proof (prove)\nusing this:\n  prime p\n  card {q. prime q \\<and> q \\<le> p} = Suc n\n\ngoal (1 subgoal):\n 1. {q. prime q \\<and> q \\<le> p} = insert p {q. prime q \\<and> q < p}", "by auto"], ["proof (state)\nthis:\n  {q. prime q \\<and> q \\<le> p} = insert p {q. prime q \\<and> q < p}\n\ngoal (2 subgoals):\n 1. prime p\n 2. card {q. prime q \\<and> q < p} = n", "also"], ["proof (state)\nthis:\n  {q. prime q \\<and> q \\<le> p} = insert p {q. prime q \\<and> q < p}\n\ngoal (2 subgoals):\n 1. prime p\n 2. card {q. prime q \\<and> q < p} = n", "have \"card \\<dots> = Suc (card {q. prime q \\<and> q < p})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (insert p {q. prime q \\<and> q < p}) =\n    Suc (card {q. prime q \\<and> q < p})", "by simp"], ["proof (state)\nthis:\n  card (insert p {q. prime q \\<and> q < p}) =\n  Suc (card {q. prime q \\<and> q < p})\n\ngoal (2 subgoals):\n 1. prime p\n 2. card {q. prime q \\<and> q < p} = n", "finally"], ["proof (chain)\npicking this:\n  card {q. prime q \\<and> q \\<le> p} = Suc (card {q. prime q \\<and> q < p})", "show \"card {q. prime q \\<and> q < p} = n\""], ["proof (prove)\nusing this:\n  card {q. prime q \\<and> q \\<le> p} = Suc (card {q. prime q \\<and> q < p})\n\ngoal (1 subgoal):\n 1. card {q. prime q \\<and> q < p} = n", "using assms"], ["proof (prove)\nusing this:\n  card {q. prime q \\<and> q \\<le> p} = Suc (card {q. prime q \\<and> q < p})\n  prime p\n  card {q. prime q \\<and> q \\<le> p} = Suc n\n\ngoal (1 subgoal):\n 1. card {q. prime q \\<and> q < p} = n", "by simp"], ["proof (state)\nthis:\n  card {q. prime q \\<and> q < p} = n\n\ngoal (1 subgoal):\n 1. prime p", "qed (use assms in auto)"], ["", "lemma nth_prime_eqI'':\n  assumes \"prime p\" \"\\<pi> (real p) = real n + 1\"\n  shows   \"nth_prime n = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_prime n = p", "proof (rule nth_prime_eqI')"], ["proof (state)\ngoal (2 subgoals):\n 1. prime p\n 2. card {q. prime q \\<and> q \\<le> p} = Suc n", "have \"real (card {q. prime q \\<and> q \\<le> p}) = \\<pi> (real p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (card {q. prime q \\<and> q \\<le> p}) = \\<pi> (real p)", "by (simp add: \\<pi>_def prime_sum_upto_def)"], ["proof (state)\nthis:\n  real (card {q. prime q \\<and> q \\<le> p}) = \\<pi> (real p)\n\ngoal (2 subgoals):\n 1. prime p\n 2. card {q. prime q \\<and> q \\<le> p} = Suc n", "also"], ["proof (state)\nthis:\n  real (card {q. prime q \\<and> q \\<le> p}) = \\<pi> (real p)\n\ngoal (2 subgoals):\n 1. prime p\n 2. card {q. prime q \\<and> q \\<le> p} = Suc n", "have \"\\<dots> = real (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> (real p) = real (Suc n)", "by (simp add: assms)"], ["proof (state)\nthis:\n  \\<pi> (real p) = real (Suc n)\n\ngoal (2 subgoals):\n 1. prime p\n 2. card {q. prime q \\<and> q \\<le> p} = Suc n", "finally"], ["proof (chain)\npicking this:\n  real (card {q. prime q \\<and> q \\<le> p}) = real (Suc n)", "show \"card {q. prime q \\<and> q \\<le> p} = Suc n\""], ["proof (prove)\nusing this:\n  real (card {q. prime q \\<and> q \\<le> p}) = real (Suc n)\n\ngoal (1 subgoal):\n 1. card {q. prime q \\<and> q \\<le> p} = Suc n", "by (simp only: of_nat_eq_iff)"], ["proof (state)\nthis:\n  card {q. prime q \\<and> q \\<le> p} = Suc n\n\ngoal (1 subgoal):\n 1. prime p", "qed fact+"], ["", "lemma nth_prime_0 [simp]: \"nth_prime 0 = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_prime 0 = 2", "by (intro nth_prime_eqI) (auto dest: prime_gt_1_nat)"], ["", "lemma nth_prime_Suc: \"nth_prime (Suc n) = smallest_prime_beyond (Suc (nth_prime n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_prime (Suc n) = smallest_prime_beyond (Suc (nth_prime n))", "by (rule nth_prime_eqI'') (simp_all add: \\<pi>_smallest_prime_beyond)"], ["", "lemmas nth_prime_code [code] = nth_prime_0 nth_prime_Suc"], ["", "lemma strict_mono_nth_prime: \"strict_mono nth_prime\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono nth_prime", "proof (rule strict_monoI_Suc)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. nth_prime n < nth_prime (Suc n)", "fix n :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. nth_prime n < nth_prime (Suc n)", "have \"Suc (nth_prime n) \\<le> smallest_prime_beyond (Suc (nth_prime n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (nth_prime n) \\<le> smallest_prime_beyond (Suc (nth_prime n))", "by simp"], ["proof (state)\nthis:\n  Suc (nth_prime n) \\<le> smallest_prime_beyond (Suc (nth_prime n))\n\ngoal (1 subgoal):\n 1. \\<And>n. nth_prime n < nth_prime (Suc n)", "also"], ["proof (state)\nthis:\n  Suc (nth_prime n) \\<le> smallest_prime_beyond (Suc (nth_prime n))\n\ngoal (1 subgoal):\n 1. \\<And>n. nth_prime n < nth_prime (Suc n)", "have \"\\<dots> = nth_prime (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smallest_prime_beyond (Suc (nth_prime n)) = nth_prime (Suc n)", "by (simp add: nth_prime_Suc)"], ["proof (state)\nthis:\n  smallest_prime_beyond (Suc (nth_prime n)) = nth_prime (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>n. nth_prime n < nth_prime (Suc n)", "finally"], ["proof (chain)\npicking this:\n  Suc (nth_prime n) \\<le> nth_prime (Suc n)", "show \"nth_prime n < nth_prime (Suc n)\""], ["proof (prove)\nusing this:\n  Suc (nth_prime n) \\<le> nth_prime (Suc n)\n\ngoal (1 subgoal):\n 1. nth_prime n < nth_prime (Suc n)", "by simp"], ["proof (state)\nthis:\n  nth_prime n < nth_prime (Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_prime_le_iff [simp]: \"nth_prime m \\<le> nth_prime n \\<longleftrightarrow> m \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (nth_prime m \\<le> nth_prime n) = (m \\<le> n)", "using strict_mono_less_eq[OF strict_mono_nth_prime]"], ["proof (prove)\nusing this:\n  (nth_prime ?x \\<le> nth_prime ?y) = (?x \\<le> ?y)\n\ngoal (1 subgoal):\n 1. (nth_prime m \\<le> nth_prime n) = (m \\<le> n)", "by blast"], ["", "lemma nth_prime_less_iff [simp]: \"nth_prime m < nth_prime n \\<longleftrightarrow> m < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (nth_prime m < nth_prime n) = (m < n)", "using strict_mono_less[OF strict_mono_nth_prime]"], ["proof (prove)\nusing this:\n  (nth_prime ?x < nth_prime ?y) = (?x < ?y)\n\ngoal (1 subgoal):\n 1. (nth_prime m < nth_prime n) = (m < n)", "by blast"], ["", "lemma nth_prime_eq_iff [simp]: \"nth_prime m = nth_prime n \\<longleftrightarrow> m = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (nth_prime m = nth_prime n) = (m = n)", "using strict_mono_eq[OF strict_mono_nth_prime]"], ["proof (prove)\nusing this:\n  (nth_prime ?x = nth_prime ?y) = (?x = ?y)\n\ngoal (1 subgoal):\n 1. (nth_prime m = nth_prime n) = (m = n)", "by blast"], ["", "lemma nth_prime_ge_2: \"nth_prime n \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> nth_prime n", "using nth_prime_le_iff[of 0 n]"], ["proof (prove)\nusing this:\n  (nth_prime 0 \\<le> nth_prime n) = (0 \\<le> n)\n\ngoal (1 subgoal):\n 1. 2 \\<le> nth_prime n", "by (simp del: nth_prime_le_iff)"], ["", "lemma nth_prime_lower_bound: \"nth_prime n \\<ge> Suc (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Suc n) \\<le> nth_prime n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Suc (Suc n) \\<le> nth_prime n", "have \"n = card {q. prime q \\<and> q < nth_prime n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = card {q. prime q \\<and> q < nth_prime n}", "by simp"], ["proof (state)\nthis:\n  n = card {q. prime q \\<and> q < nth_prime n}\n\ngoal (1 subgoal):\n 1. Suc (Suc n) \\<le> nth_prime n", "also"], ["proof (state)\nthis:\n  n = card {q. prime q \\<and> q < nth_prime n}\n\ngoal (1 subgoal):\n 1. Suc (Suc n) \\<le> nth_prime n", "have \"\\<dots> \\<le> card {2..<nth_prime n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {q. prime q \\<and> q < nth_prime n} \\<le> card {2..<nth_prime n}", "by (intro card_mono) (auto dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  card {q. prime q \\<and> q < nth_prime n} \\<le> card {2..<nth_prime n}\n\ngoal (1 subgoal):\n 1. Suc (Suc n) \\<le> nth_prime n", "also"], ["proof (state)\nthis:\n  card {q. prime q \\<and> q < nth_prime n} \\<le> card {2..<nth_prime n}\n\ngoal (1 subgoal):\n 1. Suc (Suc n) \\<le> nth_prime n", "have \"\\<dots> = nth_prime n - 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {2..<nth_prime n} = nth_prime n - 2", "by simp"], ["proof (state)\nthis:\n  card {2..<nth_prime n} = nth_prime n - 2\n\ngoal (1 subgoal):\n 1. Suc (Suc n) \\<le> nth_prime n", "finally"], ["proof (chain)\npicking this:\n  n \\<le> nth_prime n - 2", "show ?thesis"], ["proof (prove)\nusing this:\n  n \\<le> nth_prime n - 2\n\ngoal (1 subgoal):\n 1. Suc (Suc n) \\<le> nth_prime n", "using nth_prime_ge_2[of n]"], ["proof (prove)\nusing this:\n  n \\<le> nth_prime n - 2\n  2 \\<le> nth_prime n\n\ngoal (1 subgoal):\n 1. Suc (Suc n) \\<le> nth_prime n", "by linarith"], ["proof (state)\nthis:\n  Suc (Suc n) \\<le> nth_prime n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_prime_at_top: \"filterlim nth_prime at_top at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim nth_prime sequentially sequentially", "proof (rule filterlim_at_top_mono)"], ["proof (state)\ngoal (2 subgoals):\n 1. filterlim ?f sequentially sequentially\n 2. \\<forall>\\<^sub>F x in sequentially. ?f x \\<le> nth_prime x", "show \"filterlim (\\<lambda>n::nat. n + 2) at_top at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM n sequentially. n + 2 :> sequentially", "by real_asymp"], ["proof (state)\nthis:\n  LIM n sequentially. n + 2 :> sequentially\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially. x + 2 \\<le> nth_prime x", "qed (auto simp: nth_prime_lower_bound)"], ["", "lemma \\<pi>_at_top: \"filterlim \\<pi> at_top at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim \\<pi> at_top at_top", "unfolding filterlim_at_top"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Z. \\<forall>\\<^sub>F x in at_top. Z \\<le> \\<pi> x", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Z. \\<forall>\\<^sub>F x in at_top. Z \\<le> \\<pi> x", "fix C :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Z. \\<forall>\\<^sub>F x in at_top. Z \\<le> \\<pi> x", "define x0 where \"x0 = real (nth_prime (nat \\<lceil>max 0 C\\<rceil>))\""], ["proof (state)\nthis:\n  x0 = real (nth_prime (nat \\<lceil>max 0 C\\<rceil>))\n\ngoal (1 subgoal):\n 1. \\<And>Z. \\<forall>\\<^sub>F x in at_top. Z \\<le> \\<pi> x", "show \"eventually (\\<lambda>x. \\<pi> x \\<ge> C) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. C \\<le> \\<pi> x", "using eventually_ge_at_top"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) ?c) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. C \\<le> \\<pi> x", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. ?c1 \\<le> x \\<Longrightarrow> C \\<le> \\<pi> x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. ?c1 \\<le> x \\<Longrightarrow> C \\<le> \\<pi> x", "assume \"x \\<ge> x0\""], ["proof (state)\nthis:\n  x0 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x. ?c1 \\<le> x \\<Longrightarrow> C \\<le> \\<pi> x", "have \"C \\<le> real (nat \\<lceil>max 0 C\\<rceil> + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<le> real (nat \\<lceil>max 0 C\\<rceil> + 1)", "by linarith"], ["proof (state)\nthis:\n  C \\<le> real (nat \\<lceil>max 0 C\\<rceil> + 1)\n\ngoal (1 subgoal):\n 1. \\<And>x. ?c1 \\<le> x \\<Longrightarrow> C \\<le> \\<pi> x", "also"], ["proof (state)\nthis:\n  C \\<le> real (nat \\<lceil>max 0 C\\<rceil> + 1)\n\ngoal (1 subgoal):\n 1. \\<And>x. ?c1 \\<le> x \\<Longrightarrow> C \\<le> \\<pi> x", "have \"real (nat \\<lceil>max 0 C\\<rceil> + 1) = \\<pi> x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (nat \\<lceil>max 0 C\\<rceil> + 1) = \\<pi> x0", "unfolding x0_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (nat \\<lceil>max 0 C\\<rceil> + 1) =\n    \\<pi> (real (nth_prime (nat \\<lceil>max 0 C\\<rceil>)))", "by simp"], ["proof (state)\nthis:\n  real (nat \\<lceil>max 0 C\\<rceil> + 1) = \\<pi> x0\n\ngoal (1 subgoal):\n 1. \\<And>x. ?c1 \\<le> x \\<Longrightarrow> C \\<le> \\<pi> x", "also"], ["proof (state)\nthis:\n  real (nat \\<lceil>max 0 C\\<rceil> + 1) = \\<pi> x0\n\ngoal (1 subgoal):\n 1. \\<And>x. ?c1 \\<le> x \\<Longrightarrow> C \\<le> \\<pi> x", "have \"\\<dots> \\<le> \\<pi> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x0 \\<le> \\<pi> x", "by (rule \\<pi>_mono) fact"], ["proof (state)\nthis:\n  \\<pi> x0 \\<le> \\<pi> x\n\ngoal (1 subgoal):\n 1. \\<And>x. ?c1 \\<le> x \\<Longrightarrow> C \\<le> \\<pi> x", "finally"], ["proof (chain)\npicking this:\n  C \\<le> \\<pi> x", "show \"\\<pi> x \\<ge> C\""], ["proof (prove)\nusing this:\n  C \\<le> \\<pi> x\n\ngoal (1 subgoal):\n 1. C \\<le> \\<pi> x", "."], ["proof (state)\nthis:\n  C \\<le> \\<pi> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. C \\<le> \\<pi> x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\n  An unbounded, strictly increasing sequence $a_n$ partitions $[a_0; \\infty)$ into\n  segments of the form $[a_n; a_{n+1})$.\n\\<close>"], ["", "lemma strict_mono_sequence_partition:\n  assumes \"strict_mono (f :: nat \\<Rightarrow> 'a :: {linorder, no_top})\"\n  assumes \"x \\<ge> f 0\"\n  assumes \"filterlim f at_top at_top\"\n  shows   \"\\<exists>k. x \\<in> {f k..<f (Suc k)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "define k where \"k = (LEAST k. f (Suc k) > x)\""], ["proof (state)\nthis:\n  k = (LEAST k. x < f (Suc k))\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "{"], ["proof (state)\nthis:\n  k = (LEAST k. x < f (Suc k))\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "obtain n where \"x \\<le> f n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n. x \\<le> f n \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  strict_mono f\n  f 0 \\<le> x\n  filterlim f at_top sequentially\n\ngoal (1 subgoal):\n 1. (\\<And>n. x \\<le> f n \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto simp: filterlim_at_top eventually_at_top_linorder)"], ["proof (state)\nthis:\n  x \\<le> f n\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "also"], ["proof (state)\nthis:\n  x \\<le> f n\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "have \"f n < f (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f n < f (Suc n)", "using assms"], ["proof (prove)\nusing this:\n  strict_mono f\n  f 0 \\<le> x\n  filterlim f at_top sequentially\n\ngoal (1 subgoal):\n 1. f n < f (Suc n)", "by (auto simp: strict_mono_Suc_iff)"], ["proof (state)\nthis:\n  f n < f (Suc n)\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "finally"], ["proof (chain)\npicking this:\n  x < f (Suc n)", "have \"\\<exists>n. f (Suc n) > x\""], ["proof (prove)\nusing this:\n  x < f (Suc n)\n\ngoal (1 subgoal):\n 1. \\<exists>n. x < f (Suc n)", "by auto"], ["proof (state)\nthis:\n  \\<exists>n. x < f (Suc n)\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "}"], ["proof (state)\nthis:\n  \\<exists>n. x < f (Suc n)\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "from LeastI_ex[OF this]"], ["proof (chain)\npicking this:\n  x < f (Suc (LEAST n. x < f (Suc n)))", "have \"x < f (Suc k)\""], ["proof (prove)\nusing this:\n  x < f (Suc (LEAST n. x < f (Suc n)))\n\ngoal (1 subgoal):\n 1. x < f (Suc k)", "by (simp add: k_def)"], ["proof (state)\nthis:\n  x < f (Suc k)\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "moreover"], ["proof (state)\nthis:\n  x < f (Suc k)\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "have \"f k \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f k \\<le> x", "proof (cases k)"], ["proof (state)\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> f k \\<le> x\n 2. \\<And>nat. k = Suc nat \\<Longrightarrow> f k \\<le> x", "case (Suc k')"], ["proof (state)\nthis:\n  k = Suc k'\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> f k \\<le> x\n 2. \\<And>nat. k = Suc nat \\<Longrightarrow> f k \\<le> x", "have \"k \\<le> k'\" if \"f (Suc k') > x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> k'", "using that"], ["proof (prove)\nusing this:\n  x < f (Suc k')\n\ngoal (1 subgoal):\n 1. k \\<le> k'", "unfolding k_def"], ["proof (prove)\nusing this:\n  x < f (Suc k')\n\ngoal (1 subgoal):\n 1. (LEAST k. x < f (Suc k)) \\<le> k'", "by (rule Least_le)"], ["proof (state)\nthis:\n  x < f (Suc k') \\<Longrightarrow> k \\<le> k'\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> f k \\<le> x\n 2. \\<And>nat. k = Suc nat \\<Longrightarrow> f k \\<le> x", "with Suc"], ["proof (chain)\npicking this:\n  k = Suc k'\n  x < f (Suc k') \\<Longrightarrow> k \\<le> k'", "show \"f k \\<le> x\""], ["proof (prove)\nusing this:\n  k = Suc k'\n  x < f (Suc k') \\<Longrightarrow> k \\<le> k'\n\ngoal (1 subgoal):\n 1. f k \\<le> x", "by (cases \"f k \\<le> x\") (auto simp: not_le)"], ["proof (state)\nthis:\n  f k \\<le> x\n\ngoal (1 subgoal):\n 1. k = 0 \\<Longrightarrow> f k \\<le> x", "qed (use assms in auto)"], ["proof (state)\nthis:\n  f k \\<le> x\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "ultimately"], ["proof (chain)\npicking this:\n  x < f (Suc k)\n  f k \\<le> x", "show ?thesis"], ["proof (prove)\nusing this:\n  x < f (Suc k)\n  f k \\<le> x\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {f k..<f (Suc k)}", "by auto"], ["proof (state)\nthis:\n  \\<exists>k. x \\<in> {f k..<f (Suc k)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_prime_partition:\n  assumes \"x \\<ge> 2\"\n  shows   \"\\<exists>k. x \\<in> {nth_prime k..<nth_prime (Suc k)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {nth_prime k..<nth_prime (Suc k)}", "using strict_mono_sequence_partition[OF strict_mono_nth_prime, of x] assms nth_prime_at_top"], ["proof (prove)\nusing this:\n  \\<lbrakk>nth_prime 0 \\<le> x;\n   filterlim nth_prime sequentially sequentially\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k. x \\<in> {nth_prime k..<nth_prime (Suc k)}\n  2 \\<le> x\n  filterlim nth_prime sequentially sequentially\n\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {nth_prime k..<nth_prime (Suc k)}", "by simp"], ["", "lemma nth_prime_partition':\n  assumes \"x \\<ge> 2\"\n  shows   \"\\<exists>k. x \\<in> {real (nth_prime k)..<real (nth_prime (Suc k))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. x \\<in> {real (nth_prime k)..<real (nth_prime (Suc k))}", "by (rule strict_mono_sequence_partition)\n     (auto simp: strict_mono_Suc_iff assms\n           intro!: filterlim_real_sequentially filterlim_compose[OF _ nth_prime_at_top])"], ["", "lemma between_nth_primes_imp_nonprime:\n  assumes \"n > nth_prime k\" \"n < nth_prime (Suc k)\"\n  shows   \"\\<not>prime n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> prime n", "using assms"], ["proof (prove)\nusing this:\n  nth_prime k < n\n  n < nth_prime (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> prime n", "by (metis Suc_leI not_le nth_prime_Suc smallest_prime_beyond_smallest)"], ["", "lemma nth_prime_partition'':\n  assumes \"x \\<ge> (2 :: real)\"\n  shows \"x \\<in> {real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor> - 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {real\n              (nth_prime\n                (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> {real\n              (nth_prime\n                (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "obtain n where n: \"x \\<in> {nth_prime n..<nth_prime (Suc n)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        x \\<in> {real\n                  (nth_prime\n                    n)..<real (nth_prime (Suc n))} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using nth_prime_partition' assms"], ["proof (prove)\nusing this:\n  2 \\<le> ?x \\<Longrightarrow>\n  \\<exists>k. ?x \\<in> {real (nth_prime k)..<real (nth_prime (Suc k))}\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        x \\<in> {real\n                  (nth_prime\n                    n)..<real (nth_prime (Suc n))} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> {real (nth_prime n)..<real (nth_prime (Suc n))}\n\ngoal (1 subgoal):\n 1. x \\<in> {real\n              (nth_prime\n                (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "have \"\\<pi> (nth_prime n) = \\<pi> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> (real (nth_prime n)) = \\<pi> x", "unfolding \\<pi>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_sum_upto (\\<lambda>p. 1) (real (nth_prime n)) =\n    prime_sum_upto (\\<lambda>p. 1) x", "using between_nth_primes_imp_nonprime n"], ["proof (prove)\nusing this:\n  \\<lbrakk>nth_prime ?k < ?n; ?n < nth_prime (Suc ?k)\\<rbrakk>\n  \\<Longrightarrow> \\<not> prime ?n\n  x \\<in> {real (nth_prime n)..<real (nth_prime (Suc n))}\n\ngoal (1 subgoal):\n 1. prime_sum_upto (\\<lambda>p. 1) (real (nth_prime n)) =\n    prime_sum_upto (\\<lambda>p. 1) x", "by (intro prime_sum_upto_eqI) (auto simp: le_nat_iff le_floor_iff)"], ["proof (state)\nthis:\n  \\<pi> (real (nth_prime n)) = \\<pi> x\n\ngoal (1 subgoal):\n 1. x \\<in> {real\n              (nth_prime\n                (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "hence \"real n = \\<pi> x - 1\""], ["proof (prove)\nusing this:\n  \\<pi> (real (nth_prime n)) = \\<pi> x\n\ngoal (1 subgoal):\n 1. real n = \\<pi> x - 1", "by simp"], ["proof (state)\nthis:\n  real n = \\<pi> x - 1\n\ngoal (1 subgoal):\n 1. x \\<in> {real\n              (nth_prime\n                (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "hence n_eq: \"n = nat \\<lfloor>\\<pi> x\\<rfloor> - 1\" \"Suc n = nat \\<lfloor>\\<pi> x\\<rfloor>\""], ["proof (prove)\nusing this:\n  real n = \\<pi> x - 1\n\ngoal (1 subgoal):\n 1. n = nat \\<lfloor>\\<pi> x\\<rfloor> - 1 &&&\n    Suc n = nat \\<lfloor>\\<pi> x\\<rfloor>", "by linarith+"], ["proof (state)\nthis:\n  n = nat \\<lfloor>\\<pi> x\\<rfloor> - 1\n  Suc n = nat \\<lfloor>\\<pi> x\\<rfloor>\n\ngoal (1 subgoal):\n 1. x \\<in> {real\n              (nth_prime\n                (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "with n"], ["proof (chain)\npicking this:\n  x \\<in> {real (nth_prime n)..<real (nth_prime (Suc n))}\n  n = nat \\<lfloor>\\<pi> x\\<rfloor> - 1\n  Suc n = nat \\<lfloor>\\<pi> x\\<rfloor>", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> {real (nth_prime n)..<real (nth_prime (Suc n))}\n  n = nat \\<lfloor>\\<pi> x\\<rfloor> - 1\n  Suc n = nat \\<lfloor>\\<pi> x\\<rfloor>\n\ngoal (1 subgoal):\n 1. x \\<in> {real\n              (nth_prime\n                (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                 1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "by simp"], ["proof (state)\nthis:\n  x \\<in> {real\n            (nth_prime\n              (nat \\<lfloor>\\<pi> x\\<rfloor> -\n               1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Relations between different prime-counting functions\\<close>"], ["", "text \\<open>\n  The \\<open>\\<psi>\\<close> function can be expressed as a sum of \\<open>\\<theta>\\<close>.\n\\<close>"], ["", "lemma \\<psi>_altdef:\n  assumes \"x > 0\"\n  shows   \"\\<psi> x = sum_upto (\\<lambda>m. prime_sum_upto ln (root m x)) (log 2 x)\" (is \"_ = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> x =\n    sum_upto\n     (\\<lambda>m. prime_sum_upto (\\<lambda>x. ln (real x)) (root m x))\n     (log 2 x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<psi> x =\n    sum_upto\n     (\\<lambda>m. prime_sum_upto (\\<lambda>x. ln (real x)) (root m x))\n     (log 2 x)", "have finite: \"finite {p. prime p \\<and> real p \\<le> y}\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {p. prime p \\<and> real p \\<le> y}", "by (rule finite_subset[of _ \"{..nat \\<lfloor>y\\<rfloor>}\"]) (auto simp: le_nat_iff' le_floor_iff)"], ["proof (state)\nthis:\n  finite {p. prime p \\<and> real p \\<le> ?y}\n\ngoal (1 subgoal):\n 1. \\<psi> x =\n    sum_upto\n     (\\<lambda>m. prime_sum_upto (\\<lambda>x. ln (real x)) (root m x))\n     (log 2 x)", "define S where \"S = (SIGMA i:{i. 0 < i \\<and> real i \\<le> log 2 x}. {p. prime p \\<and> real p \\<le> root i x})\""], ["proof (state)\nthis:\n  S =\n  (SIGMA i:{i. 0 < i \\<and> real i \\<le> log 2 x}.\n      {p. prime p \\<and> real p \\<le> root i x})\n\ngoal (1 subgoal):\n 1. \\<psi> x =\n    sum_upto\n     (\\<lambda>m. prime_sum_upto (\\<lambda>x. ln (real x)) (root m x))\n     (log 2 x)", "have \"\\<psi> x = (\\<Sum>(p, i) | prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x. ln (real p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> x =\n    (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n       ln (real p))", "unfolding \\<psi>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto mangoldt x =\n    (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n       ln (real p))", "by (subst sum_upto_primepows[where g = \"\\<lambda>p i. ln (real p)\"])\n       (auto simp: case_prod_unfold mangoldt_non_primepow)"], ["proof (state)\nthis:\n  \\<psi> x =\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n     ln (real p))\n\ngoal (1 subgoal):\n 1. \\<psi> x =\n    sum_upto\n     (\\<lambda>m. prime_sum_upto (\\<lambda>x. ln (real x)) (root m x))\n     (log 2 x)", "also"], ["proof (state)\nthis:\n  \\<psi> x =\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n     ln (real p))\n\ngoal (1 subgoal):\n 1. \\<psi> x =\n    sum_upto\n     (\\<lambda>m. prime_sum_upto (\\<lambda>x. ln (real x)) (root m x))\n     (log 2 x)", "have \"\\<dots> = (\\<Sum>(i, p) | prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x. ln (real p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n       ln (real p)) =\n    (\\<Sum>(i, p)\n           \\<in>{(i, p). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n       ln (real p))", "by (intro sum.reindex_bij_witness[of _ \"\\<lambda>(x,y). (y,x)\" \"\\<lambda>(x,y). (y,x)\"]) auto"], ["proof (state)\nthis:\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n     ln (real p)) =\n  (\\<Sum>(i, p)\n         \\<in>{(i, p). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n     ln (real p))\n\ngoal (1 subgoal):\n 1. \\<psi> x =\n    sum_upto\n     (\\<lambda>m. prime_sum_upto (\\<lambda>x. ln (real x)) (root m x))\n     (log 2 x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n     ln (real p)) =\n  (\\<Sum>(i, p)\n         \\<in>{(i, p). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n     ln (real p))\n\ngoal (1 subgoal):\n 1. \\<psi> x =\n    sum_upto\n     (\\<lambda>m. prime_sum_upto (\\<lambda>x. ln (real x)) (root m x))\n     (log 2 x)", "have \"{(i, p). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x} = S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(i, p). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x} = S", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(i, p). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x} =\n    (SIGMA i:{i. 0 < i \\<and> real i \\<le> log 2 x}.\n        {p. prime p \\<and> real p \\<le> root i x})", "proof safe"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real a \\<le> log 2 x\n 2. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real b \\<le> root a x\n 3. \\<And>a b.\n       \\<lbrakk>0 < a; real a \\<le> log 2 x; prime b;\n        real b \\<le> root a x\\<rbrakk>\n       \\<Longrightarrow> real (b ^ a) \\<le> x", "fix i p :: nat"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real a \\<le> log 2 x\n 2. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real b \\<le> root a x\n 3. \\<And>a b.\n       \\<lbrakk>0 < a; real a \\<le> log 2 x; prime b;\n        real b \\<le> root a x\\<rbrakk>\n       \\<Longrightarrow> real (b ^ a) \\<le> x", "assume ip: \"i > 0\" \"real i \\<le> log 2 x\" \"prime p\" \"real p \\<le> root i x\""], ["proof (state)\nthis:\n  0 < i\n  real i \\<le> log 2 x\n  prime p\n  real p \\<le> root i x\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real a \\<le> log 2 x\n 2. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real b \\<le> root a x\n 3. \\<And>a b.\n       \\<lbrakk>0 < a; real a \\<le> log 2 x; prime b;\n        real b \\<le> root a x\\<rbrakk>\n       \\<Longrightarrow> real (b ^ a) \\<le> x", "hence \"real (p ^ i) \\<le> root i x ^ i\""], ["proof (prove)\nusing this:\n  0 < i\n  real i \\<le> log 2 x\n  prime p\n  real p \\<le> root i x\n\ngoal (1 subgoal):\n 1. real (p ^ i) \\<le> root i x ^ i", "unfolding of_nat_power"], ["proof (prove)\nusing this:\n  0 < i\n  real i \\<le> log 2 x\n  prime p\n  real p \\<le> root i x\n\ngoal (1 subgoal):\n 1. real p ^ i \\<le> root i x ^ i", "by (intro power_mono) auto"], ["proof (state)\nthis:\n  real (p ^ i) \\<le> root i x ^ i\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real a \\<le> log 2 x\n 2. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real b \\<le> root a x\n 3. \\<And>a b.\n       \\<lbrakk>0 < a; real a \\<le> log 2 x; prime b;\n        real b \\<le> root a x\\<rbrakk>\n       \\<Longrightarrow> real (b ^ a) \\<le> x", "with ip assms"], ["proof (chain)\npicking this:\n  0 < i\n  real i \\<le> log 2 x\n  prime p\n  real p \\<le> root i x\n  0 < x\n  real (p ^ i) \\<le> root i x ^ i", "show \"real (p ^ i) \\<le> x\""], ["proof (prove)\nusing this:\n  0 < i\n  real i \\<le> log 2 x\n  prime p\n  real p \\<le> root i x\n  0 < x\n  real (p ^ i) \\<le> root i x ^ i\n\ngoal (1 subgoal):\n 1. real (p ^ i) \\<le> x", "by simp"], ["proof (state)\nthis:\n  real (p ^ i) \\<le> x\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real a \\<le> log 2 x\n 2. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real b \\<le> root a x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real a \\<le> log 2 x\n 2. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real b \\<le> root a x", "fix i p"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real a \\<le> log 2 x\n 2. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real b \\<le> root a x", "assume ip: \"prime p\" \"i > 0\" \"real (p ^ i) \\<le> x\""], ["proof (state)\nthis:\n  prime p\n  0 < i\n  real (p ^ i) \\<le> x\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real a \\<le> log 2 x\n 2. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real b \\<le> root a x", "from ip"], ["proof (chain)\npicking this:\n  prime p\n  0 < i\n  real (p ^ i) \\<le> x", "have \"2 ^ i \\<le> p ^ i\""], ["proof (prove)\nusing this:\n  prime p\n  0 < i\n  real (p ^ i) \\<le> x\n\ngoal (1 subgoal):\n 1. 2 ^ i \\<le> p ^ i", "by (intro power_mono) (auto dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  2 ^ i \\<le> p ^ i\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real a \\<le> log 2 x\n 2. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real b \\<le> root a x", "also"], ["proof (state)\nthis:\n  2 ^ i \\<le> p ^ i\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real a \\<le> log 2 x\n 2. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real b \\<le> root a x", "have \"\\<dots> \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (p ^ i) \\<le> x", "using ip"], ["proof (prove)\nusing this:\n  prime p\n  0 < i\n  real (p ^ i) \\<le> x\n\ngoal (1 subgoal):\n 1. real (p ^ i) \\<le> x", "by simp"], ["proof (state)\nthis:\n  real (p ^ i) \\<le> x\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real a \\<le> log 2 x\n 2. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real b \\<le> root a x", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> real x \\<le> real y) \\<Longrightarrow>\n  real (2 ^ i) \\<le> x", "show \"real i \\<le> log 2 x\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> real x \\<le> real y) \\<Longrightarrow>\n  real (2 ^ i) \\<le> x\n\ngoal (1 subgoal):\n 1. real i \\<le> log 2 x", "using assms"], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> real x \\<le> real y) \\<Longrightarrow>\n  real (2 ^ i) \\<le> x\n  0 < x\n\ngoal (1 subgoal):\n 1. real i \\<le> log 2 x", "by (simp add: le_log_iff powr_realpow)"], ["proof (state)\nthis:\n  real i \\<le> log 2 x\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real b \\<le> root a x", "have \"root i (real p ^ i) \\<le> root i x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. root i (real p ^ i) \\<le> root i x", "using ip assms"], ["proof (prove)\nusing this:\n  prime p\n  0 < i\n  real (p ^ i) \\<le> x\n  0 < x\n\ngoal (1 subgoal):\n 1. root i (real p ^ i) \\<le> root i x", "by (subst real_root_le_iff) auto"], ["proof (state)\nthis:\n  root i (real p ^ i) \\<le> root i x\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real b \\<le> root a x", "also"], ["proof (state)\nthis:\n  root i (real p ^ i) \\<le> root i x\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real b \\<le> root a x", "have \"root i (real p ^ i) = real p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. root i (real p ^ i) = real p", "using assms ip"], ["proof (prove)\nusing this:\n  0 < x\n  prime p\n  0 < i\n  real (p ^ i) \\<le> x\n\ngoal (1 subgoal):\n 1. root i (real p ^ i) = real p", "by (subst real_root_pos2) auto"], ["proof (state)\nthis:\n  root i (real p ^ i) = real p\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>prime b; 0 < a; real (b ^ a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> real b \\<le> root a x", "finally"], ["proof (chain)\npicking this:\n  real p \\<le> root i x", "show \"real p \\<le> root i x\""], ["proof (prove)\nusing this:\n  real p \\<le> root i x\n\ngoal (1 subgoal):\n 1. real p \\<le> root i x", "."], ["proof (state)\nthis:\n  real p \\<le> root i x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {(i, p). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x} = S\n\ngoal (1 subgoal):\n 1. \\<psi> x =\n    sum_upto\n     (\\<lambda>m. prime_sum_upto (\\<lambda>x. ln (real x)) (root m x))\n     (log 2 x)", "also"], ["proof (state)\nthis:\n  {(i, p). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x} = S\n\ngoal (1 subgoal):\n 1. \\<psi> x =\n    sum_upto\n     (\\<lambda>m. prime_sum_upto (\\<lambda>x. ln (real x)) (root m x))\n     (log 2 x)", "have \"(\\<Sum>(i,p)\\<in>S. ln p) = sum_upto (\\<lambda>m. prime_sum_upto ln (root m x)) (log 2 x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(i, p)\\<in>S. ln (real p)) =\n    sum_upto\n     (\\<lambda>m. prime_sum_upto (\\<lambda>x. ln (real x)) (root m x))\n     (log 2 x)", "unfolding sum_upto_def prime_sum_upto_def S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(i, p)\n           \\<in>(SIGMA i:{i. 0 < i \\<and> real i \\<le> log 2 x}.\n                    {p. prime p \\<and> real p \\<le> root i x}).\n       ln (real p)) =\n    (\\<Sum>m\\<in>{i. 0 < i \\<and> real i \\<le> log 2 x}.\n       \\<Sum>x\\<in>{p. prime p \\<and> real p \\<le> root m x}. ln (real x))", "using finite"], ["proof (prove)\nusing this:\n  finite {p. prime p \\<and> real p \\<le> ?y}\n\ngoal (1 subgoal):\n 1. (\\<Sum>(i, p)\n           \\<in>(SIGMA i:{i. 0 < i \\<and> real i \\<le> log 2 x}.\n                    {p. prime p \\<and> real p \\<le> root i x}).\n       ln (real p)) =\n    (\\<Sum>m\\<in>{i. 0 < i \\<and> real i \\<le> log 2 x}.\n       \\<Sum>x\\<in>{p. prime p \\<and> real p \\<le> root m x}. ln (real x))", "by (subst sum.Sigma) auto"], ["proof (state)\nthis:\n  (\\<Sum>(i, p)\\<in>S. ln (real p)) =\n  sum_upto (\\<lambda>m. prime_sum_upto (\\<lambda>x. ln (real x)) (root m x))\n   (log 2 x)\n\ngoal (1 subgoal):\n 1. \\<psi> x =\n    sum_upto\n     (\\<lambda>m. prime_sum_upto (\\<lambda>x. ln (real x)) (root m x))\n     (log 2 x)", "finally"], ["proof (chain)\npicking this:\n  \\<psi> x =\n  sum_upto (\\<lambda>m. prime_sum_upto (\\<lambda>x. ln (real x)) (root m x))\n   (log 2 x)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<psi> x =\n  sum_upto (\\<lambda>m. prime_sum_upto (\\<lambda>x. ln (real x)) (root m x))\n   (log 2 x)\n\ngoal (1 subgoal):\n 1. \\<psi> x =\n    sum_upto\n     (\\<lambda>m. prime_sum_upto (\\<lambda>x. ln (real x)) (root m x))\n     (log 2 x)", "."], ["proof (state)\nthis:\n  \\<psi> x =\n  sum_upto (\\<lambda>m. prime_sum_upto (\\<lambda>x. ln (real x)) (root m x))\n   (log 2 x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<psi>_conv_\\<theta>_sum: \"x > 0 \\<Longrightarrow> \\<psi> x = sum_upto (\\<lambda>m. \\<theta> (root m x)) (log 2 x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow>\n    \\<psi> x = sum_upto (\\<lambda>m. \\<theta> (root m x)) (log 2 x)", "by (simp add: \\<psi>_altdef \\<theta>_def)"], ["", "lemma \\<psi>_minus_\\<theta>:\n  assumes x: \"x \\<ge> 2\"\n  shows   \"\\<psi> x - \\<theta> x = (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x =\n    (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x =\n    (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))", "have finite: \"finite {i. 2 \\<le> i \\<and> real i \\<le> log 2 x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {i. 2 \\<le> i \\<and> real i \\<le> log 2 x}", "by (rule finite_subset[of _ \"{2..nat \\<lfloor>log 2 x\\<rfloor>}\"]) (auto simp: le_nat_iff' le_floor_iff)"], ["proof (state)\nthis:\n  finite {i. 2 \\<le> i \\<and> real i \\<le> log 2 x}\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x =\n    (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))", "have \"\\<psi> x = (\\<Sum>i | 0 < i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> x =\n    (\\<Sum>i | 0 < i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))", "using x"], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<psi> x =\n    (\\<Sum>i | 0 < i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))", "by (simp add: \\<psi>_conv_\\<theta>_sum sum_upto_def)"], ["proof (state)\nthis:\n  \\<psi> x =\n  (\\<Sum>i | 0 < i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x =\n    (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))", "also"], ["proof (state)\nthis:\n  \\<psi> x =\n  (\\<Sum>i | 0 < i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x =\n    (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))", "have \"{i. 0 < i \\<and> real i \\<le> log 2 x} = insert 1 {i. 2 \\<le> i \\<and> real i \\<le> log 2 x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. 0 < i \\<and> real i \\<le> log 2 x} =\n    insert 1 {i. 2 \\<le> i \\<and> real i \\<le> log 2 x}", "using x"], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. {i. 0 < i \\<and> real i \\<le> log 2 x} =\n    insert 1 {i. 2 \\<le> i \\<and> real i \\<le> log 2 x}", "by (auto simp: le_log_iff)"], ["proof (state)\nthis:\n  {i. 0 < i \\<and> real i \\<le> log 2 x} =\n  insert 1 {i. 2 \\<le> i \\<and> real i \\<le> log 2 x}\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x =\n    (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))", "also"], ["proof (state)\nthis:\n  {i. 0 < i \\<and> real i \\<le> log 2 x} =\n  insert 1 {i. 2 \\<le> i \\<and> real i \\<le> log 2 x}\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x =\n    (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))", "have \"(\\<Sum>i\\<in>\\<dots>. \\<theta> (root i x)) - \\<theta> x =\n               (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>insert 1 {i. 2 \\<le> i \\<and> real i \\<le> log 2 x}.\n       \\<theta> (root i x)) -\n    \\<theta> x =\n    (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))", "using finite"], ["proof (prove)\nusing this:\n  finite {i. 2 \\<le> i \\<and> real i \\<le> log 2 x}\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>insert 1 {i. 2 \\<le> i \\<and> real i \\<le> log 2 x}.\n       \\<theta> (root i x)) -\n    \\<theta> x =\n    (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))", "by (subst sum.insert) auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>insert 1 {i. 2 \\<le> i \\<and> real i \\<le> log 2 x}.\n     \\<theta> (root i x)) -\n  \\<theta> x =\n  (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x =\n    (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))", "finally"], ["proof (chain)\npicking this:\n  \\<psi> x - \\<theta> x =\n  (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<psi> x - \\<theta> x =\n  (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x =\n    (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))", "."], ["proof (state)\nthis:\n  \\<psi> x - \\<theta> x =\n  (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The following theorems use summation by parts to relate different prime-counting functions to\n  one another with an integral as a remainder term.\n\\<close>"], ["", "lemma \\<theta>_conv_\\<pi>_integral:\n  assumes \"x \\<ge> 2\"\n  shows   \"((\\<lambda>t. \\<pi> t / t) has_integral (\\<pi> x * ln x - \\<theta> x)) {2..x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}", "proof (cases \"x = 2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}", "case False"], ["proof (state)\nthis:\n  x \\<noteq> 2\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}", "note [intro] = finite_vimage_real_of_nat_greaterThanAtMost"], ["proof (state)\nthis:\n  finite (real -` {?y<..?x})\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}", "from False and assms"], ["proof (chain)\npicking this:\n  x \\<noteq> 2\n  2 \\<le> x", "have x: \"x > 2\""], ["proof (prove)\nusing this:\n  x \\<noteq> 2\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. 2 < x", "by simp"], ["proof (state)\nthis:\n  2 < x\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}", "have \"((\\<lambda>t. sum_upto (ind prime) t * (1 / t)) has_integral\n          sum_upto (ind prime) x * ln x - sum_upto (ind prime) 2 * ln 2 -\n          (\\<Sum>n\\<in>real -` {2<..x}. ind prime n * ln (real n))) {2..x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. sum_upto (ind prime) t * (1 / t)) has_integral\n     sum_upto (ind prime) x * ln x - sum_upto (ind prime) 2 * ln 2 -\n     (\\<Sum>n\\<in>real -` {2<..x}. ind prime n * ln (real n)))\n     {2..x}", "using x"], ["proof (prove)\nusing this:\n  2 < x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. sum_upto (ind prime) t * (1 / t)) has_integral\n     sum_upto (ind prime) x * ln x - sum_upto (ind prime) 2 * ln 2 -\n     (\\<Sum>n\\<in>real -` {2<..x}. ind prime n * ln (real n)))\n     {2..x}", "by (intro partial_summation_strong[where X = \"{}\"])\n       (auto intro!: continuous_intros derivative_eq_intros\n             simp flip: has_field_derivative_iff_has_vector_derivative)"], ["proof (state)\nthis:\n  ((\\<lambda>t. sum_upto (ind prime) t * (1 / t)) has_integral\n   sum_upto (ind prime) x * ln x - sum_upto (ind prime) 2 * ln 2 -\n   (\\<Sum>n\\<in>real -` {2<..x}. ind prime n * ln (real n)))\n   {2..x}\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}", "hence \"((\\<lambda>t. \\<pi> t / t) has_integral (\\<pi> x * ln x -\n           (\\<pi> 2 * ln 2 + (\\<Sum>n\\<in>real -` {2<..x}. ind prime n * ln n)))) {2..x}\""], ["proof (prove)\nusing this:\n  ((\\<lambda>t. sum_upto (ind prime) t * (1 / t)) has_integral\n   sum_upto (ind prime) x * ln x - sum_upto (ind prime) 2 * ln 2 -\n   (\\<Sum>n\\<in>real -` {2<..x}. ind prime n * ln (real n)))\n   {2..x}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. \\<pi> t / t) has_integral\n     \\<pi> x * ln x -\n     (\\<pi> 2 * ln 2 +\n      (\\<Sum>n\\<in>real -` {2<..x}. ind prime n * ln (real n))))\n     {2..x}", "by (simp add: \\<pi>_def prime_sum_upto_altdef1 algebra_simps)"], ["proof (state)\nthis:\n  ((\\<lambda>t. \\<pi> t / t) has_integral\n   \\<pi> x * ln x -\n   (\\<pi> 2 * ln 2 +\n    (\\<Sum>n\\<in>real -` {2<..x}. ind prime n * ln (real n))))\n   {2..x}\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>t. \\<pi> t / t) has_integral\n   \\<pi> x * ln x -\n   (\\<pi> 2 * ln 2 +\n    (\\<Sum>n\\<in>real -` {2<..x}. ind prime n * ln (real n))))\n   {2..x}\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}", "have \"\\<pi> 2 * ln 2 + (\\<Sum>n\\<in>real -` {2<..x}. ind prime n * ln n) =\n               (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). ind prime n * ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> 2 * ln 2 +\n    (\\<Sum>n\\<in>real -` {2<..x}. ind prime n * ln (real n)) =\n    (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). ind prime n * ln (real n))", "by (subst sum.insert) (auto simp: eval_\\<pi>)"], ["proof (state)\nthis:\n  \\<pi> 2 * ln 2 +\n  (\\<Sum>n\\<in>real -` {2<..x}. ind prime n * ln (real n)) =\n  (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). ind prime n * ln (real n))\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}", "also"], ["proof (state)\nthis:\n  \\<pi> 2 * ln 2 +\n  (\\<Sum>n\\<in>real -` {2<..x}. ind prime n * ln (real n)) =\n  (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). ind prime n * ln (real n))\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}", "have \"\\<dots> = \\<theta> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). ind prime n * ln (real n)) =\n    \\<theta> x", "unfolding \\<theta>_def prime_sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). ind prime n * ln (real n)) =\n    (\\<Sum>p | prime p \\<and> real p \\<le> x. ln (real p))", "using x"], ["proof (prove)\nusing this:\n  2 < x\n\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). ind prime n * ln (real n)) =\n    (\\<Sum>p | prime p \\<and> real p \\<le> x. ln (real p))", "by (intro sum.mono_neutral_cong_right) (auto simp: ind_def dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). ind prime n * ln (real n)) =\n  \\<theta> x\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n   {2..x}", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n   {2..x}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}", "."], ["proof (state)\nthis:\n  ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n   {2..x}\n\ngoal (1 subgoal):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<pi> t / t) has_integral \\<pi> x * ln x - \\<theta> x)\n     {2..x}", "qed (auto simp: has_integral_refl eval_\\<pi> eval_\\<theta>)"], ["", "lemma \\<pi>_conv_\\<theta>_integral:\n  assumes \"x \\<ge> 2\"\n  shows   \"((\\<lambda>t. \\<theta> t / (t * ln t ^ 2)) has_integral (\\<pi> x - \\<theta> x / ln x)) {2..x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}", "proof (cases \"x = 2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}", "case False"], ["proof (state)\nthis:\n  x \\<noteq> 2\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}", "define b where \"b = (\\<lambda>p. ind prime p * ln (real p))\""], ["proof (state)\nthis:\n  b = (\\<lambda>p. ind prime p * ln (real p))\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}", "note [intro] = finite_vimage_real_of_nat_greaterThanAtMost"], ["proof (state)\nthis:\n  finite (real -` {?y<..?x})\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}", "from False and assms"], ["proof (chain)\npicking this:\n  x \\<noteq> 2\n  2 \\<le> x", "have x: \"x > 2\""], ["proof (prove)\nusing this:\n  x \\<noteq> 2\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. 2 < x", "by simp"], ["proof (state)\nthis:\n  2 < x\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}", "have \"((\\<lambda>t. -(sum_upto b t * (-1 / (t * (ln t)\\<^sup>2)))) has_integral\n          -(sum_upto b x * (1 / ln x) - sum_upto b 2 * (1 / ln 2) -\n              (\\<Sum>n\\<in>real -` {2<..x}. b n * (1 / ln (real n))))) {2..x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         - (sum_upto b t * (- 1 / (t * (ln t)\\<^sup>2)))) has_integral\n     - (sum_upto b x * (1 / ln x) - sum_upto b 2 * (1 / ln 2) -\n        (\\<Sum>n\\<in>real -` {2<..x}. b n * (1 / ln (real n)))))\n     {2..x}", "using x"], ["proof (prove)\nusing this:\n  2 < x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         - (sum_upto b t * (- 1 / (t * (ln t)\\<^sup>2)))) has_integral\n     - (sum_upto b x * (1 / ln x) - sum_upto b 2 * (1 / ln 2) -\n        (\\<Sum>n\\<in>real -` {2<..x}. b n * (1 / ln (real n)))))\n     {2..x}", "by (intro has_integral_neg partial_summation_strong[where X = \"{}\"])\n       (auto intro!: continuous_intros derivative_eq_intros\n             simp flip: has_field_derivative_iff_has_vector_derivative simp add: power2_eq_square)"], ["proof (state)\nthis:\n  ((\\<lambda>t.\n       - (sum_upto b t * (- 1 / (t * (ln t)\\<^sup>2)))) has_integral\n   - (sum_upto b x * (1 / ln x) - sum_upto b 2 * (1 / ln 2) -\n      (\\<Sum>n\\<in>real -` {2<..x}. b n * (1 / ln (real n)))))\n   {2..x}\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>t.\n       - (sum_upto b t * (- 1 / (t * (ln t)\\<^sup>2)))) has_integral\n   - (sum_upto b x * (1 / ln x) - sum_upto b 2 * (1 / ln 2) -\n      (\\<Sum>n\\<in>real -` {2<..x}. b n * (1 / ln (real n)))))\n   {2..x}\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}", "have \"sum_upto b = \\<theta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto b = \\<theta>", "by (simp add: \\<theta>_def b_def prime_sum_upto_altdef1 fun_eq_iff)"], ["proof (state)\nthis:\n  sum_upto b = \\<theta>\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}", "also"], ["proof (state)\nthis:\n  sum_upto b = \\<theta>\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}", "have \"\\<theta> x * (1 / ln x) - \\<theta> 2 * (1 / ln 2) - \n                   (\\<Sum>n\\<in>real -` {2<..x}. b n * (1 / ln (real n))) =\n               \\<theta> x * (1 / ln x) - (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * (1 / ln (real n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> x * (1 / ln x) - \\<theta> 2 * (1 / ln 2) -\n    (\\<Sum>n\\<in>real -` {2<..x}. b n * (1 / ln (real n))) =\n    \\<theta> x * (1 / ln x) -\n    (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * (1 / ln (real n)))", "by (subst sum.insert) (auto simp: b_def eval_\\<theta>)"], ["proof (state)\nthis:\n  \\<theta> x * (1 / ln x) - \\<theta> 2 * (1 / ln 2) -\n  (\\<Sum>n\\<in>real -` {2<..x}. b n * (1 / ln (real n))) =\n  \\<theta> x * (1 / ln x) -\n  (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * (1 / ln (real n)))\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}", "also"], ["proof (state)\nthis:\n  \\<theta> x * (1 / ln x) - \\<theta> 2 * (1 / ln 2) -\n  (\\<Sum>n\\<in>real -` {2<..x}. b n * (1 / ln (real n))) =\n  \\<theta> x * (1 / ln x) -\n  (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * (1 / ln (real n)))\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}", "have \"(\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * (1 / ln (real n))) = \\<pi> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * (1 / ln (real n))) =\n    \\<pi> x", "using x"], ["proof (prove)\nusing this:\n  2 < x\n\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * (1 / ln (real n))) =\n    \\<pi> x", "unfolding \\<pi>_def prime_sum_upto_altdef1 sum_upto_def"], ["proof (prove)\nusing this:\n  2 < x\n\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * (1 / ln (real n))) =\n    (\\<Sum>p\\<in>{i. 0 < i \\<and> real i \\<le> x}. ind prime p * 1)", "proof (intro sum.mono_neutral_cong_left ballI, goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. 2 < x \\<Longrightarrow> finite {i. 0 < i \\<and> real i \\<le> x}\n 2. 2 < x \\<Longrightarrow>\n    insert 2 (real -` {2<..x}) \\<subseteq> {i. 0 < i \\<and> real i \\<le> x}\n 3. \\<And>i.\n       \\<lbrakk>2 < x;\n        i \\<in> {i. 0 < i \\<and> real i \\<le> x} -\n                insert 2 (real -` {2<..x})\\<rbrakk>\n       \\<Longrightarrow> ind prime i * 1 = 0\n 4. \\<And>xa.\n       \\<lbrakk>2 < x; xa \\<in> insert 2 (real -` {2<..x})\\<rbrakk>\n       \\<Longrightarrow> b xa * (1 / ln (real xa)) = ind prime xa * 1", "case (3 p)"], ["proof (state)\nthis:\n  2 < x\n  p \\<in> {i. 0 < i \\<and> real i \\<le> x} - insert 2 (real -` {2<..x})\n\ngoal (4 subgoals):\n 1. 2 < x \\<Longrightarrow> finite {i. 0 < i \\<and> real i \\<le> x}\n 2. 2 < x \\<Longrightarrow>\n    insert 2 (real -` {2<..x}) \\<subseteq> {i. 0 < i \\<and> real i \\<le> x}\n 3. \\<And>i.\n       \\<lbrakk>2 < x;\n        i \\<in> {i. 0 < i \\<and> real i \\<le> x} -\n                insert 2 (real -` {2<..x})\\<rbrakk>\n       \\<Longrightarrow> ind prime i * 1 = 0\n 4. \\<And>xa.\n       \\<lbrakk>2 < x; xa \\<in> insert 2 (real -` {2<..x})\\<rbrakk>\n       \\<Longrightarrow> b xa * (1 / ln (real xa)) = ind prime xa * 1", "hence \"p = 1\""], ["proof (prove)\nusing this:\n  2 < x\n  p \\<in> {i. 0 < i \\<and> real i \\<le> x} - insert 2 (real -` {2<..x})\n\ngoal (1 subgoal):\n 1. p = 1", "by auto"], ["proof (state)\nthis:\n  p = 1\n\ngoal (4 subgoals):\n 1. 2 < x \\<Longrightarrow> finite {i. 0 < i \\<and> real i \\<le> x}\n 2. 2 < x \\<Longrightarrow>\n    insert 2 (real -` {2<..x}) \\<subseteq> {i. 0 < i \\<and> real i \\<le> x}\n 3. \\<And>i.\n       \\<lbrakk>2 < x;\n        i \\<in> {i. 0 < i \\<and> real i \\<le> x} -\n                insert 2 (real -` {2<..x})\\<rbrakk>\n       \\<Longrightarrow> ind prime i * 1 = 0\n 4. \\<And>xa.\n       \\<lbrakk>2 < x; xa \\<in> insert 2 (real -` {2<..x})\\<rbrakk>\n       \\<Longrightarrow> b xa * (1 / ln (real xa)) = ind prime xa * 1", "thus ?case"], ["proof (prove)\nusing this:\n  p = 1\n\ngoal (1 subgoal):\n 1. ind prime p * 1 = 0", "by auto"], ["proof (state)\nthis:\n  ind prime p * 1 = 0\n\ngoal (3 subgoals):\n 1. 2 < x \\<Longrightarrow> finite {i. 0 < i \\<and> real i \\<le> x}\n 2. 2 < x \\<Longrightarrow>\n    insert 2 (real -` {2<..x}) \\<subseteq> {i. 0 < i \\<and> real i \\<le> x}\n 3. \\<And>xa.\n       \\<lbrakk>2 < x; xa \\<in> insert 2 (real -` {2<..x})\\<rbrakk>\n       \\<Longrightarrow> b xa * (1 / ln (real xa)) = ind prime xa * 1", "qed (auto simp: b_def)"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * (1 / ln (real n))) =\n  \\<pi> x\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>t. - (\\<theta> t * (- 1 / (t * (ln t)\\<^sup>2)))) has_integral\n   - (\\<theta> x * (1 / ln x) - \\<pi> x))\n   {2..x}", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>t. - (\\<theta> t * (- 1 / (t * (ln t)\\<^sup>2)))) has_integral\n   - (\\<theta> x * (1 / ln x) - \\<pi> x))\n   {2..x}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n   \\<pi> x - \\<theta> x / ln x)\n   {2..x}\n\ngoal (1 subgoal):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n     \\<pi> x - \\<theta> x / ln x)\n     {2..x}", "qed (auto simp: has_integral_refl eval_\\<pi> eval_\\<theta>)"], ["", "lemma integrable_weighted_\\<theta>:\n  assumes \"2 \\<le> a\" \"a \\<le> x\"\n  shows   \"((\\<lambda>t. \\<theta> t / (t * ln t ^ 2)) integrable_on {a..x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) integrable_on {a..x}", "proof (cases \"a < x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a < x \\<Longrightarrow>\n    (\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) integrable_on {a..x}\n 2. \\<not> a < x \\<Longrightarrow>\n    (\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) integrable_on {a..x}", "case True"], ["proof (state)\nthis:\n  a < x\n\ngoal (2 subgoals):\n 1. a < x \\<Longrightarrow>\n    (\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) integrable_on {a..x}\n 2. \\<not> a < x \\<Longrightarrow>\n    (\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) integrable_on {a..x}", "hence \"((\\<lambda>t. \\<theta> t * (1 / (t * ln t ^ 2))) integrable_on {a..x})\""], ["proof (prove)\nusing this:\n  a < x\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. \\<theta> t * (1 / (t * (ln t)\\<^sup>2))) integrable_on\n    {a..x}", "using assms"], ["proof (prove)\nusing this:\n  a < x\n  2 \\<le> a\n  a \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. \\<theta> t * (1 / (t * (ln t)\\<^sup>2))) integrable_on\n    {a..x}", "unfolding \\<theta>_def prime_sum_upto_altdef1"], ["proof (prove)\nusing this:\n  a < x\n  2 \\<le> a\n  a \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<lambda>t.\n        sum_upto (\\<lambda>p. ind prime p * ln (real p)) t *\n        (1 / (t * (ln t)\\<^sup>2))) integrable_on\n    {a..x}", "by (intro partial_summation_integrable_strong[where X = \"{}\" and f = \"\\<lambda>x. -1 / ln x\"])\n       (auto simp flip: has_field_derivative_iff_has_vector_derivative\n             intro!: derivative_eq_intros continuous_intros simp: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>t. \\<theta> t * (1 / (t * (ln t)\\<^sup>2))) integrable_on {a..x}\n\ngoal (2 subgoals):\n 1. a < x \\<Longrightarrow>\n    (\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) integrable_on {a..x}\n 2. \\<not> a < x \\<Longrightarrow>\n    (\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) integrable_on {a..x}", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>t. \\<theta> t * (1 / (t * (ln t)\\<^sup>2))) integrable_on {a..x}\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) integrable_on {a..x}", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) integrable_on {a..x}\n\ngoal (1 subgoal):\n 1. \\<not> a < x \\<Longrightarrow>\n    (\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) integrable_on {a..x}", "qed (insert has_integral_refl[of _ a] assms, auto simp: has_integral_iff)"], ["", "lemma \\<theta>_conv_\\<MM>_integral:\n  assumes \"x \\<ge> 2\"\n  shows  \"(\\<MM> has_integral (\\<MM> x * x - \\<theta> x)) {2..x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}", "proof (cases \"x = 2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}", "case False"], ["proof (state)\nthis:\n  x \\<noteq> 2\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}", "with assms"], ["proof (chain)\npicking this:\n  2 \\<le> x\n  x \\<noteq> 2", "have x: \"x > 2\""], ["proof (prove)\nusing this:\n  2 \\<le> x\n  x \\<noteq> 2\n\ngoal (1 subgoal):\n 1. 2 < x", "by simp"], ["proof (state)\nthis:\n  2 < x\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}", "define b :: \"nat \\<Rightarrow> real\" where \"b = (\\<lambda>p. ind prime p * ln p / p)\""], ["proof (state)\nthis:\n  b = (\\<lambda>p. ind prime p * ln (real p) / real p)\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}", "note [intro] = finite_vimage_real_of_nat_greaterThanAtMost"], ["proof (state)\nthis:\n  finite (real -` {?y<..?x})\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}", "have prime_le_2: \"p = 2\" if \"p \\<le> 2\" \"prime p\" for p :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. p = 2", "using that"], ["proof (prove)\nusing this:\n  p \\<le> 2\n  prime p\n\ngoal (1 subgoal):\n 1. p = 2", "by (auto simp: prime_nat_iff)"], ["proof (state)\nthis:\n  \\<lbrakk>?p \\<le> 2; prime ?p\\<rbrakk> \\<Longrightarrow> ?p = 2\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}", "have \"((\\<lambda>t. sum_upto b t * 1) has_integral sum_upto b x * x - sum_upto b 2 * 2 -\n          (\\<Sum>n\\<in>real -` {2<..x}. b n * real n)) {2..x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. sum_upto b t * 1) has_integral\n     sum_upto b x * x - sum_upto b 2 * 2 -\n     (\\<Sum>n\\<in>real -` {2<..x}. b n * real n))\n     {2..x}", "using x"], ["proof (prove)\nusing this:\n  2 < x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. sum_upto b t * 1) has_integral\n     sum_upto b x * x - sum_upto b 2 * 2 -\n     (\\<Sum>n\\<in>real -` {2<..x}. b n * real n))\n     {2..x}", "by (intro partial_summation_strong[of \"{}\"])\n       (auto simp flip: has_field_derivative_iff_has_vector_derivative\n             intro!: derivative_eq_intros continuous_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>t. sum_upto b t * 1) has_integral\n   sum_upto b x * x - sum_upto b 2 * 2 -\n   (\\<Sum>n\\<in>real -` {2<..x}. b n * real n))\n   {2..x}\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>t. sum_upto b t * 1) has_integral\n   sum_upto b x * x - sum_upto b 2 * 2 -\n   (\\<Sum>n\\<in>real -` {2<..x}. b n * real n))\n   {2..x}\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}", "have \"sum_upto b = \\<MM>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto b = \\<MM>", "by (simp add: fun_eq_iff primes_M_def b_def prime_sum_upto_altdef1)"], ["proof (state)\nthis:\n  sum_upto b = \\<MM>\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}", "also"], ["proof (state)\nthis:\n  sum_upto b = \\<MM>\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}", "have \"\\<MM> x * x - \\<MM> 2 * 2 - (\\<Sum>n\\<in>real -` {2<..x}. b n * real n) =\n               \\<MM> x * x - (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * real n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<MM> x * x - \\<MM> 2 * 2 -\n    (\\<Sum>n\\<in>real -` {2<..x}. b n * real n) =\n    \\<MM> x * x - (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * real n)", "by (subst sum.insert) (auto simp: eval_\\<MM> b_def)"], ["proof (state)\nthis:\n  \\<MM> x * x - \\<MM> 2 * 2 - (\\<Sum>n\\<in>real -` {2<..x}. b n * real n) =\n  \\<MM> x * x - (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * real n)\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}", "also"], ["proof (state)\nthis:\n  \\<MM> x * x - \\<MM> 2 * 2 - (\\<Sum>n\\<in>real -` {2<..x}. b n * real n) =\n  \\<MM> x * x - (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * real n)\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}", "have \"(\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * real n) = \\<theta> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * real n) = \\<theta> x", "unfolding \\<theta>_def prime_sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * real n) =\n    (\\<Sum>p | prime p \\<and> real p \\<le> x. ln (real p))", "using x"], ["proof (prove)\nusing this:\n  2 < x\n\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * real n) =\n    (\\<Sum>p | prime p \\<and> real p \\<le> x. ln (real p))", "by (intro sum.mono_neutral_cong_right) (auto simp: b_def ind_def not_less prime_le_2)"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n * real n) = \\<theta> x\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>t. \\<MM> t * 1) has_integral \\<MM> x * x - \\<theta> x) {2..x}", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>t. \\<MM> t * 1) has_integral \\<MM> x * x - \\<theta> x) {2..x}\n\ngoal (1 subgoal):\n 1. (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}", "by simp"], ["proof (state)\nthis:\n  (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}\n\ngoal (1 subgoal):\n 1. x = 2 \\<Longrightarrow>\n    (\\<MM> has_integral \\<MM> x * x - \\<theta> x) {2..x}", "qed (auto simp: eval_\\<theta> eval_\\<MM>)"], ["", "lemma \\<MM>_conv_\\<theta>_integral:\n  assumes \"x \\<ge> 2\"\n  shows  \"((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral (\\<MM> x - \\<theta> x / x)) {2..x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}", "proof (cases \"x = 2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}", "case False"], ["proof (state)\nthis:\n  x \\<noteq> 2\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}", "with assms"], ["proof (chain)\npicking this:\n  2 \\<le> x\n  x \\<noteq> 2", "have x: \"x > 2\""], ["proof (prove)\nusing this:\n  2 \\<le> x\n  x \\<noteq> 2\n\ngoal (1 subgoal):\n 1. 2 < x", "by simp"], ["proof (state)\nthis:\n  2 < x\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}", "define b :: \"nat \\<Rightarrow> real\" where \"b = (\\<lambda>p. ind prime p * ln p)\""], ["proof (state)\nthis:\n  b = (\\<lambda>p. ind prime p * ln (real p))\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}", "note [intro] = finite_vimage_real_of_nat_greaterThanAtMost"], ["proof (state)\nthis:\n  finite (real -` {?y<..?x})\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}", "have prime_le_2: \"p = 2\" if \"p \\<le> 2\" \"prime p\" for p :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. p = 2", "using that"], ["proof (prove)\nusing this:\n  p \\<le> 2\n  prime p\n\ngoal (1 subgoal):\n 1. p = 2", "by (auto simp: prime_nat_iff)"], ["proof (state)\nthis:\n  \\<lbrakk>?p \\<le> 2; prime ?p\\<rbrakk> \\<Longrightarrow> ?p = 2\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}", "have \"((\\<lambda>t. sum_upto b t * (1 / t^2)) has_integral\n          sum_upto b x * (-1 / x) - sum_upto b 2 * (-1 / 2) -\n          (\\<Sum>n\\<in>real -` {2<..x}. b n * (-1 / real n))) {2..x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. sum_upto b t * (1 / t\\<^sup>2)) has_integral\n     sum_upto b x * (- 1 / x) - sum_upto b 2 * (- 1 / 2) -\n     (\\<Sum>n\\<in>real -` {2<..x}. b n * (- 1 / real n)))\n     {2..x}", "using x"], ["proof (prove)\nusing this:\n  2 < x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. sum_upto b t * (1 / t\\<^sup>2)) has_integral\n     sum_upto b x * (- 1 / x) - sum_upto b 2 * (- 1 / 2) -\n     (\\<Sum>n\\<in>real -` {2<..x}. b n * (- 1 / real n)))\n     {2..x}", "by (intro partial_summation_strong[of \"{}\"])\n       (auto simp flip: has_field_derivative_iff_has_vector_derivative simp: power2_eq_square\n             intro!: derivative_eq_intros continuous_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>t. sum_upto b t * (1 / t\\<^sup>2)) has_integral\n   sum_upto b x * (- 1 / x) - sum_upto b 2 * (- 1 / 2) -\n   (\\<Sum>n\\<in>real -` {2<..x}. b n * (- 1 / real n)))\n   {2..x}\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>t. sum_upto b t * (1 / t\\<^sup>2)) has_integral\n   sum_upto b x * (- 1 / x) - sum_upto b 2 * (- 1 / 2) -\n   (\\<Sum>n\\<in>real -` {2<..x}. b n * (- 1 / real n)))\n   {2..x}\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}", "have \"sum_upto b = \\<theta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto b = \\<theta>", "by (simp add: fun_eq_iff \\<theta>_def b_def prime_sum_upto_altdef1)"], ["proof (state)\nthis:\n  sum_upto b = \\<theta>\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}", "also"], ["proof (state)\nthis:\n  sum_upto b = \\<theta>\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}", "have \"\\<theta> x * (-1 / x) - \\<theta> 2 * (-1 / 2) - (\\<Sum>n\\<in>real -` {2<..x}. b n * (-1 / real n)) =\n               -(\\<theta> x / x - (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n / real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> x * (- 1 / x) - \\<theta> 2 * (- 1 / 2) -\n    (\\<Sum>n\\<in>real -` {2<..x}. b n * (- 1 / real n)) =\n    - (\\<theta> x / x -\n       (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n / real n))", "by (subst sum.insert) (auto simp: eval_\\<theta> b_def sum_negf)"], ["proof (state)\nthis:\n  \\<theta> x * (- 1 / x) - \\<theta> 2 * (- 1 / 2) -\n  (\\<Sum>n\\<in>real -` {2<..x}. b n * (- 1 / real n)) =\n  - (\\<theta> x / x -\n     (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n / real n))\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}", "also"], ["proof (state)\nthis:\n  \\<theta> x * (- 1 / x) - \\<theta> 2 * (- 1 / 2) -\n  (\\<Sum>n\\<in>real -` {2<..x}. b n * (- 1 / real n)) =\n  - (\\<theta> x / x -\n     (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n / real n))\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}", "have \"(\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n / real n) = \\<MM> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n / real n) = \\<MM> x", "unfolding primes_M_def prime_sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n / real n) =\n    (\\<Sum>p | prime p \\<and> real p \\<le> x. ln (real p) / real p)", "using x"], ["proof (prove)\nusing this:\n  2 < x\n\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n / real n) =\n    (\\<Sum>p | prime p \\<and> real p \\<le> x. ln (real p) / real p)", "by (intro sum.mono_neutral_cong_right) (auto simp: b_def ind_def not_less prime_le_2)"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>insert 2 (real -` {2<..x}). b n / real n) = \\<MM> x\n\ngoal (2 subgoals):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}\n 2. x \\<noteq> 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>t. \\<theta> t * (1 / t\\<^sup>2)) has_integral\n   - (\\<theta> x / x - \\<MM> x))\n   {2..x}", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>t. \\<theta> t * (1 / t\\<^sup>2)) has_integral\n   - (\\<theta> x / x - \\<MM> x))\n   {2..x}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n   \\<MM> x - \\<theta> x / x)\n   {2..x}\n\ngoal (1 subgoal):\n 1. x = 2 \\<Longrightarrow>\n    ((\\<lambda>t. \\<theta> t / t\\<^sup>2) has_integral\n     \\<MM> x - \\<theta> x / x)\n     {2..x}", "qed (auto simp: eval_\\<theta> eval_\\<MM>)"], ["", "lemma integrable_primes_M: \"\\<MM> integrable_on {x..y}\" if \"2 \\<le> x\" for x y :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<MM> integrable_on {x..y}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<MM> integrable_on {x..y}", "have \"(\\<lambda>x. \\<MM> x * 1) integrable_on {x..y}\" if \"2 \\<le> x\" \"x < y\" for x y :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<MM> x * 1) integrable_on {x..y}", "unfolding primes_M_def prime_sum_upto_altdef1"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>p. ind prime p * (ln (real p) / real p)) x *\n        1) integrable_on\n    {x..y}", "using that"], ["proof (prove)\nusing this:\n  2 \\<le> x\n  x < y\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>p. ind prime p * (ln (real p) / real p)) x *\n        1) integrable_on\n    {x..y}", "by (intro partial_summation_integrable_strong[where X = \"{}\" and f = \"\\<lambda>x. x\"])\n       (auto simp flip: has_field_derivative_iff_has_vector_derivative\n             intro!: derivative_eq_intros continuous_intros)"], ["proof (state)\nthis:\n  \\<lbrakk>2 \\<le> ?x; ?x < ?y\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. \\<MM> x * 1) integrable_on {?x..?y}\n\ngoal (1 subgoal):\n 1. \\<MM> integrable_on {x..y}", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>2 \\<le> ?x; ?x < ?y\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. \\<MM> x * 1) integrable_on {?x..?y}\n\ngoal (1 subgoal):\n 1. \\<MM> integrable_on {x..y}", "using that has_integral_refl(2)[of \\<MM> x]"], ["proof (prove)\nusing this:\n  \\<lbrakk>2 \\<le> ?x; ?x < ?y\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. \\<MM> x * 1) integrable_on {?x..?y}\n  2 \\<le> x\n  (\\<MM> has_integral 0) {x}\n\ngoal (1 subgoal):\n 1. \\<MM> integrable_on {x..y}", "by (cases x y rule: linorder_cases) auto"], ["proof (state)\nthis:\n  \\<MM> integrable_on {x..y}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Bounds\\<close>"], ["", "lemma \\<theta>_upper_bound_coarse:\n  assumes \"x \\<ge> 1\"\n  shows   \"\\<theta> x \\<le> x * ln x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> x \\<le> x * ln x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<theta> x \\<le> x * ln x", "have \"\\<theta> x \\<le> sum_upto (\\<lambda>_. ln x) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> x \\<le> sum_upto (\\<lambda>_. ln x) x", "unfolding \\<theta>_def prime_sum_upto_altdef1 sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>{i. 0 < i \\<and> real i \\<le> x}.\n       ind prime p * ln (real p))\n    \\<le> (\\<Sum>_\\<in>{i. 0 < i \\<and> real i \\<le> x}. ln x)", "by (intro sum_mono) (auto simp: ind_def)"], ["proof (state)\nthis:\n  \\<theta> x \\<le> sum_upto (\\<lambda>_. ln x) x\n\ngoal (1 subgoal):\n 1. \\<theta> x \\<le> x * ln x", "also"], ["proof (state)\nthis:\n  \\<theta> x \\<le> sum_upto (\\<lambda>_. ln x) x\n\ngoal (1 subgoal):\n 1. \\<theta> x \\<le> x * ln x", "have \"\\<dots> \\<le> real_of_int \\<lfloor>x\\<rfloor> * ln x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>_. ln x) x\n    \\<le> real_of_int \\<lfloor>x\\<rfloor> * ln x", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>_. ln x) x\n    \\<le> real_of_int \\<lfloor>x\\<rfloor> * ln x", "by (simp add: sum_upto_altdef)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>_. ln x) x \\<le> real_of_int \\<lfloor>x\\<rfloor> * ln x\n\ngoal (1 subgoal):\n 1. \\<theta> x \\<le> x * ln x", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>_. ln x) x \\<le> real_of_int \\<lfloor>x\\<rfloor> * ln x\n\ngoal (1 subgoal):\n 1. \\<theta> x \\<le> x * ln x", "have \"\\<dots> \\<le> x * ln x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int \\<lfloor>x\\<rfloor> * ln x \\<le> x * ln x", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. real_of_int \\<lfloor>x\\<rfloor> * ln x \\<le> x * ln x", "by (intro mult_right_mono) auto"], ["proof (state)\nthis:\n  real_of_int \\<lfloor>x\\<rfloor> * ln x \\<le> x * ln x\n\ngoal (1 subgoal):\n 1. \\<theta> x \\<le> x * ln x", "finally"], ["proof (chain)\npicking this:\n  \\<theta> x \\<le> x * ln x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<theta> x \\<le> x * ln x\n\ngoal (1 subgoal):\n 1. \\<theta> x \\<le> x * ln x", "."], ["proof (state)\nthis:\n  \\<theta> x \\<le> x * ln x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<theta>_le_\\<psi>: \"\\<theta> x \\<le> \\<psi> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> x \\<le> \\<psi> x", "proof (cases \"x \\<ge> 2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 2 \\<le> x \\<Longrightarrow> \\<theta> x \\<le> \\<psi> x\n 2. \\<not> 2 \\<le> x \\<Longrightarrow> \\<theta> x \\<le> \\<psi> x", "case False"], ["proof (state)\nthis:\n  \\<not> 2 \\<le> x\n\ngoal (2 subgoals):\n 1. 2 \\<le> x \\<Longrightarrow> \\<theta> x \\<le> \\<psi> x\n 2. \\<not> 2 \\<le> x \\<Longrightarrow> \\<theta> x \\<le> \\<psi> x", "hence \"nat \\<lfloor>x\\<rfloor> = 0 \\<or> nat \\<lfloor>x\\<rfloor> = 1\""], ["proof (prove)\nusing this:\n  \\<not> 2 \\<le> x\n\ngoal (1 subgoal):\n 1. nat \\<lfloor>x\\<rfloor> = 0 \\<or> nat \\<lfloor>x\\<rfloor> = 1", "by linarith"], ["proof (state)\nthis:\n  nat \\<lfloor>x\\<rfloor> = 0 \\<or> nat \\<lfloor>x\\<rfloor> = 1\n\ngoal (2 subgoals):\n 1. 2 \\<le> x \\<Longrightarrow> \\<theta> x \\<le> \\<psi> x\n 2. \\<not> 2 \\<le> x \\<Longrightarrow> \\<theta> x \\<le> \\<psi> x", "thus ?thesis"], ["proof (prove)\nusing this:\n  nat \\<lfloor>x\\<rfloor> = 0 \\<or> nat \\<lfloor>x\\<rfloor> = 1\n\ngoal (1 subgoal):\n 1. \\<theta> x \\<le> \\<psi> x", "by (auto simp: eval_\\<theta>)"], ["proof (state)\nthis:\n  \\<theta> x \\<le> \\<psi> x\n\ngoal (1 subgoal):\n 1. 2 \\<le> x \\<Longrightarrow> \\<theta> x \\<le> \\<psi> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 \\<le> x \\<Longrightarrow> \\<theta> x \\<le> \\<psi> x", "case True"], ["proof (state)\nthis:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. 2 \\<le> x \\<Longrightarrow> \\<theta> x \\<le> \\<psi> x", "hence \"\\<psi> x - \\<theta> x = (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\""], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x =\n    (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))", "by (rule \\<psi>_minus_\\<theta>)"], ["proof (state)\nthis:\n  \\<psi> x - \\<theta> x =\n  (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\n\ngoal (1 subgoal):\n 1. 2 \\<le> x \\<Longrightarrow> \\<theta> x \\<le> \\<psi> x", "also"], ["proof (state)\nthis:\n  \\<psi> x - \\<theta> x =\n  (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\n\ngoal (1 subgoal):\n 1. 2 \\<le> x \\<Longrightarrow> \\<theta> x \\<le> \\<psi> x", "have \"\\<dots> \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x.\n               \\<theta> (root i x))", "by (intro sum_nonneg) auto"], ["proof (state)\nthis:\n  0 \\<le> (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x.\n             \\<theta> (root i x))\n\ngoal (1 subgoal):\n 1. 2 \\<le> x \\<Longrightarrow> \\<theta> x \\<le> \\<psi> x", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> \\<psi> x - \\<theta> x", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> \\<psi> x - \\<theta> x\n\ngoal (1 subgoal):\n 1. \\<theta> x \\<le> \\<psi> x", "by simp"], ["proof (state)\nthis:\n  \\<theta> x \\<le> \\<psi> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<pi>_upper_bound_coarse:\n  assumes \"x \\<ge> 0\"\n  shows   \"\\<pi> x \\<le> x / 3 + 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x / 3 + 2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x / 3 + 2", "have \"{p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>} \\<subseteq> {2, 3} \\<union> {p. p \\<noteq> 1 \\<and> odd p \\<and> \\<not>3 dvd p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n    \\<subseteq> {2, 3} \\<union>\n                {p. p \\<noteq> 1 \\<and>\n                    odd p \\<and>\n                    \\<not> 3 dvd p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}", "using primes_dvd_imp_eq[of \"2 :: nat\"] primes_dvd_imp_eq[of \"3 :: nat\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>prime 2; prime ?q; even ?q\\<rbrakk> \\<Longrightarrow> 2 = ?q\n  \\<lbrakk>prime 3; prime ?q; 3 dvd ?q\\<rbrakk> \\<Longrightarrow> 3 = ?q\n\ngoal (1 subgoal):\n 1. {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n    \\<subseteq> {2, 3} \\<union>\n                {p. p \\<noteq> 1 \\<and>\n                    odd p \\<and>\n                    \\<not> 3 dvd p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}", "by auto"], ["proof (state)\nthis:\n  {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n  \\<subseteq> {2, 3} \\<union>\n              {p. p \\<noteq> 1 \\<and>\n                  odd p \\<and>\n                  \\<not> 3 dvd p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x / 3 + 2", "also"], ["proof (state)\nthis:\n  {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n  \\<subseteq> {2, 3} \\<union>\n              {p. p \\<noteq> 1 \\<and>\n                  odd p \\<and>\n                  \\<not> 3 dvd p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x / 3 + 2", "have \"\\<dots> \\<subseteq> {2, 3} \\<union> ((\\<lambda>k. 6*k+1) ` {0<..<nat \\<lfloor>(x+5)/6\\<rfloor>} \\<union> (\\<lambda>k. 6*k+5) ` {..<nat \\<lfloor>(x+1)/6\\<rfloor>})\"\n    (is \"_ \\<union> ?lhs \\<subseteq> _ \\<union> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {2, 3} \\<union>\n    {p. p \\<noteq> 1 \\<and>\n        odd p \\<and> \\<not> 3 dvd p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n    \\<subseteq> {2, 3} \\<union>\n                ((\\<lambda>k. 6 * k + 1) `\n                 {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n                 (\\<lambda>k. 6 * k + 5) `\n                 {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>})", "proof (intro Un_mono subsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> {2, 3} \\<Longrightarrow> x \\<in> {2, 3}\n 2. \\<And>xa.\n       xa \\<in> {p. p \\<noteq> 1 \\<and>\n                    odd p \\<and>\n                    \\<not> 3 dvd p \\<and>\n                    p \\<le> nat \\<lfloor>x\\<rfloor>} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>k. 6 * k + 1) `\n                {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n                (\\<lambda>k. 6 * k + 5) `\n                {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>}", "fix p :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> {2, 3} \\<Longrightarrow> x \\<in> {2, 3}\n 2. \\<And>xa.\n       xa \\<in> {p. p \\<noteq> 1 \\<and>\n                    odd p \\<and>\n                    \\<not> 3 dvd p \\<and>\n                    p \\<le> nat \\<lfloor>x\\<rfloor>} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>k. 6 * k + 1) `\n                {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n                (\\<lambda>k. 6 * k + 5) `\n                {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>}", "assume \"p \\<in> ?lhs\""], ["proof (state)\nthis:\n  p \\<in> {p. p \\<noteq> 1 \\<and>\n              odd p \\<and>\n              \\<not> 3 dvd p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> {2, 3} \\<Longrightarrow> x \\<in> {2, 3}\n 2. \\<And>xa.\n       xa \\<in> {p. p \\<noteq> 1 \\<and>\n                    odd p \\<and>\n                    \\<not> 3 dvd p \\<and>\n                    p \\<le> nat \\<lfloor>x\\<rfloor>} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>k. 6 * k + 1) `\n                {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n                (\\<lambda>k. 6 * k + 5) `\n                {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>}", "hence p: \"p \\<noteq> 1\" \"odd p\" \"\\<not>3 dvd p\" \"p \\<le> nat \\<lfloor>x\\<rfloor>\""], ["proof (prove)\nusing this:\n  p \\<in> {p. p \\<noteq> 1 \\<and>\n              odd p \\<and>\n              \\<not> 3 dvd p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. (p \\<noteq> 1 &&& odd p) &&&\n    \\<not> 3 dvd p &&& p \\<le> nat \\<lfloor>x\\<rfloor>", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> 1\n  odd p\n  \\<not> 3 dvd p\n  p \\<le> nat \\<lfloor>x\\<rfloor>\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> {2, 3} \\<Longrightarrow> x \\<in> {2, 3}\n 2. \\<And>xa.\n       xa \\<in> {p. p \\<noteq> 1 \\<and>\n                    odd p \\<and>\n                    \\<not> 3 dvd p \\<and>\n                    p \\<le> nat \\<lfloor>x\\<rfloor>} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>k. 6 * k + 1) `\n                {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n                (\\<lambda>k. 6 * k + 5) `\n                {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>}", "from p (1-3)"], ["proof (chain)\npicking this:\n  p \\<noteq> 1\n  odd p\n  \\<not> 3 dvd p", "have \"(\\<exists>k. k > 0 \\<and> p = 6 * k + 1 \\<or> p = 6 * k + 5)\""], ["proof (prove)\nusing this:\n  p \\<noteq> 1\n  odd p\n  \\<not> 3 dvd p\n\ngoal (1 subgoal):\n 1. \\<exists>k. 0 < k \\<and> p = 6 * k + 1 \\<or> p = 6 * k + 5", "by presburger"], ["proof (state)\nthis:\n  \\<exists>k. 0 < k \\<and> p = 6 * k + 1 \\<or> p = 6 * k + 5\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> {2, 3} \\<Longrightarrow> x \\<in> {2, 3}\n 2. \\<And>xa.\n       xa \\<in> {p. p \\<noteq> 1 \\<and>\n                    odd p \\<and>\n                    \\<not> 3 dvd p \\<and>\n                    p \\<le> nat \\<lfloor>x\\<rfloor>} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>k. 6 * k + 1) `\n                {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n                (\\<lambda>k. 6 * k + 5) `\n                {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>}", "then"], ["proof (chain)\npicking this:\n  \\<exists>k. 0 < k \\<and> p = 6 * k + 1 \\<or> p = 6 * k + 5", "obtain k where \"k > 0 \\<and> p = 6 * k + 1 \\<or> p = 6 * k + 5\""], ["proof (prove)\nusing this:\n  \\<exists>k. 0 < k \\<and> p = 6 * k + 1 \\<or> p = 6 * k + 5\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        0 < k \\<and> p = 6 * k + 1 \\<or> p = 6 * k + 5 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 < k \\<and> p = 6 * k + 1 \\<or> p = 6 * k + 5\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> {2, 3} \\<Longrightarrow> x \\<in> {2, 3}\n 2. \\<And>xa.\n       xa \\<in> {p. p \\<noteq> 1 \\<and>\n                    odd p \\<and>\n                    \\<not> 3 dvd p \\<and>\n                    p \\<le> nat \\<lfloor>x\\<rfloor>} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>k. 6 * k + 1) `\n                {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n                (\\<lambda>k. 6 * k + 5) `\n                {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>}", "hence \"p = 6 * k + 1 \\<and> k > 0 \\<and> k < nat \\<lfloor>(x+5)/6\\<rfloor> \\<or> p = 6*k+5 \\<and> k < nat \\<lfloor>(x+1)/6\\<rfloor>\""], ["proof (prove)\nusing this:\n  0 < k \\<and> p = 6 * k + 1 \\<or> p = 6 * k + 5\n\ngoal (1 subgoal):\n 1. p = 6 * k + 1 \\<and>\n    0 < k \\<and> k < nat \\<lfloor>(x + 5) / 6\\<rfloor> \\<or>\n    p = 6 * k + 5 \\<and> k < nat \\<lfloor>(x + 1) / 6\\<rfloor>", "unfolding add_divide_distrib"], ["proof (prove)\nusing this:\n  0 < k \\<and> p = 6 * k + 1 \\<or> p = 6 * k + 5\n\ngoal (1 subgoal):\n 1. p = 6 * k + 1 \\<and>\n    0 < k \\<and> k < nat \\<lfloor>x / 6 + 5 / 6\\<rfloor> \\<or>\n    p = 6 * k + 5 \\<and> k < nat \\<lfloor>x / 6 + 1 / 6\\<rfloor>", "using p(4)"], ["proof (prove)\nusing this:\n  0 < k \\<and> p = 6 * k + 1 \\<or> p = 6 * k + 5\n  p \\<le> nat \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. p = 6 * k + 1 \\<and>\n    0 < k \\<and> k < nat \\<lfloor>x / 6 + 5 / 6\\<rfloor> \\<or>\n    p = 6 * k + 5 \\<and> k < nat \\<lfloor>x / 6 + 1 / 6\\<rfloor>", "by linarith"], ["proof (state)\nthis:\n  p = 6 * k + 1 \\<and>\n  0 < k \\<and> k < nat \\<lfloor>(x + 5) / 6\\<rfloor> \\<or>\n  p = 6 * k + 5 \\<and> k < nat \\<lfloor>(x + 1) / 6\\<rfloor>\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> {2, 3} \\<Longrightarrow> x \\<in> {2, 3}\n 2. \\<And>xa.\n       xa \\<in> {p. p \\<noteq> 1 \\<and>\n                    odd p \\<and>\n                    \\<not> 3 dvd p \\<and>\n                    p \\<le> nat \\<lfloor>x\\<rfloor>} \\<Longrightarrow>\n       xa \\<in> (\\<lambda>k. 6 * k + 1) `\n                {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n                (\\<lambda>k. 6 * k + 5) `\n                {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>}", "thus \"p \\<in> ?rhs\""], ["proof (prove)\nusing this:\n  p = 6 * k + 1 \\<and>\n  0 < k \\<and> k < nat \\<lfloor>(x + 5) / 6\\<rfloor> \\<or>\n  p = 6 * k + 5 \\<and> k < nat \\<lfloor>(x + 1) / 6\\<rfloor>\n\ngoal (1 subgoal):\n 1. p \\<in> (\\<lambda>k. 6 * k + 1) `\n            {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n            (\\<lambda>k. 6 * k + 5) ` {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>}", "by auto"], ["proof (state)\nthis:\n  p \\<in> (\\<lambda>k. 6 * k + 1) `\n          {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n          (\\<lambda>k. 6 * k + 5) ` {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> {2, 3} \\<Longrightarrow> x \\<in> {2, 3}", "qed"], ["proof (state)\nthis:\n  {2, 3} \\<union>\n  {p. p \\<noteq> 1 \\<and>\n      odd p \\<and> \\<not> 3 dvd p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n  \\<subseteq> {2, 3} \\<union>\n              ((\\<lambda>k. 6 * k + 1) `\n               {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n               (\\<lambda>k. 6 * k + 5) `\n               {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>})\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x / 3 + 2", "finally"], ["proof (chain)\npicking this:\n  {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n  \\<subseteq> {2, 3} \\<union>\n              ((\\<lambda>k. 6 * k + 1) `\n               {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n               (\\<lambda>k. 6 * k + 5) `\n               {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>})", "have subset: \"{p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>} \\<subseteq> \\<dots>\" (is \"_ \\<subseteq> ?A\")"], ["proof (prove)\nusing this:\n  {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n  \\<subseteq> {2, 3} \\<union>\n              ((\\<lambda>k. 6 * k + 1) `\n               {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n               (\\<lambda>k. 6 * k + 5) `\n               {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>})\n\ngoal (1 subgoal):\n 1. {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n    \\<subseteq> {2, 3} \\<union>\n                ((\\<lambda>k. 6 * k + 1) `\n                 {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n                 (\\<lambda>k. 6 * k + 5) `\n                 {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>})", "."], ["proof (state)\nthis:\n  {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n  \\<subseteq> {2, 3} \\<union>\n              ((\\<lambda>k. 6 * k + 1) `\n               {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n               (\\<lambda>k. 6 * k + 5) `\n               {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>})\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x / 3 + 2", "have \"\\<pi> x = real (card {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x =\n    real (card {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>})", "by (simp add: \\<pi>_def prime_sum_upto_altdef2)"], ["proof (state)\nthis:\n  \\<pi> x = real (card {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>})\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x / 3 + 2", "also"], ["proof (state)\nthis:\n  \\<pi> x = real (card {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>})\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x / 3 + 2", "have \"card {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>} \\<le> card ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n    \\<le> card\n           ({2, 3} \\<union>\n            ((\\<lambda>k. 6 * k + 1) `\n             {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n             (\\<lambda>k. 6 * k + 5) `\n             {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>}))", "by (intro card_mono subset) auto"], ["proof (state)\nthis:\n  card {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n  \\<le> card\n         ({2, 3} \\<union>\n          ((\\<lambda>k. 6 * k + 1) `\n           {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n           (\\<lambda>k. 6 * k + 5) `\n           {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>}))\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x / 3 + 2", "also"], ["proof (state)\nthis:\n  card {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n  \\<le> card\n         ({2, 3} \\<union>\n          ((\\<lambda>k. 6 * k + 1) `\n           {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n           (\\<lambda>k. 6 * k + 5) `\n           {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>}))\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x / 3 + 2", "have \"\\<dots> \\<le> 2 + (nat \\<lfloor>(x+5)/6\\<rfloor> - 1 + nat \\<lfloor>(x+1)/6\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     ({2, 3} \\<union>\n      ((\\<lambda>k. 6 * k + 1) `\n       {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n       (\\<lambda>k. 6 * k + 5) ` {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>}))\n    \\<le> 2 +\n          (nat \\<lfloor>(x + 5) / 6\\<rfloor> - 1 +\n           nat \\<lfloor>(x + 1) / 6\\<rfloor>)", "by (intro order.trans[OF card_Un_le] add_mono order.trans[OF card_image_le]) auto"], ["proof (state)\nthis:\n  card\n   ({2, 3} \\<union>\n    ((\\<lambda>k. 6 * k + 1) `\n     {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n     (\\<lambda>k. 6 * k + 5) ` {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>}))\n  \\<le> 2 +\n        (nat \\<lfloor>(x + 5) / 6\\<rfloor> - 1 +\n         nat \\<lfloor>(x + 1) / 6\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x / 3 + 2", "also"], ["proof (state)\nthis:\n  card\n   ({2, 3} \\<union>\n    ((\\<lambda>k. 6 * k + 1) `\n     {0<..<nat \\<lfloor>(x + 5) / 6\\<rfloor>} \\<union>\n     (\\<lambda>k. 6 * k + 5) ` {..<nat \\<lfloor>(x + 1) / 6\\<rfloor>}))\n  \\<le> 2 +\n        (nat \\<lfloor>(x + 5) / 6\\<rfloor> - 1 +\n         nat \\<lfloor>(x + 1) / 6\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x / 3 + 2", "have \"\\<dots> \\<le> x / 3 + 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real\n     (2 +\n      (nat \\<lfloor>(x + 5) / 6\\<rfloor> - 1 +\n       nat \\<lfloor>(x + 1) / 6\\<rfloor>))\n    \\<le> x / 3 + 2", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. real\n     (2 +\n      (nat \\<lfloor>(x + 5) / 6\\<rfloor> - 1 +\n       nat \\<lfloor>(x + 1) / 6\\<rfloor>))\n    \\<le> x / 3 + 2", "unfolding add_divide_distrib"], ["proof (prove)\nusing this:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. real\n     (2 +\n      (nat \\<lfloor>x / 6 + 5 / 6\\<rfloor> - 1 +\n       nat \\<lfloor>x / 6 + 1 / 6\\<rfloor>))\n    \\<le> x / 3 + 2", "by (cases \"x \\<ge> 1\", linarith, simp)"], ["proof (state)\nthis:\n  real\n   (2 +\n    (nat \\<lfloor>(x + 5) / 6\\<rfloor> - 1 +\n     nat \\<lfloor>(x + 1) / 6\\<rfloor>))\n  \\<le> x / 3 + 2\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x / 3 + 2", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x y. x \\<le> y \\<Longrightarrow> real x \\<le> real y;\n   \\<And>x y. x \\<le> y \\<Longrightarrow> real x \\<le> real y\\<rbrakk>\n  \\<Longrightarrow> \\<pi> x \\<le> x / 3 + 2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y. x \\<le> y \\<Longrightarrow> real x \\<le> real y;\n   \\<And>x y. x \\<le> y \\<Longrightarrow> real x \\<le> real y\\<rbrakk>\n  \\<Longrightarrow> \\<pi> x \\<le> x / 3 + 2\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> x / 3 + 2", "by simp"], ["proof (state)\nthis:\n  \\<pi> x \\<le> x / 3 + 2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma le_numeral_iff: \"m \\<le> numeral n \\<longleftrightarrow> m = numeral n \\<or> m \\<le> pred_numeral n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (m \\<le> numeral n) = (m = numeral n \\<or> m \\<le> pred_numeral n)", "using numeral_eq_Suc"], ["proof (prove)\nusing this:\n  numeral ?k = Suc (pred_numeral ?k)\n\ngoal (1 subgoal):\n 1. (m \\<le> numeral n) = (m = numeral n \\<or> m \\<le> pred_numeral n)", "by presburger"], ["", "text \\<open>\n  The following nice proof for the upper bound $\\theta(x) \\leq \\ln 4 \\cdot x$ is taken\n  from Otto Forster's lecture notes on Analytic Number Theory~\\cite{forsteranalytic}.\n\\<close>"], ["", "lemma prod_primes_upto_less:\n  defines \"F \\<equiv> (\\<lambda>n. (\\<Prod>{p::nat. prime p \\<and> p \\<le> n}))\"\n  shows   \"n > 0 \\<Longrightarrow> F n < 4 ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> F n < 4 ^ n", "proof (induction n rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; 0 < y\\<rbrakk>\n                   \\<Longrightarrow> F y < 4 ^ y;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> F x < 4 ^ x", "case (less n)"], ["proof (state)\nthis:\n  \\<lbrakk>?y < n; 0 < ?y\\<rbrakk> \\<Longrightarrow> F ?y < 4 ^ ?y\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; 0 < y\\<rbrakk>\n                   \\<Longrightarrow> F y < 4 ^ y;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> F x < 4 ^ x", "have \"n = 0 \\<or> n = 1 \\<or> n = 2 \\<or> n = 3 \\<or> even n \\<and> n \\<ge> 4 \\<or> odd n \\<and> n \\<ge> 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = 0 \\<or>\n    n = 1 \\<or>\n    n = 2 \\<or>\n    n = 3 \\<or> even n \\<and> 4 \\<le> n \\<or> odd n \\<and> 4 \\<le> n", "by presburger"], ["proof (state)\nthis:\n  n = 0 \\<or>\n  n = 1 \\<or>\n  n = 2 \\<or>\n  n = 3 \\<or> even n \\<and> 4 \\<le> n \\<or> odd n \\<and> 4 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; 0 < y\\<rbrakk>\n                   \\<Longrightarrow> F y < 4 ^ y;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> F x < 4 ^ x", "then"], ["proof (chain)\npicking this:\n  n = 0 \\<or>\n  n = 1 \\<or>\n  n = 2 \\<or>\n  n = 3 \\<or> even n \\<and> 4 \\<le> n \\<or> odd n \\<and> 4 \\<le> n", "consider \"n = 0\" | \"n = 1\" | \"n = 2\" | \"n = 3\" | \"even n\" \"n \\<ge> 4\" | \"odd n\" \"n \\<ge> 4\""], ["proof (prove)\nusing this:\n  n = 0 \\<or>\n  n = 1 \\<or>\n  n = 2 \\<or>\n  n = 3 \\<or> even n \\<and> 4 \\<le> n \\<or> odd n \\<and> 4 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n = 0 \\<Longrightarrow> thesis; n = 1 \\<Longrightarrow> thesis;\n     n = 2 \\<Longrightarrow> thesis; n = 3 \\<Longrightarrow> thesis;\n     \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>n = 0 \\<Longrightarrow> ?thesis; n = 1 \\<Longrightarrow> ?thesis;\n   n = 2 \\<Longrightarrow> ?thesis; n = 3 \\<Longrightarrow> ?thesis;\n   \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> ?thesis;\n   \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x; 0 < y\\<rbrakk>\n                   \\<Longrightarrow> F y < 4 ^ y;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> F x < 4 ^ x", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>n = 0 \\<Longrightarrow> ?thesis; n = 1 \\<Longrightarrow> ?thesis;\n   n = 2 \\<Longrightarrow> ?thesis; n = 3 \\<Longrightarrow> ?thesis;\n   \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> ?thesis;\n   \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. F n < 4 ^ n", "proof cases"], ["proof (state)\ngoal (6 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. n = 1 \\<Longrightarrow> F n < 4 ^ n\n 3. n = 2 \\<Longrightarrow> F n < 4 ^ n\n 4. n = 3 \\<Longrightarrow> F n < 4 ^ n\n 5. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 6. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "assume [simp]: \"n = 1\""], ["proof (state)\nthis:\n  n = 1\n\ngoal (6 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. n = 1 \\<Longrightarrow> F n < 4 ^ n\n 3. n = 2 \\<Longrightarrow> F n < 4 ^ n\n 4. n = 3 \\<Longrightarrow> F n < 4 ^ n\n 5. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 6. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "have *: \"{p. prime p \\<and> p \\<le> Suc 0} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. prime p \\<and> p \\<le> Suc 0} = {}", "by (auto dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  {p. prime p \\<and> p \\<le> Suc 0} = {}\n\ngoal (6 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. n = 1 \\<Longrightarrow> F n < 4 ^ n\n 3. n = 2 \\<Longrightarrow> F n < 4 ^ n\n 4. n = 3 \\<Longrightarrow> F n < 4 ^ n\n 5. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 6. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. F n < 4 ^ n", "by (simp add: F_def *)"], ["proof (state)\nthis:\n  F n < 4 ^ n\n\ngoal (5 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. n = 2 \\<Longrightarrow> F n < 4 ^ n\n 3. n = 3 \\<Longrightarrow> F n < 4 ^ n\n 4. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 5. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. n = 2 \\<Longrightarrow> F n < 4 ^ n\n 3. n = 3 \\<Longrightarrow> F n < 4 ^ n\n 4. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 5. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "assume [simp]: \"n = 2\""], ["proof (state)\nthis:\n  n = 2\n\ngoal (5 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. n = 2 \\<Longrightarrow> F n < 4 ^ n\n 3. n = 3 \\<Longrightarrow> F n < 4 ^ n\n 4. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 5. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "have *: \"{p. prime p \\<and> p \\<le> 2} = {2 :: nat}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. prime p \\<and> p \\<le> 2} = {2}", "by (auto simp: le_numeral_iff dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  {p. prime p \\<and> p \\<le> 2} = {2}\n\ngoal (5 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. n = 2 \\<Longrightarrow> F n < 4 ^ n\n 3. n = 3 \\<Longrightarrow> F n < 4 ^ n\n 4. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 5. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "thus ?thesis"], ["proof (prove)\nusing this:\n  {p. prime p \\<and> p \\<le> 2} = {2}\n\ngoal (1 subgoal):\n 1. F n < 4 ^ n", "by (simp add: F_def *)"], ["proof (state)\nthis:\n  F n < 4 ^ n\n\ngoal (4 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. n = 3 \\<Longrightarrow> F n < 4 ^ n\n 3. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 4. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. n = 3 \\<Longrightarrow> F n < 4 ^ n\n 3. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 4. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "assume [simp]: \"n = 3\""], ["proof (state)\nthis:\n  n = 3\n\ngoal (4 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. n = 3 \\<Longrightarrow> F n < 4 ^ n\n 3. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 4. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "have *: \"{p. prime p \\<and> p \\<le> 3} = {2, 3 :: nat}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. prime p \\<and> p \\<le> 3} = {2, 3}", "by (auto simp: le_numeral_iff dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  {p. prime p \\<and> p \\<le> 3} = {2, 3}\n\ngoal (4 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. n = 3 \\<Longrightarrow> F n < 4 ^ n\n 3. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 4. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "thus ?thesis"], ["proof (prove)\nusing this:\n  {p. prime p \\<and> p \\<le> 3} = {2, 3}\n\ngoal (1 subgoal):\n 1. F n < 4 ^ n", "by (simp add: F_def *)"], ["proof (state)\nthis:\n  F n < 4 ^ n\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 3. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 3. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "assume n: \"even n\" \"n \\<ge> 4\""], ["proof (state)\nthis:\n  even n\n  4 \\<le> n\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 3. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "from n"], ["proof (chain)\npicking this:\n  even n\n  4 \\<le> n", "have \"F (n - 1) < 4 ^ (n - 1)\""], ["proof (prove)\nusing this:\n  even n\n  4 \\<le> n\n\ngoal (1 subgoal):\n 1. F (n - 1) < 4 ^ (n - 1)", "by (intro less.IH) auto"], ["proof (state)\nthis:\n  F (n - 1) < 4 ^ (n - 1)\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 3. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "also"], ["proof (state)\nthis:\n  F (n - 1) < 4 ^ (n - 1)\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 3. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "have \"prime p \\<and> p \\<le> n \\<longleftrightarrow> prime p \\<and> p \\<le> n - 1\" for p"], ["proof (prove)\ngoal (1 subgoal):\n 1. (prime p \\<and> p \\<le> n) = (prime p \\<and> p \\<le> n - 1)", "using n prime_odd_nat[of n]"], ["proof (prove)\nusing this:\n  even n\n  4 \\<le> n\n  \\<lbrakk>prime n; 2 < n\\<rbrakk> \\<Longrightarrow> odd n\n\ngoal (1 subgoal):\n 1. (prime p \\<and> p \\<le> n) = (prime p \\<and> p \\<le> n - 1)", "by (cases \"p = n\") auto"], ["proof (state)\nthis:\n  (prime ?p \\<and> ?p \\<le> n) = (prime ?p \\<and> ?p \\<le> n - 1)\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 3. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "hence \"F (n - 1) = F n\""], ["proof (prove)\nusing this:\n  (prime ?p \\<and> ?p \\<le> n) = (prime ?p \\<and> ?p \\<le> n - 1)\n\ngoal (1 subgoal):\n 1. F (n - 1) = F n", "by (simp add: F_def)"], ["proof (state)\nthis:\n  F (n - 1) = F n\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 3. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "also"], ["proof (state)\nthis:\n  F (n - 1) = F n\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 3. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "have \"4 ^ (n - 1) \\<le> (4 ^ n :: nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 ^ (n - 1) \\<le> 4 ^ n", "by (intro power_increasing) auto"], ["proof (state)\nthis:\n  4 ^ (n - 1) \\<le> 4 ^ n\n\ngoal (3 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>even n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n\n 3. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "finally"], ["proof (chain)\npicking this:\n  F n < 4 ^ n", "show ?case"], ["proof (prove)\nusing this:\n  F n < 4 ^ n\n\ngoal (1 subgoal):\n 1. F n < 4 ^ n", "."], ["proof (state)\nthis:\n  F n < 4 ^ n\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "assume n: \"odd n\" \"n \\<ge> 4\""], ["proof (state)\nthis:\n  odd n\n  4 \\<le> n\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "then"], ["proof (chain)\npicking this:\n  odd n\n  4 \\<le> n", "obtain k where k_eq: \"n = Suc (2 * k)\""], ["proof (prove)\nusing this:\n  odd n\n  4 \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>k. n = Suc (2 * k) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: oddE)"], ["proof (state)\nthis:\n  n = Suc (2 * k)\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "from n"], ["proof (chain)\npicking this:\n  odd n\n  4 \\<le> n", "have k: \"k \\<ge> 2\""], ["proof (prove)\nusing this:\n  odd n\n  4 \\<le> n\n\ngoal (1 subgoal):\n 1. 2 \\<le> k", "unfolding k_eq"], ["proof (prove)\nusing this:\n  odd (Suc (2 * k))\n  4 \\<le> Suc (2 * k)\n\ngoal (1 subgoal):\n 1. 2 \\<le> k", "by presburger"], ["proof (state)\nthis:\n  2 \\<le> k\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "have prime_dvd: \"p dvd (n choose k)\" if p: \"prime p\" \"p \\<in> {k+1<..n}\" for p"], ["proof (prove)\ngoal (1 subgoal):\n 1. p dvd n choose k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p dvd n choose k", "from p k n"], ["proof (chain)\npicking this:\n  prime p\n  p \\<in> {k + 1<..n}\n  2 \\<le> k\n  odd n\n  4 \\<le> n", "have \"p dvd pochhammer (k + 2) k\""], ["proof (prove)\nusing this:\n  prime p\n  p \\<in> {k + 1<..n}\n  2 \\<le> k\n  odd n\n  4 \\<le> n\n\ngoal (1 subgoal):\n 1. p dvd pochhammer (k + 2) k", "unfolding pochhammer_prod"], ["proof (prove)\nusing this:\n  prime p\n  p \\<in> {k + 1<..n}\n  2 \\<le> k\n  odd n\n  4 \\<le> n\n\ngoal (1 subgoal):\n 1. p dvd (\\<Prod>i = 0..<k. k + 2 + of_nat i)", "by (subst prime_dvd_prod_iff)\n           (auto intro!: bexI[of _ \"p - k - 2\"] simp: k_eq numeral_2_eq_2 Suc_diff_Suc)"], ["proof (state)\nthis:\n  p dvd pochhammer (k + 2) k\n\ngoal (1 subgoal):\n 1. p dvd n choose k", "also"], ["proof (state)\nthis:\n  p dvd pochhammer (k + 2) k\n\ngoal (1 subgoal):\n 1. p dvd n choose k", "have \"pochhammer (real (k + 2)) k = real ((n choose k) * fact k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pochhammer (real (k + 2)) k = real ((n choose k) * fact k)", "by (simp add: binomial_gbinomial gbinomial_pochhammer' k_eq field_simps)"], ["proof (state)\nthis:\n  pochhammer (real (k + 2)) k = real ((n choose k) * fact k)\n\ngoal (1 subgoal):\n 1. p dvd n choose k", "hence \"pochhammer (k + 2) k = (n choose k) * fact k\""], ["proof (prove)\nusing this:\n  pochhammer (real (k + 2)) k = real ((n choose k) * fact k)\n\ngoal (1 subgoal):\n 1. pochhammer (k + 2) k = (n choose k) * fact k", "unfolding pochhammer_of_nat of_nat_eq_iff"], ["proof (prove)\nusing this:\n  pochhammer (k + 2) k = (n choose k) * fact k\n\ngoal (1 subgoal):\n 1. pochhammer (k + 2) k = (n choose k) * fact k", "."], ["proof (state)\nthis:\n  pochhammer (k + 2) k = (n choose k) * fact k\n\ngoal (1 subgoal):\n 1. p dvd n choose k", "finally"], ["proof (chain)\npicking this:\n  p dvd (n choose k) * fact k", "show \"p dvd (n choose k)\""], ["proof (prove)\nusing this:\n  p dvd (n choose k) * fact k\n\ngoal (1 subgoal):\n 1. p dvd n choose k", "using p"], ["proof (prove)\nusing this:\n  p dvd (n choose k) * fact k\n  prime p\n  p \\<in> {k + 1<..n}\n\ngoal (1 subgoal):\n 1. p dvd n choose k", "by (auto simp: prime_dvd_fact_iff prime_dvd_mult_nat)"], ["proof (state)\nthis:\n  p dvd n choose k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>prime ?p; ?p \\<in> {k + 1<..n}\\<rbrakk>\n  \\<Longrightarrow> ?p dvd n choose k\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "have \"\\<Prod>{p. prime p \\<and> p \\<in> {k+1<..n}} dvd (n choose k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}} dvd n choose k", "proof (rule multiplicity_le_imp_dvd, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}} \\<noteq> 0\n 2. \\<And>p.\n       prime p \\<Longrightarrow>\n       multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n       \\<le> multiplicity p (n choose k)", "case (2 p)"], ["proof (state)\nthis:\n  prime p\n\ngoal (2 subgoals):\n 1. \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}} \\<noteq> 0\n 2. \\<And>p.\n       prime p \\<Longrightarrow>\n       multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n       \\<le> multiplicity p (n choose k)", "thus ?case"], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n    \\<le> multiplicity p (n choose k)", "proof (cases \"p \\<in> {k+1<..n}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>prime p; p \\<in> {k + 1<..n}\\<rbrakk>\n    \\<Longrightarrow> multiplicity p\n                       (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                      \\<le> multiplicity p (n choose k)\n 2. \\<lbrakk>prime p; p \\<notin> {k + 1<..n}\\<rbrakk>\n    \\<Longrightarrow> multiplicity p\n                       (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                      \\<le> multiplicity p (n choose k)", "case False"], ["proof (state)\nthis:\n  p \\<notin> {k + 1<..n}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>prime p; p \\<in> {k + 1<..n}\\<rbrakk>\n    \\<Longrightarrow> multiplicity p\n                       (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                      \\<le> multiplicity p (n choose k)\n 2. \\<lbrakk>prime p; p \\<notin> {k + 1<..n}\\<rbrakk>\n    \\<Longrightarrow> multiplicity p\n                       (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                      \\<le> multiplicity p (n choose k)", "hence \"multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k+1<..n}}) = 0\""], ["proof (prove)\nusing this:\n  p \\<notin> {k + 1<..n}\n\ngoal (1 subgoal):\n 1. multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}}) = 0", "using 2"], ["proof (prove)\nusing this:\n  p \\<notin> {k + 1<..n}\n  prime p\n\ngoal (1 subgoal):\n 1. multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}}) = 0", "by (subst prime_elem_multiplicity_prod_distrib) (auto simp: prime_multiplicity_other)"], ["proof (state)\nthis:\n  multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}}) = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>prime p; p \\<in> {k + 1<..n}\\<rbrakk>\n    \\<Longrightarrow> multiplicity p\n                       (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                      \\<le> multiplicity p (n choose k)\n 2. \\<lbrakk>prime p; p \\<notin> {k + 1<..n}\\<rbrakk>\n    \\<Longrightarrow> multiplicity p\n                       (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                      \\<le> multiplicity p (n choose k)", "thus ?thesis"], ["proof (prove)\nusing this:\n  multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}}) = 0\n\ngoal (1 subgoal):\n 1. multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n    \\<le> multiplicity p (n choose k)", "by auto"], ["proof (state)\nthis:\n  multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n  \\<le> multiplicity p (n choose k)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p \\<in> {k + 1<..n}\\<rbrakk>\n    \\<Longrightarrow> multiplicity p\n                       (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                      \\<le> multiplicity p (n choose k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p \\<in> {k + 1<..n}\\<rbrakk>\n    \\<Longrightarrow> multiplicity p\n                       (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                      \\<le> multiplicity p (n choose k)", "case True"], ["proof (state)\nthis:\n  p \\<in> {k + 1<..n}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p \\<in> {k + 1<..n}\\<rbrakk>\n    \\<Longrightarrow> multiplicity p\n                       (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                      \\<le> multiplicity p (n choose k)", "hence \"multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k+1<..n}}) =\n                 sum (multiplicity p) {p. prime p \\<and> Suc k < p \\<and> p \\<le> n}\""], ["proof (prove)\nusing this:\n  p \\<in> {k + 1<..n}\n\ngoal (1 subgoal):\n 1. multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}}) =\n    sum (multiplicity p) {p. prime p \\<and> Suc k < p \\<and> p \\<le> n}", "using 2"], ["proof (prove)\nusing this:\n  p \\<in> {k + 1<..n}\n  prime p\n\ngoal (1 subgoal):\n 1. multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}}) =\n    sum (multiplicity p) {p. prime p \\<and> Suc k < p \\<and> p \\<le> n}", "by (subst prime_elem_multiplicity_prod_distrib) auto"], ["proof (state)\nthis:\n  multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}}) =\n  sum (multiplicity p) {p. prime p \\<and> Suc k < p \\<and> p \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p \\<in> {k + 1<..n}\\<rbrakk>\n    \\<Longrightarrow> multiplicity p\n                       (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                      \\<le> multiplicity p (n choose k)", "also"], ["proof (state)\nthis:\n  multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}}) =\n  sum (multiplicity p) {p. prime p \\<and> Suc k < p \\<and> p \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p \\<in> {k + 1<..n}\\<rbrakk>\n    \\<Longrightarrow> multiplicity p\n                       (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                      \\<le> multiplicity p (n choose k)", "have \"\\<dots> = sum (multiplicity p) {p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (multiplicity p) {p. prime p \\<and> Suc k < p \\<and> p \\<le> n} =\n    sum (multiplicity p) {p}", "using True 2"], ["proof (prove)\nusing this:\n  p \\<in> {k + 1<..n}\n  prime p\n\ngoal (1 subgoal):\n 1. sum (multiplicity p) {p. prime p \\<and> Suc k < p \\<and> p \\<le> n} =\n    sum (multiplicity p) {p}", "proof (intro sum.mono_neutral_right ballI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>p \\<in> {k + 1<..n}; prime p\\<rbrakk>\n    \\<Longrightarrow> finite {p. prime p \\<and> Suc k < p \\<and> p \\<le> n}\n 2. \\<lbrakk>p \\<in> {k + 1<..n}; prime p\\<rbrakk>\n    \\<Longrightarrow> {p}\n                      \\<subseteq> {p. prime p \\<and>\nSuc k < p \\<and> p \\<le> n}\n 3. \\<And>i.\n       \\<lbrakk>p \\<in> {k + 1<..n}; prime p;\n        i \\<in> {p. prime p \\<and> Suc k < p \\<and> p \\<le> n} -\n                {p}\\<rbrakk>\n       \\<Longrightarrow> multiplicity p i = 0", "fix q :: nat"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>p \\<in> {k + 1<..n}; prime p\\<rbrakk>\n    \\<Longrightarrow> finite {p. prime p \\<and> Suc k < p \\<and> p \\<le> n}\n 2. \\<lbrakk>p \\<in> {k + 1<..n}; prime p\\<rbrakk>\n    \\<Longrightarrow> {p}\n                      \\<subseteq> {p. prime p \\<and>\nSuc k < p \\<and> p \\<le> n}\n 3. \\<And>i.\n       \\<lbrakk>p \\<in> {k + 1<..n}; prime p;\n        i \\<in> {p. prime p \\<and> Suc k < p \\<and> p \\<le> n} -\n                {p}\\<rbrakk>\n       \\<Longrightarrow> multiplicity p i = 0", "assume \"q \\<in> {p. prime p \\<and> Suc k < p \\<and> p \\<le> n} - {p}\""], ["proof (state)\nthis:\n  q \\<in> {p. prime p \\<and> Suc k < p \\<and> p \\<le> n} - {p}\n\ngoal (3 subgoals):\n 1. \\<lbrakk>p \\<in> {k + 1<..n}; prime p\\<rbrakk>\n    \\<Longrightarrow> finite {p. prime p \\<and> Suc k < p \\<and> p \\<le> n}\n 2. \\<lbrakk>p \\<in> {k + 1<..n}; prime p\\<rbrakk>\n    \\<Longrightarrow> {p}\n                      \\<subseteq> {p. prime p \\<and>\nSuc k < p \\<and> p \\<le> n}\n 3. \\<And>i.\n       \\<lbrakk>p \\<in> {k + 1<..n}; prime p;\n        i \\<in> {p. prime p \\<and> Suc k < p \\<and> p \\<le> n} -\n                {p}\\<rbrakk>\n       \\<Longrightarrow> multiplicity p i = 0", "thus \"multiplicity p q = 0\""], ["proof (prove)\nusing this:\n  q \\<in> {p. prime p \\<and> Suc k < p \\<and> p \\<le> n} - {p}\n\ngoal (1 subgoal):\n 1. multiplicity p q = 0", "using 2"], ["proof (prove)\nusing this:\n  q \\<in> {p. prime p \\<and> Suc k < p \\<and> p \\<le> n} - {p}\n  prime p\n\ngoal (1 subgoal):\n 1. multiplicity p q = 0", "by (cases \"p = q\") (auto simp: prime_multiplicity_other)"], ["proof (state)\nthis:\n  multiplicity p q = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>p \\<in> {k + 1<..n}; prime p\\<rbrakk>\n    \\<Longrightarrow> finite {p. prime p \\<and> Suc k < p \\<and> p \\<le> n}\n 2. \\<lbrakk>p \\<in> {k + 1<..n}; prime p\\<rbrakk>\n    \\<Longrightarrow> {p}\n                      \\<subseteq> {p. prime p \\<and>\nSuc k < p \\<and> p \\<le> n}", "qed auto"], ["proof (state)\nthis:\n  sum (multiplicity p) {p. prime p \\<and> Suc k < p \\<and> p \\<le> n} =\n  sum (multiplicity p) {p}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p \\<in> {k + 1<..n}\\<rbrakk>\n    \\<Longrightarrow> multiplicity p\n                       (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                      \\<le> multiplicity p (n choose k)", "also"], ["proof (state)\nthis:\n  sum (multiplicity p) {p. prime p \\<and> Suc k < p \\<and> p \\<le> n} =\n  sum (multiplicity p) {p}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p \\<in> {k + 1<..n}\\<rbrakk>\n    \\<Longrightarrow> multiplicity p\n                       (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                      \\<le> multiplicity p (n choose k)", "have \"\\<dots> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (multiplicity p) {p} = 1", "using 2"], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. sum (multiplicity p) {p} = 1", "by simp"], ["proof (state)\nthis:\n  sum (multiplicity p) {p} = 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p \\<in> {k + 1<..n}\\<rbrakk>\n    \\<Longrightarrow> multiplicity p\n                       (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                      \\<le> multiplicity p (n choose k)", "also"], ["proof (state)\nthis:\n  sum (multiplicity p) {p} = 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p \\<in> {k + 1<..n}\\<rbrakk>\n    \\<Longrightarrow> multiplicity p\n                       (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                      \\<le> multiplicity p (n choose k)", "have \"1 \\<le> multiplicity p (n choose k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> multiplicity p (n choose k)", "using prime_dvd[of p] 2 True"], ["proof (prove)\nusing this:\n  \\<lbrakk>prime p; p \\<in> {k + 1<..n}\\<rbrakk>\n  \\<Longrightarrow> p dvd n choose k\n  prime p\n  p \\<in> {k + 1<..n}\n\ngoal (1 subgoal):\n 1. 1 \\<le> multiplicity p (n choose k)", "by (intro multiplicity_geI) auto"], ["proof (state)\nthis:\n  1 \\<le> multiplicity p (n choose k)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p \\<in> {k + 1<..n}\\<rbrakk>\n    \\<Longrightarrow> multiplicity p\n                       (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                      \\<le> multiplicity p (n choose k)", "finally"], ["proof (chain)\npicking this:\n  multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n  \\<le> multiplicity p (n choose k)", "show ?thesis"], ["proof (prove)\nusing this:\n  multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n  \\<le> multiplicity p (n choose k)\n\ngoal (1 subgoal):\n 1. multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n    \\<le> multiplicity p (n choose k)", "."], ["proof (state)\nthis:\n  multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n  \\<le> multiplicity p (n choose k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  multiplicity p (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n  \\<le> multiplicity p (n choose k)\n\ngoal (1 subgoal):\n 1. \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}} \\<noteq> 0", "qed auto"], ["proof (state)\nthis:\n  \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}} dvd n choose k\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "hence \"\\<Prod>{p. prime p \\<and> p \\<in> {k+1<..n}} \\<le> (n choose k)\""], ["proof (prove)\nusing this:\n  \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}} dvd n choose k\n\ngoal (1 subgoal):\n 1. \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}} \\<le> n choose k", "by (intro dvd_imp_le) (auto simp: k_eq)"], ["proof (state)\nthis:\n  \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}} \\<le> n choose k\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "also"], ["proof (state)\nthis:\n  \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}} \\<le> n choose k\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "have \"\\<dots> = 1 / 2 * (\\<Sum>i\\<in>{k, Suc k}. n choose i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (n choose k) = 1 / 2 * real (sum ((choose) n) {k, Suc k})", "using central_binomial_odd[of n]"], ["proof (prove)\nusing this:\n  odd n \\<Longrightarrow> n choose Suc (n div 2) = n choose n div 2\n\ngoal (1 subgoal):\n 1. real (n choose k) = 1 / 2 * real (sum ((choose) n) {k, Suc k})", "by (simp add: k_eq)"], ["proof (state)\nthis:\n  real (n choose k) = 1 / 2 * real (sum ((choose) n) {k, Suc k})\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "also"], ["proof (state)\nthis:\n  real (n choose k) = 1 / 2 * real (sum ((choose) n) {k, Suc k})\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "have \"(\\<Sum>i\\<in>{k, Suc k}. n choose i) < (\\<Sum>i\\<in>{0, k, Suc k}. n choose i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((choose) n) {k, Suc k} < sum ((choose) n) {0, k, Suc k}", "using k"], ["proof (prove)\nusing this:\n  2 \\<le> k\n\ngoal (1 subgoal):\n 1. sum ((choose) n) {k, Suc k} < sum ((choose) n) {0, k, Suc k}", "by simp"], ["proof (state)\nthis:\n  sum ((choose) n) {k, Suc k} < sum ((choose) n) {0, k, Suc k}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "also"], ["proof (state)\nthis:\n  sum ((choose) n) {k, Suc k} < sum ((choose) n) {0, k, Suc k}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "have \"\\<dots> \\<le> (\\<Sum>i\\<le>n. n choose i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((choose) n) {0, k, Suc k} \\<le> sum ((choose) n) {..n}", "by (intro sum_mono2) (auto simp: k_eq)"], ["proof (state)\nthis:\n  sum ((choose) n) {0, k, Suc k} \\<le> sum ((choose) n) {..n}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "also"], ["proof (state)\nthis:\n  sum ((choose) n) {0, k, Suc k} \\<le> sum ((choose) n) {..n}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "have \"\\<dots> = (1 + 1) ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((choose) n) {..n} = (1 + 1) ^ n", "using binomial[of 1 1 n]"], ["proof (prove)\nusing this:\n  (1 + 1) ^ n = (\\<Sum>k\\<le>n. of_nat (n choose k) * 1 ^ k * 1 ^ (n - k))\n\ngoal (1 subgoal):\n 1. sum ((choose) n) {..n} = (1 + 1) ^ n", "by simp"], ["proof (state)\nthis:\n  sum ((choose) n) {..n} = (1 + 1) ^ n\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "also"], ["proof (state)\nthis:\n  sum ((choose) n) {..n} = (1 + 1) ^ n\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "have \"1 / 2 * \\<dots> = real (4 ^ k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / 2 * real ((1 + 1) ^ n) = real (4 ^ k)", "by (simp add: k_eq power_mult)"], ["proof (state)\nthis:\n  1 / 2 * real ((1 + 1) ^ n) = real (4 ^ k)\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x y. x \\<le> y \\<Longrightarrow> real x \\<le> real y;\n   \\<And>x y. x < y \\<Longrightarrow> 1 / 2 * real x < 1 / 2 * real y;\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      1 / 2 * real x \\<le> 1 / 2 * real y\\<rbrakk>\n  \\<Longrightarrow> real (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                    < real (4 ^ k)", "have less: \"(\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}}) < 4 ^ k\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y. x \\<le> y \\<Longrightarrow> real x \\<le> real y;\n   \\<And>x y. x < y \\<Longrightarrow> 1 / 2 * real x < 1 / 2 * real y;\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      1 / 2 * real x \\<le> 1 / 2 * real y\\<rbrakk>\n  \\<Longrightarrow> real (\\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}})\n                    < real (4 ^ k)\n\ngoal (1 subgoal):\n 1. \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}} < 4 ^ k", "unfolding of_nat_less_iff"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y. x \\<le> y \\<Longrightarrow> real x \\<le> real y;\n   \\<And>x y. x < y \\<Longrightarrow> 1 / 2 * real x < 1 / 2 * real y;\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      1 / 2 * real x \\<le> 1 / 2 * real y\\<rbrakk>\n  \\<Longrightarrow> \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}} < 4 ^ k\n\ngoal (1 subgoal):\n 1. \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}} < 4 ^ k", "by simp"], ["proof (state)\nthis:\n  \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}} < 4 ^ k\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "have \"F n = F (Suc k) * (\\<Prod>{p. prime p \\<and> p \\<in> {k+1<..n}})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F n = F (Suc k) * \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}}", "unfolding F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Prod>{p. prime p \\<and> p \\<le> n} =\n    \\<Prod>{p. prime p \\<and> p \\<le> Suc k} *\n    \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}}", "by (subst prod.union_disjoint [symmetric]) (auto intro!: prod.cong simp: k_eq)"], ["proof (state)\nthis:\n  F n = F (Suc k) * \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "also"], ["proof (state)\nthis:\n  F n = F (Suc k) * \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "have \"\\<dots> < 4 ^ Suc k * 4 ^ k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (Suc k) * \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}}\n    < 4 ^ Suc k * 4 ^ k", "using n"], ["proof (prove)\nusing this:\n  odd n\n  4 \\<le> n\n\ngoal (1 subgoal):\n 1. F (Suc k) * \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}}\n    < 4 ^ Suc k * 4 ^ k", "by (intro mult_strict_mono less less.IH) (auto simp: k_eq)"], ["proof (state)\nthis:\n  F (Suc k) * \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}}\n  < 4 ^ Suc k * 4 ^ k\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "also"], ["proof (state)\nthis:\n  F (Suc k) * \\<Prod>{p. prime p \\<and> p \\<in> {k + 1<..n}}\n  < 4 ^ Suc k * 4 ^ k\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "have \"\\<dots> = 4 ^ (Suc k + k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 ^ Suc k * 4 ^ k = 4 ^ (Suc k + k)", "by (simp add: power_add)"], ["proof (state)\nthis:\n  4 ^ Suc k * 4 ^ k = 4 ^ (Suc k + k)\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "also"], ["proof (state)\nthis:\n  4 ^ Suc k * 4 ^ k = 4 ^ (Suc k + k)\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "have \"Suc k + k = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc k + k = n", "by (simp add: k_eq)"], ["proof (state)\nthis:\n  Suc k + k = n\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n\n 2. \\<lbrakk>odd n; 4 \\<le> n\\<rbrakk> \\<Longrightarrow> F n < 4 ^ n", "finally"], ["proof (chain)\npicking this:\n  F n < 4 ^ n", "show ?case"], ["proof (prove)\nusing this:\n  F n < 4 ^ n\n\ngoal (1 subgoal):\n 1. F n < 4 ^ n", "."], ["proof (state)\nthis:\n  F n < 4 ^ n\n\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow> F n < 4 ^ n", "qed (insert less.prems, auto)"], ["proof (state)\nthis:\n  F n < 4 ^ n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<theta>_upper_bound:\n  assumes x: \"x \\<ge> 1\"\n  shows   \"\\<theta> x < ln 4 * x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> x < ln 4 * x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<theta> x < ln 4 * x", "have \"4 powr (\\<theta> x / ln 4) = (\\<Prod>p | prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>. 4 powr (log 4 (real p)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 powr (\\<theta> x / ln 4) =\n    (\\<Prod>p\\<in>{p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}.\n       4 powr log 4 (real p))", "by (simp add: \\<theta>_def powr_sum prime_sum_upto_altdef2 sum_divide_distrib log_def)"], ["proof (state)\nthis:\n  4 powr (\\<theta> x / ln 4) =\n  (\\<Prod>p\\<in>{p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}.\n     4 powr log 4 (real p))\n\ngoal (1 subgoal):\n 1. \\<theta> x < ln 4 * x", "also"], ["proof (state)\nthis:\n  4 powr (\\<theta> x / ln 4) =\n  (\\<Prod>p\\<in>{p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}.\n     4 powr log 4 (real p))\n\ngoal (1 subgoal):\n 1. \\<theta> x < ln 4 * x", "have \"\\<dots> = (\\<Prod>p | prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>. real p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}.\n       4 powr log 4 (real p)) =\n    prod real {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}", "by (intro prod.cong) (auto dest: prime_gt_1_nat)"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}.\n     4 powr log 4 (real p)) =\n  prod real {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. \\<theta> x < ln 4 * x", "also"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}.\n     4 powr log 4 (real p)) =\n  prod real {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. \\<theta> x < ln 4 * x", "have \"\\<dots> = real (\\<Prod>p | prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>. p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod real {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>} =\n    real (\\<Prod>{p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>})", "by simp"], ["proof (state)\nthis:\n  prod real {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>} =\n  real (\\<Prod>{p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>})\n\ngoal (1 subgoal):\n 1. \\<theta> x < ln 4 * x", "also"], ["proof (state)\nthis:\n  prod real {p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>} =\n  real (\\<Prod>{p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>})\n\ngoal (1 subgoal):\n 1. \\<theta> x < ln 4 * x", "have \"(\\<Prod>p | prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>. p) < 4 ^ nat \\<lfloor>x\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Prod>{p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n    < 4 ^ nat \\<lfloor>x\\<rfloor>", "using x"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<Prod>{p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n    < 4 ^ nat \\<lfloor>x\\<rfloor>", "by (intro prod_primes_upto_less) auto"], ["proof (state)\nthis:\n  \\<Prod>{p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n  < 4 ^ nat \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<theta> x < ln 4 * x", "also"], ["proof (state)\nthis:\n  \\<Prod>{p. prime p \\<and> p \\<le> nat \\<lfloor>x\\<rfloor>}\n  < 4 ^ nat \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<theta> x < ln 4 * x", "have \"\\<dots> = 4 powr real (nat \\<lfloor>x\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (4 ^ nat \\<lfloor>x\\<rfloor>) =\n    4 powr real (nat \\<lfloor>x\\<rfloor>)", "using x"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. real (4 ^ nat \\<lfloor>x\\<rfloor>) =\n    4 powr real (nat \\<lfloor>x\\<rfloor>)", "by (subst powr_realpow) auto"], ["proof (state)\nthis:\n  real (4 ^ nat \\<lfloor>x\\<rfloor>) = 4 powr real (nat \\<lfloor>x\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<theta> x < ln 4 * x", "also"], ["proof (state)\nthis:\n  real (4 ^ nat \\<lfloor>x\\<rfloor>) = 4 powr real (nat \\<lfloor>x\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<theta> x < ln 4 * x", "have \"\\<dots> \\<le> 4 powr x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 powr real (nat \\<lfloor>x\\<rfloor>) \\<le> 4 powr x", "using x"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. 4 powr real (nat \\<lfloor>x\\<rfloor>) \\<le> 4 powr x", "by (intro powr_mono) auto"], ["proof (state)\nthis:\n  4 powr real (nat \\<lfloor>x\\<rfloor>) \\<le> 4 powr x\n\ngoal (1 subgoal):\n 1. \\<theta> x < ln 4 * x", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y. x < y \\<Longrightarrow> real x < real y) \\<Longrightarrow>\n  4 powr (\\<theta> x / ln 4) < 4 powr x", "have \"4 powr (\\<theta> x / ln 4) < 4 powr x\""], ["proof (prove)\nusing this:\n  (\\<And>x y. x < y \\<Longrightarrow> real x < real y) \\<Longrightarrow>\n  4 powr (\\<theta> x / ln 4) < 4 powr x\n\ngoal (1 subgoal):\n 1. 4 powr (\\<theta> x / ln 4) < 4 powr x", "by simp"], ["proof (state)\nthis:\n  4 powr (\\<theta> x / ln 4) < 4 powr x\n\ngoal (1 subgoal):\n 1. \\<theta> x < ln 4 * x", "thus \"\\<theta> x < ln 4 * x\""], ["proof (prove)\nusing this:\n  4 powr (\\<theta> x / ln 4) < 4 powr x\n\ngoal (1 subgoal):\n 1. \\<theta> x < ln 4 * x", "by (subst (asm) powr_less_cancel_iff) (auto simp: field_simps)"], ["proof (state)\nthis:\n  \\<theta> x < ln 4 * x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<theta>_bigo: \"\\<theta> \\<in> O(\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> \\<in> O(\\<lambda>x. x)", "by (intro le_imp_bigo_real[of \"ln 4\"] eventually_mono[OF eventually_ge_at_top[of 1]]\n            less_imp_le[OF \\<theta>_upper_bound]) auto"], ["", "lemma \\<psi>_minus_\\<theta>_bound:\n  assumes x: \"x \\<ge> 2\"\n  shows   \"\\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "have \"\\<psi> x - \\<theta> x = (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x =\n    (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))", "using x"], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x =\n    (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))", "by (rule \\<psi>_minus_\\<theta>)"], ["proof (state)\nthis:\n  \\<psi> x - \\<theta> x =\n  (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "also"], ["proof (state)\nthis:\n  \\<psi> x - \\<theta> x =\n  (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "have \"\\<dots> \\<le> (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. ln 4 * root i x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\n    \\<le> (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. ln 4 * root i x)", "using x"], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\n    \\<le> (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. ln 4 * root i x)", "by (intro sum_mono less_imp_le[OF \\<theta>_upper_bound]) auto"], ["proof (state)\nthis:\n  (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\n  \\<le> (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. ln 4 * root i x)\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "also"], ["proof (state)\nthis:\n  (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. \\<theta> (root i x))\n  \\<le> (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. ln 4 * root i x)\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "have \"\\<dots> \\<le> (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. ln 4 * root 2 x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. ln 4 * root i x)\n    \\<le> (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. ln 4 * root 2 x)", "using x"], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. ln 4 * root i x)\n    \\<le> (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. ln 4 * root 2 x)", "by (intro sum_mono mult_mono) (auto simp: le_log_iff powr_realpow intro!: real_root_decreasing)"], ["proof (state)\nthis:\n  (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. ln 4 * root i x)\n  \\<le> (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. ln 4 * root 2 x)\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "also"], ["proof (state)\nthis:\n  (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. ln 4 * root i x)\n  \\<le> (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. ln 4 * root 2 x)\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "have \"\\<dots> = card {i. 2 \\<le> i \\<and> real i \\<le> log 2 x} * ln 4 * sqrt x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. ln 4 * root 2 x) =\n    real (card {i. 2 \\<le> i \\<and> real i \\<le> log 2 x}) * ln 4 * sqrt x", "by (simp add: sqrt_def)"], ["proof (state)\nthis:\n  (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. ln 4 * root 2 x) =\n  real (card {i. 2 \\<le> i \\<and> real i \\<le> log 2 x}) * ln 4 * sqrt x\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "also"], ["proof (state)\nthis:\n  (\\<Sum>i | 2 \\<le> i \\<and> real i \\<le> log 2 x. ln 4 * root 2 x) =\n  real (card {i. 2 \\<le> i \\<and> real i \\<le> log 2 x}) * ln 4 * sqrt x\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "have \"{i. 2 \\<le> i \\<and> real i \\<le> log 2 x} = {2..nat \\<lfloor>log 2 x\\<rfloor>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. 2 \\<le> i \\<and> real i \\<le> log 2 x} =\n    {2..nat \\<lfloor>log 2 x\\<rfloor>}", "by (auto simp: le_nat_iff' le_floor_iff)"], ["proof (state)\nthis:\n  {i. 2 \\<le> i \\<and> real i \\<le> log 2 x} =\n  {2..nat \\<lfloor>log 2 x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "also"], ["proof (state)\nthis:\n  {i. 2 \\<le> i \\<and> real i \\<le> log 2 x} =\n  {2..nat \\<lfloor>log 2 x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "have \"log 2 x \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> log 2 x", "using x"], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. 1 \\<le> log 2 x", "by (simp add: le_log_iff)"], ["proof (state)\nthis:\n  1 \\<le> log 2 x\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "hence \"real (nat \\<lfloor>log 2 x\\<rfloor> - 1) \\<le> log 2 x\""], ["proof (prove)\nusing this:\n  1 \\<le> log 2 x\n\ngoal (1 subgoal):\n 1. real (nat \\<lfloor>log 2 x\\<rfloor> - 1) \\<le> log 2 x", "using x"], ["proof (prove)\nusing this:\n  1 \\<le> log 2 x\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. real (nat \\<lfloor>log 2 x\\<rfloor> - 1) \\<le> log 2 x", "by linarith"], ["proof (state)\nthis:\n  real (nat \\<lfloor>log 2 x\\<rfloor> - 1) \\<le> log 2 x\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "hence \"card {2..nat \\<lfloor>log 2 x\\<rfloor>} \\<le> log 2 x\""], ["proof (prove)\nusing this:\n  real (nat \\<lfloor>log 2 x\\<rfloor> - 1) \\<le> log 2 x\n\ngoal (1 subgoal):\n 1. real (card {2..nat \\<lfloor>log 2 x\\<rfloor>}) \\<le> log 2 x", "by simp"], ["proof (state)\nthis:\n  real (card {2..nat \\<lfloor>log 2 x\\<rfloor>}) \\<le> log 2 x\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "also"], ["proof (state)\nthis:\n  real (card {2..nat \\<lfloor>log 2 x\\<rfloor>}) \\<le> log 2 x\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "have \"ln (2 * 2 :: real) = 2 * ln 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (2 * 2) = 2 * ln 2", "by (subst ln_mult) auto"], ["proof (state)\nthis:\n  ln (2 * 2) = 2 * ln 2\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "hence \"log 2 x * ln 4 * sqrt x = 2 * ln x * sqrt x\""], ["proof (prove)\nusing this:\n  ln (2 * 2) = 2 * ln 2\n\ngoal (1 subgoal):\n 1. log 2 x * ln 4 * sqrt x = 2 * ln x * sqrt x", "using x"], ["proof (prove)\nusing this:\n  ln (2 * 2) = 2 * ln 2\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. log 2 x * ln 4 * sqrt x = 2 * ln x * sqrt x", "by (simp add: ln_sqrt log_def power2_eq_square field_simps)"], ["proof (state)\nthis:\n  log 2 x * ln 4 * sqrt x = 2 * ln x * sqrt x\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "finally"], ["proof (chain)\npicking this:\n  (\\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      xa * ln 4 * sqrt x \\<le> y * ln 4 * sqrt x) \\<Longrightarrow>\n  \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      xa * ln 4 * sqrt x \\<le> y * ln 4 * sqrt x) \\<Longrightarrow>\n  \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "using x"], ["proof (prove)\nusing this:\n  (\\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      xa * ln 4 * sqrt x \\<le> y * ln 4 * sqrt x) \\<Longrightarrow>\n  \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x", "by (simp add: mult_right_mono)"], ["proof (state)\nthis:\n  \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<psi>_minus_\\<theta>_bigo: \"(\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. ln x * sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. ln x * sqrt x)", "proof (intro bigoI[of _ \"2\"] eventually_mono[OF eventually_ge_at_top[of 2]])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       2 \\<le> x \\<Longrightarrow>\n       norm (\\<psi> x - \\<theta> x) \\<le> 2 * norm (ln x * sqrt x)", "fix x :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       2 \\<le> x \\<Longrightarrow>\n       norm (\\<psi> x - \\<theta> x) \\<le> 2 * norm (ln x * sqrt x)", "assume \"x \\<ge> 2\""], ["proof (state)\nthis:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       2 \\<le> x \\<Longrightarrow>\n       norm (\\<psi> x - \\<theta> x) \\<le> 2 * norm (ln x * sqrt x)", "thus \"norm (\\<psi> x - \\<theta> x) \\<le> 2 * norm (ln x * sqrt x)\""], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. norm (\\<psi> x - \\<theta> x) \\<le> 2 * norm (ln x * sqrt x)", "using \\<psi>_minus_\\<theta>_bound[of x] \\<theta>_le_\\<psi>[of x]"], ["proof (prove)\nusing this:\n  2 \\<le> x\n  2 \\<le> x \\<Longrightarrow> \\<psi> x - \\<theta> x \\<le> 2 * ln x * sqrt x\n  \\<theta> x \\<le> \\<psi> x\n\ngoal (1 subgoal):\n 1. norm (\\<psi> x - \\<theta> x) \\<le> 2 * norm (ln x * sqrt x)", "by simp"], ["proof (state)\nthis:\n  norm (\\<psi> x - \\<theta> x) \\<le> 2 * norm (ln x * sqrt x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<psi>_bigo: \"\\<psi> \\<in> O(\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> \\<in> O(\\<lambda>x. x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<psi> \\<in> O(\\<lambda>x. x)", "have \"(\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. ln x * sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. ln x * sqrt x)", "by (rule \\<psi>_minus_\\<theta>_bigo)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. ln x * sqrt x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<in> O(\\<lambda>x. x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. ln x * sqrt x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<in> O(\\<lambda>x. x)", "have \"(\\<lambda>x. ln x * sqrt x) \\<in> O(\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln x * sqrt x) \\<in> O(\\<lambda>x. x)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. ln x * sqrt x) \\<in> O(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<in> O(\\<lambda>x. x)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. x)", "have \"(\\<lambda>x. \\<psi> x - \\<theta> x + \\<theta> x) \\<in> O(\\<lambda>x. x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<psi> x - \\<theta> x + \\<theta> x) \\<in> O(\\<lambda>x. x)", "by (rule sum_in_bigo) (fact \\<theta>_bigo)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<psi> x - \\<theta> x + \\<theta> x) \\<in> O(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<in> O(\\<lambda>x. x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<psi> x - \\<theta> x + \\<theta> x) \\<in> O(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<in> O(\\<lambda>x. x)", "by simp"], ["proof (state)\nthis:\n  \\<psi> \\<in> O(\\<lambda>x. x)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We shall now attempt to get some more concrete bounds on the difference\n  between $\\pi(x)$ and $\\theta(x)/\\ln x$ These will be essential in showing the Prime\n  Number Theorem later.\n\n  We first need some bounds on the integral\n  \\[\\int\\nolimits_2^x \\frac{1}{\\ln^2 t}\\,\\mathrm{d}t\\]\n  in order to bound the contribution of the remainder term. This integral actually has an\n  antiderivative in terms of the logarithmic integral $\\textrm{li}(x)$, but since we do not have a\n  formalisation of it in Isabelle, we will instead use the following ad-hoc bound given by Apostol:\n\\<close>"], ["", "lemma integral_one_over_log_squared_bound:\n  assumes x: \"x \\<ge> 4\"\n  shows   \"integral {2..x} (\\<lambda>t. 1 / ln t ^ 2) \\<le> sqrt x / ln 2 ^ 2 + 4 * x / ln x ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2", "from x"], ["proof (chain)\npicking this:\n  4 \\<le> x", "have \"x * 1 \\<le> x ^ 2\""], ["proof (prove)\nusing this:\n  4 \\<le> x\n\ngoal (1 subgoal):\n 1. x * 1 \\<le> x\\<^sup>2", "unfolding power2_eq_square"], ["proof (prove)\nusing this:\n  4 \\<le> x\n\ngoal (1 subgoal):\n 1. x * 1 \\<le> x * x", "by (intro mult_left_mono) auto"], ["proof (state)\nthis:\n  x * 1 \\<le> x\\<^sup>2\n\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2", "with x"], ["proof (chain)\npicking this:\n  4 \\<le> x\n  x * 1 \\<le> x\\<^sup>2", "have x': \"2 \\<le> sqrt x\" \"sqrt x \\<le> x\""], ["proof (prove)\nusing this:\n  4 \\<le> x\n  x * 1 \\<le> x\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 \\<le> sqrt x &&& sqrt x \\<le> x", "by (auto simp: real_sqrt_le_iff' intro!: real_le_rsqrt)"], ["proof (state)\nthis:\n  2 \\<le> sqrt x\n  sqrt x \\<le> x\n\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2", "have \"integral {2..x} (\\<lambda>t. 1 / ln t ^ 2) =\n          integral {2..sqrt x} (\\<lambda>t. 1 / ln t ^ 2) + integral {sqrt x..x} (\\<lambda>t. 1 / ln t ^ 2)\"\n    (is \"_ = ?I1 + ?I2\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2) =\n    integral {2..sqrt x} (\\<lambda>t. 1 / (ln t)\\<^sup>2) +\n    integral {sqrt x..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)", "using x x'"], ["proof (prove)\nusing this:\n  4 \\<le> x\n  2 \\<le> sqrt x\n  sqrt x \\<le> x\n\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2) =\n    integral {2..sqrt x} (\\<lambda>t. 1 / (ln t)\\<^sup>2) +\n    integral {sqrt x..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)", "by (intro Henstock_Kurzweil_Integration.integral_combine [symmetric] integrable_continuous_real)\n       (auto intro!: continuous_intros)"], ["proof (state)\nthis:\n  integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2) =\n  integral {2..sqrt x} (\\<lambda>t. 1 / (ln t)\\<^sup>2) +\n  integral {sqrt x..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2", "also"], ["proof (state)\nthis:\n  integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2) =\n  integral {2..sqrt x} (\\<lambda>t. 1 / (ln t)\\<^sup>2) +\n  integral {sqrt x..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2", "have \"?I1 \\<le> integral {2..sqrt x} (\\<lambda>_. 1 / ln 2 ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {2..sqrt x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> integral {2..sqrt x} (\\<lambda>_. 1 / (ln 2)\\<^sup>2)", "using x"], ["proof (prove)\nusing this:\n  4 \\<le> x\n\ngoal (1 subgoal):\n 1. integral {2..sqrt x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> integral {2..sqrt x} (\\<lambda>_. 1 / (ln 2)\\<^sup>2)", "by (intro integral_le integrable_continuous_real divide_left_mono\n              power_mono continuous_intros) auto"], ["proof (state)\nthis:\n  integral {2..sqrt x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n  \\<le> integral {2..sqrt x} (\\<lambda>_. 1 / (ln 2)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2", "also"], ["proof (state)\nthis:\n  integral {2..sqrt x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n  \\<le> integral {2..sqrt x} (\\<lambda>_. 1 / (ln 2)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2", "have \"\\<dots> \\<le> sqrt x / ln 2 ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {2..sqrt x} (\\<lambda>_. 1 / (ln 2)\\<^sup>2)\n    \\<le> sqrt x / (ln 2)\\<^sup>2", "using x'"], ["proof (prove)\nusing this:\n  2 \\<le> sqrt x\n  sqrt x \\<le> x\n\ngoal (1 subgoal):\n 1. integral {2..sqrt x} (\\<lambda>_. 1 / (ln 2)\\<^sup>2)\n    \\<le> sqrt x / (ln 2)\\<^sup>2", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  integral {2..sqrt x} (\\<lambda>_. 1 / (ln 2)\\<^sup>2)\n  \\<le> sqrt x / (ln 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2", "also"], ["proof (state)\nthis:\n  integral {2..sqrt x} (\\<lambda>_. 1 / (ln 2)\\<^sup>2)\n  \\<le> sqrt x / (ln 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2", "have \"?I2 \\<le> integral {sqrt x..x} (\\<lambda>t. 1 / ln (sqrt x) ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {sqrt x..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> integral {sqrt x..x} (\\<lambda>t. 1 / (ln (sqrt x))\\<^sup>2)", "using x'"], ["proof (prove)\nusing this:\n  2 \\<le> sqrt x\n  sqrt x \\<le> x\n\ngoal (1 subgoal):\n 1. integral {sqrt x..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> integral {sqrt x..x} (\\<lambda>t. 1 / (ln (sqrt x))\\<^sup>2)", "by (intro integral_le integrable_continuous_real divide_left_mono\n              power_mono continuous_intros) auto"], ["proof (state)\nthis:\n  integral {sqrt x..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n  \\<le> integral {sqrt x..x} (\\<lambda>t. 1 / (ln (sqrt x))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2", "also"], ["proof (state)\nthis:\n  integral {sqrt x..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n  \\<le> integral {sqrt x..x} (\\<lambda>t. 1 / (ln (sqrt x))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2", "have \"\\<dots> \\<le> 4 * x / ln x ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {sqrt x..x} (\\<lambda>t. 1 / (ln (sqrt x))\\<^sup>2)\n    \\<le> 4 * x / (ln x)\\<^sup>2", "using x'"], ["proof (prove)\nusing this:\n  2 \\<le> sqrt x\n  sqrt x \\<le> x\n\ngoal (1 subgoal):\n 1. integral {sqrt x..x} (\\<lambda>t. 1 / (ln (sqrt x))\\<^sup>2)\n    \\<le> 4 * x / (ln x)\\<^sup>2", "by (simp add: ln_sqrt field_simps)"], ["proof (state)\nthis:\n  integral {sqrt x..x} (\\<lambda>t. 1 / (ln (sqrt x))\\<^sup>2)\n  \\<le> 4 * x / (ln x)\\<^sup>2\n\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>xa y.\n              xa \\<le> y \\<Longrightarrow>\n              xa + integral {sqrt x..x} (\\<lambda>uu_. 1 / (ln uu_)\\<^sup>2)\n              \\<le> y +\n                    integral {sqrt x..x}\n                     (\\<lambda>uu_. 1 / (ln uu_)\\<^sup>2);\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      xa + integral {sqrt x..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n      \\<le> y + integral {sqrt x..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2);\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      sqrt x / (ln 2)\\<^sup>2 + xa \\<le> sqrt x / (ln 2)\\<^sup>2 + y;\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      sqrt x / (ln 2)\\<^sup>2 + xa\n      \\<le> sqrt x / (ln 2)\\<^sup>2 + y\\<rbrakk>\n  \\<Longrightarrow> integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n                    \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>xa y.\n              xa \\<le> y \\<Longrightarrow>\n              xa + integral {sqrt x..x} (\\<lambda>uu_. 1 / (ln uu_)\\<^sup>2)\n              \\<le> y +\n                    integral {sqrt x..x}\n                     (\\<lambda>uu_. 1 / (ln uu_)\\<^sup>2);\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      xa + integral {sqrt x..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n      \\<le> y + integral {sqrt x..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2);\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      sqrt x / (ln 2)\\<^sup>2 + xa \\<le> sqrt x / (ln 2)\\<^sup>2 + y;\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      sqrt x / (ln 2)\\<^sup>2 + xa\n      \\<le> sqrt x / (ln 2)\\<^sup>2 + y\\<rbrakk>\n  \\<Longrightarrow> integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n                    \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2\n\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n  \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma integral_one_over_log_squared_bigo:\n  \"(\\<lambda>x::real. integral {2..x} (\\<lambda>t. 1 / ln t ^ 2)) \\<in> O(\\<lambda>x. x / ln x ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2))\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2))\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "define ub where \"ub = (\\<lambda>x::real. sqrt x / ln 2 ^ 2 + 4 * x / ln x ^ 2)\""], ["proof (state)\nthis:\n  ub = (\\<lambda>x. sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2))\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "have \"eventually (\\<lambda>x. \\<bar>integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\\<bar> \\<le> \\<bar>ub x\\<bar>) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\\<bar>\n       \\<le> \\<bar>ub x\\<bar>", "using eventually_ge_at_top[of 4]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) (4::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\\<bar>\n       \\<le> \\<bar>ub x\\<bar>", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       4 \\<le> x \\<Longrightarrow>\n       \\<bar>integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\\<bar>\n       \\<le> \\<bar>ub x\\<bar>", "case (elim x)"], ["proof (state)\nthis:\n  4 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       4 \\<le> x \\<Longrightarrow>\n       \\<bar>integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\\<bar>\n       \\<le> \\<bar>ub x\\<bar>", "hence \"\\<bar>integral {2..x} (\\<lambda>t. 1 / ln t ^ 2)\\<bar> = integral {2..x} (\\<lambda>t. 1 / ln t ^ 2)\""], ["proof (prove)\nusing this:\n  4 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<bar>integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\\<bar> =\n    integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)", "by (intro abs_of_nonneg integral_nonneg integrable_continuous_real continuous_intros) auto"], ["proof (state)\nthis:\n  \\<bar>integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\\<bar> =\n  integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       4 \\<le> x \\<Longrightarrow>\n       \\<bar>integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\\<bar>\n       \\<le> \\<bar>ub x\\<bar>", "also"], ["proof (state)\nthis:\n  \\<bar>integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\\<bar> =\n  integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       4 \\<le> x \\<Longrightarrow>\n       \\<bar>integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\\<bar>\n       \\<le> \\<bar>ub x\\<bar>", "have \"\\<dots> \\<le> \\<bar>ub x\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2) \\<le> \\<bar>ub x\\<bar>", "using integral_one_over_log_squared_bound[of x] elim"], ["proof (prove)\nusing this:\n  4 \\<le> x \\<Longrightarrow>\n  integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n  \\<le> sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2\n  4 \\<le> x\n\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2) \\<le> \\<bar>ub x\\<bar>", "by (simp add: ub_def)"], ["proof (state)\nthis:\n  integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2) \\<le> \\<bar>ub x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       4 \\<le> x \\<Longrightarrow>\n       \\<bar>integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\\<bar>\n       \\<le> \\<bar>ub x\\<bar>", "finally"], ["proof (chain)\npicking this:\n  \\<bar>integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\\<bar>\n  \\<le> \\<bar>ub x\\<bar>", "show ?case"], ["proof (prove)\nusing this:\n  \\<bar>integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\\<bar>\n  \\<le> \\<bar>ub x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\\<bar>\n    \\<le> \\<bar>ub x\\<bar>", "."], ["proof (state)\nthis:\n  \\<bar>integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\\<bar>\n  \\<le> \\<bar>ub x\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\\<bar>\n     \\<le> \\<bar>ub x\\<bar>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2))\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "hence \"(\\<lambda>x. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)) \\<in> O(ub)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\\<bar>\n     \\<le> \\<bar>ub x\\<bar>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2))\n    \\<in> O(ub)", "by (intro landau_o.bigI[of 1]) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)) \\<in> O(ub)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2))\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)) \\<in> O(ub)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2))\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "have \"ub \\<in> O(\\<lambda>x. x / ln x ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ub \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "unfolding ub_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2)\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "by real_asymp"], ["proof (state)\nthis:\n  ub \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2))\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2))\n  \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2))\n  \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2))\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2))\n  \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<pi>_\\<theta>_bound:\n  assumes \"x \\<ge> (4 :: real)\"\n  defines \"ub \\<equiv> 2 / ln 2 * sqrt x + 8 * ln 2 * x / ln x ^ 2\"\n  shows   \"\\<pi> x - \\<theta> x / ln x \\<in> {0..ub}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "define r where \"r = (\\<lambda>x. integral {2..x} (\\<lambda>t. \\<theta> t / (t * ln t ^ 2)))\""], ["proof (state)\nthis:\n  r =\n  (\\<lambda>x.\n      integral {2..x} (\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)))\n\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "have integrable: \"(\\<lambda>t. c / ln t ^ 2) integrable_on {2..x}\" for c"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. c / (ln t)\\<^sup>2) integrable_on {2..x}", "by (intro integrable_continuous_real continuous_intros) auto"], ["proof (state)\nthis:\n  (\\<lambda>t. ?c / (ln t)\\<^sup>2) integrable_on {2..x}\n\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "have \"r x \\<le> integral {2..x} (\\<lambda>t. ln 4 / ln t ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r x \\<le> integral {2..x} (\\<lambda>t. ln 4 / (ln t)\\<^sup>2)", "unfolding r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2))\n    \\<le> integral {2..x} (\\<lambda>t. ln 4 / (ln t)\\<^sup>2)", "using integrable_weighted_\\<theta>[of 2 x] integrable[of \"ln 4\"] assms less_imp_le[OF \\<theta>_upper_bound]"], ["proof (prove)\nusing this:\n  \\<lbrakk>2 \\<le> 2; 2 \\<le> x\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>t.\n                        \\<theta> t / (t * (ln t)\\<^sup>2)) integrable_on\n                    {2..x}\n  (\\<lambda>t. ln 4 / (ln t)\\<^sup>2) integrable_on {2..x}\n  4 \\<le> x\n  ub \\<equiv> 2 / ln 2 * sqrt x + 8 * ln 2 * x / (ln x)\\<^sup>2\n  1 \\<le> ?x1 \\<Longrightarrow> \\<theta> ?x1 \\<le> ln 4 * ?x1\n\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2))\n    \\<le> integral {2..x} (\\<lambda>t. ln 4 / (ln t)\\<^sup>2)", "by (intro integral_le divide_right_mono) (auto simp: field_simps)"], ["proof (state)\nthis:\n  r x \\<le> integral {2..x} (\\<lambda>t. ln 4 / (ln t)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "also"], ["proof (state)\nthis:\n  r x \\<le> integral {2..x} (\\<lambda>t. ln 4 / (ln t)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "have \"\\<dots> = ln 4 * integral {2..x} (\\<lambda>t. 1 / ln t ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. ln 4 / (ln t)\\<^sup>2) =\n    ln 4 * integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)", "using integrable[of 1]"], ["proof (prove)\nusing this:\n  (\\<lambda>t. 1 / (ln t)\\<^sup>2) integrable_on {2..x}\n\ngoal (1 subgoal):\n 1. integral {2..x} (\\<lambda>t. ln 4 / (ln t)\\<^sup>2) =\n    ln 4 * integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)", "by (subst integral_mult) auto"], ["proof (state)\nthis:\n  integral {2..x} (\\<lambda>t. ln 4 / (ln t)\\<^sup>2) =\n  ln 4 * integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "also"], ["proof (state)\nthis:\n  integral {2..x} (\\<lambda>t. ln 4 / (ln t)\\<^sup>2) =\n  ln 4 * integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "have \"\\<dots> \\<le> ln 4 * (sqrt x / ln 2 ^ 2 + 4 * x / ln x ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln 4 * integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> ln 4 * (sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2)", "using assms"], ["proof (prove)\nusing this:\n  4 \\<le> x\n  ub \\<equiv> 2 / ln 2 * sqrt x + 8 * ln 2 * x / (ln x)\\<^sup>2\n\ngoal (1 subgoal):\n 1. ln 4 * integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n    \\<le> ln 4 * (sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2)", "by (intro mult_left_mono integral_one_over_log_squared_bound) auto"], ["proof (state)\nthis:\n  ln 4 * integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n  \\<le> ln 4 * (sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "also"], ["proof (state)\nthis:\n  ln 4 * integral {2..x} (\\<lambda>t. 1 / (ln t)\\<^sup>2)\n  \\<le> ln 4 * (sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "have \"ln (4 :: real) = 2 * ln 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln 4 = 2 * ln 2", "using ln_realpow[of 2 2]"], ["proof (prove)\nusing this:\n  0 < 2 \\<Longrightarrow> ln (2\\<^sup>2) = real 2 * ln 2\n\ngoal (1 subgoal):\n 1. ln 4 = 2 * ln 2", "by simp"], ["proof (state)\nthis:\n  ln 4 = 2 * ln 2\n\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "also"], ["proof (state)\nthis:\n  ln 4 = 2 * ln 2\n\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "have \"\\<dots> * (sqrt x / ln 2 ^ 2 + 4 * x / ln x ^ 2) = ub\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * ln 2 * (sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2) = ub", "using assms"], ["proof (prove)\nusing this:\n  4 \\<le> x\n  ub \\<equiv> 2 / ln 2 * sqrt x + 8 * ln 2 * x / (ln x)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 * ln 2 * (sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2) = ub", "by (simp add: field_simps power2_eq_square ub_def)"], ["proof (state)\nthis:\n  2 * ln 2 * (sqrt x / (ln 2)\\<^sup>2 + 4 * x / (ln x)\\<^sup>2) = ub\n\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "finally"], ["proof (chain)\npicking this:\n  r x \\<le> ub", "have \"r x \\<le> \\<dots>\""], ["proof (prove)\nusing this:\n  r x \\<le> ub\n\ngoal (1 subgoal):\n 1. r x \\<le> ub", "."], ["proof (state)\nthis:\n  r x \\<le> ub\n\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "moreover"], ["proof (state)\nthis:\n  r x \\<le> ub\n\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "have \"r x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> r x", "unfolding r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> integral {2..x} (\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2))", "using assms"], ["proof (prove)\nusing this:\n  4 \\<le> x\n  ub \\<equiv> 2 / ln 2 * sqrt x + 8 * ln 2 * x / (ln x)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 \\<le> integral {2..x} (\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2))", "by (intro integral_nonneg integrable_weighted_\\<theta> divide_nonneg_pos) auto"], ["proof (state)\nthis:\n  0 \\<le> r x\n\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "ultimately"], ["proof (chain)\npicking this:\n  r x \\<le> ub\n  0 \\<le> r x", "have \"r x \\<in> {0..ub}\""], ["proof (prove)\nusing this:\n  r x \\<le> ub\n  0 \\<le> r x\n\ngoal (1 subgoal):\n 1. r x \\<in> {0..ub}", "by auto"], ["proof (state)\nthis:\n  r x \\<in> {0..ub}\n\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "with \\<pi>_conv_\\<theta>_integral[of x] assms(1)"], ["proof (chain)\npicking this:\n  2 \\<le> x \\<Longrightarrow>\n  ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n   \\<pi> x - \\<theta> x / ln x)\n   {2..x}\n  4 \\<le> x\n  r x \\<in> {0..ub}", "show ?thesis"], ["proof (prove)\nusing this:\n  2 \\<le> x \\<Longrightarrow>\n  ((\\<lambda>t. \\<theta> t / (t * (ln t)\\<^sup>2)) has_integral\n   \\<pi> x - \\<theta> x / ln x)\n   {2..x}\n  4 \\<le> x\n  r x \\<in> {0..ub}\n\ngoal (1 subgoal):\n 1. \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}", "by (simp add: r_def has_integral_iff)"], ["proof (state)\nthis:\n  \\<pi> x - \\<theta> x / ln x \\<in> {0..ub}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The following statement already indicates that the asymptotics of \\<open>\\<pi>\\<close> and \\<open>\\<theta>\\<close>\n  are very closely related, since through it, $\\pi(x) \\sim x / \\ln x$ and $\\theta(x) \\sim x$\n  imply each other.\n\\<close>"], ["", "lemma \\<pi>_\\<theta>_bigo: \"(\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "define ub where \"ub = (\\<lambda>x. 2 / ln 2 * sqrt x + 8 * ln 2 * x / ln x ^ 2)\""], ["proof (state)\nthis:\n  ub = (\\<lambda>x. 2 / ln 2 * sqrt x + 8 * ln 2 * x / (ln x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "have \"(\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> O(ub)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> O(ub)", "proof (intro le_imp_bigo_real[of 1] eventually_mono[OF eventually_ge_at_top])"], ["proof (state)\ngoal (3 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x.\n       ?c4 \\<le> x \\<Longrightarrow>\n       \\<pi> x - \\<theta> x / ln x \\<le> 1 * ub x\n 3. \\<And>x.\n       ?c2 \\<le> x \\<Longrightarrow> 0 \\<le> \\<pi> x - \\<theta> x / ln x", "fix x :: real"], ["proof (state)\ngoal (3 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x.\n       ?c4 \\<le> x \\<Longrightarrow>\n       \\<pi> x - \\<theta> x / ln x \\<le> 1 * ub x\n 3. \\<And>x.\n       ?c2 \\<le> x \\<Longrightarrow> 0 \\<le> \\<pi> x - \\<theta> x / ln x", "assume \"x \\<ge> 4\""], ["proof (state)\nthis:\n  4 \\<le> x\n\ngoal (3 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x.\n       ?c4 \\<le> x \\<Longrightarrow>\n       \\<pi> x - \\<theta> x / ln x \\<le> 1 * ub x\n 3. \\<And>x.\n       ?c2 \\<le> x \\<Longrightarrow> 0 \\<le> \\<pi> x - \\<theta> x / ln x", "from \\<pi>_\\<theta>_bound[OF this]"], ["proof (chain)\npicking this:\n  \\<pi> x - \\<theta> x / ln x\n  \\<in> {0..2 / ln 2 * sqrt x + 8 * ln 2 * x / (ln x)\\<^sup>2}", "show \"\\<pi> x - \\<theta> x / ln x \\<ge> 0\" and \"\\<pi> x - \\<theta> x / ln x \\<le> 1 * ub x\""], ["proof (prove)\nusing this:\n  \\<pi> x - \\<theta> x / ln x\n  \\<in> {0..2 / ln 2 * sqrt x + 8 * ln 2 * x / (ln x)\\<^sup>2}\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<pi> x - \\<theta> x / ln x &&&\n    \\<pi> x - \\<theta> x / ln x \\<le> 1 * ub x", "by (simp_all add: ub_def)"], ["proof (state)\nthis:\n  0 \\<le> \\<pi> x - \\<theta> x / ln x\n  \\<pi> x - \\<theta> x / ln x \\<le> 1 * ub x\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1", "qed auto"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> O(ub)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> O(ub)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "have \"ub \\<in> O(\\<lambda>x. x / ln x ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ub \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "unfolding ub_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. 2 / ln 2 * sqrt x + 8 * ln 2 * x / (ln x)\\<^sup>2)\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "by real_asymp"], ["proof (state)\nthis:\n  ub \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n  \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n  \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n  \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  As a foreshadowing of the Prime Number Theorem, we can already show\n  the following upper bound on $\\pi(x)$:\n\\<close>"], ["", "lemma \\<pi>_upper_bound:\n  assumes \"x \\<ge> (4 :: real)\"\n  shows   \"\\<pi> x < ln 4 * x / ln x  +  8 * ln 2 * x / ln x ^ 2  +  2 / ln 2 * sqrt x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x\n    < ln 4 * x / ln x + 8 * ln 2 * x / (ln x)\\<^sup>2 + 2 / ln 2 * sqrt x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi> x\n    < ln 4 * x / ln x + 8 * ln 2 * x / (ln x)\\<^sup>2 + 2 / ln 2 * sqrt x", "define ub where \"ub = 2 / ln 2 * sqrt x + 8 * ln 2 * x / ln x ^ 2\""], ["proof (state)\nthis:\n  ub = 2 / ln 2 * sqrt x + 8 * ln 2 * x / (ln x)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<pi> x\n    < ln 4 * x / ln x + 8 * ln 2 * x / (ln x)\\<^sup>2 + 2 / ln 2 * sqrt x", "have \"\\<pi> x \\<le> \\<theta> x / ln x + ub\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> \\<theta> x / ln x + ub", "using \\<pi>_\\<theta>_bound[of x] assms"], ["proof (prove)\nusing this:\n  4 \\<le> x \\<Longrightarrow>\n  \\<pi> x - \\<theta> x / ln x\n  \\<in> {0..2 / ln 2 * sqrt x + 8 * ln 2 * x / (ln x)\\<^sup>2}\n  4 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<pi> x \\<le> \\<theta> x / ln x + ub", "unfolding ub_def"], ["proof (prove)\nusing this:\n  4 \\<le> x \\<Longrightarrow>\n  \\<pi> x - \\<theta> x / ln x\n  \\<in> {0..2 / ln 2 * sqrt x + 8 * ln 2 * x / (ln x)\\<^sup>2}\n  4 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<pi> x\n    \\<le> \\<theta> x / ln x +\n          (2 / ln 2 * sqrt x + 8 * ln 2 * x / (ln x)\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  \\<pi> x \\<le> \\<theta> x / ln x + ub\n\ngoal (1 subgoal):\n 1. \\<pi> x\n    < ln 4 * x / ln x + 8 * ln 2 * x / (ln x)\\<^sup>2 + 2 / ln 2 * sqrt x", "also"], ["proof (state)\nthis:\n  \\<pi> x \\<le> \\<theta> x / ln x + ub\n\ngoal (1 subgoal):\n 1. \\<pi> x\n    < ln 4 * x / ln x + 8 * ln 2 * x / (ln x)\\<^sup>2 + 2 / ln 2 * sqrt x", "from assms"], ["proof (chain)\npicking this:\n  4 \\<le> x", "have \"\\<theta> x / ln x < ln 4 * x / ln x\""], ["proof (prove)\nusing this:\n  4 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<theta> x / ln x < ln 4 * x / ln x", "by (intro \\<theta>_upper_bound divide_strict_right_mono) auto"], ["proof (state)\nthis:\n  \\<theta> x / ln x < ln 4 * x / ln x\n\ngoal (1 subgoal):\n 1. \\<pi> x\n    < ln 4 * x / ln x + 8 * ln 2 * x / (ln x)\\<^sup>2 + 2 / ln 2 * sqrt x", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y. x < y \\<Longrightarrow> x + ub < y + ub) \\<Longrightarrow>\n  \\<pi> x < ln 4 * x / ln x + ub", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>x y. x < y \\<Longrightarrow> x + ub < y + ub) \\<Longrightarrow>\n  \\<pi> x < ln 4 * x / ln x + ub\n\ngoal (1 subgoal):\n 1. \\<pi> x\n    < ln 4 * x / ln x + 8 * ln 2 * x / (ln x)\\<^sup>2 + 2 / ln 2 * sqrt x", "using assms"], ["proof (prove)\nusing this:\n  (\\<And>x y. x < y \\<Longrightarrow> x + ub < y + ub) \\<Longrightarrow>\n  \\<pi> x < ln 4 * x / ln x + ub\n  4 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<pi> x\n    < ln 4 * x / ln x + 8 * ln 2 * x / (ln x)\\<^sup>2 + 2 / ln 2 * sqrt x", "by (simp add: algebra_simps ub_def)"], ["proof (state)\nthis:\n  \\<pi> x\n  < ln 4 * x / ln x + 8 * ln 2 * x / (ln x)\\<^sup>2 + 2 / ln 2 * sqrt x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<pi>_bigo: \"\\<pi> \\<in> O(\\<lambda>x. x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<in> O(\\<lambda>x. x / ln x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi> \\<in> O(\\<lambda>x. x / ln x)", "have \"(\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "by (fact \\<pi>_\\<theta>_bigo)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n  \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<in> O(\\<lambda>x. x / ln x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n  \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<in> O(\\<lambda>x. x / ln x)", "have \"(\\<lambda>x::real. x / ln x ^ 2) \\<in> O(\\<lambda>x. x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x / (ln x)\\<^sup>2) \\<in> O(\\<lambda>x. x / ln x)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. x / (ln x)\\<^sup>2) \\<in> O(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<in> O(\\<lambda>x. x / ln x)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x)", "have \"(\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<in> O(\\<lambda>x. x / ln x)", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<in> O(\\<lambda>x. x / ln x)", "have \"eventually (\\<lambda>x::real. ln x > 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 0 < ln x", "by real_asymp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 0 < ln x\n\ngoal (1 subgoal):\n 1. \\<pi> \\<in> O(\\<lambda>x. x / ln x)", "hence \"eventually (\\<lambda>x::real. ln x \\<noteq> 0) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. 0 < ln x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. ln x \\<noteq> 0", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. ln x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<pi> \\<in> O(\\<lambda>x. x / ln x)", "hence \"(\\<lambda>x. \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. ln x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x)", "using \\<theta>_bigo"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. ln x \\<noteq> 0\n  \\<theta> \\<in> O(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x)", "by (intro landau_o.big.divide_right)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<in> O(\\<lambda>x. x / ln x)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x)\n  (\\<lambda>x. \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x)", "have \"(\\<lambda>x. \\<pi> x - \\<theta> x / ln x + \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x)\n  (\\<lambda>x. \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x + \\<theta> x / ln x)\n    \\<in> O(\\<lambda>x. x / ln x)", "by (rule sum_in_bigo)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x + \\<theta> x / ln x)\n  \\<in> O(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<in> O(\\<lambda>x. x / ln x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x + \\<theta> x / ln x)\n  \\<in> O(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<in> O(\\<lambda>x. x / ln x)", "by simp"], ["proof (state)\nthis:\n  \\<pi> \\<in> O(\\<lambda>x. x / ln x)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Equivalence of various forms of the Prime Number Theorem\\<close>"], ["", "text \\<open>\n  In this section, we show that the following forms of the Prime Number Theorem are\n  all equivalent:\n    \\<^enum> $\\pi(x) \\sim x / \\ln x$\n    \\<^enum> $\\pi(x) \\ln \\pi(x) \\sim x$\n    \\<^enum> $p_n \\sim n \\ln n$\n    \\<^enum> $\\vartheta(x) \\sim x$\n    \\<^enum> $\\psi(x) \\sim x$\n\n  We show the following implication chains:\n    \\<^item> \\<open>(1) \\<rightarrow> (2) \\<rightarrow> (3) \\<rightarrow> (2) \\<rightarrow> (1)\\<close>\n    \\<^item> \\<open>(1) \\<rightarrow> (4) \\<rightarrow> (1)\\<close>\n    \\<^item> \\<open>(4) \\<rightarrow> (5) \\<rightarrow> (4)\\<close>\n\n  All of these proofs are taken from Apostol's book.\n\\<close>"], ["", "lemma PNT1_imp_PNT1':\n  assumes \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\"\n  shows   \"(\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "(* TODO: Tedious Landau sum reasoning *)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "from assms"], ["proof (chain)\npicking this:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "have \"((\\<lambda>x. \\<pi> x / (x / ln x)) \\<longlongrightarrow> 1) at_top\""], ["proof (prove)\nusing this:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<pi> x / (x / ln x)) \\<longlongrightarrow> 1) at_top", "by (rule asymp_equivD_strong[OF _ eventually_mono[OF eventually_gt_at_top[of 1]]]) auto"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<pi> x / (x / ln x)) \\<longlongrightarrow> 1) at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "hence \"((\\<lambda>x. ln (\\<pi> x / (x / ln x))) \\<longlongrightarrow> ln 1) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. \\<pi> x / (x / ln x)) \\<longlongrightarrow> 1) at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. ln (\\<pi> x / (x / ln x))) \\<longlongrightarrow> ln 1)\n     at_top", "by (rule tendsto_ln) auto"], ["proof (state)\nthis:\n  ((\\<lambda>x. ln (\\<pi> x / (x / ln x))) \\<longlongrightarrow> ln 1)\n   at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. ln (\\<pi> x / (x / ln x))) \\<longlongrightarrow> ln 1)\n   at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "have \"?this \\<longleftrightarrow> ((\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. ln (\\<pi> x / (x / ln x))) \\<longlongrightarrow> ln 1)\n     at_top =\n    ((\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<longlongrightarrow> 0)\n     at_top", "by (intro filterlim_cong eventually_mono[OF eventually_gt_at_top[of 2]])\n       (auto simp: ln_div field_simps ln_mult \\<pi>_pos)"], ["proof (state)\nthis:\n  ((\\<lambda>x. ln (\\<pi> x / (x / ln x))) \\<longlongrightarrow> ln 1)\n   at_top =\n  ((\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<longlongrightarrow> 0)\n   at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<longlongrightarrow> 0)\n   at_top", "have \"(\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<in> o(\\<lambda>_. 1)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<longlongrightarrow> 0)\n   at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<in> o(\\<lambda>_. 1)", "by (intro smalloI_tendsto) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<in> o(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<in> o(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "have \"(\\<lambda>_::real. 1 :: real) \\<in> o(\\<lambda>x. ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>_. 1) \\<in> o(ln)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>_. 1) \\<in> o(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<in> o(ln)", "have \"(\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x) - ln (ln x)) \\<in> o(\\<lambda>x. ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x)) \\<in> o(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x) - ln (ln x)) \\<in> o(ln)", "by (rule sum_in_smallo) real_asymp+"], ["proof (state)\nthis:\n  (\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x) - ln (ln x)) \\<in> o(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "thus *: \"(\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. ln (\\<pi> x) - ln x + ln (ln x) - ln (ln x)) \\<in> o(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "by (simp add: asymp_equiv_altdef)"], ["proof (state)\nthis:\n  (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PNT1_imp_PNT2:\n  assumes \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\"\n  shows   \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "have \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x / ln x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x / ln x * ln x)", "by (intro asymp_equiv_intros assms PNT1_imp_PNT1')"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x / ln x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x / ln x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x / ln x * ln x) \\<sim>[at_top] (\\<lambda>x. x)", "by (intro asymp_equiv_refl_ev eventually_mono[OF eventually_gt_at_top[of 1]])\n       (auto simp: field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x. x / ln x * ln x) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>a. a)", "show \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>a. a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PNT2_imp_PNT3:\n  assumes \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"nth_prime \\<sim>[at_top] (\\<lambda>n. n * ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "have \"(\\<lambda>n. nth_prime n) \\<sim>[at_top] (\\<lambda>n. \\<pi> (nth_prime n) * ln (\\<pi> (nth_prime n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>n.\n  \\<pi> (real (nth_prime n)) * ln (\\<pi> (real (nth_prime n))))", "using assms"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>n.\n  \\<pi> (real (nth_prime n)) * ln (\\<pi> (real (nth_prime n))))", "by (rule asymp_equiv_symI [OF asymp_equiv_compose'])\n       (auto intro!: filterlim_compose[OF filterlim_real_sequentially nth_prime_at_top])"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         x)) \\<sim>[sequentially] (\\<lambda>n.\n\\<pi> (real (nth_prime n)) * ln (\\<pi> (real (nth_prime n))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         x)) \\<sim>[sequentially] (\\<lambda>n.\n\\<pi> (real (nth_prime n)) * ln (\\<pi> (real (nth_prime n))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "have \"\\<dots> = (\\<lambda>n. real (Suc n) * ln (real (Suc n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<pi> (real (nth_prime n)) * ln (\\<pi> (real (nth_prime n)))) =\n    (\\<lambda>n. real (Suc n) * ln (real (Suc n)))", "by (simp add: add_ac)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<pi> (real (nth_prime n)) * ln (\\<pi> (real (nth_prime n)))) =\n  (\\<lambda>n. real (Suc n) * ln (real (Suc n)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<pi> (real (nth_prime n)) * ln (\\<pi> (real (nth_prime n)))) =\n  (\\<lambda>n. real (Suc n) * ln (real (Suc n)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>n. real n * ln (real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        real (Suc n) *\n        ln (real\n             (Suc n))) \\<sim>[sequentially] (\\<lambda>n.\n          real n * ln (real n))", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      real (Suc n) *\n      ln (real\n           (Suc n))) \\<sim>[sequentially] (\\<lambda>n. real n * ln (real n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (nth_prime\n         x)) \\<sim>[sequentially] (\\<lambda>a. real a * ln (real a))", "show \"nth_prime \\<sim>[at_top] (\\<lambda>n. n * ln n)\""], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[sequentially] d \\<Longrightarrow>\n      c \\<sim>[sequentially] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (nth_prime\n         x)) \\<sim>[sequentially] (\\<lambda>a. real a * ln (real a))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))", "."], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PNT3_imp_PNT2:\n  assumes \"nth_prime \\<sim>[at_top] (\\<lambda>n. n * ln n)\"\n  shows   \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "proof (rule asymp_equiv_symI, rule asymp_equiv_sandwich_real)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?l2 \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n 2. ?u2 \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n 3. \\<forall>\\<^sub>F x in at_top. x \\<in> {?l2 x..?u2 x}", "show \"eventually (\\<lambda>x. x \\<in> {real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor> - 1))..real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))})\n          at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       x \\<in> {real\n                 (nth_prime\n                   (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                    1))..real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "using eventually_ge_at_top[of 2]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) (2::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       x \\<in> {real\n                 (nth_prime\n                   (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                    1))..real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       2 \\<le> x \\<Longrightarrow>\n       x \\<in> {real\n                 (nth_prime\n                   (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                    1))..real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "case (elim x)"], ["proof (state)\nthis:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       2 \\<le> x \\<Longrightarrow>\n       x \\<in> {real\n                 (nth_prime\n                   (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                    1))..real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "with nth_prime_partition''[of x]"], ["proof (chain)\npicking this:\n  2 \\<le> x \\<Longrightarrow>\n  x \\<in> {real\n            (nth_prime\n              (nat \\<lfloor>\\<pi> x\\<rfloor> -\n               1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}\n  2 \\<le> x", "show ?case"], ["proof (prove)\nusing this:\n  2 \\<le> x \\<Longrightarrow>\n  x \\<in> {real\n            (nth_prime\n              (nat \\<lfloor>\\<pi> x\\<rfloor> -\n               1))..<real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<in> {real\n              (nth_prime\n                (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                 1))..real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {real\n            (nth_prime\n              (nat \\<lfloor>\\<pi> x\\<rfloor> -\n               1))..real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     x \\<in> {real\n               (nth_prime\n                 (nat \\<lfloor>\\<pi> x\\<rfloor> -\n                  1))..real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))}\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi> x\\<rfloor> -\n            1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n 2. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi> x\\<rfloor> -\n            1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n 2. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "have \"(\\<lambda>x. real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor> - 1))) \\<sim>[at_top]\n           (\\<lambda>x. real (nat \\<lfloor>\\<pi> x\\<rfloor> - 1) * ln (real (nat \\<lfloor>\\<pi> x\\<rfloor> - 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi> x\\<rfloor> -\n            1))) \\<sim>[at_top] (\\<lambda>x.\n                                    real\n                                     (nat \\<lfloor>\\<pi> x\\<rfloor> - 1) *\n                                    ln (real\n   (nat \\<lfloor>\\<pi> x\\<rfloor> - 1)))", "by (rule asymp_equiv_compose'[OF _ \\<pi>_at_top], rule asymp_equiv_compose'[OF assms]) real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi> x\\<rfloor> -\n          1))) \\<sim>[at_top] (\\<lambda>x.\n                                  real (nat \\<lfloor>\\<pi> x\\<rfloor> - 1) *\n                                  ln (real\n (nat \\<lfloor>\\<pi> x\\<rfloor> - 1)))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi> x\\<rfloor> -\n            1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n 2. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi> x\\<rfloor> -\n          1))) \\<sim>[at_top] (\\<lambda>x.\n                                  real (nat \\<lfloor>\\<pi> x\\<rfloor> - 1) *\n                                  ln (real\n (nat \\<lfloor>\\<pi> x\\<rfloor> - 1)))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi> x\\<rfloor> -\n            1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n 2. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (nat \\<lfloor>\\<pi> x\\<rfloor> - 1) *\n        ln (real\n             (nat \\<lfloor>\\<pi> x\\<rfloor> -\n              1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))", "by (rule asymp_equiv_compose'[OF _ \\<pi>_at_top]) real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real (nat \\<lfloor>\\<pi> x\\<rfloor> - 1) *\n      ln (real\n           (nat \\<lfloor>\\<pi> x\\<rfloor> -\n            1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi> x\\<rfloor> -\n            1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n 2. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi> x\\<rfloor> -\n          1))) \\<sim>[at_top] (\\<lambda>a. \\<pi> a * ln (\\<pi> a))", "show \"(\\<lambda>x. real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor> - 1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\""], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi> x\\<rfloor> -\n          1))) \\<sim>[at_top] (\\<lambda>a. \\<pi> a * ln (\\<pi> a))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi> x\\<rfloor> -\n            1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))", "."], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi> x\\<rfloor> -\n          1))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "have \"(\\<lambda>x. real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))) \\<sim>[at_top]\n           (\\<lambda>x. real (nat \\<lfloor>\\<pi> x\\<rfloor>) * ln (real (nat \\<lfloor>\\<pi> x\\<rfloor>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     real (nat \\<lfloor>\\<pi> x\\<rfloor>) *\n                     ln (real (nat \\<lfloor>\\<pi> x\\<rfloor>)))", "by (rule asymp_equiv_compose'[OF _ \\<pi>_at_top], rule asymp_equiv_compose'[OF assms]) real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi>\n                        x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                   real (nat \\<lfloor>\\<pi> x\\<rfloor>) *\n                   ln (real (nat \\<lfloor>\\<pi> x\\<rfloor>)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi>\n                        x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                   real (nat \\<lfloor>\\<pi> x\\<rfloor>) *\n                   ln (real (nat \\<lfloor>\\<pi> x\\<rfloor>)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real (nat \\<lfloor>\\<pi> x\\<rfloor>) *\n        ln (real\n             (nat \\<lfloor>\\<pi>\n                            x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                       \\<pi> x * ln (\\<pi> x))", "by (rule asymp_equiv_compose'[OF _ \\<pi>_at_top]) real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real (nat \\<lfloor>\\<pi> x\\<rfloor>) *\n      ln (real\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi>\n                        x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>a.\n                   \\<pi> a * ln (\\<pi> a))", "show \"(\\<lambda>x. real (nth_prime (nat \\<lfloor>\\<pi> x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x))\""], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi>\n                        x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>a.\n                   \\<pi> a * ln (\\<pi> a))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (nth_prime\n           (nat \\<lfloor>\\<pi>\n                          x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                     \\<pi> x * ln (\\<pi> x))", "."], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (nth_prime\n         (nat \\<lfloor>\\<pi>\n                        x\\<rfloor>))) \\<sim>[at_top] (\\<lambda>x.\n                   \\<pi> x * ln (\\<pi> x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PNT2_imp_PNT1:\n  assumes \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"(\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. ln x)\"\n    and   \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln &&&\n    \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "have ev: \"eventually (\\<lambda>x. \\<pi> x > 0) at_top\"\n            \"eventually (\\<lambda>x. ln (\\<pi> x) > 0) at_top\"\n            \"eventually (\\<lambda>x. ln (ln (\\<pi> x)) > 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 0 < \\<pi> x &&&\n    \\<forall>\\<^sub>F x in at_top. 0 < ln (\\<pi> x) &&&\n    \\<forall>\\<^sub>F x in at_top. 0 < ln (ln (\\<pi> x))", "by (rule eventually_compose_filterlim[OF _ \\<pi>_at_top], real_asymp)+"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 0 < \\<pi> x\n  \\<forall>\\<^sub>F x in at_top. 0 < ln (\\<pi> x)\n  \\<forall>\\<^sub>F x in at_top. 0 < ln (ln (\\<pi> x))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "let ?f = \"\\<lambda>x. 1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)\""], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "have \"((\\<lambda>x. ln (\\<pi> x) * ?f x) \\<longlongrightarrow> ln 1) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         ln (\\<pi> x) *\n         (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n          ln x / ln (\\<pi> x))) \\<longlongrightarrow>\n     ln 1)\n     at_top", "proof (rule Lim_transform_eventually)"], ["proof (state)\ngoal (2 subgoals):\n 1. (?f \\<longlongrightarrow> ln 1) at_top\n 2. \\<forall>\\<^sub>F x in at_top.\n       ?f x =\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x))", "from assms"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "have \"((\\<lambda>x. \\<pi> x * ln (\\<pi> x) / x) \\<longlongrightarrow> 1) at_top\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<pi> x * ln (\\<pi> x) / x) \\<longlongrightarrow> 1)\n     at_top", "by (rule asymp_equivD_strong[OF _ eventually_mono[OF eventually_gt_at_top[of 1]]]) auto"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<pi> x * ln (\\<pi> x) / x) \\<longlongrightarrow> 1) at_top\n\ngoal (2 subgoals):\n 1. (?f \\<longlongrightarrow> ln 1) at_top\n 2. \\<forall>\\<^sub>F x in at_top.\n       ?f x =\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x))", "then"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. \\<pi> x * ln (\\<pi> x) / x) \\<longlongrightarrow> 1) at_top", "show \"((\\<lambda>x. ln (\\<pi> x * ln (\\<pi> x) / x)) \\<longlongrightarrow> ln 1) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. \\<pi> x * ln (\\<pi> x) / x) \\<longlongrightarrow> 1) at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. ln (\\<pi> x * ln (\\<pi> x) / x)) \\<longlongrightarrow>\n     ln 1)\n     at_top", "by (rule tendsto_ln) auto"], ["proof (state)\nthis:\n  ((\\<lambda>x. ln (\\<pi> x * ln (\\<pi> x) / x)) \\<longlongrightarrow> ln 1)\n   at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (\\<pi> x * ln (\\<pi> x) / x) =\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x))", "show \"\\<forall>\\<^sub>F x in at_top. ln (\\<pi> x * ln (\\<pi> x) / x) = ln (\\<pi> x) * ?f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (\\<pi> x * ln (\\<pi> x) / x) =\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x))", "using eventually_gt_at_top[of 0] ev"], ["proof (prove)\nusing this:\n  eventually ((<) (0::?'a1)) at_top\n  \\<forall>\\<^sub>F x in at_top. 0 < \\<pi> x\n  \\<forall>\\<^sub>F x in at_top. 0 < ln (\\<pi> x)\n  \\<forall>\\<^sub>F x in at_top. 0 < ln (ln (\\<pi> x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (\\<pi> x * ln (\\<pi> x) / x) =\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x))", "by eventually_elim (simp add: field_simps ln_mult ln_div)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     ln (\\<pi> x * ln (\\<pi> x) / x) =\n     ln (\\<pi> x) *\n     (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n        ln x / ln (\\<pi> x))) \\<longlongrightarrow>\n   ln 1)\n   at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n        ln x / ln (\\<pi> x))) \\<longlongrightarrow>\n   ln 1)\n   at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "have \"((\\<lambda>x. 1 / ln (\\<pi> x)) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. 1 / ln (\\<pi> x)) \\<longlongrightarrow> 0) at_top", "by (rule filterlim_compose[OF _ \\<pi>_at_top]) real_asymp"], ["proof (state)\nthis:\n  ((\\<lambda>x. 1 / ln (\\<pi> x)) \\<longlongrightarrow> 0) at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n        ln x / ln (\\<pi> x))) \\<longlongrightarrow>\n   ln 1)\n   at_top\n  ((\\<lambda>x. 1 / ln (\\<pi> x)) \\<longlongrightarrow> 0) at_top", "have \"((\\<lambda>x. ln (\\<pi> x) * ?f x * (1 / ln (\\<pi> x))) \\<longlongrightarrow> ln 1 * 0) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n        ln x / ln (\\<pi> x))) \\<longlongrightarrow>\n   ln 1)\n   at_top\n  ((\\<lambda>x. 1 / ln (\\<pi> x)) \\<longlongrightarrow> 0) at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         ln (\\<pi> x) *\n         (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n         (1 / ln (\\<pi> x))) \\<longlongrightarrow>\n     ln 1 * 0)\n     at_top", "by (rule tendsto_mult)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n       (1 / ln (\\<pi> x))) \\<longlongrightarrow>\n   ln 1 * 0)\n   at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n       (1 / ln (\\<pi> x))) \\<longlongrightarrow>\n   ln 1 * 0)\n   at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "have \"eventually (\\<lambda>x. ln (\\<pi> x) * ?f x * (1 / ln (\\<pi> x)) = ?f x) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n       (1 / ln (\\<pi> x)) =\n       1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)", "using ev"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. 0 < \\<pi> x\n  \\<forall>\\<^sub>F x in at_top. 0 < ln (\\<pi> x)\n  \\<forall>\\<^sub>F x in at_top. 0 < ln (ln (\\<pi> x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n       (1 / ln (\\<pi> x)) =\n       1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     ln (\\<pi> x) *\n     (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n     (1 / ln (\\<pi> x)) =\n     1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n       (1 / ln (\\<pi> x))) \\<longlongrightarrow>\n   ln 1 * 0)\n   at_top\n  \\<forall>\\<^sub>F x in at_top.\n     ln (\\<pi> x) *\n     (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n     (1 / ln (\\<pi> x)) =\n     1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)", "have \"(?f \\<longlongrightarrow> ln 1 * 0) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       ln (\\<pi> x) *\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n       (1 / ln (\\<pi> x))) \\<longlongrightarrow>\n   ln 1 * 0)\n   at_top\n  \\<forall>\\<^sub>F x in at_top.\n     ln (\\<pi> x) *\n     (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)) *\n     (1 / ln (\\<pi> x)) =\n     1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ln x / ln (\\<pi> x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n         ln x / ln (\\<pi> x)) \\<longlongrightarrow>\n     ln 1 * 0)\n     at_top", "by (rule Lim_transform_eventually)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n       ln x / ln (\\<pi> x)) \\<longlongrightarrow>\n   ln 1 * 0)\n   at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "hence \"((\\<lambda>x. 1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) - ?f x) \\<longlongrightarrow> 1 + 0 - ln 1 * 0) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n       ln x / ln (\\<pi> x)) \\<longlongrightarrow>\n   ln 1 * 0)\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n         (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n          ln x / ln (\\<pi> x))) \\<longlongrightarrow>\n     1 + 0 - ln 1 * 0)\n     at_top", "by (intro tendsto_intros filterlim_compose[OF _ \\<pi>_at_top]) (real_asymp | simp)+"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n        ln x / ln (\\<pi> x))) \\<longlongrightarrow>\n   1 + 0 - ln 1 * 0)\n   at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "hence \"((\\<lambda>x. ln x / ln (\\<pi> x)) \\<longlongrightarrow> 1) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n       (1 + ln (ln (\\<pi> x)) / ln (\\<pi> x) -\n        ln x / ln (\\<pi> x))) \\<longlongrightarrow>\n   1 + 0 - ln 1 * 0)\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. ln x / ln (\\<pi> x)) \\<longlongrightarrow> 1) at_top", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>x. ln x / ln (\\<pi> x)) \\<longlongrightarrow> 1) at_top\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n 2. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "thus *: \"(\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. ln x)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. ln x / ln (\\<pi> x)) \\<longlongrightarrow> 1) at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "by (rule asymp_equiv_symI[OF asymp_equivI'])"], ["proof (state)\nthis:\n  (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "have \"eventually (\\<lambda>x. \\<pi> x = \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<pi> x = \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x)", "using ev"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. 0 < \\<pi> x\n  \\<forall>\\<^sub>F x in at_top. 0 < ln (\\<pi> x)\n  \\<forall>\\<^sub>F x in at_top. 0 < ln (ln (\\<pi> x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<pi> x = \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x)", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<pi> x = \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "hence \"\\<pi> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x))\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<pi> x = \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x))", "by (rule asymp_equiv_refl_ev)"], ["proof (state)\nthis:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x))\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "also"], ["proof (state)\nthis:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x))\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "from assms and *"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\n  (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "have \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x) / ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x / ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\n  (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        \\<pi> x * ln (\\<pi> x) /\n        ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x / ln x)", "by (rule asymp_equiv_intros)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      \\<pi> x * ln (\\<pi> x) /\n      ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  \\<pi> \\<sim>[at_top] (\\<lambda>a. a / ln a)", "show \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\""], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  \\<pi> \\<sim>[at_top] (\\<lambda>a. a / ln a)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "."], ["proof (state)\nthis:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PNT4_imp_PNT5:\n  assumes \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"\\<psi> \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "define r where \"r = (\\<lambda>x. \\<psi> x - \\<theta> x)\""], ["proof (state)\nthis:\n  r = (\\<lambda>x. \\<psi> x - \\<theta> x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "have \"r \\<in> O(\\<lambda>x. ln x * sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> O(\\<lambda>x. ln x * sqrt x)", "unfolding r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. ln x * sqrt x)", "by (fact \\<psi>_minus_\\<theta>_bigo)"], ["proof (state)\nthis:\n  r \\<in> O(\\<lambda>x. ln x * sqrt x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "also"], ["proof (state)\nthis:\n  r \\<in> O(\\<lambda>x. ln x * sqrt x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "have \"(\\<lambda>x::real. ln x * sqrt x) \\<in> o(\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln x * sqrt x) \\<in> o(\\<lambda>x. x)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. ln x * sqrt x) \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "finally"], ["proof (chain)\npicking this:\n  r \\<in> o(\\<lambda>x. x)", "have r: \"r \\<in> o(\\<lambda>x. x)\""], ["proof (prove)\nusing this:\n  r \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. r \\<in> o(\\<lambda>x. x)", "."], ["proof (state)\nthis:\n  r \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "have \"(\\<lambda>x. \\<theta> x + r x) \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x + r x) \\<sim>[at_top] (\\<lambda>x. x)", "using assms r"], ["proof (prove)\nusing this:\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. x)\n  r \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x + r x) \\<sim>[at_top] (\\<lambda>x. x)", "by (subst asymp_equiv_add_right) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<theta> x + r x) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<theta> x + r x) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "by (simp add: r_def)"], ["proof (state)\nthis:\n  \\<psi> \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PNT4_imp_PNT1:\n  assumes \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "have \"(\\<lambda>x. (\\<pi> x - \\<theta> x / ln x) + ((\\<theta> x - x) / ln x)) \\<in> o(\\<lambda>x. x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x + (\\<theta> x - x) / ln x)\n    \\<in> o(\\<lambda>x. x / ln x)", "proof (rule sum_in_smallo)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)\n 2. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "have \"(\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> O(\\<lambda>x. x / ln x ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)", "by (rule \\<pi>_\\<theta>_bigo)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n  \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)\n 2. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x)\n  \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)\n 2. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "have \"(\\<lambda>x. x / ln x ^ 2) \\<in> o(\\<lambda>x. x / ln x :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x / (ln x)\\<^sup>2) \\<in> o(\\<lambda>x. x / ln x)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. x / (ln x)\\<^sup>2) \\<in> o(\\<lambda>x. x / ln x)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)\n 2. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)", "show \"(\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x) \\<in> o(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "have \"eventually (\\<lambda>x::real. ln x > 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 0 < ln x", "by real_asymp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 0 < ln x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "hence \"eventually (\\<lambda>x::real. ln x \\<noteq> 0) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. 0 < ln x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. ln x \\<noteq> 0", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. ln x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "thus \"(\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. ln x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)", "by (intro landau_o.small.divide_right asymp_equiv_imp_diff_smallo assms)"], ["proof (state)\nthis:\n  (\\<lambda>x. (\\<theta> x - x) / ln x) \\<in> o(\\<lambda>x. x / ln x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x + (\\<theta> x - x) / ln x)\n  \\<in> o(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<pi> x - \\<theta> x / ln x + (\\<theta> x - x) / ln x)\n  \\<in> o(\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "by (simp add: diff_divide_distrib asymp_equiv_altdef)"], ["proof (state)\nthis:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PNT1_imp_PNT4:\n  assumes \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\"\n  shows   \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have \"\\<theta> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln x)", "proof (rule smallo_imp_asymp_equiv)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "have \"(\\<lambda>x. \\<theta> x - \\<pi> x * ln x) \\<in> \\<Theta>(\\<lambda>x. - ((\\<pi> x - \\<theta> x / ln x) * ln x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> \\<Theta>(\\<lambda>x. - ((\\<pi> x - \\<theta> x / ln x) * ln x))", "by (intro bigthetaI_cong eventually_mono[OF eventually_gt_at_top[of 1]])\n         (auto simp: field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n  \\<in> \\<Theta>(\\<lambda>x. - ((\\<pi> x - \\<theta> x / ln x) * ln x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n  \\<in> \\<Theta>(\\<lambda>x. - ((\\<pi> x - \\<theta> x / ln x) * ln x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "have \"(\\<lambda>x. - ((\\<pi> x - \\<theta> x / ln x) * ln x)) \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2 * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. - ((\\<pi> x - \\<theta> x / ln x) * ln x))\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2 * ln x)", "unfolding landau_o.big.uminus_in_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (\\<pi> x - \\<theta> x / ln x) * ln x)\n    \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2 * ln x)", "by (intro landau_o.big.mult_right \\<pi>_\\<theta>_bigo)"], ["proof (state)\nthis:\n  (\\<lambda>x. - ((\\<pi> x - \\<theta> x / ln x) * ln x))\n  \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2 * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. - ((\\<pi> x - \\<theta> x / ln x) * ln x))\n  \\<in> O(\\<lambda>x. x / (ln x)\\<^sup>2 * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "have \"(\\<lambda>x::real. x / (ln x)\\<^sup>2 * ln x) \\<in> o(\\<lambda>x. x / ln x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x / (ln x)\\<^sup>2 * ln x)\n    \\<in> o(\\<lambda>x. x / ln x * ln x)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. x / (ln x)\\<^sup>2 * ln x)\n  \\<in> o(\\<lambda>x. x / ln x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. x / (ln x)\\<^sup>2 * ln x)\n  \\<in> o(\\<lambda>x. x / ln x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "have \"(\\<lambda>x. x / ln x * ln x) \\<in> \\<Theta>(\\<lambda>x. \\<pi> x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x / ln x * ln x) \\<in> \\<Theta>(\\<lambda>x. \\<pi> x * ln x)", "by (intro asymp_equiv_imp_bigtheta asymp_equiv_intros asymp_equiv_symI[OF assms])"], ["proof (state)\nthis:\n  (\\<lambda>x. x / ln x * ln x) \\<in> \\<Theta>(\\<lambda>x. \\<pi> x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n  \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "show \"(\\<lambda>x. \\<theta> x - \\<pi> x * ln x) \\<in> o(\\<lambda>x. \\<pi> x * ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n  \\<in> o(\\<lambda>x. \\<pi> x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n    \\<in> o(\\<lambda>x. \\<pi> x * ln x)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. \\<theta> x - \\<pi> x * ln x)\n  \\<in> o(\\<lambda>x. \\<pi> x * ln x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "also"], ["proof (state)\nthis:\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. \\<pi> x * ln x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>x. x / ln x * ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        \\<pi> x * ln x) \\<sim>[at_top] (\\<lambda>x. x / ln x * ln x)", "by (intro asymp_equiv_intros assms)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x * ln x) \\<sim>[at_top] (\\<lambda>x. x / ln x * ln x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> x * ln x) \\<sim>[at_top] (\\<lambda>x. x / ln x * ln x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have \"\\<dots> \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x / ln x * ln x) \\<sim>[at_top] (\\<lambda>x. x)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. x / ln x * ln x) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>c d.\n              c \\<sim>[at_top] d \\<Longrightarrow> c \\<sim>[at_top] d;\n   \\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow> c \\<sim>[at_top] d\\<rbrakk>\n  \\<Longrightarrow> \\<theta> \\<sim>[at_top] (\\<lambda>a. a)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>c d.\n              c \\<sim>[at_top] d \\<Longrightarrow> c \\<sim>[at_top] d;\n   \\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow> c \\<sim>[at_top] d\\<rbrakk>\n  \\<Longrightarrow> \\<theta> \\<sim>[at_top] (\\<lambda>a. a)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "."], ["proof (state)\nthis:\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PNT5_imp_PNT4:\n  assumes \"\\<psi> \\<sim>[at_top] (\\<lambda>x. x)\"\n  shows   \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "define r where \"r = (\\<lambda>x. \\<theta> x - \\<psi> x)\""], ["proof (state)\nthis:\n  r = (\\<lambda>x. \\<theta> x - \\<psi> x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have \"(\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. ln x * sqrt x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. ln x * sqrt x)", "by (fact \\<psi>_minus_\\<theta>_bigo)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. ln x * sqrt x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<psi> x - \\<theta> x) \\<in> O(\\<lambda>x. ln x * sqrt x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have \"(\\<lambda>x. \\<psi> x - \\<theta> x) = (\\<lambda>x. -r x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<psi> x - \\<theta> x) = (\\<lambda>x. - r x)", "by (simp add: r_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<psi> x - \\<theta> x) = (\\<lambda>x. - r x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. - r x) \\<in> O(\\<lambda>x. ln x * sqrt x)", "have \"r \\<in> O(\\<lambda>x. ln x * sqrt x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. - r x) \\<in> O(\\<lambda>x. ln x * sqrt x)\n\ngoal (1 subgoal):\n 1. r \\<in> O(\\<lambda>x. ln x * sqrt x)", "by simp"], ["proof (state)\nthis:\n  r \\<in> O(\\<lambda>x. ln x * sqrt x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "also"], ["proof (state)\nthis:\n  r \\<in> O(\\<lambda>x. ln x * sqrt x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have \"(\\<lambda>x::real. ln x * sqrt x) \\<in> o(\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln x * sqrt x) \\<in> o(\\<lambda>x. x)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. ln x * sqrt x) \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "finally"], ["proof (chain)\npicking this:\n  r \\<in> o(\\<lambda>x. x)", "have r: \"r \\<in> o(\\<lambda>x. x)\""], ["proof (prove)\nusing this:\n  r \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. r \\<in> o(\\<lambda>x. x)", "."], ["proof (state)\nthis:\n  r \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have \"(\\<lambda>x. \\<psi> x + r x) \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<psi> x + r x) \\<sim>[at_top] (\\<lambda>x. x)", "using assms r"], ["proof (prove)\nusing this:\n  \\<psi> \\<sim>[at_top] (\\<lambda>x. x)\n  r \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<psi> x + r x) \\<sim>[at_top] (\\<lambda>x. x)", "by (subst asymp_equiv_add_right) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<psi> x + r x) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<psi> x + r x) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "by (simp add: r_def)"], ["proof (state)\nthis:\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The asymptotic form of Mertens' First Theorem\\<close>"], ["", "text \\<open>\n  Mertens' first theorem states that $\\mathfrak{M}(x) - \\ln x$ is bounded, i.\\,e.\\ \n  $\\mathfrak{M}(x) = \\ln x + O(1)$.\n\n  With some work, one can also show some absolute bounds for $|\\mathfrak{M}(x) - \\ln x|$, and we\n  will, in fact, do this later. However, this asymptotic form is somewhat easier to obtain and it is\n  (as we shall see) enough to prove the Prime Number Theorem, so we prove the weak form here first\n  for the sake of a smoother presentation.\n\n  First of all, we need a very weak version of Stirling's formula for the logarithm of\n  the factorial, namely:\n  \\[\\ln(\\lfloor x\\rfloor!) = \\sum\\limits_{n\\leq x} \\ln x = x \\ln x + O(x)\\]\n  We show this using summation by parts.\n\\<close>"], ["", "lemma stirling_weak:\n  assumes x: \"x \\<ge> 1\"\n  shows   \"sum_upto ln x \\<in> {x * ln x - x - ln x + 1 .. x * ln x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "proof (cases \"x = 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}\n 2. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "case True"], ["proof (state)\nthis:\n  x = 1\n\ngoal (2 subgoals):\n 1. x = 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}\n 2. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "have \"{0<..Suc 0} = {1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0<..Suc 0} = {1}", "by auto"], ["proof (state)\nthis:\n  {0<..Suc 0} = {1}\n\ngoal (2 subgoals):\n 1. x = 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}\n 2. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "with True"], ["proof (chain)\npicking this:\n  x = 1\n  {0<..Suc 0} = {1}", "show ?thesis"], ["proof (prove)\nusing this:\n  x = 1\n  {0<..Suc 0} = {1}\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "by (simp add: sum_upto_altdef)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>x. ln (real x)) x\n  \\<in> {x * ln x - x - ln x + 1..x * ln x}\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "case False"], ["proof (state)\nthis:\n  x \\<noteq> 1\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "with assms"], ["proof (chain)\npicking this:\n  1 \\<le> x\n  x \\<noteq> 1", "have x: \"x > 1\""], ["proof (prove)\nusing this:\n  1 \\<le> x\n  x \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 1 < x", "by simp"], ["proof (state)\nthis:\n  1 < x\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "have \"((\\<lambda>t. sum_upto (\\<lambda>_. 1) t * (1 / t)) has_integral\n          sum_upto (\\<lambda>_. 1) x * ln x - sum_upto (\\<lambda>_. 1) 1 * ln 1 -\n          (\\<Sum>n\\<in>real -` {1<..x}. 1 * ln (real n))) {1..x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. sum_upto (\\<lambda>_. 1) t * (1 / t)) has_integral\n     sum_upto (\\<lambda>_. 1) x * ln x - sum_upto (\\<lambda>_. 1) 1 * ln 1 -\n     (\\<Sum>n\\<in>real -` {1<..x}. 1 * ln (real n)))\n     {1..x}", "using x"], ["proof (prove)\nusing this:\n  1 < x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. sum_upto (\\<lambda>_. 1) t * (1 / t)) has_integral\n     sum_upto (\\<lambda>_. 1) x * ln x - sum_upto (\\<lambda>_. 1) 1 * ln 1 -\n     (\\<Sum>n\\<in>real -` {1<..x}. 1 * ln (real n)))\n     {1..x}", "by (intro partial_summation_strong[of \"{}\"])\n       (auto simp flip: has_field_derivative_iff_has_vector_derivative\n             intro!: derivative_eq_intros continuous_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>t. sum_upto (\\<lambda>_. 1) t * (1 / t)) has_integral\n   sum_upto (\\<lambda>_. 1) x * ln x - sum_upto (\\<lambda>_. 1) 1 * ln 1 -\n   (\\<Sum>n\\<in>real -` {1<..x}. 1 * ln (real n)))\n   {1..x}\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "hence \"((\\<lambda>t. real (nat \\<lfloor>t\\<rfloor>) / t) has_integral\n           real (nat \\<lfloor>x\\<rfloor>) * ln x - (\\<Sum>n\\<in>real -` {1<..x}. ln (real n))) {1..x}\""], ["proof (prove)\nusing this:\n  ((\\<lambda>t. sum_upto (\\<lambda>_. 1) t * (1 / t)) has_integral\n   sum_upto (\\<lambda>_. 1) x * ln x - sum_upto (\\<lambda>_. 1) 1 * ln 1 -\n   (\\<Sum>n\\<in>real -` {1<..x}. 1 * ln (real n)))\n   {1..x}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. real (nat \\<lfloor>t\\<rfloor>) / t) has_integral\n     real (nat \\<lfloor>x\\<rfloor>) * ln x -\n     (\\<Sum>n\\<in>real -` {1<..x}. ln (real n)))\n     {1..x}", "by (simp add: sum_upto_altdef)"], ["proof (state)\nthis:\n  ((\\<lambda>t. real (nat \\<lfloor>t\\<rfloor>) / t) has_integral\n   real (nat \\<lfloor>x\\<rfloor>) * ln x -\n   (\\<Sum>n\\<in>real -` {1<..x}. ln (real n)))\n   {1..x}\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>t. real (nat \\<lfloor>t\\<rfloor>) / t) has_integral\n   real (nat \\<lfloor>x\\<rfloor>) * ln x -\n   (\\<Sum>n\\<in>real -` {1<..x}. ln (real n)))\n   {1..x}\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "have \"(\\<Sum>n\\<in>real -` {1<..x}. ln (real n)) = sum_upto ln x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>real -` {1<..x}. ln (real n)) =\n    sum_upto (\\<lambda>x. ln (real x)) x", "unfolding sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>real -` {1<..x}. ln (real n)) =\n    (\\<Sum>x\\<in>{i. 0 < i \\<and> real i \\<le> x}. ln (real x))", "by (intro sum.mono_neutral_left)\n       (auto intro!: finite_subset[OF _ finite_vimage_real_of_nat_greaterThanAtMost[of 0 x]])"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>real -` {1<..x}. ln (real n)) =\n  sum_upto (\\<lambda>x. ln (real x)) x\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>t. real (nat \\<lfloor>t\\<rfloor>) / t) has_integral\n   real (nat \\<lfloor>x\\<rfloor>) * ln x -\n   sum_upto (\\<lambda>x. ln (real x)) x)\n   {1..x}", "have *: \"((\\<lambda>t. real (nat \\<lfloor>t\\<rfloor>) / t) has_integral \\<lfloor>x\\<rfloor> * ln x - sum_upto ln x) {1..x}\""], ["proof (prove)\nusing this:\n  ((\\<lambda>t. real (nat \\<lfloor>t\\<rfloor>) / t) has_integral\n   real (nat \\<lfloor>x\\<rfloor>) * ln x -\n   sum_upto (\\<lambda>x. ln (real x)) x)\n   {1..x}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. real (nat \\<lfloor>t\\<rfloor>) / t) has_integral\n     real_of_int \\<lfloor>x\\<rfloor> * ln x -\n     sum_upto (\\<lambda>x. ln (real x)) x)\n     {1..x}", "using x"], ["proof (prove)\nusing this:\n  ((\\<lambda>t. real (nat \\<lfloor>t\\<rfloor>) / t) has_integral\n   real (nat \\<lfloor>x\\<rfloor>) * ln x -\n   sum_upto (\\<lambda>x. ln (real x)) x)\n   {1..x}\n  1 < x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. real (nat \\<lfloor>t\\<rfloor>) / t) has_integral\n     real_of_int \\<lfloor>x\\<rfloor> * ln x -\n     sum_upto (\\<lambda>x. ln (real x)) x)\n     {1..x}", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>t. real (nat \\<lfloor>t\\<rfloor>) / t) has_integral\n   real_of_int \\<lfloor>x\\<rfloor> * ln x -\n   sum_upto (\\<lambda>x. ln (real x)) x)\n   {1..x}\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "have \"0 \\<le> real_of_int \\<lfloor>x\\<rfloor> * ln x - sum_upto (\\<lambda>n. ln (real n)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> real_of_int \\<lfloor>x\\<rfloor> * ln x -\n            sum_upto (\\<lambda>n. ln (real n)) x", "using *"], ["proof (prove)\nusing this:\n  ((\\<lambda>t. real (nat \\<lfloor>t\\<rfloor>) / t) has_integral\n   real_of_int \\<lfloor>x\\<rfloor> * ln x -\n   sum_upto (\\<lambda>x. ln (real x)) x)\n   {1..x}\n\ngoal (1 subgoal):\n 1. 0 \\<le> real_of_int \\<lfloor>x\\<rfloor> * ln x -\n            sum_upto (\\<lambda>n. ln (real n)) x", "by (rule has_integral_nonneg) auto"], ["proof (state)\nthis:\n  0 \\<le> real_of_int \\<lfloor>x\\<rfloor> * ln x -\n          sum_upto (\\<lambda>n. ln (real n)) x\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "also"], ["proof (state)\nthis:\n  0 \\<le> real_of_int \\<lfloor>x\\<rfloor> * ln x -\n          sum_upto (\\<lambda>n. ln (real n)) x\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "have \"\\<dots> \\<le> x * ln x - sum_upto ln x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int \\<lfloor>x\\<rfloor> * ln x -\n    sum_upto (\\<lambda>n. ln (real n)) x\n    \\<le> x * ln x - sum_upto (\\<lambda>x. ln (real x)) x", "using x"], ["proof (prove)\nusing this:\n  1 < x\n\ngoal (1 subgoal):\n 1. real_of_int \\<lfloor>x\\<rfloor> * ln x -\n    sum_upto (\\<lambda>n. ln (real n)) x\n    \\<le> x * ln x - sum_upto (\\<lambda>x. ln (real x)) x", "by (intro diff_mono mult_mono) auto"], ["proof (state)\nthis:\n  real_of_int \\<lfloor>x\\<rfloor> * ln x -\n  sum_upto (\\<lambda>n. ln (real n)) x\n  \\<le> x * ln x - sum_upto (\\<lambda>x. ln (real x)) x\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> x * ln x - sum_upto (\\<lambda>x. ln (real x)) x", "have upper: \"sum_upto ln x \\<le> x * ln x\""], ["proof (prove)\nusing this:\n  0 \\<le> x * ln x - sum_upto (\\<lambda>x. ln (real x)) x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>x. ln (real x)) x \\<le> x * ln x", "by simp"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>x. ln (real x)) x \\<le> x * ln x\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "have \"(x - 1) * ln x - x + 1 \\<le> \\<lfloor>x\\<rfloor> * ln x - x + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x - 1) * ln x - x + 1\n    \\<le> real_of_int \\<lfloor>x\\<rfloor> * ln x - x + 1", "using x"], ["proof (prove)\nusing this:\n  1 < x\n\ngoal (1 subgoal):\n 1. (x - 1) * ln x - x + 1\n    \\<le> real_of_int \\<lfloor>x\\<rfloor> * ln x - x + 1", "by (intro diff_mono mult_mono add_mono) auto"], ["proof (state)\nthis:\n  (x - 1) * ln x - x + 1\n  \\<le> real_of_int \\<lfloor>x\\<rfloor> * ln x - x + 1\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "also"], ["proof (state)\nthis:\n  (x - 1) * ln x - x + 1\n  \\<le> real_of_int \\<lfloor>x\\<rfloor> * ln x - x + 1\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "have \"((\\<lambda>t. 1) has_integral (x - 1)) {1..x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. 1) has_integral x - 1) {1..x}", "using has_integral_const_real[of \"1::real\" 1 x] x"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. 1) has_integral\n   Henstock_Kurzweil_Integration.content {1..x} *\\<^sub>R 1)\n   {1..x}\n  1 < x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. 1) has_integral x - 1) {1..x}", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>t. 1) has_integral x - 1) {1..x}\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "from * and this"], ["proof (chain)\npicking this:\n  ((\\<lambda>t. real (nat \\<lfloor>t\\<rfloor>) / t) has_integral\n   real_of_int \\<lfloor>x\\<rfloor> * ln x -\n   sum_upto (\\<lambda>x. ln (real x)) x)\n   {1..x}\n  ((\\<lambda>t. 1) has_integral x - 1) {1..x}", "have \"\\<lfloor>x\\<rfloor> * ln x - sum_upto ln x \\<le> x - 1\""], ["proof (prove)\nusing this:\n  ((\\<lambda>t. real (nat \\<lfloor>t\\<rfloor>) / t) has_integral\n   real_of_int \\<lfloor>x\\<rfloor> * ln x -\n   sum_upto (\\<lambda>x. ln (real x)) x)\n   {1..x}\n  ((\\<lambda>t. 1) has_integral x - 1) {1..x}\n\ngoal (1 subgoal):\n 1. real_of_int \\<lfloor>x\\<rfloor> * ln x -\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<le> x - 1", "by (rule has_integral_le) auto"], ["proof (state)\nthis:\n  real_of_int \\<lfloor>x\\<rfloor> * ln x -\n  sum_upto (\\<lambda>x. ln (real x)) x\n  \\<le> x - 1\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "hence \"\\<lfloor>x\\<rfloor> * ln x - x + 1 \\<le> sum_upto ln x\""], ["proof (prove)\nusing this:\n  real_of_int \\<lfloor>x\\<rfloor> * ln x -\n  sum_upto (\\<lambda>x. ln (real x)) x\n  \\<le> x - 1\n\ngoal (1 subgoal):\n 1. real_of_int \\<lfloor>x\\<rfloor> * ln x - x + 1\n    \\<le> sum_upto (\\<lambda>x. ln (real x)) x", "by simp"], ["proof (state)\nthis:\n  real_of_int \\<lfloor>x\\<rfloor> * ln x - x + 1\n  \\<le> sum_upto (\\<lambda>x. ln (real x)) x\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "finally"], ["proof (chain)\npicking this:\n  (x - 1) * ln x - x + 1 \\<le> sum_upto (\\<lambda>x. ln (real x)) x", "have \"sum_upto ln x \\<ge> x * ln x - x - ln x + 1\""], ["proof (prove)\nusing this:\n  (x - 1) * ln x - x + 1 \\<le> sum_upto (\\<lambda>x. ln (real x)) x\n\ngoal (1 subgoal):\n 1. x * ln x - x - ln x + 1 \\<le> sum_upto (\\<lambda>x. ln (real x)) x", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  x * ln x - x - ln x + 1 \\<le> sum_upto (\\<lambda>x. ln (real x)) x\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "with upper"], ["proof (chain)\npicking this:\n  sum_upto (\\<lambda>x. ln (real x)) x \\<le> x * ln x\n  x * ln x - x - ln x + 1 \\<le> sum_upto (\\<lambda>x. ln (real x)) x", "show ?thesis"], ["proof (prove)\nusing this:\n  sum_upto (\\<lambda>x. ln (real x)) x \\<le> x * ln x\n  x * ln x - x - ln x + 1 \\<le> sum_upto (\\<lambda>x. ln (real x)) x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>x. ln (real x)) x\n    \\<in> {x * ln x - x - ln x + 1..x * ln x}", "by simp"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>x. ln (real x)) x\n  \\<in> {x * ln x - x - ln x + 1..x * ln x}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stirling_weak_bigo: \"(\\<lambda>x::real. sum_upto ln x - x * ln x) \\<in> O(\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n    \\<in> O(\\<lambda>x. x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n    \\<in> O(\\<lambda>x. x)", "have \"(\\<lambda>x. sum_upto ln x - x * ln x) \\<in> O(\\<lambda>x. -(sum_upto ln x - x * ln x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n    \\<in> O(\\<lambda>x. - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x))", "by (subst landau_o.big.uminus) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n  \\<in> O(\\<lambda>x. - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n    \\<in> O(\\<lambda>x. x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n  \\<in> O(\\<lambda>x. - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n    \\<in> O(\\<lambda>x. x)", "have \"(\\<lambda>x. -(sum_upto ln x - x * ln x)) \\<in> O(\\<lambda>x. x + ln x - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x))\n    \\<in> O(\\<lambda>x. x + ln x - 1)", "proof (intro le_imp_bigo_real[of 2] eventually_mono[OF eventually_ge_at_top[of 1]], goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. 0 \\<le> 2\n 2. \\<And>x.\n       1 \\<le> x \\<Longrightarrow>\n       - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n       \\<le> 2 * (x + ln x - 1)\n 3. \\<And>x.\n       1 \\<le> x \\<Longrightarrow>\n       0 \\<le> - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)", "case (2 x)"], ["proof (state)\nthis:\n  1 \\<le> x\n\ngoal (3 subgoals):\n 1. 0 \\<le> 2\n 2. \\<And>x.\n       1 \\<le> x \\<Longrightarrow>\n       - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n       \\<le> 2 * (x + ln x - 1)\n 3. \\<And>x.\n       1 \\<le> x \\<Longrightarrow>\n       0 \\<le> - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)", "thus ?case"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n    \\<le> 2 * (x + ln x - 1)", "using stirling_weak[of x]"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  1 \\<le> x \\<Longrightarrow>\n  sum_upto (\\<lambda>x. ln (real x)) x\n  \\<in> {x * ln x - x - ln x + 1..x * ln x}\n\ngoal (1 subgoal):\n 1. - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n    \\<le> 2 * (x + ln x - 1)", "by (auto simp: algebra_simps)"], ["proof (state)\nthis:\n  - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n  \\<le> 2 * (x + ln x - 1)\n\ngoal (2 subgoals):\n 1. 0 \\<le> 2\n 2. \\<And>x.\n       1 \\<le> x \\<Longrightarrow>\n       0 \\<le> - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> 2\n 2. \\<And>x.\n       1 \\<le> x \\<Longrightarrow>\n       0 \\<le> - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)", "case (3 x)"], ["proof (state)\nthis:\n  1 \\<le> x\n\ngoal (2 subgoals):\n 1. 0 \\<le> 2\n 2. \\<And>x.\n       1 \\<le> x \\<Longrightarrow>\n       0 \\<le> - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)", "thus ?case"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. 0 \\<le> - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)", "using stirling_weak[of x]"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  1 \\<le> x \\<Longrightarrow>\n  sum_upto (\\<lambda>x. ln (real x)) x\n  \\<in> {x * ln x - x - ln x + 1..x * ln x}\n\ngoal (1 subgoal):\n 1. 0 \\<le> - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)", "by (auto simp: algebra_simps)"], ["proof (state)\nthis:\n  0 \\<le> - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n\ngoal (1 subgoal):\n 1. 0 \\<le> 2", "qed auto"], ["proof (state)\nthis:\n  (\\<lambda>x. - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x))\n  \\<in> O(\\<lambda>x. x + ln x - 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n    \\<in> O(\\<lambda>x. x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. - (sum_upto (\\<lambda>x. ln (real x)) x - x * ln x))\n  \\<in> O(\\<lambda>x. x + ln x - 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n    \\<in> O(\\<lambda>x. x)", "have \"(\\<lambda>x. x + ln x - 1) \\<in> O(\\<lambda>x::real. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x + ln x - 1) \\<in> O(\\<lambda>x. x)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. x + ln x - 1) \\<in> O(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n    \\<in> O(\\<lambda>x. x)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n  \\<in> O(\\<lambda>x. x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n  \\<in> O(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n    \\<in> O(\\<lambda>x. x)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n  \\<in> O(\\<lambda>x. x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma floor_floor_div_eq:\n  fixes x :: real and d :: nat\n  assumes \"x \\<ge> 0\"\n  shows   \"\\<lfloor>nat \\<lfloor>x\\<rfloor> / real d\\<rfloor> = \\<lfloor>x / real d\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>real (nat \\<lfloor>x\\<rfloor>) / real d\\<rfloor> =\n    \\<lfloor>x / real d\\<rfloor>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lfloor>real (nat \\<lfloor>x\\<rfloor>) / real d\\<rfloor> =\n    \\<lfloor>x / real d\\<rfloor>", "have \"\\<lfloor>nat \\<lfloor>x\\<rfloor> / real_of_int (int d)\\<rfloor> = \\<lfloor>x / real_of_int (int d)\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lfloor>real (nat \\<lfloor>x\\<rfloor>) / real_of_int (int d)\\<rfloor> =\n    \\<lfloor>x / real_of_int (int d)\\<rfloor>", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<lfloor>real (nat \\<lfloor>x\\<rfloor>) / real_of_int (int d)\\<rfloor> =\n    \\<lfloor>x / real_of_int (int d)\\<rfloor>", "by (subst (1 2) floor_divide_real_eq_div) auto"], ["proof (state)\nthis:\n  \\<lfloor>real (nat \\<lfloor>x\\<rfloor>) / real_of_int (int d)\\<rfloor> =\n  \\<lfloor>x / real_of_int (int d)\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<lfloor>real (nat \\<lfloor>x\\<rfloor>) / real d\\<rfloor> =\n    \\<lfloor>x / real d\\<rfloor>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lfloor>real (nat \\<lfloor>x\\<rfloor>) / real_of_int (int d)\\<rfloor> =\n  \\<lfloor>x / real_of_int (int d)\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<lfloor>real (nat \\<lfloor>x\\<rfloor>) / real d\\<rfloor> =\n    \\<lfloor>x / real d\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  \\<lfloor>real (nat \\<lfloor>x\\<rfloor>) / real d\\<rfloor> =\n  \\<lfloor>x / real d\\<rfloor>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The key to showing Mertens' first theorem is the function\n  \\[h(x) := \\sum\\limits_{n \\leq x} \\frac{\\Lambda(d)}{d}\\]\n  where $\\Lambda$ is the Mangoldt function, which is equal to $\\ln p$ for any prime power\n  $p^k$ and $0$ otherwise. As we shall see, $h(x)$ is a good approximation for $\\mathfrak M(x)$,\n  as the difference between them is bounded by a constant.\n\\<close>"], ["", "lemma sum_upto_mangoldt_over_id_minus_phi_bounded:\n    \"(\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - \\<MM> x) \\<in> O(\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - \\<MM> x)\n    \\<in> O(\\<lambda>_. 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - \\<MM> x)\n    \\<in> O(\\<lambda>_. 1)", "define f where \"f = (\\<lambda>d. mangoldt d / real d)\""], ["proof (state)\nthis:\n  f = (\\<lambda>d. mangoldt d / real d)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - \\<MM> x)\n    \\<in> O(\\<lambda>_. 1)", "define C where \"C = (\\<Sum>p. ln (real (p + 1)) * (1 / real (p * (p - 1))))\""], ["proof (state)\nthis:\n  C = (\\<Sum>p. ln (real (p + 1)) * (1 / real (p * (p - 1))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - \\<MM> x)\n    \\<in> O(\\<lambda>_. 1)", "have summable: \"summable (\\<lambda>p::nat. ln (p + 1) * (1 / (p * (p - 1))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>p. ln (real (p + 1)) * (1 / real (p * (p - 1))))", "proof (rule summable_comparison_test_bigo)"], ["proof (state)\ngoal (2 subgoals):\n 1. summable (\\<lambda>n. norm (?g n))\n 2. (\\<lambda>p. ln (real (p + 1)) * (1 / real (p * (p - 1)))) \\<in> O(?g)", "show \"summable (\\<lambda>p. norm (p powr (-3/2)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>p. norm (real p powr (- 3 / 2)))", "by (simp add: summable_real_powr_iff)"], ["proof (state)\nthis:\n  summable (\\<lambda>p. norm (real p powr (- 3 / 2)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. ln (real (p + 1)) * (1 / real (p * (p - 1))))\n    \\<in> O(\\<lambda>p. real p powr (- 3 / 2))", "qed real_asymp"], ["proof (state)\nthis:\n  summable (\\<lambda>p. ln (real (p + 1)) * (1 / real (p * (p - 1))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - \\<MM> x)\n    \\<in> O(\\<lambda>_. 1)", "have diff_bound: \"sum_upto f x - \\<MM> x \\<in> {0..C}\" if x: \"x \\<ge> 4\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "define S where \"S = {(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}\""], ["proof (state)\nthis:\n  S = {(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "define S' where \"S' = (SIGMA p:{2..nat \\<lfloor>root 2 x\\<rfloor>}. {2..nat \\<lfloor>log 2 x\\<rfloor>})\""], ["proof (state)\nthis:\n  S' =\n  {2..nat \\<lfloor>root 2 x\\<rfloor>} \\<times>\n  {2..nat \\<lfloor>log 2 x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "have \"S \\<subseteq> {..nat \\<lfloor>x\\<rfloor>} \\<times> {..nat \\<lfloor>log 2 x\\<rfloor>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<subseteq> {..nat \\<lfloor>x\\<rfloor>} \\<times>\n                  {..nat \\<lfloor>log 2 x\\<rfloor>}", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}\n    \\<subseteq> {..nat \\<lfloor>x\\<rfloor>} \\<times>\n                {..nat \\<lfloor>log 2 x\\<rfloor>}", "using x primepows_le_subset[of x 1]"], ["proof (prove)\nusing this:\n  4 \\<le> x\n  \\<lbrakk>0 < x; 0 < 1\\<rbrakk>\n  \\<Longrightarrow> {(p, i).\n                     prime p \\<and> 1 \\<le> i \\<and> real (p ^ i) \\<le> x}\n                    \\<subseteq> {..nat \\<lfloor>root 1 x\\<rfloor>} \\<times>\n                                {..nat \\<lfloor>log 2 x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. {(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}\n    \\<subseteq> {..nat \\<lfloor>x\\<rfloor>} \\<times>\n                {..nat \\<lfloor>log 2 x\\<rfloor>}", "by (auto simp: Suc_le_eq)"], ["proof (state)\nthis:\n  S \\<subseteq> {..nat \\<lfloor>x\\<rfloor>} \\<times>\n                {..nat \\<lfloor>log 2 x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "hence \"finite S\""], ["proof (prove)\nusing this:\n  S \\<subseteq> {..nat \\<lfloor>x\\<rfloor>} \\<times>\n                {..nat \\<lfloor>log 2 x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. finite S", "by (rule finite_subset) auto"], ["proof (state)\nthis:\n  finite S\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "note fin = finite_subset[OF _ this, unfolded S_def]"], ["proof (state)\nthis:\n  ?A \\<subseteq> {(p, i).\n                  prime p \\<and>\n                  0 < i \\<and> real (p ^ i) \\<le> x} \\<Longrightarrow>\n  finite ?A\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "have \"sum_upto f x = (\\<Sum>(p, i)\\<in>S. ln (real p) / real (p ^ i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto f x = (\\<Sum>(p, i)\\<in>S. ln (real p) / real (p ^ i))", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto f x =\n    (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> 0 < i \\<and> real (p ^ i) \\<le> x}.\n       ln (real p) / real (p ^ i))", "by (intro sum_upto_primepows) (auto simp: f_def mangoldt_non_primepow)"], ["proof (state)\nthis:\n  sum_upto f x = (\\<Sum>(p, i)\\<in>S. ln (real p) / real (p ^ i))\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "also"], ["proof (state)\nthis:\n  sum_upto f x = (\\<Sum>(p, i)\\<in>S. ln (real p) / real (p ^ i))\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "have \"S = {p. prime p \\<and> p \\<le> x} \\<times> {1} \\<union> {(p, i). prime p \\<and> 1 < i \\<and> real (p ^ i) \\<le> x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S =\n    {p. prime p \\<and> real p \\<le> x} \\<times> {1} \\<union>\n    {(p, i). prime p \\<and> 1 < i \\<and> real (p ^ i) \\<le> x}", "by (auto simp: S_def not_less le_Suc_eq not_le intro!: Suc_lessI)"], ["proof (state)\nthis:\n  S =\n  {p. prime p \\<and> real p \\<le> x} \\<times> {1} \\<union>\n  {(p, i). prime p \\<and> 1 < i \\<and> real (p ^ i) \\<le> x}\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "also"], ["proof (state)\nthis:\n  S =\n  {p. prime p \\<and> real p \\<le> x} \\<times> {1} \\<union>\n  {(p, i). prime p \\<and> 1 < i \\<and> real (p ^ i) \\<le> x}\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "have \"(\\<Sum>(p,i)\\<in>\\<dots>. ln (real p) / real (p ^ i)) =\n                 (\\<Sum>(p, i) \\<in> {p. prime p \\<and> of_nat p \\<le> x} \\<times> {1}. ln (real p) / real (p ^ i)) +\n                 (\\<Sum>(p, i) | prime p \\<and> real (p ^ i) \\<le> x \\<and> i > 1. ln (real p) / real (p ^ i))\"\n      (is \"_ = ?S1 + ?S2\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(p, i)\n           \\<in>{p. prime p \\<and> real p \\<le> x} \\<times> {1} \\<union>\n                {(p, i). prime p \\<and> 1 < i \\<and> real (p ^ i) \\<le> x}.\n       ln (real p) / real (p ^ i)) =\n    (\\<Sum>(p, i)\\<in>{p. prime p \\<and> real p \\<le> x} \\<times> {1}.\n       ln (real p) / real (p ^ i)) +\n    (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n       ln (real p) / real (p ^ i))", "by (subst sum.union_disjoint[OF fin fin]) (auto simp: conj_commute case_prod_unfold)"], ["proof (state)\nthis:\n  (\\<Sum>(p, i)\n         \\<in>{p. prime p \\<and> real p \\<le> x} \\<times> {1} \\<union>\n              {(p, i). prime p \\<and> 1 < i \\<and> real (p ^ i) \\<le> x}.\n     ln (real p) / real (p ^ i)) =\n  (\\<Sum>(p, i)\\<in>{p. prime p \\<and> real p \\<le> x} \\<times> {1}.\n     ln (real p) / real (p ^ i)) +\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n     ln (real p) / real (p ^ i))\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "also"], ["proof (state)\nthis:\n  (\\<Sum>(p, i)\n         \\<in>{p. prime p \\<and> real p \\<le> x} \\<times> {1} \\<union>\n              {(p, i). prime p \\<and> 1 < i \\<and> real (p ^ i) \\<le> x}.\n     ln (real p) / real (p ^ i)) =\n  (\\<Sum>(p, i)\\<in>{p. prime p \\<and> real p \\<le> x} \\<times> {1}.\n     ln (real p) / real (p ^ i)) +\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n     ln (real p) / real (p ^ i))\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "have \"?S1 = \\<MM> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(p, i)\\<in>{p. prime p \\<and> real p \\<le> x} \\<times> {1}.\n       ln (real p) / real (p ^ i)) =\n    \\<MM> x", "by (subst sum.cartesian_product [symmetric]) (auto simp: primes_M_def prime_sum_upto_def)"], ["proof (state)\nthis:\n  (\\<Sum>(p, i)\\<in>{p. prime p \\<and> real p \\<le> x} \\<times> {1}.\n     ln (real p) / real (p ^ i)) =\n  \\<MM> x\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "finally"], ["proof (chain)\npicking this:\n  sum_upto f x =\n  \\<MM> x +\n  (\\<Sum> | case  of\n            (p, i) \\<Rightarrow>\n              prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i.\n     case  of (p, i) \\<Rightarrow> ln (real p) / real (p ^ i))", "have eq: \"sum_upto f x - \\<MM> x = ?S2\""], ["proof (prove)\nusing this:\n  sum_upto f x =\n  \\<MM> x +\n  (\\<Sum> | case  of\n            (p, i) \\<Rightarrow>\n              prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i.\n     case  of (p, i) \\<Rightarrow> ln (real p) / real (p ^ i))\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x =\n    (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n       ln (real p) / real (p ^ i))", "by simp"], ["proof (state)\nthis:\n  sum_upto f x - \\<MM> x =\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n     ln (real p) / real (p ^ i))\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "have \"?S2 \\<le> (\\<Sum>(p, i)\\<in>S'. ln (real p) / real (p ^ i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n       ln (real p) / real (p ^ i))\n    \\<le> (\\<Sum>(p, i)\\<in>S'. ln (real p) / real (p ^ i))", "using primepows_le_subset[of x 2] x"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < x; 0 < 2\\<rbrakk>\n  \\<Longrightarrow> {(p, i).\n                     prime p \\<and> 2 \\<le> i \\<and> real (p ^ i) \\<le> x}\n                    \\<subseteq> {..nat \\<lfloor>root 2 x\\<rfloor>} \\<times>\n                                {..nat \\<lfloor>log 2 x\\<rfloor>}\n  4 \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n       ln (real p) / real (p ^ i))\n    \\<le> (\\<Sum>(p, i)\\<in>S'. ln (real p) / real (p ^ i))", "unfolding case_prod_unfold of_nat_power"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < x; 0 < 2\\<rbrakk>\n  \\<Longrightarrow> {p. prime (fst p) \\<and>\n                        2 \\<le> snd p \\<and> real (fst p) ^ snd p \\<le> x}\n                    \\<subseteq> {..nat \\<lfloor>root 2 x\\<rfloor>} \\<times>\n                                {..nat \\<lfloor>log 2 x\\<rfloor>}\n  4 \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<Sum>p | prime (fst p) \\<and>\n               real (fst p) ^ snd p \\<le> x \\<and> 1 < snd p.\n       ln (real (fst p)) / real (fst p) ^ snd p)\n    \\<le> (\\<Sum>p\\<in>S'. ln (real (fst p)) / real (fst p) ^ snd p)", "by (intro sum_mono2 divide_nonneg_pos zero_less_power)\n         (auto simp: eval_nat_numeral Suc_le_eq S'_def subset_iff dest: prime_gt_1_nat)+"], ["proof (state)\nthis:\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n     ln (real p) / real (p ^ i))\n  \\<le> (\\<Sum>(p, i)\\<in>S'. ln (real p) / real (p ^ i))\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "also"], ["proof (state)\nthis:\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n     ln (real p) / real (p ^ i))\n  \\<le> (\\<Sum>(p, i)\\<in>S'. ln (real p) / real (p ^ i))\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "have \"\\<dots> = (\\<Sum>p=2..nat \\<lfloor>sqrt x\\<rfloor>. ln p * (\\<Sum>i\\<in>{2..nat \\<lfloor>log 2 x\\<rfloor>}. (1 / real p) ^ i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(p, i)\\<in>S'. ln (real p) / real (p ^ i)) =\n    (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n        ln (real p) *\n        sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>})", "by (simp add: S'_def sum.Sigma case_prod_unfold\n                    sum_distrib_left sqrt_def field_simps)"], ["proof (state)\nthis:\n  (\\<Sum>(p, i)\\<in>S'. ln (real p) / real (p ^ i)) =\n  (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n      ln (real p) *\n      sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>})\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "also"], ["proof (state)\nthis:\n  (\\<Sum>(p, i)\\<in>S'. ln (real p) / real (p ^ i)) =\n  (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n      ln (real p) *\n      sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>})\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "have \"\\<dots> \\<le> (\\<Sum>p=2..nat \\<lfloor>sqrt x\\<rfloor>. ln p * (1 / (p * (p - 1))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n        ln (real p) *\n        sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>})\n    \\<le> (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n              ln (real p) * (1 / real (p * (p - 1))))", "unfolding sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n        ln (real p) *\n        sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>})\n    \\<le> (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n              ln (real p) * (1 / real (p * (p - 1))))", "proof (intro sum_mono, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {2..nat \\<lfloor>sqrt x\\<rfloor>} \\<Longrightarrow>\n       ln (real p) *\n       sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>}\n       \\<le> ln (real p) * (1 / real (p * (p - 1)))", "case (1 p)"], ["proof (state)\nthis:\n  p \\<in> {2..nat \\<lfloor>sqrt x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {2..nat \\<lfloor>sqrt x\\<rfloor>} \\<Longrightarrow>\n       ln (real p) *\n       sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>}\n       \\<le> ln (real p) * (1 / real (p * (p - 1)))", "from x"], ["proof (chain)\npicking this:\n  4 \\<le> x", "have \"nat \\<lfloor>log 2 x\\<rfloor> \\<ge> 2\""], ["proof (prove)\nusing this:\n  4 \\<le> x\n\ngoal (1 subgoal):\n 1. 2 \\<le> nat \\<lfloor>log 2 x\\<rfloor>", "by (auto simp: le_nat_iff' le_log_iff)"], ["proof (state)\nthis:\n  2 \\<le> nat \\<lfloor>log 2 x\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {2..nat \\<lfloor>sqrt x\\<rfloor>} \\<Longrightarrow>\n       ln (real p) *\n       sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>}\n       \\<le> ln (real p) * (1 / real (p * (p - 1)))", "hence \"(\\<Sum>i\\<in>{2..nat \\<lfloor>log 2 x\\<rfloor>}. (1 / real p) ^ i) = \n               ((1 / p)\\<^sup>2 - (1 / p) ^ nat \\<lfloor>log 2 x\\<rfloor> / p) / (1 - 1 / p)\""], ["proof (prove)\nusing this:\n  2 \\<le> nat \\<lfloor>log 2 x\\<rfloor>\n\ngoal (1 subgoal):\n 1. sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>} =\n    ((1 / real p)\\<^sup>2 -\n     (1 / real p) ^ nat \\<lfloor>log 2 x\\<rfloor> / real p) /\n    (1 - 1 / real p)", "using 1"], ["proof (prove)\nusing this:\n  2 \\<le> nat \\<lfloor>log 2 x\\<rfloor>\n  p \\<in> {2..nat \\<lfloor>sqrt x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>} =\n    ((1 / real p)\\<^sup>2 -\n     (1 / real p) ^ nat \\<lfloor>log 2 x\\<rfloor> / real p) /\n    (1 - 1 / real p)", "by (subst sum_gp) (auto dest!: prime_gt_1_nat simp: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>} =\n  ((1 / real p)\\<^sup>2 -\n   (1 / real p) ^ nat \\<lfloor>log 2 x\\<rfloor> / real p) /\n  (1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {2..nat \\<lfloor>sqrt x\\<rfloor>} \\<Longrightarrow>\n       ln (real p) *\n       sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>}\n       \\<le> ln (real p) * (1 / real (p * (p - 1)))", "also"], ["proof (state)\nthis:\n  sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>} =\n  ((1 / real p)\\<^sup>2 -\n   (1 / real p) ^ nat \\<lfloor>log 2 x\\<rfloor> / real p) /\n  (1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {2..nat \\<lfloor>sqrt x\\<rfloor>} \\<Longrightarrow>\n       ln (real p) *\n       sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>}\n       \\<le> ln (real p) * (1 / real (p * (p - 1)))", "have \"\\<dots> \\<le> ((1 / p) ^ 2 - 0) / (1 - 1 / p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((1 / real p)\\<^sup>2 -\n     (1 / real p) ^ nat \\<lfloor>log 2 x\\<rfloor> / real p) /\n    (1 - 1 / real p)\n    \\<le> ((1 / real p)\\<^sup>2 - 0) / (1 - 1 / real p)", "using 1"], ["proof (prove)\nusing this:\n  p \\<in> {2..nat \\<lfloor>sqrt x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. ((1 / real p)\\<^sup>2 -\n     (1 / real p) ^ nat \\<lfloor>log 2 x\\<rfloor> / real p) /\n    (1 - 1 / real p)\n    \\<le> ((1 / real p)\\<^sup>2 - 0) / (1 - 1 / real p)", "by (intro divide_right_mono diff_mono power_mono)\n                   (auto simp: field_simps dest: prime_gt_0_nat)"], ["proof (state)\nthis:\n  ((1 / real p)\\<^sup>2 -\n   (1 / real p) ^ nat \\<lfloor>log 2 x\\<rfloor> / real p) /\n  (1 - 1 / real p)\n  \\<le> ((1 / real p)\\<^sup>2 - 0) / (1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {2..nat \\<lfloor>sqrt x\\<rfloor>} \\<Longrightarrow>\n       ln (real p) *\n       sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>}\n       \\<le> ln (real p) * (1 / real (p * (p - 1)))", "also"], ["proof (state)\nthis:\n  ((1 / real p)\\<^sup>2 -\n   (1 / real p) ^ nat \\<lfloor>log 2 x\\<rfloor> / real p) /\n  (1 - 1 / real p)\n  \\<le> ((1 / real p)\\<^sup>2 - 0) / (1 - 1 / real p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {2..nat \\<lfloor>sqrt x\\<rfloor>} \\<Longrightarrow>\n       ln (real p) *\n       sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>}\n       \\<le> ln (real p) * (1 / real (p * (p - 1)))", "have \"\\<dots> = 1 / (p * (p - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((1 / real p)\\<^sup>2 - 0) / (1 - 1 / real p) = 1 / real (p * (p - 1))", "by (auto simp: divide_simps power2_eq_square dest: prime_gt_0_nat)"], ["proof (state)\nthis:\n  ((1 / real p)\\<^sup>2 - 0) / (1 - 1 / real p) = 1 / real (p * (p - 1))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {2..nat \\<lfloor>sqrt x\\<rfloor>} \\<Longrightarrow>\n       ln (real p) *\n       sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>}\n       \\<le> ln (real p) * (1 / real (p * (p - 1)))", "finally"], ["proof (chain)\npicking this:\n  sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>}\n  \\<le> 1 / real (p * (p - 1))", "show ?case"], ["proof (prove)\nusing this:\n  sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>}\n  \\<le> 1 / real (p * (p - 1))\n\ngoal (1 subgoal):\n 1. ln (real p) * sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>}\n    \\<le> ln (real p) * (1 / real (p * (p - 1)))", "using 1"], ["proof (prove)\nusing this:\n  sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>}\n  \\<le> 1 / real (p * (p - 1))\n  p \\<in> {2..nat \\<lfloor>sqrt x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. ln (real p) * sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>}\n    \\<le> ln (real p) * (1 / real (p * (p - 1)))", "by (intro mult_left_mono) (auto dest: prime_gt_0_nat)"], ["proof (state)\nthis:\n  ln (real p) * sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>}\n  \\<le> ln (real p) * (1 / real (p * (p - 1)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n      ln (real p) *\n      sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>})\n  \\<le> (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n            ln (real p) * (1 / real (p * (p - 1))))\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "also"], ["proof (state)\nthis:\n  (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n      ln (real p) *\n      sum ((^) (1 / real p)) {2..nat \\<lfloor>log 2 x\\<rfloor>})\n  \\<le> (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n            ln (real p) * (1 / real (p * (p - 1))))\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "have \"\\<dots> \\<le> (\\<Sum>p=2..nat \\<lfloor>sqrt x\\<rfloor>. ln (p + 1) * (1 / (p * (p - 1))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n        ln (real p) * (1 / real (p * (p - 1))))\n    \\<le> (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n              ln (real (p + 1)) * (1 / real (p * (p - 1))))", "by (intro sum_mono mult_mono) auto"], ["proof (state)\nthis:\n  (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n      ln (real p) * (1 / real (p * (p - 1))))\n  \\<le> (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n            ln (real (p + 1)) * (1 / real (p * (p - 1))))\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "also"], ["proof (state)\nthis:\n  (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n      ln (real p) * (1 / real (p * (p - 1))))\n  \\<le> (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n            ln (real (p + 1)) * (1 / real (p * (p - 1))))\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "have \"\\<dots> \\<le> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n        ln (real (p + 1)) * (1 / real (p * (p - 1))))\n    \\<le> C", "unfolding C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n        ln (real (p + 1)) * (1 / real (p * (p - 1))))\n    \\<le> (\\<Sum>p. ln (real (p + 1)) * (1 / real (p * (p - 1))))", "by (intro sum_le_suminf summable) auto"], ["proof (state)\nthis:\n  (\\<Sum>p = 2..nat \\<lfloor>sqrt x\\<rfloor>.\n      ln (real (p + 1)) * (1 / real (p * (p - 1))))\n  \\<le> C\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n     ln (real p) / real (p ^ i))\n  \\<le> C", "have \"?S2 \\<le> C\""], ["proof (prove)\nusing this:\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n     ln (real p) / real (p ^ i))\n  \\<le> C\n\ngoal (1 subgoal):\n 1. (\\<Sum>(p, i)\n           \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n       ln (real p) / real (p ^ i))\n    \\<le> C", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n     ln (real p) / real (p ^ i))\n  \\<le> C\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n     ln (real p) / real (p ^ i))\n  \\<le> C\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "have \"?S2 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (\\<Sum>(p, i)\n                   \\<in>{(p, i).\n                         prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n               ln (real p) / real (p ^ i))", "by (intro sum_nonneg) (auto dest: prime_gt_0_nat)"], ["proof (state)\nthis:\n  0 \\<le> (\\<Sum>(p, i)\n                 \\<in>{(p, i).\n                       prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n             ln (real p) / real (p ^ i))\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n     ln (real p) / real (p ^ i))\n  \\<le> C\n  0 \\<le> (\\<Sum>(p, i)\n                 \\<in>{(p, i).\n                       prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n             ln (real p) / real (p ^ i))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n     ln (real p) / real (p ^ i))\n  \\<le> C\n  0 \\<le> (\\<Sum>(p, i)\n                 \\<in>{(p, i).\n                       prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n             ln (real p) / real (p ^ i))\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "using eq"], ["proof (prove)\nusing this:\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n     ln (real p) / real (p ^ i))\n  \\<le> C\n  0 \\<le> (\\<Sum>(p, i)\n                 \\<in>{(p, i).\n                       prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n             ln (real p) / real (p ^ i))\n  sum_upto f x - \\<MM> x =\n  (\\<Sum>(p, i)\n         \\<in>{(p, i). prime p \\<and> real (p ^ i) \\<le> x \\<and> 1 < i}.\n     ln (real p) / real (p ^ i))\n\ngoal (1 subgoal):\n 1. sum_upto f x - \\<MM> x \\<in> {0..C}", "by simp"], ["proof (state)\nthis:\n  sum_upto f x - \\<MM> x \\<in> {0..C}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  4 \\<le> ?x \\<Longrightarrow> sum_upto f ?x - \\<MM> ?x \\<in> {0..C}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - \\<MM> x)\n    \\<in> O(\\<lambda>_. 1)", "from diff_bound[of 4]"], ["proof (chain)\npicking this:\n  4 \\<le> 4 \\<Longrightarrow> sum_upto f 4 - \\<MM> 4 \\<in> {0..C}", "have \"C \\<ge> 0\""], ["proof (prove)\nusing this:\n  4 \\<le> 4 \\<Longrightarrow> sum_upto f 4 - \\<MM> 4 \\<in> {0..C}\n\ngoal (1 subgoal):\n 1. 0 \\<le> C", "by auto"], ["proof (state)\nthis:\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - \\<MM> x)\n    \\<in> O(\\<lambda>_. 1)", "with diff_bound"], ["proof (chain)\npicking this:\n  4 \\<le> ?x \\<Longrightarrow> sum_upto f ?x - \\<MM> ?x \\<in> {0..C}\n  0 \\<le> C", "show \"(\\<lambda>x. sum_upto f x - \\<MM> x) \\<in> O(\\<lambda>_. 1)\""], ["proof (prove)\nusing this:\n  4 \\<le> ?x \\<Longrightarrow> sum_upto f ?x - \\<MM> ?x \\<in> {0..C}\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto f x - \\<MM> x) \\<in> O(\\<lambda>_. 1)", "by (intro le_imp_bigo_real[of C] eventually_mono[OF eventually_ge_at_top[of 4]]) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. sum_upto f x - \\<MM> x) \\<in> O(\\<lambda>_. 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Next, we show that our $h(x)$ itself is close to $\\ln x$, i.\\,e.:\n  \\[\\sum\\limits_{n \\leq x} \\frac{\\Lambda(d)}{d} = \\ln x + O(1)\\]\n\\<close>"], ["", "lemma sum_upto_mangoldt_over_id_asymptotics:\n  \"(\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x) \\<in> O(\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n    \\<in> O(\\<lambda>_. 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n    \\<in> O(\\<lambda>_. 1)", "define r where \"r = (\\<lambda>n::real. sum_upto (\\<lambda>d. mangoldt d * (n / d - real_of_int \\<lfloor>n / d\\<rfloor>)) n)\""], ["proof (state)\nthis:\n  r =\n  (\\<lambda>n.\n      sum_upto\n       (\\<lambda>d.\n           mangoldt d *\n           (n / real d - real_of_int \\<lfloor>n / real d\\<rfloor>))\n       n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n    \\<in> O(\\<lambda>_. 1)", "have r: \"r \\<in> O(\\<psi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> O(\\<psi>)", "proof (intro landau_o.bigI[of 1] eventually_mono[OF eventually_ge_at_top[of 0]])"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < 1\n 2. \\<And>x.\n       0 \\<le> x \\<Longrightarrow> norm (r x) \\<le> 1 * norm (\\<psi> x)", "fix x :: real"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < 1\n 2. \\<And>x.\n       0 \\<le> x \\<Longrightarrow> norm (r x) \\<le> 1 * norm (\\<psi> x)", "assume x: \"x \\<ge> 0\""], ["proof (state)\nthis:\n  0 \\<le> x\n\ngoal (2 subgoals):\n 1. 0 < 1\n 2. \\<And>x.\n       0 \\<le> x \\<Longrightarrow> norm (r x) \\<le> 1 * norm (\\<psi> x)", "have eq: \"{1..nat \\<lfloor>x\\<rfloor>} = {0<..nat \\<lfloor>x\\<rfloor>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {1..nat \\<lfloor>x\\<rfloor>} = {0<..nat \\<lfloor>x\\<rfloor>}", "by auto"], ["proof (state)\nthis:\n  {1..nat \\<lfloor>x\\<rfloor>} = {0<..nat \\<lfloor>x\\<rfloor>}\n\ngoal (2 subgoals):\n 1. 0 < 1\n 2. \\<And>x.\n       0 \\<le> x \\<Longrightarrow> norm (r x) \\<le> 1 * norm (\\<psi> x)", "hence \"r x \\<ge> 0\""], ["proof (prove)\nusing this:\n  {1..nat \\<lfloor>x\\<rfloor>} = {0<..nat \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. 0 \\<le> r x", "unfolding r_def sum_upto_def"], ["proof (prove)\nusing this:\n  {1..nat \\<lfloor>x\\<rfloor>} = {0<..nat \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. 0 \\<le> (\\<Sum>d\\<in>{i. 0 < i \\<and> real i \\<le> x}.\n               mangoldt d *\n               (x / real d - real_of_int \\<lfloor>x / real d\\<rfloor>))", "by (intro sum_nonneg mult_nonneg_nonneg mangoldt_nonneg)\n         (auto simp: floor_le_iff)"], ["proof (state)\nthis:\n  0 \\<le> r x\n\ngoal (2 subgoals):\n 1. 0 < 1\n 2. \\<And>x.\n       0 \\<le> x \\<Longrightarrow> norm (r x) \\<le> 1 * norm (\\<psi> x)", "moreover"], ["proof (state)\nthis:\n  0 \\<le> r x\n\ngoal (2 subgoals):\n 1. 0 < 1\n 2. \\<And>x.\n       0 \\<le> x \\<Longrightarrow> norm (r x) \\<le> 1 * norm (\\<psi> x)", "have \"x / real d \\<le> 1 + real_of_int \\<lfloor>x / real d\\<rfloor>\" for d"], ["proof (prove)\ngoal (1 subgoal):\n 1. x / real d \\<le> 1 + real_of_int \\<lfloor>x / real d\\<rfloor>", "by linarith"], ["proof (state)\nthis:\n  x / real ?d \\<le> 1 + real_of_int \\<lfloor>x / real ?d\\<rfloor>\n\ngoal (2 subgoals):\n 1. 0 < 1\n 2. \\<And>x.\n       0 \\<le> x \\<Longrightarrow> norm (r x) \\<le> 1 * norm (\\<psi> x)", "hence \"r x \\<le> sum_upto (\\<lambda>d. mangoldt d * 1) x\""], ["proof (prove)\nusing this:\n  x / real ?d \\<le> 1 + real_of_int \\<lfloor>x / real ?d\\<rfloor>\n\ngoal (1 subgoal):\n 1. r x \\<le> sum_upto (\\<lambda>d. mangoldt d * 1) x", "unfolding sum_upto_altdef eq r_def"], ["proof (prove)\nusing this:\n  x / real ?d \\<le> 1 + real_of_int \\<lfloor>x / real ?d\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<Sum>d\\<in>{0<..nat \\<lfloor>x\\<rfloor>}.\n       mangoldt d * (x / real d - real_of_int \\<lfloor>x / real d\\<rfloor>))\n    \\<le> (\\<Sum>d\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. mangoldt d * 1)", "using x"], ["proof (prove)\nusing this:\n  x / real ?d \\<le> 1 + real_of_int \\<lfloor>x / real ?d\\<rfloor>\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<Sum>d\\<in>{0<..nat \\<lfloor>x\\<rfloor>}.\n       mangoldt d * (x / real d - real_of_int \\<lfloor>x / real d\\<rfloor>))\n    \\<le> (\\<Sum>d\\<in>{0<..nat \\<lfloor>x\\<rfloor>}. mangoldt d * 1)", "by (intro sum_mono mult_mono mangoldt_nonneg)\n         (auto simp:  less_imp_le[OF frac_lt_1] algebra_simps)"], ["proof (state)\nthis:\n  r x \\<le> sum_upto (\\<lambda>d. mangoldt d * 1) x\n\ngoal (2 subgoals):\n 1. 0 < 1\n 2. \\<And>x.\n       0 \\<le> x \\<Longrightarrow> norm (r x) \\<le> 1 * norm (\\<psi> x)", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> r x\n  r x \\<le> sum_upto (\\<lambda>d. mangoldt d * 1) x", "show \"norm (r x) \\<le> 1 * norm (\\<psi> x)\""], ["proof (prove)\nusing this:\n  0 \\<le> r x\n  r x \\<le> sum_upto (\\<lambda>d. mangoldt d * 1) x\n\ngoal (1 subgoal):\n 1. norm (r x) \\<le> 1 * norm (\\<psi> x)", "by (simp add: \\<psi>_def)"], ["proof (state)\nthis:\n  norm (r x) \\<le> 1 * norm (\\<psi> x)\n\ngoal (1 subgoal):\n 1. 0 < 1", "qed auto"], ["proof (state)\nthis:\n  r \\<in> O(\\<psi>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n    \\<in> O(\\<lambda>_. 1)", "also"], ["proof (state)\nthis:\n  r \\<in> O(\\<psi>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n    \\<in> O(\\<lambda>_. 1)", "have \"\\<psi> \\<in> O(\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> \\<in> O(\\<lambda>x. x)", "by (fact \\<psi>_bigo)"], ["proof (state)\nthis:\n  \\<psi> \\<in> O(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n    \\<in> O(\\<lambda>_. 1)", "finally"], ["proof (chain)\npicking this:\n  r \\<in> O(\\<lambda>x. x)", "have r: \"r \\<in> O(\\<lambda>x. x)\""], ["proof (prove)\nusing this:\n  r \\<in> O(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. r \\<in> O(\\<lambda>x. x)", "."], ["proof (state)\nthis:\n  r \\<in> O(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n    \\<in> O(\\<lambda>_. 1)", "define r' where \"r' = (\\<lambda>x::real. sum_upto ln x - x * ln x)\""], ["proof (state)\nthis:\n  r' = (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n    \\<in> O(\\<lambda>_. 1)", "have r'_bigo: \"r' \\<in> O(\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r' \\<in> O(\\<lambda>x. x)", "using stirling_weak_bigo"], ["proof (prove)\nusing this:\n  (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n  \\<in> O(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. r' \\<in> O(\\<lambda>x. x)", "unfolding r'_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n  \\<in> O(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>x. ln (real x)) x - x * ln x)\n    \\<in> O(\\<lambda>x. x)", "."], ["proof (state)\nthis:\n  r' \\<in> O(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n    \\<in> O(\\<lambda>_. 1)", "have ln_fact: \"ln (fact n) = (\\<Sum>d=1..n. ln d)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (fact n) = (\\<Sum>d = 1..n. ln (real d))", "by (induction n) (simp_all add: ln_mult)"], ["proof (state)\nthis:\n  ln (fact ?n) = (\\<Sum>d = 1..?n. ln (real d))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n    \\<in> O(\\<lambda>_. 1)", "hence r': \"sum_upto ln n = n * ln n + r' n\" for n :: real"], ["proof (prove)\nusing this:\n  ln (fact ?n) = (\\<Sum>d = 1..?n. ln (real d))\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>x. ln (real x)) n = n * ln n + r' n", "unfolding r'_def sum_upto_altdef"], ["proof (prove)\nusing this:\n  ln (fact ?n) = (\\<Sum>d = 1..?n. ln (real d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{0<..nat \\<lfloor>n\\<rfloor>}. ln (real x)) =\n    n * ln n +\n    ((\\<Sum>x\\<in>{0<..nat \\<lfloor>n\\<rfloor>}. ln (real x)) - n * ln n)", "by (auto intro!: sum.cong)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>x. ln (real x)) ?n = ?n * ln ?n + r' ?n\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n    \\<in> O(\\<lambda>_. 1)", "have \"eventually (\\<lambda>n. sum_upto (\\<lambda>d. mangoldt d / d) n - ln n = r' n / n + r n / n) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in at_top.\n       sum_upto (\\<lambda>d. mangoldt d / real d) n - ln n =\n       r' n / n + r n / n", "using eventually_gt_at_top"], ["proof (prove)\nusing this:\n  eventually ((<) ?c) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in at_top.\n       sum_upto (\\<lambda>d. mangoldt d / real d) n - ln n =\n       r' n / n + r n / n", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       ?c1 < n \\<Longrightarrow>\n       sum_upto (\\<lambda>d. mangoldt d / real d) n - ln n =\n       r' n / n + r n / n", "fix x :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       ?c1 < n \\<Longrightarrow>\n       sum_upto (\\<lambda>d. mangoldt d / real d) n - ln n =\n       r' n / n + r n / n", "assume x: \"x > 0\""], ["proof (state)\nthis:\n  0 < x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ?c1 < n \\<Longrightarrow>\n       sum_upto (\\<lambda>d. mangoldt d / real d) n - ln n =\n       r' n / n + r n / n", "have \"sum_upto ln x = sum_upto (\\<lambda>n. mangoldt n * real (nat \\<lfloor>x / n\\<rfloor>)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>x. ln (real x)) x =\n    sum_upto\n     (\\<lambda>n. mangoldt n * real (nat \\<lfloor>x / real n\\<rfloor>)) x", "unfolding sum_upto_ln_conv_sum_upto_mangoldt"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>xa. mangoldt xa * real (nat \\<lfloor>x / real xa\\<rfloor>))\n     x =\n    sum_upto\n     (\\<lambda>n. mangoldt n * real (nat \\<lfloor>x / real n\\<rfloor>)) x", ".."], ["proof (state)\nthis:\n  sum_upto (\\<lambda>x. ln (real x)) x =\n  sum_upto\n   (\\<lambda>n. mangoldt n * real (nat \\<lfloor>x / real n\\<rfloor>)) x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ?c1 < n \\<Longrightarrow>\n       sum_upto (\\<lambda>d. mangoldt d / real d) n - ln n =\n       r' n / n + r n / n", "also"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>x. ln (real x)) x =\n  sum_upto\n   (\\<lambda>n. mangoldt n * real (nat \\<lfloor>x / real n\\<rfloor>)) x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ?c1 < n \\<Longrightarrow>\n       sum_upto (\\<lambda>d. mangoldt d / real d) n - ln n =\n       r' n / n + r n / n", "have \"\\<dots> = sum_upto (\\<lambda>d. mangoldt d * (x / d)) x - r x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto\n     (\\<lambda>n. mangoldt n * real (nat \\<lfloor>x / real n\\<rfloor>)) x =\n    sum_upto (\\<lambda>d. mangoldt d * (x / real d)) x - r x", "unfolding sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>{i. 0 < i \\<and> real i \\<le> x}.\n       mangoldt n * real (nat \\<lfloor>x / real n\\<rfloor>)) =\n    (\\<Sum>d\\<in>{i. 0 < i \\<and> real i \\<le> x}.\n       mangoldt d * (x / real d)) -\n    r x", "by (simp add: algebra_simps sum_subtractf r_def sum_upto_def)"], ["proof (state)\nthis:\n  sum_upto\n   (\\<lambda>n. mangoldt n * real (nat \\<lfloor>x / real n\\<rfloor>)) x =\n  sum_upto (\\<lambda>d. mangoldt d * (x / real d)) x - r x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ?c1 < n \\<Longrightarrow>\n       sum_upto (\\<lambda>d. mangoldt d / real d) n - ln n =\n       r' n / n + r n / n", "also"], ["proof (state)\nthis:\n  sum_upto\n   (\\<lambda>n. mangoldt n * real (nat \\<lfloor>x / real n\\<rfloor>)) x =\n  sum_upto (\\<lambda>d. mangoldt d * (x / real d)) x - r x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ?c1 < n \\<Longrightarrow>\n       sum_upto (\\<lambda>d. mangoldt d / real d) n - ln n =\n       r' n / n + r n / n", "have \"sum_upto (\\<lambda>d. mangoldt d * (x / d)) x = x * sum_upto (\\<lambda>d. mangoldt d / d) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>d. mangoldt d * (x / real d)) x =\n    x * sum_upto (\\<lambda>d. mangoldt d / real d) x", "unfolding sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d\\<in>{i. 0 < i \\<and> real i \\<le> x}.\n       mangoldt d * (x / real d)) =\n    x * (\\<Sum>d\\<in>{i. 0 < i \\<and> real i \\<le> x}. mangoldt d / real d)", "by (subst sum_distrib_left) (simp add: field_simps)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>d. mangoldt d * (x / real d)) x =\n  x * sum_upto (\\<lambda>d. mangoldt d / real d) x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ?c1 < n \\<Longrightarrow>\n       sum_upto (\\<lambda>d. mangoldt d / real d) n - ln n =\n       r' n / n + r n / n", "finally"], ["proof (chain)\npicking this:\n  sum_upto (\\<lambda>x. ln (real x)) x =\n  x * sum_upto (\\<lambda>d. mangoldt d / real d) x - r x", "have \"x * sum_upto (\\<lambda>d. mangoldt d / real d) x = r' x + r x + x * ln x\""], ["proof (prove)\nusing this:\n  sum_upto (\\<lambda>x. ln (real x)) x =\n  x * sum_upto (\\<lambda>d. mangoldt d / real d) x - r x\n\ngoal (1 subgoal):\n 1. x * sum_upto (\\<lambda>d. mangoldt d / real d) x = r' x + r x + x * ln x", "by (simp add: r' algebra_simps)"], ["proof (state)\nthis:\n  x * sum_upto (\\<lambda>d. mangoldt d / real d) x = r' x + r x + x * ln x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ?c1 < n \\<Longrightarrow>\n       sum_upto (\\<lambda>d. mangoldt d / real d) n - ln n =\n       r' n / n + r n / n", "thus \"sum_upto (\\<lambda>d. mangoldt d / d) x - ln x = r' x / x + r x / x\""], ["proof (prove)\nusing this:\n  x * sum_upto (\\<lambda>d. mangoldt d / real d) x = r' x + r x + x * ln x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x = r' x / x + r x / x", "using x"], ["proof (prove)\nusing this:\n  x * sum_upto (\\<lambda>d. mangoldt d / real d) x = r' x + r x + x * ln x\n  0 < x\n\ngoal (1 subgoal):\n 1. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x = r' x / x + r x / x", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x = r' x / x + r x / x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in at_top.\n     sum_upto (\\<lambda>d. mangoldt d / real d) n - ln n =\n     r' n / n + r n / n\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n    \\<in> O(\\<lambda>_. 1)", "hence \"(\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / d) x - ln x) \\<in> \\<Theta>(\\<lambda>x. r' x / x + r x / x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in at_top.\n     sum_upto (\\<lambda>d. mangoldt d / real d) n - ln n =\n     r' n / n + r n / n\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n    \\<in> \\<Theta>(\\<lambda>x. r' x / x + r x / x)", "by (rule bigthetaI_cong)"], ["proof (state)\nthis:\n  (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n  \\<in> \\<Theta>(\\<lambda>x. r' x / x + r x / x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n    \\<in> O(\\<lambda>_. 1)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n  \\<in> \\<Theta>(\\<lambda>x. r' x / x + r x / x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n    \\<in> O(\\<lambda>_. 1)", "have \"(\\<lambda>x. r' x / x + r x / x) \\<in> O(\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. r' x / x + r x / x) \\<in> O(\\<lambda>_. 1)", "by (intro sum_in_bigo) (insert r r'_bigo, auto simp: landau_divide_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x. r' x / x + r x / x) \\<in> O(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n    \\<in> O(\\<lambda>_. 1)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n  \\<in> O(\\<lambda>_. 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n  \\<in> O(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n    \\<in> O(\\<lambda>_. 1)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n  \\<in> O(\\<lambda>_. 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Combining these two gives us Mertens' first theorem.\n\\<close>"], ["", "theorem mertens_bounded: \"(\\<lambda>x. \\<MM> x - ln x) \\<in> O(\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<MM> x - ln x) \\<in> O(\\<lambda>_. 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<MM> x - ln x) \\<in> O(\\<lambda>_. 1)", "define f where \"f = sum_upto (\\<lambda>d. mangoldt d / d)\""], ["proof (state)\nthis:\n  f = sum_upto (\\<lambda>d. mangoldt d / real d)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<MM> x - ln x) \\<in> O(\\<lambda>_. 1)", "have \"(\\<lambda>x. (f x - ln x) - (f x - \\<MM> x)) \\<in> O(\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - ln x - (f x - \\<MM> x)) \\<in> O(\\<lambda>_. 1)", "using sum_upto_mangoldt_over_id_asymptotics\n          sum_upto_mangoldt_over_id_minus_phi_bounded"], ["proof (prove)\nusing this:\n  (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n  \\<in> O(\\<lambda>_. 1)\n  (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - \\<MM> x)\n  \\<in> O(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - ln x - (f x - \\<MM> x)) \\<in> O(\\<lambda>_. 1)", "unfolding f_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x)\n  \\<in> O(\\<lambda>_. 1)\n  (\\<lambda>x. sum_upto (\\<lambda>d. mangoldt d / real d) x - \\<MM> x)\n  \\<in> O(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>d. mangoldt d / real d) x - ln x -\n        (sum_upto (\\<lambda>d. mangoldt d / real d) x - \\<MM> x))\n    \\<in> O(\\<lambda>_. 1)", "by (rule sum_in_bigo)"], ["proof (state)\nthis:\n  (\\<lambda>x. f x - ln x - (f x - \\<MM> x)) \\<in> O(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<MM> x - ln x) \\<in> O(\\<lambda>_. 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. f x - ln x - (f x - \\<MM> x)) \\<in> O(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<MM> x - ln x) \\<in> O(\\<lambda>_. 1)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<MM> x - ln x) \\<in> O(\\<lambda>_. 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma primes_M_bigo: \"\\<MM> \\<in> O(\\<lambda>x. ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<MM> \\<in> O(ln)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<MM> \\<in> O(ln)", "have \"(\\<lambda>x. \\<MM> x - ln x) \\<in> O(\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<MM> x - ln x) \\<in> O(\\<lambda>_. 1)", "by (rule mertens_bounded)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<MM> x - ln x) \\<in> O(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. \\<MM> \\<in> O(ln)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<MM> x - ln x) \\<in> O(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. \\<MM> \\<in> O(ln)", "have \"(\\<lambda>_::real. 1) \\<in> O(\\<lambda>x. ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>_. 1) \\<in> O(ln)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>_. 1) \\<in> O(ln)\n\ngoal (1 subgoal):\n 1. \\<MM> \\<in> O(ln)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<MM> x - ln x) \\<in> O(ln)", "have \"(\\<lambda>x. \\<MM> x - ln x + ln x) \\<in> O(\\<lambda>x. ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<MM> x - ln x) \\<in> O(ln)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<MM> x - ln x + ln x) \\<in> O(ln)", "by (rule sum_in_bigo) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<MM> x - ln x + ln x) \\<in> O(ln)\n\ngoal (1 subgoal):\n 1. \\<MM> \\<in> O(ln)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<MM> x - ln x + ln x) \\<in> O(ln)\n\ngoal (1 subgoal):\n 1. \\<MM> \\<in> O(ln)", "by simp"], ["proof (state)\nthis:\n  \\<MM> \\<in> O(ln)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*<*)"], ["", "unbundle no_prime_counting_notation"], ["", "(*>*)"], ["", "end"]]}