{"file_name": "/home/qj213/afp-2021-10-22/thys/Prime_Number_Theorem/Prime_Number_Theorem.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Prime_Number_Theorem", "problem_names": ["lemma fds_nth_newman:\n  \"fds_nth fds_newman n = of_real (\\<MM> n)\"", "lemma norm_fds_nth_newman:\n  \"norm (fds_nth fds_newman n) = \\<MM> n\"", "lemma bounded_coeffs_newman_minus_deriv_zeta:\n  defines \"f \\<equiv> fds_newman + fds_deriv fds_zeta\"\n  shows   \"Bseq (\\<lambda>n. fds_nth f n)\"", "lemma abs_conv_abscissa_newman: \"abs_conv_abscissa fds_newman \\<le> 1\"\n  and conv_abscissa_newman:     \"conv_abscissa fds_newman \\<le> 1\"", "lemma eval_fds_newman_conv_infsetsum:\n  assumes s: \"Re s > 1\"\n  shows   \"eval_fds fds_newman s = (\\<Sum>\\<^sub>ap | prime p. (ln (real p) / real p) * hurwitz_zeta p s)\"\n          \"(\\<lambda>p. ln (real p) / real p * hurwitz_zeta p s) abs_summable_on {p. prime p}\"", "lemma uniform_limit_pre_newman:\n  assumes r: \"r \\<ge> 0\" \"Re s - r > 1 / 2\"\n  shows \"uniform_limit (cball s r)\n           (\\<lambda>n s. \\<Sum>p<n. if prime p then B p s else 0) pre_newman at_top\"", "lemma sums_pre_newman: \"Re s > 1 / 2 \\<Longrightarrow> (\\<lambda>p. if prime p then B p s else 0) sums pre_newman s\"", "lemma analytic_pre_newman [THEN analytic_on_subset, analytic_intros]:\n  \"pre_newman analytic_on {s. Re s > 1 / 2}\"", "lemma holomorphic_pre_newman [holomorphic_intros]:\n  \"X \\<subseteq> {s. Re s > 1 / 2} \\<Longrightarrow> pre_newman holomorphic_on X\"", "lemma eval_fds_newman:\n  assumes s: \"Re s > 1\"\n  shows   \"eval_fds fds_newman s = newman s\"", "lemma deriv_zeta_eq':\n  assumes \"0 < Re s\" \"s \\<noteq> 1\"\n  shows \"deriv zeta s = deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n                          (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2\"\n    (is \"_ = ?rhs\")", "lemma analytic_zeta_derivdiff:\n  obtains a where\n    \"(\\<lambda>z. if z = 1 then a else (z - 1) * deriv zeta z - deriv zeta z / zeta z)\n          analytic_on {s. Re s \\<ge> 1}\"", "lemma analytic_newman_variant:\n  obtains c a where\n     \"(\\<lambda>z. if z = 1 then a else newman z + deriv zeta z + c * zeta z) analytic_on {s. Re s \\<ge> 1}\"", "lemma mertens_summable:\n  obtains c :: real where \"summable (\\<lambda>n. (\\<MM> n - ln n + c) / n)\"", "lemma sum_goestozero_lemma:\n  fixes d::real\n  assumes d: \"\\<bar>\\<Sum>i = M..N. a i / i\\<bar> < d\" and le: \"\\<And>n. a n + ln n \\<le> a (Suc n) + ln (Suc n)\"\n      and \"0 < M\" \"M < N\"\n    shows \"a M \\<le> d * N / (real N - real M) + (real N - real M) / M \\<and>\n          -a N \\<le> d * N / (real N - real M) + (real N - real M) / M\"", "lemma Mertens_convergent: \"convergent (\\<lambda>n::nat. \\<MM> n - ln n)\"", "theorem \\<theta>_asymptotics: \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\""], "translations": [["", "lemma fds_nth_newman:\n  \"fds_nth fds_newman n = of_real (\\<MM> n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_nth fds_newman n = complex_of_real (\\<MM> (real n))", "by (simp add: fds_newman_def fds_nth_fds)"], ["", "lemma norm_fds_nth_newman:\n  \"norm (fds_nth fds_newman n) = \\<MM> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (fds_nth fds_newman n) = \\<MM> (real n)", "unfolding fds_nth_newman norm_of_real"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>\\<MM> (real n)\\<bar> = \\<MM> (real n)", "by (intro abs_of_nonneg sum_nonneg divide_nonneg_pos) (auto dest: prime_ge_1_nat)"], ["", "text \\<open>\n  The Dirichlet series $f(s) + \\zeta'(s)$ has the coefficients $\\mathfrak{M}(n) - \\ln n$,\n  so by Mertens' first theorem, $f(s) + \\zeta'(s)$ has bounded coefficients.\n\\<close>"], ["", "lemma bounded_coeffs_newman_minus_deriv_zeta:\n  defines \"f \\<equiv> fds_newman + fds_deriv fds_zeta\"\n  shows   \"Bseq (\\<lambda>n. fds_nth f n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Bseq (fds_nth f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Bseq (fds_nth f)", "have \"(\\<lambda>n. \\<MM> (real n) - ln (real n)) \\<in> O(\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<MM> (real n) - ln (real n)) \\<in> O(\\<lambda>_. 1)", "using mertens_bounded"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<MM> x - ln x) \\<in> O(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<MM> (real n) - ln (real n)) \\<in> O(\\<lambda>_. 1)", "by (rule landau_o.big.compose) real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<MM> (real n) - ln (real n)) \\<in> O(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. Bseq (fds_nth f)", "from natfun_bigo_1E[OF this, of 1]"], ["proof (chain)\npicking this:\n  (\\<And>C.\n      \\<lbrakk>1 \\<le> C;\n       \\<And>n. norm (\\<MM> (real n) - ln (real n)) \\<le> C\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain c where c: \"c \\<ge> 1\" \"\\<And>n. \\<bar>\\<MM> (real n) - ln (real n)\\<bar> \\<le> c\""], ["proof (prove)\nusing this:\n  (\\<And>C.\n      \\<lbrakk>1 \\<le> C;\n       \\<And>n. norm (\\<MM> (real n) - ln (real n)) \\<le> C\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>1 \\<le> c;\n         \\<And>n. \\<bar>\\<MM> (real n) - ln (real n)\\<bar> \\<le> c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  1 \\<le> c\n  \\<bar>\\<MM> (real ?n) - ln (real ?n)\\<bar> \\<le> c\n\ngoal (1 subgoal):\n 1. Bseq (fds_nth f)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Bseq (fds_nth f)", "proof (intro BseqI[of c] allI)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < c\n 2. \\<And>n. cmod (fds_nth f n) \\<le> c", "fix n :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < c\n 2. \\<And>n. cmod (fds_nth f n) \\<le> c", "show \"norm (fds_nth f n) \\<le> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (fds_nth f n) \\<le> c", "proof (cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> cmod (fds_nth f n) \\<le> c\n 2. n \\<noteq> 0 \\<Longrightarrow> cmod (fds_nth f n) \\<le> c", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> cmod (fds_nth f n) \\<le> c\n 2. n \\<noteq> 0 \\<Longrightarrow> cmod (fds_nth f n) \\<le> c", "hence \"fds_nth f n = of_real (\\<MM> n - ln n)\""], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. fds_nth f n = complex_of_real (\\<MM> (real n) - ln (real n))", "by (simp add: f_def fds_nth_newman fds_nth_deriv fds_nth_zeta scaleR_conv_of_real)"], ["proof (state)\nthis:\n  fds_nth f n = complex_of_real (\\<MM> (real n) - ln (real n))\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> cmod (fds_nth f n) \\<le> c\n 2. n \\<noteq> 0 \\<Longrightarrow> cmod (fds_nth f n) \\<le> c", "also"], ["proof (state)\nthis:\n  fds_nth f n = complex_of_real (\\<MM> (real n) - ln (real n))\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> cmod (fds_nth f n) \\<le> c\n 2. n \\<noteq> 0 \\<Longrightarrow> cmod (fds_nth f n) \\<le> c", "from \\<open>n \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  n \\<noteq> 0", "have \"norm \\<dots> \\<le> c\""], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cmod (complex_of_real (\\<MM> (real n) - ln (real n))) \\<le> c", "using c(2)[of n]"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n  \\<bar>\\<MM> (real n) - ln (real n)\\<bar> \\<le> c\n\ngoal (1 subgoal):\n 1. cmod (complex_of_real (\\<MM> (real n) - ln (real n))) \\<le> c", "by (simp add: in_Reals_norm)"], ["proof (state)\nthis:\n  cmod (complex_of_real (\\<MM> (real n) - ln (real n))) \\<le> c\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> cmod (fds_nth f n) \\<le> c\n 2. n \\<noteq> 0 \\<Longrightarrow> cmod (fds_nth f n) \\<le> c", "finally"], ["proof (chain)\npicking this:\n  cmod (fds_nth f n) \\<le> c", "show ?thesis"], ["proof (prove)\nusing this:\n  cmod (fds_nth f n) \\<le> c\n\ngoal (1 subgoal):\n 1. cmod (fds_nth f n) \\<le> c", "."], ["proof (state)\nthis:\n  cmod (fds_nth f n) \\<le> c\n\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow> cmod (fds_nth f n) \\<le> c", "qed (insert c, auto)"], ["proof (state)\nthis:\n  cmod (fds_nth f n) \\<le> c\n\ngoal (1 subgoal):\n 1. 0 < c", "qed (insert c, auto)"], ["proof (state)\nthis:\n  Bseq (fds_nth f)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  A Dirichlet series with bounded coefficients converges for all $s$ with\n  $\\mathfrak{R}(s)>1$ and so does $\\zeta'(s)$, so we can conclude that $f(s)$ does as well.\n\\<close>"], ["", "lemma abs_conv_abscissa_newman: \"abs_conv_abscissa fds_newman \\<le> 1\"\n  and conv_abscissa_newman:     \"conv_abscissa fds_newman \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_conv_abscissa fds_newman \\<le> 1 &&&\n    conv_abscissa fds_newman \\<le> 1", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. abs_conv_abscissa fds_newman \\<le> 1\n 2. conv_abscissa fds_newman \\<le> 1", "define f where \"f = fds_newman + fds_deriv fds_zeta\""], ["proof (state)\nthis:\n  f = fds_newman + fds_deriv fds_zeta\n\ngoal (2 subgoals):\n 1. abs_conv_abscissa fds_newman \\<le> 1\n 2. conv_abscissa fds_newman \\<le> 1", "have \"abs_conv_abscissa f \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_conv_abscissa f \\<le> 1", "using bounded_coeffs_newman_minus_deriv_zeta"], ["proof (prove)\nusing this:\n  Bseq (fds_nth (fds_newman + fds_deriv fds_zeta))\n\ngoal (1 subgoal):\n 1. abs_conv_abscissa f \\<le> 1", "unfolding f_def"], ["proof (prove)\nusing this:\n  Bseq (fds_nth (fds_newman + fds_deriv fds_zeta))\n\ngoal (1 subgoal):\n 1. abs_conv_abscissa (fds_newman + fds_deriv fds_zeta) \\<le> 1", "by (rule bounded_coeffs_imp_abs_conv_abscissa_le_1)"], ["proof (state)\nthis:\n  abs_conv_abscissa f \\<le> 1\n\ngoal (2 subgoals):\n 1. abs_conv_abscissa fds_newman \\<le> 1\n 2. conv_abscissa fds_newman \\<le> 1", "hence \"abs_conv_abscissa (f - fds_deriv fds_zeta) \\<le> 1\""], ["proof (prove)\nusing this:\n  abs_conv_abscissa f \\<le> 1\n\ngoal (1 subgoal):\n 1. abs_conv_abscissa (f - fds_deriv fds_zeta) \\<le> 1", "by (intro abs_conv_abscissa_diff_leI) (auto simp: abs_conv_abscissa_deriv)"], ["proof (state)\nthis:\n  abs_conv_abscissa (f - fds_deriv fds_zeta) \\<le> 1\n\ngoal (2 subgoals):\n 1. abs_conv_abscissa fds_newman \\<le> 1\n 2. conv_abscissa fds_newman \\<le> 1", "also"], ["proof (state)\nthis:\n  abs_conv_abscissa (f - fds_deriv fds_zeta) \\<le> 1\n\ngoal (2 subgoals):\n 1. abs_conv_abscissa fds_newman \\<le> 1\n 2. conv_abscissa fds_newman \\<le> 1", "have \"f - fds_deriv fds_zeta = fds_newman\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f - fds_deriv fds_zeta = fds_newman", "by (simp add: f_def)"], ["proof (state)\nthis:\n  f - fds_deriv fds_zeta = fds_newman\n\ngoal (2 subgoals):\n 1. abs_conv_abscissa fds_newman \\<le> 1\n 2. conv_abscissa fds_newman \\<le> 1", "finally"], ["proof (chain)\npicking this:\n  abs_conv_abscissa fds_newman \\<le> 1", "show \"abs_conv_abscissa fds_newman \\<le> 1\""], ["proof (prove)\nusing this:\n  abs_conv_abscissa fds_newman \\<le> 1\n\ngoal (1 subgoal):\n 1. abs_conv_abscissa fds_newman \\<le> 1", "."], ["proof (state)\nthis:\n  abs_conv_abscissa fds_newman \\<le> 1\n\ngoal (1 subgoal):\n 1. conv_abscissa fds_newman \\<le> 1", "from conv_le_abs_conv_abscissa and this"], ["proof (chain)\npicking this:\n  conv_abscissa ?f \\<le> abs_conv_abscissa ?f\n  abs_conv_abscissa fds_newman \\<le> 1", "show \"conv_abscissa fds_newman \\<le> 1\""], ["proof (prove)\nusing this:\n  conv_abscissa ?f \\<le> abs_conv_abscissa ?f\n  abs_conv_abscissa fds_newman \\<le> 1\n\ngoal (1 subgoal):\n 1. conv_abscissa fds_newman \\<le> 1", "by (rule order.trans)"], ["proof (state)\nthis:\n  conv_abscissa fds_newman \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We now change the order of summation to obtain an alternative form of $f(s)$ in terms of a \n  sum of Hurwitz $\\zeta$ functions.\n\\<close>"], ["", "lemma eval_fds_newman_conv_infsetsum:\n  assumes s: \"Re s > 1\"\n  shows   \"eval_fds fds_newman s = (\\<Sum>\\<^sub>ap | prime p. (ln (real p) / real p) * hurwitz_zeta p s)\"\n          \"(\\<lambda>p. ln (real p) / real p * hurwitz_zeta p s) abs_summable_on {p. prime p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s) &&&\n    (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n 2. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "from s"], ["proof (chain)\npicking this:\n  1 < Re s", "have conv: \"fds_abs_converges fds_newman s\""], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. fds_abs_converges fds_newman s", "by (intro fds_abs_converges le_less_trans[OF abs_conv_abscissa_newman]) auto"], ["proof (state)\nthis:\n  fds_abs_converges fds_newman s\n\ngoal (2 subgoals):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n 2. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "define f where \"f = (\\<lambda>n p. ln (real p) / real p / of_nat n powr s)\""], ["proof (state)\nthis:\n  f =\n  (\\<lambda>n p. complex_of_real (ln (real p) / real p) / of_nat n powr s)\n\ngoal (2 subgoals):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n 2. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "have eq: \"(\\<Sum>\\<^sub>an\\<in>{p..}. f n p) = ln (real p) / real p * hurwitz_zeta p s\" if \"prime p\" for p"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>an\\<in>{p..}. f n p) =\n    complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>an\\<in>{p..}. f n p) =\n    complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s", "have \"(\\<Sum>\\<^sub>an\\<in>{p..}. f n p) = (\\<Sum>\\<^sub>ax\\<in>{p..}. (ln (real p) / of_nat p) * (1 / of_nat x powr s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>an\\<in>{p..}. f n p) =\n    (\\<Sum>\\<^sub>ax\\<in>{p..}.\n       complex_of_real (ln (real p) / real p) * (1 / of_nat x powr s))", "by (simp add: f_def)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>an\\<in>{p..}. f n p) =\n  (\\<Sum>\\<^sub>ax\\<in>{p..}.\n     complex_of_real (ln (real p) / real p) * (1 / of_nat x powr s))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>an\\<in>{p..}. f n p) =\n    complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>an\\<in>{p..}. f n p) =\n  (\\<Sum>\\<^sub>ax\\<in>{p..}.\n     complex_of_real (ln (real p) / real p) * (1 / of_nat x powr s))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>an\\<in>{p..}. f n p) =\n    complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s", "have \"\\<dots> = (ln (real p) / of_nat p) * (\\<Sum>\\<^sub>ax\\<in>{p..}. 1 / of_nat x powr s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>{p..}.\n       complex_of_real (ln (real p) / real p) * (1 / of_nat x powr s)) =\n    complex_of_real (ln (real p) / real p) *\n    (\\<Sum>\\<^sub>ax\\<in>{p..}. 1 / of_nat x powr s)", "using abs_summable_hurwitz_zeta[of s 0 p] that s"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 < Re s; 0 < 0 + real p\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n.\n                        1 /\n                        complex_of_real (real n + 0) powr s) abs_summable_on\n                    {p..}\n  prime p\n  1 < Re s\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>{p..}.\n       complex_of_real (ln (real p) / real p) * (1 / of_nat x powr s)) =\n    complex_of_real (ln (real p) / real p) *\n    (\\<Sum>\\<^sub>ax\\<in>{p..}. 1 / of_nat x powr s)", "by (intro infsetsum_cmult_right) (auto dest: prime_gt_0_nat)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>{p..}.\n     complex_of_real (ln (real p) / real p) * (1 / of_nat x powr s)) =\n  complex_of_real (ln (real p) / real p) *\n  (\\<Sum>\\<^sub>ax\\<in>{p..}. 1 / of_nat x powr s)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>an\\<in>{p..}. f n p) =\n    complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>{p..}.\n     complex_of_real (ln (real p) / real p) * (1 / of_nat x powr s)) =\n  complex_of_real (ln (real p) / real p) *\n  (\\<Sum>\\<^sub>ax\\<in>{p..}. 1 / of_nat x powr s)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>an\\<in>{p..}. f n p) =\n    complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s", "have \"(\\<Sum>\\<^sub>ax\\<in>{p..}. 1 / of_nat x powr s) = hurwitz_zeta p s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>{p..}. 1 / of_nat x powr s) =\n    hurwitz_zeta (real p) s", "using s that"], ["proof (prove)\nusing this:\n  1 < Re s\n  prime p\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>{p..}. 1 / of_nat x powr s) =\n    hurwitz_zeta (real p) s", "by (subst hurwitz_zeta_nat_conv_infsetsum(2))\n                      (auto dest: prime_gt_0_nat simp: field_simps powr_minus)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>{p..}. 1 / of_nat x powr s) = hurwitz_zeta (real p) s\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>an\\<in>{p..}. f n p) =\n    complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>\\<^sub>an\\<in>{p..}. f n p) =\n  complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>an\\<in>{p..}. f n p) =\n  complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>an\\<in>{p..}. f n p) =\n    complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s", "."], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>an\\<in>{p..}. f n p) =\n  complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prime ?p \\<Longrightarrow>\n  (\\<Sum>\\<^sub>an\\<in>{?p..}. f n ?p) =\n  complex_of_real (ln (real ?p) / real ?p) * hurwitz_zeta (real ?p) s\n\ngoal (2 subgoals):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n 2. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "have norm_f: \"norm (f n p) = ln p / p / n powr Re s\" if \"prime p\" for n p :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (f n p) = ln (real p) / real p / real n powr Re s", "by (auto simp: f_def norm_divide norm_mult norm_powr_real_powr)"], ["proof (state)\nthis:\n  prime ?p \\<Longrightarrow>\n  cmod (f ?n ?p) = ln (real ?p) / real ?p / real ?n powr Re s\n\ngoal (2 subgoals):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n 2. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "from conv"], ["proof (chain)\npicking this:\n  fds_abs_converges fds_newman s", "have \"(\\<lambda>n. norm (fds_nth fds_newman n / n powr s)) abs_summable_on UNIV\""], ["proof (prove)\nusing this:\n  fds_abs_converges fds_newman s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        cmod (fds_nth fds_newman n / of_nat n powr s)) abs_summable_on\n    UNIV", "by (intro abs_summable_on_normI) (simp add: fds_abs_converges_altdef')"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      cmod (fds_nth fds_newman n / of_nat n powr s)) abs_summable_on\n  UNIV\n\ngoal (2 subgoals):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n 2. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      cmod (fds_nth fds_newman n / of_nat n powr s)) abs_summable_on\n  UNIV\n\ngoal (2 subgoals):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n 2. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "have \"(\\<lambda>n. norm (fds_nth fds_newman n / n powr s)) =\n               (\\<lambda>n. \\<Sum>p | prime p \\<and> p \\<le> n. norm (f n p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. cmod (fds_nth fds_newman n / of_nat n powr s)) =\n    (\\<lambda>n. \\<Sum>p | prime p \\<and> p \\<le> n. cmod (f n p))", "by (auto simp: norm_divide norm_fds_nth_newman sum_divide_distrib primes_M_def\n                   prime_sum_upto_def norm_mult norm_f norm_powr_real_powr intro!: sum.cong)"], ["proof (state)\nthis:\n  (\\<lambda>n. cmod (fds_nth fds_newman n / of_nat n powr s)) =\n  (\\<lambda>n. \\<Sum>p | prime p \\<and> p \\<le> n. cmod (f n p))\n\ngoal (2 subgoals):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n 2. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      \\<Sum>p | prime p \\<and> p \\<le> n. cmod (f n p)) abs_summable_on\n  UNIV", "have summable1: \"(\\<lambda>(n,p). f n p) abs_summable_on (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n})\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      \\<Sum>p | prime p \\<and> p \\<le> n. cmod (f n p)) abs_summable_on\n  UNIV\n\ngoal (1 subgoal):\n 1. (\\<lambda>(n, p). f n p) abs_summable_on\n    (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n})", "using conv"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      \\<Sum>p | prime p \\<and> p \\<le> n. cmod (f n p)) abs_summable_on\n  UNIV\n  fds_abs_converges fds_newman s\n\ngoal (1 subgoal):\n 1. (\\<lambda>(n, p). f n p) abs_summable_on\n    (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n})", "by (subst abs_summable_on_Sigma_iff) auto"], ["proof (state)\nthis:\n  (\\<lambda>(n, p). f n p) abs_summable_on\n  (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n})\n\ngoal (2 subgoals):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n 2. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "also"], ["proof (state)\nthis:\n  (\\<lambda>(n, p). f n p) abs_summable_on\n  (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n})\n\ngoal (2 subgoals):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n 2. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "have \"?this \\<longleftrightarrow> (\\<lambda>(p,n). f n p) abs_summable_on\n                         (\\<lambda>(n,p). (p,n)) ` (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>(n, p). f n p) abs_summable_on\n     (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n})) =\n    ((\\<lambda>(p, n). f n p) abs_summable_on\n     (\\<lambda>(n, p). (p, n)) `\n     (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}))", "by (subst abs_summable_on_reindex_iff [symmetric]) (auto simp: case_prod_unfold inj_on_def)"], ["proof (state)\nthis:\n  ((\\<lambda>(n, p). f n p) abs_summable_on\n   (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n})) =\n  ((\\<lambda>(p, n). f n p) abs_summable_on\n   (\\<lambda>(n, p). (p, n)) `\n   (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}))\n\ngoal (2 subgoals):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n 2. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>(n, p). f n p) abs_summable_on\n   (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n})) =\n  ((\\<lambda>(p, n). f n p) abs_summable_on\n   (\\<lambda>(n, p). (p, n)) `\n   (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}))\n\ngoal (2 subgoals):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n 2. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "have \"(\\<lambda>(n,p). (p,n)) ` (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}) =\n               (SIGMA p:{p. prime p}. {p..})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(n, p). (p, n)) `\n    (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}) =\n    Sigma {p. prime p} atLeast", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>(n, p). (p, n)) `\n  (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}) =\n  Sigma {p. prime p} atLeast\n\ngoal (2 subgoals):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n 2. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>a. case a of (p, n) \\<Rightarrow> f n p) abs_summable_on\n  Sigma {p. prime p} atLeast", "have summable2: \"(\\<lambda>(p,n). f n p) abs_summable_on \\<dots>\""], ["proof (prove)\nusing this:\n  (\\<lambda>a. case a of (p, n) \\<Rightarrow> f n p) abs_summable_on\n  Sigma {p. prime p} atLeast\n\ngoal (1 subgoal):\n 1. (\\<lambda>(p, n). f n p) abs_summable_on Sigma {p. prime p} atLeast", "."], ["proof (state)\nthis:\n  (\\<lambda>(p, n). f n p) abs_summable_on Sigma {p. prime p} atLeast\n\ngoal (2 subgoals):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n 2. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "from abs_summable_on_Sigma_project1'[OF this]"], ["proof (chain)\npicking this:\n  \\<lbrakk>countable {p. prime p};\n   \\<And>x. x \\<in> {p. prime p} \\<Longrightarrow> countable {x..}\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x.\n                        \\<Sum>\\<^sub>ay\\<in>{x..}. f y x) abs_summable_on\n                    {p. prime p}", "have \"(\\<lambda>p. \\<Sum>\\<^sub>an\\<in>{p..}. f n p) abs_summable_on {p. prime p}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>countable {p. prime p};\n   \\<And>x. x \\<in> {p. prime p} \\<Longrightarrow> countable {x..}\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x.\n                        \\<Sum>\\<^sub>ay\\<in>{x..}. f y x) abs_summable_on\n                    {p. prime p}\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. \\<Sum>\\<^sub>an\\<in>{p..}. f n p) abs_summable_on\n    {p. prime p}", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>p. \\<Sum>\\<^sub>an\\<in>{p..}. f n p) abs_summable_on\n  {p. prime p}\n\ngoal (2 subgoals):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n 2. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "also"], ["proof (state)\nthis:\n  (\\<lambda>p. \\<Sum>\\<^sub>an\\<in>{p..}. f n p) abs_summable_on\n  {p. prime p}\n\ngoal (2 subgoals):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n 2. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "have \"?this \\<longleftrightarrow> (\\<lambda>p. ln (real p) / real p * hurwitz_zeta p s) abs_summable_on {p. prime p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>p. \\<Sum>\\<^sub>an\\<in>{p..}. f n p) abs_summable_on\n     {p. prime p}) =\n    ((\\<lambda>p.\n         complex_of_real (ln (real p) / real p) *\n         hurwitz_zeta (real p) s) abs_summable_on\n     {p. prime p})", "by (intro abs_summable_on_cong eq) auto"], ["proof (state)\nthis:\n  ((\\<lambda>p. \\<Sum>\\<^sub>an\\<in>{p..}. f n p) abs_summable_on\n   {p. prime p}) =\n  ((\\<lambda>p.\n       complex_of_real (ln (real p) / real p) *\n       hurwitz_zeta (real p) s) abs_summable_on\n   {p. prime p})\n\ngoal (2 subgoals):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n 2. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>p.\n      complex_of_real (ln (real p) / real p) *\n      hurwitz_zeta (real p) s) abs_summable_on\n  {p. prime p}", "show \\<dots>"], ["proof (prove)\nusing this:\n  (\\<lambda>p.\n      complex_of_real (ln (real p) / real p) *\n      hurwitz_zeta (real p) s) abs_summable_on\n  {p. prime p}\n\ngoal (1 subgoal):\n 1. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "."], ["proof (state)\nthis:\n  (\\<lambda>p.\n      complex_of_real (ln (real p) / real p) *\n      hurwitz_zeta (real p) s) abs_summable_on\n  {p. prime p}\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "have \"eval_fds fds_newman s =\n          (\\<Sum>\\<^sub>an. \\<Sum>p | prime p \\<and> p \\<le> n. ln (real p) / real p / of_nat n powr s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>an.\n       \\<Sum>p | prime p \\<and> p \\<le> n.\n         complex_of_real (ln (real p) / real p) / of_nat n powr s)", "using conv"], ["proof (prove)\nusing this:\n  fds_abs_converges fds_newman s\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>an.\n       \\<Sum>p | prime p \\<and> p \\<le> n.\n         complex_of_real (ln (real p) / real p) / of_nat n powr s)", "by (simp add: eval_fds_altdef fds_nth_newman sum_divide_distrib\n                             primes_M_def prime_sum_upto_def)"], ["proof (state)\nthis:\n  eval_fds fds_newman s =\n  (\\<Sum>\\<^sub>an.\n     \\<Sum>p | prime p \\<and> p \\<le> n.\n       complex_of_real (ln (real p) / real p) / of_nat n powr s)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "also"], ["proof (state)\nthis:\n  eval_fds fds_newman s =\n  (\\<Sum>\\<^sub>an.\n     \\<Sum>p | prime p \\<and> p \\<le> n.\n       complex_of_real (ln (real p) / real p) / of_nat n powr s)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "have \"\\<dots> = (\\<Sum>\\<^sub>an. \\<Sum>\\<^sub>ap | prime p \\<and> p \\<le> n. f n p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>an.\n       \\<Sum>p | prime p \\<and> p \\<le> n.\n         complex_of_real (ln (real p) / real p) / of_nat n powr s) =\n    (\\<Sum>\\<^sub>an. \\<Sum>\\<^sub>ap | prime p \\<and> p \\<le> n. f n p)", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>an.\n       \\<Sum>p | prime p \\<and> p \\<le> n.\n         complex_of_real (ln (real p) / real p) / of_nat n powr s) =\n    (\\<Sum>\\<^sub>an.\n       \\<Sum>\\<^sub>ap | prime p \\<and> p \\<le> n.\n         complex_of_real (ln (real p) / real p) / of_nat n powr s)", "by (subst infsetsum_finite) auto"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>an.\n     \\<Sum>p | prime p \\<and> p \\<le> n.\n       complex_of_real (ln (real p) / real p) / of_nat n powr s) =\n  (\\<Sum>\\<^sub>an. \\<Sum>\\<^sub>ap | prime p \\<and> p \\<le> n. f n p)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>an.\n     \\<Sum>p | prime p \\<and> p \\<le> n.\n       complex_of_real (ln (real p) / real p) / of_nat n powr s) =\n  (\\<Sum>\\<^sub>an. \\<Sum>\\<^sub>ap | prime p \\<and> p \\<le> n. f n p)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "have \"\\<dots> = (\\<Sum>\\<^sub>a(n, p) \\<in> (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}). f n p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>an. \\<Sum>\\<^sub>ap | prime p \\<and> p \\<le> n. f n p) =\n    (\\<Sum>\\<^sub>a(n, p)\\<in>(SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}).\n       f n p)", "using summable1"], ["proof (prove)\nusing this:\n  (\\<lambda>(n, p). f n p) abs_summable_on\n  (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n})\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>an. \\<Sum>\\<^sub>ap | prime p \\<and> p \\<le> n. f n p) =\n    (\\<Sum>\\<^sub>a(n, p)\\<in>(SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}).\n       f n p)", "by (subst infsetsum_Sigma) auto"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>an. \\<Sum>\\<^sub>ap | prime p \\<and> p \\<le> n. f n p) =\n  (\\<Sum>\\<^sub>a(n, p)\\<in>(SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}).\n     f n p)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>an. \\<Sum>\\<^sub>ap | prime p \\<and> p \\<le> n. f n p) =\n  (\\<Sum>\\<^sub>a(n, p)\\<in>(SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}).\n     f n p)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "have \"\\<dots> = (\\<Sum>\\<^sub>a(p, n) \\<in> (\\<lambda>(n,p). (p, n)) ` (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}). f n p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>a(n, p)\\<in>(SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}).\n       f n p) =\n    (\\<Sum>\\<^sub>a(p,\n       n)\\<in>(\\<lambda>(n, p). (p, n)) `\n              (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}).\n       f n p)", "by (subst infsetsum_reindex) (auto simp: case_prod_unfold inj_on_def)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>a(n, p)\\<in>(SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}).\n     f n p) =\n  (\\<Sum>\\<^sub>a(p,\n     n)\\<in>(\\<lambda>(n, p). (p, n)) `\n            (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}).\n     f n p)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>a(n, p)\\<in>(SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}).\n     f n p) =\n  (\\<Sum>\\<^sub>a(p,\n     n)\\<in>(\\<lambda>(n, p). (p, n)) `\n            (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}).\n     f n p)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "have \"(\\<lambda>(n,p). (p, n)) ` (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}) =\n               (SIGMA p:{p. prime p}. {p..})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(n, p). (p, n)) `\n    (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}) =\n    Sigma {p. prime p} atLeast", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>(n, p). (p, n)) `\n  (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}) =\n  Sigma {p. prime p} atLeast\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "also"], ["proof (state)\nthis:\n  (\\<lambda>(n, p). (p, n)) `\n  (SIGMA n:UNIV. {p. prime p \\<and> p \\<le> n}) =\n  Sigma {p. prime p} atLeast\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "have \"(\\<Sum>\\<^sub>a(p,n)\\<in>\\<dots>. f n p) = (\\<Sum>\\<^sub>ap | prime p. \\<Sum>\\<^sub>an\\<in>{p..}. f n p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>a(p, n)\\<in>Sigma {p. prime p} atLeast. f n p) =\n    (\\<Sum>\\<^sub>ap | prime p. \\<Sum>\\<^sub>an\\<in>{p..}. f n p)", "using summable2"], ["proof (prove)\nusing this:\n  (\\<lambda>(p, n). f n p) abs_summable_on Sigma {p. prime p} atLeast\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>a(p, n)\\<in>Sigma {p. prime p} atLeast. f n p) =\n    (\\<Sum>\\<^sub>ap | prime p. \\<Sum>\\<^sub>an\\<in>{p..}. f n p)", "by (subst infsetsum_Sigma) auto"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>a(p, n)\\<in>Sigma {p. prime p} atLeast. f n p) =\n  (\\<Sum>\\<^sub>ap | prime p. \\<Sum>\\<^sub>an\\<in>{p..}. f n p)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>a(p, n)\\<in>Sigma {p. prime p} atLeast. f n p) =\n  (\\<Sum>\\<^sub>ap | prime p. \\<Sum>\\<^sub>an\\<in>{p..}. f n p)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "have \"(\\<Sum>\\<^sub>ap | prime p. \\<Sum>\\<^sub>an\\<in>{p..}. f n p) =\n               (\\<Sum>\\<^sub>ap | prime p. ln (real p) / real p * hurwitz_zeta p s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ap | prime p. \\<Sum>\\<^sub>an\\<in>{p..}. f n p) =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "by (intro infsetsum_cong eq) auto"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ap | prime p. \\<Sum>\\<^sub>an\\<in>{p..}. f n p) =\n  (\\<Sum>\\<^sub>ap | prime p.\n     complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "finally"], ["proof (chain)\npicking this:\n  eval_fds fds_newman s =\n  (\\<Sum>\\<^sub>ap | prime p.\n     complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "show \"eval_fds fds_newman s =\n                  (\\<Sum>\\<^sub>ap | prime p. (ln (real p) / real p) * hurwitz_zeta p s)\""], ["proof (prove)\nusing this:\n  eval_fds fds_newman s =\n  (\\<Sum>\\<^sub>ap | prime p.\n     complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "."], ["proof (state)\nthis:\n  eval_fds fds_newman s =\n  (\\<Sum>\\<^sub>ap | prime p.\n     complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We now define a meromorphic continuation of $f(s)$ on $\\mathfrak{R}(s) > \\frac{1}{2}$.\n\n  To construct $f(s)$, we express it as\n  \\[f(s) = \\frac{1}{z-1}\\left(\\bar f(s) - \\frac{\\zeta'(s)}{\\zeta(s)}\\right)\\ ,\\]\n  where $\\bar f(s)$ (which we shall call \\<open>pre_newman\\<close>) is a function that is analytic on\n  $\\Re(s) > \\frac{1}{2}$, which can be shown fairly easily using the Weierstra{\\ss} M test.\n  \n  $\\zeta'(s)/\\zeta(s)$ is meromorphic except for a single pole at $s = 1$ and one $k$-th order\n  pole for any $k$-th order zero of $\\zeta$, but for the Prime Number Theorem, we are only\n  concerned with the area $\\mathfrak{R}(s) \\geq 1$, where $\\zeta$ does not have any zeros.\n\n  Taken together, this means that $f(s)$ is analytic for $\\mathfrak{R}(s)\\geq 1$ except for a\n  double pole at $s = 1$, which we will take care of later.\n\\<close>"], ["", "context\n  fixes A :: \"nat \\<Rightarrow> complex \\<Rightarrow> complex\" and B :: \"nat \\<Rightarrow> complex \\<Rightarrow> complex\"\n  defines \"A \\<equiv> (\\<lambda>p s. (s - 1) * pre_zeta (real p) s - \n                         of_nat p / (of_nat p powr s * (of_nat p powr s - 1)))\"\n  defines \"B \\<equiv> (\\<lambda>p s. of_real (ln (real p)) / of_nat p * A p s)\"\nbegin"], ["", "definition pre_newman :: \"complex \\<Rightarrow> complex\" where\n  \"pre_newman s = (\\<Sum>p. if prime p then B p s else 0)\""], ["", "definition newman where \"newman s = 1 / (s - 1) * (pre_newman s - deriv zeta s / zeta s)\""], ["", "text \\<open>\n  The sum used in the definition of \\<open>pre_newman\\<close> converges uniformly on any disc within the\n  half-space with $\\mathfrak{R}(s) > \\frac{1}{2}$ by the Weierstra{\\ss} M test.\n\\<close>"], ["", "lemma uniform_limit_pre_newman:\n  assumes r: \"r \\<ge> 0\" \"Re s - r > 1 / 2\"\n  shows \"uniform_limit (cball s r)\n           (\\<lambda>n s. \\<Sum>p<n. if prime p then B p s else 0) pre_newman at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit (cball s r)\n     (\\<lambda>n s. \\<Sum>p<n. if prime p then B p s else 0) pre_newman\n     sequentially", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. uniform_limit (cball s r)\n     (\\<lambda>n s. \\<Sum>p<n. if prime p then B p s else 0) pre_newman\n     sequentially", "from r"], ["proof (chain)\npicking this:\n  0 \\<le> r\n  1 / 2 < Re s - r", "have Re: \"Re z > 1 / 2\" if \"dist s z \\<le> r\" for z"], ["proof (prove)\nusing this:\n  0 \\<le> r\n  1 / 2 < Re s - r\n\ngoal (1 subgoal):\n 1. 1 / 2 < Re z", "using abs_Re_le_cmod[of \"s - z\"] r that"], ["proof (prove)\nusing this:\n  0 \\<le> r\n  1 / 2 < Re s - r\n  \\<bar>Re (s - z)\\<bar> \\<le> cmod (s - z)\n  0 \\<le> r\n  1 / 2 < Re s - r\n  dist s z \\<le> r\n\ngoal (1 subgoal):\n 1. 1 / 2 < Re z", "by (auto simp: dist_norm abs_if split: if_splits)"], ["proof (state)\nthis:\n  dist s ?z \\<le> r \\<Longrightarrow> 1 / 2 < Re ?z\n\ngoal (1 subgoal):\n 1. uniform_limit (cball s r)\n     (\\<lambda>n s. \\<Sum>p<n. if prime p then B p s else 0) pre_newman\n     sequentially", "define x where \"x = Re s - r\" \\<comment> \\<open>The lower bound for the real part in the disc\\<close>"], ["proof (state)\nthis:\n  x = Re s - r\n\ngoal (1 subgoal):\n 1. uniform_limit (cball s r)\n     (\\<lambda>n s. \\<Sum>p<n. if prime p then B p s else 0) pre_newman\n     sequentially", "from r Re"], ["proof (chain)\npicking this:\n  0 \\<le> r\n  1 / 2 < Re s - r\n  dist s ?z \\<le> r \\<Longrightarrow> 1 / 2 < Re ?z", "have \"x > 1 / 2\""], ["proof (prove)\nusing this:\n  0 \\<le> r\n  1 / 2 < Re s - r\n  dist s ?z \\<le> r \\<Longrightarrow> 1 / 2 < Re ?z\n\ngoal (1 subgoal):\n 1. 1 / 2 < x", "by (auto simp: x_def)\n\n  \\<comment> \\<open>The following sequence \\<open>M\\<close> bounds the summand, and it is obviously $O(n^{-1-\\epsilon})$\n      and therefore summable\\<close>"], ["proof (state)\nthis:\n  1 / 2 < x\n\ngoal (1 subgoal):\n 1. uniform_limit (cball s r)\n     (\\<lambda>n s. \\<Sum>p<n. if prime p then B p s else 0) pre_newman\n     sequentially", "define C where \"C = (norm s + r + 1) * (norm s + r) / x\""], ["proof (state)\nthis:\n  C = (cmod s + r + 1) * (cmod s + r) / x\n\ngoal (1 subgoal):\n 1. uniform_limit (cball s r)\n     (\\<lambda>n s. \\<Sum>p<n. if prime p then B p s else 0) pre_newman\n     sequentially", "define M where \"M = (\\<lambda>p::nat. ln p * (C / p powr (x + 1) + 1 / (p powr x * (p powr x - 1))))\""], ["proof (state)\nthis:\n  M =\n  (\\<lambda>xa.\n      ln (real xa) *\n      (C / real xa powr (x + 1) +\n       1 / (real xa powr x * (real xa powr x - 1))))\n\ngoal (1 subgoal):\n 1. uniform_limit (cball s r)\n     (\\<lambda>n s. \\<Sum>p<n. if prime p then B p s else 0) pre_newman\n     sequentially", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit (cball s r)\n     (\\<lambda>n s. \\<Sum>p<n. if prime p then B p s else 0) pre_newman\n     sequentially", "unfolding pre_newman_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit (cball s r)\n     (\\<lambda>n s. \\<Sum>p<n. if prime p then B p s else 0)\n     (\\<lambda>s. \\<Sum>p. if prime p then B p s else 0) sequentially", "proof (intro Weierstrass_m_test_ev[OF eventually_mono[OF eventually_gt_at_top[of 1]]] ballI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0)\n                         \\<le> ?M1 sa\n 2. summable ?M1", "show \"summable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable M", "proof (rule summable_comparison_test_bigo)"], ["proof (state)\ngoal (2 subgoals):\n 1. summable (\\<lambda>n. norm (?g n))\n 2. M \\<in> O(?g)", "define \\<epsilon> where \"\\<epsilon> = min (2 * x - 1) x / 2\""], ["proof (state)\nthis:\n  \\<epsilon> = min (2 * x - 1) x / 2\n\ngoal (2 subgoals):\n 1. summable (\\<lambda>n. norm (?g n))\n 2. M \\<in> O(?g)", "from \\<open>x > 1 / 2\\<close>"], ["proof (chain)\npicking this:\n  1 / 2 < x", "have \\<epsilon>: \"\\<epsilon> > 0\" \"1 + \\<epsilon> < 2 * x\" \"1 + \\<epsilon> < x + 1\""], ["proof (prove)\nusing this:\n  1 / 2 < x\n\ngoal (1 subgoal):\n 1. 0 < \\<epsilon> &&& 1 + \\<epsilon> < 2 * x &&& 1 + \\<epsilon> < x + 1", "by (auto simp: \\<epsilon>_def min_def field_simps)"], ["proof (state)\nthis:\n  0 < \\<epsilon>\n  1 + \\<epsilon> < 2 * x\n  1 + \\<epsilon> < x + 1\n\ngoal (2 subgoals):\n 1. summable (\\<lambda>n. norm (?g n))\n 2. M \\<in> O(?g)", "show \"M \\<in> O(\\<lambda>n. n powr (- 1 - \\<epsilon>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<in> O(\\<lambda>x. real x powr (- 1 - \\<epsilon>))", "unfolding M_def distrib_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>xa.\n        ln (real xa) * (C / real xa powr (x + 1)) +\n        ln (real xa) * (1 / (real xa powr x * (real xa powr x - 1))))\n    \\<in> O(\\<lambda>x. real x powr (- 1 - \\<epsilon>))", "by (intro sum_in_bigo) (use \\<epsilon> in real_asymp)+"], ["proof (state)\nthis:\n  M \\<in> O(\\<lambda>x. real x powr (- 1 - \\<epsilon>))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. norm (real n powr (- 1 - min (2 * x - 1) x / 2)))", "from \\<epsilon>"], ["proof (chain)\npicking this:\n  0 < \\<epsilon>\n  1 + \\<epsilon> < 2 * x\n  1 + \\<epsilon> < x + 1", "show \"summable (\\<lambda>n. norm (n powr (- 1 - \\<epsilon>)))\""], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n  1 + \\<epsilon> < 2 * x\n  1 + \\<epsilon> < x + 1\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>x. norm (real x powr (- 1 - \\<epsilon>)))", "by (simp add: summable_real_powr_iff)"], ["proof (state)\nthis:\n  summable (\\<lambda>x. norm (real x powr (- 1 - \\<epsilon>)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  summable M\n\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "fix p :: nat and z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "assume p: \"p > 1\" and z: \"z \\<in> cball s r\""], ["proof (state)\nthis:\n  1 < p\n  z \\<in> cball s r\n\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "from z r Re[of z]"], ["proof (chain)\npicking this:\n  z \\<in> cball s r\n  0 \\<le> r\n  1 / 2 < Re s - r\n  dist s z \\<le> r \\<Longrightarrow> 1 / 2 < Re z", "have x: \"Re z \\<ge> x\" \"x > 1 / 2\" and \"Re z > 1 / 2\""], ["proof (prove)\nusing this:\n  z \\<in> cball s r\n  0 \\<le> r\n  1 / 2 < Re s - r\n  dist s z \\<le> r \\<Longrightarrow> 1 / 2 < Re z\n\ngoal (1 subgoal):\n 1. (x \\<le> Re z &&& 1 / 2 < x) &&& 1 / 2 < Re z", "using abs_Re_le_cmod[of \"s - z\"]"], ["proof (prove)\nusing this:\n  z \\<in> cball s r\n  0 \\<le> r\n  1 / 2 < Re s - r\n  dist s z \\<le> r \\<Longrightarrow> 1 / 2 < Re z\n  \\<bar>Re (s - z)\\<bar> \\<le> cmod (s - z)\n\ngoal (1 subgoal):\n 1. (x \\<le> Re z &&& 1 / 2 < x) &&& 1 / 2 < Re z", "by (auto simp: x_def algebra_simps dist_norm)"], ["proof (state)\nthis:\n  x \\<le> Re z\n  1 / 2 < x\n  1 / 2 < Re z\n\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "have norm_z: \"norm z \\<le> norm s + r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod z \\<le> cmod s + r", "using z norm_triangle_ineq2[of z s] r"], ["proof (prove)\nusing this:\n  z \\<in> cball s r\n  cmod z - cmod s \\<le> cmod (z - s)\n  0 \\<le> r\n  1 / 2 < Re s - r\n\ngoal (1 subgoal):\n 1. cmod z \\<le> cmod s + r", "by (auto simp: dist_norm norm_minus_commute)"], ["proof (state)\nthis:\n  cmod z \\<le> cmod s + r\n\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "from \\<open>p > 1\\<close> and x and r"], ["proof (chain)\npicking this:\n  1 < p\n  x \\<le> Re z\n  1 / 2 < x\n  0 \\<le> r\n  1 / 2 < Re s - r", "have \"M p \\<ge> 0\""], ["proof (prove)\nusing this:\n  1 < p\n  x \\<le> Re z\n  1 / 2 < x\n  0 \\<le> r\n  1 / 2 < Re s - r\n\ngoal (1 subgoal):\n 1. 0 \\<le> M p", "by (auto simp: C_def M_def intro!: mult_nonneg_nonneg add_nonneg_nonneg divide_nonneg_pos)"], ["proof (state)\nthis:\n  0 \\<le> M p\n\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "have bound: \"norm ((z - 1) * pre_zeta p z) \\<le> \n                   norm (z - 1) * (norm z / (Re z * p powr Re z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod ((z - 1) * pre_zeta (real p) z)\n    \\<le> cmod (z - 1) * (cmod z / (Re z * real p powr Re z))", "using pre_zeta_bound'[of z p] p \\<open>Re z > 1 / 2\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < Re z; 0 < real p\\<rbrakk>\n  \\<Longrightarrow> cmod (pre_zeta (real p) z)\n                    \\<le> cmod z / (Re z * real p powr Re z)\n  1 < p\n  1 / 2 < Re z\n\ngoal (1 subgoal):\n 1. cmod ((z - 1) * pre_zeta (real p) z)\n    \\<le> cmod (z - 1) * (cmod z / (Re z * real p powr Re z))", "unfolding norm_mult"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < Re z; 0 < real p\\<rbrakk>\n  \\<Longrightarrow> cmod (pre_zeta (real p) z)\n                    \\<le> cmod z / (Re z * real p powr Re z)\n  1 < p\n  1 / 2 < Re z\n\ngoal (1 subgoal):\n 1. cmod (z - 1) * cmod (pre_zeta (real p) z)\n    \\<le> cmod (z - 1) * (cmod z / (Re z * real p powr Re z))", "by (intro mult_mono pre_zeta_bound) auto"], ["proof (state)\nthis:\n  cmod ((z - 1) * pre_zeta (real p) z)\n  \\<le> cmod (z - 1) * (cmod z / (Re z * real p powr Re z))\n\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "have \"norm (B p z) = ln p / p * norm (A p z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (B p z) = ln (real p) / real p * cmod (A p z)", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (complex_of_real (ln (real p)) / of_nat p * A p z) =\n    ln (real p) / real p * cmod (A p z)", "using \\<open>p > 1\\<close>"], ["proof (prove)\nusing this:\n  1 < p\n\ngoal (1 subgoal):\n 1. cmod (complex_of_real (ln (real p)) / of_nat p * A p z) =\n    ln (real p) / real p * cmod (A p z)", "by (simp add: B_def norm_mult norm_divide)"], ["proof (state)\nthis:\n  cmod (B p z) = ln (real p) / real p * cmod (A p z)\n\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "also"], ["proof (state)\nthis:\n  cmod (B p z) = ln (real p) / real p * cmod (A p z)\n\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "have \"\\<dots> \\<le> ln p / p * (norm (z - 1) * norm z / Re z / p powr Re z + \n                                 p / (p powr Re z * (p powr Re z - 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real p) / real p * cmod (A p z)\n    \\<le> ln (real p) / real p *\n          (cmod (z - 1) * cmod z / Re z / real p powr Re z +\n           real p / (real p powr Re z * (real p powr Re z - 1)))", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real p) / real p *\n    cmod\n     ((z - 1) * pre_zeta (real p) z -\n      of_nat p / (of_nat p powr z * (of_nat p powr z - 1)))\n    \\<le> ln (real p) / real p *\n          (cmod (z - 1) * cmod z / Re z / real p powr Re z +\n           real p / (real p powr Re z * (real p powr Re z - 1)))", "using \\<open>p > 1\\<close> and \\<open>Re z > 1 / 2\\<close> and bound"], ["proof (prove)\nusing this:\n  1 < p\n  1 / 2 < Re z\n  cmod ((z - 1) * pre_zeta (real p) z)\n  \\<le> cmod (z - 1) * (cmod z / (Re z * real p powr Re z))\n\ngoal (1 subgoal):\n 1. ln (real p) / real p *\n    cmod\n     ((z - 1) * pre_zeta (real p) z -\n      of_nat p / (of_nat p powr z * (of_nat p powr z - 1)))\n    \\<le> ln (real p) / real p *\n          (cmod (z - 1) * cmod z / Re z / real p powr Re z +\n           real p / (real p powr Re z * (real p powr Re z - 1)))", "by (intro mult_left_mono order.trans[OF norm_triangle_ineq4 add_mono] mult_left_mono)\n         (auto simp: norm_divide norm_mult norm_powr_real_powr\n               intro!: divide_left_mono order.trans[OF _ norm_triangle_ineq2])"], ["proof (state)\nthis:\n  ln (real p) / real p * cmod (A p z)\n  \\<le> ln (real p) / real p *\n        (cmod (z - 1) * cmod z / Re z / real p powr Re z +\n         real p / (real p powr Re z * (real p powr Re z - 1)))\n\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "also"], ["proof (state)\nthis:\n  ln (real p) / real p * cmod (A p z)\n  \\<le> ln (real p) / real p *\n        (cmod (z - 1) * cmod z / Re z / real p powr Re z +\n         real p / (real p powr Re z * (real p powr Re z - 1)))\n\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "have \"\\<dots> = ln p * (norm (z - 1) * norm z / Re z / p powr (Re z + 1) + \n                            1 / (p powr Re z * (p powr Re z - 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real p) / real p *\n    (cmod (z - 1) * cmod z / Re z / real p powr Re z +\n     real p / (real p powr Re z * (real p powr Re z - 1))) =\n    ln (real p) *\n    (cmod (z - 1) * cmod z / Re z / real p powr (Re z + 1) +\n     1 / (real p powr Re z * (real p powr Re z - 1)))", "using \\<open>p > 1\\<close>"], ["proof (prove)\nusing this:\n  1 < p\n\ngoal (1 subgoal):\n 1. ln (real p) / real p *\n    (cmod (z - 1) * cmod z / Re z / real p powr Re z +\n     real p / (real p powr Re z * (real p powr Re z - 1))) =\n    ln (real p) *\n    (cmod (z - 1) * cmod z / Re z / real p powr (Re z + 1) +\n     1 / (real p powr Re z * (real p powr Re z - 1)))", "by (simp add: field_simps powr_add powr_minus)"], ["proof (state)\nthis:\n  ln (real p) / real p *\n  (cmod (z - 1) * cmod z / Re z / real p powr Re z +\n   real p / (real p powr Re z * (real p powr Re z - 1))) =\n  ln (real p) *\n  (cmod (z - 1) * cmod z / Re z / real p powr (Re z + 1) +\n   1 / (real p powr Re z * (real p powr Re z - 1)))\n\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "also"], ["proof (state)\nthis:\n  ln (real p) / real p *\n  (cmod (z - 1) * cmod z / Re z / real p powr Re z +\n   real p / (real p powr Re z * (real p powr Re z - 1))) =\n  ln (real p) *\n  (cmod (z - 1) * cmod z / Re z / real p powr (Re z + 1) +\n   1 / (real p powr Re z * (real p powr Re z - 1)))\n\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "have \"norm (z - 1) * norm z / Re z / p powr (Re z + 1) \\<le> C / p powr (x + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (z - 1) * cmod z / Re z / real p powr (Re z + 1)\n    \\<le> C / real p powr (x + 1)", "unfolding C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (z - 1) * cmod z / Re z / real p powr (Re z + 1)\n    \\<le> (cmod s + r + 1) * (cmod s + r) / x / real p powr (x + 1)", "using r \\<open>Re z > 1 / 2\\<close> norm_z p x"], ["proof (prove)\nusing this:\n  0 \\<le> r\n  1 / 2 < Re s - r\n  1 / 2 < Re z\n  cmod z \\<le> cmod s + r\n  1 < p\n  x \\<le> Re z\n  1 / 2 < x\n\ngoal (1 subgoal):\n 1. cmod (z - 1) * cmod z / Re z / real p powr (Re z + 1)\n    \\<le> (cmod s + r + 1) * (cmod s + r) / x / real p powr (x + 1)", "by (intro mult_mono frac_le powr_mono order.trans[OF norm_triangle_ineq4]) auto"], ["proof (state)\nthis:\n  cmod (z - 1) * cmod z / Re z / real p powr (Re z + 1)\n  \\<le> C / real p powr (x + 1)\n\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "also"], ["proof (state)\nthis:\n  cmod (z - 1) * cmod z / Re z / real p powr (Re z + 1)\n  \\<le> C / real p powr (x + 1)\n\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "have \"1 / (p powr Re z * (p powr Re z - 1)) \\<le>\n                 1 / (p powr x * (p powr x - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / (real p powr Re z * (real p powr Re z - 1))\n    \\<le> 1 / (real p powr x * (real p powr x - 1))", "using \\<open>p > 1\\<close> x"], ["proof (prove)\nusing this:\n  1 < p\n  x \\<le> Re z\n  1 / 2 < x\n\ngoal (1 subgoal):\n 1. 1 / (real p powr Re z * (real p powr Re z - 1))\n    \\<le> 1 / (real p powr x * (real p powr x - 1))", "by (intro divide_left_mono mult_mono powr_mono diff_right_mono mult_pos_pos)\n         (auto simp: ge_one_powr_ge_zero)"], ["proof (state)\nthis:\n  1 / (real p powr Re z * (real p powr Re z - 1))\n  \\<le> 1 / (real p powr x * (real p powr x - 1))\n\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x y.\n              x \\<le> y \\<Longrightarrow>\n              ln (real p) *\n              (x + 1 / (real p powr Re z * (real p powr Re z - 1)))\n              \\<le> ln (real p) *\n                    (y + 1 / (real p powr Re z * (real p powr Re z - 1)));\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      ln (real p) * (C / real p powr (x + 1) + xa)\n      \\<le> ln (real p) * (C / real p powr (x + 1) + y)\\<rbrakk>\n  \\<Longrightarrow> cmod (B p z)\n                    \\<le> ln (real p) *\n                          (C / real p powr (x + 1) +\n                           1 / (real p powr x * (real p powr x - 1)))", "have \"norm (B p z) \\<le> M p\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y.\n              x \\<le> y \\<Longrightarrow>\n              ln (real p) *\n              (x + 1 / (real p powr Re z * (real p powr Re z - 1)))\n              \\<le> ln (real p) *\n                    (y + 1 / (real p powr Re z * (real p powr Re z - 1)));\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      ln (real p) * (C / real p powr (x + 1) + xa)\n      \\<le> ln (real p) * (C / real p powr (x + 1) + y)\\<rbrakk>\n  \\<Longrightarrow> cmod (B p z)\n                    \\<le> ln (real p) *\n                          (C / real p powr (x + 1) +\n                           1 / (real p powr x * (real p powr x - 1)))\n\ngoal (1 subgoal):\n 1. cmod (B p z) \\<le> M p", "using \\<open>p > 1\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y.\n              x \\<le> y \\<Longrightarrow>\n              ln (real p) *\n              (x + 1 / (real p powr Re z * (real p powr Re z - 1)))\n              \\<le> ln (real p) *\n                    (y + 1 / (real p powr Re z * (real p powr Re z - 1)));\n   \\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      ln (real p) * (C / real p powr (x + 1) + xa)\n      \\<le> ln (real p) * (C / real p powr (x + 1) + y)\\<rbrakk>\n  \\<Longrightarrow> cmod (B p z)\n                    \\<le> ln (real p) *\n                          (C / real p powr (x + 1) +\n                           1 / (real p powr x * (real p powr x - 1)))\n  1 < p\n\ngoal (1 subgoal):\n 1. cmod (B p z) \\<le> M p", "by (simp add: mult_left_mono M_def)"], ["proof (state)\nthis:\n  cmod (B p z) \\<le> M p\n\ngoal (1 subgoal):\n 1. \\<And>sa saa.\n       \\<lbrakk>1 < sa; saa \\<in> cball s r\\<rbrakk>\n       \\<Longrightarrow> cmod (if prime sa then B sa saa else 0) \\<le> M sa", "with \\<open>M p \\<ge> 0\\<close>"], ["proof (chain)\npicking this:\n  0 \\<le> M p\n  cmod (B p z) \\<le> M p", "show \"norm (if prime p then B p z else 0) \\<le> M p\""], ["proof (prove)\nusing this:\n  0 \\<le> M p\n  cmod (B p z) \\<le> M p\n\ngoal (1 subgoal):\n 1. cmod (if prime p then B p z else 0) \\<le> M p", "by simp"], ["proof (state)\nthis:\n  cmod (if prime p then B p z else 0) \\<le> M p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  uniform_limit (cball s r)\n   (\\<lambda>n s. \\<Sum>p<n. if prime p then B p s else 0) pre_newman\n   sequentially\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sums_pre_newman: \"Re s > 1 / 2 \\<Longrightarrow> (\\<lambda>p. if prime p then B p s else 0) sums pre_newman s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / 2 < Re s \\<Longrightarrow>\n    (\\<lambda>p. if prime p then B p s else 0) sums pre_newman s", "using tendsto_uniform_limitI[OF uniform_limit_pre_newman[of 0 s]]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> 0; 1 / 2 < Re s - 0; ?x \\<in> cball s 0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>y. \\<Sum>p<y. if prime p then B p ?x else 0)\n                    \\<longlonglongrightarrow> pre_newman ?x\n\ngoal (1 subgoal):\n 1. 1 / 2 < Re s \\<Longrightarrow>\n    (\\<lambda>p. if prime p then B p s else 0) sums pre_newman s", "by (auto simp: sums_def)"], ["", "lemma analytic_pre_newman [THEN analytic_on_subset, analytic_intros]:\n  \"pre_newman analytic_on {s. Re s > 1 / 2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_newman analytic_on {s. 1 / 2 < Re s}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pre_newman analytic_on {s. 1 / 2 < Re s}", "have holo: \"(\\<lambda>s::complex. if prime p then B p s else 0) holomorphic_on X\"\n    if \"X \\<subseteq> {s. Re s > 1 / 2}\" for X and p :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. if prime p then B p s else 0) holomorphic_on X", "using that"], ["proof (prove)\nusing this:\n  X \\<subseteq> {s. 1 / 2 < Re s}\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. if prime p then B p s else 0) holomorphic_on X", "by (cases \"prime p\")\n       (auto intro!: holomorphic_intros simp: B_def A_def dest!: prime_gt_1_nat)"], ["proof (state)\nthis:\n  ?X \\<subseteq> {s. 1 / 2 < Re s} \\<Longrightarrow>\n  (\\<lambda>s. if prime ?p then B ?p s else 0) holomorphic_on ?X\n\ngoal (1 subgoal):\n 1. pre_newman analytic_on {s. 1 / 2 < Re s}", "have holo': \"pre_newman holomorphic_on ball s r\" if r: \"r \\<ge> 0\" \"Re s - r > 1 / 2\" for s r"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_newman holomorphic_on ball s r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pre_newman holomorphic_on ball s r", "from r"], ["proof (chain)\npicking this:\n  0 \\<le> r\n  1 / 2 < Re s - r", "have Re: \"Re z > 1 / 2\" if \"dist s z \\<le> r\" for z"], ["proof (prove)\nusing this:\n  0 \\<le> r\n  1 / 2 < Re s - r\n\ngoal (1 subgoal):\n 1. 1 / 2 < Re z", "using abs_Re_le_cmod[of \"s - z\"] r that"], ["proof (prove)\nusing this:\n  0 \\<le> r\n  1 / 2 < Re s - r\n  \\<bar>Re (s - z)\\<bar> \\<le> cmod (s - z)\n  0 \\<le> r\n  1 / 2 < Re s - r\n  dist s z \\<le> r\n\ngoal (1 subgoal):\n 1. 1 / 2 < Re z", "by (auto simp: dist_norm abs_if split: if_splits)"], ["proof (state)\nthis:\n  dist s ?z \\<le> r \\<Longrightarrow> 1 / 2 < Re ?z\n\ngoal (1 subgoal):\n 1. pre_newman holomorphic_on ball s r", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_newman holomorphic_on ball s r", "by (rule holomorphic_uniform_limit[OF _ uniform_limit_pre_newman[of r s]])\n         (insert that Re, auto intro!: always_eventually holomorphic_on_imp_continuous_on\n                                       holomorphic_intros holo)"], ["proof (state)\nthis:\n  pre_newman holomorphic_on ball s r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>0 \\<le> ?r; 1 / 2 < Re ?s - ?r\\<rbrakk>\n  \\<Longrightarrow> pre_newman holomorphic_on ball ?s ?r\n\ngoal (1 subgoal):\n 1. pre_newman analytic_on {s. 1 / 2 < Re s}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_newman analytic_on {s. 1 / 2 < Re s}", "unfolding analytic_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{s. 1 / 2 < Re s}.\n       \\<exists>e>0. pre_newman holomorphic_on ball x e", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       1 / 2 < Re x \\<Longrightarrow>\n       \\<exists>e>0. pre_newman holomorphic_on ball x e", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       1 / 2 < Re x \\<Longrightarrow>\n       \\<exists>e>0. pre_newman holomorphic_on ball x e", "assume \"Re s > 1 / 2\""], ["proof (state)\nthis:\n  1 / 2 < Re s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       1 / 2 < Re x \\<Longrightarrow>\n       \\<exists>e>0. pre_newman holomorphic_on ball x e", "thus \"\\<exists>r>0. pre_newman holomorphic_on ball s r\""], ["proof (prove)\nusing this:\n  1 / 2 < Re s\n\ngoal (1 subgoal):\n 1. \\<exists>r>0. pre_newman holomorphic_on ball s r", "by (intro exI[of _ \"(Re s - 1 / 2) / 2\"] conjI holo') (auto simp: field_simps)"], ["proof (state)\nthis:\n  \\<exists>r>0. pre_newman holomorphic_on ball s r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pre_newman analytic_on {s. 1 / 2 < Re s}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma holomorphic_pre_newman [holomorphic_intros]:\n  \"X \\<subseteq> {s. Re s > 1 / 2} \\<Longrightarrow> pre_newman holomorphic_on X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> {s. 1 / 2 < Re s} \\<Longrightarrow>\n    pre_newman holomorphic_on X", "using analytic_pre_newman"], ["proof (prove)\nusing this:\n  ?T \\<subseteq> {s. 1 / 2 < Re s} \\<Longrightarrow>\n  pre_newman analytic_on ?T\n\ngoal (1 subgoal):\n 1. X \\<subseteq> {s. 1 / 2 < Re s} \\<Longrightarrow>\n    pre_newman holomorphic_on X", "by (rule analytic_imp_holomorphic)"], ["", "lemma eval_fds_newman:\n  assumes s: \"Re s > 1\"\n  shows   \"eval_fds fds_newman s = newman s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "have eq: \"(ln (real p) / real p) * hurwitz_zeta p s =\n              1 / (s - 1) * (ln (real p) / (p powr s - 1) + B p s)\"\n    if p: \"prime p\" for p"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s =\n    1 / (s - 1) *\n    (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s =\n    1 / (s - 1) *\n    (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)", "have \"(ln (real p) / real p) * hurwitz_zeta p s =\n            ln (real p) / real p * (p powr (1 - s) / (s - 1) + pre_zeta p s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s =\n    complex_of_real (ln (real p) / real p) *\n    (of_nat p powr (1 - s) / (s - 1) + pre_zeta (real p) s)", "using s"], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s =\n    complex_of_real (ln (real p) / real p) *\n    (of_nat p powr (1 - s) / (s - 1) + pre_zeta (real p) s)", "by (auto simp add: hurwitz_zeta_def)"], ["proof (state)\nthis:\n  complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s =\n  complex_of_real (ln (real p) / real p) *\n  (of_nat p powr (1 - s) / (s - 1) + pre_zeta (real p) s)\n\ngoal (1 subgoal):\n 1. complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s =\n    1 / (s - 1) *\n    (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)", "also"], ["proof (state)\nthis:\n  complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s =\n  complex_of_real (ln (real p) / real p) *\n  (of_nat p powr (1 - s) / (s - 1) + pre_zeta (real p) s)\n\ngoal (1 subgoal):\n 1. complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s =\n    1 / (s - 1) *\n    (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)", "have \"\\<dots> = 1 / (s - 1) * (ln (real p) / (p powr s - 1) + B p s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (ln (real p) / real p) *\n    (of_nat p powr (1 - s) / (s - 1) + pre_zeta (real p) s) =\n    1 / (s - 1) *\n    (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)", "using p s"], ["proof (prove)\nusing this:\n  prime p\n  1 < Re s\n\ngoal (1 subgoal):\n 1. complex_of_real (ln (real p) / real p) *\n    (of_nat p powr (1 - s) / (s - 1) + pre_zeta (real p) s) =\n    1 / (s - 1) *\n    (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)", "by (simp add: divide_simps powr_diff B_def)\n                   (auto simp: A_def field_simps dest: prime_gt_1_nat)?"], ["proof (state)\nthis:\n  complex_of_real (ln (real p) / real p) *\n  (of_nat p powr (1 - s) / (s - 1) + pre_zeta (real p) s) =\n  1 / (s - 1) *\n  (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)\n\ngoal (1 subgoal):\n 1. complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s =\n    1 / (s - 1) *\n    (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)", "finally"], ["proof (chain)\npicking this:\n  complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s =\n  1 / (s - 1) *\n  (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)", "show ?thesis"], ["proof (prove)\nusing this:\n  complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s =\n  1 / (s - 1) *\n  (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)\n\ngoal (1 subgoal):\n 1. complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s =\n    1 / (s - 1) *\n    (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)", "."], ["proof (state)\nthis:\n  complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s =\n  1 / (s - 1) *\n  (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prime ?p \\<Longrightarrow>\n  complex_of_real (ln (real ?p) / real ?p) * hurwitz_zeta (real ?p) s =\n  1 / (s - 1) *\n  (complex_of_real (ln (real ?p)) / (of_nat ?p powr s - 1) + B ?p s)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "have \"(\\<lambda>p. (ln (real p) / real p) * hurwitz_zeta p s) abs_summable_on {p. prime p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "using s"], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. (\\<lambda>p.\n        complex_of_real (ln (real p) / real p) *\n        hurwitz_zeta (real p) s) abs_summable_on\n    {p. prime p}", "by (intro eval_fds_newman_conv_infsetsum)"], ["proof (state)\nthis:\n  (\\<lambda>p.\n      complex_of_real (ln (real p) / real p) *\n      hurwitz_zeta (real p) s) abs_summable_on\n  {p. prime p}\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "hence \"(\\<lambda>p. 1 / (s - 1) * (ln (real p) / (p powr s - 1) + B p s))\n            abs_summable_on {p. prime p}\""], ["proof (prove)\nusing this:\n  (\\<lambda>p.\n      complex_of_real (ln (real p) / real p) *\n      hurwitz_zeta (real p) s) abs_summable_on\n  {p. prime p}\n\ngoal (1 subgoal):\n 1. (\\<lambda>p.\n        1 / (s - 1) *\n        (complex_of_real (ln (real p)) / (of_nat p powr s - 1) +\n         B p s)) abs_summable_on\n    {p. prime p}", "by (subst (asm) abs_summable_on_cong[OF eq refl]) auto"], ["proof (state)\nthis:\n  (\\<lambda>p.\n      1 / (s - 1) *\n      (complex_of_real (ln (real p)) / (of_nat p powr s - 1) +\n       B p s)) abs_summable_on\n  {p. prime p}\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "hence summable:\n    \"(\\<lambda>p. ln (real p) / (p powr s - 1) + B p s) abs_summable_on {p. prime p}\""], ["proof (prove)\nusing this:\n  (\\<lambda>p.\n      1 / (s - 1) *\n      (complex_of_real (ln (real p)) / (of_nat p powr s - 1) +\n       B p s)) abs_summable_on\n  {p. prime p}\n\ngoal (1 subgoal):\n 1. (\\<lambda>p.\n        complex_of_real (ln (real p)) / (of_nat p powr s - 1) +\n        B p s) abs_summable_on\n    {p. prime p}", "using s"], ["proof (prove)\nusing this:\n  (\\<lambda>p.\n      1 / (s - 1) *\n      (complex_of_real (ln (real p)) / (of_nat p powr s - 1) +\n       B p s)) abs_summable_on\n  {p. prime p}\n  1 < Re s\n\ngoal (1 subgoal):\n 1. (\\<lambda>p.\n        complex_of_real (ln (real p)) / (of_nat p powr s - 1) +\n        B p s) abs_summable_on\n    {p. prime p}", "by (subst (asm) abs_summable_on_cmult_right_iff) auto"], ["proof (state)\nthis:\n  (\\<lambda>p.\n      complex_of_real (ln (real p)) / (of_nat p powr s - 1) +\n      B p s) abs_summable_on\n  {p. prime p}\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "from s"], ["proof (chain)\npicking this:\n  1 < Re s", "have [simp]: \"s \\<noteq> 1\""], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. s \\<noteq> 1", "by auto"], ["proof (state)\nthis:\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "have \"eval_fds fds_newman s =\n          (\\<Sum>\\<^sub>ap | prime p. (ln (real p) / real p) * hurwitz_zeta p s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "using s"], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s =\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)", "by (rule eval_fds_newman_conv_infsetsum)"], ["proof (state)\nthis:\n  eval_fds fds_newman s =\n  (\\<Sum>\\<^sub>ap | prime p.\n     complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "also"], ["proof (state)\nthis:\n  eval_fds fds_newman s =\n  (\\<Sum>\\<^sub>ap | prime p.\n     complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "have \"\\<dots> = (\\<Sum>\\<^sub>ap | prime p. 1 / (s - 1) * (ln (real p) / (p powr s - 1) + B p s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s) =\n    (\\<Sum>\\<^sub>ap | prime p.\n       1 / (s - 1) *\n       (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s))", "by (intro infsetsum_cong eq) auto"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ap | prime p.\n     complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s) =\n  (\\<Sum>\\<^sub>ap | prime p.\n     1 / (s - 1) *\n     (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s))\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ap | prime p.\n     complex_of_real (ln (real p) / real p) * hurwitz_zeta (real p) s) =\n  (\\<Sum>\\<^sub>ap | prime p.\n     1 / (s - 1) *\n     (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s))\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "have \"\\<dots> = 1 / (s - 1) * (\\<Sum>\\<^sub>ap | prime p. ln (real p) / (p powr s - 1) + B p s)\"\n    (is \"_ = _ * ?S\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ap | prime p.\n       1 / (s - 1) *\n       (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)) =\n    1 / (s - 1) *\n    (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)", "by (rule infsetsum_cmult_right[OF summable])"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ap | prime p.\n     1 / (s - 1) *\n     (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)) =\n  1 / (s - 1) *\n  (\\<Sum>\\<^sub>ap | prime p.\n     complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ap | prime p.\n     1 / (s - 1) *\n     (complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)) =\n  1 / (s - 1) *\n  (\\<Sum>\\<^sub>ap | prime p.\n     complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "have \"?S = (\\<Sum>p. if prime p then \n                      ln (real p) / (p powr s - 1) + B p s else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ap | prime p.\n       complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s) =\n    (\\<Sum>p.\n        if prime p\n        then complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s\n        else 0)", "by (subst infsetsum_nat[OF summable]) auto"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ap | prime p.\n     complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s) =\n  (\\<Sum>p.\n      if prime p\n      then complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s\n      else 0)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ap | prime p.\n     complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s) =\n  (\\<Sum>p.\n      if prime p\n      then complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s\n      else 0)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "have \"\\<dots> = (\\<Sum>p. (if prime p then ln (real p) / (p powr s - 1) else 0) + \n                        (if prime p then B p s else 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p.\n        if prime p\n        then complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s\n        else 0) =\n    (\\<Sum>p.\n        (if prime p\n         then complex_of_real (ln (real p)) / (of_nat p powr s - 1)\n         else 0) +\n        (if prime p then B p s else 0))", "by (intro suminf_cong) auto"], ["proof (state)\nthis:\n  (\\<Sum>p.\n      if prime p\n      then complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s\n      else 0) =\n  (\\<Sum>p.\n      (if prime p then complex_of_real (ln (real p)) / (of_nat p powr s - 1)\n       else 0) +\n      (if prime p then B p s else 0))\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "also"], ["proof (state)\nthis:\n  (\\<Sum>p.\n      if prime p\n      then complex_of_real (ln (real p)) / (of_nat p powr s - 1) + B p s\n      else 0) =\n  (\\<Sum>p.\n      (if prime p then complex_of_real (ln (real p)) / (of_nat p powr s - 1)\n       else 0) +\n      (if prime p then B p s else 0))\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "have \"\\<dots> = pre_newman s - deriv zeta s / zeta s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p.\n        (if prime p\n         then complex_of_real (ln (real p)) / (of_nat p powr s - 1)\n         else 0) +\n        (if prime p then B p s else 0)) =\n    pre_newman s - deriv zeta s / zeta s", "using sums_pre_newman[of s] sums_logderiv_zeta[of s] s"], ["proof (prove)\nusing this:\n  1 / 2 < Re s \\<Longrightarrow>\n  (\\<lambda>p. if prime p then B p s else 0) sums pre_newman s\n  1 < Re s \\<Longrightarrow>\n  (\\<lambda>p.\n      if prime p then complex_of_real (ln (real p)) / (of_nat p powr s - 1)\n      else 0) sums\n  - (deriv zeta s / zeta s)\n  1 < Re s\n\ngoal (1 subgoal):\n 1. (\\<Sum>p.\n        (if prime p\n         then complex_of_real (ln (real p)) / (of_nat p powr s - 1)\n         else 0) +\n        (if prime p then B p s else 0)) =\n    pre_newman s - deriv zeta s / zeta s", "by (subst suminf_add [symmetric]) (auto simp: sums_iff)"], ["proof (state)\nthis:\n  (\\<Sum>p.\n      (if prime p then complex_of_real (ln (real p)) / (of_nat p powr s - 1)\n       else 0) +\n      (if prime p then B p s else 0)) =\n  pre_newman s - deriv zeta s / zeta s\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "finally"], ["proof (chain)\npicking this:\n  eval_fds fds_newman s =\n  1 / (s - 1) * (pre_newman s - deriv zeta s / zeta s)", "show ?thesis"], ["proof (prove)\nusing this:\n  eval_fds fds_newman s =\n  1 / (s - 1) * (pre_newman s - deriv zeta s / zeta s)\n\ngoal (1 subgoal):\n 1. eval_fds fds_newman s = newman s", "by (simp add: newman_def)"], ["proof (state)\nthis:\n  eval_fds fds_newman s = newman s\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>\n  Next, we shall attempt to get rid of the pole by subtracting suitable multiples of $\\zeta(s)$\n  and $\\zeta'(s)$. To this end, we shall first prove the following alternative definition of \n  $\\zeta'(s)$:\n\\<close>"], ["", "lemma deriv_zeta_eq':\n  assumes \"0 < Re s\" \"s \\<noteq> 1\"\n  shows \"deriv zeta s = deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n                          (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2\"\n    (is \"_ = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. deriv zeta s =\n    deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n    (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2", "proof (rule DERIV_imp_deriv)"], ["proof (state)\ngoal (1 subgoal):\n 1. (zeta has_field_derivative\n     deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n     (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n     (at s)", "have [derivative_intros]: \"(pre_zeta 1 has_field_derivative deriv (pre_zeta 1) s) (at s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (pre_zeta 1 has_field_derivative deriv (pre_zeta 1) s) (at s)", "by (intro holomorphic_derivI[of _ UNIV] holomorphic_intros) auto"], ["proof (state)\nthis:\n  (pre_zeta 1 has_field_derivative deriv (pre_zeta 1) s) (at s)\n\ngoal (1 subgoal):\n 1. (zeta has_field_derivative\n     deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n     (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n     (at s)", "have *: \"deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s = deriv (pre_zeta 1) s * (s - 1) + pre_zeta 1 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s =\n    deriv (pre_zeta 1) s * (s - 1) + pre_zeta 1 s", "by (subst deriv_mult)\n       (auto intro!: holomorphic_on_imp_differentiable_at[of _ UNIV] holomorphic_intros)"], ["proof (state)\nthis:\n  deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s =\n  deriv (pre_zeta 1) s * (s - 1) + pre_zeta 1 s\n\ngoal (1 subgoal):\n 1. (zeta has_field_derivative\n     deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n     (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n     (at s)", "hence \"((\\<lambda>s. pre_zeta 1 s + 1 / (s - 1)) has_field_derivative\n           deriv (pre_zeta 1) s - 1 / ((s - 1) * (s - 1))) (at s)\""], ["proof (prove)\nusing this:\n  deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s =\n  deriv (pre_zeta 1) s * (s - 1) + pre_zeta 1 s\n\ngoal (1 subgoal):\n 1. ((\\<lambda>s. pre_zeta 1 s + 1 / (s - 1)) has_field_derivative\n     deriv (pre_zeta 1) s - 1 / ((s - 1) * (s - 1)))\n     (at s)", "using assms"], ["proof (prove)\nusing this:\n  deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s =\n  deriv (pre_zeta 1) s * (s - 1) + pre_zeta 1 s\n  0 < Re s\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. ((\\<lambda>s. pre_zeta 1 s + 1 / (s - 1)) has_field_derivative\n     deriv (pre_zeta 1) s - 1 / ((s - 1) * (s - 1)))\n     (at s)", "by (auto intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>s. pre_zeta 1 s + 1 / (s - 1)) has_field_derivative\n   deriv (pre_zeta 1) s - 1 / ((s - 1) * (s - 1)))\n   (at s)\n\ngoal (1 subgoal):\n 1. (zeta has_field_derivative\n     deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n     (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n     (at s)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>s. pre_zeta 1 s + 1 / (s - 1)) has_field_derivative\n   deriv (pre_zeta 1) s - 1 / ((s - 1) * (s - 1)))\n   (at s)\n\ngoal (1 subgoal):\n 1. (zeta has_field_derivative\n     deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n     (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n     (at s)", "have \"deriv (pre_zeta 1) s - 1 / ((s - 1) * (s - 1)) = ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deriv (pre_zeta 1) s - 1 / ((s - 1) * (s - 1)) =\n    deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n    (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2", "using * assms"], ["proof (prove)\nusing this:\n  deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s =\n  deriv (pre_zeta 1) s * (s - 1) + pre_zeta 1 s\n  0 < Re s\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. deriv (pre_zeta 1) s - 1 / ((s - 1) * (s - 1)) =\n    deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n    (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2", "by (simp add: divide_simps power2_eq_square, simp add: field_simps)"], ["proof (state)\nthis:\n  deriv (pre_zeta 1) s - 1 / ((s - 1) * (s - 1)) =\n  deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n  (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (zeta has_field_derivative\n     deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n     (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n     (at s)", "also"], ["proof (state)\nthis:\n  deriv (pre_zeta 1) s - 1 / ((s - 1) * (s - 1)) =\n  deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n  (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (zeta has_field_derivative\n     deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n     (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n     (at s)", "have \"((\\<lambda>s. pre_zeta 1 s + 1 / (s - 1)) has_field_derivative ?rhs) (at s) \\<longleftrightarrow>\n               (zeta has_field_derivative ?rhs) (at s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>s. pre_zeta 1 s + 1 / (s - 1)) has_field_derivative\n     deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n     (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n     (at s) =\n    (zeta has_field_derivative\n     deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n     (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n     (at s)", "using assms"], ["proof (prove)\nusing this:\n  0 < Re s\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. ((\\<lambda>s. pre_zeta 1 s + 1 / (s - 1)) has_field_derivative\n     deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n     (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n     (at s) =\n    (zeta has_field_derivative\n     deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n     (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n     (at s)", "by (intro has_field_derivative_cong_ev eventually_mono[OF t1_space_nhds[of _ 1]])\n       (auto simp: zeta_def hurwitz_zeta_def)"], ["proof (state)\nthis:\n  ((\\<lambda>s. pre_zeta 1 s + 1 / (s - 1)) has_field_derivative\n   deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n   (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n   (at s) =\n  (zeta has_field_derivative\n   deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n   (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n   (at s)\n\ngoal (1 subgoal):\n 1. (zeta has_field_derivative\n     deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n     (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n     (at s)", "finally"], ["proof (chain)\npicking this:\n  (zeta has_field_derivative\n   deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n   (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n   (at s)", "show \\<dots>"], ["proof (prove)\nusing this:\n  (zeta has_field_derivative\n   deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n   (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n   (at s)\n\ngoal (1 subgoal):\n 1. (zeta has_field_derivative\n     deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n     (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n     (at s)", "."], ["proof (state)\nthis:\n  (zeta has_field_derivative\n   deriv (\\<lambda>z. pre_zeta 1 z * (z - 1)) s / (s - 1) -\n   (pre_zeta 1 s * (s - 1) + 1) / (s - 1)\\<^sup>2)\n   (at s)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  From this, it follows that $(s - 1) \\zeta'(s) - \\zeta'(s) / \\zeta(s)$ is analytic \n  for $\\mathfrak{R}(s) \\geq 1$:\n\\<close>"], ["", "lemma analytic_zeta_derivdiff:\n  obtains a where\n    \"(\\<lambda>z. if z = 1 then a else (z - 1) * deriv zeta z - deriv zeta z / zeta z)\n          analytic_on {s. Re s \\<ge> 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        (\\<lambda>z.\n            if z = 1 then a\n            else (z - 1) * deriv zeta z - deriv zeta z / zeta z) analytic_on\n        {s. 1 \\<le> Re s} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        (\\<lambda>z.\n            if z = 1 then a\n            else (z - 1) * deriv zeta z - deriv zeta z / zeta z) analytic_on\n        {s. 1 \\<le> Re s} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    (\\<lambda>z.\n        if z = 1 then ?a2\n        else (z - 1) * deriv zeta z - deriv zeta z / zeta z) analytic_on\n    {s. 1 \\<le> Re s}", "have neq: \"pre_zeta 1 z * (z - 1) + 1 \\<noteq> 0\" if \"Re z \\<ge> 1\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_zeta 1 z * (z - 1) + 1 \\<noteq> 0", "using zeta_Re_ge_1_nonzero[of z] that"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 \\<le> Re z; z \\<noteq> 1\\<rbrakk>\n  \\<Longrightarrow> zeta z \\<noteq> 0\n  1 \\<le> Re z\n\ngoal (1 subgoal):\n 1. pre_zeta 1 z * (z - 1) + 1 \\<noteq> 0", "by (cases \"z = 1\") (auto simp: zeta_def hurwitz_zeta_def divide_simps)"], ["proof (state)\nthis:\n  1 \\<le> Re ?z \\<Longrightarrow> pre_zeta 1 ?z * (?z - 1) + 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        (\\<lambda>z.\n            if z = 1 then a\n            else (z - 1) * deriv zeta z - deriv zeta z / zeta z) analytic_on\n        {s. 1 \\<le> Re s} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    (\\<lambda>z.\n        if z = 1 then ?a2\n        else (z - 1) * deriv zeta z - deriv zeta z / zeta z) analytic_on\n    {s. 1 \\<le> Re s}", "let ?g = \"\\<lambda>z. (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) * ((z - 1) *\n                deriv ((\\<lambda>u. pre_zeta 1 u * (u - 1))) z - (pre_zeta 1 z * (z - 1) + 1))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        (\\<lambda>z.\n            if z = 1 then a\n            else (z - 1) * deriv zeta z - deriv zeta z / zeta z) analytic_on\n        {s. 1 \\<le> Re s} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    (\\<lambda>z.\n        if z = 1 then ?a2\n        else (z - 1) * deriv zeta z - deriv zeta z / zeta z) analytic_on\n    {s. 1 \\<le> Re s}", "show \"(\\<lambda>z. if z = 1 then deriv ?g 1 else (z - 1) * deriv zeta z - deriv zeta z / zeta z)\n          analytic_on {s. Re s \\<ge> 1}\" (is \"?f analytic_on _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        if z = 1\n        then deriv\n              (\\<lambda>z.\n                  (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n                  ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                   (pre_zeta 1 z * (z - 1) + 1)))\n              1\n        else (z - 1) * deriv zeta z - deriv zeta z / zeta z) analytic_on\n    {s. 1 \\<le> Re s}", "proof (rule pole_theorem_analytic_0)"], ["proof (state)\ngoal (4 subgoals):\n 1. ?g analytic_on {s. 1 \\<le> Re s}\n 2. \\<And>z.\n       z \\<in> {s. 1 \\<le> Re s} \\<Longrightarrow>\n       \\<exists>d>0.\n          \\<forall>w\\<in>ball z d - {?a}.\n             ?g w =\n             (w - ?a) *\n             (if w = 1\n              then deriv\n                    (\\<lambda>z.\n                        (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n                        ((z - 1) *\n                         deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                         (pre_zeta 1 z * (z - 1) + 1)))\n                    1\n              else (w - 1) * deriv zeta w - deriv zeta w / zeta w)\n 3. (if ?a = 1\n     then deriv\n           (\\<lambda>z.\n               (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n               ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                (pre_zeta 1 z * (z - 1) + 1)))\n           1\n     else (?a - 1) * deriv zeta ?a - deriv zeta ?a / zeta ?a) =\n    deriv ?g ?a\n 4. ?g ?a = 0", "show \"?g analytic_on {s. 1 \\<le> Re s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n        ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n         (pre_zeta 1 z * (z - 1) + 1))) analytic_on\n    {s. 1 \\<le> Re s}", "using neq"], ["proof (prove)\nusing this:\n  1 \\<le> Re ?z \\<Longrightarrow> pre_zeta 1 ?z * (?z - 1) + 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n        ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n         (pre_zeta 1 z * (z - 1) + 1))) analytic_on\n    {s. 1 \\<le> Re s}", "by (auto intro!: analytic_intros)"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n      ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n       (pre_zeta 1 z * (z - 1) + 1))) analytic_on\n  {s. 1 \\<le> Re s}\n\ngoal (3 subgoals):\n 1. \\<And>z.\n       z \\<in> {s. 1 \\<le> Re s} \\<Longrightarrow>\n       \\<exists>d>0.\n          \\<forall>w\\<in>ball z d - {?a}.\n             (1 - inverse (pre_zeta 1 w * (w - 1) + 1)) *\n             ((w - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) w -\n              (pre_zeta 1 w * (w - 1) + 1)) =\n             (w - ?a) *\n             (if w = 1\n              then deriv\n                    (\\<lambda>z.\n                        (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n                        ((z - 1) *\n                         deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                         (pre_zeta 1 z * (z - 1) + 1)))\n                    1\n              else (w - 1) * deriv zeta w - deriv zeta w / zeta w)\n 2. (if ?a = 1\n     then deriv\n           (\\<lambda>z.\n               (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n               ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                (pre_zeta 1 z * (z - 1) + 1)))\n           1\n     else (?a - 1) * deriv zeta ?a - deriv zeta ?a / zeta ?a) =\n    deriv\n     (\\<lambda>z.\n         (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n         ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n          (pre_zeta 1 z * (z - 1) + 1)))\n     ?a\n 3. (1 - inverse (pre_zeta 1 ?a * (?a - 1) + 1)) *\n    ((?a - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) ?a -\n     (pre_zeta 1 ?a * (?a - 1) + 1)) =\n    0", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>z.\n       z \\<in> {s. 1 \\<le> Re s} \\<Longrightarrow>\n       \\<exists>d>0.\n          \\<forall>w\\<in>ball z d - {?a}.\n             (1 - inverse (pre_zeta 1 w * (w - 1) + 1)) *\n             ((w - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) w -\n              (pre_zeta 1 w * (w - 1) + 1)) =\n             (w - ?a) *\n             (if w = 1\n              then deriv\n                    (\\<lambda>z.\n                        (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n                        ((z - 1) *\n                         deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                         (pre_zeta 1 z * (z - 1) + 1)))\n                    1\n              else (w - 1) * deriv zeta w - deriv zeta w / zeta w)\n 2. (if ?a = 1\n     then deriv\n           (\\<lambda>z.\n               (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n               ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                (pre_zeta 1 z * (z - 1) + 1)))\n           1\n     else (?a - 1) * deriv zeta ?a - deriv zeta ?a / zeta ?a) =\n    deriv\n     (\\<lambda>z.\n         (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n         ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n          (pre_zeta 1 z * (z - 1) + 1)))\n     ?a\n 3. (1 - inverse (pre_zeta 1 ?a * (?a - 1) + 1)) *\n    ((?a - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) ?a -\n     (pre_zeta 1 ?a * (?a - 1) + 1)) =\n    0", "show \"\\<exists>d>0. \\<forall>w\\<in>ball z d - {1}. ?g w = (w - 1) * ?f w\"\n      if z: \"z \\<in> {s. 1 \\<le> Re s}\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>w\\<in>ball z d - {1}.\n          (1 - inverse (pre_zeta 1 w * (w - 1) + 1)) *\n          ((w - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) w -\n           (pre_zeta 1 w * (w - 1) + 1)) =\n          (w - 1) *\n          (if w = 1\n           then deriv\n                 (\\<lambda>z.\n                     (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n                     ((z - 1) *\n                      deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                      (pre_zeta 1 z * (z - 1) + 1)))\n                 1\n           else (w - 1) * deriv zeta w - deriv zeta w / zeta w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>w\\<in>ball z d - {1}.\n          (1 - inverse (pre_zeta 1 w * (w - 1) + 1)) *\n          ((w - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) w -\n           (pre_zeta 1 w * (w - 1) + 1)) =\n          (w - 1) *\n          (if w = 1\n           then deriv\n                 (\\<lambda>z.\n                     (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n                     ((z - 1) *\n                      deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                      (pre_zeta 1 z * (z - 1) + 1)))\n                 1\n           else (w - 1) * deriv zeta w - deriv zeta w / zeta w)", "have *: \"isCont (\\<lambda>z. pre_zeta 1 z * (z - 1) + 1) z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (\\<lambda>z. pre_zeta 1 z * (z - 1) + 1) z", "by (auto intro!: continuous_intros)"], ["proof (state)\nthis:\n  isCont (\\<lambda>z. pre_zeta 1 z * (z - 1) + 1) z\n\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>w\\<in>ball z d - {1}.\n          (1 - inverse (pre_zeta 1 w * (w - 1) + 1)) *\n          ((w - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) w -\n           (pre_zeta 1 w * (w - 1) + 1)) =\n          (w - 1) *\n          (if w = 1\n           then deriv\n                 (\\<lambda>z.\n                     (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n                     ((z - 1) *\n                      deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                      (pre_zeta 1 z * (z - 1) + 1)))\n                 1\n           else (w - 1) * deriv zeta w - deriv zeta w / zeta w)", "obtain e where \"e > 0\" and e: \"\\<And>y. dist z y < e \\<Longrightarrow> pre_zeta (Suc 0) y * (y-1) + 1 \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         \\<And>y.\n            dist z y < e \\<Longrightarrow>\n            pre_zeta (real (Suc 0)) y * (y - 1) + 1 \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using continuous_at_avoid [OF * neq[of z]] z"], ["proof (prove)\nusing this:\n  1 \\<le> Re z \\<Longrightarrow>\n  \\<exists>e>0.\n     \\<forall>y.\n        dist z y < e \\<longrightarrow> pre_zeta 1 y * (y - 1) + 1 \\<noteq> 0\n  z \\<in> {s. 1 \\<le> Re s}\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         \\<And>y.\n            dist z y < e \\<Longrightarrow>\n            pre_zeta (real (Suc 0)) y * (y - 1) + 1 \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < e\n  dist z ?y < e \\<Longrightarrow>\n  pre_zeta (real (Suc 0)) ?y * (?y - 1) + 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>w\\<in>ball z d - {1}.\n          (1 - inverse (pre_zeta 1 w * (w - 1) + 1)) *\n          ((w - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) w -\n           (pre_zeta 1 w * (w - 1) + 1)) =\n          (w - 1) *\n          (if w = 1\n           then deriv\n                 (\\<lambda>z.\n                     (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n                     ((z - 1) *\n                      deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                      (pre_zeta 1 z * (z - 1) + 1)))\n                 1\n           else (w - 1) * deriv zeta w - deriv zeta w / zeta w)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>w\\<in>ball z d - {1}.\n          (1 - inverse (pre_zeta 1 w * (w - 1) + 1)) *\n          ((w - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) w -\n           (pre_zeta 1 w * (w - 1) + 1)) =\n          (w - 1) *\n          (if w = 1\n           then deriv\n                 (\\<lambda>z.\n                     (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n                     ((z - 1) *\n                      deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                      (pre_zeta 1 z * (z - 1) + 1)))\n                 1\n           else (w - 1) * deriv zeta w - deriv zeta w / zeta w)", "proof (intro exI ballI conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < ?d\n 2. \\<And>w.\n       w \\<in> ball z ?d - {1} \\<Longrightarrow>\n       (1 - inverse (pre_zeta 1 w * (w - 1) + 1)) *\n       ((w - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) w -\n        (pre_zeta 1 w * (w - 1) + 1)) =\n       (w - 1) *\n       (if w = 1\n        then deriv\n              (\\<lambda>z.\n                  (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n                  ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                   (pre_zeta 1 z * (z - 1) + 1)))\n              1\n        else (w - 1) * deriv zeta w - deriv zeta w / zeta w)", "fix w"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < ?d\n 2. \\<And>w.\n       w \\<in> ball z ?d - {1} \\<Longrightarrow>\n       (1 - inverse (pre_zeta 1 w * (w - 1) + 1)) *\n       ((w - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) w -\n        (pre_zeta 1 w * (w - 1) + 1)) =\n       (w - 1) *\n       (if w = 1\n        then deriv\n              (\\<lambda>z.\n                  (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n                  ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                   (pre_zeta 1 z * (z - 1) + 1)))\n              1\n        else (w - 1) * deriv zeta w - deriv zeta w / zeta w)", "assume w: \"w \\<in> ball z (min e 1) - {1}\""], ["proof (state)\nthis:\n  w \\<in> ball z (min e 1) - {1}\n\ngoal (2 subgoals):\n 1. 0 < ?d\n 2. \\<And>w.\n       w \\<in> ball z ?d - {1} \\<Longrightarrow>\n       (1 - inverse (pre_zeta 1 w * (w - 1) + 1)) *\n       ((w - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) w -\n        (pre_zeta 1 w * (w - 1) + 1)) =\n       (w - 1) *\n       (if w = 1\n        then deriv\n              (\\<lambda>z.\n                  (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n                  ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                   (pre_zeta 1 z * (z - 1) + 1)))\n              1\n        else (w - 1) * deriv zeta w - deriv zeta w / zeta w)", "then"], ["proof (chain)\npicking this:\n  w \\<in> ball z (min e 1) - {1}", "have \"Re w > 0\""], ["proof (prove)\nusing this:\n  w \\<in> ball z (min e 1) - {1}\n\ngoal (1 subgoal):\n 1. 0 < Re w", "using complex_Re_le_cmod [of \"z-w\"] z"], ["proof (prove)\nusing this:\n  w \\<in> ball z (min e 1) - {1}\n  Re (z - w) \\<le> cmod (z - w)\n  z \\<in> {s. 1 \\<le> Re s}\n\ngoal (1 subgoal):\n 1. 0 < Re w", "by (simp add: dist_norm)"], ["proof (state)\nthis:\n  0 < Re w\n\ngoal (2 subgoals):\n 1. 0 < ?d\n 2. \\<And>w.\n       w \\<in> ball z ?d - {1} \\<Longrightarrow>\n       (1 - inverse (pre_zeta 1 w * (w - 1) + 1)) *\n       ((w - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) w -\n        (pre_zeta 1 w * (w - 1) + 1)) =\n       (w - 1) *\n       (if w = 1\n        then deriv\n              (\\<lambda>z.\n                  (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n                  ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                   (pre_zeta 1 z * (z - 1) + 1)))\n              1\n        else (w - 1) * deriv zeta w - deriv zeta w / zeta w)", "with w"], ["proof (chain)\npicking this:\n  w \\<in> ball z (min e 1) - {1}\n  0 < Re w", "show \"?g w = (w - 1) * (if w = 1 then deriv ?g 1 else\n                        (w - 1) * deriv zeta w - deriv zeta w / zeta w)\""], ["proof (prove)\nusing this:\n  w \\<in> ball z (min e 1) - {1}\n  0 < Re w\n\ngoal (1 subgoal):\n 1. (1 - inverse (pre_zeta 1 w * (w - 1) + 1)) *\n    ((w - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) w -\n     (pre_zeta 1 w * (w - 1) + 1)) =\n    (w - 1) *\n    (if w = 1\n     then deriv\n           (\\<lambda>z.\n               (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n               ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                (pre_zeta 1 z * (z - 1) + 1)))\n           1\n     else (w - 1) * deriv zeta w - deriv zeta w / zeta w)", "by (subst (1 2) deriv_zeta_eq', \n              simp_all add: zeta_def hurwitz_zeta_def divide_simps e power2_eq_square)\n             (simp_all add: algebra_simps)?"], ["proof (state)\nthis:\n  (1 - inverse (pre_zeta 1 w * (w - 1) + 1)) *\n  ((w - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) w -\n   (pre_zeta 1 w * (w - 1) + 1)) =\n  (w - 1) *\n  (if w = 1\n   then deriv\n         (\\<lambda>z.\n             (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n             ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n              (pre_zeta 1 z * (z - 1) + 1)))\n         1\n   else (w - 1) * deriv zeta w - deriv zeta w / zeta w)\n\ngoal (1 subgoal):\n 1. 0 < min e 1", "qed (use \\<open>e > 0\\<close> in auto)"], ["proof (state)\nthis:\n  \\<exists>d>0.\n     \\<forall>w\\<in>ball z d - {1}.\n        (1 - inverse (pre_zeta 1 w * (w - 1) + 1)) *\n        ((w - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) w -\n         (pre_zeta 1 w * (w - 1) + 1)) =\n        (w - 1) *\n        (if w = 1\n         then deriv\n               (\\<lambda>z.\n                   (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n                   ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                    (pre_zeta 1 z * (z - 1) + 1)))\n               1\n         else (w - 1) * deriv zeta w - deriv zeta w / zeta w)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?z \\<in> {s. 1 \\<le> Re s} \\<Longrightarrow>\n  \\<exists>d>0.\n     \\<forall>w\\<in>ball ?z d - {1}.\n        (1 - inverse (pre_zeta 1 w * (w - 1) + 1)) *\n        ((w - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) w -\n         (pre_zeta 1 w * (w - 1) + 1)) =\n        (w - 1) *\n        (if w = 1\n         then deriv\n               (\\<lambda>z.\n                   (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n                   ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                    (pre_zeta 1 z * (z - 1) + 1)))\n               1\n         else (w - 1) * deriv zeta w - deriv zeta w / zeta w)\n\ngoal (2 subgoals):\n 1. (if 1 = 1\n     then deriv\n           (\\<lambda>z.\n               (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n               ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                (pre_zeta 1 z * (z - 1) + 1)))\n           1\n     else (1 - 1) * deriv zeta 1 - deriv zeta 1 / zeta 1) =\n    deriv\n     (\\<lambda>z.\n         (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n         ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n          (pre_zeta 1 z * (z - 1) + 1)))\n     1\n 2. (1 - inverse (pre_zeta 1 1 * (1 - 1) + 1)) *\n    ((1 - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) 1 -\n     (pre_zeta 1 1 * (1 - 1) + 1)) =\n    0", "qed auto"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      if z = 1\n      then deriv\n            (\\<lambda>z.\n                (1 - inverse (pre_zeta 1 z * (z - 1) + 1)) *\n                ((z - 1) * deriv (\\<lambda>u. pre_zeta 1 u * (u - 1)) z -\n                 (pre_zeta 1 z * (z - 1) + 1)))\n            1\n      else (z - 1) * deriv zeta z - deriv zeta z / zeta z) analytic_on\n  {s. 1 \\<le> Re s}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Finally, $f(s) + \\zeta'(s) + c\\zeta(s)$ is analytic.\n\\<close>"], ["", "lemma analytic_newman_variant:\n  obtains c a where\n     \"(\\<lambda>z. if z = 1 then a else newman z + deriv zeta z + c * zeta z) analytic_on {s. Re s \\<ge> 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a c.\n        (\\<lambda>z.\n            if z = 1 then a\n            else newman z + deriv zeta z + c * zeta z) analytic_on\n        {s. 1 \\<le> Re s} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>a c.\n        (\\<lambda>z.\n            if z = 1 then a\n            else newman z + deriv zeta z + c * zeta z) analytic_on\n        {s. 1 \\<le> Re s} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "obtain c where (* -euler_mascheroni *)\n    c: \"(\\<lambda>z. if z = 1 then c else (z - 1) * deriv zeta z - deriv zeta z / zeta z)\n        analytic_on {s. Re s \\<ge> 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<lambda>z.\n            if z = 1 then c\n            else (z - 1) * deriv zeta z - deriv zeta z / zeta z) analytic_on\n        {s. 1 \\<le> Re s} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using analytic_zeta_derivdiff"], ["proof (prove)\nusing this:\n  (\\<And>a.\n      (\\<lambda>z.\n          if z = 1 then a\n          else (z - 1) * deriv zeta z - deriv zeta z / zeta z) analytic_on\n      {s. 1 \\<le> Re s} \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<lambda>z.\n            if z = 1 then c\n            else (z - 1) * deriv zeta z - deriv zeta z / zeta z) analytic_on\n        {s. 1 \\<le> Re s} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      if z = 1 then c\n      else (z - 1) * deriv zeta z - deriv zeta z / zeta z) analytic_on\n  {s. 1 \\<le> Re s}\n\ngoal (1 subgoal):\n 1. (\\<And>a c.\n        (\\<lambda>z.\n            if z = 1 then a\n            else newman z + deriv zeta z + c * zeta z) analytic_on\n        {s. 1 \\<le> Re s} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "let ?g = \"\\<lambda>z. pre_newman z +\n          (if z = 1 then c\n           else (z - 1) * deriv zeta z -\n                deriv zeta z / zeta z) - (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>a c.\n        (\\<lambda>z.\n            if z = 1 then a\n            else newman z + deriv zeta z + c * zeta z) analytic_on\n        {s. 1 \\<le> Re s} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"(\\<lambda>z. if z = 1 then deriv ?g 1 else newman z + deriv zeta z + (-(c + pre_newman 1)) * zeta z)\n        analytic_on {s. Re s \\<ge> 1}\"  (is \"?f analytic_on _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        if z = 1\n        then deriv\n              (\\<lambda>z.\n                  pre_newman z +\n                  (if z = 1 then c\n                   else (z - 1) * deriv zeta z - deriv zeta z / zeta z) -\n                  (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1))\n              1\n        else newman z + deriv zeta z +\n             - (c + pre_newman 1) * zeta z) analytic_on\n    {s. 1 \\<le> Re s}", "proof (rule pole_theorem_analytic_0)"], ["proof (state)\ngoal (4 subgoals):\n 1. ?g analytic_on {s. 1 \\<le> Re s}\n 2. \\<And>z.\n       z \\<in> {s. 1 \\<le> Re s} \\<Longrightarrow>\n       \\<exists>d>0.\n          \\<forall>w\\<in>ball z d - {?a}.\n             ?g w =\n             (w - ?a) *\n             (if w = 1\n              then deriv\n                    (\\<lambda>z.\n                        pre_newman z +\n                        (if z = 1 then c\n                         else (z - 1) * deriv zeta z -\n                              deriv zeta z / zeta z) -\n                        (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1))\n                    1\n              else newman w + deriv zeta w + - (c + pre_newman 1) * zeta w)\n 3. (if ?a = 1\n     then deriv\n           (\\<lambda>z.\n               pre_newman z +\n               (if z = 1 then c\n                else (z - 1) * deriv zeta z - deriv zeta z / zeta z) -\n               (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1))\n           1\n     else newman ?a + deriv zeta ?a + - (c + pre_newman 1) * zeta ?a) =\n    deriv ?g ?a\n 4. ?g ?a = 0", "show \"?g analytic_on {s. 1 \\<le> Re s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        pre_newman z +\n        (if z = 1 then c\n         else (z - 1) * deriv zeta z - deriv zeta z / zeta z) -\n        (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1)) analytic_on\n    {s. 1 \\<le> Re s}", "by (intro c analytic_intros) auto"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      pre_newman z +\n      (if z = 1 then c\n       else (z - 1) * deriv zeta z - deriv zeta z / zeta z) -\n      (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1)) analytic_on\n  {s. 1 \\<le> Re s}\n\ngoal (3 subgoals):\n 1. \\<And>z.\n       z \\<in> {s. 1 \\<le> Re s} \\<Longrightarrow>\n       \\<exists>d>0.\n          \\<forall>w\\<in>ball z d - {?a}.\n             pre_newman w +\n             (if w = 1 then c\n              else (w - 1) * deriv zeta w - deriv zeta w / zeta w) -\n             (c + pre_newman 1) * (pre_zeta 1 w * (w - 1) + 1) =\n             (w - ?a) *\n             (if w = 1\n              then deriv\n                    (\\<lambda>z.\n                        pre_newman z +\n                        (if z = 1 then c\n                         else (z - 1) * deriv zeta z -\n                              deriv zeta z / zeta z) -\n                        (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1))\n                    1\n              else newman w + deriv zeta w + - (c + pre_newman 1) * zeta w)\n 2. (if ?a = 1\n     then deriv\n           (\\<lambda>z.\n               pre_newman z +\n               (if z = 1 then c\n                else (z - 1) * deriv zeta z - deriv zeta z / zeta z) -\n               (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1))\n           1\n     else newman ?a + deriv zeta ?a + - (c + pre_newman 1) * zeta ?a) =\n    deriv\n     (\\<lambda>z.\n         pre_newman z +\n         (if z = 1 then c\n          else (z - 1) * deriv zeta z - deriv zeta z / zeta z) -\n         (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1))\n     ?a\n 3. pre_newman ?a +\n    (if ?a = 1 then c\n     else (?a - 1) * deriv zeta ?a - deriv zeta ?a / zeta ?a) -\n    (c + pre_newman 1) * (pre_zeta 1 ?a * (?a - 1) + 1) =\n    0", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>z.\n       z \\<in> {s. 1 \\<le> Re s} \\<Longrightarrow>\n       \\<exists>d>0.\n          \\<forall>w\\<in>ball z d - {?a}.\n             pre_newman w +\n             (if w = 1 then c\n              else (w - 1) * deriv zeta w - deriv zeta w / zeta w) -\n             (c + pre_newman 1) * (pre_zeta 1 w * (w - 1) + 1) =\n             (w - ?a) *\n             (if w = 1\n              then deriv\n                    (\\<lambda>z.\n                        pre_newman z +\n                        (if z = 1 then c\n                         else (z - 1) * deriv zeta z -\n                              deriv zeta z / zeta z) -\n                        (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1))\n                    1\n              else newman w + deriv zeta w + - (c + pre_newman 1) * zeta w)\n 2. (if ?a = 1\n     then deriv\n           (\\<lambda>z.\n               pre_newman z +\n               (if z = 1 then c\n                else (z - 1) * deriv zeta z - deriv zeta z / zeta z) -\n               (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1))\n           1\n     else newman ?a + deriv zeta ?a + - (c + pre_newman 1) * zeta ?a) =\n    deriv\n     (\\<lambda>z.\n         pre_newman z +\n         (if z = 1 then c\n          else (z - 1) * deriv zeta z - deriv zeta z / zeta z) -\n         (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1))\n     ?a\n 3. pre_newman ?a +\n    (if ?a = 1 then c\n     else (?a - 1) * deriv zeta ?a - deriv zeta ?a / zeta ?a) -\n    (c + pre_newman 1) * (pre_zeta 1 ?a * (?a - 1) + 1) =\n    0", "show \"\\<exists>d>0. \\<forall>w\\<in>ball z d - {1}. ?g w = (w - 1) * ?f w\"\n      if \"z \\<in> {s. 1 \\<le> Re s}\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>w\\<in>ball z d - {1}.\n          pre_newman w +\n          (if w = 1 then c\n           else (w - 1) * deriv zeta w - deriv zeta w / zeta w) -\n          (c + pre_newman 1) * (pre_zeta 1 w * (w - 1) + 1) =\n          (w - 1) *\n          (if w = 1\n           then deriv\n                 (\\<lambda>z.\n                     pre_newman z +\n                     (if z = 1 then c\n                      else (z - 1) * deriv zeta z - deriv zeta z / zeta z) -\n                     (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1))\n                 1\n           else newman w + deriv zeta w + - (c + pre_newman 1) * zeta w)", "using that"], ["proof (prove)\nusing this:\n  z \\<in> {s. 1 \\<le> Re s}\n\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>w\\<in>ball z d - {1}.\n          pre_newman w +\n          (if w = 1 then c\n           else (w - 1) * deriv zeta w - deriv zeta w / zeta w) -\n          (c + pre_newman 1) * (pre_zeta 1 w * (w - 1) + 1) =\n          (w - 1) *\n          (if w = 1\n           then deriv\n                 (\\<lambda>z.\n                     pre_newman z +\n                     (if z = 1 then c\n                      else (z - 1) * deriv zeta z - deriv zeta z / zeta z) -\n                     (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1))\n                 1\n           else newman w + deriv zeta w + - (c + pre_newman 1) * zeta w)", "by (intro exI[of _ 1], simp_all add: newman_def divide_simps zeta_def hurwitz_zeta_def)\n         (auto simp: field_simps)?"], ["proof (state)\nthis:\n  ?z \\<in> {s. 1 \\<le> Re s} \\<Longrightarrow>\n  \\<exists>d>0.\n     \\<forall>w\\<in>ball ?z d - {1}.\n        pre_newman w +\n        (if w = 1 then c\n         else (w - 1) * deriv zeta w - deriv zeta w / zeta w) -\n        (c + pre_newman 1) * (pre_zeta 1 w * (w - 1) + 1) =\n        (w - 1) *\n        (if w = 1\n         then deriv\n               (\\<lambda>z.\n                   pre_newman z +\n                   (if z = 1 then c\n                    else (z - 1) * deriv zeta z - deriv zeta z / zeta z) -\n                   (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1))\n               1\n         else newman w + deriv zeta w + - (c + pre_newman 1) * zeta w)\n\ngoal (2 subgoals):\n 1. (if 1 = 1\n     then deriv\n           (\\<lambda>z.\n               pre_newman z +\n               (if z = 1 then c\n                else (z - 1) * deriv zeta z - deriv zeta z / zeta z) -\n               (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1))\n           1\n     else newman 1 + deriv zeta 1 + - (c + pre_newman 1) * zeta 1) =\n    deriv\n     (\\<lambda>z.\n         pre_newman z +\n         (if z = 1 then c\n          else (z - 1) * deriv zeta z - deriv zeta z / zeta z) -\n         (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1))\n     1\n 2. pre_newman 1 +\n    (if 1 = 1 then c else (1 - 1) * deriv zeta 1 - deriv zeta 1 / zeta 1) -\n    (c + pre_newman 1) * (pre_zeta 1 1 * (1 - 1) + 1) =\n    0", "qed auto"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      if z = 1\n      then deriv\n            (\\<lambda>z.\n                pre_newman z +\n                (if z = 1 then c\n                 else (z - 1) * deriv zeta z - deriv zeta z / zeta z) -\n                (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1))\n            1\n      else newman z + deriv zeta z +\n           - (c + pre_newman 1) * zeta z) analytic_on\n  {s. 1 \\<le> Re s}\n\ngoal (1 subgoal):\n 1. (\\<And>a c.\n        (\\<lambda>z.\n            if z = 1 then a\n            else newman z + deriv zeta z + c * zeta z) analytic_on\n        {s. 1 \\<le> Re s} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "with that"], ["proof (chain)\npicking this:\n  (\\<lambda>z.\n      if z = 1 then ?a\n      else newman z + deriv zeta z + ?c * zeta z) analytic_on\n  {s. 1 \\<le> Re s} \\<Longrightarrow>\n  thesis\n  (\\<lambda>z.\n      if z = 1\n      then deriv\n            (\\<lambda>z.\n                pre_newman z +\n                (if z = 1 then c\n                 else (z - 1) * deriv zeta z - deriv zeta z / zeta z) -\n                (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1))\n            1\n      else newman z + deriv zeta z +\n           - (c + pre_newman 1) * zeta z) analytic_on\n  {s. 1 \\<le> Re s}", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>z.\n      if z = 1 then ?a\n      else newman z + deriv zeta z + ?c * zeta z) analytic_on\n  {s. 1 \\<le> Re s} \\<Longrightarrow>\n  thesis\n  (\\<lambda>z.\n      if z = 1\n      then deriv\n            (\\<lambda>z.\n                pre_newman z +\n                (if z = 1 then c\n                 else (z - 1) * deriv zeta z - deriv zeta z / zeta z) -\n                (c + pre_newman 1) * (pre_zeta 1 z * (z - 1) + 1))\n            1\n      else newman z + deriv zeta z +\n           - (c + pre_newman 1) * zeta z) analytic_on\n  {s. 1 \\<le> Re s}\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The asymptotic expansion of \\<open>\\<MM>\\<close>\\<close>"], ["", "text \\<open>\n  Our next goal is to show the key result that $\\mathfrak{M}(x) = \\ln n + c + o(1)$.\n\n  As a first step, we invoke Ingham's Tauberian theorem on the function we have\n  just defined and obtain that the sum\n  \\[\\sum\\limits_{n=1}^\\infty \\frac{\\mathfrak{M}(n) - \\ln n + c}{n}\\]\n  exists.\n\\<close>"], ["", "lemma mertens_summable:\n  obtains c :: real where \"summable (\\<lambda>n. (\\<MM> n - ln n + c) / n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "(* c = euler_mascheroni - pre_newman 1 *)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from analytic_newman_variant"], ["proof (chain)\npicking this:\n  (\\<And>c a.\n      (\\<lambda>z.\n          if z = 1 then a\n          else newman z + deriv zeta z + c * zeta z) analytic_on\n      {s. 1 \\<le> Re s} \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain c a where\n    analytic: \"(\\<lambda>z. if z = 1 then a else newman z + deriv zeta z + c * zeta z)\n                 analytic_on {s. Re s \\<ge> 1}\""], ["proof (prove)\nusing this:\n  (\\<And>c a.\n      (\\<lambda>z.\n          if z = 1 then a\n          else newman z + deriv zeta z + c * zeta z) analytic_on\n      {s. 1 \\<le> Re s} \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>a c.\n        (\\<lambda>z.\n            if z = 1 then a\n            else newman z + deriv zeta z + c * zeta z) analytic_on\n        {s. 1 \\<le> Re s} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  (\\<lambda>z.\n      if z = 1 then a else newman z + deriv zeta z + c * zeta z) analytic_on\n  {s. 1 \\<le> Re s}\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "define f where \"f = (\\<lambda>z. if z = 1 then a else newman z + deriv zeta z + c * zeta z)\""], ["proof (state)\nthis:\n  f =\n  (\\<lambda>z. if z = 1 then a else newman z + deriv zeta z + c * zeta z)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have analytic: \"f analytic_on {s. Re s \\<ge> 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f analytic_on {s. 1 \\<le> Re s}", "using analytic"], ["proof (prove)\nusing this:\n  (\\<lambda>z.\n      if z = 1 then a else newman z + deriv zeta z + c * zeta z) analytic_on\n  {s. 1 \\<le> Re s}\n\ngoal (1 subgoal):\n 1. f analytic_on {s. 1 \\<le> Re s}", "by (simp add: f_def)"], ["proof (state)\nthis:\n  f analytic_on {s. 1 \\<le> Re s}\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "define F where \"F = fds_newman + fds_deriv fds_zeta + fds_const c * fds_zeta\""], ["proof (state)\nthis:\n  F = fds_newman + fds_deriv fds_zeta + fds_const c * fds_zeta\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "note le = conv_abscissa_add_leI conv_abscissa_deriv_le conv_abscissa_newman conv_abscissa_mult_const_left"], ["proof (state)\nthis:\n  \\<lbrakk>conv_abscissa ?f \\<le> ?d; conv_abscissa ?g \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> conv_abscissa (?f + ?g) \\<le> ?d\n  conv_abscissa (fds_deriv ?f) \\<le> conv_abscissa ?f\n  conv_abscissa fds_newman \\<le> 1\n  conv_abscissa (fds_const ?c * ?f) \\<le> conv_abscissa ?f\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "note intros = le le[THEN le_less_trans] le[THEN order.trans] fds_converges"], ["proof (state)\nthis:\n  \\<lbrakk>conv_abscissa ?f \\<le> ?d; conv_abscissa ?g \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> conv_abscissa (?f + ?g) \\<le> ?d\n  conv_abscissa (fds_deriv ?f) \\<le> conv_abscissa ?f\n  conv_abscissa fds_newman \\<le> 1\n  conv_abscissa (fds_const ?c * ?f) \\<le> conv_abscissa ?f\n  \\<lbrakk>conv_abscissa ?f1 \\<le> ?y; conv_abscissa ?g1 \\<le> ?y;\n   ?y < ?z\\<rbrakk>\n  \\<Longrightarrow> conv_abscissa (?f1 + ?g1) < ?z\n  conv_abscissa ?f1 < ?z \\<Longrightarrow>\n  conv_abscissa (fds_deriv ?f1) < ?z\n  1 < ?z \\<Longrightarrow> conv_abscissa fds_newman < ?z\n  conv_abscissa ?f1 < ?z \\<Longrightarrow>\n  conv_abscissa (fds_const ?c1 * ?f1) < ?z\n  \\<lbrakk>conv_abscissa ?f1 \\<le> ?b; conv_abscissa ?g1 \\<le> ?b;\n   ?b \\<le> ?c\\<rbrakk>\n  \\<Longrightarrow> conv_abscissa (?f1 + ?g1) \\<le> ?c\n  conv_abscissa ?f1 \\<le> ?c \\<Longrightarrow>\n  conv_abscissa (fds_deriv ?f1) \\<le> ?c\n  1 \\<le> ?c \\<Longrightarrow> conv_abscissa fds_newman \\<le> ?c\n  conv_abscissa ?f1 \\<le> ?c \\<Longrightarrow>\n  conv_abscissa (fds_const ?c1 * ?f1) \\<le> ?c\n  conv_abscissa ?f < ereal (?s \\<bullet> (1::?'a)) \\<Longrightarrow>\n  fds_converges ?f ?s\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have eval_F: \"eval_fds F s = f s\" if s: \"Re s > 1\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds F s = f s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eval_fds F s = f s", "have \"eval_fds F s = eval_fds (fds_newman + fds_deriv fds_zeta) s +\n                           eval_fds (fds_const c * fds_zeta) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds F s =\n    eval_fds (fds_newman + fds_deriv fds_zeta) s +\n    eval_fds (fds_const c * fds_zeta) s", "unfolding F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds (fds_newman + fds_deriv fds_zeta + fds_const c * fds_zeta) s =\n    eval_fds (fds_newman + fds_deriv fds_zeta) s +\n    eval_fds (fds_const c * fds_zeta) s", "using s"], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. eval_fds (fds_newman + fds_deriv fds_zeta + fds_const c * fds_zeta) s =\n    eval_fds (fds_newman + fds_deriv fds_zeta) s +\n    eval_fds (fds_const c * fds_zeta) s", "by (subst eval_fds_add) (auto intro!: intros)"], ["proof (state)\nthis:\n  eval_fds F s =\n  eval_fds (fds_newman + fds_deriv fds_zeta) s +\n  eval_fds (fds_const c * fds_zeta) s\n\ngoal (1 subgoal):\n 1. eval_fds F s = f s", "also"], ["proof (state)\nthis:\n  eval_fds F s =\n  eval_fds (fds_newman + fds_deriv fds_zeta) s +\n  eval_fds (fds_const c * fds_zeta) s\n\ngoal (1 subgoal):\n 1. eval_fds F s = f s", "have \"\\<dots> = f s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds (fds_newman + fds_deriv fds_zeta) s +\n    eval_fds (fds_const c * fds_zeta) s =\n    f s", "using s"], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. eval_fds (fds_newman + fds_deriv fds_zeta) s +\n    eval_fds (fds_const c * fds_zeta) s =\n    f s", "unfolding f_def"], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. eval_fds (fds_newman + fds_deriv fds_zeta) s +\n    eval_fds (fds_const c * fds_zeta) s =\n    (if s = 1 then a else newman s + deriv zeta s + c * zeta s)", "by (subst eval_fds_add)\n         (auto intro!: intros simp: eval_fds_newman eval_fds_deriv_zeta eval_fds_mult eval_fds_zeta)"], ["proof (state)\nthis:\n  eval_fds (fds_newman + fds_deriv fds_zeta) s +\n  eval_fds (fds_const c * fds_zeta) s =\n  f s\n\ngoal (1 subgoal):\n 1. eval_fds F s = f s", "finally"], ["proof (chain)\npicking this:\n  eval_fds F s = f s", "show ?thesis"], ["proof (prove)\nusing this:\n  eval_fds F s = f s\n\ngoal (1 subgoal):\n 1. eval_fds F s = f s", "."], ["proof (state)\nthis:\n  eval_fds F s = f s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 < Re ?s \\<Longrightarrow> eval_fds F ?s = f ?s\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have conv: \"fds_converges F s\" if \"Re s \\<ge> 1\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_converges F s", "proof (rule Newman_Ingham_1)"], ["proof (state)\ngoal (4 subgoals):\n 1. fds_nth F \\<in> O(\\<lambda>_. 1)\n 2. ?f analytic_on {s. 1 \\<le> Re s}\n 3. \\<And>s. 1 < Re s \\<Longrightarrow> eval_fds F s = ?f s\n 4. 1 \\<le> Re s", "have \"(\\<lambda>n. \\<MM> (real n) - ln (real n)) \\<in> O(\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<MM> (real n) - ln (real n)) \\<in> O(\\<lambda>_. 1)", "using mertens_bounded"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<MM> x - ln x) \\<in> O(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<MM> (real n) - ln (real n)) \\<in> O(\\<lambda>_. 1)", "by (rule landau_o.big.compose) real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<MM> (real n) - ln (real n)) \\<in> O(\\<lambda>_. 1)\n\ngoal (4 subgoals):\n 1. fds_nth F \\<in> O(\\<lambda>_. 1)\n 2. ?f analytic_on {s. 1 \\<le> Re s}\n 3. \\<And>s. 1 < Re s \\<Longrightarrow> eval_fds F s = ?f s\n 4. 1 \\<le> Re s", "from natfun_bigo_1E[OF this, of 1]"], ["proof (chain)\npicking this:\n  (\\<And>C.\n      \\<lbrakk>1 \\<le> C;\n       \\<And>n. norm (\\<MM> (real n) - ln (real n)) \\<le> C\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain c' where c': \"c' \\<ge> 1\" \"\\<And>n. \\<bar>\\<MM> (real n) - ln (real n)\\<bar> \\<le> c'\""], ["proof (prove)\nusing this:\n  (\\<And>C.\n      \\<lbrakk>1 \\<le> C;\n       \\<And>n. norm (\\<MM> (real n) - ln (real n)) \\<le> C\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c'.\n        \\<lbrakk>1 \\<le> c';\n         \\<And>n. \\<bar>\\<MM> (real n) - ln (real n)\\<bar> \\<le> c'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  1 \\<le> c'\n  \\<bar>\\<MM> (real ?n) - ln (real ?n)\\<bar> \\<le> c'\n\ngoal (4 subgoals):\n 1. fds_nth F \\<in> O(\\<lambda>_. 1)\n 2. ?f analytic_on {s. 1 \\<le> Re s}\n 3. \\<And>s. 1 < Re s \\<Longrightarrow> eval_fds F s = ?f s\n 4. 1 \\<le> Re s", "have \"Bseq (fds_nth F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Bseq (fds_nth F)", "proof (intro BseqI allI)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < ?K\n 2. \\<And>n. cmod (fds_nth F n) \\<le> ?K", "fix n :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < ?K\n 2. \\<And>n. cmod (fds_nth F n) \\<le> ?K", "show \"norm (fds_nth F n) \\<le> (c' + norm c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (fds_nth F n) \\<le> c' + cmod c", "unfolding F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (fds_nth (fds_newman + fds_deriv fds_zeta + fds_const c * fds_zeta) n)\n    \\<le> c' + cmod c", "using c'"], ["proof (prove)\nusing this:\n  1 \\<le> c'\n  \\<bar>\\<MM> (real ?n) - ln (real ?n)\\<bar> \\<le> c'\n\ngoal (1 subgoal):\n 1. cmod\n     (fds_nth (fds_newman + fds_deriv fds_zeta + fds_const c * fds_zeta) n)\n    \\<le> c' + cmod c", "by (auto simp: fds_nth_zeta fds_nth_deriv fds_nth_newman scaleR_conv_of_real in_Reals_norm\n                 intro!: order.trans[OF norm_triangle_ineq] add_mono)"], ["proof (state)\nthis:\n  cmod (fds_nth F n) \\<le> c' + cmod c\n\ngoal (1 subgoal):\n 1. 0 < c' + cmod c", "qed (insert c', auto intro: add_pos_nonneg)"], ["proof (state)\nthis:\n  Bseq (fds_nth F)\n\ngoal (4 subgoals):\n 1. fds_nth F \\<in> O(\\<lambda>_. 1)\n 2. ?f analytic_on {s. 1 \\<le> Re s}\n 3. \\<And>s. 1 < Re s \\<Longrightarrow> eval_fds F s = ?f s\n 4. 1 \\<le> Re s", "thus \"fds_nth F \\<in> O(\\<lambda>_. 1)\""], ["proof (prove)\nusing this:\n  Bseq (fds_nth F)\n\ngoal (1 subgoal):\n 1. fds_nth F \\<in> O(\\<lambda>_. 1)", "by (simp add: natfun_bigo_iff_Bseq)"], ["proof (state)\nthis:\n  fds_nth F \\<in> O(\\<lambda>_. 1)\n\ngoal (3 subgoals):\n 1. ?f analytic_on {s. 1 \\<le> Re s}\n 2. \\<And>s. 1 < Re s \\<Longrightarrow> eval_fds F s = ?f s\n 3. 1 \\<le> Re s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. ?f analytic_on {s. 1 \\<le> Re s}\n 2. \\<And>s. 1 < Re s \\<Longrightarrow> eval_fds F s = ?f s\n 3. 1 \\<le> Re s", "show \"f analytic_on {s. Re s \\<ge> 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f analytic_on {s. 1 \\<le> Re s}", "by fact"], ["proof (state)\nthis:\n  f analytic_on {s. 1 \\<le> Re s}\n\ngoal (2 subgoals):\n 1. \\<And>s. 1 < Re s \\<Longrightarrow> eval_fds F s = f s\n 2. 1 \\<le> Re s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s. 1 < Re s \\<Longrightarrow> eval_fds F s = f s\n 2. 1 \\<le> Re s", "show \"eval_fds F s = f s\" if \"Re s > 1\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds F s = f s", "using that"], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. eval_fds F s = f s", "by (rule eval_F)"], ["proof (state)\nthis:\n  1 < Re ?s \\<Longrightarrow> eval_fds F ?s = f ?s\n\ngoal (1 subgoal):\n 1. 1 \\<le> Re s", "qed (insert that, auto simp: F_def intro!: intros)"], ["proof (state)\nthis:\n  1 \\<le> Re ?s \\<Longrightarrow> fds_converges F ?s\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from conv[of 1]"], ["proof (chain)\npicking this:\n  1 \\<le> Re 1 \\<Longrightarrow> fds_converges F 1", "have \"summable (\\<lambda>n. fds_nth F n / of_nat n)\""], ["proof (prove)\nusing this:\n  1 \\<le> Re 1 \\<Longrightarrow> fds_converges F 1\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. fds_nth F n / of_nat n)", "unfolding fds_converges_def"], ["proof (prove)\nusing this:\n  1 \\<le> Re 1 \\<Longrightarrow>\n  summable (\\<lambda>n. fds_nth F n / nat_power n 1)\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. fds_nth F n / of_nat n)", "by auto"], ["proof (state)\nthis:\n  summable (\\<lambda>n. fds_nth F n / of_nat n)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  summable (\\<lambda>n. fds_nth F n / of_nat n)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"?this \\<longleftrightarrow> summable (\\<lambda>n. (\\<MM> n - Ln n + c) / n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. fds_nth F n / of_nat n) =\n    summable\n     (\\<lambda>n.\n         (complex_of_real (\\<MM> (real n)) - Ln (of_nat n) + c) / of_nat n)", "by (intro summable_cong eventually_mono[OF eventually_gt_at_top[of 0]])\n       (auto simp: F_def fds_nth_newman fds_nth_deriv fds_nth_zeta scaleR_conv_of_real\n             intro!: sum.cong dest: prime_gt_0_nat)"], ["proof (state)\nthis:\n  summable (\\<lambda>n. fds_nth F n / of_nat n) =\n  summable\n   (\\<lambda>n.\n       (complex_of_real (\\<MM> (real n)) - Ln (of_nat n) + c) / of_nat n)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  summable\n   (\\<lambda>n.\n       (complex_of_real (\\<MM> (real n)) - Ln (of_nat n) + c) / of_nat n)", "have \"summable (\\<lambda>n. (\\<MM> n - Re (Ln (of_nat n)) + Re c) / n)\""], ["proof (prove)\nusing this:\n  summable\n   (\\<lambda>n.\n       (complex_of_real (\\<MM> (real n)) - Ln (of_nat n) + c) / of_nat n)\n\ngoal (1 subgoal):\n 1. summable\n     (\\<lambda>n. (\\<MM> (real n) - Re (Ln (of_nat n)) + Re c) / real n)", "by (auto dest: summable_Re)"], ["proof (state)\nthis:\n  summable\n   (\\<lambda>n. (\\<MM> (real n) - Re (Ln (of_nat n)) + Re c) / real n)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  summable\n   (\\<lambda>n. (\\<MM> (real n) - Re (Ln (of_nat n)) + Re c) / real n)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"?this \\<longleftrightarrow> summable (\\<lambda>n. (\\<MM> n - ln n + Re c) / n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable\n     (\\<lambda>n. (\\<MM> (real n) - Re (Ln (of_nat n)) + Re c) / real n) =\n    summable (\\<lambda>x. (\\<MM> (real x) - ln (real x) + Re c) / real x)", "by (intro summable_cong eventually_mono[OF eventually_gt_at_top[of 0]]) (auto intro!: sum.cong)"], ["proof (state)\nthis:\n  summable\n   (\\<lambda>n. (\\<MM> (real n) - Re (Ln (of_nat n)) + Re c) / real n) =\n  summable (\\<lambda>x. (\\<MM> (real x) - ln (real x) + Re c) / real x)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  summable (\\<lambda>x. (\\<MM> (real x) - ln (real x) + Re c) / real x)", "show ?thesis"], ["proof (prove)\nusing this:\n  summable (\\<lambda>x. (\\<MM> (real x) - ln (real x) + Re c) / real x)\n\ngoal (1 subgoal):\n 1. thesis", "using that[of \"Re c\"]"], ["proof (prove)\nusing this:\n  summable (\\<lambda>x. (\\<MM> (real x) - ln (real x) + Re c) / real x)\n  summable\n   (\\<lambda>x.\n       (\\<MM> (real x) - ln (real x) + Re c) / real x) \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Next, we prove a lemma given by Newman stating that if the sum $\\sum a_n / n$ exists and\n  $a_n + \\ln n$ is nondecreasing, then $a_n$ must tend to 0. Unfortunately, the proof is\n  rather tedious, but so is the paper version by Newman.\n\\<close>"], ["", "lemma sum_goestozero_lemma:\n  fixes d::real\n  assumes d: \"\\<bar>\\<Sum>i = M..N. a i / i\\<bar> < d\" and le: \"\\<And>n. a n + ln n \\<le> a (Suc n) + ln (Suc n)\"\n      and \"0 < M\" \"M < N\"\n    shows \"a M \\<le> d * N / (real N - real M) + (real N - real M) / M \\<and>\n          -a N \\<le> d * N / (real N - real M) + (real N - real M) / M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a M\n    \\<le> d * real N / (real N - real M) + (real N - real M) / real M \\<and>\n    - a N \\<le> d * real N / (real N - real M) + (real N - real M) / real M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a M\n    \\<le> d * real N / (real N - real M) + (real N - real M) / real M \\<and>\n    - a N \\<le> d * real N / (real N - real M) + (real N - real M) / real M", "have \"0 \\<le> d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> d", "using assms"], ["proof (prove)\nusing this:\n  \\<bar>\\<Sum>i = M..N. a i / real i\\<bar> < d\n  a ?n + ln (real ?n) \\<le> a (Suc ?n) + ln (real (Suc ?n))\n  0 < M\n  M < N\n\ngoal (1 subgoal):\n 1. 0 \\<le> d", "by linarith+"], ["proof (state)\nthis:\n  0 \\<le> d\n\ngoal (1 subgoal):\n 1. a M\n    \\<le> d * real N / (real N - real M) + (real N - real M) / real M \\<and>\n    - a N \\<le> d * real N / (real N - real M) + (real N - real M) / real M", "then"], ["proof (chain)\npicking this:\n  0 \\<le> d", "have \"0 \\<le> d * N / (N - M + 1)\""], ["proof (prove)\nusing this:\n  0 \\<le> d\n\ngoal (1 subgoal):\n 1. 0 \\<le> d * real N / real (N - M + 1)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> d * real N / real (N - M + 1)\n\ngoal (1 subgoal):\n 1. a M\n    \\<le> d * real N / (real N - real M) + (real N - real M) / real M \\<and>\n    - a N \\<le> d * real N / (real N - real M) + (real N - real M) / real M", "then"], ["proof (chain)\npicking this:\n  0 \\<le> d * real N / real (N - M + 1)", "have le_dN: \"\\<lbrakk>0 \\<le> x \\<Longrightarrow> x \\<le> d * N / (N - M + 1)\\<rbrakk> \\<Longrightarrow> x \\<le> d * N / (N - M + 1)\" for x::real"], ["proof (prove)\nusing this:\n  0 \\<le> d * real N / real (N - M + 1)\n\ngoal (1 subgoal):\n 1. (0 \\<le> x \\<Longrightarrow>\n     x \\<le> d * real N / real (N - M + 1)) \\<Longrightarrow>\n    x \\<le> d * real N / real (N - M + 1)", "by linarith"], ["proof (state)\nthis:\n  (0 \\<le> ?x \\<Longrightarrow>\n   ?x \\<le> d * real N / real (N - M + 1)) \\<Longrightarrow>\n  ?x \\<le> d * real N / real (N - M + 1)\n\ngoal (1 subgoal):\n 1. a M\n    \\<le> d * real N / (real N - real M) + (real N - real M) / real M \\<and>\n    - a N \\<le> d * real N / (real N - real M) + (real N - real M) / real M", "have le_a_ln: \"a m + ln m \\<le> a n + ln n\" if \"n \\<ge> m\" for n m"], ["proof (prove)\ngoal (1 subgoal):\n 1. a m + ln (real m) \\<le> a n + ln (real n)", "by (rule transitive_stepwise_le) (use le that in auto)"], ["proof (state)\nthis:\n  ?m \\<le> ?n \\<Longrightarrow>\n  a ?m + ln (real ?m) \\<le> a ?n + ln (real ?n)\n\ngoal (1 subgoal):\n 1. a M\n    \\<le> d * real N / (real N - real M) + (real N - real M) / real M \\<and>\n    - a N \\<le> d * real N / (real N - real M) + (real N - real M) / real M", "have *: \"x \\<le> b \\<and> y \\<le> b\" if \"a \\<le> b\" \"x \\<le> a\" \"y \\<le> a\" for a b x y::real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> b \\<and> y \\<le> b", "using that"], ["proof (prove)\nusing this:\n  a \\<le> b\n  x \\<le> a\n  y \\<le> a\n\ngoal (1 subgoal):\n 1. x \\<le> b \\<and> y \\<le> b", "by linarith"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<le> ?b; ?x \\<le> ?a; ?y \\<le> ?a\\<rbrakk>\n  \\<Longrightarrow> ?x \\<le> ?b \\<and> ?y \\<le> ?b\n\ngoal (1 subgoal):\n 1. a M\n    \\<le> d * real N / (real N - real M) + (real N - real M) / real M \\<and>\n    - a N \\<le> d * real N / (real N - real M) + (real N - real M) / real M", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. a M\n    \\<le> d * real N / (real N - real M) + (real N - real M) / real M \\<and>\n    - a N \\<le> d * real N / (real N - real M) + (real N - real M) / real M", "proof (rule *)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?a \\<le> d * real N / (real N - real M) + (real N - real M) / real M\n 2. a M \\<le> ?a\n 3. - a N \\<le> ?a", "show \"d * N / (N - M) + ln (N / M) \\<le> d * N / (real N - real M) + (real N - real M) / M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d * real N / real (N - M) + ln (real N / real M)\n    \\<le> d * real N / (real N - real M) + (real N - real M) / real M", "using \\<open>0 < M\\<close> \\<open>M < N\\<close> ln_le_minus_one [of \"N / M\"]"], ["proof (prove)\nusing this:\n  0 < M\n  M < N\n  0 < real N / real M \\<Longrightarrow>\n  ln (real N / real M) \\<le> real N / real M - 1\n\ngoal (1 subgoal):\n 1. d * real N / real (N - M) + ln (real N / real M)\n    \\<le> d * real N / (real N - real M) + (real N - real M) / real M", "by (simp add: of_nat_diff) (simp add: divide_simps)"], ["proof (state)\nthis:\n  d * real N / real (N - M) + ln (real N / real M)\n  \\<le> d * real N / (real N - real M) + (real N - real M) / real M\n\ngoal (2 subgoals):\n 1. a M \\<le> d * real N / real (N - M) + ln (real N / real M)\n 2. - a N \\<le> d * real N / real (N - M) + ln (real N / real M)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. a M \\<le> d * real N / real (N - M) + ln (real N / real M)\n 2. - a N \\<le> d * real N / real (N - M) + ln (real N / real M)", "have \"a M - ln (N / M) \\<le> (d * N) / (N - M + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a M - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "proof (rule le_dN)"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> a M - ln (real N / real M) \\<Longrightarrow>\n    a M - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "assume 0: \"0 \\<le> a M - ln (N / M)\""], ["proof (state)\nthis:\n  0 \\<le> a M - ln (real N / real M)\n\ngoal (1 subgoal):\n 1. 0 \\<le> a M - ln (real N / real M) \\<Longrightarrow>\n    a M - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "have \"(Suc N - M) * (a M - ln (N / M)) / N = (\\<Sum>i = M..N. (a M - ln (N / M)) / N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (Suc N - M) * (a M - ln (real N / real M)) / real N =\n    (\\<Sum>i = M..N. (a M - ln (real N / real M)) / real N)", "by simp"], ["proof (state)\nthis:\n  real (Suc N - M) * (a M - ln (real N / real M)) / real N =\n  (\\<Sum>i = M..N. (a M - ln (real N / real M)) / real N)\n\ngoal (1 subgoal):\n 1. 0 \\<le> a M - ln (real N / real M) \\<Longrightarrow>\n    a M - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "also"], ["proof (state)\nthis:\n  real (Suc N - M) * (a M - ln (real N / real M)) / real N =\n  (\\<Sum>i = M..N. (a M - ln (real N / real M)) / real N)\n\ngoal (1 subgoal):\n 1. 0 \\<le> a M - ln (real N / real M) \\<Longrightarrow>\n    a M - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "have \"\\<dots> \\<le> (\\<Sum>i = M..N. a i / i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = M..N. (a M - ln (real N / real M)) / real N)\n    \\<le> (\\<Sum>i = M..N. a i / real i)", "proof (rule sum_mono)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {M..N} \\<Longrightarrow>\n       (a M - ln (real N / real M)) / real N \\<le> a i / real i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {M..N} \\<Longrightarrow>\n       (a M - ln (real N / real M)) / real N \\<le> a i / real i", "assume i: \"i \\<in> {M..N}\""], ["proof (state)\nthis:\n  i \\<in> {M..N}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {M..N} \\<Longrightarrow>\n       (a M - ln (real N / real M)) / real N \\<le> a i / real i", "with \\<open>0 < M\\<close>"], ["proof (chain)\npicking this:\n  0 < M\n  i \\<in> {M..N}", "have \"0 < i\""], ["proof (prove)\nusing this:\n  0 < M\n  i \\<in> {M..N}\n\ngoal (1 subgoal):\n 1. 0 < i", "by auto"], ["proof (state)\nthis:\n  0 < i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {M..N} \\<Longrightarrow>\n       (a M - ln (real N / real M)) / real N \\<le> a i / real i", "have \"(a M - ln (N / M)) / N \\<le> (a M - ln (N / M)) / i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a M - ln (real N / real M)) / real N\n    \\<le> (a M - ln (real N / real M)) / real i", "using 0"], ["proof (prove)\nusing this:\n  0 \\<le> a M - ln (real N / real M)\n\ngoal (1 subgoal):\n 1. (a M - ln (real N / real M)) / real N\n    \\<le> (a M - ln (real N / real M)) / real i", "using i \\<open>0 < M\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> a M - ln (real N / real M)\n  i \\<in> {M..N}\n  0 < M\n\ngoal (1 subgoal):\n 1. (a M - ln (real N / real M)) / real N\n    \\<le> (a M - ln (real N / real M)) / real i", "by (simp add: frac_le_eq divide_simps mult_left_mono)"], ["proof (state)\nthis:\n  (a M - ln (real N / real M)) / real N\n  \\<le> (a M - ln (real N / real M)) / real i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {M..N} \\<Longrightarrow>\n       (a M - ln (real N / real M)) / real N \\<le> a i / real i", "also"], ["proof (state)\nthis:\n  (a M - ln (real N / real M)) / real N\n  \\<le> (a M - ln (real N / real M)) / real i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {M..N} \\<Longrightarrow>\n       (a M - ln (real N / real M)) / real N \\<le> a i / real i", "have \"a M + ln (real M) \\<le> a i + ln (real N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a M + ln (real M) \\<le> a i + ln (real N)", "by (rule order.trans[OF le_a_ln[of M i]]) (use i assms in auto)"], ["proof (state)\nthis:\n  a M + ln (real M) \\<le> a i + ln (real N)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {M..N} \\<Longrightarrow>\n       (a M - ln (real N / real M)) / real N \\<le> a i / real i", "hence \"(a M - ln (N / M)) / i \\<le> a i / real i\""], ["proof (prove)\nusing this:\n  a M + ln (real M) \\<le> a i + ln (real N)\n\ngoal (1 subgoal):\n 1. (a M - ln (real N / real M)) / real i \\<le> a i / real i", "using assms i"], ["proof (prove)\nusing this:\n  a M + ln (real M) \\<le> a i + ln (real N)\n  \\<bar>\\<Sum>i = M..N. a i / real i\\<bar> < d\n  a ?n + ln (real ?n) \\<le> a (Suc ?n) + ln (real (Suc ?n))\n  0 < M\n  M < N\n  i \\<in> {M..N}\n\ngoal (1 subgoal):\n 1. (a M - ln (real N / real M)) / real i \\<le> a i / real i", "by (intro divide_right_mono) (auto simp: ln_div field_simps)"], ["proof (state)\nthis:\n  (a M - ln (real N / real M)) / real i \\<le> a i / real i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {M..N} \\<Longrightarrow>\n       (a M - ln (real N / real M)) / real N \\<le> a i / real i", "finally"], ["proof (chain)\npicking this:\n  (a M - ln (real N / real M)) / real N \\<le> a i / real i", "show \"(a M - ln (N / M)) / real N \\<le> a i / real i\""], ["proof (prove)\nusing this:\n  (a M - ln (real N / real M)) / real N \\<le> a i / real i\n\ngoal (1 subgoal):\n 1. (a M - ln (real N / real M)) / real N \\<le> a i / real i", "."], ["proof (state)\nthis:\n  (a M - ln (real N / real M)) / real N \\<le> a i / real i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>i = M..N. (a M - ln (real N / real M)) / real N)\n  \\<le> (\\<Sum>i = M..N. a i / real i)\n\ngoal (1 subgoal):\n 1. 0 \\<le> a M - ln (real N / real M) \\<Longrightarrow>\n    a M - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "finally"], ["proof (chain)\npicking this:\n  real (Suc N - M) * (a M - ln (real N / real M)) / real N\n  \\<le> (\\<Sum>i = M..N. a i / real i)", "have \"((Suc N) - M) * (a M - ln (N / M)) / N \\<le> \\<bar>\\<Sum>i = M..N. a i / i\\<bar>\""], ["proof (prove)\nusing this:\n  real (Suc N - M) * (a M - ln (real N / real M)) / real N\n  \\<le> (\\<Sum>i = M..N. a i / real i)\n\ngoal (1 subgoal):\n 1. real (Suc N - M) * (a M - ln (real N / real M)) / real N\n    \\<le> \\<bar>\\<Sum>i = M..N. a i / real i\\<bar>", "by simp"], ["proof (state)\nthis:\n  real (Suc N - M) * (a M - ln (real N / real M)) / real N\n  \\<le> \\<bar>\\<Sum>i = M..N. a i / real i\\<bar>\n\ngoal (1 subgoal):\n 1. 0 \\<le> a M - ln (real N / real M) \\<Longrightarrow>\n    a M - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "also"], ["proof (state)\nthis:\n  real (Suc N - M) * (a M - ln (real N / real M)) / real N\n  \\<le> \\<bar>\\<Sum>i = M..N. a i / real i\\<bar>\n\ngoal (1 subgoal):\n 1. 0 \\<le> a M - ln (real N / real M) \\<Longrightarrow>\n    a M - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "have \"\\<dots> \\<le> d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>i = M..N. a i / real i\\<bar> \\<le> d", "using d"], ["proof (prove)\nusing this:\n  \\<bar>\\<Sum>i = M..N. a i / real i\\<bar> < d\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>i = M..N. a i / real i\\<bar> \\<le> d", "by simp"], ["proof (state)\nthis:\n  \\<bar>\\<Sum>i = M..N. a i / real i\\<bar> \\<le> d\n\ngoal (1 subgoal):\n 1. 0 \\<le> a M - ln (real N / real M) \\<Longrightarrow>\n    a M - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "finally"], ["proof (chain)\npicking this:\n  real (Suc N - M) * (a M - ln (real N / real M)) / real N \\<le> d", "have \"((Suc N) - M) * (a M - ln (N / M)) / N \\<le> d\""], ["proof (prove)\nusing this:\n  real (Suc N - M) * (a M - ln (real N / real M)) / real N \\<le> d\n\ngoal (1 subgoal):\n 1. real (Suc N - M) * (a M - ln (real N / real M)) / real N \\<le> d", "."], ["proof (state)\nthis:\n  real (Suc N - M) * (a M - ln (real N / real M)) / real N \\<le> d\n\ngoal (1 subgoal):\n 1. 0 \\<le> a M - ln (real N / real M) \\<Longrightarrow>\n    a M - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "then"], ["proof (chain)\npicking this:\n  real (Suc N - M) * (a M - ln (real N / real M)) / real N \\<le> d", "show ?thesis"], ["proof (prove)\nusing this:\n  real (Suc N - M) * (a M - ln (real N / real M)) / real N \\<le> d\n\ngoal (1 subgoal):\n 1. a M - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "using \\<open>M < N\\<close>"], ["proof (prove)\nusing this:\n  real (Suc N - M) * (a M - ln (real N / real M)) / real N \\<le> d\n  M < N\n\ngoal (1 subgoal):\n 1. a M - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "by (simp add: of_nat_diff field_simps)"], ["proof (state)\nthis:\n  a M - ln (real N / real M) \\<le> d * real N / real (N - M + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a M - ln (real N / real M) \\<le> d * real N / real (N - M + 1)\n\ngoal (2 subgoals):\n 1. a M \\<le> d * real N / real (N - M) + ln (real N / real M)\n 2. - a N \\<le> d * real N / real (N - M) + ln (real N / real M)", "also"], ["proof (state)\nthis:\n  a M - ln (real N / real M) \\<le> d * real N / real (N - M + 1)\n\ngoal (2 subgoals):\n 1. a M \\<le> d * real N / real (N - M) + ln (real N / real M)\n 2. - a N \\<le> d * real N / real (N - M) + ln (real N / real M)", "have \"\\<dots> \\<le> d * N / (N - M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d * real N / real (N - M + 1) \\<le> d * real N / real (N - M)", "using assms(1,4)"], ["proof (prove)\nusing this:\n  \\<bar>\\<Sum>i = M..N. a i / real i\\<bar> < d\n  M < N\n\ngoal (1 subgoal):\n 1. d * real N / real (N - M + 1) \\<le> d * real N / real (N - M)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  d * real N / real (N - M + 1) \\<le> d * real N / real (N - M)\n\ngoal (2 subgoals):\n 1. a M \\<le> d * real N / real (N - M) + ln (real N / real M)\n 2. - a N \\<le> d * real N / real (N - M) + ln (real N / real M)", "finally"], ["proof (chain)\npicking this:\n  a M - ln (real N / real M) \\<le> d * real N / real (N - M)", "show \"a M \\<le> d * N / (N - M) + ln (N / M)\""], ["proof (prove)\nusing this:\n  a M - ln (real N / real M) \\<le> d * real N / real (N - M)\n\ngoal (1 subgoal):\n 1. a M \\<le> d * real N / real (N - M) + ln (real N / real M)", "by simp"], ["proof (state)\nthis:\n  a M \\<le> d * real N / real (N - M) + ln (real N / real M)\n\ngoal (1 subgoal):\n 1. - a N \\<le> d * real N / real (N - M) + ln (real N / real M)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. - a N \\<le> d * real N / real (N - M) + ln (real N / real M)", "have \"- a N - ln (N / M) \\<le> (d * N) / (N - M + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - a N - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "proof (rule le_dN)"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> - a N - ln (real N / real M) \\<Longrightarrow>\n    - a N - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "assume 0: \"0 \\<le> - a N - ln (N / M)\""], ["proof (state)\nthis:\n  0 \\<le> - a N - ln (real N / real M)\n\ngoal (1 subgoal):\n 1. 0 \\<le> - a N - ln (real N / real M) \\<Longrightarrow>\n    - a N - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "have \"(\\<Sum>i = M..N. a i / i) \\<le> (\\<Sum>i = M..N. (a N + ln (N / M)) / N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = M..N. a i / real i)\n    \\<le> (\\<Sum>i = M..N. (a N + ln (real N / real M)) / real N)", "proof (rule sum_mono)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {M..N} \\<Longrightarrow>\n       a i / real i \\<le> (a N + ln (real N / real M)) / real N", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {M..N} \\<Longrightarrow>\n       a i / real i \\<le> (a N + ln (real N / real M)) / real N", "assume i: \"i \\<in> {M..N}\""], ["proof (state)\nthis:\n  i \\<in> {M..N}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {M..N} \\<Longrightarrow>\n       a i / real i \\<le> (a N + ln (real N / real M)) / real N", "with \\<open>0 < M\\<close>"], ["proof (chain)\npicking this:\n  0 < M\n  i \\<in> {M..N}", "have \"0 < i\""], ["proof (prove)\nusing this:\n  0 < M\n  i \\<in> {M..N}\n\ngoal (1 subgoal):\n 1. 0 < i", "by auto"], ["proof (state)\nthis:\n  0 < i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {M..N} \\<Longrightarrow>\n       a i / real i \\<le> (a N + ln (real N / real M)) / real N", "have \"a i + ln (real M) \\<le> a N + ln (real N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a i + ln (real M) \\<le> a N + ln (real N)", "by (rule order.trans[OF _ le_a_ln[of i N]]) (use i assms in auto)"], ["proof (state)\nthis:\n  a i + ln (real M) \\<le> a N + ln (real N)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {M..N} \\<Longrightarrow>\n       a i / real i \\<le> (a N + ln (real N / real M)) / real N", "hence \"a i / i \\<le> (a N + ln (N / M)) / i\""], ["proof (prove)\nusing this:\n  a i + ln (real M) \\<le> a N + ln (real N)\n\ngoal (1 subgoal):\n 1. a i / real i \\<le> (a N + ln (real N / real M)) / real i", "using assms(3,4)"], ["proof (prove)\nusing this:\n  a i + ln (real M) \\<le> a N + ln (real N)\n  0 < M\n  M < N\n\ngoal (1 subgoal):\n 1. a i / real i \\<le> (a N + ln (real N / real M)) / real i", "by (intro divide_right_mono) (auto simp: field_simps ln_div)"], ["proof (state)\nthis:\n  a i / real i \\<le> (a N + ln (real N / real M)) / real i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {M..N} \\<Longrightarrow>\n       a i / real i \\<le> (a N + ln (real N / real M)) / real N", "also"], ["proof (state)\nthis:\n  a i / real i \\<le> (a N + ln (real N / real M)) / real i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {M..N} \\<Longrightarrow>\n       a i / real i \\<le> (a N + ln (real N / real M)) / real N", "have \"\\<dots> \\<le> (a N + ln (N / M)) / N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a N + ln (real N / real M)) / real i\n    \\<le> (a N + ln (real N / real M)) / real N", "using i \\<open>i > 0\\<close> 0"], ["proof (prove)\nusing this:\n  i \\<in> {M..N}\n  0 < i\n  0 \\<le> - a N - ln (real N / real M)\n\ngoal (1 subgoal):\n 1. (a N + ln (real N / real M)) / real i\n    \\<le> (a N + ln (real N / real M)) / real N", "by (intro divide_left_mono_neg) auto"], ["proof (state)\nthis:\n  (a N + ln (real N / real M)) / real i\n  \\<le> (a N + ln (real N / real M)) / real N\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {M..N} \\<Longrightarrow>\n       a i / real i \\<le> (a N + ln (real N / real M)) / real N", "finally"], ["proof (chain)\npicking this:\n  a i / real i \\<le> (a N + ln (real N / real M)) / real N", "show \"a i / i \\<le> (a N + ln (N / M)) / N\""], ["proof (prove)\nusing this:\n  a i / real i \\<le> (a N + ln (real N / real M)) / real N\n\ngoal (1 subgoal):\n 1. a i / real i \\<le> (a N + ln (real N / real M)) / real N", "."], ["proof (state)\nthis:\n  a i / real i \\<le> (a N + ln (real N / real M)) / real N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>i = M..N. a i / real i)\n  \\<le> (\\<Sum>i = M..N. (a N + ln (real N / real M)) / real N)\n\ngoal (1 subgoal):\n 1. 0 \\<le> - a N - ln (real N / real M) \\<Longrightarrow>\n    - a N - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = M..N. a i / real i)\n  \\<le> (\\<Sum>i = M..N. (a N + ln (real N / real M)) / real N)\n\ngoal (1 subgoal):\n 1. 0 \\<le> - a N - ln (real N / real M) \\<Longrightarrow>\n    - a N - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "have \"\\<dots> = ((Suc N) - M) * (a N + ln (N / M)) / N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = M..N. (a N + ln (real N / real M)) / real N) =\n    real (Suc N - M) * (a N + ln (real N / real M)) / real N", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i = M..N. (a N + ln (real N / real M)) / real N) =\n  real (Suc N - M) * (a N + ln (real N / real M)) / real N\n\ngoal (1 subgoal):\n 1. 0 \\<le> - a N - ln (real N / real M) \\<Longrightarrow>\n    - a N - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>i = M..N. a i / real i)\n  \\<le> real (Suc N - M) * (a N + ln (real N / real M)) / real N", "have \"(\\<Sum>i = M..N. a i / i) \\<le> (real (Suc N) - real M) * (a N + ln (N / M)) / N\""], ["proof (prove)\nusing this:\n  (\\<Sum>i = M..N. a i / real i)\n  \\<le> real (Suc N - M) * (a N + ln (real N / real M)) / real N\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = M..N. a i / real i)\n    \\<le> (real (Suc N) - real M) * (a N + ln (real N / real M)) / real N", "using \\<open>M < N\\<close>"], ["proof (prove)\nusing this:\n  (\\<Sum>i = M..N. a i / real i)\n  \\<le> real (Suc N - M) * (a N + ln (real N / real M)) / real N\n  M < N\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = M..N. a i / real i)\n    \\<le> (real (Suc N) - real M) * (a N + ln (real N / real M)) / real N", "by (simp add: of_nat_diff)"], ["proof (state)\nthis:\n  (\\<Sum>i = M..N. a i / real i)\n  \\<le> (real (Suc N) - real M) * (a N + ln (real N / real M)) / real N\n\ngoal (1 subgoal):\n 1. 0 \\<le> - a N - ln (real N / real M) \\<Longrightarrow>\n    - a N - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>i = M..N. a i / real i)\n  \\<le> (real (Suc N) - real M) * (a N + ln (real N / real M)) / real N", "have \"-((real (Suc N) - real M) * (a N + ln (N / M)) / N) \\<le> \\<bar>\\<Sum>i = M..N. a i / i\\<bar>\""], ["proof (prove)\nusing this:\n  (\\<Sum>i = M..N. a i / real i)\n  \\<le> (real (Suc N) - real M) * (a N + ln (real N / real M)) / real N\n\ngoal (1 subgoal):\n 1. - ((real (Suc N) - real M) * (a N + ln (real N / real M)) / real N)\n    \\<le> \\<bar>\\<Sum>i = M..N. a i / real i\\<bar>", "by linarith"], ["proof (state)\nthis:\n  - ((real (Suc N) - real M) * (a N + ln (real N / real M)) / real N)\n  \\<le> \\<bar>\\<Sum>i = M..N. a i / real i\\<bar>\n\ngoal (1 subgoal):\n 1. 0 \\<le> - a N - ln (real N / real M) \\<Longrightarrow>\n    - a N - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "also"], ["proof (state)\nthis:\n  - ((real (Suc N) - real M) * (a N + ln (real N / real M)) / real N)\n  \\<le> \\<bar>\\<Sum>i = M..N. a i / real i\\<bar>\n\ngoal (1 subgoal):\n 1. 0 \\<le> - a N - ln (real N / real M) \\<Longrightarrow>\n    - a N - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "have \"\\<dots> \\<le> d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>i = M..N. a i / real i\\<bar> \\<le> d", "using d"], ["proof (prove)\nusing this:\n  \\<bar>\\<Sum>i = M..N. a i / real i\\<bar> < d\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>i = M..N. a i / real i\\<bar> \\<le> d", "by simp"], ["proof (state)\nthis:\n  \\<bar>\\<Sum>i = M..N. a i / real i\\<bar> \\<le> d\n\ngoal (1 subgoal):\n 1. 0 \\<le> - a N - ln (real N / real M) \\<Longrightarrow>\n    - a N - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "finally"], ["proof (chain)\npicking this:\n  - ((real (Suc N) - real M) * (a N + ln (real N / real M)) / real N)\n  \\<le> d", "have \"- ((real (Suc N) - real M) * (a N + ln (N / M)) / N) \\<le> d\""], ["proof (prove)\nusing this:\n  - ((real (Suc N) - real M) * (a N + ln (real N / real M)) / real N)\n  \\<le> d\n\ngoal (1 subgoal):\n 1. - ((real (Suc N) - real M) * (a N + ln (real N / real M)) / real N)\n    \\<le> d", "."], ["proof (state)\nthis:\n  - ((real (Suc N) - real M) * (a N + ln (real N / real M)) / real N)\n  \\<le> d\n\ngoal (1 subgoal):\n 1. 0 \\<le> - a N - ln (real N / real M) \\<Longrightarrow>\n    - a N - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "then"], ["proof (chain)\npicking this:\n  - ((real (Suc N) - real M) * (a N + ln (real N / real M)) / real N)\n  \\<le> d", "show ?thesis"], ["proof (prove)\nusing this:\n  - ((real (Suc N) - real M) * (a N + ln (real N / real M)) / real N)\n  \\<le> d\n\ngoal (1 subgoal):\n 1. - a N - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "using \\<open>M < N\\<close>"], ["proof (prove)\nusing this:\n  - ((real (Suc N) - real M) * (a N + ln (real N / real M)) / real N)\n  \\<le> d\n  M < N\n\ngoal (1 subgoal):\n 1. - a N - ln (real N / real M) \\<le> d * real N / real (N - M + 1)", "by (simp add: of_nat_diff field_simps)"], ["proof (state)\nthis:\n  - a N - ln (real N / real M) \\<le> d * real N / real (N - M + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  - a N - ln (real N / real M) \\<le> d * real N / real (N - M + 1)\n\ngoal (1 subgoal):\n 1. - a N \\<le> d * real N / real (N - M) + ln (real N / real M)", "also"], ["proof (state)\nthis:\n  - a N - ln (real N / real M) \\<le> d * real N / real (N - M + 1)\n\ngoal (1 subgoal):\n 1. - a N \\<le> d * real N / real (N - M) + ln (real N / real M)", "have \"\\<dots> \\<le> d * N / real (N - M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d * real N / real (N - M + 1) \\<le> d * real N / real (N - M)", "using \\<open>0 < M\\<close> \\<open>M < N\\<close> \\<open>0 \\<le> d\\<close>"], ["proof (prove)\nusing this:\n  0 < M\n  M < N\n  0 \\<le> d\n\ngoal (1 subgoal):\n 1. d * real N / real (N - M + 1) \\<le> d * real N / real (N - M)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  d * real N / real (N - M + 1) \\<le> d * real N / real (N - M)\n\ngoal (1 subgoal):\n 1. - a N \\<le> d * real N / real (N - M) + ln (real N / real M)", "finally"], ["proof (chain)\npicking this:\n  - a N - ln (real N / real M) \\<le> d * real N / real (N - M)", "show \"-a N \\<le> d * N / real (N - M) + ln (N / M)\""], ["proof (prove)\nusing this:\n  - a N - ln (real N / real M) \\<le> d * real N / real (N - M)\n\ngoal (1 subgoal):\n 1. - a N \\<le> d * real N / real (N - M) + ln (real N / real M)", "by simp"], ["proof (state)\nthis:\n  - a N \\<le> d * real N / real (N - M) + ln (real N / real M)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a M\n  \\<le> d * real N / (real N - real M) + (real N - real M) / real M \\<and>\n  - a N \\<le> d * real N / (real N - real M) + (real N - real M) / real M\n\ngoal:\nNo subgoals!", "qed"], ["", "proposition sum_goestozero_theorem:\n  assumes summ: \"summable (\\<lambda>i. a i / i)\"\n      and le:   \"\\<And>n. a n + ln n \\<le> a (Suc n) + ln (Suc n)\"\n    shows \"a \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<longlonglongrightarrow> 0", "proof (clarsimp simp: lim_sequentially)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no. \\<forall>n\\<ge>no. \\<bar>a n\\<bar> < r", "fix r::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no. \\<forall>n\\<ge>no. \\<bar>a n\\<bar> < r", "assume \"r > 0\""], ["proof (state)\nthis:\n  0 < r\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no. \\<forall>n\\<ge>no. \\<bar>a n\\<bar> < r", "have *: \"\\<exists>n0. \\<forall>n\\<ge>n0. \\<bar>a n\\<bar> < \\<epsilon>\" if \\<epsilon>: \"0 < \\<epsilon>\" \"\\<epsilon> < 1\" for \\<epsilon>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n0. \\<forall>n\\<ge>n0. \\<bar>a n\\<bar> < \\<epsilon>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n0. \\<forall>n\\<ge>n0. \\<bar>a n\\<bar> < \\<epsilon>", "have \"0 < (\\<epsilon> / 8)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (\\<epsilon> / 8)\\<^sup>2", "using \\<open>0 < \\<epsilon>\\<close>"], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. 0 < (\\<epsilon> / 8)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 < (\\<epsilon> / 8)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<exists>n0. \\<forall>n\\<ge>n0. \\<bar>a n\\<bar> < \\<epsilon>", "then"], ["proof (chain)\npicking this:\n  0 < (\\<epsilon> / 8)\\<^sup>2", "obtain N0 where N0: \"\\<And>m n. m \\<ge> N0 \\<Longrightarrow> norm (\\<Sum>k=m..n. (\\<lambda>i. a i / i) k) < (\\<epsilon> / 8)\\<^sup>2\""], ["proof (prove)\nusing this:\n  0 < (\\<epsilon> / 8)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<And>N0.\n        (\\<And>m n.\n            N0 \\<le> m \\<Longrightarrow>\n            norm (\\<Sum>k = m..n. a k / real k)\n            < (\\<epsilon> / 8)\\<^sup>2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis summable_partial_sum_bound summ)"], ["proof (state)\nthis:\n  N0 \\<le> ?m \\<Longrightarrow>\n  norm (\\<Sum>k = ?m..?n. a k / real k) < (\\<epsilon> / 8)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<exists>n0. \\<forall>n\\<ge>n0. \\<bar>a n\\<bar> < \\<epsilon>", "obtain N1 where \"real N1 > 4 / \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N1.\n        4 / \\<epsilon> < real N1 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using reals_Archimedean2[of \"4 / \\<epsilon>\"] \\<epsilon>"], ["proof (prove)\nusing this:\n  \\<exists>n. 4 / \\<epsilon> < real n\n  0 < \\<epsilon>\n  \\<epsilon> < 1\n\ngoal (1 subgoal):\n 1. (\\<And>N1.\n        4 / \\<epsilon> < real N1 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  4 / \\<epsilon> < real N1\n\ngoal (1 subgoal):\n 1. \\<exists>n0. \\<forall>n\\<ge>n0. \\<bar>a n\\<bar> < \\<epsilon>", "hence \"N1 \\<noteq> 0\" and N1: \"1 / real N1 < \\<epsilon> / 4\""], ["proof (prove)\nusing this:\n  4 / \\<epsilon> < real N1\n\ngoal (1 subgoal):\n 1. N1 \\<noteq> 0 &&& 1 / real N1 < \\<epsilon> / 4", "using \\<epsilon>"], ["proof (prove)\nusing this:\n  4 / \\<epsilon> < real N1\n  0 < \\<epsilon>\n  \\<epsilon> < 1\n\ngoal (1 subgoal):\n 1. N1 \\<noteq> 0 &&& 1 / real N1 < \\<epsilon> / 4", "by (auto simp: divide_simps mult_ac intro: Nat.gr0I)"], ["proof (state)\nthis:\n  N1 \\<noteq> 0\n  1 / real N1 < \\<epsilon> / 4\n\ngoal (1 subgoal):\n 1. \\<exists>n0. \\<forall>n\\<ge>n0. \\<bar>a n\\<bar> < \\<epsilon>", "have \"\\<bar>a n\\<bar> < \\<epsilon>\" if n: \"n \\<ge> 2 * N0 + N1 + 7\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>a n\\<bar> < \\<epsilon>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>a n\\<bar> < \\<epsilon>", "define k where \"k = \\<lfloor>n * \\<epsilon>/4\\<rfloor>\""], ["proof (state)\nthis:\n  k = \\<lfloor>real n * \\<epsilon> / 4\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<bar>a n\\<bar> < \\<epsilon>", "have \"n * \\<epsilon> / 4 > 1\" and \"n * \\<epsilon> / 4 \\<le> n / 4\" and \"n / 4 < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < real n * \\<epsilon> / 4 &&&\n    real n * \\<epsilon> / 4 \\<le> real n / 4 &&& real n / 4 < real n", "using less_le_trans[OF N1, of \"n / N1 * \\<epsilon> / 4\"] \\<open>N1 \\<noteq> 0\\<close> \\<epsilon> n"], ["proof (prove)\nusing this:\n  \\<epsilon> / 4 \\<le> real n / real N1 * \\<epsilon> / 4 \\<Longrightarrow>\n  1 / real N1 < real n / real N1 * \\<epsilon> / 4\n  N1 \\<noteq> 0\n  0 < \\<epsilon>\n  \\<epsilon> < 1\n  2 * N0 + N1 + 7 \\<le> n\n\ngoal (1 subgoal):\n 1. 1 < real n * \\<epsilon> / 4 &&&\n    real n * \\<epsilon> / 4 \\<le> real n / 4 &&& real n / 4 < real n", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  1 < real n * \\<epsilon> / 4\n  real n * \\<epsilon> / 4 \\<le> real n / 4\n  real n / 4 < real n\n\ngoal (1 subgoal):\n 1. \\<bar>a n\\<bar> < \\<epsilon>", "hence k: \"k > 0\" \"4 * k \\<le> n\" \"nat k < n\" \"(n * \\<epsilon> / 4) - 1 < k\" \"k \\<le> (n * \\<epsilon> / 4)\""], ["proof (prove)\nusing this:\n  1 < real n * \\<epsilon> / 4\n  real n * \\<epsilon> / 4 \\<le> real n / 4\n  real n / 4 < real n\n\ngoal (1 subgoal):\n 1. (0 < k &&& 4 * k \\<le> int n) &&&\n    nat k < n &&&\n    real n * \\<epsilon> / 4 - 1 < real_of_int k &&&\n    real_of_int k \\<le> real n * \\<epsilon> / 4", "unfolding k_def"], ["proof (prove)\nusing this:\n  1 < real n * \\<epsilon> / 4\n  real n * \\<epsilon> / 4 \\<le> real n / 4\n  real n / 4 < real n\n\ngoal (1 subgoal):\n 1. (0 < \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> &&&\n     4 * \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> \\<le> int n) &&&\n    nat \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> < n &&&\n    real n * \\<epsilon> / 4 - 1\n    < real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> &&&\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor>\n    \\<le> real n * \\<epsilon> / 4", "by linarith+"], ["proof (state)\nthis:\n  0 < k\n  4 * k \\<le> int n\n  nat k < n\n  real n * \\<epsilon> / 4 - 1 < real_of_int k\n  real_of_int k \\<le> real n * \\<epsilon> / 4\n\ngoal (1 subgoal):\n 1. \\<bar>a n\\<bar> < \\<epsilon>", "have \"-a n < \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - a n < \\<epsilon>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. - a n < \\<epsilon>", "have \"N0 \\<le> n - nat k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N0 \\<le> n - nat k", "using n k"], ["proof (prove)\nusing this:\n  2 * N0 + N1 + 7 \\<le> n\n  0 < k\n  4 * k \\<le> int n\n  nat k < n\n  real n * \\<epsilon> / 4 - 1 < real_of_int k\n  real_of_int k \\<le> real n * \\<epsilon> / 4\n\ngoal (1 subgoal):\n 1. N0 \\<le> n - nat k", "by linarith"], ["proof (state)\nthis:\n  N0 \\<le> n - nat k\n\ngoal (1 subgoal):\n 1. - a n < \\<epsilon>", "then"], ["proof (chain)\npicking this:\n  N0 \\<le> n - nat k", "have *: \"\\<bar>\\<Sum>k = n - nat k .. n. a k / k\\<bar> < (\\<epsilon> / 8)\\<^sup>2\""], ["proof (prove)\nusing this:\n  N0 \\<le> n - nat k\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>k = n - nat k..n. a k / real k\\<bar>\n    < (\\<epsilon> / 8)\\<^sup>2", "using N0 [of \"n - nat k\" n]"], ["proof (prove)\nusing this:\n  N0 \\<le> n - nat k\n  N0 \\<le> n - nat k \\<Longrightarrow>\n  norm (\\<Sum>k = n - nat k..n. a k / real k) < (\\<epsilon> / 8)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>k = n - nat k..n. a k / real k\\<bar>\n    < (\\<epsilon> / 8)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  \\<bar>\\<Sum>k = n - nat k..n. a k / real k\\<bar>\n  < (\\<epsilon> / 8)\\<^sup>2\n\ngoal (1 subgoal):\n 1. - a n < \\<epsilon>", "have \"-a n \\<le> (\\<epsilon> / 8)\\<^sup>2 * n / \\<lfloor>n * \\<epsilon> / 4\\<rfloor> + \\<lfloor>n * \\<epsilon> / 4\\<rfloor> / (n - k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - a n\n    \\<le> (\\<epsilon> / 8)\\<^sup>2 * real n /\n          real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> +\n          real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> /\n          real_of_int (int n - k)", "using sum_goestozero_lemma [OF * le, THEN conjunct2] k"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < n - nat k; n - nat k < n\\<rbrakk>\n  \\<Longrightarrow> - a n\n                    \\<le> (\\<epsilon> / 8)\\<^sup>2 * real n /\n                          (real n - real (n - nat k)) +\n                          (real n - real (n - nat k)) / real (n - nat k)\n  0 < k\n  4 * k \\<le> int n\n  nat k < n\n  real n * \\<epsilon> / 4 - 1 < real_of_int k\n  real_of_int k \\<le> real n * \\<epsilon> / 4\n\ngoal (1 subgoal):\n 1. - a n\n    \\<le> (\\<epsilon> / 8)\\<^sup>2 * real n /\n          real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> +\n          real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> /\n          real_of_int (int n - k)", "by (simp add: of_nat_diff k_def)"], ["proof (state)\nthis:\n  - a n\n  \\<le> (\\<epsilon> / 8)\\<^sup>2 * real n /\n        real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> +\n        real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> /\n        real_of_int (int n - k)\n\ngoal (1 subgoal):\n 1. - a n < \\<epsilon>", "also"], ["proof (state)\nthis:\n  - a n\n  \\<le> (\\<epsilon> / 8)\\<^sup>2 * real n /\n        real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> +\n        real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> /\n        real_of_int (int n - k)\n\ngoal (1 subgoal):\n 1. - a n < \\<epsilon>", "have \"\\<dots>< \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real n /\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> +\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> /\n    real_of_int (int n - k)\n    < \\<epsilon>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real n /\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> +\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> /\n    real_of_int (int n - k)\n    < \\<epsilon>", "have \"\\<epsilon> / 16 * n / k < 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon> / 16 * real n / real_of_int k < 2", "using k"], ["proof (prove)\nusing this:\n  0 < k\n  4 * k \\<le> int n\n  nat k < n\n  real n * \\<epsilon> / 4 - 1 < real_of_int k\n  real_of_int k \\<le> real n * \\<epsilon> / 4\n\ngoal (1 subgoal):\n 1. \\<epsilon> / 16 * real n / real_of_int k < 2", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  \\<epsilon> / 16 * real n / real_of_int k < 2\n\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real n /\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> +\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> /\n    real_of_int (int n - k)\n    < \\<epsilon>", "then"], ["proof (chain)\npicking this:\n  \\<epsilon> / 16 * real n / real_of_int k < 2", "have \"\\<epsilon> * (\\<epsilon> / 16 * n / k) < \\<epsilon> * 2\""], ["proof (prove)\nusing this:\n  \\<epsilon> / 16 * real n / real_of_int k < 2\n\ngoal (1 subgoal):\n 1. \\<epsilon> * (\\<epsilon> / 16 * real n / real_of_int k) < \\<epsilon> * 2", "using \\<epsilon> mult_less_cancel_left_pos"], ["proof (prove)\nusing this:\n  \\<epsilon> / 16 * real n / real_of_int k < 2\n  0 < \\<epsilon>\n  \\<epsilon> < 1\n  (0::?'a) < ?c \\<Longrightarrow> (?c * ?a < ?c * ?b) = (?a < ?b)\n\ngoal (1 subgoal):\n 1. \\<epsilon> * (\\<epsilon> / 16 * real n / real_of_int k) < \\<epsilon> * 2", "by blast"], ["proof (state)\nthis:\n  \\<epsilon> * (\\<epsilon> / 16 * real n / real_of_int k) < \\<epsilon> * 2\n\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real n /\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> +\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> /\n    real_of_int (int n - k)\n    < \\<epsilon>", "then"], ["proof (chain)\npicking this:\n  \\<epsilon> * (\\<epsilon> / 16 * real n / real_of_int k) < \\<epsilon> * 2", "have \"(\\<epsilon> / 8)\\<^sup>2 * n / k < \\<epsilon> / 2\""], ["proof (prove)\nusing this:\n  \\<epsilon> * (\\<epsilon> / 16 * real n / real_of_int k) < \\<epsilon> * 2\n\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real n / real_of_int k < \\<epsilon> / 2", "by (simp add: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  (\\<epsilon> / 8)\\<^sup>2 * real n / real_of_int k < \\<epsilon> / 2\n\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real n /\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> +\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> /\n    real_of_int (int n - k)\n    < \\<epsilon>", "moreover"], ["proof (state)\nthis:\n  (\\<epsilon> / 8)\\<^sup>2 * real n / real_of_int k < \\<epsilon> / 2\n\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real n /\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> +\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> /\n    real_of_int (int n - k)\n    < \\<epsilon>", "have \"k / (n - k) < \\<epsilon> / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int k / real_of_int (int n - k) < \\<epsilon> / 2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real_of_int k / real_of_int (int n - k) < \\<epsilon> / 2", "have \"(\\<epsilon> + 2) * k < 4 * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<epsilon> + 2) * real_of_int k < real_of_int (4 * k)", "using k \\<epsilon>"], ["proof (prove)\nusing this:\n  0 < k\n  4 * k \\<le> int n\n  nat k < n\n  real n * \\<epsilon> / 4 - 1 < real_of_int k\n  real_of_int k \\<le> real n * \\<epsilon> / 4\n  0 < \\<epsilon>\n  \\<epsilon> < 1\n\ngoal (1 subgoal):\n 1. (\\<epsilon> + 2) * real_of_int k < real_of_int (4 * k)", "by simp"], ["proof (state)\nthis:\n  (\\<epsilon> + 2) * real_of_int k < real_of_int (4 * k)\n\ngoal (1 subgoal):\n 1. real_of_int k / real_of_int (int n - k) < \\<epsilon> / 2", "also"], ["proof (state)\nthis:\n  (\\<epsilon> + 2) * real_of_int k < real_of_int (4 * k)\n\ngoal (1 subgoal):\n 1. real_of_int k / real_of_int (int n - k) < \\<epsilon> / 2", "have \"\\<dots> \\<le> \\<epsilon> * real n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (4 * k) \\<le> \\<epsilon> * real n", "using k"], ["proof (prove)\nusing this:\n  0 < k\n  4 * k \\<le> int n\n  nat k < n\n  real n * \\<epsilon> / 4 - 1 < real_of_int k\n  real_of_int k \\<le> real n * \\<epsilon> / 4\n\ngoal (1 subgoal):\n 1. real_of_int (4 * k) \\<le> \\<epsilon> * real n", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  real_of_int (4 * k) \\<le> \\<epsilon> * real n\n\ngoal (1 subgoal):\n 1. real_of_int k / real_of_int (int n - k) < \\<epsilon> / 2", "finally"], ["proof (chain)\npicking this:\n  (\\<epsilon> + 2) * real_of_int k < \\<epsilon> * real n", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<epsilon> + 2) * real_of_int k < \\<epsilon> * real n\n\ngoal (1 subgoal):\n 1. real_of_int k / real_of_int (int n - k) < \\<epsilon> / 2", "using k"], ["proof (prove)\nusing this:\n  (\\<epsilon> + 2) * real_of_int k < \\<epsilon> * real n\n  0 < k\n  4 * k \\<le> int n\n  nat k < n\n  real n * \\<epsilon> / 4 - 1 < real_of_int k\n  real_of_int k \\<le> real n * \\<epsilon> / 4\n\ngoal (1 subgoal):\n 1. real_of_int k / real_of_int (int n - k) < \\<epsilon> / 2", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  real_of_int k / real_of_int (int n - k) < \\<epsilon> / 2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real_of_int k / real_of_int (int n - k) < \\<epsilon> / 2\n\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real n /\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> +\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> /\n    real_of_int (int n - k)\n    < \\<epsilon>", "ultimately"], ["proof (chain)\npicking this:\n  (\\<epsilon> / 8)\\<^sup>2 * real n / real_of_int k < \\<epsilon> / 2\n  real_of_int k / real_of_int (int n - k) < \\<epsilon> / 2", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<epsilon> / 8)\\<^sup>2 * real n / real_of_int k < \\<epsilon> / 2\n  real_of_int k / real_of_int (int n - k) < \\<epsilon> / 2\n\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real n /\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> +\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> /\n    real_of_int (int n - k)\n    < \\<epsilon>", "unfolding k_def"], ["proof (prove)\nusing this:\n  (\\<epsilon> / 8)\\<^sup>2 * real n /\n  real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor>\n  < \\<epsilon> / 2\n  real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> /\n  real_of_int (int n - \\<lfloor>real n * \\<epsilon> / 4\\<rfloor>)\n  < \\<epsilon> / 2\n\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real n /\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> +\n    real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> /\n    real_of_int (int n - \\<lfloor>real n * \\<epsilon> / 4\\<rfloor>)\n    < \\<epsilon>", "by linarith"], ["proof (state)\nthis:\n  (\\<epsilon> / 8)\\<^sup>2 * real n /\n  real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> +\n  real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> /\n  real_of_int (int n - k)\n  < \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<epsilon> / 8)\\<^sup>2 * real n /\n  real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> +\n  real_of_int \\<lfloor>real n * \\<epsilon> / 4\\<rfloor> /\n  real_of_int (int n - k)\n  < \\<epsilon>\n\ngoal (1 subgoal):\n 1. - a n < \\<epsilon>", "finally"], ["proof (chain)\npicking this:\n  - a n < \\<epsilon>", "show ?thesis"], ["proof (prove)\nusing this:\n  - a n < \\<epsilon>\n\ngoal (1 subgoal):\n 1. - a n < \\<epsilon>", "."], ["proof (state)\nthis:\n  - a n < \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  - a n < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<bar>a n\\<bar> < \\<epsilon>", "moreover"], ["proof (state)\nthis:\n  - a n < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<bar>a n\\<bar> < \\<epsilon>", "have \"a n < \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a n < \\<epsilon>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a n < \\<epsilon>", "have \"N0 \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N0 \\<le> n", "using n k"], ["proof (prove)\nusing this:\n  2 * N0 + N1 + 7 \\<le> n\n  0 < k\n  4 * k \\<le> int n\n  nat k < n\n  real n * \\<epsilon> / 4 - 1 < real_of_int k\n  real_of_int k \\<le> real n * \\<epsilon> / 4\n\ngoal (1 subgoal):\n 1. N0 \\<le> n", "by linarith"], ["proof (state)\nthis:\n  N0 \\<le> n\n\ngoal (1 subgoal):\n 1. a n < \\<epsilon>", "then"], ["proof (chain)\npicking this:\n  N0 \\<le> n", "have *: \"\\<bar>\\<Sum>k = n .. n + nat k. a k / k\\<bar> < (\\<epsilon>/8)\\<^sup>2\""], ["proof (prove)\nusing this:\n  N0 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>k = n..n + nat k. a k / real k\\<bar>\n    < (\\<epsilon> / 8)\\<^sup>2", "using N0 [of n \"n + nat k\"]"], ["proof (prove)\nusing this:\n  N0 \\<le> n\n  N0 \\<le> n \\<Longrightarrow>\n  norm (\\<Sum>k = n..n + nat k. a k / real k) < (\\<epsilon> / 8)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Sum>k = n..n + nat k. a k / real k\\<bar>\n    < (\\<epsilon> / 8)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  \\<bar>\\<Sum>k = n..n + nat k. a k / real k\\<bar>\n  < (\\<epsilon> / 8)\\<^sup>2\n\ngoal (1 subgoal):\n 1. a n < \\<epsilon>", "have \"a n \\<le> (\\<epsilon>/8)\\<^sup>2 * (n + nat k) / k + k / n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a n\n    \\<le> (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k +\n          real_of_int k / real n", "using sum_goestozero_lemma [OF * le, THEN conjunct1] k"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < n; n < n + nat k\\<rbrakk>\n  \\<Longrightarrow> a n\n                    \\<le> (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) /\n                          (real (n + nat k) - real n) +\n                          (real (n + nat k) - real n) / real n\n  0 < k\n  4 * k \\<le> int n\n  nat k < n\n  real n * \\<epsilon> / 4 - 1 < real_of_int k\n  real_of_int k \\<le> real n * \\<epsilon> / 4\n\ngoal (1 subgoal):\n 1. a n\n    \\<le> (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k +\n          real_of_int k / real n", "by (simp add: of_nat_diff)"], ["proof (state)\nthis:\n  a n\n  \\<le> (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k +\n        real_of_int k / real n\n\ngoal (1 subgoal):\n 1. a n < \\<epsilon>", "also"], ["proof (state)\nthis:\n  a n\n  \\<le> (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k +\n        real_of_int k / real n\n\ngoal (1 subgoal):\n 1. a n < \\<epsilon>", "have \"\\<dots>< \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k +\n    real_of_int k / real n\n    < \\<epsilon>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k +\n    real_of_int k / real n\n    < \\<epsilon>", "have \"4 \\<le> 28 * real_of_int k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 \\<le> 28 * real_of_int k", "using k"], ["proof (prove)\nusing this:\n  0 < k\n  4 * k \\<le> int n\n  nat k < n\n  real n * \\<epsilon> / 4 - 1 < real_of_int k\n  real_of_int k \\<le> real n * \\<epsilon> / 4\n\ngoal (1 subgoal):\n 1. 4 \\<le> 28 * real_of_int k", "by linarith"], ["proof (state)\nthis:\n  4 \\<le> 28 * real_of_int k\n\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k +\n    real_of_int k / real n\n    < \\<epsilon>", "then"], ["proof (chain)\npicking this:\n  4 \\<le> 28 * real_of_int k", "have \"\\<epsilon>/16 * n / k < 2\""], ["proof (prove)\nusing this:\n  4 \\<le> 28 * real_of_int k\n\ngoal (1 subgoal):\n 1. \\<epsilon> / 16 * real n / real_of_int k < 2", "using k"], ["proof (prove)\nusing this:\n  4 \\<le> 28 * real_of_int k\n  0 < k\n  4 * k \\<le> int n\n  nat k < n\n  real n * \\<epsilon> / 4 - 1 < real_of_int k\n  real_of_int k \\<le> real n * \\<epsilon> / 4\n\ngoal (1 subgoal):\n 1. \\<epsilon> / 16 * real n / real_of_int k < 2", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  \\<epsilon> / 16 * real n / real_of_int k < 2\n\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k +\n    real_of_int k / real n\n    < \\<epsilon>", "have \"\\<epsilon> * (real n + k) < 32 * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon> * (real n + real_of_int k) < real_of_int (32 * k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<epsilon> * (real n + real_of_int k) < real_of_int (32 * k)", "have \"\\<epsilon> * n / 4 < k + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon> * real n / 4 < real_of_int (k + 1)", "by (simp add: mult.commute k_def)"], ["proof (state)\nthis:\n  \\<epsilon> * real n / 4 < real_of_int (k + 1)\n\ngoal (1 subgoal):\n 1. \\<epsilon> * (real n + real_of_int k) < real_of_int (32 * k)", "then"], ["proof (chain)\npicking this:\n  \\<epsilon> * real n / 4 < real_of_int (k + 1)", "have \"\\<epsilon> * n < 4 * k + 4\""], ["proof (prove)\nusing this:\n  \\<epsilon> * real n / 4 < real_of_int (k + 1)\n\ngoal (1 subgoal):\n 1. \\<epsilon> * real n < real_of_int (4 * k + 4)", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  \\<epsilon> * real n < real_of_int (4 * k + 4)\n\ngoal (1 subgoal):\n 1. \\<epsilon> * (real n + real_of_int k) < real_of_int (32 * k)", "also"], ["proof (state)\nthis:\n  \\<epsilon> * real n < real_of_int (4 * k + 4)\n\ngoal (1 subgoal):\n 1. \\<epsilon> * (real n + real_of_int k) < real_of_int (32 * k)", "have \"\\<dots> \\<le> 8 * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (4 * k + 4) \\<le> real_of_int (8 * k)", "using k"], ["proof (prove)\nusing this:\n  0 < k\n  4 * k \\<le> int n\n  nat k < n\n  real n * \\<epsilon> / 4 - 1 < real_of_int k\n  real_of_int k \\<le> real n * \\<epsilon> / 4\n\ngoal (1 subgoal):\n 1. real_of_int (4 * k + 4) \\<le> real_of_int (8 * k)", "by auto"], ["proof (state)\nthis:\n  real_of_int (4 * k + 4) \\<le> real_of_int (8 * k)\n\ngoal (1 subgoal):\n 1. \\<epsilon> * (real n + real_of_int k) < real_of_int (32 * k)", "finally"], ["proof (chain)\npicking this:\n  \\<epsilon> * real n < real_of_int (8 * k)", "have 1: \"\\<epsilon> * real n < 8 * k\""], ["proof (prove)\nusing this:\n  \\<epsilon> * real n < real_of_int (8 * k)\n\ngoal (1 subgoal):\n 1. \\<epsilon> * real n < real_of_int (8 * k)", "."], ["proof (state)\nthis:\n  \\<epsilon> * real n < real_of_int (8 * k)\n\ngoal (1 subgoal):\n 1. \\<epsilon> * (real n + real_of_int k) < real_of_int (32 * k)", "have 2: \"\\<epsilon> * k < k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon> * real_of_int k < real_of_int k", "using k \\<epsilon>"], ["proof (prove)\nusing this:\n  0 < k\n  4 * k \\<le> int n\n  nat k < n\n  real n * \\<epsilon> / 4 - 1 < real_of_int k\n  real_of_int k \\<le> real n * \\<epsilon> / 4\n  0 < \\<epsilon>\n  \\<epsilon> < 1\n\ngoal (1 subgoal):\n 1. \\<epsilon> * real_of_int k < real_of_int k", "by simp"], ["proof (state)\nthis:\n  \\<epsilon> * real_of_int k < real_of_int k\n\ngoal (1 subgoal):\n 1. \\<epsilon> * (real n + real_of_int k) < real_of_int (32 * k)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon> * (real n + real_of_int k) < real_of_int (32 * k)", "using k add_strict_mono [OF 1 2]"], ["proof (prove)\nusing this:\n  0 < k\n  4 * k \\<le> int n\n  nat k < n\n  real n * \\<epsilon> / 4 - 1 < real_of_int k\n  real_of_int k \\<le> real n * \\<epsilon> / 4\n  \\<epsilon> * real n + \\<epsilon> * real_of_int k\n  < real_of_int (8 * k) + real_of_int k\n\ngoal (1 subgoal):\n 1. \\<epsilon> * (real n + real_of_int k) < real_of_int (32 * k)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  \\<epsilon> * (real n + real_of_int k) < real_of_int (32 * k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<epsilon> * (real n + real_of_int k) < real_of_int (32 * k)\n\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k +\n    real_of_int k / real n\n    < \\<epsilon>", "then"], ["proof (chain)\npicking this:\n  \\<epsilon> * (real n + real_of_int k) < real_of_int (32 * k)", "have \"(\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / k < \\<epsilon> / 2\""], ["proof (prove)\nusing this:\n  \\<epsilon> * (real n + real_of_int k) < real_of_int (32 * k)\n\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k\n    < \\<epsilon> / 2", "using \\<epsilon> k"], ["proof (prove)\nusing this:\n  \\<epsilon> * (real n + real_of_int k) < real_of_int (32 * k)\n  0 < \\<epsilon>\n  \\<epsilon> < 1\n  0 < k\n  4 * k \\<le> int n\n  nat k < n\n  real n * \\<epsilon> / 4 - 1 < real_of_int k\n  real_of_int k \\<le> real n * \\<epsilon> / 4\n\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k\n    < \\<epsilon> / 2", "by (simp add: divide_simps mult_less_0_iff power2_eq_square)"], ["proof (state)\nthis:\n  (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k\n  < \\<epsilon> / 2\n\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k +\n    real_of_int k / real n\n    < \\<epsilon>", "moreover"], ["proof (state)\nthis:\n  (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k\n  < \\<epsilon> / 2\n\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k +\n    real_of_int k / real n\n    < \\<epsilon>", "have \"k / n < \\<epsilon> / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int k / real n < \\<epsilon> / 2", "using k \\<epsilon>"], ["proof (prove)\nusing this:\n  0 < k\n  4 * k \\<le> int n\n  nat k < n\n  real n * \\<epsilon> / 4 - 1 < real_of_int k\n  real_of_int k \\<le> real n * \\<epsilon> / 4\n  0 < \\<epsilon>\n  \\<epsilon> < 1\n\ngoal (1 subgoal):\n 1. real_of_int k / real n < \\<epsilon> / 2", "by (auto simp: k_def field_simps)"], ["proof (state)\nthis:\n  real_of_int k / real n < \\<epsilon> / 2\n\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k +\n    real_of_int k / real n\n    < \\<epsilon>", "ultimately"], ["proof (chain)\npicking this:\n  (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k\n  < \\<epsilon> / 2\n  real_of_int k / real n < \\<epsilon> / 2", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k\n  < \\<epsilon> / 2\n  real_of_int k / real n < \\<epsilon> / 2\n\ngoal (1 subgoal):\n 1. (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k +\n    real_of_int k / real n\n    < \\<epsilon>", "by linarith"], ["proof (state)\nthis:\n  (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k +\n  real_of_int k / real n\n  < \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<epsilon> / 8)\\<^sup>2 * real (n + nat k) / real_of_int k +\n  real_of_int k / real n\n  < \\<epsilon>\n\ngoal (1 subgoal):\n 1. a n < \\<epsilon>", "finally"], ["proof (chain)\npicking this:\n  a n < \\<epsilon>", "show ?thesis"], ["proof (prove)\nusing this:\n  a n < \\<epsilon>\n\ngoal (1 subgoal):\n 1. a n < \\<epsilon>", "."], ["proof (state)\nthis:\n  a n < \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a n < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<bar>a n\\<bar> < \\<epsilon>", "ultimately"], ["proof (chain)\npicking this:\n  - a n < \\<epsilon>\n  a n < \\<epsilon>", "show ?thesis"], ["proof (prove)\nusing this:\n  - a n < \\<epsilon>\n  a n < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<bar>a n\\<bar> < \\<epsilon>", "by force"], ["proof (state)\nthis:\n  \\<bar>a n\\<bar> < \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 * N0 + N1 + 7 \\<le> ?n \\<Longrightarrow> \\<bar>a ?n\\<bar> < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>n0. \\<forall>n\\<ge>n0. \\<bar>a n\\<bar> < \\<epsilon>", "then"], ["proof (chain)\npicking this:\n  2 * N0 + N1 + 7 \\<le> ?n \\<Longrightarrow> \\<bar>a ?n\\<bar> < \\<epsilon>", "show ?thesis"], ["proof (prove)\nusing this:\n  2 * N0 + N1 + 7 \\<le> ?n \\<Longrightarrow> \\<bar>a ?n\\<bar> < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>n0. \\<forall>n\\<ge>n0. \\<bar>a n\\<bar> < \\<epsilon>", "by blast"], ["proof (state)\nthis:\n  \\<exists>n0. \\<forall>n\\<ge>n0. \\<bar>a n\\<bar> < \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>0 < ?\\<epsilon>; ?\\<epsilon> < 1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n0.\n                       \\<forall>n\\<ge>n0. \\<bar>a n\\<bar> < ?\\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no. \\<forall>n\\<ge>no. \\<bar>a n\\<bar> < r", "show \"\\<exists>n0. \\<forall>n\\<ge>n0. \\<bar>a n\\<bar> < r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n0. \\<forall>n\\<ge>n0. \\<bar>a n\\<bar> < r", "using * [of \"min r (1/5)\"] \\<open>0 < r\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < min r (1 / 5); min r (1 / 5) < 1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n0.\n                       \\<forall>n\\<ge>n0. \\<bar>a n\\<bar> < min r (1 / 5)\n  0 < r\n\ngoal (1 subgoal):\n 1. \\<exists>n0. \\<forall>n\\<ge>n0. \\<bar>a n\\<bar> < r", "by force"], ["proof (state)\nthis:\n  \\<exists>n0. \\<forall>n\\<ge>n0. \\<bar>a n\\<bar> < r\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  This leads us to the main intermediate result:\n\\<close>"], ["", "lemma Mertens_convergent: \"convergent (\\<lambda>n::nat. \\<MM> n - ln n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. convergent (\\<lambda>x. \\<MM> (real x) - ln (real x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. convergent (\\<lambda>x. \\<MM> (real x) - ln (real x))", "obtain c where c: \"summable (\\<lambda>n. (\\<MM> n - ln n + c) / n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        summable\n         (\\<lambda>x.\n             (\\<MM> (real x) - ln (real x) + c) / real x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (blast intro: mertens_summable)"], ["proof (state)\nthis:\n  summable (\\<lambda>x. (\\<MM> (real x) - ln (real x) + c) / real x)\n\ngoal (1 subgoal):\n 1. convergent (\\<lambda>x. \\<MM> (real x) - ln (real x))", "then"], ["proof (chain)\npicking this:\n  summable (\\<lambda>x. (\\<MM> (real x) - ln (real x) + c) / real x)", "obtain l where l: \"(\\<lambda>n. (\\<MM> n - ln n + c) / n) sums l\""], ["proof (prove)\nusing this:\n  summable (\\<lambda>x. (\\<MM> (real x) - ln (real x) + c) / real x)\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        (\\<lambda>x. (\\<MM> (real x) - ln (real x) + c) / real x) sums\n        l \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: summable_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. (\\<MM> (real x) - ln (real x) + c) / real x) sums l\n\ngoal (1 subgoal):\n 1. convergent (\\<lambda>x. \\<MM> (real x) - ln (real x))", "have *: \"(\\<lambda>n. \\<MM> n - ln n + c) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<MM> (real x) - ln (real x) + c)\n    \\<longlonglongrightarrow> 0", "by (rule sum_goestozero_theorem[OF c]) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<MM> (real x) - ln (real x) + c) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. convergent (\\<lambda>x. \\<MM> (real x) - ln (real x))", "hence \"(\\<lambda>n. \\<MM> n - ln n) \\<longlonglongrightarrow> -c\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<MM> (real x) - ln (real x) + c) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<MM> (real x) - ln (real x)) \\<longlonglongrightarrow> - c", "by (simp add: tendsto_iff dist_norm)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<MM> (real x) - ln (real x)) \\<longlonglongrightarrow> - c\n\ngoal (1 subgoal):\n 1. convergent (\\<lambda>x. \\<MM> (real x) - ln (real x))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<MM> (real x) - ln (real x)) \\<longlonglongrightarrow> - c\n\ngoal (1 subgoal):\n 1. convergent (\\<lambda>x. \\<MM> (real x) - ln (real x))", "by (rule convergentI)"], ["proof (state)\nthis:\n  convergent (\\<lambda>x. \\<MM> (real x) - ln (real x))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary \\<MM>_minus_ln_limit:\n  obtains c where \"((\\<lambda>x::real. \\<MM> x - ln x) \\<longlongrightarrow> c) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        ((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> c)\n         at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        ((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> c)\n         at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from Mertens_convergent"], ["proof (chain)\npicking this:\n  convergent (\\<lambda>x. \\<MM> (real x) - ln (real x))", "obtain c where \"(\\<lambda>n. \\<MM> n - ln n) \\<longlonglongrightarrow> c\""], ["proof (prove)\nusing this:\n  convergent (\\<lambda>x. \\<MM> (real x) - ln (real x))\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<lambda>x. \\<MM> (real x) - ln (real x))\n        \\<longlonglongrightarrow> c \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: convergent_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<MM> (real x) - ln (real x)) \\<longlonglongrightarrow> c\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        ((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> c)\n         at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "hence 1: \"((\\<lambda>x::real. \\<MM> (nat \\<lfloor>x\\<rfloor>) - ln (nat \\<lfloor>x\\<rfloor>)) \\<longlongrightarrow> c) at_top\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<MM> (real x) - ln (real x)) \\<longlonglongrightarrow> c\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<MM> (real (nat \\<lfloor>x\\<rfloor>)) -\n         ln (real (nat \\<lfloor>x\\<rfloor>))) \\<longlongrightarrow>\n     c)\n     at_top", "by (rule filterlim_compose) real_asymp"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       \\<MM> (real (nat \\<lfloor>x\\<rfloor>)) -\n       ln (real (nat \\<lfloor>x\\<rfloor>))) \\<longlongrightarrow>\n   c)\n   at_top\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        ((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> c)\n         at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have 2: \"((\\<lambda>x::real. ln (nat \\<lfloor>x\\<rfloor>) - ln x) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         ln (real (nat \\<lfloor>x\\<rfloor>)) - ln x) \\<longlongrightarrow>\n     0)\n     at_top", "by real_asymp"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       ln (real (nat \\<lfloor>x\\<rfloor>)) - ln x) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        ((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> c)\n         at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have 3: \"((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> c) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> c) at_top", "using tendsto_add[OF 1 2]"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       \\<MM> (real (nat \\<lfloor>x\\<rfloor>)) -\n       ln (real (nat \\<lfloor>x\\<rfloor>)) +\n       (ln (real (nat \\<lfloor>x\\<rfloor>)) - ln x)) \\<longlongrightarrow>\n   c + 0)\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> c) at_top", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> c) at_top\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        ((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> c)\n         at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "with that"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> ?c)\n   at_top \\<Longrightarrow>\n  thesis\n  ((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> c) at_top", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> ?c)\n   at_top \\<Longrightarrow>\n  thesis\n  ((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> c) at_top\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The asymptotics of the prime-counting functions\\<close>"], ["", "text \\<open>\n  We will now use the above result to prove the asymptotics of the prime-counting functions\n  $\\vartheta(x) \\sim x$, $\\psi(x) \\sim x$, and $\\pi(x) \\sim x / \\ln x$. The last of these is \n  typically called the Prime Number Theorem, but since these functions can be expressed in terms \n  of one another quite easily, knowing the asymptotics of any of them immediately gives the \n  asymptotics of the other ones.\n\n  In this sense, all of the above are equivalent formulations of the Prime Number Theorem.\n  The one we shall tackle first, due to its strong connection to the $\\mathfrak{M}$ function, is\n  $\\vartheta(x) \\sim x$.\n\n  We know that $\\mathfrak{M}(x)$ has the asymptotic expansion\n  $\\mathfrak{M}(x) = \\ln x + c + o(1)$. We also know that\n  \\[\\vartheta(x) = x\\mathfrak{M}(x) - \\int\\nolimits_2^x \\mathfrak{M}(t) \\,\\mathrm{d}t\\ .\\]\n  Substituting in the above asymptotic equation, we obtain:\n  \\begin{align*}\n  \\vartheta(x) &= x\\ln x + cx + o(x) - \\int\\nolimits_2^x \\ln t + c + o(1) \\,\\mathrm{d}t\\\\\n            &= x\\ln x + cx + o(x) - (x\\ln x - x + cx + o(x))\\\\\n            &= x + o(x)\n  \\end{align*}\n  In conclusion, $\\vartheta(x) \\sim x$.\n\\<close>"], ["", "theorem \\<theta>_asymptotics: \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "from \\<MM>_minus_ln_limit"], ["proof (chain)\npicking this:\n  (\\<And>c.\n      ((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> c)\n       at_top \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain c where c: \"((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> c) at_top\""], ["proof (prove)\nusing this:\n  (\\<And>c.\n      ((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> c)\n       at_top \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        ((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> c)\n         at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<MM> x - ln x) \\<longlongrightarrow> c) at_top\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "define r where \"r = (\\<lambda>x. \\<MM> x - ln x - c)\""], ["proof (state)\nthis:\n  r = (\\<lambda>x. \\<MM> x - ln x - c)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have \\<MM>_expand: \"\\<MM> = (\\<lambda>x. ln x + c + r x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<MM> = (\\<lambda>x. ln x + c + r x)", "by (simp add: r_def)"], ["proof (state)\nthis:\n  \\<MM> = (\\<lambda>x. ln x + c + r x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have r: \"r \\<in> o(\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> o(\\<lambda>_. 1)", "unfolding r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<MM> x - ln x - c) \\<in> o(\\<lambda>_. 1)", "using tendsto_add[OF c tendsto_const[of \"-c\"]]"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. \\<MM> x - ln x + - c) \\<longlongrightarrow> c + - c) at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<MM> x - ln x - c) \\<in> o(\\<lambda>_. 1)", "by (intro smalloI_tendsto) auto"], ["proof (state)\nthis:\n  r \\<in> o(\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "define r' where \"r' = (\\<lambda>x. integral {2..x} r)\""], ["proof (state)\nthis:\n  r' = (\\<lambda>x. integral {2..x} r)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have integrable_r: \"r integrable_on {x..y}\"\n    if \"2 \\<le> x\" for x y :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. r integrable_on {x..y}", "using that"], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. r integrable_on {x..y}", "unfolding r_def"], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<MM> x - ln x - c) integrable_on {x..y}", "by (intro integrable_diff integrable_primes_M)\n       (auto intro!: integrable_continuous_real continuous_intros)"], ["proof (state)\nthis:\n  2 \\<le> ?x \\<Longrightarrow> r integrable_on {?x..?y}\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "hence integral: \"(r has_integral r' x) {2..x}\" if \"x \\<ge> 2\" for x"], ["proof (prove)\nusing this:\n  2 \\<le> ?x \\<Longrightarrow> r integrable_on {?x..?y}\n\ngoal (1 subgoal):\n 1. (r has_integral r' x) {2..x}", "by (auto simp: has_integral_iff r'_def)"], ["proof (state)\nthis:\n  2 \\<le> ?x \\<Longrightarrow> (r has_integral r' ?x) {2..?x}\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have r': \"r' \\<in> o(\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r' \\<in> o(\\<lambda>x. x)", "using integrable_r"], ["proof (prove)\nusing this:\n  2 \\<le> ?x \\<Longrightarrow> r integrable_on {?x..?y}\n\ngoal (1 subgoal):\n 1. r' \\<in> o(\\<lambda>x. x)", "unfolding r'_def"], ["proof (prove)\nusing this:\n  2 \\<le> ?x \\<Longrightarrow> r integrable_on {?x..?y}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. integral {2..x} r) \\<in> o(\\<lambda>x. x)", "by (intro integral_smallo[OF r]) (auto simp: filterlim_ident)"], ["proof (state)\nthis:\n  r' \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "define C where \"C = 2 * (c + ln 2 - 1)\""], ["proof (state)\nthis:\n  C = 2 * (c + ln 2 - 1)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have \"\\<theta> \\<sim>[at_top] (\\<lambda>x. x + (r x * x + C - r' x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x + (r x * x + C - r' x))", "proof (intro asymp_equiv_refl_ev eventually_mono[OF eventually_gt_at_top])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. ?c2 < x \\<Longrightarrow> \\<theta> x = x + (r x * x + C - r' x)", "fix x :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. ?c2 < x \\<Longrightarrow> \\<theta> x = x + (r x * x + C - r' x)", "assume x: \"x > 2\""], ["proof (state)\nthis:\n  2 < x\n\ngoal (1 subgoal):\n 1. \\<And>x. ?c2 < x \\<Longrightarrow> \\<theta> x = x + (r x * x + C - r' x)", "have \"(\\<MM> has_integral ((x * ln x - x + c * x) - (2 * ln 2 - 2 + c * 2) + r' x)) {2..x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<MM> has_integral\n     x * ln x - x + c * x - (2 * ln 2 - 2 + c * 2) + r' x)\n     {2..x}", "unfolding \\<MM>_expand"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. ln x + c + r x) has_integral\n     x * ln x - x + c * x - (2 * ln 2 - 2 + c * 2) + r' x)\n     {2..x}", "using x"], ["proof (prove)\nusing this:\n  2 < x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. ln x + c + r x) has_integral\n     x * ln x - x + c * x - (2 * ln 2 - 2 + c * 2) + r' x)\n     {2..x}", "by (intro has_integral_add[OF fundamental_theorem_of_calculus integral])\n         (auto simp flip: has_field_derivative_iff_has_vector_derivative\n               intro!: derivative_eq_intros continuous_intros)"], ["proof (state)\nthis:\n  (\\<MM> has_integral x * ln x - x + c * x - (2 * ln 2 - 2 + c * 2) + r' x)\n   {2..x}\n\ngoal (1 subgoal):\n 1. \\<And>x. ?c2 < x \\<Longrightarrow> \\<theta> x = x + (r x * x + C - r' x)", "from has_integral_unique[OF \\<theta>_conv_\\<MM>_integral this]"], ["proof (chain)\npicking this:\n  2 \\<le> x \\<Longrightarrow>\n  \\<MM> x * x - \\<theta> x =\n  x * ln x - x + c * x - (2 * ln 2 - 2 + c * 2) + r' x", "show \"\\<theta> x = x + (r x * x + C - r' x)\""], ["proof (prove)\nusing this:\n  2 \\<le> x \\<Longrightarrow>\n  \\<MM> x * x - \\<theta> x =\n  x * ln x - x + c * x - (2 * ln 2 - 2 + c * 2) + r' x\n\ngoal (1 subgoal):\n 1. \\<theta> x = x + (r x * x + C - r' x)", "using x"], ["proof (prove)\nusing this:\n  2 \\<le> x \\<Longrightarrow>\n  \\<MM> x * x - \\<theta> x =\n  x * ln x - x + c * x - (2 * ln 2 - 2 + c * 2) + r' x\n  2 < x\n\ngoal (1 subgoal):\n 1. \\<theta> x = x + (r x * x + C - r' x)", "by (simp add: field_simps \\<MM>_expand C_def)"], ["proof (state)\nthis:\n  \\<theta> x = x + (r x * x + C - r' x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. x + (r x * x + C - r' x))\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "also"], ["proof (state)\nthis:\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. x + (r x * x + C - r' x))\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "have \"(\\<lambda>x. r x * x + C - r' x) \\<in> o(\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. r x * x + C - r' x) \\<in> o(\\<lambda>x. x)", "proof (intro sum_in_smallo r)"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>x. r x * x) \\<in> o(\\<lambda>x. x)\n 2. (\\<lambda>x. C) \\<in> o(\\<lambda>x. x)\n 3. r' \\<in> o(\\<lambda>x. x)", "show \"(\\<lambda>_. C) \\<in> o(\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>_. C) \\<in> o(\\<lambda>x. x)", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>_. C) \\<in> o(\\<lambda>x. x)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. r x * x) \\<in> o(\\<lambda>x. x)\n 2. r' \\<in> o(\\<lambda>x. x)", "qed (insert landau_o.small_big_mult[OF r, of \"\\<lambda>x. x\"] r', simp_all)"], ["proof (state)\nthis:\n  (\\<lambda>x. r x * x + C - r' x) \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "hence \"(\\<lambda>x. x + (r x * x + C - r' x)) \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. r x * x + C - r' x) \\<in> o(\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x + (r x * x + C - r' x)) \\<sim>[at_top] (\\<lambda>x. x)", "by (subst asymp_equiv_add_right) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. x + (r x * x + C - r' x)) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  \\<theta> \\<sim>[at_top] (\\<lambda>a. a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[at_top] d \\<Longrightarrow>\n      c \\<sim>[at_top] d) \\<Longrightarrow>\n  \\<theta> \\<sim>[at_top] (\\<lambda>a. a)\n\ngoal (1 subgoal):\n 1. \\<theta> \\<sim>[at_top] (\\<lambda>x. x)", "by auto"], ["proof (state)\nthis:\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The various other forms of the Prime Number Theorem follow as simple corollaries.\n\\<close>"], ["", "corollary \\<psi>_asymptotics: \"\\<psi> \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "using \\<theta>_asymptotics PNT4_imp_PNT5"], ["proof (prove)\nusing this:\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. x)\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. x) \\<Longrightarrow>\n  \\<psi> \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<sim>[at_top] (\\<lambda>x. x)", "by simp"], ["", "corollary prime_number_theorem: \"\\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "using \\<theta>_asymptotics PNT4_imp_PNT1"], ["proof (prove)\nusing this:\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. x)\n  \\<theta> \\<sim>[at_top] (\\<lambda>x. x) \\<Longrightarrow>\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)", "by simp"], ["", "corollary ln_\\<pi>_asymptotics: \"(\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "using prime_number_theorem PNT1_imp_PNT1'"], ["proof (prove)\nusing this:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x) \\<Longrightarrow>\n  (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (\\<pi> x)) \\<sim>[at_top] ln", "by simp"], ["", "corollary \\<pi>_ln_\\<pi>_asymptotics: \"(\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "using prime_number_theorem PNT1_imp_PNT2"], ["proof (prove)\nusing this:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x) \\<Longrightarrow>\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)", "by simp"], ["", "corollary nth_prime_asymptotics: \"(\\<lambda>n. real (nth_prime n)) \\<sim>[at_top] (\\<lambda>n. real n * ln (real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        real\n         (nth_prime\n           n)) \\<sim>[sequentially] (\\<lambda>n. real n * ln (real n))", "using \\<pi>_ln_\\<pi>_asymptotics PNT2_imp_PNT3"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<pi> x * ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x)\n  (\\<lambda>x.\n      \\<pi> x *\n      ln (\\<pi> x)) \\<sim>[at_top] (\\<lambda>x. x) \\<Longrightarrow>\n  (\\<lambda>x.\n      real\n       (nth_prime\n         x)) \\<sim>[sequentially] (\\<lambda>x. real x * ln (real x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        real\n         (nth_prime\n           n)) \\<sim>[sequentially] (\\<lambda>n. real n * ln (real n))", "by simp"], ["", "text \\<open>\n  The following versions use a little less notation.\n\\<close>"], ["", "corollary prime_number_theorem': \"((\\<lambda>x. \\<pi> x / (x / ln x)) \\<longlongrightarrow> 1) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<pi> x / (x / ln x)) \\<longlongrightarrow> 1) at_top", "using prime_number_theorem"], ["proof (prove)\nusing this:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<pi> x / (x / ln x)) \\<longlongrightarrow> 1) at_top", "by (rule asymp_equivD_strong[OF _ eventually_mono[OF eventually_gt_at_top[of 1]]]) auto"], ["", "corollary prime_number_theorem'':\n  \"(\\<lambda>x. card {p. prime p \\<and> real p \\<le> x}) \\<sim>[at_top] (\\<lambda>x. x / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               real p \\<le> x})) \\<sim>[at_top] (\\<lambda>x. x / ln x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               real p \\<le> x})) \\<sim>[at_top] (\\<lambda>x. x / ln x)", "have \"\\<pi> = (\\<lambda>x. card {p. prime p \\<and> real p \\<le> x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> = (\\<lambda>x. real (card {p. prime p \\<and> real p \\<le> x}))", "by (intro ext) (simp add: \\<pi>_def prime_sum_upto_def)"], ["proof (state)\nthis:\n  \\<pi> = (\\<lambda>x. real (card {p. prime p \\<and> real p \\<le> x}))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               real p \\<le> x})) \\<sim>[at_top] (\\<lambda>x. x / ln x)", "with prime_number_theorem"], ["proof (chain)\npicking this:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n  \\<pi> = (\\<lambda>x. real (card {p. prime p \\<and> real p \\<le> x}))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi> \\<sim>[at_top] (\\<lambda>x. x / ln x)\n  \\<pi> = (\\<lambda>x. real (card {p. prime p \\<and> real p \\<le> x}))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               real p \\<le> x})) \\<sim>[at_top] (\\<lambda>x. x / ln x)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (card\n         {p. prime p \\<and>\n             real p \\<le> x})) \\<sim>[at_top] (\\<lambda>x. x / ln x)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary prime_number_theorem''':\n  \"(\\<lambda>n. card {p. prime p \\<and> p \\<le> n}) \\<sim>[at_top] (\\<lambda>n. real n / ln (real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               p \\<le> x})) \\<sim>[sequentially] (\\<lambda>n.\n               real n / ln (real n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               p \\<le> x})) \\<sim>[sequentially] (\\<lambda>n.\n               real n / ln (real n))", "have \"(\\<lambda>n. card {p. prime p \\<and> real p \\<le> real n}) \\<sim>[at_top] (\\<lambda>n. real n / ln (real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               real p\n               \\<le> real\n                      x})) \\<sim>[sequentially] (\\<lambda>n.\n              real n / ln (real n))", "using prime_number_theorem''"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      real\n       (card\n         {p. prime p \\<and>\n             real p \\<le> x})) \\<sim>[at_top] (\\<lambda>x. x / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               real p\n               \\<le> real\n                      x})) \\<sim>[sequentially] (\\<lambda>n.\n              real n / ln (real n))", "by (rule asymp_equiv_compose') (simp add: filterlim_real_sequentially)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (card\n         {p. prime p \\<and>\n             real p\n             \\<le> real\n                    x})) \\<sim>[sequentially] (\\<lambda>n.\n            real n / ln (real n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               p \\<le> x})) \\<sim>[sequentially] (\\<lambda>n.\n               real n / ln (real n))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      real\n       (card\n         {p. prime p \\<and>\n             real p\n             \\<le> real\n                    x})) \\<sim>[sequentially] (\\<lambda>n.\n            real n / ln (real n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        real\n         (card\n           {p. prime p \\<and>\n               p \\<le> x})) \\<sim>[sequentially] (\\<lambda>n.\n               real n / ln (real n))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      real\n       (card\n         {p. prime p \\<and>\n             p \\<le> x})) \\<sim>[sequentially] (\\<lambda>n.\n             real n / ln (real n))\n\ngoal:\nNo subgoals!", "qed"], ["", "(*<*)"], ["", "unbundle no_prime_counting_notation"], ["", "(*>*)"], ["", "end"]]}