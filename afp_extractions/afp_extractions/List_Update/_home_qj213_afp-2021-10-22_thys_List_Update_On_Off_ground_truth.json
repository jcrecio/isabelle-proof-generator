{"file_name": "/home/qj213/afp-2021-10-22/thys/List_Update/On_Off.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/List_Update", "problem_names": ["lemma config'_snoc: \"config' A s (rs@[r]) = Step A (config' A s rs) r\"", "lemma config'_append2: \"config' A s (xs@ys) = config' A (config' A s xs) ys\"", "lemma config'_induct: \"P (fst init) \\<Longrightarrow> (\\<And>s q a. P s \\<Longrightarrow> P (step s q a))\n     \\<Longrightarrow> P (fst (config' A init rs))\"", "lemma config_snoc: \"config A s (rs@[r]) = Step A (config A s rs) r\"", "lemma config_append: \"config A s (xs@ys) = config' A (config A s xs) ys\"", "lemma config_induct: \"P s0 \\<Longrightarrow> (\\<And>s q a. P s \\<Longrightarrow> P (step s q a)) \\<Longrightarrow> P (fst (config A s0 qs))\"", "lemma T_on'_append: \"T_on' A s (xs@ys) = T_on' A s xs + T_on' A (config' A s xs) ys\"", "lemma T_on_append: \"T_on'' A s (xs@ys) = T_on'' A s xs + T_on' A (config A s xs) ys\"", "lemma T_on__as_sum: \"T_on'' A s0 rs = sum (T_on_n A s0 rs) {..<length rs} \"", "lemma T_on_on': \"T_off (\\<lambda>s0. (off2 A (s0, x))) s0 qs = T_on' A (s0,x) qs\"", "lemma T_on_on'': \"T_on A s0 qs = T_on'' A s0 qs\"", "lemma T_on_as_sum: \"T_on A s0 rs = sum (T_on_n A s0 rs) {..<length rs} \"", "lemma length_off[simp]: \"length(off2 A s rs) = length rs\"", "lemma compet_mono: assumes \"compet A c S0\" and \"c \\<le> c'\"\nshows \"compet A c' S0\"", "lemma competE: fixes c :: real\nassumes \"compet A c S0\" \"c \\<ge> 0\" \"\\<forall>s0 rs. size(aoff s0 rs) = length rs\" \"s0\\<in>S0\"\nshows \"\\<exists>b\\<ge>0. \\<forall>rs. wf s0 rs \\<longrightarrow> T_on A s0 rs \\<le> c * T_off aoff s0 rs + b\""], "translations": [["", "lemma config'_snoc: \"config' A s (rs@[r]) = Step A (config' A s rs) r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. config' A s (rs @ [r]) = Step A (config' A s rs) r", "apply(induct rs arbitrary: s)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s. config' A s ([] @ [r]) = Step A (config' A s []) r\n 2. \\<And>a rs s.\n       (\\<And>s.\n           config' A s (rs @ [r]) =\n           Step A (config' A s rs) r) \\<Longrightarrow>\n       config' A s ((a # rs) @ [r]) = Step A (config' A s (a # rs)) r", "by simp_all"], ["", "lemma config'_append2: \"config' A s (xs@ys) = config' A (config' A s xs) ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. config' A s (xs @ ys) = config' A (config' A s xs) ys", "apply(induct xs arbitrary: s)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s. config' A s ([] @ ys) = config' A (config' A s []) ys\n 2. \\<And>a xs s.\n       (\\<And>s.\n           config' A s (xs @ ys) =\n           config' A (config' A s xs) ys) \\<Longrightarrow>\n       config' A s ((a # xs) @ ys) = config' A (config' A s (a # xs)) ys", "by simp_all"], ["", "lemma config'_induct: \"P (fst init) \\<Longrightarrow> (\\<And>s q a. P s \\<Longrightarrow> P (step s q a))\n     \\<Longrightarrow> P (fst (config' A init rs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P (fst init);\n     \\<And>s q a. P s \\<Longrightarrow> P (step s q a)\\<rbrakk>\n    \\<Longrightarrow> P (fst (config' A init rs))", "apply (induct rs arbitrary: init)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>init.\n       \\<lbrakk>P (fst init);\n        \\<And>s q a. P s \\<Longrightarrow> P (step s q a)\\<rbrakk>\n       \\<Longrightarrow> P (fst (config' A init []))\n 2. \\<And>a rs init.\n       \\<lbrakk>\\<And>init.\n                   \\<lbrakk>P (fst init);\n                    \\<And>s q a.\n                       P s \\<Longrightarrow> P (step s q a)\\<rbrakk>\n                   \\<Longrightarrow> P (fst (config' A init rs));\n        P (fst init);\n        \\<And>s q a. P s \\<Longrightarrow> P (step s q a)\\<rbrakk>\n       \\<Longrightarrow> P (fst (config' A init (a # rs)))", "by(simp_all add: Step_def split: prod.split)"], ["", "abbreviation config where\n\"config A s0 rs == config' A (s0, fst A s0) rs\""], ["", "lemma config_snoc: \"config A s (rs@[r]) = Step A (config A s rs) r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. config A s (rs @ [r]) = Step A (config A s rs) r", "using config'_snoc"], ["proof (prove)\nusing this:\n  config' ?A ?s (?rs @ [?r]) = Step ?A (config' ?A ?s ?rs) ?r\n\ngoal (1 subgoal):\n 1. config A s (rs @ [r]) = Step A (config A s rs) r", "by metis"], ["", "lemma config_append: \"config A s (xs@ys) = config' A (config A s xs) ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. config A s (xs @ ys) = config' A (config A s xs) ys", "using config'_append2"], ["proof (prove)\nusing this:\n  config' ?A ?s (?xs @ ?ys) = config' ?A (config' ?A ?s ?xs) ?ys\n\ngoal (1 subgoal):\n 1. config A s (xs @ ys) = config' A (config A s xs) ys", "by metis"], ["", "lemma config_induct: \"P s0 \\<Longrightarrow> (\\<And>s q a. P s \\<Longrightarrow> P (step s q a)) \\<Longrightarrow> P (fst (config A s0 qs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P s0;\n     \\<And>s q a. P s \\<Longrightarrow> P (step s q a)\\<rbrakk>\n    \\<Longrightarrow> P (fst (config A s0 qs))", "using config'_induct[of P \"(s0, fst A s0)\" ]"], ["proof (prove)\nusing this:\n  \\<lbrakk>P (fst (s0, fst A s0));\n   \\<And>s q a. P s \\<Longrightarrow> P (step s q a)\\<rbrakk>\n  \\<Longrightarrow> P (fst (config' ?A (s0, fst A s0) ?rs))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P s0;\n     \\<And>s q a. P s \\<Longrightarrow> P (step s q a)\\<rbrakk>\n    \\<Longrightarrow> P (fst (config A s0 qs))", "by auto"], ["", "fun T_on' :: \"('state,'is,'request,'answer) alg_on \\<Rightarrow> ('state*'is) \\<Rightarrow> 'request list \\<Rightarrow>  nat\" where\n\"T_on' A s [] = 0\" |\n\"T_on' A s (r#rs) = (t (fst s) r (fst (snd A s r))) + T_on' A (Step A s r) rs\""], ["", "lemma T_on'_append: \"T_on' A s (xs@ys) = T_on' A s xs + T_on' A (config' A s xs) ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_on' A s (xs @ ys) = T_on' A s xs + T_on' A (config' A s xs) ys", "apply(induct xs arbitrary: s)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       T_on' A s ([] @ ys) = T_on' A s [] + T_on' A (config' A s []) ys\n 2. \\<And>a xs s.\n       (\\<And>s.\n           T_on' A s (xs @ ys) =\n           T_on' A s xs + T_on' A (config' A s xs) ys) \\<Longrightarrow>\n       T_on' A s ((a # xs) @ ys) =\n       T_on' A s (a # xs) + T_on' A (config' A s (a # xs)) ys", "by simp_all"], ["", "abbreviation T_on'' :: \"('state,'is,'request,'answer) alg_on \\<Rightarrow> 'state \\<Rightarrow> 'request list \\<Rightarrow> nat\" where\n  \"T_on'' A s rs == T_on' A (s,fst A s) rs\""], ["", "lemma T_on_append: \"T_on'' A s (xs@ys) = T_on'' A s xs + T_on' A (config A s xs) ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_on'' A s (xs @ ys) = T_on'' A s xs + T_on' A (config A s xs) ys", "by(rule T_on'_append)"], ["", "abbreviation \"T_on_n A s0 xs n == T_on' A (config A s0 (take n xs)) [xs!n]\""], ["", "lemma T_on__as_sum: \"T_on'' A s0 rs = sum (T_on_n A s0 rs) {..<length rs} \""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_on'' A s0 rs = sum (T_on_n A s0 rs) {..<length rs}", "apply(induct rs rule: rev_induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. T_on'' A s0 [] = sum (T_on_n A s0 []) {..<length []}\n 2. \\<And>x xs.\n       T_on'' A s0 xs =\n       sum (T_on_n A s0 xs) {..<length xs} \\<Longrightarrow>\n       T_on'' A s0 (xs @ [x]) =\n       sum (T_on_n A s0 (xs @ [x])) {..<length (xs @ [x])}", "by(simp_all add: T_on'_append  nth_append)"], ["", "fun off2 :: \"('state,'is,'request,'answer) alg_on \\<Rightarrow> ('state * 'is,'request,'answer) alg_off\" where\n\"off2 A s [] = []\" |\n\"off2 A s (r#rs) = fst (snd A s r) # off2 A (Step A s r) rs\""], ["", "abbreviation off :: \"('state,'is,'request,'answer) alg_on \\<Rightarrow> ('state,'request,'answer) alg_off\" where\n\"off A s0 \\<equiv> off2 A (s0, fst A s0)\""], ["", "abbreviation T_off :: \"('state,'request,'answer) alg_off \\<Rightarrow> 'state \\<Rightarrow> 'request list \\<Rightarrow> nat\" where\n\"T_off A s0 rs == T s0 rs (A s0 rs)\""], ["", "abbreviation T_on :: \"('state,'is,'request,'answer) alg_on \\<Rightarrow> 'state \\<Rightarrow> 'request list \\<Rightarrow> nat\" where\n\"T_on A == T_off (off A)\""], ["", "lemma T_on_on': \"T_off (\\<lambda>s0. (off2 A (s0, x))) s0 qs = T_on' A (s0,x) qs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T s0 qs (off2 A (s0, x) qs) = T_on' A (s0, x) qs", "apply(induct qs arbitrary: s0 x)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s0 x. T s0 [] (off2 A (s0, x) []) = T_on' A (s0, x) []\n 2. \\<And>a qs s0 x.\n       (\\<And>s0 x.\n           T s0 qs (off2 A (s0, x) qs) =\n           T_on' A (s0, x) qs) \\<Longrightarrow>\n       T s0 (a # qs) (off2 A (s0, x) (a # qs)) = T_on' A (s0, x) (a # qs)", "by(simp_all add: Step_def split: prod.split)"], ["", "lemma T_on_on'': \"T_on A s0 qs = T_on'' A s0 qs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_on A s0 qs = T_on'' A s0 qs", "using T_on_on'[where x=\"fst A s0\", of s0 qs A]"], ["proof (prove)\nusing this:\n  T_on A s0 qs = T_on'' A s0 qs\n\ngoal (1 subgoal):\n 1. T_on A s0 qs = T_on'' A s0 qs", "by(auto)"], ["", "lemma T_on_as_sum: \"T_on A s0 rs = sum (T_on_n A s0 rs) {..<length rs} \""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_on A s0 rs = sum (T_on_n A s0 rs) {..<length rs}", "using T_on__as_sum T_on_on''"], ["proof (prove)\nusing this:\n  T_on'' ?A ?s0.0 ?rs = sum (T_on_n ?A ?s0.0 ?rs) {..<length ?rs}\n  T_on ?A ?s0.0 ?qs = T_on'' ?A ?s0.0 ?qs\n\ngoal (1 subgoal):\n 1. T_on A s0 rs = sum (T_on_n A s0 rs) {..<length rs}", "by metis"], ["", "definition T_opt :: \"'state \\<Rightarrow> 'request list \\<Rightarrow> nat\" where\n\"T_opt s rs = Inf {T s rs as | as. size as = size rs}\""], ["", "definition compet :: \"('state,'is,'request,'answer) alg_on \\<Rightarrow> real \\<Rightarrow> 'state set \\<Rightarrow> bool\" where\n\"compet A c S = (\\<forall>s\\<in>S. \\<exists>b \\<ge> 0. \\<forall>rs. wf s rs \\<longrightarrow> real(T_on A s rs) \\<le> c * T_opt s rs + b)\""], ["", "lemma length_off[simp]: \"length(off2 A s rs) = length rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (off2 A s rs) = length rs", "by (induction rs arbitrary: s) (auto split: prod.split)"], ["", "lemma compet_mono: assumes \"compet A c S0\" and \"c \\<le> c'\"\nshows \"compet A c' S0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compet A c' S0", "proof (unfold compet_def, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> S0 \\<Longrightarrow>\n       \\<exists>b\\<ge>0.\n          \\<forall>rs.\n             wf s rs \\<longrightarrow>\n             real (T_on A s rs) \\<le> c' * real (T_opt s rs) + b", "let ?compt = \"\\<lambda>s0 rs b (c::real). T_on A s0 rs \\<le> c * T_opt s0 rs + b\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> S0 \\<Longrightarrow>\n       \\<exists>b\\<ge>0.\n          \\<forall>rs.\n             wf s rs \\<longrightarrow>\n             real (T_on A s rs) \\<le> c' * real (T_opt s rs) + b", "fix s0"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> S0 \\<Longrightarrow>\n       \\<exists>b\\<ge>0.\n          \\<forall>rs.\n             wf s rs \\<longrightarrow>\n             real (T_on A s rs) \\<le> c' * real (T_opt s rs) + b", "assume \"s0 \\<in> S0\""], ["proof (state)\nthis:\n  s0 \\<in> S0\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> S0 \\<Longrightarrow>\n       \\<exists>b\\<ge>0.\n          \\<forall>rs.\n             wf s rs \\<longrightarrow>\n             real (T_on A s rs) \\<le> c' * real (T_opt s rs) + b", "with assms(1)"], ["proof (chain)\npicking this:\n  compet A c S0\n  s0 \\<in> S0", "obtain b where \"b \\<ge> 0\" and 1: \"\\<forall>rs. wf s0 rs \\<longrightarrow> ?compt s0 rs b c\""], ["proof (prove)\nusing this:\n  compet A c S0\n  s0 \\<in> S0\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>0 \\<le> b;\n         \\<forall>rs.\n            wf s0 rs \\<longrightarrow>\n            real (T_on A s0 rs) \\<le> c * real (T_opt s0 rs) + b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp: compet_def)"], ["proof (state)\nthis:\n  0 \\<le> b\n  \\<forall>rs.\n     wf s0 rs \\<longrightarrow>\n     real (T_on A s0 rs) \\<le> c * real (T_opt s0 rs) + b\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> S0 \\<Longrightarrow>\n       \\<exists>b\\<ge>0.\n          \\<forall>rs.\n             wf s rs \\<longrightarrow>\n             real (T_on A s rs) \\<le> c' * real (T_opt s rs) + b", "have \"\\<forall>rs.  wf s0 rs \\<longrightarrow> ?compt s0 rs b c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>rs.\n       wf s0 rs \\<longrightarrow>\n       real (T_on A s0 rs) \\<le> c' * real (T_opt s0 rs) + b", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>rs.\n       wf s0 rs \\<Longrightarrow>\n       real (T_on A s0 rs) \\<le> c' * real (T_opt s0 rs) + b", "fix rs"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>rs.\n       wf s0 rs \\<Longrightarrow>\n       real (T_on A s0 rs) \\<le> c' * real (T_opt s0 rs) + b", "assume wf: \"wf s0 rs\""], ["proof (state)\nthis:\n  wf s0 rs\n\ngoal (1 subgoal):\n 1. \\<And>rs.\n       wf s0 rs \\<Longrightarrow>\n       real (T_on A s0 rs) \\<le> c' * real (T_opt s0 rs) + b", "from 1 wf"], ["proof (chain)\npicking this:\n  \\<forall>rs.\n     wf s0 rs \\<longrightarrow>\n     real (T_on A s0 rs) \\<le> c * real (T_opt s0 rs) + b\n  wf s0 rs", "have \"?compt s0 rs b c\""], ["proof (prove)\nusing this:\n  \\<forall>rs.\n     wf s0 rs \\<longrightarrow>\n     real (T_on A s0 rs) \\<le> c * real (T_opt s0 rs) + b\n  wf s0 rs\n\ngoal (1 subgoal):\n 1. real (T_on A s0 rs) \\<le> c * real (T_opt s0 rs) + b", "by blast"], ["proof (state)\nthis:\n  real (T_on A s0 rs) \\<le> c * real (T_opt s0 rs) + b\n\ngoal (1 subgoal):\n 1. \\<And>rs.\n       wf s0 rs \\<Longrightarrow>\n       real (T_on A s0 rs) \\<le> c' * real (T_opt s0 rs) + b", "thus \"?compt s0 rs b c'\""], ["proof (prove)\nusing this:\n  real (T_on A s0 rs) \\<le> c * real (T_opt s0 rs) + b\n\ngoal (1 subgoal):\n 1. real (T_on A s0 rs) \\<le> c' * real (T_opt s0 rs) + b", "using 1 mult_right_mono[OF assms(2) of_nat_0_le_iff[of \"T_opt s0 rs\"]]"], ["proof (prove)\nusing this:\n  real (T_on A s0 rs) \\<le> c * real (T_opt s0 rs) + b\n  \\<forall>rs.\n     wf s0 rs \\<longrightarrow>\n     real (T_on A s0 rs) \\<le> c * real (T_opt s0 rs) + b\n  c * real (T_opt s0 rs) \\<le> c' * real (T_opt s0 rs)\n\ngoal (1 subgoal):\n 1. real (T_on A s0 rs) \\<le> c' * real (T_opt s0 rs) + b", "by arith"], ["proof (state)\nthis:\n  real (T_on A s0 rs) \\<le> c' * real (T_opt s0 rs) + b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>rs.\n     wf s0 rs \\<longrightarrow>\n     real (T_on A s0 rs) \\<le> c' * real (T_opt s0 rs) + b\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> S0 \\<Longrightarrow>\n       \\<exists>b\\<ge>0.\n          \\<forall>rs.\n             wf s rs \\<longrightarrow>\n             real (T_on A s rs) \\<le> c' * real (T_opt s rs) + b", "thus \"\\<exists>b\\<ge>0. \\<forall>rs.  wf s0 rs \\<longrightarrow> ?compt s0 rs b c'\""], ["proof (prove)\nusing this:\n  \\<forall>rs.\n     wf s0 rs \\<longrightarrow>\n     real (T_on A s0 rs) \\<le> c' * real (T_opt s0 rs) + b\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<ge>0.\n       \\<forall>rs.\n          wf s0 rs \\<longrightarrow>\n          real (T_on A s0 rs) \\<le> c' * real (T_opt s0 rs) + b", "using \\<open>b\\<ge>0\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>rs.\n     wf s0 rs \\<longrightarrow>\n     real (T_on A s0 rs) \\<le> c' * real (T_opt s0 rs) + b\n  0 \\<le> b\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<ge>0.\n       \\<forall>rs.\n          wf s0 rs \\<longrightarrow>\n          real (T_on A s0 rs) \\<le> c' * real (T_opt s0 rs) + b", "by(auto)"], ["proof (state)\nthis:\n  \\<exists>b\\<ge>0.\n     \\<forall>rs.\n        wf s0 rs \\<longrightarrow>\n        real (T_on A s0 rs) \\<le> c' * real (T_opt s0 rs) + b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma competE: fixes c :: real\nassumes \"compet A c S0\" \"c \\<ge> 0\" \"\\<forall>s0 rs. size(aoff s0 rs) = length rs\" \"s0\\<in>S0\"\nshows \"\\<exists>b\\<ge>0. \\<forall>rs. wf s0 rs \\<longrightarrow> T_on A s0 rs \\<le> c * T_off aoff s0 rs + b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b\\<ge>0.\n       \\<forall>rs.\n          wf s0 rs \\<longrightarrow>\n          real (T_on A s0 rs) \\<le> c * real (T_off aoff s0 rs) + b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>b\\<ge>0.\n       \\<forall>rs.\n          wf s0 rs \\<longrightarrow>\n          real (T_on A s0 rs) \\<le> c * real (T_off aoff s0 rs) + b", "from assms(1,4)"], ["proof (chain)\npicking this:\n  compet A c S0\n  s0 \\<in> S0", "obtain b where \"b\\<ge>0\" and\n    1: \"\\<forall>rs.  wf s0 rs \\<longrightarrow> T_on A s0 rs \\<le> c * T_opt s0 rs + b\""], ["proof (prove)\nusing this:\n  compet A c S0\n  s0 \\<in> S0\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>0 \\<le> b;\n         \\<forall>rs.\n            wf s0 rs \\<longrightarrow>\n            real (T_on A s0 rs) \\<le> c * real (T_opt s0 rs) + b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: compet_def)"], ["proof (state)\nthis:\n  0 \\<le> b\n  \\<forall>rs.\n     wf s0 rs \\<longrightarrow>\n     real (T_on A s0 rs) \\<le> c * real (T_opt s0 rs) + b\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<ge>0.\n       \\<forall>rs.\n          wf s0 rs \\<longrightarrow>\n          real (T_on A s0 rs) \\<le> c * real (T_off aoff s0 rs) + b", "{"], ["proof (state)\nthis:\n  0 \\<le> b\n  \\<forall>rs.\n     wf s0 rs \\<longrightarrow>\n     real (T_on A s0 rs) \\<le> c * real (T_opt s0 rs) + b\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<ge>0.\n       \\<forall>rs.\n          wf s0 rs \\<longrightarrow>\n          real (T_on A s0 rs) \\<le> c * real (T_off aoff s0 rs) + b", "fix rs"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>b\\<ge>0.\n       \\<forall>rs.\n          wf s0 rs \\<longrightarrow>\n          real (T_on A s0 rs) \\<le> c * real (T_off aoff s0 rs) + b", "assume \"wf s0 rs\""], ["proof (state)\nthis:\n  wf s0 rs\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<ge>0.\n       \\<forall>rs.\n          wf s0 rs \\<longrightarrow>\n          real (T_on A s0 rs) \\<le> c * real (T_off aoff s0 rs) + b", "then"], ["proof (chain)\npicking this:\n  wf s0 rs", "have 2: \"real(T_on A s0 rs) \\<le> c * Inf {T s0 rs as | as. size as = size rs} + b\"\n      (is \"_ \\<le> _ * real(Inf ?T) + _\")"], ["proof (prove)\nusing this:\n  wf s0 rs\n\ngoal (1 subgoal):\n 1. real (T_on A s0 rs)\n    \\<le> c * real (Inf {T s0 rs as |as. length as = length rs}) + b", "using 1"], ["proof (prove)\nusing this:\n  wf s0 rs\n  \\<forall>rs.\n     wf s0 rs \\<longrightarrow>\n     real (T_on A s0 rs) \\<le> c * real (T_opt s0 rs) + b\n\ngoal (1 subgoal):\n 1. real (T_on A s0 rs)\n    \\<le> c * real (Inf {T s0 rs as |as. length as = length rs}) + b", "by(auto simp add: T_opt_def)"], ["proof (state)\nthis:\n  real (T_on A s0 rs)\n  \\<le> c * real (Inf {T s0 rs as |as. length as = length rs}) + b\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<ge>0.\n       \\<forall>rs.\n          wf s0 rs \\<longrightarrow>\n          real (T_on A s0 rs) \\<le> c * real (T_off aoff s0 rs) + b", "have \"Inf ?T \\<le> T_off aoff s0 rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf {T s0 rs as |as. length as = length rs} \\<le> T_off aoff s0 rs", "using assms(3)"], ["proof (prove)\nusing this:\n  \\<forall>s0 rs. length (aoff s0 rs) = length rs\n\ngoal (1 subgoal):\n 1. Inf {T s0 rs as |as. length as = length rs} \\<le> T_off aoff s0 rs", "by (intro cInf_lower) auto"], ["proof (state)\nthis:\n  Inf {T s0 rs as |as. length as = length rs} \\<le> T_off aoff s0 rs\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<ge>0.\n       \\<forall>rs.\n          wf s0 rs \\<longrightarrow>\n          real (T_on A s0 rs) \\<le> c * real (T_off aoff s0 rs) + b", "from mult_left_mono[OF of_nat_le_iff[THEN iffD2, OF this] assms(2)]"], ["proof (chain)\npicking this:\n  c * real (Inf {T s0 rs as |as. length as = length rs})\n  \\<le> c * real (T_off aoff s0 rs)", "have \"T_on A s0 rs \\<le> c * T_off aoff s0 rs + b\""], ["proof (prove)\nusing this:\n  c * real (Inf {T s0 rs as |as. length as = length rs})\n  \\<le> c * real (T_off aoff s0 rs)\n\ngoal (1 subgoal):\n 1. real (T_on A s0 rs) \\<le> c * real (T_off aoff s0 rs) + b", "using 2"], ["proof (prove)\nusing this:\n  c * real (Inf {T s0 rs as |as. length as = length rs})\n  \\<le> c * real (T_off aoff s0 rs)\n  real (T_on A s0 rs)\n  \\<le> c * real (Inf {T s0 rs as |as. length as = length rs}) + b\n\ngoal (1 subgoal):\n 1. real (T_on A s0 rs) \\<le> c * real (T_off aoff s0 rs) + b", "by arith"], ["proof (state)\nthis:\n  real (T_on A s0 rs) \\<le> c * real (T_off aoff s0 rs) + b\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<ge>0.\n       \\<forall>rs.\n          wf s0 rs \\<longrightarrow>\n          real (T_on A s0 rs) \\<le> c * real (T_off aoff s0 rs) + b", "}"], ["proof (state)\nthis:\n  wf s0 ?rs24 \\<Longrightarrow>\n  real (T_on A s0 ?rs24) \\<le> c * real (T_off aoff s0 ?rs24) + b\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<ge>0.\n       \\<forall>rs.\n          wf s0 rs \\<longrightarrow>\n          real (T_on A s0 rs) \\<le> c * real (T_off aoff s0 rs) + b", "thus ?thesis"], ["proof (prove)\nusing this:\n  wf s0 ?rs24 \\<Longrightarrow>\n  real (T_on A s0 ?rs24) \\<le> c * real (T_off aoff s0 ?rs24) + b\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<ge>0.\n       \\<forall>rs.\n          wf s0 rs \\<longrightarrow>\n          real (T_on A s0 rs) \\<le> c * real (T_off aoff s0 rs) + b", "using \\<open>b\\<ge>0\\<close>"], ["proof (prove)\nusing this:\n  wf s0 ?rs24 \\<Longrightarrow>\n  real (T_on A s0 ?rs24) \\<le> c * real (T_off aoff s0 ?rs24) + b\n  0 \\<le> b\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<ge>0.\n       \\<forall>rs.\n          wf s0 rs \\<longrightarrow>\n          real (T_on A s0 rs) \\<le> c * real (T_off aoff s0 rs) + b", "by(auto simp: compet_def)"], ["proof (state)\nthis:\n  \\<exists>b\\<ge>0.\n     \\<forall>rs.\n        wf s0 rs \\<longrightarrow>\n        real (T_on A s0 rs) \\<le> c * real (T_off aoff s0 rs) + b\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}