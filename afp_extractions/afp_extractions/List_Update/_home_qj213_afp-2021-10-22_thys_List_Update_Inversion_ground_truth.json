{"file_name": "/home/qj213/afp-2021-10-22/thys/List_Update/Inversion.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/List_Update", "problem_names": ["lemma before_in_setD1: \"x < y in xs \\<Longrightarrow> x : set xs\"", "lemma before_in_setD2: \"x < y in xs \\<Longrightarrow> y : set xs\"", "lemma not_before_in:\n  \"x : set xs \\<Longrightarrow> y : set xs \\<Longrightarrow> \\<not> x < y in xs \\<longleftrightarrow> y < x in xs \\<or> x=y\"", "lemma before_in_irefl: \"x < x in xs = False\"", "lemma no_before_inI[simp]: \"x < y in xs \\<Longrightarrow> (\\<not> y < x in xs) = True\"", "lemma finite_Invs[simp]:  \"finite(Inv xs ys)\"", "lemma Inv_id[simp]: \"Inv xs xs = {}\"", "lemma card_Inv_sym: \"card(Inv xs ys) = card(Inv ys xs)\"", "lemma Inv_tri_ineq:\n  \"dist_perm xs ys \\<Longrightarrow> dist_perm ys zs \\<Longrightarrow>\n  Inv xs zs \\<subseteq> Inv xs ys Un Inv ys zs\"", "lemma card_Inv_tri_ineq:\n  \"dist_perm xs ys \\<Longrightarrow> dist_perm ys zs \\<Longrightarrow>\n  card (Inv xs zs) \\<le> card(Inv xs ys) + card (Inv ys zs)\""], "translations": [["", "lemma before_in_setD1: \"x < y in xs \\<Longrightarrow> x : set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < y in xs \\<Longrightarrow> x \\<in> set xs", "by (metis index_conv_size_if_notin index_less before_in_def less_asym order_refl)"], ["", "lemma before_in_setD2: \"x < y in xs \\<Longrightarrow> y : set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < y in xs \\<Longrightarrow> y \\<in> set xs", "by (simp add: before_in_def)"], ["", "lemma not_before_in:\n  \"x : set xs \\<Longrightarrow> y : set xs \\<Longrightarrow> \\<not> x < y in xs \\<longleftrightarrow> y < x in xs \\<or> x=y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> set xs; y \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> (\\<not> x < y in xs) = (y < x in xs \\<or> x = y)", "by (metis index_eq_index_conv before_in_def less_asym linorder_neqE_nat)"], ["", "lemma before_in_irefl: \"x < x in xs = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < x in xs = False", "by (meson before_in_setD2 not_before_in)"], ["", "lemma no_before_inI[simp]: \"x < y in xs \\<Longrightarrow> (\\<not> y < x in xs) = True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < y in xs \\<Longrightarrow> (\\<not> y < x in xs) = True", "by (metis before_in_setD1 not_before_in)"], ["", "lemma finite_Invs[simp]:  \"finite(Inv xs ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Inv xs ys)", "apply(rule finite_subset[where B = \"set xs \\<times> set ys\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. Inv xs ys \\<subseteq> set xs \\<times> set ys\n 2. finite (set xs \\<times> set ys)", "apply(auto simp add: Inv_def before_in_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>index xs a < index xs b; b \\<in> set xs;\n        index ys b < index ys a; a \\<in> set ys\\<rbrakk>\n       \\<Longrightarrow> a \\<in> set xs\n 2. \\<And>a b.\n       \\<lbrakk>index xs a < index xs b; b \\<in> set xs;\n        index ys b < index ys a; a \\<in> set ys\\<rbrakk>\n       \\<Longrightarrow> b \\<in> set ys", "apply(metis index_conv_size_if_notin index_less_size_conv less_asym)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Inv_id[simp]: \"Inv xs xs = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inv xs xs = {}", "by(auto simp add: Inv_def before_in_def)"], ["", "lemma card_Inv_sym: \"card(Inv xs ys) = card(Inv ys xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (Inv xs ys) = card (Inv ys xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (Inv xs ys) = card (Inv ys xs)", "have \"Inv xs ys = (\\<lambda>(x,y). (y,x)) ` Inv ys xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inv xs ys = (\\<lambda>(x, y). (y, x)) ` Inv ys xs", "by(auto simp: Inv_def)"], ["proof (state)\nthis:\n  Inv xs ys = (\\<lambda>(x, y). (y, x)) ` Inv ys xs\n\ngoal (1 subgoal):\n 1. card (Inv xs ys) = card (Inv ys xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Inv xs ys = (\\<lambda>(x, y). (y, x)) ` Inv ys xs\n\ngoal (1 subgoal):\n 1. card (Inv xs ys) = card (Inv ys xs)", "by (metis card_image swap_inj_on)"], ["proof (state)\nthis:\n  card (Inv xs ys) = card (Inv ys xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Inv_tri_ineq:\n  \"dist_perm xs ys \\<Longrightarrow> dist_perm ys zs \\<Longrightarrow>\n  Inv xs zs \\<subseteq> Inv xs ys Un Inv ys zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dist_perm xs ys; dist_perm ys zs\\<rbrakk>\n    \\<Longrightarrow> Inv xs zs \\<subseteq> Inv xs ys \\<union> Inv ys zs", "by(auto simp: Inv_def) (metis before_in_setD1 not_before_in)"], ["", "lemma card_Inv_tri_ineq:\n  \"dist_perm xs ys \\<Longrightarrow> dist_perm ys zs \\<Longrightarrow>\n  card (Inv xs zs) \\<le> card(Inv xs ys) + card (Inv ys zs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dist_perm xs ys; dist_perm ys zs\\<rbrakk>\n    \\<Longrightarrow> card (Inv xs zs)\n                      \\<le> card (Inv xs ys) + card (Inv ys zs)", "using card_mono[OF _ Inv_tri_ineq[of xs ys zs]]"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (Inv xs ys \\<union> Inv ys zs); dist_perm xs ys;\n   dist_perm ys zs\\<rbrakk>\n  \\<Longrightarrow> card (Inv xs zs)\n                    \\<le> card (Inv xs ys \\<union> Inv ys zs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dist_perm xs ys; dist_perm ys zs\\<rbrakk>\n    \\<Longrightarrow> card (Inv xs zs)\n                      \\<le> card (Inv xs ys) + card (Inv ys zs)", "by auto (metis card_Un_Int finite_Invs trans_le_add1)"], ["", "end"]]}