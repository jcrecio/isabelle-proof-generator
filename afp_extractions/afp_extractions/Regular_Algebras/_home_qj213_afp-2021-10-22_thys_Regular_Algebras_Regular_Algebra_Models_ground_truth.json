{"file_name": "/home/qj213/afp-2021-10-22/thys/Regular_Algebras/Regular_Algebra_Models.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Regular_Algebras", "problem_names": ["lemma length_lang_pow_lb:\n  assumes \"\\<forall>x\\<in>X. |x| \\<ge> k\" \"x \\<in> X^n\" \n  shows \"|x| \\<ge> k*n\"", "lemma l_prod_elim: \"w\\<in>X \\<cdot> Y \\<longleftrightarrow> (\\<exists>u v. w = u@v \\<and> u\\<in>X \\<and> v\\<in>Y)\"", "lemma power_minor_var: \n  assumes \"\\<forall>w\\<in>X. k\\<le>|w|\"\n  shows \"\\<forall>w\\<in>X\\<^bsup>Suc n\\<^esup>. n*k\\<le>|w|\"", "lemma power_lb: \"(\\<forall>w\\<in>X. k\\<le>|w| ) \\<longrightarrow> (\\<forall>w. w\\<in>X\\<^bsup>Suc n\\<^esup> \\<longrightarrow> n*k\\<le>|w| )\"", "lemma prod_lb: \n  \"\\<lbrakk> (\\<forall>w\\<in>X. m \\<le> length w); (\\<forall>w\\<in>Y. n \\<le> length w) \\<rbrakk> \\<Longrightarrow> (\\<forall>w\\<in>(X\\<cdot>Y). (m+n) \\<le> length w)\"", "lemma suicide_aux_l: \n  \"\\<lbrakk> (\\<forall>w\\<in>Y. 0\\<le>length w); (\\<forall>w\\<in>X\\<^bsup>Suc n\\<^esup>. n \\<le> length w) \\<rbrakk> \\<Longrightarrow> (\\<forall>w\\<in>X\\<^bsup>Suc n \\<^esup>\\<cdot> Y. n \\<le> length w)\"", "lemma suicide_aux_r: \n  \"\\<lbrakk> (\\<forall>w\\<in>Y. 0\\<le>length w); (\\<forall>w\\<in>X\\<^bsup>Suc n\\<^esup>. n \\<le> length w) \\<rbrakk> \\<Longrightarrow> (\\<forall>w\\<in>Y \\<cdot> X\\<^bsup>Suc n\\<^esup>. n \\<le> length w)\"", "lemma word_suicide_l: \n  assumes \"\\<not> l_ewp X\" \"Y \\<noteq> {}\"  \n  shows \"(\\<forall>w\\<in>Y. \\<exists>n. w\\<notin>X\\<^bsup>Suc n \\<^esup>\\<cdot> Y)\"", "lemma word_suicide_r: \n  assumes \"\\<not> l_ewp X\" \"Y \\<noteq> {}\"  \n  shows \"(\\<forall>w\\<in>Y. \\<exists>n. w\\<notin>Y \\<cdot> X\\<^bsup>Suc n\\<^esup>)\"", "lemma word_suicide_lang_l: \"\\<lbrakk> \\<not> l_ewp X; Y \\<noteq> {} \\<rbrakk> \\<Longrightarrow> \\<exists> n. \\<not> (Y \\<le> X\\<^bsup>Suc n \\<^esup>\\<cdot> Y)\"", "lemma word_suicide_lang_r: \"\\<lbrakk> \\<not> l_ewp X; Y \\<noteq> {} \\<rbrakk> \\<Longrightarrow> \\<exists> n. \\<not> (Y \\<le> Y \\<cdot> X\\<^bsup>Suc n\\<^esup>)\"", "lemma power_dual_transfer [simp]: \n  \"power.power (1::'a) (\\<odot>) x n = x\\<^bsup>n\\<^esup>\"", "lemma aarden_aux_l:\n  \"y \\<le> x \\<cdot> y + z \\<Longrightarrow> y \\<le>  x\\<^bsup>Suc n\\<^esup> \\<cdot> y + x\\<^sup>\\<star> \\<cdot> z\"", "lemma arden_l: \n  assumes \"\\<not> l_ewp y\" \"x = y\\<cdot>x + z\" \n  shows \"x = y\\<^sup>\\<star> \\<cdot> z\"", "lemma arden_r: \n  assumes \"\\<not> l_ewp y\" \"x = x \\<cdot> y + z\" \n  shows \"x = z \\<cdot> y\\<^sup>\\<star>\"", "lemma arden_l_counter: \"\\<exists> (x::'a lan) (y::'a lan) (z::'a lan). x = y \\<cdot> x + z \\<and> x \\<noteq> y\\<^sup>\\<star> \\<cdot> z\"", "lemma arden_r_counter: \"\\<exists> (x::'a lan) (y::'a lan) (z::'a lan). x = x \\<cdot> y + z \\<and> x \\<noteq> z \\<cdot> y\\<^sup>\\<star>\"", "lemma rexp_ewp_l_ewp: \"l_ewp (lang x) = rexp_ewp x\"", "theorem regexp_ewp:\n  defines P_def: \"P(t) \\<equiv> \\<exists> t'. t \\<sim> ro(t) +\\<^sub>r t' \\<and> ro(t') = 0\\<^sub>r\"\n  shows \"P t\"", "theorem arden_regexp_l: \n  assumes \"ro(y) = 0\\<^sub>r\" \"x \\<sim> y \\<cdot>\\<^sub>r x +\\<^sub>r z\" \n  shows \"x \\<sim> y\\<^sup>\\<star>\\<^sub>r \\<cdot>\\<^sub>r z\"", "theorem arden_regexp_r: \n  assumes \"ro(y) = 0\\<^sub>r\" \"x \\<sim> x \\<cdot>\\<^sub>r y +\\<^sub>r z\" \n  shows \"x \\<sim> z \\<cdot>\\<^sub>r y\\<^sup>\\<star>\\<^sub>r\""], "translations": [["", "lemma length_lang_pow_lb:\n  assumes \"\\<forall>x\\<in>X. |x| \\<ge> k\" \"x \\<in> X^n\" \n  shows \"|x| \\<ge> k*n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<cdot> n \\<le> |x|", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>X. k \\<le> |x|\n  x \\<in> X\\<^bsup>n\\<^esup>\n\ngoal (1 subgoal):\n 1. k \\<cdot> n \\<le> |x|", "proof (induct n arbitrary: x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n        x \\<in> X\\<^bsup>0\\<^esup>\\<rbrakk>\n       \\<Longrightarrow> k \\<cdot> 0 \\<le> |x|\n 2. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n                    x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n                   \\<Longrightarrow> k \\<cdot> n \\<le> |x|;\n        \\<forall>x\\<in>X. k \\<le> |x|;\n        x \\<in> X\\<^bsup>Suc n\\<^esup>\\<rbrakk>\n       \\<Longrightarrow> k \\<cdot> Suc n \\<le> |x|", "case 0"], ["proof (state)\nthis:\n  \\<forall>x\\<in>X. k \\<le> |x|\n  x \\<in> X\\<^bsup>0\\<^esup>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n        x \\<in> X\\<^bsup>0\\<^esup>\\<rbrakk>\n       \\<Longrightarrow> k \\<cdot> 0 \\<le> |x|\n 2. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n                    x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n                   \\<Longrightarrow> k \\<cdot> n \\<le> |x|;\n        \\<forall>x\\<in>X. k \\<le> |x|;\n        x \\<in> X\\<^bsup>Suc n\\<^esup>\\<rbrakk>\n       \\<Longrightarrow> k \\<cdot> Suc n \\<le> |x|", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>X. k \\<le> |x|\n  x \\<in> X\\<^bsup>0\\<^esup>\n\ngoal (1 subgoal):\n 1. k \\<cdot> 0 \\<le> |x|", "by auto"], ["proof (state)\nthis:\n  k \\<cdot> 0 \\<le> |x|\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n                    x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n                   \\<Longrightarrow> k \\<cdot> n \\<le> |x|;\n        \\<forall>x\\<in>X. k \\<le> |x|;\n        x \\<in> X\\<^bsup>Suc n\\<^esup>\\<rbrakk>\n       \\<Longrightarrow> k \\<cdot> Suc n \\<le> |x|", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n                    x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n                   \\<Longrightarrow> k \\<cdot> n \\<le> |x|;\n        \\<forall>x\\<in>X. k \\<le> |x|;\n        x \\<in> X\\<^bsup>Suc n\\<^esup>\\<rbrakk>\n       \\<Longrightarrow> k \\<cdot> Suc n \\<le> |x|", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n   ?x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n  \\<Longrightarrow> k \\<cdot> n \\<le> |?x|\n  \\<forall>x\\<in>X. k \\<le> |x|\n  x \\<in> X\\<^bsup>Suc n\\<^esup>\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n                    x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n                   \\<Longrightarrow> k \\<cdot> n \\<le> |x|;\n        \\<forall>x\\<in>X. k \\<le> |x|;\n        x \\<in> X\\<^bsup>Suc n\\<^esup>\\<rbrakk>\n       \\<Longrightarrow> k \\<cdot> Suc n \\<le> |x|", "note hyp = this"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n   ?x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n  \\<Longrightarrow> k \\<cdot> n \\<le> |?x|\n  \\<forall>x\\<in>X. k \\<le> |x|\n  x \\<in> X\\<^bsup>Suc n\\<^esup>\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n                    x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n                   \\<Longrightarrow> k \\<cdot> n \\<le> |x|;\n        \\<forall>x\\<in>X. k \\<le> |x|;\n        x \\<in> X\\<^bsup>Suc n\\<^esup>\\<rbrakk>\n       \\<Longrightarrow> k \\<cdot> Suc n \\<le> |x|", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n   ?x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n  \\<Longrightarrow> k \\<cdot> n \\<le> |?x|\n  \\<forall>x\\<in>X. k \\<le> |x|\n  x \\<in> X\\<^bsup>Suc n\\<^esup>\n\ngoal (1 subgoal):\n 1. k \\<cdot> Suc n \\<le> |x|", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n                 x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n                \\<Longrightarrow> k \\<cdot> n \\<le> |x|;\n     \\<forall>x\\<in>X. k \\<le> |x|; x \\<in> X\\<^bsup>Suc n\\<^esup>\\<rbrakk>\n    \\<Longrightarrow> k \\<cdot> Suc n \\<le> |x|", "have \"x \\<in> X\\<^bsup>Suc n\\<^esup> \\<longleftrightarrow> (\\<exists> y z. x = y@z \\<and> y \\<in> X \\<and> z \\<in> X\\<^bsup>n\\<^esup>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> X\\<^bsup>Suc n\\<^esup>) =\n    (\\<exists>y z.\n        x = y @ z \\<and> y \\<in> X \\<and> z \\<in> X\\<^bsup>n\\<^esup>)", "by (simp add:c_prod_def times_list_def)"], ["proof (state)\nthis:\n  (x \\<in> X\\<^bsup>Suc n\\<^esup>) =\n  (\\<exists>y z.\n      x = y @ z \\<and> y \\<in> X \\<and> z \\<in> X\\<^bsup>n\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n                 x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n                \\<Longrightarrow> k \\<cdot> n \\<le> |x|;\n     \\<forall>x\\<in>X. k \\<le> |x|; x \\<in> X\\<^bsup>Suc n\\<^esup>\\<rbrakk>\n    \\<Longrightarrow> k \\<cdot> Suc n \\<le> |x|", "also"], ["proof (state)\nthis:\n  (x \\<in> X\\<^bsup>Suc n\\<^esup>) =\n  (\\<exists>y z.\n      x = y @ z \\<and> y \\<in> X \\<and> z \\<in> X\\<^bsup>n\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n                 x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n                \\<Longrightarrow> k \\<cdot> n \\<le> |x|;\n     \\<forall>x\\<in>X. k \\<le> |x|; x \\<in> X\\<^bsup>Suc n\\<^esup>\\<rbrakk>\n    \\<Longrightarrow> k \\<cdot> Suc n \\<le> |x|", "from hyp"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n   ?x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n  \\<Longrightarrow> k \\<cdot> n \\<le> |?x|\n  \\<forall>x\\<in>X. k \\<le> |x|\n  x \\<in> X\\<^bsup>Suc n\\<^esup>", "have \"... \\<longrightarrow> (\\<exists> y z. x = y@z \\<and> |y| \\<ge> k \\<and> |z| \\<ge> k*n)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n   ?x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n  \\<Longrightarrow> k \\<cdot> n \\<le> |?x|\n  \\<forall>x\\<in>X. k \\<le> |x|\n  x \\<in> X\\<^bsup>Suc n\\<^esup>\n\ngoal (1 subgoal):\n 1. (\\<exists>y z.\n        x = y @ z \\<and>\n        y \\<in> X \\<and> z \\<in> X\\<^bsup>n\\<^esup>) \\<longrightarrow>\n    (\\<exists>y z.\n        x = y @ z \\<and> k \\<le> |y| \\<and> k \\<cdot> n \\<le> |z|)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>y z.\n      x = y @ z \\<and>\n      y \\<in> X \\<and> z \\<in> X\\<^bsup>n\\<^esup>) \\<longrightarrow>\n  (\\<exists>y z. x = y @ z \\<and> k \\<le> |y| \\<and> k \\<cdot> n \\<le> |z|)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n                 x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n                \\<Longrightarrow> k \\<cdot> n \\<le> |x|;\n     \\<forall>x\\<in>X. k \\<le> |x|; x \\<in> X\\<^bsup>Suc n\\<^esup>\\<rbrakk>\n    \\<Longrightarrow> k \\<cdot> Suc n \\<le> |x|", "also"], ["proof (state)\nthis:\n  (\\<exists>y z.\n      x = y @ z \\<and>\n      y \\<in> X \\<and> z \\<in> X\\<^bsup>n\\<^esup>) \\<longrightarrow>\n  (\\<exists>y z. x = y @ z \\<and> k \\<le> |y| \\<and> k \\<cdot> n \\<le> |z|)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n                 x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n                \\<Longrightarrow> k \\<cdot> n \\<le> |x|;\n     \\<forall>x\\<in>X. k \\<le> |x|; x \\<in> X\\<^bsup>Suc n\\<^esup>\\<rbrakk>\n    \\<Longrightarrow> k \\<cdot> Suc n \\<le> |x|", "have \"... \\<longleftrightarrow> (\\<exists> y z. x = y@z \\<and> |y| \\<ge> k \\<and> |z| \\<ge> k*n \\<and> ( |x| = |y| + |z| ))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>y z.\n        x = y @ z \\<and> k \\<le> |y| \\<and> k \\<cdot> n \\<le> |z|) =\n    (\\<exists>y z.\n        x = y @ z \\<and>\n        k \\<le> |y| \\<and> k \\<cdot> n \\<le> |z| \\<and> |x| = |y| + |z|)", "by force"], ["proof (state)\nthis:\n  (\\<exists>y z.\n      x = y @ z \\<and> k \\<le> |y| \\<and> k \\<cdot> n \\<le> |z|) =\n  (\\<exists>y z.\n      x = y @ z \\<and>\n      k \\<le> |y| \\<and> k \\<cdot> n \\<le> |z| \\<and> |x| = |y| + |z|)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n                 x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n                \\<Longrightarrow> k \\<cdot> n \\<le> |x|;\n     \\<forall>x\\<in>X. k \\<le> |x|; x \\<in> X\\<^bsup>Suc n\\<^esup>\\<rbrakk>\n    \\<Longrightarrow> k \\<cdot> Suc n \\<le> |x|", "also"], ["proof (state)\nthis:\n  (\\<exists>y z.\n      x = y @ z \\<and> k \\<le> |y| \\<and> k \\<cdot> n \\<le> |z|) =\n  (\\<exists>y z.\n      x = y @ z \\<and>\n      k \\<le> |y| \\<and> k \\<cdot> n \\<le> |z| \\<and> |x| = |y| + |z|)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n                 x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n                \\<Longrightarrow> k \\<cdot> n \\<le> |x|;\n     \\<forall>x\\<in>X. k \\<le> |x|; x \\<in> X\\<^bsup>Suc n\\<^esup>\\<rbrakk>\n    \\<Longrightarrow> k \\<cdot> Suc n \\<le> |x|", "have \"... \\<longleftrightarrow> (\\<exists> y z. x = y@z \\<and> |y| \\<ge> k \\<and> |z| \\<ge> k*n \\<and> ( |x| \\<ge> (n + 1) * k ))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>y z.\n        x = y @ z \\<and>\n        k \\<le> |y| \\<and> k \\<cdot> n \\<le> |z| \\<and> |x| = |y| + |z|) =\n    (\\<exists>y z.\n        x = y @ z \\<and>\n        k \\<le> |y| \\<and>\n        k \\<cdot> n \\<le> |z| \\<and> (n + 1) \\<cdot> k \\<le> |x|)", "by (auto, metis add_mono mult.commute, force)"], ["proof (state)\nthis:\n  (\\<exists>y z.\n      x = y @ z \\<and>\n      k \\<le> |y| \\<and> k \\<cdot> n \\<le> |z| \\<and> |x| = |y| + |z|) =\n  (\\<exists>y z.\n      x = y @ z \\<and>\n      k \\<le> |y| \\<and>\n      k \\<cdot> n \\<le> |z| \\<and> (n + 1) \\<cdot> k \\<le> |x|)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>\\<forall>x\\<in>X. k \\<le> |x|;\n                 x \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n                \\<Longrightarrow> k \\<cdot> n \\<le> |x|;\n     \\<forall>x\\<in>X. k \\<le> |x|; x \\<in> X\\<^bsup>Suc n\\<^esup>\\<rbrakk>\n    \\<Longrightarrow> k \\<cdot> Suc n \\<le> |x|", "finally"], ["proof (chain)\npicking this:\n  x \\<in> X\\<^bsup>Suc n\\<^esup> \\<longrightarrow>\n  (\\<exists>y z.\n      x = y @ z \\<and>\n      k \\<le> |y| \\<and>\n      k \\<cdot> n \\<le> |z| \\<and> (n + 1) \\<cdot> k \\<le> |x|)", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> X\\<^bsup>Suc n\\<^esup> \\<longrightarrow>\n  (\\<exists>y z.\n      x = y @ z \\<and>\n      k \\<le> |y| \\<and>\n      k \\<cdot> n \\<le> |z| \\<and> (n + 1) \\<cdot> k \\<le> |x|)\n\ngoal (1 subgoal):\n 1. k \\<cdot> Suc n \\<le> |x|", "by (metis Suc_eq_plus1 hyp(3) mult.commute)"], ["proof (state)\nthis:\n  k \\<cdot> Suc n \\<le> |x|\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k \\<cdot> Suc n \\<le> |x|\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma l_prod_elim: \"w\\<in>X \\<cdot> Y \\<longleftrightarrow> (\\<exists>u v. w = u@v \\<and> u\\<in>X \\<and> v\\<in>Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<in> X \\<cdot> Y) =\n    (\\<exists>u v. w = u @ v \\<and> u \\<in> X \\<and> v \\<in> Y)", "by (simp add: c_prod_def times_list_def)"], ["", "lemma power_minor_var: \n  assumes \"\\<forall>w\\<in>X. k\\<le>|w|\"\n  shows \"\\<forall>w\\<in>X\\<^bsup>Suc n\\<^esup>. n*k\\<le>|w|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>X\\<^bsup>Suc n\\<^esup>. n \\<cdot> k \\<le> |w|", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>w\\<in>X. k \\<le> |w|\n\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>X\\<^bsup>Suc n\\<^esup>. n \\<cdot> k \\<le> |w|", "apply (auto simp add: l_prod_elim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>\\<forall>w\\<in>X. k \\<le> |w|; u \\<in> X;\n        v \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n       \\<Longrightarrow> n \\<cdot> k \\<le> |u| + |v|", "using length_lang_pow_lb trans_le_add2"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>x\\<in>?X. ?k \\<le> |x|;\n   ?x \\<in> ?X\\<^bsup>?n\\<^esup>\\<rbrakk>\n  \\<Longrightarrow> ?k \\<cdot> ?n \\<le> |?x|\n  ?i \\<le> ?j \\<Longrightarrow> ?i \\<le> ?m + ?j\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>\\<forall>w\\<in>X. k \\<le> |w|; u \\<in> X;\n        v \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n       \\<Longrightarrow> n \\<cdot> k \\<le> |u| + |v|", "by (simp add: length_lang_pow_lb trans_le_add2 mult.commute)"], ["", "lemma power_lb: \"(\\<forall>w\\<in>X. k\\<le>|w| ) \\<longrightarrow> (\\<forall>w. w\\<in>X\\<^bsup>Suc n\\<^esup> \\<longrightarrow> n*k\\<le>|w| )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>w\\<in>X. k \\<le> |w|) \\<longrightarrow>\n    (\\<forall>w.\n        w \\<in> X\\<^bsup>Suc n\\<^esup> \\<longrightarrow>\n        n \\<cdot> k \\<le> |w|)", "by (metis power_minor_var)"], ["", "lemma prod_lb: \n  \"\\<lbrakk> (\\<forall>w\\<in>X. m \\<le> length w); (\\<forall>w\\<in>Y. n \\<le> length w) \\<rbrakk> \\<Longrightarrow> (\\<forall>w\\<in>(X\\<cdot>Y). (m+n) \\<le> length w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>w\\<in>X. m \\<le> |w|;\n     \\<forall>w\\<in>Y. n \\<le> |w|\\<rbrakk>\n    \\<Longrightarrow> \\<forall>w\\<in>X \\<cdot> Y. m + n \\<le> |w|", "by (metis l_prod_elim add_le_mono length_append)"], ["", "lemma suicide_aux_l: \n  \"\\<lbrakk> (\\<forall>w\\<in>Y. 0\\<le>length w); (\\<forall>w\\<in>X\\<^bsup>Suc n\\<^esup>. n \\<le> length w) \\<rbrakk> \\<Longrightarrow> (\\<forall>w\\<in>X\\<^bsup>Suc n \\<^esup>\\<cdot> Y. n \\<le> length w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>w\\<in>Y. 0 \\<le> |w|;\n     \\<forall>w\\<in>X\\<^bsup>Suc n\\<^esup>. n \\<le> |w|\\<rbrakk>\n    \\<Longrightarrow> \\<forall>w\\<in>X\\<^bsup>Suc n\\<^esup> \\<cdot> Y.\n                         n \\<le> |w|", "apply (auto simp: l_prod_elim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v ua va.\n       \\<lbrakk>\\<forall>w\\<in>X \\<cdot> X\\<^bsup>n\\<^esup>. n \\<le> |w|;\n        v \\<in> Y; ua \\<in> X; va \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n       \\<Longrightarrow> n \\<le> |ua| + (|va| + |v|)", "apply (drule_tac x=\"ua @ va\" in bspec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v ua va.\n       \\<lbrakk>v \\<in> Y; ua \\<in> X; va \\<in> X\\<^bsup>n\\<^esup>\\<rbrakk>\n       \\<Longrightarrow> ua @ va \\<in> X \\<cdot> X\\<^bsup>n\\<^esup>\n 2. \\<And>v ua va.\n       \\<lbrakk>v \\<in> Y; ua \\<in> X; va \\<in> X\\<^bsup>n\\<^esup>;\n        n \\<le> |ua @ va|\\<rbrakk>\n       \\<Longrightarrow> n \\<le> |ua| + (|va| + |v|)", "apply (auto simp add: l_prod_elim)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma suicide_aux_r: \n  \"\\<lbrakk> (\\<forall>w\\<in>Y. 0\\<le>length w); (\\<forall>w\\<in>X\\<^bsup>Suc n\\<^esup>. n \\<le> length w) \\<rbrakk> \\<Longrightarrow> (\\<forall>w\\<in>Y \\<cdot> X\\<^bsup>Suc n\\<^esup>. n \\<le> length w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>w\\<in>Y. 0 \\<le> |w|;\n     \\<forall>w\\<in>X\\<^bsup>Suc n\\<^esup>. n \\<le> |w|\\<rbrakk>\n    \\<Longrightarrow> \\<forall>w\\<in>Y \\<cdot> X\\<^bsup>Suc n\\<^esup>.\n                         n \\<le> |w|", "by (auto, metis (full_types) le0 plus_nat.add_0 prod_lb)"], ["", "lemma word_suicide_l: \n  assumes \"\\<not> l_ewp X\" \"Y \\<noteq> {}\"  \n  shows \"(\\<forall>w\\<in>Y. \\<exists>n. w\\<notin>X\\<^bsup>Suc n \\<^esup>\\<cdot> Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>Y.\n       \\<exists>n. w \\<notin> X\\<^bsup>Suc n\\<^esup> \\<cdot> Y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>Y.\n       \\<exists>n. w \\<notin> X\\<^bsup>Suc n\\<^esup> \\<cdot> Y", "have  \"\\<forall>v\\<in>Y. 0\\<le>length v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v\\<in>Y. 0 \\<le> |v|", "by (metis le0)"], ["proof (state)\nthis:\n  \\<forall>v\\<in>Y. 0 \\<le> |v|\n\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>Y.\n       \\<exists>n. w \\<notin> X\\<^bsup>Suc n\\<^esup> \\<cdot> Y", "from assms"], ["proof (chain)\npicking this:\n  \\<not> l_ewp X\n  Y \\<noteq> {}", "have \"\\<forall>v\\<in>X. 1\\<le>length v\""], ["proof (prove)\nusing this:\n  \\<not> l_ewp X\n  Y \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<forall>v\\<in>X. 1 \\<le> |v|", "by (simp add: l_ewp_def, metis le_0_eq length_0_conv not_less_eq_eq)"], ["proof (state)\nthis:\n  \\<forall>v\\<in>X. 1 \\<le> |v|\n\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>Y.\n       \\<exists>n. w \\<notin> X\\<^bsup>Suc n\\<^esup> \\<cdot> Y", "hence \"\\<forall>w\\<in>Y. \\<exists>n. w\\<notin>X\\<^bsup>Suc n \\<^esup>\\<cdot> Y\""], ["proof (prove)\nusing this:\n  \\<forall>v\\<in>X. 1 \\<le> |v|\n\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>Y.\n       \\<exists>n. w \\<notin> X\\<^bsup>Suc n\\<^esup> \\<cdot> Y", "by (metis nat_mult_1_right power_lb suicide_aux_l le0 Suc_n_not_le_n)"], ["proof (state)\nthis:\n  \\<forall>w\\<in>Y. \\<exists>n. w \\<notin> X\\<^bsup>Suc n\\<^esup> \\<cdot> Y\n\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>Y.\n       \\<exists>n. w \\<notin> X\\<^bsup>Suc n\\<^esup> \\<cdot> Y", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>w\\<in>Y. \\<exists>n. w \\<notin> X\\<^bsup>Suc n\\<^esup> \\<cdot> Y\n\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>Y.\n       \\<exists>n. w \\<notin> X\\<^bsup>Suc n\\<^esup> \\<cdot> Y", "by metis"], ["proof (state)\nthis:\n  \\<forall>w\\<in>Y. \\<exists>n. w \\<notin> X\\<^bsup>Suc n\\<^esup> \\<cdot> Y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma word_suicide_r: \n  assumes \"\\<not> l_ewp X\" \"Y \\<noteq> {}\"  \n  shows \"(\\<forall>w\\<in>Y. \\<exists>n. w\\<notin>Y \\<cdot> X\\<^bsup>Suc n\\<^esup>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>Y.\n       \\<exists>n. w \\<notin> Y \\<cdot> X\\<^bsup>Suc n\\<^esup>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>Y.\n       \\<exists>n. w \\<notin> Y \\<cdot> X\\<^bsup>Suc n\\<^esup>", "have  \"\\<forall>v\\<in>Y. 0\\<le>length v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v\\<in>Y. 0 \\<le> |v|", "by (metis le0)"], ["proof (state)\nthis:\n  \\<forall>v\\<in>Y. 0 \\<le> |v|\n\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>Y.\n       \\<exists>n. w \\<notin> Y \\<cdot> X\\<^bsup>Suc n\\<^esup>", "from assms"], ["proof (chain)\npicking this:\n  \\<not> l_ewp X\n  Y \\<noteq> {}", "have \"\\<forall>v\\<in>X. 1\\<le>length v\""], ["proof (prove)\nusing this:\n  \\<not> l_ewp X\n  Y \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<forall>v\\<in>X. 1 \\<le> |v|", "by (simp add: l_ewp_def, metis le_0_eq length_0_conv not_less_eq_eq)"], ["proof (state)\nthis:\n  \\<forall>v\\<in>X. 1 \\<le> |v|\n\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>Y.\n       \\<exists>n. w \\<notin> Y \\<cdot> X\\<^bsup>Suc n\\<^esup>", "hence \"\\<forall>w\\<in>Y. \\<exists>n. w\\<notin>Y \\<cdot> X\\<^bsup>Suc n \\<^esup>\""], ["proof (prove)\nusing this:\n  \\<forall>v\\<in>X. 1 \\<le> |v|\n\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>Y.\n       \\<exists>n. w \\<notin> Y \\<cdot> X\\<^bsup>Suc n\\<^esup>", "by (metis nat_mult_1_right power_lb suicide_aux_r le0 Suc_n_not_le_n)"], ["proof (state)\nthis:\n  \\<forall>w\\<in>Y. \\<exists>n. w \\<notin> Y \\<cdot> X\\<^bsup>Suc n\\<^esup>\n\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>Y.\n       \\<exists>n. w \\<notin> Y \\<cdot> X\\<^bsup>Suc n\\<^esup>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>w\\<in>Y. \\<exists>n. w \\<notin> Y \\<cdot> X\\<^bsup>Suc n\\<^esup>\n\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>Y.\n       \\<exists>n. w \\<notin> Y \\<cdot> X\\<^bsup>Suc n\\<^esup>", "by metis"], ["proof (state)\nthis:\n  \\<forall>w\\<in>Y. \\<exists>n. w \\<notin> Y \\<cdot> X\\<^bsup>Suc n\\<^esup>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma word_suicide_lang_l: \"\\<lbrakk> \\<not> l_ewp X; Y \\<noteq> {} \\<rbrakk> \\<Longrightarrow> \\<exists> n. \\<not> (Y \\<le> X\\<^bsup>Suc n \\<^esup>\\<cdot> Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> l_ewp X; Y \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n.\n                         \\<not> Y \\<subseteq> X\\<^bsup>Suc n\\<^esup> \\<cdot>\n        Y", "by (metis Set.set_eqI empty_iff in_mono word_suicide_l)"], ["", "lemma word_suicide_lang_r: \"\\<lbrakk> \\<not> l_ewp X; Y \\<noteq> {} \\<rbrakk> \\<Longrightarrow> \\<exists> n. \\<not> (Y \\<le> Y \\<cdot> X\\<^bsup>Suc n\\<^esup>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> l_ewp X; Y \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n.\n                         \\<not> Y \\<subseteq> Y \\<cdot>\n        X\\<^bsup>Suc n\\<^esup>", "by (metis Set.set_eqI empty_iff in_mono word_suicide_r)"], ["", "text \\<open>These duality results cannot be relocated easily\\<close>"], ["", "context K1_algebra\nbegin"], ["", "lemma power_dual_transfer [simp]: \n  \"power.power (1::'a) (\\<odot>) x n = x\\<^bsup>n\\<^esup>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. power.power (1::'a) (\\<odot>) x n = x\\<^bsup>n\\<^esup>", "by (induct n, simp_all, metis opp_mult_def power_commutes)"], ["", "lemma aarden_aux_l:\n  \"y \\<le> x \\<cdot> y + z \\<Longrightarrow> y \\<le>  x\\<^bsup>Suc n\\<^esup> \\<cdot> y + x\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<le> x \\<cdot> y + z \\<Longrightarrow>\n    y \\<le> x\\<^bsup>Suc n\\<^esup> \\<cdot> y + x\\<^sup>\\<star> \\<cdot> z", "using dual.aarden_aux[of \"y\" \"x\" \"z\" \"n\"]"], ["proof (prove)\nusing this:\n  y \\<le> y \\<odot> x + z \\<Longrightarrow>\n  y \\<le> y \\<odot> power.power (1::'a) (\\<odot>) x (Suc n) +\n          z \\<odot> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y \\<le> x \\<cdot> y + z \\<Longrightarrow>\n    y \\<le> x\\<^bsup>Suc n\\<^esup> \\<cdot> y + x\\<^sup>\\<star> \\<cdot> z", "by (auto simp add:opp_mult_def)"], ["", "end"], ["", "lemma arden_l: \n  assumes \"\\<not> l_ewp y\" \"x = y\\<cdot>x + z\" \n  shows \"x = y\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y\\<^sup>\\<star> \\<cdot> z", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<subseteq> y\\<^sup>\\<star> \\<cdot> z\n 2. y\\<^sup>\\<star> \\<cdot> z \\<subseteq> x", "show one: \"y\\<^sup>\\<star> \\<cdot> z \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> z \\<subseteq> x", "by (metis assms(2) join_semilattice_class.add_comm left_near_kleene_algebra_class.star_inductl_eq)"], ["proof (state)\nthis:\n  y\\<^sup>\\<star> \\<cdot> z \\<subseteq> x\n\ngoal (1 subgoal):\n 1. x \\<subseteq> y\\<^sup>\\<star> \\<cdot> z", "show \"x \\<le> y\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<subseteq> y\\<^sup>\\<star> \\<cdot> z", "proof (cases \"x = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = 0 \\<Longrightarrow> x \\<subseteq> y\\<^sup>\\<star> \\<cdot> z\n 2. x \\<noteq> 0 \\<Longrightarrow> x \\<subseteq> y\\<^sup>\\<star> \\<cdot> z", "show \"x = 0 \\<Longrightarrow> x \\<le> y\\<^sup>\\<star>\\<cdot>z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = 0 \\<Longrightarrow> x \\<subseteq> y\\<^sup>\\<star> \\<cdot> z", "by simp"], ["proof (state)\nthis:\n  x = 0 \\<Longrightarrow> x \\<subseteq> y\\<^sup>\\<star> \\<cdot> z\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow> x \\<subseteq> y\\<^sup>\\<star> \\<cdot> z", "assume assms': \"x \\<noteq> 0\""], ["proof (state)\nthis:\n  x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow> x \\<subseteq> y\\<^sup>\\<star> \\<cdot> z", "have \"\\<And> n. x \\<le> y\\<^bsup>Suc n \\<^esup>\\<cdot> x + y\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       x \\<subseteq> y\\<^bsup>Suc n\\<^esup> \\<cdot> x +\n                     y\\<^sup>\\<star> \\<cdot> z", "by (metis assms(2) kleene_algebra_class.aarden_aux_l subsetI)"], ["proof (state)\nthis:\n  x \\<subseteq> y\\<^bsup>Suc ?n\\<^esup> \\<cdot> x +\n                y\\<^sup>\\<star> \\<cdot> z\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow> x \\<subseteq> y\\<^sup>\\<star> \\<cdot> z", "moreover"], ["proof (state)\nthis:\n  x \\<subseteq> y\\<^bsup>Suc ?n\\<^esup> \\<cdot> x +\n                y\\<^sup>\\<star> \\<cdot> z\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow> x \\<subseteq> y\\<^sup>\\<star> \\<cdot> z", "then"], ["proof (chain)\npicking this:\n  x \\<subseteq> y\\<^bsup>Suc ?n\\<^esup> \\<cdot> x +\n                y\\<^sup>\\<star> \\<cdot> z", "have \"\\<And> w n. w \\<in> x \\<Longrightarrow> w \\<in> y\\<^bsup>Suc n \\<^esup>\\<cdot> x \\<or> w \\<in> y\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\nusing this:\n  x \\<subseteq> y\\<^bsup>Suc ?n\\<^esup> \\<cdot> x +\n                y\\<^sup>\\<star> \\<cdot> z\n\ngoal (1 subgoal):\n 1. \\<And>w n.\n       w \\<in> x \\<Longrightarrow>\n       w \\<in> y\\<^bsup>Suc n\\<^esup> \\<cdot> x \\<or>\n       w \\<in> y\\<^sup>\\<star> \\<cdot> z", "by (force simp: plus_set_def)"], ["proof (state)\nthis:\n  ?w \\<in> x \\<Longrightarrow>\n  ?w \\<in> y\\<^bsup>Suc ?n\\<^esup> \\<cdot> x \\<or>\n  ?w \\<in> y\\<^sup>\\<star> \\<cdot> z\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow> x \\<subseteq> y\\<^sup>\\<star> \\<cdot> z", "ultimately"], ["proof (chain)\npicking this:\n  x \\<subseteq> y\\<^bsup>Suc ?n\\<^esup> \\<cdot> x +\n                y\\<^sup>\\<star> \\<cdot> z\n  ?w \\<in> x \\<Longrightarrow>\n  ?w \\<in> y\\<^bsup>Suc ?n\\<^esup> \\<cdot> x \\<or>\n  ?w \\<in> y\\<^sup>\\<star> \\<cdot> z", "show \"x \\<le> y\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\nusing this:\n  x \\<subseteq> y\\<^bsup>Suc ?n\\<^esup> \\<cdot> x +\n                y\\<^sup>\\<star> \\<cdot> z\n  ?w \\<in> x \\<Longrightarrow>\n  ?w \\<in> y\\<^bsup>Suc ?n\\<^esup> \\<cdot> x \\<or>\n  ?w \\<in> y\\<^sup>\\<star> \\<cdot> z\n\ngoal (1 subgoal):\n 1. x \\<subseteq> y\\<^sup>\\<star> \\<cdot> z", "by (metis (full_types) all_not_in_conv assms(1) subsetI word_suicide_l)"], ["proof (state)\nthis:\n  x \\<subseteq> y\\<^sup>\\<star> \\<cdot> z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<subseteq> y\\<^sup>\\<star> \\<cdot> z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma arden_r: \n  assumes \"\\<not> l_ewp y\" \"x = x \\<cdot> y + z\" \n  shows \"x = z \\<cdot> y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = z \\<cdot> y\\<^sup>\\<star>", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<subseteq> z \\<cdot> y\\<^sup>\\<star>\n 2. z \\<cdot> y\\<^sup>\\<star> \\<subseteq> x", "show one: \"z \\<cdot> y\\<^sup>\\<star> \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> y\\<^sup>\\<star> \\<subseteq> x", "by (metis assms(2) join.sup_commute kleene_algebra_class.star_inductr_var order_refl)"], ["proof (state)\nthis:\n  z \\<cdot> y\\<^sup>\\<star> \\<subseteq> x\n\ngoal (1 subgoal):\n 1. x \\<subseteq> z \\<cdot> y\\<^sup>\\<star>", "show \"x \\<le> z \\<cdot> y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<subseteq> z \\<cdot> y\\<^sup>\\<star>", "proof (cases \"x = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = 0 \\<Longrightarrow> x \\<subseteq> z \\<cdot> y\\<^sup>\\<star>\n 2. x \\<noteq> 0 \\<Longrightarrow> x \\<subseteq> z \\<cdot> y\\<^sup>\\<star>", "show \"x = 0 \\<Longrightarrow> x \\<le> z \\<cdot> y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = 0 \\<Longrightarrow> x \\<subseteq> z \\<cdot> y\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  x = 0 \\<Longrightarrow> x \\<subseteq> z \\<cdot> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow> x \\<subseteq> z \\<cdot> y\\<^sup>\\<star>", "assume assms': \"x \\<noteq> 0\""], ["proof (state)\nthis:\n  x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow> x \\<subseteq> z \\<cdot> y\\<^sup>\\<star>", "have \"\\<And> n. x \\<le> x \\<cdot> y\\<^bsup>Suc n\\<^esup> + z \\<cdot> y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       x \\<subseteq> x \\<cdot> y\\<^bsup>Suc n\\<^esup> +\n                     z \\<cdot> y\\<^sup>\\<star>", "by (metis assms(2) kleene_algebra_class.aarden_aux subsetI)"], ["proof (state)\nthis:\n  x \\<subseteq> x \\<cdot> y\\<^bsup>Suc ?n\\<^esup> +\n                z \\<cdot> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow> x \\<subseteq> z \\<cdot> y\\<^sup>\\<star>", "moreover"], ["proof (state)\nthis:\n  x \\<subseteq> x \\<cdot> y\\<^bsup>Suc ?n\\<^esup> +\n                z \\<cdot> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow> x \\<subseteq> z \\<cdot> y\\<^sup>\\<star>", "then"], ["proof (chain)\npicking this:\n  x \\<subseteq> x \\<cdot> y\\<^bsup>Suc ?n\\<^esup> +\n                z \\<cdot> y\\<^sup>\\<star>", "have \"\\<And> w n. w \\<in> x \\<Longrightarrow> w \\<in> x \\<cdot> y\\<^bsup>Suc n\\<^esup> \\<or> w \\<in> z \\<cdot> y\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x \\<subseteq> x \\<cdot> y\\<^bsup>Suc ?n\\<^esup> +\n                z \\<cdot> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>w n.\n       w \\<in> x \\<Longrightarrow>\n       w \\<in> x \\<cdot> y\\<^bsup>Suc n\\<^esup> \\<or>\n       w \\<in> z \\<cdot> y\\<^sup>\\<star>", "by (force simp: plus_set_def)"], ["proof (state)\nthis:\n  ?w \\<in> x \\<Longrightarrow>\n  ?w \\<in> x \\<cdot> y\\<^bsup>Suc ?n\\<^esup> \\<or>\n  ?w \\<in> z \\<cdot> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow> x \\<subseteq> z \\<cdot> y\\<^sup>\\<star>", "ultimately"], ["proof (chain)\npicking this:\n  x \\<subseteq> x \\<cdot> y\\<^bsup>Suc ?n\\<^esup> +\n                z \\<cdot> y\\<^sup>\\<star>\n  ?w \\<in> x \\<Longrightarrow>\n  ?w \\<in> x \\<cdot> y\\<^bsup>Suc ?n\\<^esup> \\<or>\n  ?w \\<in> z \\<cdot> y\\<^sup>\\<star>", "show \"x \\<le> z \\<cdot> y\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x \\<subseteq> x \\<cdot> y\\<^bsup>Suc ?n\\<^esup> +\n                z \\<cdot> y\\<^sup>\\<star>\n  ?w \\<in> x \\<Longrightarrow>\n  ?w \\<in> x \\<cdot> y\\<^bsup>Suc ?n\\<^esup> \\<or>\n  ?w \\<in> z \\<cdot> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x \\<subseteq> z \\<cdot> y\\<^sup>\\<star>", "by (metis (full_types) all_not_in_conv assms(1) subsetI word_suicide_r)"], ["proof (state)\nthis:\n  x \\<subseteq> z \\<cdot> y\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<subseteq> z \\<cdot> y\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The following two facts provide counterexamples to Arden's rule if the empty word property is not considered.\\<close>"], ["", "lemma arden_l_counter: \"\\<exists> (x::'a lan) (y::'a lan) (z::'a lan). x = y \\<cdot> x + z \\<and> x \\<noteq> y\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x y z.\n       x = y \\<cdot> x + z \\<and> x \\<noteq> y\\<^sup>\\<star> \\<cdot> z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x y z.\n       x = y \\<cdot> x + z \\<and> x \\<noteq> y\\<^sup>\\<star> \\<cdot> z", "have one: \"(0::'a lan) + 1 \\<cdot> 1 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 + 1 \\<cdot> 1 = 1", "by (metis ab_near_semiring_one_class.mult_onel kleene_algebra_class.dual.add_zerol)"], ["proof (state)\nthis:\n  0 + 1 \\<cdot> 1 = 1\n\ngoal (1 subgoal):\n 1. \\<exists>x y z.\n       x = y \\<cdot> x + z \\<and> x \\<noteq> y\\<^sup>\\<star> \\<cdot> z", "have two: \"(1::'a lan) \\<noteq> 1\\<^sup>\\<star> \\<cdot> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<noteq> 1\\<^sup>\\<star> \\<cdot> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<noteq> 1\\<^sup>\\<star> \\<cdot> 0", "have \"\\<exists>x\\<^sub>1. (0::'a list set) \\<noteq> x\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<^sub>1. 0 \\<noteq> x\\<^sub>1", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<^sub>1. 0 \\<noteq> x\\<^sub>1\n\ngoal (1 subgoal):\n 1. 1 \\<noteq> 1\\<^sup>\\<star> \\<cdot> 0", "hence \"(1::'a list set) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<^sub>1. 0 \\<noteq> x\\<^sub>1\n\ngoal (1 subgoal):\n 1. 1 \\<noteq> 0", "by (metis kleene_algebra_class.dual.annir kleene_algebra_class.dual.mult.right_neutral)"], ["proof (state)\nthis:\n  1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<noteq> 1\\<^sup>\\<star> \\<cdot> 0", "thus \"(1::'a list set) \\<noteq> 1\\<^sup>\\<star> \\<cdot> 0\""], ["proof (prove)\nusing this:\n  1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<noteq> 1\\<^sup>\\<star> \\<cdot> 0", "by simp"], ["proof (state)\nthis:\n  1 \\<noteq> 1\\<^sup>\\<star> \\<cdot> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 \\<noteq> 1\\<^sup>\\<star> \\<cdot> 0\n\ngoal (1 subgoal):\n 1. \\<exists>x y z.\n       x = y \\<cdot> x + z \\<and> x \\<noteq> y\\<^sup>\\<star> \\<cdot> z", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x y z.\n       x = y \\<cdot> x + z \\<and> x \\<noteq> y\\<^sup>\\<star> \\<cdot> z", "using one and two"], ["proof (prove)\nusing this:\n  0 + 1 \\<cdot> 1 = 1\n  1 \\<noteq> 1\\<^sup>\\<star> \\<cdot> 0\n\ngoal (1 subgoal):\n 1. \\<exists>x y z.\n       x = y \\<cdot> x + z \\<and> x \\<noteq> y\\<^sup>\\<star> \\<cdot> z", "by (metis kleene_algebra_class.dual.add_zerol kleene_algebra_class.dual.add_zeror)"], ["proof (state)\nthis:\n  \\<exists>x y z.\n     x = y \\<cdot> x + z \\<and> x \\<noteq> y\\<^sup>\\<star> \\<cdot> z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma arden_r_counter: \"\\<exists> (x::'a lan) (y::'a lan) (z::'a lan). x = x \\<cdot> y + z \\<and> x \\<noteq> z \\<cdot> y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x y z.\n       x = x \\<cdot> y + z \\<and> x \\<noteq> z \\<cdot> y\\<^sup>\\<star>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x y z.\n       x = x \\<cdot> y + z \\<and> x \\<noteq> z \\<cdot> y\\<^sup>\\<star>", "have one: \"(0::'a lan) + 1 \\<cdot> 1 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 + 1 \\<cdot> 1 = 1", "by (metis ab_near_semiring_one_class.mult_onel kleene_algebra_class.dual.add_zerol)"], ["proof (state)\nthis:\n  0 + 1 \\<cdot> 1 = 1\n\ngoal (1 subgoal):\n 1. \\<exists>x y z.\n       x = x \\<cdot> y + z \\<and> x \\<noteq> z \\<cdot> y\\<^sup>\\<star>", "have two: \"(1::'a lan) \\<noteq> 0 \\<cdot> 1\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<noteq> 0 \\<cdot> 1\\<^sup>\\<star>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<noteq> 0 \\<cdot> 1\\<^sup>\\<star>", "have \"\\<exists>x\\<^sub>1. (0::'a list set) \\<noteq> x\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<^sub>1. 0 \\<noteq> x\\<^sub>1", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<^sub>1. 0 \\<noteq> x\\<^sub>1\n\ngoal (1 subgoal):\n 1. 1 \\<noteq> 0 \\<cdot> 1\\<^sup>\\<star>", "hence \"(1::'a list set) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<^sub>1. 0 \\<noteq> x\\<^sub>1\n\ngoal (1 subgoal):\n 1. 1 \\<noteq> 0", "by (metis kleene_algebra_class.dual.annir kleene_algebra_class.dual.mult.right_neutral)"], ["proof (state)\nthis:\n  1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<noteq> 0 \\<cdot> 1\\<^sup>\\<star>", "thus \"(1::'a list set) \\<noteq> 0 \\<cdot> 1\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<noteq> 0 \\<cdot> 1\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  1 \\<noteq> 0 \\<cdot> 1\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 \\<noteq> 0 \\<cdot> 1\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<exists>x y z.\n       x = x \\<cdot> y + z \\<and> x \\<noteq> z \\<cdot> y\\<^sup>\\<star>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x y z.\n       x = x \\<cdot> y + z \\<and> x \\<noteq> z \\<cdot> y\\<^sup>\\<star>", "using one and two"], ["proof (prove)\nusing this:\n  0 + 1 \\<cdot> 1 = 1\n  1 \\<noteq> 0 \\<cdot> 1\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<exists>x y z.\n       x = x \\<cdot> y + z \\<and> x \\<noteq> z \\<cdot> y\\<^sup>\\<star>", "by (metis kleene_algebra_class.dual.add_zerol kleene_algebra_class.dual.add_zeror)"], ["proof (state)\nthis:\n  \\<exists>x y z.\n     x = x \\<cdot> y + z \\<and> x \\<noteq> z \\<cdot> y\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation lan_salomaa_l: Sl_algebra \"(+)\" \"(\\<cdot>)\" \"1 :: 'a lan\" 0 \"(\\<subseteq>)\" \"(\\<subset>)\" \"star\" \"l_ewp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.Sl_algebra (+) (\\<cdot>) 1 0 (\\<subseteq>) (\\<subset>) star l_ewp", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x. (1 + x)\\<^sup>\\<star> = x\\<^sup>\\<star>\n 2. \\<And>x. l_ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> l_ewp y)\n 3. \\<And>x. 1 + x \\<cdot> x\\<^sup>\\<star> = x\\<^sup>\\<star>\n 4. \\<And>y x z.\n       \\<lbrakk>\\<not> l_ewp y; x = y \\<cdot> x + z\\<rbrakk>\n       \\<Longrightarrow> x = y\\<^sup>\\<star> \\<cdot> z", "fix x y z :: \"'a lan\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x. (1 + x)\\<^sup>\\<star> = x\\<^sup>\\<star>\n 2. \\<And>x. l_ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> l_ewp y)\n 3. \\<And>x. 1 + x \\<cdot> x\\<^sup>\\<star> = x\\<^sup>\\<star>\n 4. \\<And>y x z.\n       \\<lbrakk>\\<not> l_ewp y; x = y \\<cdot> x + z\\<rbrakk>\n       \\<Longrightarrow> x = y\\<^sup>\\<star> \\<cdot> z", "show \"(1 + x)\\<^sup>\\<star> = x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + x)\\<^sup>\\<star> = x\\<^sup>\\<star>", "by (metis kleene_algebra_class.dual.star2)"], ["proof (state)\nthis:\n  (1 + x)\\<^sup>\\<star> = x\\<^sup>\\<star>\n\ngoal (3 subgoals):\n 1. \\<And>x. l_ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> l_ewp y)\n 2. \\<And>x. 1 + x \\<cdot> x\\<^sup>\\<star> = x\\<^sup>\\<star>\n 3. \\<And>y x z.\n       \\<lbrakk>\\<not> l_ewp y; x = y \\<cdot> x + z\\<rbrakk>\n       \\<Longrightarrow> x = y\\<^sup>\\<star> \\<cdot> z", "show \"l_ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> l_ewp y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l_ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> l_ewp y)", "by (simp add:l_ewp_def one_set_def one_list_def plus_set_def, metis insertCI mk_disjoint_insert)"], ["proof (state)\nthis:\n  l_ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> l_ewp y)\n\ngoal (2 subgoals):\n 1. \\<And>x. 1 + x \\<cdot> x\\<^sup>\\<star> = x\\<^sup>\\<star>\n 2. \\<And>y x z.\n       \\<lbrakk>\\<not> l_ewp y; x = y \\<cdot> x + z\\<rbrakk>\n       \\<Longrightarrow> x = y\\<^sup>\\<star> \\<cdot> z", "show \"1 + x \\<cdot> x\\<^sup>\\<star> = x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + x \\<cdot> x\\<^sup>\\<star> = x\\<^sup>\\<star>", "by (metis kleene_algebra_class.star_unfoldl_eq)"], ["proof (state)\nthis:\n  1 + x \\<cdot> x\\<^sup>\\<star> = x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>y x z.\n       \\<lbrakk>\\<not> l_ewp y; x = y \\<cdot> x + z\\<rbrakk>\n       \\<Longrightarrow> x = y\\<^sup>\\<star> \\<cdot> z", "show \"\\<not> l_ewp y \\<Longrightarrow> x = y \\<cdot> x + z \\<Longrightarrow> x = y\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> l_ewp y; x = y \\<cdot> x + z\\<rbrakk>\n    \\<Longrightarrow> x = y\\<^sup>\\<star> \\<cdot> z", "by (metis arden_l)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> l_ewp y; x = y \\<cdot> x + z\\<rbrakk>\n  \\<Longrightarrow> x = y\\<^sup>\\<star> \\<cdot> z\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation lan_salomaa_r: Sr_algebra \"(+)\" \"(\\<cdot>)\" \"1 :: 'a lan\" 0 \"(\\<subseteq>)\" \"(\\<subset>)\" \"star\" \"l_ewp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.Sr_algebra (+) (\\<cdot>) 1 0 (\\<subseteq>) (\\<subset>) star l_ewp", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. 1 + x\\<^sup>\\<star> \\<cdot> x = x\\<^sup>\\<star>\n 2. \\<And>y x z.\n       \\<lbrakk>\\<not> l_ewp y; x = x \\<cdot> y + z\\<rbrakk>\n       \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>", "fix x y z :: \"'a lan\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. 1 + x\\<^sup>\\<star> \\<cdot> x = x\\<^sup>\\<star>\n 2. \\<And>y x z.\n       \\<lbrakk>\\<not> l_ewp y; x = x \\<cdot> y + z\\<rbrakk>\n       \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>", "show \"1 + x\\<^sup>\\<star> \\<cdot> x = x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + x\\<^sup>\\<star> \\<cdot> x = x\\<^sup>\\<star>", "by (metis kleene_algebra_class.star_unfoldr_eq)"], ["proof (state)\nthis:\n  1 + x\\<^sup>\\<star> \\<cdot> x = x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>y x z.\n       \\<lbrakk>\\<not> l_ewp y; x = x \\<cdot> y + z\\<rbrakk>\n       \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>", "show \"\\<not> l_ewp y \\<Longrightarrow> x = x \\<cdot> y + z \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> l_ewp y; x = x \\<cdot> y + z\\<rbrakk>\n    \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>", "by (metis arden_r)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> l_ewp y; x = x \\<cdot> y + z\\<rbrakk>\n  \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Regular Language Model of Salomaa Algebra\\<close>"], ["", "notation\n  Atom (\"\\<langle>_\\<rangle>\") and\n  Plus (infixl \"+\\<^sub>r\" 65) and\n  Times (infixl \"\\<cdot>\\<^sub>r\" 70) and\n  Star (\"_\\<^sup>\\<star>\\<^sub>r\" [101] 100) and\n  Zero (\"0\\<^sub>r\") and\n  One (\"1\\<^sub>r\")"], ["", "fun rexp_ewp :: \"'a rexp \\<Rightarrow> bool\" where\n  \"rexp_ewp 0\\<^sub>r = False\" |\n  \"rexp_ewp 1\\<^sub>r = True\" |\n  \"rexp_ewp \\<langle>a\\<rangle> = False\" |\n  \"rexp_ewp (s +\\<^sub>r t) = (rexp_ewp s \\<or> rexp_ewp t)\" |\n  \"rexp_ewp (s \\<cdot>\\<^sub>r t) = (rexp_ewp s \\<and> rexp_ewp t)\" |\n  \"rexp_ewp (s\\<^sup>\\<star>\\<^sub>r) = True\""], ["", "abbreviation \"ro(s) \\<equiv> (if (rexp_ewp s) then 1\\<^sub>r else 0\\<^sub>r)\""], ["", "lift_definition r_ewp :: \"'a reg_lan \\<Rightarrow> bool\" is \"l_ewp\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lift_definition r_lang :: \"'a rexp \\<Rightarrow> 'a reg_lan\"  is \"lang\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rexp. lang rexp \\<in> range lang", "by (simp)"], ["", "abbreviation r_sim :: \"'a rexp \\<Rightarrow> 'a rexp \\<Rightarrow> bool\" (infix \"\\<sim>\" 50) where\n  \"p \\<sim> q \\<equiv> r_lang p = r_lang q\""], ["", "declare Rep_reg_lan [simp]"], ["", "declare Rep_reg_lan_inverse [simp]"], ["", "declare Abs_reg_lan_inverse [simp]"], ["", "lemma rexp_ewp_l_ewp: \"l_ewp (lang x) = rexp_ewp x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l_ewp (lang x) = rexp_ewp x", "proof (induct x)"], ["proof (state)\ngoal (6 subgoals):\n 1. l_ewp (lang 0\\<^sub>r) = rexp_ewp 0\\<^sub>r\n 2. l_ewp (lang 1\\<^sub>r) = rexp_ewp 1\\<^sub>r\n 3. \\<And>x. l_ewp (lang \\<langle>x\\<rangle>) = rexp_ewp \\<langle>x\\<rangle>\n 4. \\<And>x1 x2.\n       \\<lbrakk>l_ewp (lang x1) = rexp_ewp x1;\n        l_ewp (lang x2) = rexp_ewp x2\\<rbrakk>\n       \\<Longrightarrow> l_ewp (lang (x1 +\\<^sub>r x2)) =\n                         rexp_ewp (x1 +\\<^sub>r x2)\n 5. \\<And>x1 x2.\n       \\<lbrakk>l_ewp (lang x1) = rexp_ewp x1;\n        l_ewp (lang x2) = rexp_ewp x2\\<rbrakk>\n       \\<Longrightarrow> l_ewp (lang (x1 \\<cdot>\\<^sub>r x2)) =\n                         rexp_ewp (x1 \\<cdot>\\<^sub>r x2)\n 6. \\<And>x.\n       l_ewp (lang x) = rexp_ewp x \\<Longrightarrow>\n       l_ewp (lang (x\\<^sup>\\<star>\\<^sub>r)) =\n       rexp_ewp (x\\<^sup>\\<star>\\<^sub>r)", "case (Star x)"], ["proof (state)\nthis:\n  l_ewp (lang x) = rexp_ewp x\n\ngoal (6 subgoals):\n 1. l_ewp (lang 0\\<^sub>r) = rexp_ewp 0\\<^sub>r\n 2. l_ewp (lang 1\\<^sub>r) = rexp_ewp 1\\<^sub>r\n 3. \\<And>x. l_ewp (lang \\<langle>x\\<rangle>) = rexp_ewp \\<langle>x\\<rangle>\n 4. \\<And>x1 x2.\n       \\<lbrakk>l_ewp (lang x1) = rexp_ewp x1;\n        l_ewp (lang x2) = rexp_ewp x2\\<rbrakk>\n       \\<Longrightarrow> l_ewp (lang (x1 +\\<^sub>r x2)) =\n                         rexp_ewp (x1 +\\<^sub>r x2)\n 5. \\<And>x1 x2.\n       \\<lbrakk>l_ewp (lang x1) = rexp_ewp x1;\n        l_ewp (lang x2) = rexp_ewp x2\\<rbrakk>\n       \\<Longrightarrow> l_ewp (lang (x1 \\<cdot>\\<^sub>r x2)) =\n                         rexp_ewp (x1 \\<cdot>\\<^sub>r x2)\n 6. \\<And>x.\n       l_ewp (lang x) = rexp_ewp x \\<Longrightarrow>\n       l_ewp (lang (x\\<^sup>\\<star>\\<^sub>r)) =\n       rexp_ewp (x\\<^sup>\\<star>\\<^sub>r)", "thus ?case"], ["proof (prove)\nusing this:\n  l_ewp (lang x) = rexp_ewp x\n\ngoal (1 subgoal):\n 1. l_ewp (lang (x\\<^sup>\\<star>\\<^sub>r)) =\n    rexp_ewp (x\\<^sup>\\<star>\\<^sub>r)", "by (simp, metis lan_salomaa_l.EWP left_near_kleene_algebra_class.star_plus_one)"], ["proof (state)\nthis:\n  l_ewp (lang (x\\<^sup>\\<star>\\<^sub>r)) =\n  rexp_ewp (x\\<^sup>\\<star>\\<^sub>r)\n\ngoal (5 subgoals):\n 1. l_ewp (lang 0\\<^sub>r) = rexp_ewp 0\\<^sub>r\n 2. l_ewp (lang 1\\<^sub>r) = rexp_ewp 1\\<^sub>r\n 3. \\<And>x. l_ewp (lang \\<langle>x\\<rangle>) = rexp_ewp \\<langle>x\\<rangle>\n 4. \\<And>x1 x2.\n       \\<lbrakk>l_ewp (lang x1) = rexp_ewp x1;\n        l_ewp (lang x2) = rexp_ewp x2\\<rbrakk>\n       \\<Longrightarrow> l_ewp (lang (x1 +\\<^sub>r x2)) =\n                         rexp_ewp (x1 +\\<^sub>r x2)\n 5. \\<And>x1 x2.\n       \\<lbrakk>l_ewp (lang x1) = rexp_ewp x1;\n        l_ewp (lang x2) = rexp_ewp x2\\<rbrakk>\n       \\<Longrightarrow> l_ewp (lang (x1 \\<cdot>\\<^sub>r x2)) =\n                         rexp_ewp (x1 \\<cdot>\\<^sub>r x2)", "qed (simp_all add:l_ewp_def zero_set_def one_set_def one_list_def plus_set_def c_prod_def times_list_def)"], ["", "theorem regexp_ewp:\n  defines P_def: \"P(t) \\<equiv> \\<exists> t'. t \\<sim> ro(t) +\\<^sub>r t' \\<and> ro(t') = 0\\<^sub>r\"\n  shows \"P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P t", "proof (induct t)"], ["proof (state)\ngoal (6 subgoals):\n 1. P 0\\<^sub>r\n 2. P 1\\<^sub>r\n 3. \\<And>x. P \\<langle>x\\<rangle>\n 4. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk> \\<Longrightarrow> P (t1 +\\<^sub>r t2)\n 5. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk>\n       \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)\n 6. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "show \"P(0\\<^sub>r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P 0\\<^sub>r", "by (simp add:P_def r_lang_def, rule_tac x=\"0\\<^sub>r\" in exI, simp)"], ["proof (state)\nthis:\n  P 0\\<^sub>r\n\ngoal (5 subgoals):\n 1. P 1\\<^sub>r\n 2. \\<And>x. P \\<langle>x\\<rangle>\n 3. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk> \\<Longrightarrow> P (t1 +\\<^sub>r t2)\n 4. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk>\n       \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)\n 5. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. P 1\\<^sub>r\n 2. \\<And>x. P \\<langle>x\\<rangle>\n 3. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk> \\<Longrightarrow> P (t1 +\\<^sub>r t2)\n 4. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk>\n       \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)\n 5. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "fix a"], ["proof (state)\ngoal (5 subgoals):\n 1. P 1\\<^sub>r\n 2. \\<And>x. P \\<langle>x\\<rangle>\n 3. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk> \\<Longrightarrow> P (t1 +\\<^sub>r t2)\n 4. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk>\n       \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)\n 5. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "show \"P(\\<langle>a\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<langle>a\\<rangle>", "by (simp add:P_def r_lang_def, rule_tac x=\"\\<langle>a\\<rangle>\" in exI, simp)"], ["proof (state)\nthis:\n  P \\<langle>a\\<rangle>\n\ngoal (4 subgoals):\n 1. P 1\\<^sub>r\n 2. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk> \\<Longrightarrow> P (t1 +\\<^sub>r t2)\n 3. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk>\n       \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)\n 4. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. P 1\\<^sub>r\n 2. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk> \\<Longrightarrow> P (t1 +\\<^sub>r t2)\n 3. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk>\n       \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)\n 4. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "show \"P(1\\<^sub>r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P 1\\<^sub>r", "by (simp add:P_def r_lang_def, rule_tac x=\"0\\<^sub>r\" in exI, simp)"], ["proof (state)\nthis:\n  P 1\\<^sub>r\n\ngoal (3 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk> \\<Longrightarrow> P (t1 +\\<^sub>r t2)\n 2. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk>\n       \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)\n 3. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk> \\<Longrightarrow> P (t1 +\\<^sub>r t2)\n 2. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk>\n       \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)\n 3. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "fix t1 t2"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk> \\<Longrightarrow> P (t1 +\\<^sub>r t2)\n 2. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk>\n       \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)\n 3. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "assume \"P(t1)\" \"P(t2)\""], ["proof (state)\nthis:\n  P t1\n  P t2\n\ngoal (3 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk> \\<Longrightarrow> P (t1 +\\<^sub>r t2)\n 2. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk>\n       \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)\n 3. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "then"], ["proof (chain)\npicking this:\n  P t1\n  P t2", "obtain t1' t2' \n    where \"t1 \\<sim> ro(t1) +\\<^sub>r t1'\" \"ro(t1') = 0\\<^sub>r\"\n          \"t2 \\<sim> ro(t2) +\\<^sub>r t2'\" \"ro(t2') = 0\\<^sub>r\""], ["proof (prove)\nusing this:\n  P t1\n  P t2\n\ngoal (1 subgoal):\n 1. (\\<And>t1' t2'.\n        \\<lbrakk>t1 \\<sim> ro t1 +\\<^sub>r t1'; ro t1' = 0\\<^sub>r;\n         t2 \\<sim> ro t2 +\\<^sub>r t2'; ro t2' = 0\\<^sub>r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis assms rexp.distinct(1))"], ["proof (state)\nthis:\n  t1 \\<sim> ro t1 +\\<^sub>r t1'\n  ro t1' = 0\\<^sub>r\n  t2 \\<sim> ro t2 +\\<^sub>r t2'\n  ro t2' = 0\\<^sub>r\n\ngoal (3 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk> \\<Longrightarrow> P (t1 +\\<^sub>r t2)\n 2. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk>\n       \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)\n 3. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "thus \"P(t1 +\\<^sub>r t2)\""], ["proof (prove)\nusing this:\n  t1 \\<sim> ro t1 +\\<^sub>r t1'\n  ro t1' = 0\\<^sub>r\n  t2 \\<sim> ro t2 +\\<^sub>r t2'\n  ro t2' = 0\\<^sub>r\n\ngoal (1 subgoal):\n 1. P (t1 +\\<^sub>r t2)", "apply (subst P_def, transfer)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 t1' t2 t2'.\n       \\<lbrakk>lang t1 = lang (ro t1 +\\<^sub>r t1'); ro t1' = 0\\<^sub>r;\n        lang t2 = lang (ro t2 +\\<^sub>r t2'); ro t2' = 0\\<^sub>r;\n        lang t1 = lang (ro t1 +\\<^sub>r t1'); ro t1' = 0\\<^sub>r;\n        lang t2 = lang (ro t2 +\\<^sub>r t2'); ro t2' = 0\\<^sub>r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            lang (t1 +\\<^sub>r t2) =\n                            lang (ro (t1 +\\<^sub>r t2) +\\<^sub>r t') \\<and>\n                            ro t' = 0\\<^sub>r", "apply (rule_tac x=\"t1' +\\<^sub>r t2'\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 t1' t2 t2'.\n       \\<lbrakk>lang t1 = lang (ro t1 +\\<^sub>r t1'); ro t1' = 0\\<^sub>r;\n        lang t2 = lang (ro t2 +\\<^sub>r t2'); ro t2' = 0\\<^sub>r;\n        lang t1 = lang (ro t1 +\\<^sub>r t1'); ro t1' = 0\\<^sub>r;\n        lang t2 = lang (ro t2 +\\<^sub>r t2'); ro t2' = 0\\<^sub>r\\<rbrakk>\n       \\<Longrightarrow> lang (t1 +\\<^sub>r t2) =\n                         lang\n                          (ro (t1 +\\<^sub>r t2) +\\<^sub>r\n                           (t1' +\\<^sub>r t2')) \\<and>\n                         ro (t1' +\\<^sub>r t2') = 0\\<^sub>r", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 t1' t2 t2'.\n       \\<lbrakk>lang t1 = lang (ro t1) + lang t1'; ro t1' = 0\\<^sub>r;\n        lang t2 = lang (ro t2) + lang t2'; ro t2' = 0\\<^sub>r\\<rbrakk>\n       \\<Longrightarrow> (rexp_ewp t1 \\<longrightarrow>\n                          (rexp_ewp t2 \\<longrightarrow>\n                           \\<not> rexp_ewp t1' \\<and>\n                           \\<not> rexp_ewp t2' \\<and>\n                           (\\<not> rexp_ewp t1' \\<and>\n                            \\<not> rexp_ewp t2' \\<longrightarrow>\n                            1 + lang t1' + (1 + lang t2') =\n                            1 + (lang t1' + lang t2'))) \\<and>\n                          (\\<not> rexp_ewp t2 \\<longrightarrow>\n                           \\<not> rexp_ewp t1' \\<and>\n                           \\<not> rexp_ewp t2' \\<and>\n                           (\\<not> rexp_ewp t1' \\<and>\n                            \\<not> rexp_ewp t2' \\<longrightarrow>\n                            1 + lang t1' + lang t2' =\n                            1 + (lang t1' + lang t2')))) \\<and>\n                         (\\<not> rexp_ewp t1 \\<longrightarrow>\n                          (rexp_ewp t2 \\<longrightarrow>\n                           \\<not> rexp_ewp t1' \\<and>\n                           \\<not> rexp_ewp t2' \\<and>\n                           (\\<not> rexp_ewp t1' \\<and>\n                            \\<not> rexp_ewp t2' \\<longrightarrow>\n                            lang t1' + (1 + lang t2') =\n                            1 + (lang t1' + lang t2'))) \\<and>\n                          (\\<not> rexp_ewp t2 \\<longrightarrow>\n                           \\<not> rexp_ewp t1' \\<and> \\<not> rexp_ewp t2'))", "by (metis (no_types, lifting) add.left_commute join.sup_assoc join.sup_left_idem rexp.distinct(2))"], ["proof (state)\nthis:\n  P (t1 +\\<^sub>r t2)\n\ngoal (2 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk>\n       \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)\n 2. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk>\n       \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)\n 2. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "fix t1 t2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk>\n       \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)\n 2. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "assume \"P(t1)\" \"P(t2)\""], ["proof (state)\nthis:\n  P t1\n  P t2\n\ngoal (2 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk>\n       \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)\n 2. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "then"], ["proof (chain)\npicking this:\n  P t1\n  P t2", "obtain t1' t2' \n    where t1: \"t1 \\<sim> ro(t1) +\\<^sub>r t1'\" \"ro(t1') = 0\\<^sub>r\" and\n          t2: \"t2 \\<sim> ro(t2) +\\<^sub>r t2'\" \"ro(t2') = 0\\<^sub>r\""], ["proof (prove)\nusing this:\n  P t1\n  P t2\n\ngoal (1 subgoal):\n 1. (\\<And>t1' t2'.\n        \\<lbrakk>t1 \\<sim> ro t1 +\\<^sub>r t1'; ro t1' = 0\\<^sub>r;\n         t2 \\<sim> ro t2 +\\<^sub>r t2'; ro t2' = 0\\<^sub>r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis assms rexp.distinct(1))"], ["proof (state)\nthis:\n  t1 \\<sim> ro t1 +\\<^sub>r t1'\n  ro t1' = 0\\<^sub>r\n  t2 \\<sim> ro t2 +\\<^sub>r t2'\n  ro t2' = 0\\<^sub>r\n\ngoal (2 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>P t1; P t2\\<rbrakk>\n       \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)\n 2. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "thus \"P(t1 \\<cdot>\\<^sub>r t2)\""], ["proof (prove)\nusing this:\n  t1 \\<sim> ro t1 +\\<^sub>r t1'\n  ro t1' = 0\\<^sub>r\n  t2 \\<sim> ro t2 +\\<^sub>r t2'\n  ro t2' = 0\\<^sub>r\n\ngoal (1 subgoal):\n 1. P (t1 \\<cdot>\\<^sub>r t2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<sim> ro t1 +\\<^sub>r t1'; ro t1' = 0\\<^sub>r;\n     t2 \\<sim> ro t2 +\\<^sub>r t2'; ro t2' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)", "let ?t' = \"ro(t1) \\<cdot>\\<^sub>r t2' +\\<^sub>r t1' \\<cdot>\\<^sub>r ro(t2) +\\<^sub>r t1' \\<cdot>\\<^sub>r t2'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<sim> ro t1 +\\<^sub>r t1'; ro t1' = 0\\<^sub>r;\n     t2 \\<sim> ro t2 +\\<^sub>r t2'; ro t2' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)", "from t1 t2"], ["proof (chain)\npicking this:\n  t1 \\<sim> ro t1 +\\<^sub>r t1'\n  ro t1' = 0\\<^sub>r\n  t2 \\<sim> ro t2 +\\<^sub>r t2'\n  ro t2' = 0\\<^sub>r", "have r1: \"ro(?t') = 0\\<^sub>r\""], ["proof (prove)\nusing this:\n  t1 \\<sim> ro t1 +\\<^sub>r t1'\n  ro t1' = 0\\<^sub>r\n  t2 \\<sim> ro t2 +\\<^sub>r t2'\n  ro t2' = 0\\<^sub>r\n\ngoal (1 subgoal):\n 1. ro (ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r\n        t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n        t1' \\<cdot>\\<^sub>r t2') =\n    0\\<^sub>r", "by (auto)"], ["proof (state)\nthis:\n  ro (ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r\n      t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n      t1' \\<cdot>\\<^sub>r t2') =\n  0\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<sim> ro t1 +\\<^sub>r t1'; ro t1' = 0\\<^sub>r;\n     t2 \\<sim> ro t2 +\\<^sub>r t2'; ro t2' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)", "from t1 t2"], ["proof (chain)\npicking this:\n  t1 \\<sim> ro t1 +\\<^sub>r t1'\n  ro t1' = 0\\<^sub>r\n  t2 \\<sim> ro t2 +\\<^sub>r t2'\n  ro t2' = 0\\<^sub>r", "have \"t1 \\<cdot>\\<^sub>r t2 \\<sim> (ro(t1) +\\<^sub>r t1') \\<cdot>\\<^sub>r (ro(t2) +\\<^sub>r t2')\" (is \"?l \\<sim> ?r\")"], ["proof (prove)\nusing this:\n  t1 \\<sim> ro t1 +\\<^sub>r t1'\n  ro t1' = 0\\<^sub>r\n  t2 \\<sim> ro t2 +\\<^sub>r t2'\n  ro t2' = 0\\<^sub>r\n\ngoal (1 subgoal):\n 1. t1 \\<cdot>\\<^sub>r t2 \\<sim>\n    (ro t1 +\\<^sub>r t1') \\<cdot>\\<^sub>r (ro t2 +\\<^sub>r t2')", "by (transfer, simp)"], ["proof (state)\nthis:\n  t1 \\<cdot>\\<^sub>r t2 \\<sim>\n  (ro t1 +\\<^sub>r t1') \\<cdot>\\<^sub>r (ro t2 +\\<^sub>r t2')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<sim> ro t1 +\\<^sub>r t1'; ro t1' = 0\\<^sub>r;\n     t2 \\<sim> ro t2 +\\<^sub>r t2'; ro t2' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)", "also"], ["proof (state)\nthis:\n  t1 \\<cdot>\\<^sub>r t2 \\<sim>\n  (ro t1 +\\<^sub>r t1') \\<cdot>\\<^sub>r (ro t2 +\\<^sub>r t2')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<sim> ro t1 +\\<^sub>r t1'; ro t1' = 0\\<^sub>r;\n     t2 \\<sim> ro t2 +\\<^sub>r t2'; ro t2' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)", "have \"?r \\<sim> ro(t1) \\<cdot>\\<^sub>r ro(t2) +\\<^sub>r ro(t1) \\<cdot>\\<^sub>r t2' +\\<^sub>r t1' \\<cdot>\\<^sub>r ro(t2) +\\<^sub>r t1' \\<cdot>\\<^sub>r t2'\" (is \"?l \\<sim> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ro t1 +\\<^sub>r t1') \\<cdot>\\<^sub>r (ro t2 +\\<^sub>r t2') \\<sim>\n    ro t1 \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n    ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r\n    t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n    t1' \\<cdot>\\<^sub>r t2'", "apply (transfer, unfold lang.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 t1' t2 t2'.\n       (lang (ro t1) + lang t1') \\<cdot> (lang (ro t2) + lang t2') =\n       lang (ro t1) \\<cdot> lang (ro t2) + lang (ro t1) \\<cdot> lang t2' +\n       lang t1' \\<cdot> lang (ro t2) +\n       lang t1' \\<cdot> lang t2'", "apply (simp only: distrib_right' semiring_class.distrib_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 t1' t2 t2'.\n       (lang (ro t1) + lang t1') \\<cdot> lang (ro t2) +\n       (lang (ro t1) + lang t1') \\<cdot> lang t2' =\n       lang (ro t1) \\<cdot> lang (ro t2) + lang (ro t1) \\<cdot> lang t2' +\n       lang t1' \\<cdot> lang (ro t2) +\n       lang t1' \\<cdot> lang t2'", "apply (metis (hide_lams, no_types) join_semilattice_class.add_comm semiring_class.combine_common_factor)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (ro t1 +\\<^sub>r t1') \\<cdot>\\<^sub>r (ro t2 +\\<^sub>r t2') \\<sim>\n  ro t1 \\<cdot>\\<^sub>r ro t2 +\\<^sub>r ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r\n  t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n  t1' \\<cdot>\\<^sub>r t2'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<sim> ro t1 +\\<^sub>r t1'; ro t1' = 0\\<^sub>r;\n     t2 \\<sim> ro t2 +\\<^sub>r t2'; ro t2' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)", "also"], ["proof (state)\nthis:\n  (ro t1 +\\<^sub>r t1') \\<cdot>\\<^sub>r (ro t2 +\\<^sub>r t2') \\<sim>\n  ro t1 \\<cdot>\\<^sub>r ro t2 +\\<^sub>r ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r\n  t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n  t1' \\<cdot>\\<^sub>r t2'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<sim> ro t1 +\\<^sub>r t1'; ro t1' = 0\\<^sub>r;\n     t2 \\<sim> ro t2 +\\<^sub>r t2'; ro t2' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)", "have \"?r \\<sim> ro(t1 \\<cdot>\\<^sub>r t2) +\\<^sub>r ro(t1) \\<cdot>\\<^sub>r t2' +\\<^sub>r t1' \\<cdot>\\<^sub>r ro(t2) +\\<^sub>r t1' \\<cdot>\\<^sub>r t2'\" (is \"?l \\<sim> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ro t1 \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n    ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r\n    t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n    t1' \\<cdot>\\<^sub>r t2' \\<sim>\n    ro (t1 \\<cdot>\\<^sub>r t2) +\\<^sub>r ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r\n    t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n    t1' \\<cdot>\\<^sub>r t2'", "by (transfer, simp)"], ["proof (state)\nthis:\n  ro t1 \\<cdot>\\<^sub>r ro t2 +\\<^sub>r ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r\n  t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n  t1' \\<cdot>\\<^sub>r t2' \\<sim>\n  ro (t1 \\<cdot>\\<^sub>r t2) +\\<^sub>r ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r\n  t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n  t1' \\<cdot>\\<^sub>r t2'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<sim> ro t1 +\\<^sub>r t1'; ro t1' = 0\\<^sub>r;\n     t2 \\<sim> ro t2 +\\<^sub>r t2'; ro t2' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)", "also"], ["proof (state)\nthis:\n  ro t1 \\<cdot>\\<^sub>r ro t2 +\\<^sub>r ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r\n  t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n  t1' \\<cdot>\\<^sub>r t2' \\<sim>\n  ro (t1 \\<cdot>\\<^sub>r t2) +\\<^sub>r ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r\n  t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n  t1' \\<cdot>\\<^sub>r t2'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<sim> ro t1 +\\<^sub>r t1'; ro t1' = 0\\<^sub>r;\n     t2 \\<sim> ro t2 +\\<^sub>r t2'; ro t2' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)", "have \"?r \\<sim> ro(t1 \\<cdot>\\<^sub>r t2) +\\<^sub>r ?t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ro (t1 \\<cdot>\\<^sub>r t2) +\\<^sub>r ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r\n    t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n    t1' \\<cdot>\\<^sub>r t2' \\<sim>\n    ro (t1 \\<cdot>\\<^sub>r t2) +\\<^sub>r\n    (ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n     t1' \\<cdot>\\<^sub>r t2')", "apply (transfer, unfold lang.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 t2 t2' t1'.\n       lang (ro (t1 \\<cdot>\\<^sub>r t2)) + lang (ro t1) \\<cdot> lang t2' +\n       lang t1' \\<cdot> lang (ro t2) +\n       lang t1' \\<cdot> lang t2' =\n       lang (ro (t1 \\<cdot>\\<^sub>r t2)) +\n       (lang (ro t1) \\<cdot> lang t2' + lang t1' \\<cdot> lang (ro t2) +\n        lang t1' \\<cdot> lang t2')", "apply (metis (mono_tags) join_semilattice_class.add_assoc')"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ro (t1 \\<cdot>\\<^sub>r t2) +\\<^sub>r ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r\n  t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n  t1' \\<cdot>\\<^sub>r t2' \\<sim>\n  ro (t1 \\<cdot>\\<^sub>r t2) +\\<^sub>r\n  (ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n   t1' \\<cdot>\\<^sub>r t2')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<sim> ro t1 +\\<^sub>r t1'; ro t1' = 0\\<^sub>r;\n     t2 \\<sim> ro t2 +\\<^sub>r t2'; ro t2' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (t1 \\<cdot>\\<^sub>r t2)", "finally"], ["proof (chain)\npicking this:\n  t1 \\<cdot>\\<^sub>r t2 \\<sim>\n  ro (t1 \\<cdot>\\<^sub>r t2) +\\<^sub>r\n  (ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n   t1' \\<cdot>\\<^sub>r t2')", "show ?thesis"], ["proof (prove)\nusing this:\n  t1 \\<cdot>\\<^sub>r t2 \\<sim>\n  ro (t1 \\<cdot>\\<^sub>r t2) +\\<^sub>r\n  (ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n   t1' \\<cdot>\\<^sub>r t2')\n\ngoal (1 subgoal):\n 1. P (t1 \\<cdot>\\<^sub>r t2)", "using r1"], ["proof (prove)\nusing this:\n  t1 \\<cdot>\\<^sub>r t2 \\<sim>\n  ro (t1 \\<cdot>\\<^sub>r t2) +\\<^sub>r\n  (ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n   t1' \\<cdot>\\<^sub>r t2')\n  ro (ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r\n      t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n      t1' \\<cdot>\\<^sub>r t2') =\n  0\\<^sub>r\n\ngoal (1 subgoal):\n 1. P (t1 \\<cdot>\\<^sub>r t2)", "apply (unfold P_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<cdot>\\<^sub>r t2 \\<sim>\n             ro (t1 \\<cdot>\\<^sub>r t2) +\\<^sub>r\n             (ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r\n              t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n              t1' \\<cdot>\\<^sub>r t2');\n     ro (ro t1 \\<cdot>\\<^sub>r t2' +\\<^sub>r\n         t1' \\<cdot>\\<^sub>r ro t2 +\\<^sub>r\n         t1' \\<cdot>\\<^sub>r t2') =\n     0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t'.\n                         t1 \\<cdot>\\<^sub>r t2 \\<sim>\n                         ro (t1 \\<cdot>\\<^sub>r t2) +\\<^sub>r t' \\<and>\n                         ro t' = 0\\<^sub>r", "apply (rule_tac x=\"?t'\" in exI, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  P (t1 \\<cdot>\\<^sub>r t2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P (t1 \\<cdot>\\<^sub>r t2)\n\ngoal (1 subgoal):\n 1. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "assume assm:\"P s\""], ["proof (state)\nthis:\n  P s\n\ngoal (1 subgoal):\n 1. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "then"], ["proof (chain)\npicking this:\n  P s", "obtain s' where r1: \"s \\<sim> ro(s) +\\<^sub>r s'\" \"ro(s') = 0\\<^sub>r\""], ["proof (prove)\nusing this:\n  P s\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>s \\<sim> ro s +\\<^sub>r s'; ro s' = 0\\<^sub>r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis assms rexp.distinct(1))"], ["proof (state)\nthis:\n  s \\<sim> ro s +\\<^sub>r s'\n  ro s' = 0\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<And>t. P t \\<Longrightarrow> P (t\\<^sup>\\<star>\\<^sub>r)", "thus \"P (s\\<^sup>\\<star>\\<^sub>r)\""], ["proof (prove)\nusing this:\n  s \\<sim> ro s +\\<^sub>r s'\n  ro s' = 0\\<^sub>r\n\ngoal (1 subgoal):\n 1. P (s\\<^sup>\\<star>\\<^sub>r)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<sim> ro s +\\<^sub>r s'; ro s' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (s\\<^sup>\\<star>\\<^sub>r)", "let ?t' = \"s' \\<cdot>\\<^sub>r (s')\\<^sup>\\<star>\\<^sub>r\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<sim> ro s +\\<^sub>r s'; ro s' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (s\\<^sup>\\<star>\\<^sub>r)", "have r2: \"ro(?t') = 0\\<^sub>r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ro (s' \\<cdot>\\<^sub>r s'\\<^sup>\\<star>\\<^sub>r) = 0\\<^sub>r", "by (metis r1(2) rexp.distinct(1) rexp_ewp.simps(5))"], ["proof (state)\nthis:\n  ro (s' \\<cdot>\\<^sub>r s'\\<^sup>\\<star>\\<^sub>r) = 0\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<sim> ro s +\\<^sub>r s'; ro s' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (s\\<^sup>\\<star>\\<^sub>r)", "from assm r1"], ["proof (chain)\npicking this:\n  P s\n  s \\<sim> ro s +\\<^sub>r s'\n  ro s' = 0\\<^sub>r", "have \"(ro(s) +\\<^sub>r s')\\<^sup>\\<star>\\<^sub>r \\<sim> (s')\\<^sup>\\<star>\\<^sub>r\" (is \"?l \\<sim> ?r\")"], ["proof (prove)\nusing this:\n  P s\n  s \\<sim> ro s +\\<^sub>r s'\n  ro s' = 0\\<^sub>r\n\ngoal (1 subgoal):\n 1. (ro s +\\<^sub>r s')\\<^sup>\\<star>\\<^sub>r \\<sim>\n    s'\\<^sup>\\<star>\\<^sub>r", "by (transfer, auto)"], ["proof (state)\nthis:\n  (ro s +\\<^sub>r s')\\<^sup>\\<star>\\<^sub>r \\<sim> s'\\<^sup>\\<star>\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<sim> ro s +\\<^sub>r s'; ro s' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (s\\<^sup>\\<star>\\<^sub>r)", "also"], ["proof (state)\nthis:\n  (ro s +\\<^sub>r s')\\<^sup>\\<star>\\<^sub>r \\<sim> s'\\<^sup>\\<star>\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<sim> ro s +\\<^sub>r s'; ro s' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (s\\<^sup>\\<star>\\<^sub>r)", "have \"?r \\<sim> 1\\<^sub>r +\\<^sub>r s' \\<cdot>\\<^sub>r (s')\\<^sup>\\<star>\\<^sub>r\" (is \"?l \\<sim> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. s'\\<^sup>\\<star>\\<^sub>r \\<sim>\n    1\\<^sub>r +\\<^sub>r s' \\<cdot>\\<^sub>r s'\\<^sup>\\<star>\\<^sub>r", "by (transfer, auto)"], ["proof (state)\nthis:\n  s'\\<^sup>\\<star>\\<^sub>r \\<sim>\n  1\\<^sub>r +\\<^sub>r s' \\<cdot>\\<^sub>r s'\\<^sup>\\<star>\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<sim> ro s +\\<^sub>r s'; ro s' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (s\\<^sup>\\<star>\\<^sub>r)", "also"], ["proof (state)\nthis:\n  s'\\<^sup>\\<star>\\<^sub>r \\<sim>\n  1\\<^sub>r +\\<^sub>r s' \\<cdot>\\<^sub>r s'\\<^sup>\\<star>\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<sim> ro s +\\<^sub>r s'; ro s' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (s\\<^sup>\\<star>\\<^sub>r)", "have \"?r \\<sim> ro(s\\<^sup>\\<star>\\<^sub>r) +\\<^sub>r ?t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1\\<^sub>r +\\<^sub>r s' \\<cdot>\\<^sub>r s'\\<^sup>\\<star>\\<^sub>r \\<sim>\n    ro (s\\<^sup>\\<star>\\<^sub>r) +\\<^sub>r\n    s' \\<cdot>\\<^sub>r s'\\<^sup>\\<star>\\<^sub>r", "by (metis (full_types) rexp_ewp.simps(6))"], ["proof (state)\nthis:\n  1\\<^sub>r +\\<^sub>r s' \\<cdot>\\<^sub>r s'\\<^sup>\\<star>\\<^sub>r \\<sim>\n  ro (s\\<^sup>\\<star>\\<^sub>r) +\\<^sub>r\n  s' \\<cdot>\\<^sub>r s'\\<^sup>\\<star>\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<sim> ro s +\\<^sub>r s'; ro s' = 0\\<^sub>r\\<rbrakk>\n    \\<Longrightarrow> P (s\\<^sup>\\<star>\\<^sub>r)", "finally"], ["proof (chain)\npicking this:\n  (ro s +\\<^sub>r s')\\<^sup>\\<star>\\<^sub>r \\<sim>\n  ro (s\\<^sup>\\<star>\\<^sub>r) +\\<^sub>r\n  s' \\<cdot>\\<^sub>r s'\\<^sup>\\<star>\\<^sub>r", "show ?thesis"], ["proof (prove)\nusing this:\n  (ro s +\\<^sub>r s')\\<^sup>\\<star>\\<^sub>r \\<sim>\n  ro (s\\<^sup>\\<star>\\<^sub>r) +\\<^sub>r\n  s' \\<cdot>\\<^sub>r s'\\<^sup>\\<star>\\<^sub>r\n\ngoal (1 subgoal):\n 1. P (s\\<^sup>\\<star>\\<^sub>r)", "by (metis assms lang.simps(6) r1(1) r2 r_lang.abs_eq r_lang.rep_eq)"], ["proof (state)\nthis:\n  P (s\\<^sup>\\<star>\\<^sub>r)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P (s\\<^sup>\\<star>\\<^sub>r)\n\ngoal:\nNo subgoals!", "qed"], ["", "instantiation reg_lan :: (type) Sr_algebra\nbegin"], ["", "lift_definition ewp_reg_lan :: \"'a reg_lan \\<Rightarrow> bool\" is \"l_ewp\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a reg_lan, Sr_algebra_class)", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x. (1 + x)\\<^sup>\\<star> = x\\<^sup>\\<star>\n 2. \\<And>x. ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> ewp y)\n 3. \\<And>x. 1 + x\\<^sup>\\<star> \\<cdot> x = x\\<^sup>\\<star>\n 4. \\<And>y x z.\n       \\<lbrakk>\\<not> ewp y; x = x \\<cdot> y + z\\<rbrakk>\n       \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>", "fix x :: \"'a reg_lan\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x. (1 + x)\\<^sup>\\<star> = x\\<^sup>\\<star>\n 2. \\<And>x. ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> ewp y)\n 3. \\<And>x. 1 + x\\<^sup>\\<star> \\<cdot> x = x\\<^sup>\\<star>\n 4. \\<And>y x z.\n       \\<lbrakk>\\<not> ewp y; x = x \\<cdot> y + z\\<rbrakk>\n       \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>", "show \"(1 + x)\\<^sup>\\<star> = x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + x)\\<^sup>\\<star> = x\\<^sup>\\<star>", "by (metis kleene_algebra_class.dual.star2)"], ["proof (state)\nthis:\n  (1 + x)\\<^sup>\\<star> = x\\<^sup>\\<star>\n\ngoal (3 subgoals):\n 1. \\<And>x. ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> ewp y)\n 2. \\<And>x. 1 + x\\<^sup>\\<star> \\<cdot> x = x\\<^sup>\\<star>\n 3. \\<And>y x z.\n       \\<lbrakk>\\<not> ewp y; x = x \\<cdot> y + z\\<rbrakk>\n       \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> ewp y)\n 2. \\<And>x. 1 + x\\<^sup>\\<star> \\<cdot> x = x\\<^sup>\\<star>\n 3. \\<And>y x z.\n       \\<lbrakk>\\<not> ewp y; x = x \\<cdot> y + z\\<rbrakk>\n       \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>", "fix x :: \"'a reg_lan\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> ewp y)\n 2. \\<And>x. 1 + x\\<^sup>\\<star> \\<cdot> x = x\\<^sup>\\<star>\n 3. \\<And>y x z.\n       \\<lbrakk>\\<not> ewp y; x = x \\<cdot> y + z\\<rbrakk>\n       \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>", "show \"1 + x\\<^sup>\\<star> \\<cdot> x = x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + x\\<^sup>\\<star> \\<cdot> x = x\\<^sup>\\<star>", "by (metis kleene_algebra_class.star_unfoldr_eq)"], ["proof (state)\nthis:\n  1 + x\\<^sup>\\<star> \\<cdot> x = x\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. \\<And>x. ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> ewp y)\n 2. \\<And>y x z.\n       \\<lbrakk>\\<not> ewp y; x = x \\<cdot> y + z\\<rbrakk>\n       \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> ewp y)\n 2. \\<And>y x z.\n       \\<lbrakk>\\<not> ewp y; x = x \\<cdot> y + z\\<rbrakk>\n       \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>", "fix x :: \"'a reg_lan\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> ewp y)\n 2. \\<And>y x z.\n       \\<lbrakk>\\<not> ewp y; x = x \\<cdot> y + z\\<rbrakk>\n       \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>", "show \"ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> ewp y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> ewp y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> ewp y)", "obtain t where \"r_lang t = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t. r_lang t = x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (transfer, auto)"], ["proof (state)\nthis:\n  r_lang t = x\n\ngoal (1 subgoal):\n 1. ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> ewp y)", "moreover"], ["proof (state)\nthis:\n  r_lang t = x\n\ngoal (1 subgoal):\n 1. ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> ewp y)", "obtain t' where \"t \\<sim> ro(t) +\\<^sub>r t'\" \"ro(t') = 0\\<^sub>r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>t \\<sim> ro t +\\<^sub>r t'; ro t' = 0\\<^sub>r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis regexp_ewp)"], ["proof (state)\nthis:\n  t \\<sim> ro t +\\<^sub>r t'\n  ro t' = 0\\<^sub>r\n\ngoal (1 subgoal):\n 1. ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> ewp y)", "ultimately"], ["proof (chain)\npicking this:\n  r_lang t = x\n  t \\<sim> ro t +\\<^sub>r t'\n  ro t' = 0\\<^sub>r", "show ?thesis"], ["proof (prove)\nusing this:\n  r_lang t = x\n  t \\<sim> ro t +\\<^sub>r t'\n  ro t' = 0\\<^sub>r\n\ngoal (1 subgoal):\n 1. ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> ewp y)", "apply (transfer, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ta t'a xa.\n       \\<lbrakk>lang ta = lang xa; ro t'a = 0\\<^sub>r;\n        t \\<sim> ro t +\\<^sub>r t'; ro t' = 0\\<^sub>r;\n        x = r_lang (ro t +\\<^sub>r t'); lang (ro ta) + lang t'a = lang xa;\n        l_ewp (lang xa)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            lang xa = 1 + lang y \\<and>\n                            \\<not> l_ewp (lang y)\n 2. \\<And>ta t'a xa y.\n       \\<lbrakk>lang ta = lang xa; ro t'a = 0\\<^sub>r;\n        t \\<sim> ro t +\\<^sub>r t'; ro t' = 0\\<^sub>r;\n        x = r_lang (ro t +\\<^sub>r t'); 1 + lang y = lang xa;\n        lang (ro ta) + lang t'a = lang xa; \\<not> l_ewp (lang y)\\<rbrakk>\n       \\<Longrightarrow> l_ewp (lang xa)", "apply (metis (full_types) lang.simps(2) rexp.distinct(1) rexp_ewp_l_ewp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ta t'a xa y.\n       \\<lbrakk>lang ta = lang xa; ro t'a = 0\\<^sub>r;\n        t \\<sim> ro t +\\<^sub>r t'; ro t' = 0\\<^sub>r;\n        x = r_lang (ro t +\\<^sub>r t'); 1 + lang y = lang xa;\n        lang (ro ta) + lang t'a = lang xa; \\<not> l_ewp (lang y)\\<rbrakk>\n       \\<Longrightarrow> l_ewp (lang xa)", "apply (metis lan_salomaa_l.EWP)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> ewp y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ewp x = (\\<exists>y. x = 1 + y \\<and> \\<not> ewp y)\n\ngoal (1 subgoal):\n 1. \\<And>y x z.\n       \\<lbrakk>\\<not> ewp y; x = x \\<cdot> y + z\\<rbrakk>\n       \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y x z.\n       \\<lbrakk>\\<not> ewp y; x = x \\<cdot> y + z\\<rbrakk>\n       \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>", "fix x y z :: \"'a reg_lan\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y x z.\n       \\<lbrakk>\\<not> ewp y; x = x \\<cdot> y + z\\<rbrakk>\n       \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>", "show \"\\<lbrakk> \\<not> ewp y; x = x \\<cdot> y + z \\<rbrakk> \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> ewp y; x = x \\<cdot> y + z\\<rbrakk>\n    \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>", "by (transfer, metis lan_salomaa_r.Ar)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> ewp y; x = x \\<cdot> y + z\\<rbrakk>\n  \\<Longrightarrow> x = z \\<cdot> y\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "instantiation reg_lan :: (type) Sl_algebra\nbegin"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a reg_lan, Sl_algebra_class)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. 1 + x \\<cdot> x\\<^sup>\\<star> = x\\<^sup>\\<star>\n 2. \\<And>y x z.\n       \\<lbrakk>\\<not> ewp y; x = y \\<cdot> x + z\\<rbrakk>\n       \\<Longrightarrow> x = y\\<^sup>\\<star> \\<cdot> z", "fix x :: \"'a reg_lan\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. 1 + x \\<cdot> x\\<^sup>\\<star> = x\\<^sup>\\<star>\n 2. \\<And>y x z.\n       \\<lbrakk>\\<not> ewp y; x = y \\<cdot> x + z\\<rbrakk>\n       \\<Longrightarrow> x = y\\<^sup>\\<star> \\<cdot> z", "show \"1 + x \\<cdot> x\\<^sup>\\<star> = x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + x \\<cdot> x\\<^sup>\\<star> = x\\<^sup>\\<star>", "by (metis left_pre_kleene_algebra_class.star_unfoldl_eq)"], ["proof (state)\nthis:\n  1 + x \\<cdot> x\\<^sup>\\<star> = x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>y x z.\n       \\<lbrakk>\\<not> ewp y; x = y \\<cdot> x + z\\<rbrakk>\n       \\<Longrightarrow> x = y\\<^sup>\\<star> \\<cdot> z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y x z.\n       \\<lbrakk>\\<not> ewp y; x = y \\<cdot> x + z\\<rbrakk>\n       \\<Longrightarrow> x = y\\<^sup>\\<star> \\<cdot> z", "fix x y z :: \"'a reg_lan\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y x z.\n       \\<lbrakk>\\<not> ewp y; x = y \\<cdot> x + z\\<rbrakk>\n       \\<Longrightarrow> x = y\\<^sup>\\<star> \\<cdot> z", "show \"\\<lbrakk> \\<not> ewp y; x = y \\<cdot> x + z \\<rbrakk> \\<Longrightarrow> x = y\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> ewp y; x = y \\<cdot> x + z\\<rbrakk>\n    \\<Longrightarrow> x = y\\<^sup>\\<star> \\<cdot> z", "by (transfer, metis lan_salomaa_l.Al)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> ewp y; x = y \\<cdot> x + z\\<rbrakk>\n  \\<Longrightarrow> x = y\\<^sup>\\<star> \\<cdot> z\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "instance reg_lan :: (type) S_algebra"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a reg_lan, S_algebra_class)", ".."], ["", "theorem arden_regexp_l: \n  assumes \"ro(y) = 0\\<^sub>r\" \"x \\<sim> y \\<cdot>\\<^sub>r x +\\<^sub>r z\" \n  shows \"x \\<sim> y\\<^sup>\\<star>\\<^sub>r \\<cdot>\\<^sub>r z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sim> y\\<^sup>\\<star>\\<^sub>r \\<cdot>\\<^sub>r z", "using assms"], ["proof (prove)\nusing this:\n  ro y = 0\\<^sub>r\n  x \\<sim> y \\<cdot>\\<^sub>r x +\\<^sub>r z\n\ngoal (1 subgoal):\n 1. x \\<sim> y\\<^sup>\\<star>\\<^sub>r \\<cdot>\\<^sub>r z", "by (transfer, metis arden_l lang.simps(4) lang.simps(5) lang.simps(6) rexp.distinct(1) rexp_ewp_l_ewp)"], ["", "theorem arden_regexp_r: \n  assumes \"ro(y) = 0\\<^sub>r\" \"x \\<sim> x \\<cdot>\\<^sub>r y +\\<^sub>r z\" \n  shows \"x \\<sim> z \\<cdot>\\<^sub>r y\\<^sup>\\<star>\\<^sub>r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sim> z \\<cdot>\\<^sub>r y\\<^sup>\\<star>\\<^sub>r", "using assms"], ["proof (prove)\nusing this:\n  ro y = 0\\<^sub>r\n  x \\<sim> x \\<cdot>\\<^sub>r y +\\<^sub>r z\n\ngoal (1 subgoal):\n 1. x \\<sim> z \\<cdot>\\<^sub>r y\\<^sup>\\<star>\\<^sub>r", "by transfer (metis lan_salomaa_r.Ar lang.simps(4) lang.simps(5) lang.simps(6) rexp.distinct(1) rexp_ewp_l_ewp)"], ["", "end"]]}