{"file_name": "/home/qj213/afp-2021-10-22/thys/Finite-Map-Extras/Finite_Map_Extras.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Finite-Map-Extras", "problem_names": ["lemma fmadd_singletons_comm:\n  assumes \"k\\<^sub>1 \\<noteq> k\\<^sub>2\"\n  shows \"{k\\<^sub>1 $$:= v\\<^sub>1} ++\\<^sub>f {k\\<^sub>2 $$:= v\\<^sub>2} = {k\\<^sub>2 $$:= v\\<^sub>2} ++\\<^sub>f {k\\<^sub>1 $$:= v\\<^sub>1}\"", "lemma fmap_singleton_comm:\n  assumes \"m $$ k = None\"\n  shows \"m ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m\"", "lemma fmap_disj_comm:\n  assumes \"fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 = {}\"\n  shows \"m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 = m\\<^sub>2 ++\\<^sub>f m\\<^sub>1\"", "lemma fmran_singleton: \"fmran {k $$:= v} = {|v|}\"", "lemma fmmap_keys_hom:\n  assumes \"fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 = {}\"\n  shows \"fmmap_keys f (m\\<^sub>1 ++\\<^sub>f m\\<^sub>2) = fmmap_keys f m\\<^sub>1 ++\\<^sub>f fmmap_keys f m\\<^sub>2\"", "lemma map_insort_is_insort_key:\n  assumes \"m $$ k = None\"\n  shows \"map (\\<lambda>k'. (k', m(k $$:= v) $$! k')) (insort k xs) =\n    insort_key fst (k, v) (map (\\<lambda>k'. (k', m(k $$:= v) $$! k')) xs)\"", "lemma sorted_list_of_fmap_is_insort_key_fst:\n  assumes \"m $$ k = None\"\n  shows \"sorted_list_of_fmap (m(k $$:= v)) = insort_key fst (k, v) (sorted_list_of_fmap m)\"", "lemma distinct_fst_inj:\n  assumes \"distinct (map fst ps)\"\n  and \"inj f\"\n  shows \"distinct (map fst (map (\\<lambda>(k, v). (f k, v)) ps))\"", "lemma distinct_sorted_list_of_fmap:\n  shows \"distinct (map fst (sorted_list_of_fmap m))\"", "lemma map_inj_pair_non_membership:\n  assumes \"k \\<notin> set (map fst ps)\"\n  and \"inj f\"\n  shows \"f k \\<notin> set (map fst (map (\\<lambda>(k, v). (f k, v)) ps))\"", "lemma map_insort_key_fst:\n  assumes \"distinct (map fst ps)\"\n  and \"k \\<notin> set (map fst ps)\"\n  and \"inj f\"\n  and \"mono f\"\n  shows \"map (\\<lambda>(k, v). (f k, v)) (insort_key fst (k, v) ps) =\n    insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) ps)\"", "lemma map_sorted_list_of_fmap:\n  assumes \"inj f\"\n  and \"mono f\"\n  and \"m $$ k = None\"\n  shows \"map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v))) =\n    insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\"", "lemma fmap_of_list_insort_key_fst:\n  assumes \"distinct (map fst ps)\"\n  and \"k \\<notin> set (map fst ps)\"\n  shows \"fmap_of_list (insort_key fst (k, v) ps) = (fmap_of_list ps)(k $$:= v)\"", "lemma fmap_of_list_insort_key_fst_map:\n  assumes \"inj f\"\n  and \"m $$ k = None\"\n  shows \"fmap_of_list (insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))) =\n    (fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))(f k $$:= v)\"", "lemma fmap_of_list_sorted_list_of_fmap:\n  fixes m :: \"('a::linorder, 'b) fmap\"\n  and f :: \"'a \\<Rightarrow> 'c::linorder\"\n  assumes \"inj f\"\n  and \"mono f\"\n  and \"m $$ k = None\"\n  shows \"fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n    (fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))(f k $$:= v)\"", "lemma fsubset_antisym:\n  assumes \"m \\<subseteq>\\<^sub>f n\"\n  and \"n \\<subseteq>\\<^sub>f m\"\n  shows \"m = n\"", "lemma fmdiff_partition:\n  assumes \"m\\<^sub>2 \\<subseteq>\\<^sub>f m\\<^sub>1\"\n  shows \"m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) = m\\<^sub>1\"", "lemma fmdiff_fmupd:\n  assumes \"m $$ k = None\"\n  shows \"m(k $$:= v) --\\<^sub>f {k $$:= v} = m\"", "lemma dom_res_singleton:\n  assumes \"m $$ k = Some v\"\n  shows \"{k} \\<lhd> m = {k $$:= v}\"", "lemma dom_res_union_distr:\n  shows \"(A \\<union> B) \\<lhd> m = A \\<lhd> m ++\\<^sub>f B \\<lhd> m\"", "lemma dom_exc_add_distr:\n  shows \"s \\<lhd>/ (m\\<^sub>1 ++\\<^sub>f m\\<^sub>2) = (s \\<lhd>/ m\\<^sub>1) ++\\<^sub>f (s \\<lhd>/ m\\<^sub>2)\"", "lemma fmap_partition:\n  shows \"m = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m\"", "lemma dom_res_addition_in:\n  assumes \"m\\<^sub>1 $$ k = None\"\n  and \"m\\<^sub>2 $$ k = Some v'\"\n  shows \"fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 = fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}\"", "lemma dom_res_addition_not_in:\n  assumes \"m\\<^sub>2 $$ k = None\"\n  shows \"fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 = fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2\"", "lemma inter_plus_addition_in:\n  assumes \"m\\<^sub>1 $$ k = None\"\n  and \"m\\<^sub>2 $$ k = Some v'\"\n  shows \"m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 = (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f {k $$:= v' + v}\"", "lemma inter_plus_addition_notin:\n  assumes \"m\\<^sub>1 $$ k = None\"\n  and \"m\\<^sub>2 $$ k = None\"\n  shows \"m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 = (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2)\"", "lemma union_plus_addition_notin: (* TODO: Find nicer proofs for SMT calls. *)\n  assumes \"m\\<^sub>1 $$ k = None\"\n  and \"m\\<^sub>2 $$ k = None\"\n  shows \"m\\<^sub>1(k $$:= v) \\<union>\\<^sub>+ m\\<^sub>2 = (m\\<^sub>1 \\<union>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f {k $$:= v}\""], "translations": [["", "lemma fmadd_singletons_comm:\n  assumes \"k\\<^sub>1 \\<noteq> k\\<^sub>2\"\n  shows \"{k\\<^sub>1 $$:= v\\<^sub>1} ++\\<^sub>f {k\\<^sub>2 $$:= v\\<^sub>2} = {k\\<^sub>2 $$:= v\\<^sub>2} ++\\<^sub>f {k\\<^sub>1 $$:= v\\<^sub>1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {k\\<^sub>1 $$:= v\\<^sub>1} ++\\<^sub>f {k\\<^sub>2 $$:= v\\<^sub>2} =\n    {k\\<^sub>2 $$:= v\\<^sub>2} ++\\<^sub>f {k\\<^sub>1 $$:= v\\<^sub>1}", "proof (intro fmap_ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       ({k\\<^sub>1 $$:= v\\<^sub>1} ++\\<^sub>f {k\\<^sub>2 $$:= v\\<^sub>2}) $$\n       x =\n       ({k\\<^sub>2 $$:= v\\<^sub>2} ++\\<^sub>f {k\\<^sub>1 $$:= v\\<^sub>1}) $$\n       x", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       ({k\\<^sub>1 $$:= v\\<^sub>1} ++\\<^sub>f {k\\<^sub>2 $$:= v\\<^sub>2}) $$\n       x =\n       ({k\\<^sub>2 $$:= v\\<^sub>2} ++\\<^sub>f {k\\<^sub>1 $$:= v\\<^sub>1}) $$\n       x", "consider\n    (a) \"k = k\\<^sub>1\" |\n    (b) \"k = k\\<^sub>2\" |\n    (c) \"k \\<noteq> k\\<^sub>1 \\<and> k \\<noteq> k\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k = k\\<^sub>1 \\<Longrightarrow> thesis;\n     k = k\\<^sub>2 \\<Longrightarrow> thesis;\n     k \\<noteq> k\\<^sub>1 \\<and> k \\<noteq> k\\<^sub>2 \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>k = k\\<^sub>1 \\<Longrightarrow> ?thesis;\n   k = k\\<^sub>2 \\<Longrightarrow> ?thesis;\n   k \\<noteq> k\\<^sub>1 \\<and> k \\<noteq> k\\<^sub>2 \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       ({k\\<^sub>1 $$:= v\\<^sub>1} ++\\<^sub>f {k\\<^sub>2 $$:= v\\<^sub>2}) $$\n       x =\n       ({k\\<^sub>2 $$:= v\\<^sub>2} ++\\<^sub>f {k\\<^sub>1 $$:= v\\<^sub>1}) $$\n       x", "with assms"], ["proof (chain)\npicking this:\n  k\\<^sub>1 \\<noteq> k\\<^sub>2\n  \\<lbrakk>k = k\\<^sub>1 \\<Longrightarrow> ?thesis;\n   k = k\\<^sub>2 \\<Longrightarrow> ?thesis;\n   k \\<noteq> k\\<^sub>1 \\<and> k \\<noteq> k\\<^sub>2 \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"({k\\<^sub>1 $$:= v\\<^sub>1} ++\\<^sub>f {k\\<^sub>2 $$:= v\\<^sub>2}) $$ k = ({k\\<^sub>2 $$:= v\\<^sub>2} ++\\<^sub>f {k\\<^sub>1 $$:= v\\<^sub>1}) $$ k\""], ["proof (prove)\nusing this:\n  k\\<^sub>1 \\<noteq> k\\<^sub>2\n  \\<lbrakk>k = k\\<^sub>1 \\<Longrightarrow> ?thesis;\n   k = k\\<^sub>2 \\<Longrightarrow> ?thesis;\n   k \\<noteq> k\\<^sub>1 \\<and> k \\<noteq> k\\<^sub>2 \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. ({k\\<^sub>1 $$:= v\\<^sub>1} ++\\<^sub>f {k\\<^sub>2 $$:= v\\<^sub>2}) $$\n    k =\n    ({k\\<^sub>2 $$:= v\\<^sub>2} ++\\<^sub>f {k\\<^sub>1 $$:= v\\<^sub>1}) $$ k", "by auto"], ["proof (state)\nthis:\n  ({k\\<^sub>1 $$:= v\\<^sub>1} ++\\<^sub>f {k\\<^sub>2 $$:= v\\<^sub>2}) $$ k =\n  ({k\\<^sub>2 $$:= v\\<^sub>2} ++\\<^sub>f {k\\<^sub>1 $$:= v\\<^sub>1}) $$ k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fmap_singleton_comm:\n  assumes \"m $$ k = None\"\n  shows \"m ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m", "using assms"], ["proof (prove)\nusing this:\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. m ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m", "proof (induction m arbitrary: k v)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>k v.\n       {$$} $$ k = None \\<Longrightarrow>\n       {$$} ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f {$$}\n 2. \\<And>x y m k v.\n       \\<lbrakk>\\<And>k v.\n                   m $$ k = None \\<Longrightarrow>\n                   m ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m;\n        m $$ x = None; m(x $$:= y) $$ k = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) ++\\<^sub>f {k $$:= v} =\n                         {k $$:= v} ++\\<^sub>f m(x $$:= y)", "case fmempty"], ["proof (state)\nthis:\n  {$$} $$ k = None\n\ngoal (2 subgoals):\n 1. \\<And>k v.\n       {$$} $$ k = None \\<Longrightarrow>\n       {$$} ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f {$$}\n 2. \\<And>x y m k v.\n       \\<lbrakk>\\<And>k v.\n                   m $$ k = None \\<Longrightarrow>\n                   m ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m;\n        m $$ x = None; m(x $$:= y) $$ k = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) ++\\<^sub>f {k $$:= v} =\n                         {k $$:= v} ++\\<^sub>f m(x $$:= y)", "then"], ["proof (chain)\npicking this:\n  {$$} $$ k = None", "show ?case"], ["proof (prove)\nusing this:\n  {$$} $$ k = None\n\ngoal (1 subgoal):\n 1. {$$} ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f {$$}", "by simp"], ["proof (state)\nthis:\n  {$$} ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f {$$}\n\ngoal (1 subgoal):\n 1. \\<And>x y m k v.\n       \\<lbrakk>\\<And>k v.\n                   m $$ k = None \\<Longrightarrow>\n                   m ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m;\n        m $$ x = None; m(x $$:= y) $$ k = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) ++\\<^sub>f {k $$:= v} =\n                         {k $$:= v} ++\\<^sub>f m(x $$:= y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y m k v.\n       \\<lbrakk>\\<And>k v.\n                   m $$ k = None \\<Longrightarrow>\n                   m ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m;\n        m $$ x = None; m(x $$:= y) $$ k = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) ++\\<^sub>f {k $$:= v} =\n                         {k $$:= v} ++\\<^sub>f m(x $$:= y)", "case (fmupd x y m)"], ["proof (state)\nthis:\n  m $$ ?k = None \\<Longrightarrow>\n  m ++\\<^sub>f {?k $$:= ?v} = {?k $$:= ?v} ++\\<^sub>f m\n  m $$ x = None\n  m(x $$:= y) $$ k = None\n\ngoal (1 subgoal):\n 1. \\<And>x y m k v.\n       \\<lbrakk>\\<And>k v.\n                   m $$ k = None \\<Longrightarrow>\n                   m ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m;\n        m $$ x = None; m(x $$:= y) $$ k = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) ++\\<^sub>f {k $$:= v} =\n                         {k $$:= v} ++\\<^sub>f m(x $$:= y)", "have \"m(x $$:= y) ++\\<^sub>f {k $$:= v} = m ++\\<^sub>f {x $$:= y} ++\\<^sub>f {k $$:= v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m(x $$:= y) ++\\<^sub>f {k $$:= v} =\n    m ++\\<^sub>f {x $$:= y} ++\\<^sub>f {k $$:= v}", "by simp"], ["proof (state)\nthis:\n  m(x $$:= y) ++\\<^sub>f {k $$:= v} =\n  m ++\\<^sub>f {x $$:= y} ++\\<^sub>f {k $$:= v}\n\ngoal (1 subgoal):\n 1. \\<And>x y m k v.\n       \\<lbrakk>\\<And>k v.\n                   m $$ k = None \\<Longrightarrow>\n                   m ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m;\n        m $$ x = None; m(x $$:= y) $$ k = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) ++\\<^sub>f {k $$:= v} =\n                         {k $$:= v} ++\\<^sub>f m(x $$:= y)", "also"], ["proof (state)\nthis:\n  m(x $$:= y) ++\\<^sub>f {k $$:= v} =\n  m ++\\<^sub>f {x $$:= y} ++\\<^sub>f {k $$:= v}\n\ngoal (1 subgoal):\n 1. \\<And>x y m k v.\n       \\<lbrakk>\\<And>k v.\n                   m $$ k = None \\<Longrightarrow>\n                   m ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m;\n        m $$ x = None; m(x $$:= y) $$ k = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) ++\\<^sub>f {k $$:= v} =\n                         {k $$:= v} ++\\<^sub>f m(x $$:= y)", "from fmupd.hyps and fmupd.IH"], ["proof (chain)\npicking this:\n  m $$ x = None\n  m $$ ?k = None \\<Longrightarrow>\n  m ++\\<^sub>f {?k $$:= ?v} = {?k $$:= ?v} ++\\<^sub>f m", "have \"\\<dots> = {x $$:= y} ++\\<^sub>f m ++\\<^sub>f {k $$:= v}\""], ["proof (prove)\nusing this:\n  m $$ x = None\n  m $$ ?k = None \\<Longrightarrow>\n  m ++\\<^sub>f {?k $$:= ?v} = {?k $$:= ?v} ++\\<^sub>f m\n\ngoal (1 subgoal):\n 1. m ++\\<^sub>f {x $$:= y} ++\\<^sub>f {k $$:= v} =\n    {x $$:= y} ++\\<^sub>f m ++\\<^sub>f {k $$:= v}", "by simp"], ["proof (state)\nthis:\n  m ++\\<^sub>f {x $$:= y} ++\\<^sub>f {k $$:= v} =\n  {x $$:= y} ++\\<^sub>f m ++\\<^sub>f {k $$:= v}\n\ngoal (1 subgoal):\n 1. \\<And>x y m k v.\n       \\<lbrakk>\\<And>k v.\n                   m $$ k = None \\<Longrightarrow>\n                   m ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m;\n        m $$ x = None; m(x $$:= y) $$ k = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) ++\\<^sub>f {k $$:= v} =\n                         {k $$:= v} ++\\<^sub>f m(x $$:= y)", "also"], ["proof (state)\nthis:\n  m ++\\<^sub>f {x $$:= y} ++\\<^sub>f {k $$:= v} =\n  {x $$:= y} ++\\<^sub>f m ++\\<^sub>f {k $$:= v}\n\ngoal (1 subgoal):\n 1. \\<And>x y m k v.\n       \\<lbrakk>\\<And>k v.\n                   m $$ k = None \\<Longrightarrow>\n                   m ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m;\n        m $$ x = None; m(x $$:= y) $$ k = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) ++\\<^sub>f {k $$:= v} =\n                         {k $$:= v} ++\\<^sub>f m(x $$:= y)", "from fmupd.prems and fmupd.hyps and fmupd.IH"], ["proof (chain)\npicking this:\n  m(x $$:= y) $$ k = None\n  m $$ x = None\n  m $$ ?k = None \\<Longrightarrow>\n  m ++\\<^sub>f {?k $$:= ?v} = {?k $$:= ?v} ++\\<^sub>f m", "have \"\\<dots> = {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m\""], ["proof (prove)\nusing this:\n  m(x $$:= y) $$ k = None\n  m $$ x = None\n  m $$ ?k = None \\<Longrightarrow>\n  m ++\\<^sub>f {?k $$:= ?v} = {?k $$:= ?v} ++\\<^sub>f m\n\ngoal (1 subgoal):\n 1. {x $$:= y} ++\\<^sub>f m ++\\<^sub>f {k $$:= v} =\n    {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m", "by (metis fmadd_assoc fmupd_lookup)"], ["proof (state)\nthis:\n  {x $$:= y} ++\\<^sub>f m ++\\<^sub>f {k $$:= v} =\n  {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m\n\ngoal (1 subgoal):\n 1. \\<And>x y m k v.\n       \\<lbrakk>\\<And>k v.\n                   m $$ k = None \\<Longrightarrow>\n                   m ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m;\n        m $$ x = None; m(x $$:= y) $$ k = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) ++\\<^sub>f {k $$:= v} =\n                         {k $$:= v} ++\\<^sub>f m(x $$:= y)", "also"], ["proof (state)\nthis:\n  {x $$:= y} ++\\<^sub>f m ++\\<^sub>f {k $$:= v} =\n  {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m\n\ngoal (1 subgoal):\n 1. \\<And>x y m k v.\n       \\<lbrakk>\\<And>k v.\n                   m $$ k = None \\<Longrightarrow>\n                   m ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m;\n        m $$ x = None; m(x $$:= y) $$ k = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) ++\\<^sub>f {k $$:= v} =\n                         {k $$:= v} ++\\<^sub>f m(x $$:= y)", "have \"\\<dots> = {k $$:= v} ++\\<^sub>f m(x $$:= y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f m(x $$:= y)", "proof (cases \"x \\<noteq> k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<noteq> k \\<Longrightarrow>\n    {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f m(x $$:= y)\n 2. \\<not> x \\<noteq> k \\<Longrightarrow>\n    {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f m(x $$:= y)", "case True"], ["proof (state)\nthis:\n  x \\<noteq> k\n\ngoal (2 subgoals):\n 1. x \\<noteq> k \\<Longrightarrow>\n    {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f m(x $$:= y)\n 2. \\<not> x \\<noteq> k \\<Longrightarrow>\n    {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f m(x $$:= y)", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> k", "have \"{x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m = {k $$:= v} ++\\<^sub>f {x $$:= y} ++\\<^sub>f m\""], ["proof (prove)\nusing this:\n  x \\<noteq> k\n\ngoal (1 subgoal):\n 1. {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f {x $$:= y} ++\\<^sub>f m", "using fmadd_singletons_comm"], ["proof (prove)\nusing this:\n  x \\<noteq> k\n  ?k\\<^sub>1 \\<noteq> ?k\\<^sub>2 \\<Longrightarrow>\n  {?k\\<^sub>1 $$:= ?v\\<^sub>1} ++\\<^sub>f {?k\\<^sub>2 $$:= ?v\\<^sub>2} =\n  {?k\\<^sub>2 $$:= ?v\\<^sub>2} ++\\<^sub>f {?k\\<^sub>1 $$:= ?v\\<^sub>1}\n\ngoal (1 subgoal):\n 1. {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f {x $$:= y} ++\\<^sub>f m", "by metis"], ["proof (state)\nthis:\n  {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n  {k $$:= v} ++\\<^sub>f {x $$:= y} ++\\<^sub>f m\n\ngoal (2 subgoals):\n 1. x \\<noteq> k \\<Longrightarrow>\n    {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f m(x $$:= y)\n 2. \\<not> x \\<noteq> k \\<Longrightarrow>\n    {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f m(x $$:= y)", "also"], ["proof (state)\nthis:\n  {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n  {k $$:= v} ++\\<^sub>f {x $$:= y} ++\\<^sub>f m\n\ngoal (2 subgoals):\n 1. x \\<noteq> k \\<Longrightarrow>\n    {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f m(x $$:= y)\n 2. \\<not> x \\<noteq> k \\<Longrightarrow>\n    {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f m(x $$:= y)", "from fmupd.prems and fmupd.hyps and fmupd.IH"], ["proof (chain)\npicking this:\n  m(x $$:= y) $$ k = None\n  m $$ x = None\n  m $$ ?k = None \\<Longrightarrow>\n  m ++\\<^sub>f {?k $$:= ?v} = {?k $$:= ?v} ++\\<^sub>f m", "have \"\\<dots> = {k $$:= v} ++\\<^sub>f m ++\\<^sub>f {x $$:= y}\""], ["proof (prove)\nusing this:\n  m(x $$:= y) $$ k = None\n  m $$ x = None\n  m $$ ?k = None \\<Longrightarrow>\n  m ++\\<^sub>f {?k $$:= ?v} = {?k $$:= ?v} ++\\<^sub>f m\n\ngoal (1 subgoal):\n 1. {k $$:= v} ++\\<^sub>f {x $$:= y} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f m ++\\<^sub>f {x $$:= y}", "by (metis fmadd_assoc)"], ["proof (state)\nthis:\n  {k $$:= v} ++\\<^sub>f {x $$:= y} ++\\<^sub>f m =\n  {k $$:= v} ++\\<^sub>f m ++\\<^sub>f {x $$:= y}\n\ngoal (2 subgoals):\n 1. x \\<noteq> k \\<Longrightarrow>\n    {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f m(x $$:= y)\n 2. \\<not> x \\<noteq> k \\<Longrightarrow>\n    {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f m(x $$:= y)", "finally"], ["proof (chain)\npicking this:\n  {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n  {k $$:= v} ++\\<^sub>f m ++\\<^sub>f {x $$:= y}", "show ?thesis"], ["proof (prove)\nusing this:\n  {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n  {k $$:= v} ++\\<^sub>f m ++\\<^sub>f {x $$:= y}\n\ngoal (1 subgoal):\n 1. {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f m(x $$:= y)", "by simp"], ["proof (state)\nthis:\n  {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n  {k $$:= v} ++\\<^sub>f m(x $$:= y)\n\ngoal (1 subgoal):\n 1. \\<not> x \\<noteq> k \\<Longrightarrow>\n    {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f m(x $$:= y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x \\<noteq> k \\<Longrightarrow>\n    {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f m(x $$:= y)", "case False"], ["proof (state)\nthis:\n  \\<not> x \\<noteq> k\n\ngoal (1 subgoal):\n 1. \\<not> x \\<noteq> k \\<Longrightarrow>\n    {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f m(x $$:= y)", "with fmupd.prems"], ["proof (chain)\npicking this:\n  m(x $$:= y) $$ k = None\n  \\<not> x \\<noteq> k", "show ?thesis"], ["proof (prove)\nusing this:\n  m(x $$:= y) $$ k = None\n  \\<not> x \\<noteq> k\n\ngoal (1 subgoal):\n 1. {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n    {k $$:= v} ++\\<^sub>f m(x $$:= y)", "by auto"], ["proof (state)\nthis:\n  {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n  {k $$:= v} ++\\<^sub>f m(x $$:= y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x $$:= y} ++\\<^sub>f {k $$:= v} ++\\<^sub>f m =\n  {k $$:= v} ++\\<^sub>f m(x $$:= y)\n\ngoal (1 subgoal):\n 1. \\<And>x y m k v.\n       \\<lbrakk>\\<And>k v.\n                   m $$ k = None \\<Longrightarrow>\n                   m ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m;\n        m $$ x = None; m(x $$:= y) $$ k = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) ++\\<^sub>f {k $$:= v} =\n                         {k $$:= v} ++\\<^sub>f m(x $$:= y)", "finally"], ["proof (chain)\npicking this:\n  m(x $$:= y) ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m(x $$:= y)", "show ?case"], ["proof (prove)\nusing this:\n  m(x $$:= y) ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m(x $$:= y)\n\ngoal (1 subgoal):\n 1. m(x $$:= y) ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m(x $$:= y)", "."], ["proof (state)\nthis:\n  m(x $$:= y) ++\\<^sub>f {k $$:= v} = {k $$:= v} ++\\<^sub>f m(x $$:= y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fmap_disj_comm:\n  assumes \"fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 = {}\"\n  shows \"m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 = m\\<^sub>2 ++\\<^sub>f m\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 = m\\<^sub>2 ++\\<^sub>f m\\<^sub>1", "using assms"], ["proof (prove)\nusing this:\n  fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 = {}\n\ngoal (1 subgoal):\n 1. m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 = m\\<^sub>2 ++\\<^sub>f m\\<^sub>1", "proof (induction m\\<^sub>2 arbitrary: m\\<^sub>1)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>m\\<^sub>1.\n       fmdom' m\\<^sub>1 \\<inter> fmdom' {$$} = {} \\<Longrightarrow>\n       m\\<^sub>1 ++\\<^sub>f {$$} = {$$} ++\\<^sub>f m\\<^sub>1\n 2. \\<And>x y m\\<^sub>2 m\\<^sub>1.\n       \\<lbrakk>\\<And>m\\<^sub>1.\n                   fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                   {} \\<Longrightarrow>\n                   m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                   m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n        m\\<^sub>2 $$ x = None;\n        fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(x $$:= y)) = {}\\<rbrakk>\n       \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(x $$:= y) =\n                         m\\<^sub>2(x $$:= y) ++\\<^sub>f m\\<^sub>1", "case fmempty"], ["proof (state)\nthis:\n  fmdom' m\\<^sub>1 \\<inter> fmdom' {$$} = {}\n\ngoal (2 subgoals):\n 1. \\<And>m\\<^sub>1.\n       fmdom' m\\<^sub>1 \\<inter> fmdom' {$$} = {} \\<Longrightarrow>\n       m\\<^sub>1 ++\\<^sub>f {$$} = {$$} ++\\<^sub>f m\\<^sub>1\n 2. \\<And>x y m\\<^sub>2 m\\<^sub>1.\n       \\<lbrakk>\\<And>m\\<^sub>1.\n                   fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                   {} \\<Longrightarrow>\n                   m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                   m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n        m\\<^sub>2 $$ x = None;\n        fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(x $$:= y)) = {}\\<rbrakk>\n       \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(x $$:= y) =\n                         m\\<^sub>2(x $$:= y) ++\\<^sub>f m\\<^sub>1", "then"], ["proof (chain)\npicking this:\n  fmdom' m\\<^sub>1 \\<inter> fmdom' {$$} = {}", "show ?case"], ["proof (prove)\nusing this:\n  fmdom' m\\<^sub>1 \\<inter> fmdom' {$$} = {}\n\ngoal (1 subgoal):\n 1. m\\<^sub>1 ++\\<^sub>f {$$} = {$$} ++\\<^sub>f m\\<^sub>1", "by simp"], ["proof (state)\nthis:\n  m\\<^sub>1 ++\\<^sub>f {$$} = {$$} ++\\<^sub>f m\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<And>x y m\\<^sub>2 m\\<^sub>1.\n       \\<lbrakk>\\<And>m\\<^sub>1.\n                   fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                   {} \\<Longrightarrow>\n                   m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                   m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n        m\\<^sub>2 $$ x = None;\n        fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(x $$:= y)) = {}\\<rbrakk>\n       \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(x $$:= y) =\n                         m\\<^sub>2(x $$:= y) ++\\<^sub>f m\\<^sub>1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y m\\<^sub>2 m\\<^sub>1.\n       \\<lbrakk>\\<And>m\\<^sub>1.\n                   fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                   {} \\<Longrightarrow>\n                   m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                   m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n        m\\<^sub>2 $$ x = None;\n        fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(x $$:= y)) = {}\\<rbrakk>\n       \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(x $$:= y) =\n                         m\\<^sub>2(x $$:= y) ++\\<^sub>f m\\<^sub>1", "case (fmupd k v m\\<^sub>2)"], ["proof (state)\nthis:\n  fmdom' ?m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 = {} \\<Longrightarrow>\n  ?m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 = m\\<^sub>2 ++\\<^sub>f ?m\\<^sub>1\n  m\\<^sub>2 $$ k = None\n  fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {}\n\ngoal (1 subgoal):\n 1. \\<And>x y m\\<^sub>2 m\\<^sub>1.\n       \\<lbrakk>\\<And>m\\<^sub>1.\n                   fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                   {} \\<Longrightarrow>\n                   m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                   m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n        m\\<^sub>2 $$ x = None;\n        fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(x $$:= y)) = {}\\<rbrakk>\n       \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(x $$:= y) =\n                         m\\<^sub>2(x $$:= y) ++\\<^sub>f m\\<^sub>1", "then"], ["proof (chain)\npicking this:\n  fmdom' ?m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 = {} \\<Longrightarrow>\n  ?m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 = m\\<^sub>2 ++\\<^sub>f ?m\\<^sub>1\n  m\\<^sub>2 $$ k = None\n  fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {}", "show ?case"], ["proof (prove)\nusing this:\n  fmdom' ?m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 = {} \\<Longrightarrow>\n  ?m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 = m\\<^sub>2 ++\\<^sub>f ?m\\<^sub>1\n  m\\<^sub>2 $$ k = None\n  fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {}\n\ngoal (1 subgoal):\n 1. m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n    m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1", "proof (cases \"m\\<^sub>1 $$ k = None\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>m\\<^sub>1.\n                fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                {} \\<Longrightarrow>\n                m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n     m\\<^sub>2 $$ k = None;\n     fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {};\n     m\\<^sub>1 $$ k = None\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n                      m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1\n 2. \\<lbrakk>\\<And>m\\<^sub>1.\n                fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                {} \\<Longrightarrow>\n                m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n     m\\<^sub>2 $$ k = None;\n     fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {};\n     m\\<^sub>1 $$ k \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n                      m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1", "case True"], ["proof (state)\nthis:\n  m\\<^sub>1 $$ k = None\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>m\\<^sub>1.\n                fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                {} \\<Longrightarrow>\n                m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n     m\\<^sub>2 $$ k = None;\n     fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {};\n     m\\<^sub>1 $$ k = None\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n                      m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1\n 2. \\<lbrakk>\\<And>m\\<^sub>1.\n                fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                {} \\<Longrightarrow>\n                m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n     m\\<^sub>2 $$ k = None;\n     fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {};\n     m\\<^sub>1 $$ k \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n                      m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1", "from fmupd.hyps"], ["proof (chain)\npicking this:\n  m\\<^sub>2 $$ k = None", "have \"m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) = m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 ++\\<^sub>f {k $$:= v}\""], ["proof (prove)\nusing this:\n  m\\<^sub>2 $$ k = None\n\ngoal (1 subgoal):\n 1. m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n    m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 ++\\<^sub>f {k $$:= v}", "by simp"], ["proof (state)\nthis:\n  m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n  m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 ++\\<^sub>f {k $$:= v}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>m\\<^sub>1.\n                fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                {} \\<Longrightarrow>\n                m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n     m\\<^sub>2 $$ k = None;\n     fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {};\n     m\\<^sub>1 $$ k = None\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n                      m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1\n 2. \\<lbrakk>\\<And>m\\<^sub>1.\n                fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                {} \\<Longrightarrow>\n                m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n     m\\<^sub>2 $$ k = None;\n     fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {};\n     m\\<^sub>1 $$ k \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n                      m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1", "also"], ["proof (state)\nthis:\n  m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n  m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 ++\\<^sub>f {k $$:= v}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>m\\<^sub>1.\n                fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                {} \\<Longrightarrow>\n                m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n     m\\<^sub>2 $$ k = None;\n     fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {};\n     m\\<^sub>1 $$ k = None\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n                      m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1\n 2. \\<lbrakk>\\<And>m\\<^sub>1.\n                fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                {} \\<Longrightarrow>\n                m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n     m\\<^sub>2 $$ k = None;\n     fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {};\n     m\\<^sub>1 $$ k \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n                      m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1", "from fmupd.prems and fmupd.hyps and fmupd.IH"], ["proof (chain)\npicking this:\n  fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {}\n  m\\<^sub>2 $$ k = None\n  fmdom' ?m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 = {} \\<Longrightarrow>\n  ?m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 = m\\<^sub>2 ++\\<^sub>f ?m\\<^sub>1", "have \"\\<dots> = m\\<^sub>2 ++\\<^sub>f m\\<^sub>1 ++\\<^sub>f {k $$:= v}\""], ["proof (prove)\nusing this:\n  fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {}\n  m\\<^sub>2 $$ k = None\n  fmdom' ?m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 = {} \\<Longrightarrow>\n  ?m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 = m\\<^sub>2 ++\\<^sub>f ?m\\<^sub>1\n\ngoal (1 subgoal):\n 1. m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 ++\\<^sub>f {k $$:= v} =\n    m\\<^sub>2 ++\\<^sub>f m\\<^sub>1 ++\\<^sub>f {k $$:= v}", "by simp"], ["proof (state)\nthis:\n  m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 ++\\<^sub>f {k $$:= v} =\n  m\\<^sub>2 ++\\<^sub>f m\\<^sub>1 ++\\<^sub>f {k $$:= v}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>m\\<^sub>1.\n                fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                {} \\<Longrightarrow>\n                m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n     m\\<^sub>2 $$ k = None;\n     fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {};\n     m\\<^sub>1 $$ k = None\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n                      m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1\n 2. \\<lbrakk>\\<And>m\\<^sub>1.\n                fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                {} \\<Longrightarrow>\n                m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n     m\\<^sub>2 $$ k = None;\n     fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {};\n     m\\<^sub>1 $$ k \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n                      m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1", "also"], ["proof (state)\nthis:\n  m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 ++\\<^sub>f {k $$:= v} =\n  m\\<^sub>2 ++\\<^sub>f m\\<^sub>1 ++\\<^sub>f {k $$:= v}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>m\\<^sub>1.\n                fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                {} \\<Longrightarrow>\n                m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n     m\\<^sub>2 $$ k = None;\n     fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {};\n     m\\<^sub>1 $$ k = None\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n                      m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1\n 2. \\<lbrakk>\\<And>m\\<^sub>1.\n                fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                {} \\<Longrightarrow>\n                m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n     m\\<^sub>2 $$ k = None;\n     fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {};\n     m\\<^sub>1 $$ k \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n                      m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1", "from True"], ["proof (chain)\npicking this:\n  m\\<^sub>1 $$ k = None", "have \"\\<dots> = m\\<^sub>2 ++\\<^sub>f {k $$:= v} ++\\<^sub>f m\\<^sub>1\""], ["proof (prove)\nusing this:\n  m\\<^sub>1 $$ k = None\n\ngoal (1 subgoal):\n 1. m\\<^sub>2 ++\\<^sub>f m\\<^sub>1 ++\\<^sub>f {k $$:= v} =\n    m\\<^sub>2 ++\\<^sub>f {k $$:= v} ++\\<^sub>f m\\<^sub>1", "using fmap_singleton_comm"], ["proof (prove)\nusing this:\n  m\\<^sub>1 $$ k = None\n  ?m $$ ?k = None \\<Longrightarrow>\n  ?m ++\\<^sub>f {?k $$:= ?v} = {?k $$:= ?v} ++\\<^sub>f ?m\n\ngoal (1 subgoal):\n 1. m\\<^sub>2 ++\\<^sub>f m\\<^sub>1 ++\\<^sub>f {k $$:= v} =\n    m\\<^sub>2 ++\\<^sub>f {k $$:= v} ++\\<^sub>f m\\<^sub>1", "by (metis fmadd_assoc)"], ["proof (state)\nthis:\n  m\\<^sub>2 ++\\<^sub>f m\\<^sub>1 ++\\<^sub>f {k $$:= v} =\n  m\\<^sub>2 ++\\<^sub>f {k $$:= v} ++\\<^sub>f m\\<^sub>1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>m\\<^sub>1.\n                fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                {} \\<Longrightarrow>\n                m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n     m\\<^sub>2 $$ k = None;\n     fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {};\n     m\\<^sub>1 $$ k = None\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n                      m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1\n 2. \\<lbrakk>\\<And>m\\<^sub>1.\n                fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                {} \\<Longrightarrow>\n                m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n     m\\<^sub>2 $$ k = None;\n     fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {};\n     m\\<^sub>1 $$ k \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n                      m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1", "finally"], ["proof (chain)\npicking this:\n  m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n  m\\<^sub>2 ++\\<^sub>f {k $$:= v} ++\\<^sub>f m\\<^sub>1", "show ?thesis"], ["proof (prove)\nusing this:\n  m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n  m\\<^sub>2 ++\\<^sub>f {k $$:= v} ++\\<^sub>f m\\<^sub>1\n\ngoal (1 subgoal):\n 1. m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n    m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1", "by simp"], ["proof (state)\nthis:\n  m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n  m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>m\\<^sub>1.\n                fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                {} \\<Longrightarrow>\n                m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n     m\\<^sub>2 $$ k = None;\n     fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {};\n     m\\<^sub>1 $$ k \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n                      m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>m\\<^sub>1.\n                fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                {} \\<Longrightarrow>\n                m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n     m\\<^sub>2 $$ k = None;\n     fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {};\n     m\\<^sub>1 $$ k \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n                      m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1", "case False"], ["proof (state)\nthis:\n  m\\<^sub>1 $$ k \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>m\\<^sub>1.\n                fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 =\n                {} \\<Longrightarrow>\n                m\\<^sub>1 ++\\<^sub>f m\\<^sub>2 =\n                m\\<^sub>2 ++\\<^sub>f m\\<^sub>1;\n     m\\<^sub>2 $$ k = None;\n     fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {};\n     m\\<^sub>1 $$ k \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n                      m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1", "with fmupd.prems"], ["proof (chain)\npicking this:\n  fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {}\n  m\\<^sub>1 $$ k \\<noteq> None", "show ?thesis"], ["proof (prove)\nusing this:\n  fmdom' m\\<^sub>1 \\<inter> fmdom' (m\\<^sub>2(k $$:= v)) = {}\n  m\\<^sub>1 $$ k \\<noteq> None\n\ngoal (1 subgoal):\n 1. m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n    m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1", "by auto"], ["proof (state)\nthis:\n  m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n  m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m\\<^sub>1 ++\\<^sub>f m\\<^sub>2(k $$:= v) =\n  m\\<^sub>2(k $$:= v) ++\\<^sub>f m\\<^sub>1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fmran_singleton: \"fmran {k $$:= v} = {|v|}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmran {k $$:= v} = {|v|}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fmran {k $$:= v} = {|v|}", "have \"v' |\\<in>| fmran {k $$:= v} \\<Longrightarrow> v' = v\" for v'"], ["proof (prove)\ngoal (1 subgoal):\n 1. v' |\\<in>| fmran {k $$:= v} \\<Longrightarrow> v' = v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v' |\\<in>| fmran {k $$:= v} \\<Longrightarrow> v' = v", "assume \"v' |\\<in>| fmran {k $$:= v}\""], ["proof (state)\nthis:\n  v' |\\<in>| fmran {k $$:= v}\n\ngoal (1 subgoal):\n 1. v' |\\<in>| fmran {k $$:= v} \\<Longrightarrow> v' = v", "fix k'"], ["proof (state)\ngoal (1 subgoal):\n 1. v' |\\<in>| fmran {k $$:= v} \\<Longrightarrow> v' = v", "have \"fmdom' {k $$:= v} = {k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmdom' {k $$:= v} = {k}", "by simp"], ["proof (state)\nthis:\n  fmdom' {k $$:= v} = {k}\n\ngoal (1 subgoal):\n 1. v' |\\<in>| fmran {k $$:= v} \\<Longrightarrow> v' = v", "then"], ["proof (chain)\npicking this:\n  fmdom' {k $$:= v} = {k}", "show \"v' = v\""], ["proof (prove)\nusing this:\n  fmdom' {k $$:= v} = {k}\n\ngoal (1 subgoal):\n 1. v' = v", "proof (cases \"k' = k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>fmdom' {k $$:= v} = {k}; k' = k\\<rbrakk>\n    \\<Longrightarrow> v' = v\n 2. \\<lbrakk>fmdom' {k $$:= v} = {k}; k' \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> v' = v", "case True"], ["proof (state)\nthis:\n  k' = k\n\ngoal (2 subgoals):\n 1. \\<lbrakk>fmdom' {k $$:= v} = {k}; k' = k\\<rbrakk>\n    \\<Longrightarrow> v' = v\n 2. \\<lbrakk>fmdom' {k $$:= v} = {k}; k' \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> v' = v", "with \\<open>v' |\\<in>| fmran {k $$:= v}\\<close>"], ["proof (chain)\npicking this:\n  v' |\\<in>| fmran {k $$:= v}\n  k' = k", "show ?thesis"], ["proof (prove)\nusing this:\n  v' |\\<in>| fmran {k $$:= v}\n  k' = k\n\ngoal (1 subgoal):\n 1. v' = v", "using fmdom'I"], ["proof (prove)\nusing this:\n  v' |\\<in>| fmran {k $$:= v}\n  k' = k\n  ?m $$ ?x = Some ?y \\<Longrightarrow> ?x \\<in> fmdom' ?m\n\ngoal (1 subgoal):\n 1. v' = v", "by fastforce"], ["proof (state)\nthis:\n  v' = v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fmdom' {k $$:= v} = {k}; k' \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> v' = v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>fmdom' {k $$:= v} = {k}; k' \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> v' = v", "case False"], ["proof (state)\nthis:\n  k' \\<noteq> k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fmdom' {k $$:= v} = {k}; k' \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> v' = v", "with \\<open>fmdom' {k $$:= v} = {k}\\<close> and \\<open>v' |\\<in>| fmran {k $$:= v}\\<close>"], ["proof (chain)\npicking this:\n  fmdom' {k $$:= v} = {k}\n  v' |\\<in>| fmran {k $$:= v}\n  k' \\<noteq> k", "show ?thesis"], ["proof (prove)\nusing this:\n  fmdom' {k $$:= v} = {k}\n  v' |\\<in>| fmran {k $$:= v}\n  k' \\<noteq> k\n\ngoal (1 subgoal):\n 1. v' = v", "using fmdom'I"], ["proof (prove)\nusing this:\n  fmdom' {k $$:= v} = {k}\n  v' |\\<in>| fmran {k $$:= v}\n  k' \\<noteq> k\n  ?m $$ ?x = Some ?y \\<Longrightarrow> ?x \\<in> fmdom' ?m\n\ngoal (1 subgoal):\n 1. v' = v", "by fastforce"], ["proof (state)\nthis:\n  v' = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v' = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?v' |\\<in>| fmran {k $$:= v} \\<Longrightarrow> ?v' = v\n\ngoal (1 subgoal):\n 1. fmran {k $$:= v} = {|v|}", "moreover"], ["proof (state)\nthis:\n  ?v' |\\<in>| fmran {k $$:= v} \\<Longrightarrow> ?v' = v\n\ngoal (1 subgoal):\n 1. fmran {k $$:= v} = {|v|}", "have \"v |\\<in>| fmran {k $$:= v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v |\\<in>| fmran {k $$:= v}", "by (simp add: fmranI)"], ["proof (state)\nthis:\n  v |\\<in>| fmran {k $$:= v}\n\ngoal (1 subgoal):\n 1. fmran {k $$:= v} = {|v|}", "ultimately"], ["proof (chain)\npicking this:\n  ?v' |\\<in>| fmran {k $$:= v} \\<Longrightarrow> ?v' = v\n  v |\\<in>| fmran {k $$:= v}", "show ?thesis"], ["proof (prove)\nusing this:\n  ?v' |\\<in>| fmran {k $$:= v} \\<Longrightarrow> ?v' = v\n  v |\\<in>| fmran {k $$:= v}\n\ngoal (1 subgoal):\n 1. fmran {k $$:= v} = {|v|}", "by (simp add: fsubsetI fsubset_antisym)"], ["proof (state)\nthis:\n  fmran {k $$:= v} = {|v|}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fmmap_keys_hom:\n  assumes \"fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 = {}\"\n  shows \"fmmap_keys f (m\\<^sub>1 ++\\<^sub>f m\\<^sub>2) = fmmap_keys f m\\<^sub>1 ++\\<^sub>f fmmap_keys f m\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmmap_keys f (m\\<^sub>1 ++\\<^sub>f m\\<^sub>2) =\n    fmmap_keys f m\\<^sub>1 ++\\<^sub>f fmmap_keys f m\\<^sub>2", "using assms"], ["proof (prove)\nusing this:\n  fmdom' m\\<^sub>1 \\<inter> fmdom' m\\<^sub>2 = {}\n\ngoal (1 subgoal):\n 1. fmmap_keys f (m\\<^sub>1 ++\\<^sub>f m\\<^sub>2) =\n    fmmap_keys f m\\<^sub>1 ++\\<^sub>f fmmap_keys f m\\<^sub>2", "by (simp add: fmap_ext)"], ["", "lemma map_insort_is_insort_key:\n  assumes \"m $$ k = None\"\n  shows \"map (\\<lambda>k'. (k', m(k $$:= v) $$! k')) (insort k xs) =\n    insort_key fst (k, v) (map (\\<lambda>k'. (k', m(k $$:= v) $$! k')) xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map (\\<lambda>k'. (k', m(k $$:= v) $$! k')) (insort k xs) =\n    insort_key fst (k, v) (map (\\<lambda>k'. (k', m(k $$:= v) $$! k')) xs)", "using assms"], ["proof (prove)\nusing this:\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. map (\\<lambda>k'. (k', m(k $$:= v) $$! k')) (insort k xs) =\n    insort_key fst (k, v) (map (\\<lambda>k'. (k', m(k $$:= v) $$! k')) xs)", "by (induction xs) auto"], ["", "lemma sorted_list_of_fmap_is_insort_key_fst:\n  assumes \"m $$ k = None\"\n  shows \"sorted_list_of_fmap (m(k $$:= v)) = insort_key fst (k, v) (sorted_list_of_fmap m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_fmap (m(k $$:= v)) =\n    insort_key fst (k, v) (sorted_list_of_fmap m)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sorted_list_of_fmap (m(k $$:= v)) =\n    insort_key fst (k, v) (sorted_list_of_fmap m)", "have \"sorted_list_of_fmap (m(k $$:= v)) =\n    map (\\<lambda>k'. (k', m(k $$:= v) $$! k')) (sorted_list_of_fset (fmdom (m(k $$:= v))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_fmap (m(k $$:= v)) =\n    map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n     (sorted_list_of_fset (fmdom (m(k $$:= v))))", "unfolding sorted_list_of_fmap_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. map (\\<lambda>ka. (ka, m(k $$:= v) $$! ka))\n     (sorted_list_of_fset (fmdom (m(k $$:= v)))) =\n    map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n     (sorted_list_of_fset (fmdom (m(k $$:= v))))", ".."], ["proof (state)\nthis:\n  sorted_list_of_fmap (m(k $$:= v)) =\n  map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n   (sorted_list_of_fset (fmdom (m(k $$:= v))))\n\ngoal (1 subgoal):\n 1. sorted_list_of_fmap (m(k $$:= v)) =\n    insort_key fst (k, v) (sorted_list_of_fmap m)", "also"], ["proof (state)\nthis:\n  sorted_list_of_fmap (m(k $$:= v)) =\n  map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n   (sorted_list_of_fset (fmdom (m(k $$:= v))))\n\ngoal (1 subgoal):\n 1. sorted_list_of_fmap (m(k $$:= v)) =\n    insort_key fst (k, v) (sorted_list_of_fmap m)", "have \"\\<dots> = \tmap (\\<lambda>k'. (k', m(k $$:= v) $$! k')) (sorted_list_of_fset (finsert k (fmdom m)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n     (sorted_list_of_fset (fmdom (m(k $$:= v)))) =\n    map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n     (sorted_list_of_fset (finsert k (fmdom m)))", "by simp"], ["proof (state)\nthis:\n  map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n   (sorted_list_of_fset (fmdom (m(k $$:= v)))) =\n  map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n   (sorted_list_of_fset (finsert k (fmdom m)))\n\ngoal (1 subgoal):\n 1. sorted_list_of_fmap (m(k $$:= v)) =\n    insort_key fst (k, v) (sorted_list_of_fmap m)", "also"], ["proof (state)\nthis:\n  map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n   (sorted_list_of_fset (fmdom (m(k $$:= v)))) =\n  map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n   (sorted_list_of_fset (finsert k (fmdom m)))\n\ngoal (1 subgoal):\n 1. sorted_list_of_fmap (m(k $$:= v)) =\n    insort_key fst (k, v) (sorted_list_of_fmap m)", "from \\<open>m $$ k = None\\<close>"], ["proof (chain)\npicking this:\n  m $$ k = None", "have \"\\<dots> =\n    map (\\<lambda>k'. (k', m(k $$:= v) $$! k')) (insort k (sorted_list_of_fset (fmdom m - {|k|})))\""], ["proof (prove)\nusing this:\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n     (sorted_list_of_fset (finsert k (fmdom m))) =\n    map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n     (insort k (sorted_list_of_fset (fmdom m |-| {|k|})))", "by (simp add: sorted_list_of_fset.rep_eq)"], ["proof (state)\nthis:\n  map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n   (sorted_list_of_fset (finsert k (fmdom m))) =\n  map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n   (insort k (sorted_list_of_fset (fmdom m |-| {|k|})))\n\ngoal (1 subgoal):\n 1. sorted_list_of_fmap (m(k $$:= v)) =\n    insort_key fst (k, v) (sorted_list_of_fmap m)", "also"], ["proof (state)\nthis:\n  map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n   (sorted_list_of_fset (finsert k (fmdom m))) =\n  map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n   (insort k (sorted_list_of_fset (fmdom m |-| {|k|})))\n\ngoal (1 subgoal):\n 1. sorted_list_of_fmap (m(k $$:= v)) =\n    insort_key fst (k, v) (sorted_list_of_fmap m)", "from \\<open>m $$ k = None\\<close>"], ["proof (chain)\npicking this:\n  m $$ k = None", "have \"\\<dots> =\n    map (\\<lambda>k'. (k', m(k $$:= v) $$! k')) (insort k (sorted_list_of_fset (fmdom m)))\""], ["proof (prove)\nusing this:\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n     (insort k (sorted_list_of_fset (fmdom m |-| {|k|}))) =\n    map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n     (insort k (sorted_list_of_fset (fmdom m)))", "by (simp add: fmdom_notI)"], ["proof (state)\nthis:\n  map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n   (insort k (sorted_list_of_fset (fmdom m |-| {|k|}))) =\n  map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n   (insort k (sorted_list_of_fset (fmdom m)))\n\ngoal (1 subgoal):\n 1. sorted_list_of_fmap (m(k $$:= v)) =\n    insort_key fst (k, v) (sorted_list_of_fmap m)", "also"], ["proof (state)\nthis:\n  map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n   (insort k (sorted_list_of_fset (fmdom m |-| {|k|}))) =\n  map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n   (insort k (sorted_list_of_fset (fmdom m)))\n\ngoal (1 subgoal):\n 1. sorted_list_of_fmap (m(k $$:= v)) =\n    insort_key fst (k, v) (sorted_list_of_fmap m)", "from \\<open>m $$ k = None\\<close>"], ["proof (chain)\npicking this:\n  m $$ k = None", "have \"\\<dots> =\n    insort_key fst (k, v) (map (\\<lambda>k'. (k', m(k $$:= v) $$! k')) (sorted_list_of_fset (fmdom m)))\""], ["proof (prove)\nusing this:\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n     (insort k (sorted_list_of_fset (fmdom m))) =\n    insort_key fst (k, v)\n     (map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n       (sorted_list_of_fset (fmdom m)))", "using map_insort_is_insort_key"], ["proof (prove)\nusing this:\n  m $$ k = None\n  ?m $$ ?k = None \\<Longrightarrow>\n  map (\\<lambda>k'. (k', ?m(?k $$:= ?v) $$! k')) (insort ?k ?xs) =\n  insort_key fst (?k, ?v)\n   (map (\\<lambda>k'. (k', ?m(?k $$:= ?v) $$! k')) ?xs)\n\ngoal (1 subgoal):\n 1. map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n     (insort k (sorted_list_of_fset (fmdom m))) =\n    insort_key fst (k, v)\n     (map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n       (sorted_list_of_fset (fmdom m)))", "by fastforce"], ["proof (state)\nthis:\n  map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n   (insort k (sorted_list_of_fset (fmdom m))) =\n  insort_key fst (k, v)\n   (map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n     (sorted_list_of_fset (fmdom m)))\n\ngoal (1 subgoal):\n 1. sorted_list_of_fmap (m(k $$:= v)) =\n    insort_key fst (k, v) (sorted_list_of_fmap m)", "also"], ["proof (state)\nthis:\n  map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n   (insort k (sorted_list_of_fset (fmdom m))) =\n  insort_key fst (k, v)\n   (map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n     (sorted_list_of_fset (fmdom m)))\n\ngoal (1 subgoal):\n 1. sorted_list_of_fmap (m(k $$:= v)) =\n    insort_key fst (k, v) (sorted_list_of_fmap m)", "have \"\\<dots> = insort_key fst (k, v) (map (\\<lambda>k'. (k', m $$! k')) (sorted_list_of_fset (fmdom m)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort_key fst (k, v)\n     (map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n       (sorted_list_of_fset (fmdom m))) =\n    insort_key fst (k, v)\n     (map (\\<lambda>k'. (k', m $$! k')) (sorted_list_of_fset (fmdom m)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. insort_key fst (k, v)\n     (map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n       (sorted_list_of_fset (fmdom m))) =\n    insort_key fst (k, v)\n     (map (\\<lambda>k'. (k', m $$! k')) (sorted_list_of_fset (fmdom m)))", "from \\<open>m $$ k = None\\<close>"], ["proof (chain)\npicking this:\n  m $$ k = None", "have \"\\<And>k'. k' \\<in> fmdom' m \\<Longrightarrow> m(k $$:= v) $$! k' = m $$! k'\""], ["proof (prove)\nusing this:\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. \\<And>k'.\n       k' \\<in> fmdom' m \\<Longrightarrow> m(k $$:= v) $$! k' = m $$! k'", "using fmdom'_notI"], ["proof (prove)\nusing this:\n  m $$ k = None\n  ?m $$ ?x = None \\<Longrightarrow> ?x \\<notin> fmdom' ?m\n\ngoal (1 subgoal):\n 1. \\<And>k'.\n       k' \\<in> fmdom' m \\<Longrightarrow> m(k $$:= v) $$! k' = m $$! k'", "by force"], ["proof (state)\nthis:\n  ?k' \\<in> fmdom' m \\<Longrightarrow> m(k $$:= v) $$! ?k' = m $$! ?k'\n\ngoal (1 subgoal):\n 1. insort_key fst (k, v)\n     (map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n       (sorted_list_of_fset (fmdom m))) =\n    insort_key fst (k, v)\n     (map (\\<lambda>k'. (k', m $$! k')) (sorted_list_of_fset (fmdom m)))", "moreover"], ["proof (state)\nthis:\n  ?k' \\<in> fmdom' m \\<Longrightarrow> m(k $$:= v) $$! ?k' = m $$! ?k'\n\ngoal (1 subgoal):\n 1. insort_key fst (k, v)\n     (map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n       (sorted_list_of_fset (fmdom m))) =\n    insort_key fst (k, v)\n     (map (\\<lambda>k'. (k', m $$! k')) (sorted_list_of_fset (fmdom m)))", "from \\<open>m $$ k = None\\<close>"], ["proof (chain)\npicking this:\n  m $$ k = None", "have \"k \\<notin> set (sorted_list_of_fset (fmdom m))\""], ["proof (prove)\nusing this:\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. k \\<notin> set (sorted_list_of_fset (fmdom m))", "using fmdom'_alt_def and fmdom'_notI and in_set_member"], ["proof (prove)\nusing this:\n  m $$ k = None\n  fmdom' ?m = fset (fmdom ?m)\n  ?m $$ ?x = None \\<Longrightarrow> ?x \\<notin> fmdom' ?m\n  (?x \\<in> set ?xs) = List.member ?xs ?x\n\ngoal (1 subgoal):\n 1. k \\<notin> set (sorted_list_of_fset (fmdom m))", "by force"], ["proof (state)\nthis:\n  k \\<notin> set (sorted_list_of_fset (fmdom m))\n\ngoal (1 subgoal):\n 1. insort_key fst (k, v)\n     (map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n       (sorted_list_of_fset (fmdom m))) =\n    insort_key fst (k, v)\n     (map (\\<lambda>k'. (k', m $$! k')) (sorted_list_of_fset (fmdom m)))", "ultimately"], ["proof (chain)\npicking this:\n  ?k' \\<in> fmdom' m \\<Longrightarrow> m(k $$:= v) $$! ?k' = m $$! ?k'\n  k \\<notin> set (sorted_list_of_fset (fmdom m))", "show ?thesis"], ["proof (prove)\nusing this:\n  ?k' \\<in> fmdom' m \\<Longrightarrow> m(k $$:= v) $$! ?k' = m $$! ?k'\n  k \\<notin> set (sorted_list_of_fset (fmdom m))\n\ngoal (1 subgoal):\n 1. insort_key fst (k, v)\n     (map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n       (sorted_list_of_fset (fmdom m))) =\n    insort_key fst (k, v)\n     (map (\\<lambda>k'. (k', m $$! k')) (sorted_list_of_fset (fmdom m)))", "by (metis (mono_tags, lifting) fmdom'_alt_def map_eq_conv sorted_list_of_fset_simps(1))"], ["proof (state)\nthis:\n  insort_key fst (k, v)\n   (map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n     (sorted_list_of_fset (fmdom m))) =\n  insort_key fst (k, v)\n   (map (\\<lambda>k'. (k', m $$! k')) (sorted_list_of_fset (fmdom m)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insort_key fst (k, v)\n   (map (\\<lambda>k'. (k', m(k $$:= v) $$! k'))\n     (sorted_list_of_fset (fmdom m))) =\n  insort_key fst (k, v)\n   (map (\\<lambda>k'. (k', m $$! k')) (sorted_list_of_fset (fmdom m)))\n\ngoal (1 subgoal):\n 1. sorted_list_of_fmap (m(k $$:= v)) =\n    insort_key fst (k, v) (sorted_list_of_fmap m)", "finally"], ["proof (chain)\npicking this:\n  sorted_list_of_fmap (m(k $$:= v)) =\n  insort_key fst (k, v)\n   (map (\\<lambda>k'. (k', m $$! k')) (sorted_list_of_fset (fmdom m)))", "show ?thesis"], ["proof (prove)\nusing this:\n  sorted_list_of_fmap (m(k $$:= v)) =\n  insort_key fst (k, v)\n   (map (\\<lambda>k'. (k', m $$! k')) (sorted_list_of_fset (fmdom m)))\n\ngoal (1 subgoal):\n 1. sorted_list_of_fmap (m(k $$:= v)) =\n    insort_key fst (k, v) (sorted_list_of_fmap m)", "unfolding sorted_list_of_fmap_def"], ["proof (prove)\nusing this:\n  map (\\<lambda>ka. (ka, m(k $$:= v) $$! ka))\n   (sorted_list_of_fset (fmdom (m(k $$:= v)))) =\n  insort_key fst (k, v)\n   (map (\\<lambda>k'. (k', m $$! k')) (sorted_list_of_fset (fmdom m)))\n\ngoal (1 subgoal):\n 1. map (\\<lambda>ka. (ka, m(k $$:= v) $$! ka))\n     (sorted_list_of_fset (fmdom (m(k $$:= v)))) =\n    insort_key fst (k, v)\n     (map (\\<lambda>k. (k, m $$! k)) (sorted_list_of_fset (fmdom m)))", "by simp"], ["proof (state)\nthis:\n  sorted_list_of_fmap (m(k $$:= v)) =\n  insort_key fst (k, v) (sorted_list_of_fmap m)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma distinct_fst_inj:\n  assumes \"distinct (map fst ps)\"\n  and \"inj f\"\n  shows \"distinct (map fst (map (\\<lambda>(k, v). (f k, v)) ps))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (map fst (map (\\<lambda>(k, v). (f k, v)) ps))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. distinct (map fst (map (\\<lambda>(k, v). (f k, v)) ps))", "have \"map fst (map (\\<lambda>(k, v). (f k, v)) ps) = map f (map fst ps)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map fst (map (\\<lambda>(k, v). (f k, v)) ps) = map f (map fst ps)", "by (induction ps) auto"], ["proof (state)\nthis:\n  map fst (map (\\<lambda>(k, v). (f k, v)) ps) = map f (map fst ps)\n\ngoal (1 subgoal):\n 1. distinct (map fst (map (\\<lambda>(k, v). (f k, v)) ps))", "moreover"], ["proof (state)\nthis:\n  map fst (map (\\<lambda>(k, v). (f k, v)) ps) = map f (map fst ps)\n\ngoal (1 subgoal):\n 1. distinct (map fst (map (\\<lambda>(k, v). (f k, v)) ps))", "from assms"], ["proof (chain)\npicking this:\n  distinct (map fst ps)\n  inj f", "have \"distinct (map f (map fst ps))\""], ["proof (prove)\nusing this:\n  distinct (map fst ps)\n  inj f\n\ngoal (1 subgoal):\n 1. distinct (map f (map fst ps))", "by (simp add: distinct_map inj_on_def)"], ["proof (state)\nthis:\n  distinct (map f (map fst ps))\n\ngoal (1 subgoal):\n 1. distinct (map fst (map (\\<lambda>(k, v). (f k, v)) ps))", "ultimately"], ["proof (chain)\npicking this:\n  map fst (map (\\<lambda>(k, v). (f k, v)) ps) = map f (map fst ps)\n  distinct (map f (map fst ps))", "show ?thesis"], ["proof (prove)\nusing this:\n  map fst (map (\\<lambda>(k, v). (f k, v)) ps) = map f (map fst ps)\n  distinct (map f (map fst ps))\n\ngoal (1 subgoal):\n 1. distinct (map fst (map (\\<lambda>(k, v). (f k, v)) ps))", "by presburger"], ["proof (state)\nthis:\n  distinct (map fst (map (\\<lambda>(k, v). (f k, v)) ps))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma distinct_sorted_list_of_fmap:\n  shows \"distinct (map fst (sorted_list_of_fmap m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (map fst (sorted_list_of_fmap m))", "unfolding sorted_list_of_fmap_def and sorted_list_of_fset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct\n     (map fst\n       (map (\\<lambda>k. (k, m $$! k))\n         (map_fun fset id sorted_list_of_set (fmdom m))))", "by (simp add: distinct_map inj_on_def)"], ["", "lemma map_inj_pair_non_membership:\n  assumes \"k \\<notin> set (map fst ps)\"\n  and \"inj f\"\n  shows \"f k \\<notin> set (map fst (map (\\<lambda>(k, v). (f k, v)) ps))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f k \\<notin> set (map fst (map (\\<lambda>(k, v). (f k, v)) ps))", "using assms"], ["proof (prove)\nusing this:\n  k \\<notin> set (map fst ps)\n  inj f\n\ngoal (1 subgoal):\n 1. f k \\<notin> set (map fst (map (\\<lambda>(k, v). (f k, v)) ps))", "by (induction ps) (simp add: member_rec(2), fastforce simp add: injD)"], ["", "lemma map_insort_key_fst:\n  assumes \"distinct (map fst ps)\"\n  and \"k \\<notin> set (map fst ps)\"\n  and \"inj f\"\n  and \"mono f\"\n  shows \"map (\\<lambda>(k, v). (f k, v)) (insort_key fst (k, v) ps) =\n    insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) ps)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v)) (insort_key fst (k, v) ps) =\n    insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) ps)", "using assms"], ["proof (prove)\nusing this:\n  distinct (map fst ps)\n  k \\<notin> set (map fst ps)\n  inj f\n  mono f\n\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v)) (insort_key fst (k, v) ps) =\n    insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) ps)", "proof (induction ps)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct (map fst []); k \\<notin> set (map fst []); inj f;\n     mono f\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>(k, y). (f k, y))\n                       (insort_key fst (k, v) []) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>(k, y). (f k, y)) [])\n 2. \\<And>a ps.\n       \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n                 inj f; mono f\\<rbrakk>\n                \\<Longrightarrow> map (\\<lambda>(k, y). (f k, y))\n                                   (insort_key fst (k, v) ps) =\n                                  insort_key fst (f k, v)\n                                   (map (\\<lambda>(k, y). (f k, y)) ps);\n        distinct (map fst (a # ps)); k \\<notin> set (map fst (a # ps));\n        inj f; mono f\\<rbrakk>\n       \\<Longrightarrow> map (\\<lambda>(k, y). (f k, y))\n                          (insort_key fst (k, v) (a # ps)) =\n                         insort_key fst (f k, v)\n                          (map (\\<lambda>(k, y). (f k, y)) (a # ps))", "case Nil"], ["proof (state)\nthis:\n  distinct (map fst [])\n  k \\<notin> set (map fst [])\n  inj f\n  mono f\n\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct (map fst []); k \\<notin> set (map fst []); inj f;\n     mono f\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>(k, y). (f k, y))\n                       (insort_key fst (k, v) []) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>(k, y). (f k, y)) [])\n 2. \\<And>a ps.\n       \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n                 inj f; mono f\\<rbrakk>\n                \\<Longrightarrow> map (\\<lambda>(k, y). (f k, y))\n                                   (insort_key fst (k, v) ps) =\n                                  insort_key fst (f k, v)\n                                   (map (\\<lambda>(k, y). (f k, y)) ps);\n        distinct (map fst (a # ps)); k \\<notin> set (map fst (a # ps));\n        inj f; mono f\\<rbrakk>\n       \\<Longrightarrow> map (\\<lambda>(k, y). (f k, y))\n                          (insort_key fst (k, v) (a # ps)) =\n                         insort_key fst (f k, v)\n                          (map (\\<lambda>(k, y). (f k, y)) (a # ps))", "then"], ["proof (chain)\npicking this:\n  distinct (map fst [])\n  k \\<notin> set (map fst [])\n  inj f\n  mono f", "show ?case"], ["proof (prove)\nusing this:\n  distinct (map fst [])\n  k \\<notin> set (map fst [])\n  inj f\n  mono f\n\ngoal (1 subgoal):\n 1. map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a))\n     (insort_key fst (k, v) []) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a)) [])", "by simp"], ["proof (state)\nthis:\n  map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a))\n   (insort_key fst (k, v) []) =\n  insort_key fst (f k, v)\n   (map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a)) [])\n\ngoal (1 subgoal):\n 1. \\<And>a ps.\n       \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n                 inj f; mono f\\<rbrakk>\n                \\<Longrightarrow> map (\\<lambda>(k, y). (f k, y))\n                                   (insort_key fst (k, v) ps) =\n                                  insort_key fst (f k, v)\n                                   (map (\\<lambda>(k, y). (f k, y)) ps);\n        distinct (map fst (a # ps)); k \\<notin> set (map fst (a # ps));\n        inj f; mono f\\<rbrakk>\n       \\<Longrightarrow> map (\\<lambda>(k, y). (f k, y))\n                          (insort_key fst (k, v) (a # ps)) =\n                         insort_key fst (f k, v)\n                          (map (\\<lambda>(k, y). (f k, y)) (a # ps))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a ps.\n       \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n                 inj f; mono f\\<rbrakk>\n                \\<Longrightarrow> map (\\<lambda>(k, y). (f k, y))\n                                   (insort_key fst (k, v) ps) =\n                                  insort_key fst (f k, v)\n                                   (map (\\<lambda>(k, y). (f k, y)) ps);\n        distinct (map fst (a # ps)); k \\<notin> set (map fst (a # ps));\n        inj f; mono f\\<rbrakk>\n       \\<Longrightarrow> map (\\<lambda>(k, y). (f k, y))\n                          (insort_key fst (k, v) (a # ps)) =\n                         insort_key fst (f k, v)\n                          (map (\\<lambda>(k, y). (f k, y)) (a # ps))", "let ?g = \"(\\<lambda>(k, v). (f k, v))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a ps.\n       \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n                 inj f; mono f\\<rbrakk>\n                \\<Longrightarrow> map (\\<lambda>(k, y). (f k, y))\n                                   (insort_key fst (k, v) ps) =\n                                  insort_key fst (f k, v)\n                                   (map (\\<lambda>(k, y). (f k, y)) ps);\n        distinct (map fst (a # ps)); k \\<notin> set (map fst (a # ps));\n        inj f; mono f\\<rbrakk>\n       \\<Longrightarrow> map (\\<lambda>(k, y). (f k, y))\n                          (insort_key fst (k, v) (a # ps)) =\n                         insort_key fst (f k, v)\n                          (map (\\<lambda>(k, y). (f k, y)) (a # ps))", "case (Cons p ps)"], ["proof (state)\nthis:\n  \\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps); inj f;\n   mono f\\<rbrakk>\n  \\<Longrightarrow> map (\\<lambda>a.\n                            case a of (k, a) \\<Rightarrow> (f k, a))\n                     (insort_key fst (k, v) ps) =\n                    insort_key fst (f k, v)\n                     (map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       ps)\n  distinct (map fst (p # ps))\n  k \\<notin> set (map fst (p # ps))\n  inj f\n  mono f\n\ngoal (1 subgoal):\n 1. \\<And>a ps.\n       \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n                 inj f; mono f\\<rbrakk>\n                \\<Longrightarrow> map (\\<lambda>(k, y). (f k, y))\n                                   (insort_key fst (k, v) ps) =\n                                  insort_key fst (f k, v)\n                                   (map (\\<lambda>(k, y). (f k, y)) ps);\n        distinct (map fst (a # ps)); k \\<notin> set (map fst (a # ps));\n        inj f; mono f\\<rbrakk>\n       \\<Longrightarrow> map (\\<lambda>(k, y). (f k, y))\n                          (insort_key fst (k, v) (a # ps)) =\n                         insort_key fst (f k, v)\n                          (map (\\<lambda>(k, y). (f k, y)) (a # ps))", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps); inj f;\n   mono f\\<rbrakk>\n  \\<Longrightarrow> map (\\<lambda>a.\n                            case a of (k, a) \\<Rightarrow> (f k, a))\n                     (insort_key fst (k, v) ps) =\n                    insort_key fst (f k, v)\n                     (map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       ps)\n  distinct (map fst (p # ps))\n  k \\<notin> set (map fst (p # ps))\n  inj f\n  mono f", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps); inj f;\n   mono f\\<rbrakk>\n  \\<Longrightarrow> map (\\<lambda>a.\n                            case a of (k, a) \\<Rightarrow> (f k, a))\n                     (insort_key fst (k, v) ps) =\n                    insort_key fst (f k, v)\n                     (map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       ps)\n  distinct (map fst (p # ps))\n  k \\<notin> set (map fst (p # ps))\n  inj f\n  mono f\n\ngoal (1 subgoal):\n 1. map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a))\n     (insort_key fst (k, v) (p # ps)) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a)) (p # ps))", "proof (cases \"k \\<le> fst p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))\n 2. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "case True"], ["proof (state)\nthis:\n  k \\<le> fst p\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))\n 2. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "let ?f_p = \"(f (fst p), snd p)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))\n 2. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "have \"insort_key fst (f k, v) (map ?g (p # ps)) = insort_key fst (f k, v) (?f_p # map ?g ps)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n    insort_key fst (f k, v)\n     ((f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps)", "by (simp add: prod.case_eq_if)"], ["proof (state)\nthis:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  insort_key fst (f k, v)\n   ((f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))\n 2. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "moreover"], ["proof (state)\nthis:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  insort_key fst (f k, v)\n   ((f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))\n 2. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "from Cons.prems(4) and True"], ["proof (chain)\npicking this:\n  mono f\n  k \\<le> fst p", "have \"f k \\<le> f (fst p)\""], ["proof (prove)\nusing this:\n  mono f\n  k \\<le> fst p\n\ngoal (1 subgoal):\n 1. f k \\<le> f (fst p)", "by (auto dest: monoE)"], ["proof (state)\nthis:\n  f k \\<le> f (fst p)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))\n 2. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "then"], ["proof (chain)\npicking this:\n  f k \\<le> f (fst p)", "have \"insort_key fst (f k, v) (?f_p # map ?g ps) = (f k, v) # ?f_p # map ?g ps\""], ["proof (prove)\nusing this:\n  f k \\<le> f (fst p)\n\ngoal (1 subgoal):\n 1. insort_key fst (f k, v)\n     ((f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps) =\n    (f k, v) # (f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps", "by simp"], ["proof (state)\nthis:\n  insort_key fst (f k, v)\n   ((f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps) =\n  (f k, v) # (f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))\n 2. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "ultimately"], ["proof (chain)\npicking this:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  insort_key fst (f k, v)\n   ((f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps)\n  insort_key fst (f k, v)\n   ((f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps) =\n  (f k, v) # (f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps", "have \"insort_key fst (f k, v) (map ?g (p # ps)) = (f k, v) # ?f_p # map ?g ps\""], ["proof (prove)\nusing this:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  insort_key fst (f k, v)\n   ((f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps)\n  insort_key fst (f k, v)\n   ((f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps) =\n  (f k, v) # (f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps\n\ngoal (1 subgoal):\n 1. insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n    (f k, v) # (f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps", "by simp"], ["proof (state)\nthis:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  (f k, v) # (f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))\n 2. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "moreover"], ["proof (state)\nthis:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  (f k, v) # (f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))\n 2. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "from True"], ["proof (chain)\npicking this:\n  k \\<le> fst p", "have \"map ?g (insort_key fst (k, v) (p # ps)) = (f k, v) # ?f_p # map ?g ps\""], ["proof (prove)\nusing this:\n  k \\<le> fst p\n\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v)) (insort_key fst (k, v) (p # ps)) =\n    (f k, v) # (f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps", "by (simp add: case_prod_beta')"], ["proof (state)\nthis:\n  map (\\<lambda>(k, v). (f k, v)) (insort_key fst (k, v) (p # ps)) =\n  (f k, v) # (f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))\n 2. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "ultimately"], ["proof (chain)\npicking this:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  (f k, v) # (f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps\n  map (\\<lambda>(k, v). (f k, v)) (insort_key fst (k, v) (p # ps)) =\n  (f k, v) # (f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps", "show ?thesis"], ["proof (prove)\nusing this:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  (f k, v) # (f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps\n  map (\\<lambda>(k, v). (f k, v)) (insort_key fst (k, v) (p # ps)) =\n  (f k, v) # (f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps\n\ngoal (1 subgoal):\n 1. map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a))\n     (insort_key fst (k, v) (p # ps)) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a)) (p # ps))", "by simp"], ["proof (state)\nthis:\n  map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a))\n   (insort_key fst (k, v) (p # ps)) =\n  insort_key fst (f k, v)\n   (map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a)) (p # ps))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "case False"], ["proof (state)\nthis:\n  \\<not> k \\<le> fst p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "let ?f_p = \"(f (fst p), snd p)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "have \"insort_key fst (f k, v) (map ?g (p # ps)) = insort_key fst (f k, v) (?f_p # map ?g ps)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n    insort_key fst (f k, v)\n     ((f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps)", "by (simp add: prod.case_eq_if)"], ["proof (state)\nthis:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  insort_key fst (f k, v)\n   ((f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "moreover"], ["proof (state)\nthis:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  insort_key fst (f k, v)\n   ((f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "from \\<open>mono f\\<close> and False"], ["proof (chain)\npicking this:\n  mono f\n  \\<not> k \\<le> fst p", "have \"f (fst p) \\<le> f k\""], ["proof (prove)\nusing this:\n  mono f\n  \\<not> k \\<le> fst p\n\ngoal (1 subgoal):\n 1. f (fst p) \\<le> f k", "using not_le"], ["proof (prove)\nusing this:\n  mono f\n  \\<not> k \\<le> fst p\n  (\\<not> ?x \\<le> ?y) = (?y < ?x)\n\ngoal (1 subgoal):\n 1. f (fst p) \\<le> f k", "by (blast dest: mono_invE)"], ["proof (state)\nthis:\n  f (fst p) \\<le> f k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "ultimately"], ["proof (chain)\npicking this:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  insort_key fst (f k, v)\n   ((f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps)\n  f (fst p) \\<le> f k", "have \"insort_key fst (f k, v) (map ?g (p # ps)) =\n      ?f_p # insort_key fst (f k, v) (map ?g ps)\""], ["proof (prove)\nusing this:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  insort_key fst (f k, v)\n   ((f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps)\n  f (fst p) \\<le> f k\n\ngoal (1 subgoal):\n 1. insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n    (f (fst p), snd p) #\n    insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) ps)", "using False and \\<open>inj f\\<close>"], ["proof (prove)\nusing this:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  insort_key fst (f k, v)\n   ((f (fst p), snd p) # map (\\<lambda>(k, v). (f k, v)) ps)\n  f (fst p) \\<le> f k\n  \\<not> k \\<le> fst p\n  inj f\n\ngoal (1 subgoal):\n 1. insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n    (f (fst p), snd p) #\n    insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) ps)", "by (fastforce dest: injD)"], ["proof (state)\nthis:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  (f (fst p), snd p) #\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) ps)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "also"], ["proof (state)\nthis:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  (f (fst p), snd p) #\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) ps)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "from Cons.IH and Cons.prems(1,2) and assms(3,4)"], ["proof (chain)\npicking this:\n  \\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps); inj f;\n   mono f\\<rbrakk>\n  \\<Longrightarrow> map (\\<lambda>a.\n                            case a of (k, a) \\<Rightarrow> (f k, a))\n                     (insort_key fst (k, v) ps) =\n                    insort_key fst (f k, v)\n                     (map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       ps)\n  distinct (map fst (p # ps))\n  k \\<notin> set (map fst (p # ps))\n  inj f\n  mono f", "have \"\\<dots> =\n      ?f_p # (map ?g (insort_key fst (k, v) ps))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps); inj f;\n   mono f\\<rbrakk>\n  \\<Longrightarrow> map (\\<lambda>a.\n                            case a of (k, a) \\<Rightarrow> (f k, a))\n                     (insort_key fst (k, v) ps) =\n                    insort_key fst (f k, v)\n                     (map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       ps)\n  distinct (map fst (p # ps))\n  k \\<notin> set (map fst (p # ps))\n  inj f\n  mono f\n\ngoal (1 subgoal):\n 1. (f (fst p), snd p) #\n    insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) ps) =\n    (f (fst p), snd p) #\n    map (\\<lambda>(k, v). (f k, v)) (insort_key fst (k, v) ps)", "by (fastforce simp add: member_rec(1))"], ["proof (state)\nthis:\n  (f (fst p), snd p) #\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) ps) =\n  (f (fst p), snd p) #\n  map (\\<lambda>(k, v). (f k, v)) (insort_key fst (k, v) ps)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "also"], ["proof (state)\nthis:\n  (f (fst p), snd p) #\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) ps) =\n  (f (fst p), snd p) #\n  map (\\<lambda>(k, v). (f k, v)) (insort_key fst (k, v) ps)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "have \"\\<dots> = map ?g (p # insort_key fst (k, v) ps)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f (fst p), snd p) #\n    map (\\<lambda>(k, v). (f k, v)) (insort_key fst (k, v) ps) =\n    map (\\<lambda>(k, v). (f k, v)) (p # insort_key fst (k, v) ps)", "by (simp add: case_prod_beta)"], ["proof (state)\nthis:\n  (f (fst p), snd p) #\n  map (\\<lambda>(k, v). (f k, v)) (insort_key fst (k, v) ps) =\n  map (\\<lambda>(k, v). (f k, v)) (p # insort_key fst (k, v) ps)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps);\n              inj f; mono f\\<rbrakk>\n             \\<Longrightarrow> map (\\<lambda>a.\n case a of (k, a) \\<Rightarrow> (f k, a))\n                                (insort_key fst (k, v) ps) =\n                               insort_key fst (f k, v)\n                                (map (\\<lambda>a.\n   case a of (k, a) \\<Rightarrow> (f k, a))\n                                  ps);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps)); inj f;\n     mono f; \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>a.\n                              case a of (k, a) \\<Rightarrow> (f k, a))\n                       (insort_key fst (k, v) (p # ps)) =\n                      insort_key fst (f k, v)\n                       (map (\\<lambda>a.\n                                case a of (k, a) \\<Rightarrow> (f k, a))\n                         (p # ps))", "finally"], ["proof (chain)\npicking this:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  map (\\<lambda>(k, v). (f k, v)) (p # insort_key fst (k, v) ps)", "show ?thesis"], ["proof (prove)\nusing this:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  map (\\<lambda>(k, v). (f k, v)) (p # insort_key fst (k, v) ps)\n\ngoal (1 subgoal):\n 1. map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a))\n     (insort_key fst (k, v) (p # ps)) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a)) (p # ps))", "using False"], ["proof (prove)\nusing this:\n  insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (p # ps)) =\n  map (\\<lambda>(k, v). (f k, v)) (p # insort_key fst (k, v) ps)\n  \\<not> k \\<le> fst p\n\ngoal (1 subgoal):\n 1. map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a))\n     (insort_key fst (k, v) (p # ps)) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a)) (p # ps))", "by simp"], ["proof (state)\nthis:\n  map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a))\n   (insort_key fst (k, v) (p # ps)) =\n  insort_key fst (f k, v)\n   (map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a)) (p # ps))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a))\n   (insort_key fst (k, v) (p # ps)) =\n  insort_key fst (f k, v)\n   (map (\\<lambda>a. case a of (k, a) \\<Rightarrow> (f k, a)) (p # ps))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma map_sorted_list_of_fmap:\n  assumes \"inj f\"\n  and \"mono f\"\n  and \"m $$ k = None\"\n  shows \"map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v))) =\n    insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v))) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v))) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))", "let ?g = \"(\\<lambda>(k, v). (f k, v))\""], ["proof (state)\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v))) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))", "from \\<open>m $$ k = None\\<close>"], ["proof (chain)\npicking this:\n  m $$ k = None", "have \"map ?g (sorted_list_of_fmap (m(k $$:= v))) =\n  \tmap ?g (insort_key fst (k, v) (sorted_list_of_fmap m))\""], ["proof (prove)\nusing this:\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v))) =\n    map (\\<lambda>(k, v). (f k, v))\n     (insort_key fst (k, v) (sorted_list_of_fmap m))", "using sorted_list_of_fmap_is_insort_key_fst"], ["proof (prove)\nusing this:\n  m $$ k = None\n  ?m $$ ?k = None \\<Longrightarrow>\n  sorted_list_of_fmap (?m(?k $$:= ?v)) =\n  insort_key fst (?k, ?v) (sorted_list_of_fmap ?m)\n\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v))) =\n    map (\\<lambda>(k, v). (f k, v))\n     (insort_key fst (k, v) (sorted_list_of_fmap m))", "by fastforce"], ["proof (state)\nthis:\n  map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v))) =\n  map (\\<lambda>(k, v). (f k, v))\n   (insort_key fst (k, v) (sorted_list_of_fmap m))\n\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v))) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))", "also"], ["proof (state)\nthis:\n  map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v))) =\n  map (\\<lambda>(k, v). (f k, v))\n   (insort_key fst (k, v) (sorted_list_of_fmap m))\n\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v))) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))", "have \"\\<dots> = insort_key fst (f k, v) (map ?g (sorted_list_of_fmap m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v))\n     (insort_key fst (k, v) (sorted_list_of_fmap m)) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v))\n     (insort_key fst (k, v) (sorted_list_of_fmap m)) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))", "have \"distinct (map fst (sorted_list_of_fmap m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (map fst (sorted_list_of_fmap m))", "by (simp add: distinct_sorted_list_of_fmap)"], ["proof (state)\nthis:\n  distinct (map fst (sorted_list_of_fmap m))\n\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v))\n     (insort_key fst (k, v) (sorted_list_of_fmap m)) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))", "moreover"], ["proof (state)\nthis:\n  distinct (map fst (sorted_list_of_fmap m))\n\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v))\n     (insort_key fst (k, v) (sorted_list_of_fmap m)) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))", "from \\<open>m $$ k = None\\<close>"], ["proof (chain)\npicking this:\n  m $$ k = None", "have \"k \\<notin> set (map fst (sorted_list_of_fmap m))\""], ["proof (prove)\nusing this:\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. k \\<notin> set (map fst (sorted_list_of_fmap m))", "by (metis image_set map_of_eq_None_iff map_of_sorted_list)"], ["proof (state)\nthis:\n  k \\<notin> set (map fst (sorted_list_of_fmap m))\n\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v))\n     (insort_key fst (k, v) (sorted_list_of_fmap m)) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))", "ultimately"], ["proof (chain)\npicking this:\n  distinct (map fst (sorted_list_of_fmap m))\n  k \\<notin> set (map fst (sorted_list_of_fmap m))", "show ?thesis"], ["proof (prove)\nusing this:\n  distinct (map fst (sorted_list_of_fmap m))\n  k \\<notin> set (map fst (sorted_list_of_fmap m))\n\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v))\n     (insort_key fst (k, v) (sorted_list_of_fmap m)) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))", "by (simp add: map_insort_key_fst assms(1,2))"], ["proof (state)\nthis:\n  map (\\<lambda>(k, v). (f k, v))\n   (insort_key fst (k, v) (sorted_list_of_fmap m)) =\n  insort_key fst (f k, v)\n   (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  map (\\<lambda>(k, v). (f k, v))\n   (insort_key fst (k, v) (sorted_list_of_fmap m)) =\n  insort_key fst (f k, v)\n   (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v))) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))", "finally"], ["proof (chain)\npicking this:\n  map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v))) =\n  insort_key fst (f k, v)\n   (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))", "show ?thesis"], ["proof (prove)\nusing this:\n  map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v))) =\n  insort_key fst (f k, v)\n   (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n\ngoal (1 subgoal):\n 1. map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v))) =\n    insort_key fst (f k, v)\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))", "."], ["proof (state)\nthis:\n  map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v))) =\n  insort_key fst (f k, v)\n   (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fmap_of_list_insort_key_fst:\n  assumes \"distinct (map fst ps)\"\n  and \"k \\<notin> set (map fst ps)\"\n  shows \"fmap_of_list (insort_key fst (k, v) ps) = (fmap_of_list ps)(k $$:= v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmap_of_list (insort_key fst (k, v) ps) = fmap_of_list ps(k $$:= v)", "using assms"], ["proof (prove)\nusing this:\n  distinct (map fst ps)\n  k \\<notin> set (map fst ps)\n\ngoal (1 subgoal):\n 1. fmap_of_list (insort_key fst (k, v) ps) = fmap_of_list ps(k $$:= v)", "proof (induction ps)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct (map fst []); k \\<notin> set (map fst [])\\<rbrakk>\n    \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) []) =\n                      fmap_of_list [](k $$:= v)\n 2. \\<And>a ps.\n       \\<lbrakk>\\<lbrakk>distinct (map fst ps);\n                 k \\<notin> set (map fst ps)\\<rbrakk>\n                \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                                  fmap_of_list ps(k $$:= v);\n        distinct (map fst (a # ps));\n        k \\<notin> set (map fst (a # ps))\\<rbrakk>\n       \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) (a # ps)) =\n                         fmap_of_list (a # ps)(k $$:= v)", "case Nil"], ["proof (state)\nthis:\n  distinct (map fst [])\n  k \\<notin> set (map fst [])\n\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct (map fst []); k \\<notin> set (map fst [])\\<rbrakk>\n    \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) []) =\n                      fmap_of_list [](k $$:= v)\n 2. \\<And>a ps.\n       \\<lbrakk>\\<lbrakk>distinct (map fst ps);\n                 k \\<notin> set (map fst ps)\\<rbrakk>\n                \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                                  fmap_of_list ps(k $$:= v);\n        distinct (map fst (a # ps));\n        k \\<notin> set (map fst (a # ps))\\<rbrakk>\n       \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) (a # ps)) =\n                         fmap_of_list (a # ps)(k $$:= v)", "then"], ["proof (chain)\npicking this:\n  distinct (map fst [])\n  k \\<notin> set (map fst [])", "show ?case"], ["proof (prove)\nusing this:\n  distinct (map fst [])\n  k \\<notin> set (map fst [])\n\ngoal (1 subgoal):\n 1. fmap_of_list (insort_key fst (k, v) []) = fmap_of_list [](k $$:= v)", "by simp"], ["proof (state)\nthis:\n  fmap_of_list (insort_key fst (k, v) []) = fmap_of_list [](k $$:= v)\n\ngoal (1 subgoal):\n 1. \\<And>a ps.\n       \\<lbrakk>\\<lbrakk>distinct (map fst ps);\n                 k \\<notin> set (map fst ps)\\<rbrakk>\n                \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                                  fmap_of_list ps(k $$:= v);\n        distinct (map fst (a # ps));\n        k \\<notin> set (map fst (a # ps))\\<rbrakk>\n       \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) (a # ps)) =\n                         fmap_of_list (a # ps)(k $$:= v)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a ps.\n       \\<lbrakk>\\<lbrakk>distinct (map fst ps);\n                 k \\<notin> set (map fst ps)\\<rbrakk>\n                \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                                  fmap_of_list ps(k $$:= v);\n        distinct (map fst (a # ps));\n        k \\<notin> set (map fst (a # ps))\\<rbrakk>\n       \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) (a # ps)) =\n                         fmap_of_list (a # ps)(k $$:= v)", "case (Cons p ps)"], ["proof (state)\nthis:\n  \\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps)\\<rbrakk>\n  \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                    fmap_of_list ps(k $$:= v)\n  distinct (map fst (p # ps))\n  k \\<notin> set (map fst (p # ps))\n\ngoal (1 subgoal):\n 1. \\<And>a ps.\n       \\<lbrakk>\\<lbrakk>distinct (map fst ps);\n                 k \\<notin> set (map fst ps)\\<rbrakk>\n                \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                                  fmap_of_list ps(k $$:= v);\n        distinct (map fst (a # ps));\n        k \\<notin> set (map fst (a # ps))\\<rbrakk>\n       \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) (a # ps)) =\n                         fmap_of_list (a # ps)(k $$:= v)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps)\\<rbrakk>\n  \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                    fmap_of_list ps(k $$:= v)\n  distinct (map fst (p # ps))\n  k \\<notin> set (map fst (p # ps))", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps)\\<rbrakk>\n  \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                    fmap_of_list ps(k $$:= v)\n  distinct (map fst (p # ps))\n  k \\<notin> set (map fst (p # ps))\n\ngoal (1 subgoal):\n 1. fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list (p # ps)(k \n    $$:= v)", "proof (cases \"k \\<le> fst p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps);\n              k \\<notin> set (map fst ps)\\<rbrakk>\n             \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                               fmap_of_list ps(k $$:= v);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps));\n     k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) (p # ps)) =\n                      fmap_of_list (p # ps)(k $$:= v)\n 2. \\<lbrakk>\\<lbrakk>distinct (map fst ps);\n              k \\<notin> set (map fst ps)\\<rbrakk>\n             \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                               fmap_of_list ps(k $$:= v);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps));\n     \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) (p # ps)) =\n                      fmap_of_list (p # ps)(k $$:= v)", "case True"], ["proof (state)\nthis:\n  k \\<le> fst p\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps);\n              k \\<notin> set (map fst ps)\\<rbrakk>\n             \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                               fmap_of_list ps(k $$:= v);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps));\n     k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) (p # ps)) =\n                      fmap_of_list (p # ps)(k $$:= v)\n 2. \\<lbrakk>\\<lbrakk>distinct (map fst ps);\n              k \\<notin> set (map fst ps)\\<rbrakk>\n             \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                               fmap_of_list ps(k $$:= v);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps));\n     \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) (p # ps)) =\n                      fmap_of_list (p # ps)(k $$:= v)", "then"], ["proof (chain)\npicking this:\n  k \\<le> fst p", "show ?thesis"], ["proof (prove)\nusing this:\n  k \\<le> fst p\n\ngoal (1 subgoal):\n 1. fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list (p # ps)(k \n    $$:= v)", "by simp"], ["proof (state)\nthis:\n  fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list (p # ps)(k \n  $$:= v)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps);\n              k \\<notin> set (map fst ps)\\<rbrakk>\n             \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                               fmap_of_list ps(k $$:= v);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps));\n     \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) (p # ps)) =\n                      fmap_of_list (p # ps)(k $$:= v)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps);\n              k \\<notin> set (map fst ps)\\<rbrakk>\n             \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                               fmap_of_list ps(k $$:= v);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps));\n     \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) (p # ps)) =\n                      fmap_of_list (p # ps)(k $$:= v)", "case False"], ["proof (state)\nthis:\n  \\<not> k \\<le> fst p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps);\n              k \\<notin> set (map fst ps)\\<rbrakk>\n             \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                               fmap_of_list ps(k $$:= v);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps));\n     \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) (p # ps)) =\n                      fmap_of_list (p # ps)(k $$:= v)", "then"], ["proof (chain)\npicking this:\n  \\<not> k \\<le> fst p", "have \"fmap_of_list (insort_key fst (k, v) (p # ps)) =\n      fmap_of_list (p # insort_key fst (k, v) ps)\""], ["proof (prove)\nusing this:\n  \\<not> k \\<le> fst p\n\ngoal (1 subgoal):\n 1. fmap_of_list (insort_key fst (k, v) (p # ps)) =\n    fmap_of_list (p # insort_key fst (k, v) ps)", "by simp"], ["proof (state)\nthis:\n  fmap_of_list (insort_key fst (k, v) (p # ps)) =\n  fmap_of_list (p # insort_key fst (k, v) ps)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps);\n              k \\<notin> set (map fst ps)\\<rbrakk>\n             \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                               fmap_of_list ps(k $$:= v);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps));\n     \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) (p # ps)) =\n                      fmap_of_list (p # ps)(k $$:= v)", "also"], ["proof (state)\nthis:\n  fmap_of_list (insort_key fst (k, v) (p # ps)) =\n  fmap_of_list (p # insort_key fst (k, v) ps)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps);\n              k \\<notin> set (map fst ps)\\<rbrakk>\n             \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                               fmap_of_list ps(k $$:= v);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps));\n     \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) (p # ps)) =\n                      fmap_of_list (p # ps)(k $$:= v)", "have \"\\<dots> = (fmap_of_list (insort_key fst (k, v) ps))(fst p $$:= snd p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmap_of_list (p # insort_key fst (k, v) ps) =\n    fmap_of_list (insort_key fst (k, v) ps)(fst p $$:= snd p)", "by (metis fmap_of_list_simps(2) prod.collapse)"], ["proof (state)\nthis:\n  fmap_of_list (p # insort_key fst (k, v) ps) =\n  fmap_of_list (insort_key fst (k, v) ps)(fst p $$:= snd p)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps);\n              k \\<notin> set (map fst ps)\\<rbrakk>\n             \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                               fmap_of_list ps(k $$:= v);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps));\n     \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) (p # ps)) =\n                      fmap_of_list (p # ps)(k $$:= v)", "also"], ["proof (state)\nthis:\n  fmap_of_list (p # insort_key fst (k, v) ps) =\n  fmap_of_list (insort_key fst (k, v) ps)(fst p $$:= snd p)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps);\n              k \\<notin> set (map fst ps)\\<rbrakk>\n             \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                               fmap_of_list ps(k $$:= v);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps));\n     \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) (p # ps)) =\n                      fmap_of_list (p # ps)(k $$:= v)", "from Cons.prems(1,2) and Cons.IH"], ["proof (chain)\npicking this:\n  distinct (map fst (p # ps))\n  k \\<notin> set (map fst (p # ps))\n  \\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps)\\<rbrakk>\n  \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                    fmap_of_list ps(k $$:= v)", "have \"\\<dots> = (fmap_of_list ps)(k $$:= v)(fst p $$:= snd p)\""], ["proof (prove)\nusing this:\n  distinct (map fst (p # ps))\n  k \\<notin> set (map fst (p # ps))\n  \\<lbrakk>distinct (map fst ps); k \\<notin> set (map fst ps)\\<rbrakk>\n  \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                    fmap_of_list ps(k $$:= v)\n\ngoal (1 subgoal):\n 1. fmap_of_list (insort_key fst (k, v) ps)(fst p $$:= snd p) =\n    fmap_of_list ps(k $$:= v, fst p $$:= snd p)", "by (fastforce simp add: member_rec(1))"], ["proof (state)\nthis:\n  fmap_of_list (insort_key fst (k, v) ps)(fst p $$:= snd p) =\n  fmap_of_list ps(k $$:= v, fst p $$:= snd p)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>distinct (map fst ps);\n              k \\<notin> set (map fst ps)\\<rbrakk>\n             \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) ps) =\n                               fmap_of_list ps(k $$:= v);\n     distinct (map fst (p # ps)); k \\<notin> set (map fst (p # ps));\n     \\<not> k \\<le> fst p\\<rbrakk>\n    \\<Longrightarrow> fmap_of_list (insort_key fst (k, v) (p # ps)) =\n                      fmap_of_list (p # ps)(k $$:= v)", "finally"], ["proof (chain)\npicking this:\n  fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list ps(k $$:= v,\n  fst p $$:= snd p)", "show ?thesis"], ["proof (prove)\nusing this:\n  fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list ps(k $$:= v,\n  fst p $$:= snd p)\n\ngoal (1 subgoal):\n 1. fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list (p # ps)(k \n    $$:= v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list ps(k $$:=\n    v, fst p $$:= snd p) \\<Longrightarrow>\n    fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list (p # ps)(k \n    $$:= v)", "assume *: \"fmap_of_list (insort_key fst (k, v) (p # ps)) =\n        (fmap_of_list ps)(k $$:= v)(fst p $$:= snd p)\""], ["proof (state)\nthis:\n  fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list ps(k $$:= v,\n  fst p $$:= snd p)\n\ngoal (1 subgoal):\n 1. fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list ps(k $$:=\n    v, fst p $$:= snd p) \\<Longrightarrow>\n    fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list (p # ps)(k \n    $$:= v)", "from Cons.prems(2)"], ["proof (chain)\npicking this:\n  k \\<notin> set (map fst (p # ps))", "have \"k \\<notin> set (fst p # map fst ps)\""], ["proof (prove)\nusing this:\n  k \\<notin> set (map fst (p # ps))\n\ngoal (1 subgoal):\n 1. k \\<notin> set (fst p # map fst ps)", "by simp"], ["proof (state)\nthis:\n  k \\<notin> set (fst p # map fst ps)\n\ngoal (1 subgoal):\n 1. fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list ps(k $$:=\n    v, fst p $$:= snd p) \\<Longrightarrow>\n    fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list (p # ps)(k \n    $$:= v)", "then"], ["proof (chain)\npicking this:\n  k \\<notin> set (fst p # map fst ps)", "have **: \"{k $$:= v} $$ (fst p) = None\""], ["proof (prove)\nusing this:\n  k \\<notin> set (fst p # map fst ps)\n\ngoal (1 subgoal):\n 1. {k $$:= v} $$ fst p = None", "by (fastforce simp add: member_rec(1))"], ["proof (state)\nthis:\n  {k $$:= v} $$ fst p = None\n\ngoal (1 subgoal):\n 1. fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list ps(k $$:=\n    v, fst p $$:= snd p) \\<Longrightarrow>\n    fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list (p # ps)(k \n    $$:= v)", "have \"fmap_of_list (p # ps) = (fmap_of_list ps)(fst p $$:= snd p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmap_of_list (p # ps) = fmap_of_list ps(fst p $$:= snd p)", "by (metis fmap_of_list_simps(2) prod.collapse)"], ["proof (state)\nthis:\n  fmap_of_list (p # ps) = fmap_of_list ps(fst p $$:= snd p)\n\ngoal (1 subgoal):\n 1. fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list ps(k $$:=\n    v, fst p $$:= snd p) \\<Longrightarrow>\n    fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list (p # ps)(k \n    $$:= v)", "with * and **"], ["proof (chain)\npicking this:\n  fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list ps(k $$:= v,\n  fst p $$:= snd p)\n  {k $$:= v} $$ fst p = None\n  fmap_of_list (p # ps) = fmap_of_list ps(fst p $$:= snd p)", "show ?thesis"], ["proof (prove)\nusing this:\n  fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list ps(k $$:= v,\n  fst p $$:= snd p)\n  {k $$:= v} $$ fst p = None\n  fmap_of_list (p # ps) = fmap_of_list ps(fst p $$:= snd p)\n\ngoal (1 subgoal):\n 1. fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list (p # ps)(k \n    $$:= v)", "using fmap_singleton_comm"], ["proof (prove)\nusing this:\n  fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list ps(k $$:= v,\n  fst p $$:= snd p)\n  {k $$:= v} $$ fst p = None\n  fmap_of_list (p # ps) = fmap_of_list ps(fst p $$:= snd p)\n  ?m $$ ?k = None \\<Longrightarrow>\n  ?m ++\\<^sub>f {?k $$:= ?v} = {?k $$:= ?v} ++\\<^sub>f ?m\n\ngoal (1 subgoal):\n 1. fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list (p # ps)(k \n    $$:= v)", "by (metis fmadd_fmupd fmap_of_list_simps(1,2) fmupd_alt_def)"], ["proof (state)\nthis:\n  fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list (p # ps)(k \n  $$:= v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list (p # ps)(k \n  $$:= v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fmap_of_list (insort_key fst (k, v) (p # ps)) = fmap_of_list (p # ps)(k \n  $$:= v)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fmap_of_list_insort_key_fst_map:\n  assumes \"inj f\"\n  and \"m $$ k = None\"\n  shows \"fmap_of_list (insort_key fst (f k, v) (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))) =\n    (fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))(f k $$:= v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmap_of_list\n     (insort_key fst (f k, v)\n       (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fmap_of_list\n     (insort_key fst (f k, v)\n       (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "let ?g = \"\\<lambda>(k, v). (f k, v)\""], ["proof (state)\ngoal (1 subgoal):\n 1. fmap_of_list\n     (insort_key fst (f k, v)\n       (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "let ?ps = \"map ?g (sorted_list_of_fmap m)\""], ["proof (state)\ngoal (1 subgoal):\n 1. fmap_of_list\n     (insort_key fst (f k, v)\n       (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "from \\<open>inj f\\<close>"], ["proof (chain)\npicking this:\n  inj f", "have \"distinct (map fst ?ps)\""], ["proof (prove)\nusing this:\n  inj f\n\ngoal (1 subgoal):\n 1. distinct\n     (map fst (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))", "using distinct_fst_inj and distinct_sorted_list_of_fmap"], ["proof (prove)\nusing this:\n  inj f\n  \\<lbrakk>distinct (map fst ?ps); inj ?f\\<rbrakk>\n  \\<Longrightarrow> distinct\n                     (map fst (map (\\<lambda>(k, v). (?f k, v)) ?ps))\n  distinct (map fst (sorted_list_of_fmap ?m))\n\ngoal (1 subgoal):\n 1. distinct\n     (map fst (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))", "by fastforce"], ["proof (state)\nthis:\n  distinct\n   (map fst (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))\n\ngoal (1 subgoal):\n 1. fmap_of_list\n     (insort_key fst (f k, v)\n       (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "moreover"], ["proof (state)\nthis:\n  distinct\n   (map fst (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))\n\ngoal (1 subgoal):\n 1. fmap_of_list\n     (insort_key fst (f k, v)\n       (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "have \"f k \\<notin> set (map fst ?ps)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f k\n    \\<notin> set (map fst\n                   (map (\\<lambda>(k, v). (f k, v))\n                     (sorted_list_of_fmap m)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f k\n    \\<notin> set (map fst\n                   (map (\\<lambda>(k, v). (f k, v))\n                     (sorted_list_of_fmap m)))", "from \\<open>m $$ k = None\\<close>"], ["proof (chain)\npicking this:\n  m $$ k = None", "have \"k \\<notin> set (map fst (sorted_list_of_fmap m))\""], ["proof (prove)\nusing this:\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. k \\<notin> set (map fst (sorted_list_of_fmap m))", "by (metis map_of_eq_None_iff map_of_sorted_list set_map)"], ["proof (state)\nthis:\n  k \\<notin> set (map fst (sorted_list_of_fmap m))\n\ngoal (1 subgoal):\n 1. f k\n    \\<notin> set (map fst\n                   (map (\\<lambda>(k, v). (f k, v))\n                     (sorted_list_of_fmap m)))", "with \\<open>inj f\\<close>"], ["proof (chain)\npicking this:\n  inj f\n  k \\<notin> set (map fst (sorted_list_of_fmap m))", "show ?thesis"], ["proof (prove)\nusing this:\n  inj f\n  k \\<notin> set (map fst (sorted_list_of_fmap m))\n\ngoal (1 subgoal):\n 1. f k\n    \\<notin> set (map fst\n                   (map (\\<lambda>(k, v). (f k, v))\n                     (sorted_list_of_fmap m)))", "using map_inj_pair_non_membership"], ["proof (prove)\nusing this:\n  inj f\n  k \\<notin> set (map fst (sorted_list_of_fmap m))\n  \\<lbrakk>?k \\<notin> set (map fst ?ps); inj ?f\\<rbrakk>\n  \\<Longrightarrow> ?f ?k\n                    \\<notin> set (map fst\n                                   (map (\\<lambda>(k, v). (?f k, v)) ?ps))\n\ngoal (1 subgoal):\n 1. f k\n    \\<notin> set (map fst\n                   (map (\\<lambda>(k, v). (f k, v))\n                     (sorted_list_of_fmap m)))", "by force"], ["proof (state)\nthis:\n  f k\n  \\<notin> set (map fst\n                 (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f k\n  \\<notin> set (map fst\n                 (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))\n\ngoal (1 subgoal):\n 1. fmap_of_list\n     (insort_key fst (f k, v)\n       (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "ultimately"], ["proof (chain)\npicking this:\n  distinct\n   (map fst (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))\n  f k\n  \\<notin> set (map fst\n                 (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))", "show ?thesis"], ["proof (prove)\nusing this:\n  distinct\n   (map fst (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))\n  f k\n  \\<notin> set (map fst\n                 (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))\n\ngoal (1 subgoal):\n 1. fmap_of_list\n     (insort_key fst (f k, v)\n       (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "using fmap_of_list_insort_key_fst"], ["proof (prove)\nusing this:\n  distinct\n   (map fst (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))\n  f k\n  \\<notin> set (map fst\n                 (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))\n  \\<lbrakk>distinct (map fst ?ps); ?k \\<notin> set (map fst ?ps)\\<rbrakk>\n  \\<Longrightarrow> fmap_of_list (insort_key fst (?k, ?v) ?ps) =\n                    fmap_of_list ?ps(?k $$:= ?v)\n\ngoal (1 subgoal):\n 1. fmap_of_list\n     (insort_key fst (f k, v)\n       (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "by fast"], ["proof (state)\nthis:\n  fmap_of_list\n   (insort_key fst (f k, v)\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))) =\n  fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n  (f k $$:= v)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fmap_of_list_sorted_list_of_fmap:\n  fixes m :: \"('a::linorder, 'b) fmap\"\n  and f :: \"'a \\<Rightarrow> 'c::linorder\"\n  assumes \"inj f\"\n  and \"mono f\"\n  and \"m $$ k = None\"\n  shows \"fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n    (fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))(f k $$:= v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmap_of_list\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fmap_of_list\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "let ?g = \"\\<lambda>(k, v). (f k, v)\""], ["proof (state)\ngoal (1 subgoal):\n 1. fmap_of_list\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "from assms(3)"], ["proof (chain)\npicking this:\n  m $$ k = None", "have \"fmap_of_list (map ?g (sorted_list_of_fmap (m(k $$:= v)))) =\n    fmap_of_list (map ?g (insort_key fst (k, v) (sorted_list_of_fmap m)))\""], ["proof (prove)\nusing this:\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. fmap_of_list\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n    fmap_of_list\n     (map (\\<lambda>(k, v). (f k, v))\n       (insort_key fst (k, v) (sorted_list_of_fmap m)))", "by (simp add: sorted_list_of_fmap_is_insort_key_fst)"], ["proof (state)\nthis:\n  fmap_of_list\n   (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n  fmap_of_list\n   (map (\\<lambda>(k, v). (f k, v))\n     (insort_key fst (k, v) (sorted_list_of_fmap m)))\n\ngoal (1 subgoal):\n 1. fmap_of_list\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "also"], ["proof (state)\nthis:\n  fmap_of_list\n   (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n  fmap_of_list\n   (map (\\<lambda>(k, v). (f k, v))\n     (insort_key fst (k, v) (sorted_list_of_fmap m)))\n\ngoal (1 subgoal):\n 1. fmap_of_list\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "from assms"], ["proof (chain)\npicking this:\n  inj f\n  mono f\n  m $$ k = None", "have \"\\<dots> = fmap_of_list (insort_key fst (f k, v) (map ?g (sorted_list_of_fmap m)))\""], ["proof (prove)\nusing this:\n  inj f\n  mono f\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. fmap_of_list\n     (map (\\<lambda>(k, v). (f k, v))\n       (insort_key fst (k, v) (sorted_list_of_fmap m))) =\n    fmap_of_list\n     (insort_key fst (f k, v)\n       (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))", "using calculation and map_sorted_list_of_fmap"], ["proof (prove)\nusing this:\n  inj f\n  mono f\n  m $$ k = None\n  fmap_of_list\n   (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n  fmap_of_list\n   (map (\\<lambda>(k, v). (f k, v))\n     (insort_key fst (k, v) (sorted_list_of_fmap m)))\n  \\<lbrakk>inj ?f; mono ?f; ?m $$ ?k = None\\<rbrakk>\n  \\<Longrightarrow> map (\\<lambda>(k, v). (?f k, v))\n                     (sorted_list_of_fmap (?m(?k $$:= ?v))) =\n                    insort_key fst (?f ?k, ?v)\n                     (map (\\<lambda>(k, v). (?f k, v))\n                       (sorted_list_of_fmap ?m))\n\ngoal (1 subgoal):\n 1. fmap_of_list\n     (map (\\<lambda>(k, v). (f k, v))\n       (insort_key fst (k, v) (sorted_list_of_fmap m))) =\n    fmap_of_list\n     (insort_key fst (f k, v)\n       (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))", "by fastforce"], ["proof (state)\nthis:\n  fmap_of_list\n   (map (\\<lambda>(k, v). (f k, v))\n     (insort_key fst (k, v) (sorted_list_of_fmap m))) =\n  fmap_of_list\n   (insort_key fst (f k, v)\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))\n\ngoal (1 subgoal):\n 1. fmap_of_list\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "also"], ["proof (state)\nthis:\n  fmap_of_list\n   (map (\\<lambda>(k, v). (f k, v))\n     (insort_key fst (k, v) (sorted_list_of_fmap m))) =\n  fmap_of_list\n   (insort_key fst (f k, v)\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m)))\n\ngoal (1 subgoal):\n 1. fmap_of_list\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "from assms(1,3)"], ["proof (chain)\npicking this:\n  inj f\n  m $$ k = None", "have \"\\<dots> = (fmap_of_list (map ?g (sorted_list_of_fmap m)))(f k $$:= v)\""], ["proof (prove)\nusing this:\n  inj f\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. fmap_of_list\n     (insort_key fst (f k, v)\n       (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "by (simp add: fmap_of_list_insort_key_fst_map)"], ["proof (state)\nthis:\n  fmap_of_list\n   (insort_key fst (f k, v)\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))) =\n  fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n  (f k $$:= v)\n\ngoal (1 subgoal):\n 1. fmap_of_list\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "finally"], ["proof (chain)\npicking this:\n  fmap_of_list\n   (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n  fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n  (f k $$:= v)", "show ?thesis"], ["proof (prove)\nusing this:\n  fmap_of_list\n   (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n  fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n  (f k $$:= v)\n\ngoal (1 subgoal):\n 1. fmap_of_list\n     (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n    fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n    (f k $$:= v)", "."], ["proof (state)\nthis:\n  fmap_of_list\n   (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap (m(k $$:= v)))) =\n  fmap_of_list (map (\\<lambda>(k, v). (f k, v)) (sorted_list_of_fmap m))\n  (f k $$:= v)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open> Map difference \\<close>"], ["", "lemma fsubset_antisym:\n  assumes \"m \\<subseteq>\\<^sub>f n\"\n  and \"n \\<subseteq>\\<^sub>f m\"\n  shows \"m = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m = n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. m = n", "from \\<open>m \\<subseteq>\\<^sub>f n\\<close>"], ["proof (chain)\npicking this:\n  m \\<subseteq>\\<^sub>f n", "have \"\\<forall>k \\<in> dom (($$) m). (($$) m) k = (($$) n) k\""], ["proof (prove)\nusing this:\n  m \\<subseteq>\\<^sub>f n\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>dom (($$) m). m $$ k = n $$ k", "by (simp add: fmsubset.rep_eq map_le_def)"], ["proof (state)\nthis:\n  \\<forall>k\\<in>dom (($$) m). m $$ k = n $$ k\n\ngoal (1 subgoal):\n 1. m = n", "moreover"], ["proof (state)\nthis:\n  \\<forall>k\\<in>dom (($$) m). m $$ k = n $$ k\n\ngoal (1 subgoal):\n 1. m = n", "from \\<open>n \\<subseteq>\\<^sub>f m\\<close>"], ["proof (chain)\npicking this:\n  n \\<subseteq>\\<^sub>f m", "have \"\\<forall>k \\<in> dom (($$) n). (($$) n) k = (($$) m) k\""], ["proof (prove)\nusing this:\n  n \\<subseteq>\\<^sub>f m\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>dom (($$) n). n $$ k = m $$ k", "by (simp add: fmsubset.rep_eq map_le_def)"], ["proof (state)\nthis:\n  \\<forall>k\\<in>dom (($$) n). n $$ k = m $$ k\n\ngoal (1 subgoal):\n 1. m = n", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>k\\<in>dom (($$) m). m $$ k = n $$ k\n  \\<forall>k\\<in>dom (($$) n). n $$ k = m $$ k", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>dom (($$) m). m $$ k = n $$ k\n  \\<forall>k\\<in>dom (($$) n). n $$ k = m $$ k\n\ngoal (1 subgoal):\n 1. m = n", "proof (intro fmap_ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>k\\<in>dom (($$) m). m $$ k = n $$ k;\n        \\<forall>k\\<in>dom (($$) n). n $$ k = m $$ k\\<rbrakk>\n       \\<Longrightarrow> m $$ x = n $$ x", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>k\\<in>dom (($$) m). m $$ k = n $$ k;\n        \\<forall>k\\<in>dom (($$) n). n $$ k = m $$ k\\<rbrakk>\n       \\<Longrightarrow> m $$ x = n $$ x", "consider\n      (a) \"k \\<in> dom (($$) m)\" |\n      (b) \"k \\<in> dom (($$) n)\" |\n      (c) \"k \\<notin> dom (($$) m) \\<and> k \\<notin> dom (($$) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<in> dom (($$) m) \\<Longrightarrow> thesis;\n     k \\<in> dom (($$) n) \\<Longrightarrow> thesis;\n     k \\<notin> dom (($$) m) \\<and>\n     k \\<notin> dom (($$) n) \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>k \\<in> dom (($$) m) \\<Longrightarrow> ?thesis;\n   k \\<in> dom (($$) n) \\<Longrightarrow> ?thesis;\n   k \\<notin> dom (($$) m) \\<and> k \\<notin> dom (($$) n) \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>k\\<in>dom (($$) m). m $$ k = n $$ k;\n        \\<forall>k\\<in>dom (($$) n). n $$ k = m $$ k\\<rbrakk>\n       \\<Longrightarrow> m $$ x = n $$ x", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>k \\<in> dom (($$) m) \\<Longrightarrow> ?thesis;\n   k \\<in> dom (($$) n) \\<Longrightarrow> ?thesis;\n   k \\<notin> dom (($$) m) \\<and> k \\<notin> dom (($$) n) \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"m $$ k = n $$ k\""], ["proof (prove)\nusing this:\n  \\<lbrakk>k \\<in> dom (($$) m) \\<Longrightarrow> ?thesis;\n   k \\<in> dom (($$) n) \\<Longrightarrow> ?thesis;\n   k \\<notin> dom (($$) m) \\<and> k \\<notin> dom (($$) n) \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. m $$ k = n $$ k", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. k \\<in> dom (($$) m) \\<Longrightarrow> m $$ k = n $$ k\n 2. k \\<in> dom (($$) n) \\<Longrightarrow> m $$ k = n $$ k\n 3. k \\<notin> dom (($$) m) \\<and> k \\<notin> dom (($$) n) \\<Longrightarrow>\n    m $$ k = n $$ k", "case a"], ["proof (state)\nthis:\n  k \\<in> dom (($$) m)\n\ngoal (3 subgoals):\n 1. k \\<in> dom (($$) m) \\<Longrightarrow> m $$ k = n $$ k\n 2. k \\<in> dom (($$) n) \\<Longrightarrow> m $$ k = n $$ k\n 3. k \\<notin> dom (($$) m) \\<and> k \\<notin> dom (($$) n) \\<Longrightarrow>\n    m $$ k = n $$ k", "with \\<open>\\<forall>k \\<in> dom (($$) m). m $$ k = n $$ k\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>k\\<in>dom (($$) m). m $$ k = n $$ k\n  k \\<in> dom (($$) m)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>dom (($$) m). m $$ k = n $$ k\n  k \\<in> dom (($$) m)\n\ngoal (1 subgoal):\n 1. m $$ k = n $$ k", "by simp"], ["proof (state)\nthis:\n  m $$ k = n $$ k\n\ngoal (2 subgoals):\n 1. k \\<in> dom (($$) n) \\<Longrightarrow> m $$ k = n $$ k\n 2. k \\<notin> dom (($$) m) \\<and> k \\<notin> dom (($$) n) \\<Longrightarrow>\n    m $$ k = n $$ k", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. k \\<in> dom (($$) n) \\<Longrightarrow> m $$ k = n $$ k\n 2. k \\<notin> dom (($$) m) \\<and> k \\<notin> dom (($$) n) \\<Longrightarrow>\n    m $$ k = n $$ k", "case b"], ["proof (state)\nthis:\n  k \\<in> dom (($$) n)\n\ngoal (2 subgoals):\n 1. k \\<in> dom (($$) n) \\<Longrightarrow> m $$ k = n $$ k\n 2. k \\<notin> dom (($$) m) \\<and> k \\<notin> dom (($$) n) \\<Longrightarrow>\n    m $$ k = n $$ k", "with \\<open>\\<forall>k \\<in> dom (($$) n). n $$ k = m $$ k\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>k\\<in>dom (($$) n). n $$ k = m $$ k\n  k \\<in> dom (($$) n)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>dom (($$) n). n $$ k = m $$ k\n  k \\<in> dom (($$) n)\n\ngoal (1 subgoal):\n 1. m $$ k = n $$ k", "by simp"], ["proof (state)\nthis:\n  m $$ k = n $$ k\n\ngoal (1 subgoal):\n 1. k \\<notin> dom (($$) m) \\<and> k \\<notin> dom (($$) n) \\<Longrightarrow>\n    m $$ k = n $$ k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<notin> dom (($$) m) \\<and> k \\<notin> dom (($$) n) \\<Longrightarrow>\n    m $$ k = n $$ k", "case c"], ["proof (state)\nthis:\n  k \\<notin> dom (($$) m) \\<and> k \\<notin> dom (($$) n)\n\ngoal (1 subgoal):\n 1. k \\<notin> dom (($$) m) \\<and> k \\<notin> dom (($$) n) \\<Longrightarrow>\n    m $$ k = n $$ k", "then"], ["proof (chain)\npicking this:\n  k \\<notin> dom (($$) m) \\<and> k \\<notin> dom (($$) n)", "show ?thesis"], ["proof (prove)\nusing this:\n  k \\<notin> dom (($$) m) \\<and> k \\<notin> dom (($$) n)\n\ngoal (1 subgoal):\n 1. m $$ k = n $$ k", "by (simp add: fmdom'_notD)"], ["proof (state)\nthis:\n  m $$ k = n $$ k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m $$ k = n $$ k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m = n\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation\n  fmdiff :: \"('a, 'b) fmap \\<Rightarrow> ('a, 'b) fmap \\<Rightarrow> ('a, 'b) fmap\" (infixl \\<open>--\\<^sub>f\\<close> 100) where\n  \"m\\<^sub>1 --\\<^sub>f m\\<^sub>2 \\<equiv> fmfilter (\\<lambda>x. x \\<notin> fmdom' m\\<^sub>2) m\\<^sub>1\""], ["", "lemma fmdiff_partition:\n  assumes \"m\\<^sub>2 \\<subseteq>\\<^sub>f m\\<^sub>1\"\n  shows \"m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) = m\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) = m\\<^sub>1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) = m\\<^sub>1", "have *: \"m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) \\<subseteq>\\<^sub>f m\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) \\<subseteq>\\<^sub>f\n    m\\<^sub>1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) \\<subseteq>\\<^sub>f\n    m\\<^sub>1", "have \"\\<forall>k v. (m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)) $$ k = Some v \\<longrightarrow> m\\<^sub>1 $$ k = Some v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k v.\n       (m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)) $$ k =\n       Some v \\<longrightarrow>\n       m\\<^sub>1 $$ k = Some v", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k v.\n       (m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)) $$ k =\n       Some v \\<Longrightarrow>\n       m\\<^sub>1 $$ k = Some v", "fix k v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k v.\n       (m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)) $$ k =\n       Some v \\<Longrightarrow>\n       m\\<^sub>1 $$ k = Some v", "assume \"(m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)) $$ k = Some v\""], ["proof (state)\nthis:\n  (m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)) $$ k = Some v\n\ngoal (1 subgoal):\n 1. \\<And>k v.\n       (m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)) $$ k =\n       Some v \\<Longrightarrow>\n       m\\<^sub>1 $$ k = Some v", "then"], ["proof (chain)\npicking this:\n  (m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)) $$ k = Some v", "have **: \"(if k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) then (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) $$ k else m\\<^sub>2 $$ k) = Some v\""], ["proof (prove)\nusing this:\n  (m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)) $$ k = Some v\n\ngoal (1 subgoal):\n 1. (if k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n     then (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) $$ k else m\\<^sub>2 $$ k) =\n    Some v", "by simp"], ["proof (state)\nthis:\n  (if k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n   then (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) $$ k else m\\<^sub>2 $$ k) =\n  Some v\n\ngoal (1 subgoal):\n 1. \\<And>k v.\n       (m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)) $$ k =\n       Some v \\<Longrightarrow>\n       m\\<^sub>1 $$ k = Some v", "then"], ["proof (chain)\npicking this:\n  (if k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n   then (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) $$ k else m\\<^sub>2 $$ k) =\n  Some v", "show \"m\\<^sub>1 $$ k = Some v\""], ["proof (prove)\nusing this:\n  (if k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n   then (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) $$ k else m\\<^sub>2 $$ k) =\n  Some v\n\ngoal (1 subgoal):\n 1. m\\<^sub>1 $$ k = Some v", "proof (cases \"k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>(if k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n              then (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) $$ k\n              else m\\<^sub>2 $$ k) =\n             Some v;\n     k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 $$ k = Some v\n 2. \\<lbrakk>(if k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n              then (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) $$ k\n              else m\\<^sub>2 $$ k) =\n             Some v;\n     k |\\<notin>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 $$ k = Some v", "case True"], ["proof (state)\nthis:\n  k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(if k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n              then (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) $$ k\n              else m\\<^sub>2 $$ k) =\n             Some v;\n     k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 $$ k = Some v\n 2. \\<lbrakk>(if k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n              then (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) $$ k\n              else m\\<^sub>2 $$ k) =\n             Some v;\n     k |\\<notin>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 $$ k = Some v", "with **"], ["proof (chain)\npicking this:\n  (if k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n   then (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) $$ k else m\\<^sub>2 $$ k) =\n  Some v\n  k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  (if k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n   then (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) $$ k else m\\<^sub>2 $$ k) =\n  Some v\n  k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n\ngoal (1 subgoal):\n 1. m\\<^sub>1 $$ k = Some v", "by simp"], ["proof (state)\nthis:\n  m\\<^sub>1 $$ k = Some v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(if k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n              then (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) $$ k\n              else m\\<^sub>2 $$ k) =\n             Some v;\n     k |\\<notin>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 $$ k = Some v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(if k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n              then (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) $$ k\n              else m\\<^sub>2 $$ k) =\n             Some v;\n     k |\\<notin>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 $$ k = Some v", "case False"], ["proof (state)\nthis:\n  k |\\<notin>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(if k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n              then (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) $$ k\n              else m\\<^sub>2 $$ k) =\n             Some v;\n     k |\\<notin>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\\<rbrakk>\n    \\<Longrightarrow> m\\<^sub>1 $$ k = Some v", "with ** and \\<open>m\\<^sub>2 \\<subseteq>\\<^sub>f m\\<^sub>1\\<close>"], ["proof (chain)\npicking this:\n  (if k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n   then (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) $$ k else m\\<^sub>2 $$ k) =\n  Some v\n  m\\<^sub>2 \\<subseteq>\\<^sub>f m\\<^sub>1\n  k |\\<notin>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  (if k |\\<in>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n   then (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) $$ k else m\\<^sub>2 $$ k) =\n  Some v\n  m\\<^sub>2 \\<subseteq>\\<^sub>f m\\<^sub>1\n  k |\\<notin>| fmdom (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n\ngoal (1 subgoal):\n 1. m\\<^sub>1 $$ k = Some v", "by (metis (mono_tags, lifting) fmpredD fmsubset_alt_def)"], ["proof (state)\nthis:\n  m\\<^sub>1 $$ k = Some v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m\\<^sub>1 $$ k = Some v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>k v.\n     (m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)) $$ k =\n     Some v \\<longrightarrow>\n     m\\<^sub>1 $$ k = Some v\n\ngoal (1 subgoal):\n 1. m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) \\<subseteq>\\<^sub>f\n    m\\<^sub>1", "then"], ["proof (chain)\npicking this:\n  \\<forall>k v.\n     (m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)) $$ k =\n     Some v \\<longrightarrow>\n     m\\<^sub>1 $$ k = Some v", "have \"fmpred (\\<lambda>k v. m\\<^sub>1 $$ k = Some v) (m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2))\""], ["proof (prove)\nusing this:\n  \\<forall>k v.\n     (m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)) $$ k =\n     Some v \\<longrightarrow>\n     m\\<^sub>1 $$ k = Some v\n\ngoal (1 subgoal):\n 1. fmpred (\\<lambda>k v. m\\<^sub>1 $$ k = Some v)\n     (m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2))", "by (blast intro: fmpred_iff)"], ["proof (state)\nthis:\n  fmpred (\\<lambda>k v. m\\<^sub>1 $$ k = Some v)\n   (m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2))\n\ngoal (1 subgoal):\n 1. m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) \\<subseteq>\\<^sub>f\n    m\\<^sub>1", "then"], ["proof (chain)\npicking this:\n  fmpred (\\<lambda>k v. m\\<^sub>1 $$ k = Some v)\n   (m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2))", "show ?thesis"], ["proof (prove)\nusing this:\n  fmpred (\\<lambda>k v. m\\<^sub>1 $$ k = Some v)\n   (m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2))\n\ngoal (1 subgoal):\n 1. m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) \\<subseteq>\\<^sub>f\n    m\\<^sub>1", "by (auto simp add: fmsubset_alt_def)"], ["proof (state)\nthis:\n  m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) \\<subseteq>\\<^sub>f\n  m\\<^sub>1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) \\<subseteq>\\<^sub>f\n  m\\<^sub>1\n\ngoal (1 subgoal):\n 1. m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) = m\\<^sub>1", "then"], ["proof (chain)\npicking this:\n  m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) \\<subseteq>\\<^sub>f\n  m\\<^sub>1", "have \"m\\<^sub>1 \\<subseteq>\\<^sub>f m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\""], ["proof (prove)\nusing this:\n  m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) \\<subseteq>\\<^sub>f\n  m\\<^sub>1\n\ngoal (1 subgoal):\n 1. m\\<^sub>1 \\<subseteq>\\<^sub>f\n    m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)", "by (simp add: fmsubset.rep_eq map_le_def)"], ["proof (state)\nthis:\n  m\\<^sub>1 \\<subseteq>\\<^sub>f\n  m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n\ngoal (1 subgoal):\n 1. m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) = m\\<^sub>1", "with *"], ["proof (chain)\npicking this:\n  m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) \\<subseteq>\\<^sub>f\n  m\\<^sub>1\n  m\\<^sub>1 \\<subseteq>\\<^sub>f\n  m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) \\<subseteq>\\<^sub>f\n  m\\<^sub>1\n  m\\<^sub>1 \\<subseteq>\\<^sub>f\n  m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2)\n\ngoal (1 subgoal):\n 1. m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) = m\\<^sub>1", "by (simp add: fsubset_antisym)"], ["proof (state)\nthis:\n  m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) = m\\<^sub>1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fmdiff_fmupd:\n  assumes \"m $$ k = None\"\n  shows \"m(k $$:= v) --\\<^sub>f {k $$:= v} = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m(k $$:= v) --\\<^sub>f {k $$:= v} = m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. m(k $$:= v) --\\<^sub>f {k $$:= v} = m", "let ?P = \"(\\<lambda>k'. k' \\<notin> {k})\""], ["proof (state)\ngoal (1 subgoal):\n 1. m(k $$:= v) --\\<^sub>f {k $$:= v} = m", "have \"m(k $$:= v) --\\<^sub>f {k $$:= v} = fmfilter (\\<lambda>x. x \\<notin> fmdom' {k $$:= v}) (m(k $$:= v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m(k $$:= v) --\\<^sub>f {k $$:= v} = m(k $$:= v) --\\<^sub>f {k $$:= v}", ".."], ["proof (state)\nthis:\n  m(k $$:= v) --\\<^sub>f {k $$:= v} = m(k $$:= v) --\\<^sub>f {k $$:= v}\n\ngoal (1 subgoal):\n 1. m(k $$:= v) --\\<^sub>f {k $$:= v} = m", "also"], ["proof (state)\nthis:\n  m(k $$:= v) --\\<^sub>f {k $$:= v} = m(k $$:= v) --\\<^sub>f {k $$:= v}\n\ngoal (1 subgoal):\n 1. m(k $$:= v) --\\<^sub>f {k $$:= v} = m", "have \"\\<dots> = fmfilter ?P (m(k $$:= v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m(k $$:= v) --\\<^sub>f {k $$:= v} =\n    fmfilter (\\<lambda>k'. k' \\<notin> {k}) (m(k $$:= v))", "by simp"], ["proof (state)\nthis:\n  m(k $$:= v) --\\<^sub>f {k $$:= v} =\n  fmfilter (\\<lambda>k'. k' \\<notin> {k}) (m(k $$:= v))\n\ngoal (1 subgoal):\n 1. m(k $$:= v) --\\<^sub>f {k $$:= v} = m", "also"], ["proof (state)\nthis:\n  m(k $$:= v) --\\<^sub>f {k $$:= v} =\n  fmfilter (\\<lambda>k'. k' \\<notin> {k}) (m(k $$:= v))\n\ngoal (1 subgoal):\n 1. m(k $$:= v) --\\<^sub>f {k $$:= v} = m", "have \"\\<dots> = (if ?P k then (fmfilter ?P m)(k $$:= v) else fmfilter ?P m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmfilter (\\<lambda>k'. k' \\<notin> {k}) (m(k $$:= v)) =\n    (if k \\<notin> {k}\n     then fmfilter (\\<lambda>k'. k' \\<notin> {k}) m(k $$:= v)\n     else fmfilter (\\<lambda>k'. k' \\<notin> {k}) m)", "by simp"], ["proof (state)\nthis:\n  fmfilter (\\<lambda>k'. k' \\<notin> {k}) (m(k $$:= v)) =\n  (if k \\<notin> {k}\n   then fmfilter (\\<lambda>k'. k' \\<notin> {k}) m(k $$:= v)\n   else fmfilter (\\<lambda>k'. k' \\<notin> {k}) m)\n\ngoal (1 subgoal):\n 1. m(k $$:= v) --\\<^sub>f {k $$:= v} = m", "also"], ["proof (state)\nthis:\n  fmfilter (\\<lambda>k'. k' \\<notin> {k}) (m(k $$:= v)) =\n  (if k \\<notin> {k}\n   then fmfilter (\\<lambda>k'. k' \\<notin> {k}) m(k $$:= v)\n   else fmfilter (\\<lambda>k'. k' \\<notin> {k}) m)\n\ngoal (1 subgoal):\n 1. m(k $$:= v) --\\<^sub>f {k $$:= v} = m", "have \"\\<dots> = fmfilter ?P m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if k \\<notin> {k}\n     then fmfilter (\\<lambda>k'. k' \\<notin> {k}) m(k $$:= v)\n     else fmfilter (\\<lambda>k'. k' \\<notin> {k}) m) =\n    fmfilter (\\<lambda>k'. k' \\<notin> {k}) m", "by simp"], ["proof (state)\nthis:\n  (if k \\<notin> {k}\n   then fmfilter (\\<lambda>k'. k' \\<notin> {k}) m(k $$:= v)\n   else fmfilter (\\<lambda>k'. k' \\<notin> {k}) m) =\n  fmfilter (\\<lambda>k'. k' \\<notin> {k}) m\n\ngoal (1 subgoal):\n 1. m(k $$:= v) --\\<^sub>f {k $$:= v} = m", "finally"], ["proof (chain)\npicking this:\n  fmfilter (\\<lambda>k'. k' \\<notin> {k}) m =\n  fmfilter (\\<lambda>k'. k' \\<notin> {k}) m", "show ?thesis"], ["proof (prove)\nusing this:\n  fmfilter (\\<lambda>k'. k' \\<notin> {k}) m =\n  fmfilter (\\<lambda>k'. k' \\<notin> {k}) m\n\ngoal (1 subgoal):\n 1. m(k $$:= v) --\\<^sub>f {k $$:= v} = m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fmfilter (\\<lambda>k'. k' \\<notin> {k}) m =\n    fmfilter (\\<lambda>k'. k' \\<notin> {k}) m \\<Longrightarrow>\n    m(k $$:= v) --\\<^sub>f {k $$:= v} = m", "from \\<open>m $$ k = None\\<close>"], ["proof (chain)\npicking this:\n  m $$ k = None", "have \"\\<And>k' v'. m $$ k' = Some v' \\<Longrightarrow> ?P k'\""], ["proof (prove)\nusing this:\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. \\<And>k' v'. m $$ k' = Some v' \\<Longrightarrow> k' \\<notin> {k}", "by fastforce"], ["proof (state)\nthis:\n  m $$ ?k' = Some ?v' \\<Longrightarrow> ?k' \\<notin> {k}\n\ngoal (1 subgoal):\n 1. fmfilter (\\<lambda>k'. k' \\<notin> {k}) m =\n    fmfilter (\\<lambda>k'. k' \\<notin> {k}) m \\<Longrightarrow>\n    m(k $$:= v) --\\<^sub>f {k $$:= v} = m", "then"], ["proof (chain)\npicking this:\n  m $$ ?k' = Some ?v' \\<Longrightarrow> ?k' \\<notin> {k}", "show ?thesis"], ["proof (prove)\nusing this:\n  m $$ ?k' = Some ?v' \\<Longrightarrow> ?k' \\<notin> {k}\n\ngoal (1 subgoal):\n 1. m(k $$:= v) --\\<^sub>f {k $$:= v} = m", "by simp"], ["proof (state)\nthis:\n  m(k $$:= v) --\\<^sub>f {k $$:= v} = m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m(k $$:= v) --\\<^sub>f {k $$:= v} = m\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open> Map symmetric difference \\<close>"], ["", "abbreviation fmsym_diff :: \"('a, 'b) fmap \\<Rightarrow> ('a, 'b) fmap \\<Rightarrow> ('a, 'b) fmap\" (infixl \\<open>\\<Delta>\\<^sub>f\\<close> 100) where\n  \"m\\<^sub>1 \\<Delta>\\<^sub>f m\\<^sub>2 \\<equiv> (m\\<^sub>1 --\\<^sub>f m\\<^sub>2) ++\\<^sub>f (m\\<^sub>2 --\\<^sub>f m\\<^sub>1)\""], ["", "text \\<open> Domain restriction \\<close>"], ["", "abbreviation dom_res :: \"'a set \\<Rightarrow> ('a, 'b) fmap \\<Rightarrow> ('a, 'b) fmap\" (infixl \\<open>\\<lhd>\\<close> 150) where\n  \"s \\<lhd> m \\<equiv> fmfilter (\\<lambda>x. x \\<in> s) m\""], ["", "text \\<open> Domain exclusion \\<close>"], ["", "abbreviation dom_exc :: \"'a set \\<Rightarrow> ('a, 'b) fmap \\<Rightarrow> ('a, 'b) fmap\" (infixl \\<open>\\<lhd>'/\\<close> 150) where\n  \"s \\<lhd>/ m \\<equiv> fmfilter (\\<lambda>x. x \\<notin> s) m\""], ["", "text \\<open> Intersection plus \\<close>"], ["", "abbreviation intersection_plus :: \"('a, 'b::monoid_add) fmap \\<Rightarrow> ('a, 'b) fmap \\<Rightarrow> ('a, 'b) fmap\"\n  (infixl \\<open>\\<inter>\\<^sub>+\\<close> 100)\nwhere\n  \"m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2 \\<equiv> fmmap_keys (\\<lambda>k v. v + m\\<^sub>1 $$! k) (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2)\""], ["", "text \\<open> Union override right \\<close>"], ["", "abbreviation union_override_right :: \"('a, 'b) fmap \\<Rightarrow> ('a, 'b) fmap \\<Rightarrow> ('a, 'b) fmap\"\n  (infixl \\<open>\\<union>\\<^sub>\\<rightarrow>\\<close> 100)\nwhere\n  \"m\\<^sub>1 \\<union>\\<^sub>\\<rightarrow> m\\<^sub>2 \\<equiv> (fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1) ++\\<^sub>f m\\<^sub>2\""], ["", "text \\<open> Union override left \\<close>"], ["", "abbreviation union_override_left :: \"('a, 'b) fmap \\<Rightarrow> ('a, 'b) fmap \\<Rightarrow> ('a, 'b) fmap\"\n  (infixl \\<open>\\<union>\\<^sub>\\<leftarrow>\\<close> 100)\nwhere\n  \"m\\<^sub>1 \\<union>\\<^sub>\\<leftarrow> m\\<^sub>2 \\<equiv> m\\<^sub>1 ++\\<^sub>f (fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2)\""], ["", "text \\<open> Union override plus \\<close>"], ["", "abbreviation union_override_plus :: \"('a, 'b::monoid_add) fmap \\<Rightarrow> ('a, 'b) fmap \\<Rightarrow> ('a, 'b) fmap\"\n  (infixl \\<open>\\<union>\\<^sub>+\\<close> 100)\nwhere\n  \"m\\<^sub>1 \\<union>\\<^sub>+ m\\<^sub>2 \\<equiv> (m\\<^sub>1 \\<Delta>\\<^sub>f m\\<^sub>2) ++\\<^sub>f (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2)\""], ["", "text \\<open> Extra lemmas for the non-standard map operators \\<close>"], ["", "lemma dom_res_singleton:\n  assumes \"m $$ k = Some v\"\n  shows \"{k} \\<lhd> m = {k $$:= v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {k} \\<lhd> m = {k $$:= v}", "using assms"], ["proof (prove)\nusing this:\n  m $$ k = Some v\n\ngoal (1 subgoal):\n 1. {k} \\<lhd> m = {k $$:= v}", "proof (induction m)"], ["proof (state)\ngoal (2 subgoals):\n 1. {$$} $$ k = Some v \\<Longrightarrow> {k} \\<lhd> {$$} = {k $$:= v}\n 2. \\<And>x y m.\n       \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n        m $$ x = None; m(x $$:= y) $$ k = Some v\\<rbrakk>\n       \\<Longrightarrow> {k} \\<lhd> m(x $$:= y) = {k $$:= v}", "case fmempty"], ["proof (state)\nthis:\n  {$$} $$ k = Some v\n\ngoal (2 subgoals):\n 1. {$$} $$ k = Some v \\<Longrightarrow> {k} \\<lhd> {$$} = {k $$:= v}\n 2. \\<And>x y m.\n       \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n        m $$ x = None; m(x $$:= y) $$ k = Some v\\<rbrakk>\n       \\<Longrightarrow> {k} \\<lhd> m(x $$:= y) = {k $$:= v}", "then"], ["proof (chain)\npicking this:\n  {$$} $$ k = Some v", "show ?case"], ["proof (prove)\nusing this:\n  {$$} $$ k = Some v\n\ngoal (1 subgoal):\n 1. {k} \\<lhd> {$$} = {k $$:= v}", "by simp"], ["proof (state)\nthis:\n  {k} \\<lhd> {$$} = {k $$:= v}\n\ngoal (1 subgoal):\n 1. \\<And>x y m.\n       \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n        m $$ x = None; m(x $$:= y) $$ k = Some v\\<rbrakk>\n       \\<Longrightarrow> {k} \\<lhd> m(x $$:= y) = {k $$:= v}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y m.\n       \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n        m $$ x = None; m(x $$:= y) $$ k = Some v\\<rbrakk>\n       \\<Longrightarrow> {k} \\<lhd> m(x $$:= y) = {k $$:= v}", "case (fmupd k' v' m)"], ["proof (state)\nthis:\n  m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v}\n  m $$ k' = None\n  m(k' $$:= v') $$ k = Some v\n\ngoal (1 subgoal):\n 1. \\<And>x y m.\n       \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n        m $$ x = None; m(x $$:= y) $$ k = Some v\\<rbrakk>\n       \\<Longrightarrow> {k} \\<lhd> m(x $$:= y) = {k $$:= v}", "then"], ["proof (chain)\npicking this:\n  m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v}\n  m $$ k' = None\n  m(k' $$:= v') $$ k = Some v", "show ?case"], ["proof (prove)\nusing this:\n  m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v}\n  m $$ k' = None\n  m(k' $$:= v') $$ k = Some v\n\ngoal (1 subgoal):\n 1. {k} \\<lhd> m(k' $$:= v') = {k $$:= v}", "proof (cases \"k = k'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n     m $$ k' = None; m(k' $$:= v') $$ k = Some v; k = k'\\<rbrakk>\n    \\<Longrightarrow> {k} \\<lhd> m(k' $$:= v') = {k $$:= v}\n 2. \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n     m $$ k' = None; m(k' $$:= v') $$ k = Some v; k \\<noteq> k'\\<rbrakk>\n    \\<Longrightarrow> {k} \\<lhd> m(k' $$:= v') = {k $$:= v}", "case True"], ["proof (state)\nthis:\n  k = k'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n     m $$ k' = None; m(k' $$:= v') $$ k = Some v; k = k'\\<rbrakk>\n    \\<Longrightarrow> {k} \\<lhd> m(k' $$:= v') = {k $$:= v}\n 2. \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n     m $$ k' = None; m(k' $$:= v') $$ k = Some v; k \\<noteq> k'\\<rbrakk>\n    \\<Longrightarrow> {k} \\<lhd> m(k' $$:= v') = {k $$:= v}", "with \\<open>m(k' $$:= v') $$ k = Some v\\<close>"], ["proof (chain)\npicking this:\n  m(k' $$:= v') $$ k = Some v\n  k = k'", "have \"v = v'\""], ["proof (prove)\nusing this:\n  m(k' $$:= v') $$ k = Some v\n  k = k'\n\ngoal (1 subgoal):\n 1. v = v'", "by simp"], ["proof (state)\nthis:\n  v = v'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n     m $$ k' = None; m(k' $$:= v') $$ k = Some v; k = k'\\<rbrakk>\n    \\<Longrightarrow> {k} \\<lhd> m(k' $$:= v') = {k $$:= v}\n 2. \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n     m $$ k' = None; m(k' $$:= v') $$ k = Some v; k \\<noteq> k'\\<rbrakk>\n    \\<Longrightarrow> {k} \\<lhd> m(k' $$:= v') = {k $$:= v}", "with True"], ["proof (chain)\npicking this:\n  k = k'\n  v = v'", "have \"{k} \\<lhd> m(k' $$:= v') = ({k} \\<lhd> m)(k $$:= v)\""], ["proof (prove)\nusing this:\n  k = k'\n  v = v'\n\ngoal (1 subgoal):\n 1. {k} \\<lhd> m(k' $$:= v') = ({k} \\<lhd> m)(k $$:= v)", "by simp"], ["proof (state)\nthis:\n  {k} \\<lhd> m(k' $$:= v') = ({k} \\<lhd> m)(k $$:= v)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n     m $$ k' = None; m(k' $$:= v') $$ k = Some v; k = k'\\<rbrakk>\n    \\<Longrightarrow> {k} \\<lhd> m(k' $$:= v') = {k $$:= v}\n 2. \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n     m $$ k' = None; m(k' $$:= v') $$ k = Some v; k \\<noteq> k'\\<rbrakk>\n    \\<Longrightarrow> {k} \\<lhd> m(k' $$:= v') = {k $$:= v}", "also"], ["proof (state)\nthis:\n  {k} \\<lhd> m(k' $$:= v') = ({k} \\<lhd> m)(k $$:= v)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n     m $$ k' = None; m(k' $$:= v') $$ k = Some v; k = k'\\<rbrakk>\n    \\<Longrightarrow> {k} \\<lhd> m(k' $$:= v') = {k $$:= v}\n 2. \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n     m $$ k' = None; m(k' $$:= v') $$ k = Some v; k \\<noteq> k'\\<rbrakk>\n    \\<Longrightarrow> {k} \\<lhd> m(k' $$:= v') = {k $$:= v}", "from True and \\<open>m $$ k' = None\\<close>"], ["proof (chain)\npicking this:\n  k = k'\n  m $$ k' = None", "have \"\\<dots> = {$$}(k $$:= v)\""], ["proof (prove)\nusing this:\n  k = k'\n  m $$ k' = None\n\ngoal (1 subgoal):\n 1. ({k} \\<lhd> m)(k $$:= v) = {k $$:= v}", "by (simp add: fmap_ext)"], ["proof (state)\nthis:\n  ({k} \\<lhd> m)(k $$:= v) = {k $$:= v}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n     m $$ k' = None; m(k' $$:= v') $$ k = Some v; k = k'\\<rbrakk>\n    \\<Longrightarrow> {k} \\<lhd> m(k' $$:= v') = {k $$:= v}\n 2. \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n     m $$ k' = None; m(k' $$:= v') $$ k = Some v; k \\<noteq> k'\\<rbrakk>\n    \\<Longrightarrow> {k} \\<lhd> m(k' $$:= v') = {k $$:= v}", "finally"], ["proof (chain)\npicking this:\n  {k} \\<lhd> m(k' $$:= v') = {k $$:= v}", "show ?thesis"], ["proof (prove)\nusing this:\n  {k} \\<lhd> m(k' $$:= v') = {k $$:= v}\n\ngoal (1 subgoal):\n 1. {k} \\<lhd> m(k' $$:= v') = {k $$:= v}", "by simp"], ["proof (state)\nthis:\n  {k} \\<lhd> m(k' $$:= v') = {k $$:= v}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n     m $$ k' = None; m(k' $$:= v') $$ k = Some v; k \\<noteq> k'\\<rbrakk>\n    \\<Longrightarrow> {k} \\<lhd> m(k' $$:= v') = {k $$:= v}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n     m $$ k' = None; m(k' $$:= v') $$ k = Some v; k \\<noteq> k'\\<rbrakk>\n    \\<Longrightarrow> {k} \\<lhd> m(k' $$:= v') = {k $$:= v}", "case False"], ["proof (state)\nthis:\n  k \\<noteq> k'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n     m $$ k' = None; m(k' $$:= v') $$ k = Some v; k \\<noteq> k'\\<rbrakk>\n    \\<Longrightarrow> {k} \\<lhd> m(k' $$:= v') = {k $$:= v}", "with \\<open>m(k' $$:= v') $$ k = Some v\\<close>"], ["proof (chain)\npicking this:\n  m(k' $$:= v') $$ k = Some v\n  k \\<noteq> k'", "have *: \"m $$ k = Some v\""], ["proof (prove)\nusing this:\n  m(k' $$:= v') $$ k = Some v\n  k \\<noteq> k'\n\ngoal (1 subgoal):\n 1. m $$ k = Some v", "by simp"], ["proof (state)\nthis:\n  m $$ k = Some v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n     m $$ k' = None; m(k' $$:= v') $$ k = Some v; k \\<noteq> k'\\<rbrakk>\n    \\<Longrightarrow> {k} \\<lhd> m(k' $$:= v') = {k $$:= v}", "with False"], ["proof (chain)\npicking this:\n  k \\<noteq> k'\n  m $$ k = Some v", "have \"{k} \\<lhd> m(k' $$:= v') = {k} \\<lhd> m\""], ["proof (prove)\nusing this:\n  k \\<noteq> k'\n  m $$ k = Some v\n\ngoal (1 subgoal):\n 1. {k} \\<lhd> m(k' $$:= v') = {k} \\<lhd> m", "by simp"], ["proof (state)\nthis:\n  {k} \\<lhd> m(k' $$:= v') = {k} \\<lhd> m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v};\n     m $$ k' = None; m(k' $$:= v') $$ k = Some v; k \\<noteq> k'\\<rbrakk>\n    \\<Longrightarrow> {k} \\<lhd> m(k' $$:= v') = {k $$:= v}", "with * and fmupd.IH"], ["proof (chain)\npicking this:\n  m $$ k = Some v\n  m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v}\n  {k} \\<lhd> m(k' $$:= v') = {k} \\<lhd> m", "show ?thesis"], ["proof (prove)\nusing this:\n  m $$ k = Some v\n  m $$ k = Some v \\<Longrightarrow> {k} \\<lhd> m = {k $$:= v}\n  {k} \\<lhd> m(k' $$:= v') = {k} \\<lhd> m\n\ngoal (1 subgoal):\n 1. {k} \\<lhd> m(k' $$:= v') = {k $$:= v}", "by simp"], ["proof (state)\nthis:\n  {k} \\<lhd> m(k' $$:= v') = {k $$:= v}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {k} \\<lhd> m(k' $$:= v') = {k $$:= v}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_res_union_distr:\n  shows \"(A \\<union> B) \\<lhd> m = A \\<lhd> m ++\\<^sub>f B \\<lhd> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A \\<union> B) \\<lhd> m = A \\<lhd> m ++\\<^sub>f B \\<lhd> m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (A \\<union> B) \\<lhd> m = A \\<lhd> m ++\\<^sub>f B \\<lhd> m", "have \"($$) ((A \\<union> B) \\<lhd> m) \\<subseteq>\\<^sub>m ($$) (A \\<lhd> m ++\\<^sub>f B \\<lhd> m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($$) ((A \\<union> B) \\<lhd> m) \\<subseteq>\\<^sub>m\n    ($$) (A \\<lhd> m ++\\<^sub>f B \\<lhd> m)", "proof (unfold map_le_def, intro ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> dom (($$) ((A \\<union> B) \\<lhd> m)) \\<Longrightarrow>\n       ((A \\<union> B) \\<lhd> m) $$ a =\n       (A \\<lhd> m ++\\<^sub>f B \\<lhd> m) $$ a", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> dom (($$) ((A \\<union> B) \\<lhd> m)) \\<Longrightarrow>\n       ((A \\<union> B) \\<lhd> m) $$ a =\n       (A \\<lhd> m ++\\<^sub>f B \\<lhd> m) $$ a", "assume \"k \\<in> dom (($$) ((A \\<union> B) \\<lhd> m))\""], ["proof (state)\nthis:\n  k \\<in> dom (($$) ((A \\<union> B) \\<lhd> m))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> dom (($$) ((A \\<union> B) \\<lhd> m)) \\<Longrightarrow>\n       ((A \\<union> B) \\<lhd> m) $$ a =\n       (A \\<lhd> m ++\\<^sub>f B \\<lhd> m) $$ a", "then"], ["proof (chain)\npicking this:\n  k \\<in> dom (($$) ((A \\<union> B) \\<lhd> m))", "show \"((A \\<union> B) \\<lhd> m) $$ k = (A \\<lhd> m ++\\<^sub>f B \\<lhd> m) $$ k\""], ["proof (prove)\nusing this:\n  k \\<in> dom (($$) ((A \\<union> B) \\<lhd> m))\n\ngoal (1 subgoal):\n 1. ((A \\<union> B) \\<lhd> m) $$ k = (A \\<lhd> m ++\\<^sub>f B \\<lhd> m) $$ k", "by auto"], ["proof (state)\nthis:\n  ((A \\<union> B) \\<lhd> m) $$ k = (A \\<lhd> m ++\\<^sub>f B \\<lhd> m) $$ k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ($$) ((A \\<union> B) \\<lhd> m) \\<subseteq>\\<^sub>m\n  ($$) (A \\<lhd> m ++\\<^sub>f B \\<lhd> m)\n\ngoal (1 subgoal):\n 1. (A \\<union> B) \\<lhd> m = A \\<lhd> m ++\\<^sub>f B \\<lhd> m", "moreover"], ["proof (state)\nthis:\n  ($$) ((A \\<union> B) \\<lhd> m) \\<subseteq>\\<^sub>m\n  ($$) (A \\<lhd> m ++\\<^sub>f B \\<lhd> m)\n\ngoal (1 subgoal):\n 1. (A \\<union> B) \\<lhd> m = A \\<lhd> m ++\\<^sub>f B \\<lhd> m", "have \"($$) (A \\<lhd> m ++\\<^sub>f B \\<lhd> m) \\<subseteq>\\<^sub>m ($$) ((A \\<union> B) \\<lhd> m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($$) (A \\<lhd> m ++\\<^sub>f B \\<lhd> m) \\<subseteq>\\<^sub>m\n    ($$) ((A \\<union> B) \\<lhd> m)", "proof (unfold map_le_def, intro ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> dom (($$)\n                     (A \\<lhd> m ++\\<^sub>f B \\<lhd> m)) \\<Longrightarrow>\n       (A \\<lhd> m ++\\<^sub>f B \\<lhd> m) $$ a =\n       ((A \\<union> B) \\<lhd> m) $$ a", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> dom (($$)\n                     (A \\<lhd> m ++\\<^sub>f B \\<lhd> m)) \\<Longrightarrow>\n       (A \\<lhd> m ++\\<^sub>f B \\<lhd> m) $$ a =\n       ((A \\<union> B) \\<lhd> m) $$ a", "assume \"k \\<in> dom (($$) (A \\<lhd> m ++\\<^sub>f B \\<lhd> m))\""], ["proof (state)\nthis:\n  k \\<in> dom (($$) (A \\<lhd> m ++\\<^sub>f B \\<lhd> m))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> dom (($$)\n                     (A \\<lhd> m ++\\<^sub>f B \\<lhd> m)) \\<Longrightarrow>\n       (A \\<lhd> m ++\\<^sub>f B \\<lhd> m) $$ a =\n       ((A \\<union> B) \\<lhd> m) $$ a", "then"], ["proof (chain)\npicking this:\n  k \\<in> dom (($$) (A \\<lhd> m ++\\<^sub>f B \\<lhd> m))", "show \"(A \\<lhd> m ++\\<^sub>f B \\<lhd> m) $$ k = ((A \\<union> B) \\<lhd> m) $$ k\""], ["proof (prove)\nusing this:\n  k \\<in> dom (($$) (A \\<lhd> m ++\\<^sub>f B \\<lhd> m))\n\ngoal (1 subgoal):\n 1. (A \\<lhd> m ++\\<^sub>f B \\<lhd> m) $$ k = ((A \\<union> B) \\<lhd> m) $$ k", "by auto"], ["proof (state)\nthis:\n  (A \\<lhd> m ++\\<^sub>f B \\<lhd> m) $$ k = ((A \\<union> B) \\<lhd> m) $$ k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ($$) (A \\<lhd> m ++\\<^sub>f B \\<lhd> m) \\<subseteq>\\<^sub>m\n  ($$) ((A \\<union> B) \\<lhd> m)\n\ngoal (1 subgoal):\n 1. (A \\<union> B) \\<lhd> m = A \\<lhd> m ++\\<^sub>f B \\<lhd> m", "ultimately"], ["proof (chain)\npicking this:\n  ($$) ((A \\<union> B) \\<lhd> m) \\<subseteq>\\<^sub>m\n  ($$) (A \\<lhd> m ++\\<^sub>f B \\<lhd> m)\n  ($$) (A \\<lhd> m ++\\<^sub>f B \\<lhd> m) \\<subseteq>\\<^sub>m\n  ($$) ((A \\<union> B) \\<lhd> m)", "show ?thesis"], ["proof (prove)\nusing this:\n  ($$) ((A \\<union> B) \\<lhd> m) \\<subseteq>\\<^sub>m\n  ($$) (A \\<lhd> m ++\\<^sub>f B \\<lhd> m)\n  ($$) (A \\<lhd> m ++\\<^sub>f B \\<lhd> m) \\<subseteq>\\<^sub>m\n  ($$) ((A \\<union> B) \\<lhd> m)\n\ngoal (1 subgoal):\n 1. (A \\<union> B) \\<lhd> m = A \\<lhd> m ++\\<^sub>f B \\<lhd> m", "using fmlookup_inject and map_le_antisym"], ["proof (prove)\nusing this:\n  ($$) ((A \\<union> B) \\<lhd> m) \\<subseteq>\\<^sub>m\n  ($$) (A \\<lhd> m ++\\<^sub>f B \\<lhd> m)\n  ($$) (A \\<lhd> m ++\\<^sub>f B \\<lhd> m) \\<subseteq>\\<^sub>m\n  ($$) ((A \\<union> B) \\<lhd> m)\n  (($$) ?x = ($$) ?y) = (?x = ?y)\n  \\<lbrakk>?f \\<subseteq>\\<^sub>m ?g; ?g \\<subseteq>\\<^sub>m ?f\\<rbrakk>\n  \\<Longrightarrow> ?f = ?g\n\ngoal (1 subgoal):\n 1. (A \\<union> B) \\<lhd> m = A \\<lhd> m ++\\<^sub>f B \\<lhd> m", "by blast"], ["proof (state)\nthis:\n  (A \\<union> B) \\<lhd> m = A \\<lhd> m ++\\<^sub>f B \\<lhd> m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_exc_add_distr:\n  shows \"s \\<lhd>/ (m\\<^sub>1 ++\\<^sub>f m\\<^sub>2) = (s \\<lhd>/ m\\<^sub>1) ++\\<^sub>f (s \\<lhd>/ m\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<lhd>/ (m\\<^sub>1 ++\\<^sub>f m\\<^sub>2) =\n    s \\<lhd>/ m\\<^sub>1 ++\\<^sub>f s \\<lhd>/ m\\<^sub>2", "by (blast intro: fmfilter_add_distrib)"], ["", "lemma fmap_partition:\n  shows \"m = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m", "proof (induction m)"], ["proof (state)\ngoal (2 subgoals):\n 1. {$$} = s \\<lhd>/ {$$} ++\\<^sub>f s \\<lhd> {$$}\n 2. \\<And>x y m.\n       \\<lbrakk>m = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m;\n        m $$ x = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) =\n                         s \\<lhd>/ m(x $$:= y) ++\\<^sub>f\n                         s \\<lhd> m(x $$:= y)", "case fmempty"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. {$$} = s \\<lhd>/ {$$} ++\\<^sub>f s \\<lhd> {$$}\n 2. \\<And>x y m.\n       \\<lbrakk>m = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m;\n        m $$ x = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) =\n                         s \\<lhd>/ m(x $$:= y) ++\\<^sub>f\n                         s \\<lhd> m(x $$:= y)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. {$$} = s \\<lhd>/ {$$} ++\\<^sub>f s \\<lhd> {$$}", "by simp"], ["proof (state)\nthis:\n  {$$} = s \\<lhd>/ {$$} ++\\<^sub>f s \\<lhd> {$$}\n\ngoal (1 subgoal):\n 1. \\<And>x y m.\n       \\<lbrakk>m = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m;\n        m $$ x = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) =\n                         s \\<lhd>/ m(x $$:= y) ++\\<^sub>f\n                         s \\<lhd> m(x $$:= y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y m.\n       \\<lbrakk>m = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m;\n        m $$ x = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) =\n                         s \\<lhd>/ m(x $$:= y) ++\\<^sub>f\n                         s \\<lhd> m(x $$:= y)", "case (fmupd k v m)"], ["proof (state)\nthis:\n  m = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. \\<And>x y m.\n       \\<lbrakk>m = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m;\n        m $$ x = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) =\n                         s \\<lhd>/ m(x $$:= y) ++\\<^sub>f\n                         s \\<lhd> m(x $$:= y)", "from fmupd.hyps"], ["proof (chain)\npicking this:\n  m $$ k = None", "have \"s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n    s \\<lhd>/ (m ++\\<^sub>f {k $$:= v}) ++\\<^sub>f s \\<lhd> (m ++\\<^sub>f {k $$:= v})\""], ["proof (prove)\nusing this:\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n    s \\<lhd>/ (m ++\\<^sub>f {k $$:= v}) ++\\<^sub>f\n    s \\<lhd> (m ++\\<^sub>f {k $$:= v})", "by simp"], ["proof (state)\nthis:\n  s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n  s \\<lhd>/ (m ++\\<^sub>f {k $$:= v}) ++\\<^sub>f\n  s \\<lhd> (m ++\\<^sub>f {k $$:= v})\n\ngoal (1 subgoal):\n 1. \\<And>x y m.\n       \\<lbrakk>m = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m;\n        m $$ x = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) =\n                         s \\<lhd>/ m(x $$:= y) ++\\<^sub>f\n                         s \\<lhd> m(x $$:= y)", "also"], ["proof (state)\nthis:\n  s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n  s \\<lhd>/ (m ++\\<^sub>f {k $$:= v}) ++\\<^sub>f\n  s \\<lhd> (m ++\\<^sub>f {k $$:= v})\n\ngoal (1 subgoal):\n 1. \\<And>x y m.\n       \\<lbrakk>m = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m;\n        m $$ x = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) =\n                         s \\<lhd>/ m(x $$:= y) ++\\<^sub>f\n                         s \\<lhd> m(x $$:= y)", "have \"\\<dots> = s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f s \\<lhd> m ++\\<^sub>f s \\<lhd> {k $$:= v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<lhd>/ (m ++\\<^sub>f {k $$:= v}) ++\\<^sub>f\n    s \\<lhd> (m ++\\<^sub>f {k $$:= v}) =\n    s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n    s \\<lhd> m ++\\<^sub>f\n    s \\<lhd> {k $$:= v}", "using dom_exc_add_distr"], ["proof (prove)\nusing this:\n  ?s \\<lhd>/ (?m\\<^sub>1 ++\\<^sub>f ?m\\<^sub>2) =\n  ?s \\<lhd>/ ?m\\<^sub>1 ++\\<^sub>f ?s \\<lhd>/ ?m\\<^sub>2\n\ngoal (1 subgoal):\n 1. s \\<lhd>/ (m ++\\<^sub>f {k $$:= v}) ++\\<^sub>f\n    s \\<lhd> (m ++\\<^sub>f {k $$:= v}) =\n    s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n    s \\<lhd> m ++\\<^sub>f\n    s \\<lhd> {k $$:= v}", "by simp"], ["proof (state)\nthis:\n  s \\<lhd>/ (m ++\\<^sub>f {k $$:= v}) ++\\<^sub>f\n  s \\<lhd> (m ++\\<^sub>f {k $$:= v}) =\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n  s \\<lhd> m ++\\<^sub>f\n  s \\<lhd> {k $$:= v}\n\ngoal (1 subgoal):\n 1. \\<And>x y m.\n       \\<lbrakk>m = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m;\n        m $$ x = None\\<rbrakk>\n       \\<Longrightarrow> m(x $$:= y) =\n                         s \\<lhd>/ m(x $$:= y) ++\\<^sub>f\n                         s \\<lhd> m(x $$:= y)", "finally"], ["proof (chain)\npicking this:\n  s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n  s \\<lhd> m ++\\<^sub>f\n  s \\<lhd> {k $$:= v}", "show ?case"], ["proof (prove)\nusing this:\n  s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n  s \\<lhd> m ++\\<^sub>f\n  s \\<lhd> {k $$:= v}\n\ngoal (1 subgoal):\n 1. m(k $$:= v) = s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "proof (cases \"k \\<in> s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<in> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)\n 2. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<notin> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "case True"], ["proof (state)\nthis:\n  k \\<in> s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<in> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)\n 2. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<notin> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "then"], ["proof (chain)\npicking this:\n  k \\<in> s", "have \"s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f s \\<lhd> m ++\\<^sub>f s \\<lhd> {k $$:= v} =\n      s \\<lhd>/ m ++\\<^sub>f {$$} ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v}\""], ["proof (prove)\nusing this:\n  k \\<in> s\n\ngoal (1 subgoal):\n 1. s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n    s \\<lhd> m ++\\<^sub>f\n    s \\<lhd> {k $$:= v} =\n    s \\<lhd>/ m ++\\<^sub>f {$$} ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v}", "by simp"], ["proof (state)\nthis:\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n  s \\<lhd> m ++\\<^sub>f\n  s \\<lhd> {k $$:= v} =\n  s \\<lhd>/ m ++\\<^sub>f {$$} ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<in> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)\n 2. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<notin> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "also"], ["proof (state)\nthis:\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n  s \\<lhd> m ++\\<^sub>f\n  s \\<lhd> {k $$:= v} =\n  s \\<lhd>/ m ++\\<^sub>f {$$} ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<in> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)\n 2. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<notin> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "have \"\\<dots> = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<lhd>/ m ++\\<^sub>f {$$} ++\\<^sub>f s \\<lhd> m ++\\<^sub>f\n    {k $$:= v} =\n    s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v}", "by simp"], ["proof (state)\nthis:\n  s \\<lhd>/ m ++\\<^sub>f {$$} ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v} =\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<in> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)\n 2. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<notin> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "also"], ["proof (state)\nthis:\n  s \\<lhd>/ m ++\\<^sub>f {$$} ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v} =\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<in> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)\n 2. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<notin> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "from fmupd.IH"], ["proof (chain)\npicking this:\n  m = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m", "have \"\\<dots> = m ++\\<^sub>f {k $$:= v}\""], ["proof (prove)\nusing this:\n  m = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m\n\ngoal (1 subgoal):\n 1. s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v} =\n    m ++\\<^sub>f {k $$:= v}", "by simp"], ["proof (state)\nthis:\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v} =\n  m ++\\<^sub>f {k $$:= v}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<in> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)\n 2. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<notin> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "finally"], ["proof (chain)\npicking this:\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n  s \\<lhd> m ++\\<^sub>f\n  s \\<lhd> {k $$:= v} =\n  m ++\\<^sub>f {k $$:= v}", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n  s \\<lhd> m ++\\<^sub>f\n  s \\<lhd> {k $$:= v} =\n  m ++\\<^sub>f {k $$:= v}\n\ngoal (1 subgoal):\n 1. m(k $$:= v) = s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "using fmupd.hyps"], ["proof (prove)\nusing this:\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n  s \\<lhd> m ++\\<^sub>f\n  s \\<lhd> {k $$:= v} =\n  m ++\\<^sub>f {k $$:= v}\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. m(k $$:= v) = s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "by auto"], ["proof (state)\nthis:\n  m(k $$:= v) = s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<notin> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<notin> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "case False"], ["proof (state)\nthis:\n  k \\<notin> s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<notin> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "then"], ["proof (chain)\npicking this:\n  k \\<notin> s", "have \"s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f s \\<lhd> m ++\\<^sub>f s \\<lhd> {k $$:= v} =\n      s \\<lhd>/ m ++\\<^sub>f {k $$:= v} ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {$$}\""], ["proof (prove)\nusing this:\n  k \\<notin> s\n\ngoal (1 subgoal):\n 1. s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n    s \\<lhd> m ++\\<^sub>f\n    s \\<lhd> {k $$:= v} =\n    s \\<lhd>/ m ++\\<^sub>f {k $$:= v} ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {$$}", "by simp"], ["proof (state)\nthis:\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n  s \\<lhd> m ++\\<^sub>f\n  s \\<lhd> {k $$:= v} =\n  s \\<lhd>/ m ++\\<^sub>f {k $$:= v} ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {$$}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<notin> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "also"], ["proof (state)\nthis:\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n  s \\<lhd> m ++\\<^sub>f\n  s \\<lhd> {k $$:= v} =\n  s \\<lhd>/ m ++\\<^sub>f {k $$:= v} ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {$$}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<notin> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "have \"\\<dots> = s \\<lhd>/ m ++\\<^sub>f {k $$:= v} ++\\<^sub>f s \\<lhd> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<lhd>/ m ++\\<^sub>f {k $$:= v} ++\\<^sub>f s \\<lhd> m ++\\<^sub>f\n    {$$} =\n    s \\<lhd>/ m ++\\<^sub>f {k $$:= v} ++\\<^sub>f s \\<lhd> m", "by simp"], ["proof (state)\nthis:\n  s \\<lhd>/ m ++\\<^sub>f {k $$:= v} ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {$$} =\n  s \\<lhd>/ m ++\\<^sub>f {k $$:= v} ++\\<^sub>f s \\<lhd> m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<notin> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "also"], ["proof (state)\nthis:\n  s \\<lhd>/ m ++\\<^sub>f {k $$:= v} ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {$$} =\n  s \\<lhd>/ m ++\\<^sub>f {k $$:= v} ++\\<^sub>f s \\<lhd> m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<notin> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "from fmupd.hyps"], ["proof (chain)\npicking this:\n  m $$ k = None", "have \"\\<dots> = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v}\""], ["proof (prove)\nusing this:\n  m $$ k = None\n\ngoal (1 subgoal):\n 1. s \\<lhd>/ m ++\\<^sub>f {k $$:= v} ++\\<^sub>f s \\<lhd> m =\n    s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v}", "using fmap_singleton_comm"], ["proof (prove)\nusing this:\n  m $$ k = None\n  ?m $$ ?k = None \\<Longrightarrow>\n  ?m ++\\<^sub>f {?k $$:= ?v} = {?k $$:= ?v} ++\\<^sub>f ?m\n\ngoal (1 subgoal):\n 1. s \\<lhd>/ m ++\\<^sub>f {k $$:= v} ++\\<^sub>f s \\<lhd> m =\n    s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v}", "by (metis (full_types) fmadd_assoc fmlookup_filter)"], ["proof (state)\nthis:\n  s \\<lhd>/ m ++\\<^sub>f {k $$:= v} ++\\<^sub>f s \\<lhd> m =\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<notin> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "also"], ["proof (state)\nthis:\n  s \\<lhd>/ m ++\\<^sub>f {k $$:= v} ++\\<^sub>f s \\<lhd> m =\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<notin> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "from fmupd.IH"], ["proof (chain)\npicking this:\n  m = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m", "have \"\\<dots> = m ++\\<^sub>f {k $$:= v}\""], ["proof (prove)\nusing this:\n  m = s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m\n\ngoal (1 subgoal):\n 1. s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v} =\n    m ++\\<^sub>f {k $$:= v}", "by simp"], ["proof (state)\nthis:\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd> m ++\\<^sub>f {k $$:= v} =\n  m ++\\<^sub>f {k $$:= v}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v) =\n             s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n             s \\<lhd> m ++\\<^sub>f\n             s \\<lhd> {k $$:= v};\n     k \\<notin> s\\<rbrakk>\n    \\<Longrightarrow> m(k $$:= v) =\n                      s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "finally"], ["proof (chain)\npicking this:\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n  s \\<lhd> m ++\\<^sub>f\n  s \\<lhd> {k $$:= v} =\n  m ++\\<^sub>f {k $$:= v}", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<lhd>/ m ++\\<^sub>f s \\<lhd>/ {k $$:= v} ++\\<^sub>f\n  s \\<lhd> m ++\\<^sub>f\n  s \\<lhd> {k $$:= v} =\n  m ++\\<^sub>f {k $$:= v}\n\ngoal (1 subgoal):\n 1. m(k $$:= v) = s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)", "by auto"], ["proof (state)\nthis:\n  m(k $$:= v) = s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m(k $$:= v) = s \\<lhd>/ m(k $$:= v) ++\\<^sub>f s \\<lhd> m(k $$:= v)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_res_addition_in:\n  assumes \"m\\<^sub>1 $$ k = None\"\n  and \"m\\<^sub>2 $$ k = Some v'\"\n  shows \"fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 = fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n    fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n    fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}", "from \\<open>m\\<^sub>1 $$ k = None\\<close>"], ["proof (chain)\npicking this:\n  m\\<^sub>1 $$ k = None", "have \"fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 = (fmdom' m\\<^sub>1 \\<union> {k}) \\<lhd> m\\<^sub>2\""], ["proof (prove)\nusing this:\n  m\\<^sub>1 $$ k = None\n\ngoal (1 subgoal):\n 1. fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n    (fmdom' m\\<^sub>1 \\<union> {k}) \\<lhd> m\\<^sub>2", "by simp"], ["proof (state)\nthis:\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n  (fmdom' m\\<^sub>1 \\<union> {k}) \\<lhd> m\\<^sub>2\n\ngoal (1 subgoal):\n 1. fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n    fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}", "also"], ["proof (state)\nthis:\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n  (fmdom' m\\<^sub>1 \\<union> {k}) \\<lhd> m\\<^sub>2\n\ngoal (1 subgoal):\n 1. fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n    fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}", "have \"\\<dots> = fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k} \\<lhd> m\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fmdom' m\\<^sub>1 \\<union> {k}) \\<lhd> m\\<^sub>2 =\n    fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k} \\<lhd> m\\<^sub>2", "using dom_res_union_distr"], ["proof (prove)\nusing this:\n  (?A \\<union> ?B) \\<lhd> ?m = ?A \\<lhd> ?m ++\\<^sub>f ?B \\<lhd> ?m\n\ngoal (1 subgoal):\n 1. (fmdom' m\\<^sub>1 \\<union> {k}) \\<lhd> m\\<^sub>2 =\n    fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k} \\<lhd> m\\<^sub>2", "."], ["proof (state)\nthis:\n  (fmdom' m\\<^sub>1 \\<union> {k}) \\<lhd> m\\<^sub>2 =\n  fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k} \\<lhd> m\\<^sub>2\n\ngoal (1 subgoal):\n 1. fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n    fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}", "finally"], ["proof (chain)\npicking this:\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n  fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k} \\<lhd> m\\<^sub>2", "show ?thesis"], ["proof (prove)\nusing this:\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n  fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k} \\<lhd> m\\<^sub>2\n\ngoal (1 subgoal):\n 1. fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n    fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}", "using \\<open>m\\<^sub>2 $$ k = Some v'\\<close> and dom_res_singleton"], ["proof (prove)\nusing this:\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n  fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k} \\<lhd> m\\<^sub>2\n  m\\<^sub>2 $$ k = Some v'\n  ?m $$ ?k = Some ?v \\<Longrightarrow> {?k} \\<lhd> ?m = {?k $$:= ?v}\n\ngoal (1 subgoal):\n 1. fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n    fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}", "by fastforce"], ["proof (state)\nthis:\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n  fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_res_addition_not_in:\n  assumes \"m\\<^sub>2 $$ k = None\"\n  shows \"fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 = fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n    fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n    fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2", "have \"fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 = fmfilter (\\<lambda>k'. k' = k \\<or> k' \\<in> fmdom' m\\<^sub>1) m\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n    fmfilter (\\<lambda>k'. k' = k \\<or> k' \\<in> fmdom' m\\<^sub>1) m\\<^sub>2", "by simp"], ["proof (state)\nthis:\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n  fmfilter (\\<lambda>k'. k' = k \\<or> k' \\<in> fmdom' m\\<^sub>1) m\\<^sub>2\n\ngoal (1 subgoal):\n 1. fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n    fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2", "also"], ["proof (state)\nthis:\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n  fmfilter (\\<lambda>k'. k' = k \\<or> k' \\<in> fmdom' m\\<^sub>1) m\\<^sub>2\n\ngoal (1 subgoal):\n 1. fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n    fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2", "have \"\\<dots> = fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmfilter (\\<lambda>k'. k' = k \\<or> k' \\<in> fmdom' m\\<^sub>1)\n     m\\<^sub>2 =\n    fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2", "proof (intro fmfilter_cong')"], ["proof (state)\ngoal (2 subgoals):\n 1. m\\<^sub>2 = m\\<^sub>2\n 2. \\<And>x.\n       x \\<in> fmdom' m\\<^sub>2 \\<Longrightarrow>\n       (x = k \\<or> x \\<in> fmdom' m\\<^sub>1) = (x \\<in> fmdom' m\\<^sub>1)", "show \"m\\<^sub>2 = m\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m\\<^sub>2 = m\\<^sub>2", ".."], ["proof (state)\nthis:\n  m\\<^sub>2 = m\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> fmdom' m\\<^sub>2 \\<Longrightarrow>\n       (x = k \\<or> x \\<in> fmdom' m\\<^sub>1) = (x \\<in> fmdom' m\\<^sub>1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> fmdom' m\\<^sub>2 \\<Longrightarrow>\n       (x = k \\<or> x \\<in> fmdom' m\\<^sub>1) = (x \\<in> fmdom' m\\<^sub>1)", "from assms"], ["proof (chain)\npicking this:\n  m\\<^sub>2 $$ k = None", "show \"k' \\<in> fmdom' m\\<^sub>2 \\<Longrightarrow> (k' = k \\<or> k' \\<in> fmdom' m\\<^sub>1) = (k' \\<in> fmdom' m\\<^sub>1)\" for k'"], ["proof (prove)\nusing this:\n  m\\<^sub>2 $$ k = None\n\ngoal (1 subgoal):\n 1. k' \\<in> fmdom' m\\<^sub>2 \\<Longrightarrow>\n    (k' = k \\<or> k' \\<in> fmdom' m\\<^sub>1) = (k' \\<in> fmdom' m\\<^sub>1)", "by (cases \"k' = k\") (simp_all add: fmdom'_notI)"], ["proof (state)\nthis:\n  ?k' \\<in> fmdom' m\\<^sub>2 \\<Longrightarrow>\n  (?k' = k \\<or> ?k' \\<in> fmdom' m\\<^sub>1) = (?k' \\<in> fmdom' m\\<^sub>1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fmfilter (\\<lambda>k'. k' = k \\<or> k' \\<in> fmdom' m\\<^sub>1) m\\<^sub>2 =\n  fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2\n\ngoal (1 subgoal):\n 1. fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n    fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2", "finally"], ["proof (chain)\npicking this:\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n  fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2", "show ?thesis"], ["proof (prove)\nusing this:\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n  fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2\n\ngoal (1 subgoal):\n 1. fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n    fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2", "."], ["proof (state)\nthis:\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd> m\\<^sub>2 =\n  fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inter_plus_addition_in:\n  assumes \"m\\<^sub>1 $$ k = None\"\n  and \"m\\<^sub>2 $$ k = Some v'\"\n  shows \"m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 = (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f {k $$:= v' + v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2 ++\\<^sub>f {k $$:= v' + v}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2 ++\\<^sub>f {k $$:= v' + v}", "let ?f = \"\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k'\""], ["proof (state)\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2 ++\\<^sub>f {k $$:= v' + v}", "from assms"], ["proof (chain)\npicking this:\n  m\\<^sub>1 $$ k = None\n  m\\<^sub>2 $$ k = Some v'", "have \"m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 = fmmap_keys ?f ((fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f {k $$:= v'})\""], ["proof (prove)\nusing this:\n  m\\<^sub>1 $$ k = None\n  m\\<^sub>2 $$ k = Some v'\n\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'})", "using dom_res_addition_in"], ["proof (prove)\nusing this:\n  m\\<^sub>1 $$ k = None\n  m\\<^sub>2 $$ k = Some v'\n  \\<lbrakk>?m\\<^sub>1 $$ ?k = None; ?m\\<^sub>2 $$ ?k = Some ?v'\\<rbrakk>\n  \\<Longrightarrow> fmdom' (?m\\<^sub>1(?k $$:= ?v)) \\<lhd> ?m\\<^sub>2 =\n                    fmdom' ?m\\<^sub>1 \\<lhd> ?m\\<^sub>2 ++\\<^sub>f\n                    {?k $$:= ?v'}\n\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'})", "by fastforce"], ["proof (state)\nthis:\n  m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'})\n\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2 ++\\<^sub>f {k $$:= v' + v}", "also"], ["proof (state)\nthis:\n  m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'})\n\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2 ++\\<^sub>f {k $$:= v' + v}", "have \"\\<dots> = fmmap_keys ?f (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f fmmap_keys ?f {k $$:= v'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}) =\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k') {k $$:= v'}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}) =\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k') {k $$:= v'}", "from \\<open>m\\<^sub>1 $$ k = None\\<close>"], ["proof (chain)\npicking this:\n  m\\<^sub>1 $$ k = None", "have \"fmdom' (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) \\<inter> fmdom' {k $$:= v'} = {}\""], ["proof (prove)\nusing this:\n  m\\<^sub>1 $$ k = None\n\ngoal (1 subgoal):\n 1. fmdom' (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) \\<inter> fmdom' {k $$:= v'} =\n    {}", "by (simp add: fmdom'_notI)"], ["proof (state)\nthis:\n  fmdom' (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) \\<inter> fmdom' {k $$:= v'} =\n  {}\n\ngoal (1 subgoal):\n 1. fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}) =\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k') {k $$:= v'}", "then"], ["proof (chain)\npicking this:\n  fmdom' (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) \\<inter> fmdom' {k $$:= v'} =\n  {}", "show ?thesis"], ["proof (prove)\nusing this:\n  fmdom' (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) \\<inter> fmdom' {k $$:= v'} =\n  {}\n\ngoal (1 subgoal):\n 1. fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}) =\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k') {k $$:= v'}", "using fmmap_keys_hom"], ["proof (prove)\nusing this:\n  fmdom' (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) \\<inter> fmdom' {k $$:= v'} =\n  {}\n  fmdom' ?m\\<^sub>1 \\<inter> fmdom' ?m\\<^sub>2 = {} \\<Longrightarrow>\n  fmmap_keys ?f (?m\\<^sub>1 ++\\<^sub>f ?m\\<^sub>2) =\n  fmmap_keys ?f ?m\\<^sub>1 ++\\<^sub>f fmmap_keys ?f ?m\\<^sub>2\n\ngoal (1 subgoal):\n 1. fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}) =\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k') {k $$:= v'}", "by blast"], ["proof (state)\nthis:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}) =\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k') {k $$:= v'}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}) =\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k') {k $$:= v'}\n\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2 ++\\<^sub>f {k $$:= v' + v}", "also"], ["proof (state)\nthis:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2 ++\\<^sub>f {k $$:= v'}) =\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k') {k $$:= v'}\n\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2 ++\\<^sub>f {k $$:= v' + v}", "from assms"], ["proof (chain)\npicking this:\n  m\\<^sub>1 $$ k = None\n  m\\<^sub>2 $$ k = Some v'", "have \"\\<dots> = fmmap_keys ?f (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f {k $$:= v' + v}\""], ["proof (prove)\nusing this:\n  m\\<^sub>1 $$ k = None\n  m\\<^sub>2 $$ k = Some v'\n\ngoal (1 subgoal):\n 1. fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     {k $$:= v'} =\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n    {k $$:= v' + v}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>m\\<^sub>1 $$ k = None; m\\<^sub>2 $$ k = Some v'\\<rbrakk>\n    \\<Longrightarrow> fmmap_keys\n                       (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n                       (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n                      fmmap_keys\n                       (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n                       {k $$:= v'} =\n                      fmmap_keys\n                       (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n                       (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n                      {k $$:= v' + v}", "have \"fmmap_keys ?f {k $$:= v'} = {k $$:= v' + v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     {k $$:= v'} =\n    {k $$:= v' + v}", "proof (intro fmap_ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n        {k $$:= v'} $$\n       x =\n       {k $$:= v' + v} $$ x", "fix k'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n        {k $$:= v'} $$\n       x =\n       {k $$:= v' + v} $$ x", "have \"fmmap_keys ?f {k $$:= v'} $$ k' = map_option (?f k') ({k $$:= v'} $$ k')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     {k $$:= v'} $$\n    k' =\n    map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     ({k $$:= v'} $$ k')", "using fmlookup_fmmap_keys"], ["proof (prove)\nusing this:\n  fmmap_keys ?f ?m $$ ?x = map_option (?f ?x) (?m $$ ?x)\n\ngoal (1 subgoal):\n 1. fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     {k $$:= v'} $$\n    k' =\n    map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     ({k $$:= v'} $$ k')", "."], ["proof (state)\nthis:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   {k $$:= v'} $$\n  k' =\n  map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   ({k $$:= v'} $$ k')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n        {k $$:= v'} $$\n       x =\n       {k $$:= v' + v} $$ x", "also"], ["proof (state)\nthis:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   {k $$:= v'} $$\n  k' =\n  map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   ({k $$:= v'} $$ k')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n        {k $$:= v'} $$\n       x =\n       {k $$:= v' + v} $$ x", "have \"\\<dots> = map_option (?f k') (if k = k' then Some v' else {$$} $$ k')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     ({k $$:= v'} $$ k') =\n    map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (if k = k' then Some v' else {$$} $$ k')", "by simp"], ["proof (state)\nthis:\n  map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   ({k $$:= v'} $$ k') =\n  map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (if k = k' then Some v' else {$$} $$ k')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n        {k $$:= v'} $$\n       x =\n       {k $$:= v' + v} $$ x", "also"], ["proof (state)\nthis:\n  map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   ({k $$:= v'} $$ k') =\n  map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (if k = k' then Some v' else {$$} $$ k')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n        {k $$:= v'} $$\n       x =\n       {k $$:= v' + v} $$ x", "have \"\\<dots> = {k $$:= v' + v} $$ k'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (if k = k' then Some v' else {$$} $$ k') =\n    {k $$:= v' + v} $$ k'", "by (cases \"k' = k\") simp_all"], ["proof (state)\nthis:\n  map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (if k = k' then Some v' else {$$} $$ k') =\n  {k $$:= v' + v} $$ k'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n        {k $$:= v'} $$\n       x =\n       {k $$:= v' + v} $$ x", "finally"], ["proof (chain)\npicking this:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   {k $$:= v'} $$\n  k' =\n  {k $$:= v' + v} $$ k'", "show \"fmmap_keys ?f {k $$:= v'} $$ k' = {k $$:= v' + v} $$ k'\""], ["proof (prove)\nusing this:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   {k $$:= v'} $$\n  k' =\n  {k $$:= v' + v} $$ k'\n\ngoal (1 subgoal):\n 1. fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     {k $$:= v'} $$\n    k' =\n    {k $$:= v' + v} $$ k'", "."], ["proof (state)\nthis:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   {k $$:= v'} $$\n  k' =\n  {k $$:= v' + v} $$ k'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k') {k $$:= v'} =\n  {k $$:= v' + v}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m\\<^sub>1 $$ k = None; m\\<^sub>2 $$ k = Some v'\\<rbrakk>\n    \\<Longrightarrow> fmmap_keys\n                       (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n                       (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n                      fmmap_keys\n                       (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n                       {k $$:= v'} =\n                      fmmap_keys\n                       (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n                       (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n                      {k $$:= v' + v}", "then"], ["proof (chain)\npicking this:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k') {k $$:= v'} =\n  {k $$:= v' + v}", "show ?thesis"], ["proof (prove)\nusing this:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k') {k $$:= v'} =\n  {k $$:= v' + v}\n\ngoal (1 subgoal):\n 1. fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     {k $$:= v'} =\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n    {k $$:= v' + v}", "by simp"], ["proof (state)\nthis:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k') {k $$:= v'} =\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n  {k $$:= v' + v}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k') {k $$:= v'} =\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n  {k $$:= v' + v}\n\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2 ++\\<^sub>f {k $$:= v' + v}", "also"], ["proof (state)\nthis:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k') {k $$:= v'} =\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n  {k $$:= v' + v}\n\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2 ++\\<^sub>f {k $$:= v' + v}", "have \"\\<dots> = fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1 $$! k') (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f {k $$:= v' + v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n    {k $$:= v' + v} =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2 ++\\<^sub>f {k $$:= v' + v}", "by (simp add: fmap_ext)"], ["proof (state)\nthis:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) ++\\<^sub>f\n  {k $$:= v' + v} =\n  m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2 ++\\<^sub>f {k $$:= v' + v}\n\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2 ++\\<^sub>f {k $$:= v' + v}", "finally"], ["proof (chain)\npicking this:\n  m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n  m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2 ++\\<^sub>f {k $$:= v' + v}", "show ?thesis"], ["proof (prove)\nusing this:\n  m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n  m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2 ++\\<^sub>f {k $$:= v' + v}\n\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2 ++\\<^sub>f {k $$:= v' + v}", "."], ["proof (state)\nthis:\n  m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n  m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2 ++\\<^sub>f {k $$:= v' + v}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inter_plus_addition_notin:\n  assumes \"m\\<^sub>1 $$ k = None\"\n  and \"m\\<^sub>2 $$ k = None\"\n  shows \"m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 = (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2", "let ?f = \"\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k'\""], ["proof (state)\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2", "from \\<open>m\\<^sub>2 $$ k = None\\<close>"], ["proof (chain)\npicking this:\n  m\\<^sub>2 $$ k = None", "have \"m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 = fmmap_keys ?f (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2)\""], ["proof (prove)\nusing this:\n  m\\<^sub>2 $$ k = None\n\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2)", "using dom_res_addition_not_in"], ["proof (prove)\nusing this:\n  m\\<^sub>2 $$ k = None\n  ?m\\<^sub>2 $$ ?k = None \\<Longrightarrow>\n  fmdom' (?m\\<^sub>1(?k $$:= ?v)) \\<lhd> ?m\\<^sub>2 =\n  fmdom' ?m\\<^sub>1 \\<lhd> ?m\\<^sub>2\n\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2)", "by metis"], ["proof (state)\nthis:\n  m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2)\n\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2", "also"], ["proof (state)\nthis:\n  m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2)\n\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2", "have \"\\<dots> = fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1 $$! k') (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2", "proof (intro fmap_ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n        (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$\n       x =\n       (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) $$ x", "fix k'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n        (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$\n       x =\n       (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) $$ x", "have \"fmmap_keys ?f (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$ k' = map_option (?f k') ((fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$ k')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$\n    k' =\n    map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     ((fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$ k')", "using fmlookup_fmmap_keys"], ["proof (prove)\nusing this:\n  fmmap_keys ?f ?m $$ ?x = map_option (?f ?x) (?m $$ ?x)\n\ngoal (1 subgoal):\n 1. fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$\n    k' =\n    map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     ((fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$ k')", "."], ["proof (state)\nthis:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$\n  k' =\n  map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   ((fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$ k')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n        (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$\n       x =\n       (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) $$ x", "also"], ["proof (state)\nthis:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$\n  k' =\n  map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   ((fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$ k')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n        (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$\n       x =\n       (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) $$ x", "from \\<open>m\\<^sub>1 $$ k = None\\<close>"], ["proof (chain)\npicking this:\n  m\\<^sub>1 $$ k = None", "have \"\\<dots> = fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1 $$! k') (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$ k'\""], ["proof (prove)\nusing this:\n  m\\<^sub>1 $$ k = None\n\ngoal (1 subgoal):\n 1. map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     ((fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$ k') =\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) $$ k'", "by (cases \"k' = k\") (simp_all add: fmdom'_notI)"], ["proof (state)\nthis:\n  map_option (\\<lambda>v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   ((fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$ k') =\n  (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) $$ k'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n        (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$\n       x =\n       (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) $$ x", "finally"], ["proof (chain)\npicking this:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$\n  k' =\n  (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) $$ k'", "show \"fmmap_keys ?f (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$ k' =\n      fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1 $$! k') (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$ k'\""], ["proof (prove)\nusing this:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$\n  k' =\n  (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) $$ k'\n\ngoal (1 subgoal):\n 1. fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n     (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$\n    k' =\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) $$ k'", "."], ["proof (state)\nthis:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) $$\n  k' =\n  (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) $$ k'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fmmap_keys (\\<lambda>k' v'. v' + m\\<^sub>1(k $$:= v) $$! k')\n   (fmdom' m\\<^sub>1 \\<lhd> m\\<^sub>2) =\n  m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2\n\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2", "finally"], ["proof (chain)\npicking this:\n  m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n  m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2", "show ?thesis"], ["proof (prove)\nusing this:\n  m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n  m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2\n\ngoal (1 subgoal):\n 1. m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n    m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2", "."], ["proof (state)\nthis:\n  m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2 =\n  m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma union_plus_addition_notin: (* TODO: Find nicer proofs for SMT calls. *)\n  assumes \"m\\<^sub>1 $$ k = None\"\n  and \"m\\<^sub>2 $$ k = None\"\n  shows \"m\\<^sub>1(k $$:= v) \\<union>\\<^sub>+ m\\<^sub>2 = (m\\<^sub>1 \\<union>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f {k $$:= v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1(k $$:= v) ++\\<^sub>f\n    fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f\n    {k $$:= v}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1(k $$:= v) ++\\<^sub>f\n    fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f\n    {k $$:= v}", "from \\<open>m\\<^sub>2 $$ k = None\\<close>"], ["proof (chain)\npicking this:\n  m\\<^sub>2 $$ k = None", "have \"(m\\<^sub>1(k $$:= v)) \\<union>\\<^sub>+ m\\<^sub>2 =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2)\""], ["proof (prove)\nusing this:\n  m\\<^sub>2 $$ k = None\n\ngoal (1 subgoal):\n 1. fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1(k $$:= v) ++\\<^sub>f\n    fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n    fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2)", "by (simp add: fmdom'_notI)"], ["proof (state)\nthis:\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1(k $$:= v) ++\\<^sub>f\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2)\n\ngoal (1 subgoal):\n 1. fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1(k $$:= v) ++\\<^sub>f\n    fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f\n    {k $$:= v}", "also"], ["proof (state)\nthis:\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1(k $$:= v) ++\\<^sub>f\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2)\n\ngoal (1 subgoal):\n 1. fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1(k $$:= v) ++\\<^sub>f\n    fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f\n    {k $$:= v}", "from assms"], ["proof (chain)\npicking this:\n  m\\<^sub>1 $$ k = None\n  m\\<^sub>2 $$ k = None", "have \"\\<dots> =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2)\""], ["proof (prove)\nusing this:\n  m\\<^sub>1 $$ k = None\n  m\\<^sub>2 $$ k = None\n\ngoal (1 subgoal):\n 1. fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n    fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2)", "by (smt fmdom'_fmupd fmfilter_cong insert_iff option.distinct(1))"], ["proof (state)\nthis:\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n  fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2)\n\ngoal (1 subgoal):\n 1. fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1(k $$:= v) ++\\<^sub>f\n    fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f\n    {k $$:= v}", "also"], ["proof (state)\nthis:\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n  fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2)\n\ngoal (1 subgoal):\n 1. fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1(k $$:= v) ++\\<^sub>f\n    fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f\n    {k $$:= v}", "from assms"], ["proof (chain)\npicking this:\n  m\\<^sub>1 $$ k = None\n  m\\<^sub>2 $$ k = None", "have \"\\<dots> = fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2)\""], ["proof (prove)\nusing this:\n  m\\<^sub>1 $$ k = None\n  m\\<^sub>2 $$ k = None\n\ngoal (1 subgoal):\n 1. fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2)", "using inter_plus_addition_notin"], ["proof (prove)\nusing this:\n  m\\<^sub>1 $$ k = None\n  m\\<^sub>2 $$ k = None\n  \\<lbrakk>?m\\<^sub>1 $$ ?k = None; ?m\\<^sub>2 $$ ?k = None\\<rbrakk>\n  \\<Longrightarrow> ?m\\<^sub>1(?k $$:= ?v) \\<inter>\\<^sub>+ ?m\\<^sub>2 =\n                    ?m\\<^sub>1 \\<inter>\\<^sub>+ ?m\\<^sub>2\n\ngoal (1 subgoal):\n 1. fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2)", "by metis"], ["proof (state)\nthis:\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n  fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n  fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2)\n\ngoal (1 subgoal):\n 1. fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1(k $$:= v) ++\\<^sub>f\n    fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f\n    {k $$:= v}", "also"], ["proof (state)\nthis:\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n  fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n  fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2)\n\ngoal (1 subgoal):\n 1. fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1(k $$:= v) ++\\<^sub>f\n    fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f\n    {k $$:= v}", "from assms"], ["proof (chain)\npicking this:\n  m\\<^sub>1 $$ k = None\n  m\\<^sub>2 $$ k = None", "have \"\\<dots> = fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f {k $$:= v}\""], ["proof (prove)\nusing this:\n  m\\<^sub>1 $$ k = None\n  m\\<^sub>2 $$ k = None\n\ngoal (1 subgoal):\n 1. fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f\n    {k $$:= v}", "using fmap_singleton_comm"], ["proof (prove)\nusing this:\n  m\\<^sub>1 $$ k = None\n  m\\<^sub>2 $$ k = None\n  ?m $$ ?k = None \\<Longrightarrow>\n  ?m ++\\<^sub>f {?k $$:= ?v} = {?k $$:= ?v} ++\\<^sub>f ?m\n\ngoal (1 subgoal):\n 1. fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f\n    {k $$:= v}", "by (smt fmadd_assoc fmfilter_fmmap_keys fmlookup_filter fmlookup_fmmap_keys)"], ["proof (state)\nthis:\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f {k $$:= v} ++\\<^sub>f\n  fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) =\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f\n  fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f\n  {k $$:= v}\n\ngoal (1 subgoal):\n 1. fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1(k $$:= v) ++\\<^sub>f\n    fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f\n    {k $$:= v}", "finally"], ["proof (chain)\npicking this:\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1(k $$:= v) ++\\<^sub>f\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f\n  fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f\n  {k $$:= v}", "show ?thesis"], ["proof (prove)\nusing this:\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1(k $$:= v) ++\\<^sub>f\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f\n  fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f\n  {k $$:= v}\n\ngoal (1 subgoal):\n 1. fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1(k $$:= v) ++\\<^sub>f\n    fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n    fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f\n    fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n    (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f\n    {k $$:= v}", "."], ["proof (state)\nthis:\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1(k $$:= v) ++\\<^sub>f\n  fmdom' (m\\<^sub>1(k $$:= v)) \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1(k $$:= v) \\<inter>\\<^sub>+ m\\<^sub>2) =\n  fmdom' m\\<^sub>2 \\<lhd>/ m\\<^sub>1 ++\\<^sub>f\n  fmdom' m\\<^sub>1 \\<lhd>/ m\\<^sub>2 ++\\<^sub>f\n  (m\\<^sub>1 \\<inter>\\<^sub>+ m\\<^sub>2) ++\\<^sub>f\n  {k $$:= v}\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}