{"file_name": "/home/qj213/afp-2021-10-22/thys/Ribbon_Proofs/Proofchain.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Ribbon_Proofs", "problem_names": ["lemma len_comlist_chainlen:\n  \"length (comlist \\<Pi>) = chainlen \\<Pi>\"", "lemma snds_of_triples_form_comlist:\n  fixes \\<Pi> i\n  shows \"i < chainlen \\<Pi> \\<Longrightarrow> snd3 (nthtriple \\<Pi> i) = (comlist \\<Pi>)!i\"", "lemma chain_all_mono [mono]:\n  \"x \\<le> y \\<Longrightarrow> chain_all x \\<le> chain_all y\"", "lemma chain_all_nthtriple:\n  \"(chain_all \\<phi> \\<Pi>) = (\\<forall>i < chainlen \\<Pi>. \\<phi> (nthtriple \\<Pi> i))\"", "lemma chainmap_preserves_length: \n  \"chainlen (chainmap f g \\<Pi>) = chainlen \\<Pi>\"", "lemma pre_chainmap:\n  \"pre (chainmap f g \\<Pi>) = f (pre \\<Pi>)\"", "lemma post_chainmap:\n  \"post (chainmap f g \\<Pi>) = f (post \\<Pi>)\"", "lemma nthtriple_chainmap: \n  assumes \"i < chainlen \\<Pi>\"\n  shows \"nthtriple (chainmap f g \\<Pi>) i \n    = (\\<lambda>t. (f (fst3 t), g (snd3 t), f (thd3 t))) (nthtriple \\<Pi> i)\"", "lemma len_snoc:\n  fixes \\<Pi> x P\n  shows \"chainlen (cSnoc \\<Pi> x P) = 1 + (chainlen \\<Pi>)\"", "lemma pre_snoc: \n  \"pre (cSnoc \\<Pi> x P) = pre \\<Pi>\"", "lemma post_snoc:\n  \"post (cSnoc \\<Pi> x P) = P\"", "lemma comlist_snoc:\n  \"comlist (cSnoc \\<Pi> x p) = comlist \\<Pi> @ [x]\""], "translations": [["", "lemma len_comlist_chainlen:\n  \"length (comlist \\<Pi>) = chainlen \\<Pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (comlist \\<Pi>) = chainlen \\<Pi>", "by (induct \\<Pi>, auto)"], ["", "subsection \\<open>Extracting triples from chains\\<close>"], ["", "text \\<open>@{term \"nthtriple \\<Pi> n\"} extracts the @{term n}th triple of @{term \\<Pi>},\n  counting from 0. The function is well-defined when @{term \"chainlen \\<Pi> > n\"}. \n\\<close>"], ["", "fun\n  nthtriple :: \"('a,'c) chain \\<Rightarrow> nat \\<Rightarrow> ('a * 'c * 'a)\"\nwhere\n  \"nthtriple (\\<lbrace> P \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>) 0 = (P, x, pre \\<Pi>)\"\n| \"nthtriple (\\<lbrace> P \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>) (Suc n) = nthtriple \\<Pi> n\""], ["", "text \\<open>The list of middle components of @{term \\<Pi>}'s triples is the list of\n   @{term \\<Pi>}'s commands.\\<close>"], ["", "lemma snds_of_triples_form_comlist:\n  fixes \\<Pi> i\n  shows \"i < chainlen \\<Pi> \\<Longrightarrow> snd3 (nthtriple \\<Pi> i) = (comlist \\<Pi>)!i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < chainlen \\<Pi> \\<Longrightarrow>\n    snd3 (nthtriple \\<Pi> i) = comlist \\<Pi> ! i", "apply (induct \\<Pi> arbitrary: i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x i.\n       i < chainlen \\<lbrace> x \\<rbrace> \\<Longrightarrow>\n       snd3 (nthtriple \\<lbrace> x \\<rbrace> i) =\n       comlist \\<lbrace> x \\<rbrace> ! i\n 2. \\<And>x1a x2 \\<Pi> i.\n       \\<lbrakk>\\<And>i.\n                   i < chainlen \\<Pi> \\<Longrightarrow>\n                   snd3 (nthtriple \\<Pi> i) = comlist \\<Pi> ! i;\n        i < chainlen\n             (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\\<rbrakk>\n       \\<Longrightarrow> snd3\n                          (nthtriple\n                            (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\n                            i) =\n                         comlist\n                          (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>) !\n                         i", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2 \\<Pi> i.\n       \\<lbrakk>\\<And>i.\n                   i < chainlen \\<Pi> \\<Longrightarrow>\n                   snd3 (nthtriple \\<Pi> i) = comlist \\<Pi> ! i;\n        i < chainlen\n             (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\\<rbrakk>\n       \\<Longrightarrow> snd3\n                          (nthtriple\n                            (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\n                            i) =\n                         comlist\n                          (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>) !\n                         i", "apply (case_tac i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2 \\<Pi> i.\n       \\<lbrakk>\\<And>i.\n                   i < chainlen \\<Pi> \\<Longrightarrow>\n                   snd3 (nthtriple \\<Pi> i) = comlist \\<Pi> ! i;\n        i < chainlen (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>);\n        i = 0\\<rbrakk>\n       \\<Longrightarrow> snd3\n                          (nthtriple\n                            (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\n                            i) =\n                         comlist\n                          (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>) !\n                         i\n 2. \\<And>x1a x2 \\<Pi> i nat.\n       \\<lbrakk>\\<And>i.\n                   i < chainlen \\<Pi> \\<Longrightarrow>\n                   snd3 (nthtriple \\<Pi> i) = comlist \\<Pi> ! i;\n        i < chainlen (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>);\n        i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> snd3\n                          (nthtriple\n                            (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\n                            i) =\n                         comlist\n                          (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>) !\n                         i", "apply (auto simp add: snd3_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Evaluating a predicate on each triple of a chain\\<close>"], ["", "text \\<open>@{term \"chain_all \\<phi>\"} holds of @{term \\<Pi>} iff @{term \\<phi>} holds for each\n  of @{term \\<Pi>}'s individual triples.\\<close>"], ["", "fun\n  chain_all :: \"(('a \\<times> 'c \\<times> 'a) \\<Rightarrow> bool) \\<Rightarrow> ('a,'c) chain \\<Rightarrow> bool\"\nwhere\n  \"chain_all \\<phi> \\<lbrace> \\<sigma> \\<rbrace> = True\"\n| \"chain_all \\<phi> (\\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>) = (\\<phi> (\\<sigma>,x,pre \\<Pi>) \\<and> chain_all \\<phi> \\<Pi>)\""], ["", "lemma chain_all_mono [mono]:\n  \"x \\<le> y \\<Longrightarrow> chain_all x \\<le> chain_all y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> chain_all x \\<le> chain_all y", "proof (intro le_funI le_boolI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>x \\<le> y; chain_all x xa\\<rbrakk>\n       \\<Longrightarrow> chain_all y xa", "fix f g :: \"('a \\<times> 'b \\<times> 'a) \\<Rightarrow> bool\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>x \\<le> y; chain_all x xa\\<rbrakk>\n       \\<Longrightarrow> chain_all y xa", "fix \\<Pi> :: \"('a, 'b) chain\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>x \\<le> y; chain_all x xa\\<rbrakk>\n       \\<Longrightarrow> chain_all y xa", "assume \"f \\<le> g\""], ["proof (state)\nthis:\n  f \\<le> g\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>x \\<le> y; chain_all x xa\\<rbrakk>\n       \\<Longrightarrow> chain_all y xa", "assume \"chain_all f \\<Pi>\""], ["proof (state)\nthis:\n  chain_all f \\<Pi>\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>x \\<le> y; chain_all x xa\\<rbrakk>\n       \\<Longrightarrow> chain_all y xa", "thus \"chain_all g \\<Pi>\""], ["proof (prove)\nusing this:\n  chain_all f \\<Pi>\n\ngoal (1 subgoal):\n 1. chain_all g \\<Pi>", "apply (induct \\<Pi>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       chain_all f \\<lbrace> x \\<rbrace> \\<Longrightarrow>\n       chain_all g \\<lbrace> x \\<rbrace>\n 2. \\<And>x1a x2 \\<Pi>.\n       \\<lbrakk>chain_all f \\<Pi> \\<Longrightarrow> chain_all g \\<Pi>;\n        chain_all f\n         (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\\<rbrakk>\n       \\<Longrightarrow> chain_all g\n                          (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2 \\<Pi>.\n       \\<lbrakk>chain_all f \\<Pi> \\<Longrightarrow> chain_all g \\<Pi>;\n        chain_all f\n         (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\\<rbrakk>\n       \\<Longrightarrow> chain_all g\n                          (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)", "apply (metis \\<open>f \\<le> g\\<close> chain_all.simps(2) predicate1D)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  chain_all g \\<Pi>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma chain_all_nthtriple:\n  \"(chain_all \\<phi> \\<Pi>) = (\\<forall>i < chainlen \\<Pi>. \\<phi> (nthtriple \\<Pi> i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain_all \\<phi> \\<Pi> =\n    (\\<forall>i<chainlen \\<Pi>. \\<phi> (nthtriple \\<Pi> i))", "proof (intro iffI allI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>chain_all \\<phi> \\<Pi>; i < chainlen \\<Pi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> i)\n 2. \\<forall>i<chainlen \\<Pi>. \\<phi> (nthtriple \\<Pi> i) \\<Longrightarrow>\n    chain_all \\<phi> \\<Pi>", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>chain_all \\<phi> \\<Pi>; i < chainlen \\<Pi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> i)\n 2. \\<forall>i<chainlen \\<Pi>. \\<phi> (nthtriple \\<Pi> i) \\<Longrightarrow>\n    chain_all \\<phi> \\<Pi>", "assume \"chain_all \\<phi> \\<Pi>\" and \"i < chainlen \\<Pi>\""], ["proof (state)\nthis:\n  chain_all \\<phi> \\<Pi>\n  i < chainlen \\<Pi>\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>chain_all \\<phi> \\<Pi>; i < chainlen \\<Pi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> i)\n 2. \\<forall>i<chainlen \\<Pi>. \\<phi> (nthtriple \\<Pi> i) \\<Longrightarrow>\n    chain_all \\<phi> \\<Pi>", "thus \"\\<phi> (nthtriple \\<Pi> i)\""], ["proof (prove)\nusing this:\n  chain_all \\<phi> \\<Pi>\n  i < chainlen \\<Pi>\n\ngoal (1 subgoal):\n 1. \\<phi> (nthtriple \\<Pi> i)", "proof (induct i arbitrary: \\<Pi>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Pi>.\n       \\<lbrakk>chain_all \\<phi> \\<Pi>; 0 < chainlen \\<Pi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> 0)\n 2. \\<And>i \\<Pi>.\n       \\<lbrakk>\\<And>\\<Pi>.\n                   \\<lbrakk>chain_all \\<phi> \\<Pi>;\n                    i < chainlen \\<Pi>\\<rbrakk>\n                   \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> i);\n        chain_all \\<phi> \\<Pi>; Suc i < chainlen \\<Pi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> (Suc i))", "case 0"], ["proof (state)\nthis:\n  chain_all \\<phi> \\<Pi>\n  0 < chainlen \\<Pi>\n\ngoal (2 subgoals):\n 1. \\<And>\\<Pi>.\n       \\<lbrakk>chain_all \\<phi> \\<Pi>; 0 < chainlen \\<Pi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> 0)\n 2. \\<And>i \\<Pi>.\n       \\<lbrakk>\\<And>\\<Pi>.\n                   \\<lbrakk>chain_all \\<phi> \\<Pi>;\n                    i < chainlen \\<Pi>\\<rbrakk>\n                   \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> i);\n        chain_all \\<phi> \\<Pi>; Suc i < chainlen \\<Pi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> (Suc i))", "then"], ["proof (chain)\npicking this:\n  chain_all \\<phi> \\<Pi>\n  0 < chainlen \\<Pi>", "obtain \\<sigma> x \\<Pi>' where \\<Pi>_def: \"\\<Pi> = \\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>'\""], ["proof (prove)\nusing this:\n  chain_all \\<phi> \\<Pi>\n  0 < chainlen \\<Pi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma> x \\<Pi>''.\n        \\<Pi> =\n        \\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis chain.exhaust chainlen.simps(1) less_nat_zero_code)"], ["proof (state)\nthis:\n  \\<Pi> = \\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>'\n\ngoal (2 subgoals):\n 1. \\<And>\\<Pi>.\n       \\<lbrakk>chain_all \\<phi> \\<Pi>; 0 < chainlen \\<Pi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> 0)\n 2. \\<And>i \\<Pi>.\n       \\<lbrakk>\\<And>\\<Pi>.\n                   \\<lbrakk>chain_all \\<phi> \\<Pi>;\n                    i < chainlen \\<Pi>\\<rbrakk>\n                   \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> i);\n        chain_all \\<phi> \\<Pi>; Suc i < chainlen \\<Pi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> (Suc i))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> (nthtriple \\<Pi> 0)", "by (insert \"0.prems\"(1), unfold \\<Pi>_def, auto)"], ["proof (state)\nthis:\n  \\<phi> (nthtriple \\<Pi> 0)\n\ngoal (1 subgoal):\n 1. \\<And>i \\<Pi>.\n       \\<lbrakk>\\<And>\\<Pi>.\n                   \\<lbrakk>chain_all \\<phi> \\<Pi>;\n                    i < chainlen \\<Pi>\\<rbrakk>\n                   \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> i);\n        chain_all \\<phi> \\<Pi>; Suc i < chainlen \\<Pi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> (Suc i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i \\<Pi>.\n       \\<lbrakk>\\<And>\\<Pi>.\n                   \\<lbrakk>chain_all \\<phi> \\<Pi>;\n                    i < chainlen \\<Pi>\\<rbrakk>\n                   \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> i);\n        chain_all \\<phi> \\<Pi>; Suc i < chainlen \\<Pi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> (Suc i))", "case (Suc i)"], ["proof (state)\nthis:\n  \\<lbrakk>chain_all \\<phi> ?\\<Pi>; i < chainlen ?\\<Pi>\\<rbrakk>\n  \\<Longrightarrow> \\<phi> (nthtriple ?\\<Pi> i)\n  chain_all \\<phi> \\<Pi>\n  Suc i < chainlen \\<Pi>\n\ngoal (1 subgoal):\n 1. \\<And>i \\<Pi>.\n       \\<lbrakk>\\<And>\\<Pi>.\n                   \\<lbrakk>chain_all \\<phi> \\<Pi>;\n                    i < chainlen \\<Pi>\\<rbrakk>\n                   \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> i);\n        chain_all \\<phi> \\<Pi>; Suc i < chainlen \\<Pi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> (Suc i))", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>chain_all \\<phi> ?\\<Pi>; i < chainlen ?\\<Pi>\\<rbrakk>\n  \\<Longrightarrow> \\<phi> (nthtriple ?\\<Pi> i)\n  chain_all \\<phi> \\<Pi>\n  Suc i < chainlen \\<Pi>", "obtain \\<sigma> x \\<Pi>' where \\<Pi>_def: \"\\<Pi> = \\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>chain_all \\<phi> ?\\<Pi>; i < chainlen ?\\<Pi>\\<rbrakk>\n  \\<Longrightarrow> \\<phi> (nthtriple ?\\<Pi> i)\n  chain_all \\<phi> \\<Pi>\n  Suc i < chainlen \\<Pi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma> x \\<Pi>''.\n        \\<Pi> =\n        \\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis chain.exhaust chainlen.simps(1) less_nat_zero_code)"], ["proof (state)\nthis:\n  \\<Pi> = \\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>'\n\ngoal (1 subgoal):\n 1. \\<And>i \\<Pi>.\n       \\<lbrakk>\\<And>\\<Pi>.\n                   \\<lbrakk>chain_all \\<phi> \\<Pi>;\n                    i < chainlen \\<Pi>\\<rbrakk>\n                   \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> i);\n        chain_all \\<phi> \\<Pi>; Suc i < chainlen \\<Pi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> (Suc i))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> (nthtriple \\<Pi> (Suc i))", "apply (unfold \\<Pi>_def nthtriple.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> (nthtriple \\<Pi>' i)", "apply (intro Suc.hyps, insert Suc.prems, auto simp add: \\<Pi>_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<phi> (nthtriple \\<Pi> (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<phi> (nthtriple \\<Pi> i)\n\ngoal (1 subgoal):\n 1. \\<forall>i<chainlen \\<Pi>. \\<phi> (nthtriple \\<Pi> i) \\<Longrightarrow>\n    chain_all \\<phi> \\<Pi>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i<chainlen \\<Pi>. \\<phi> (nthtriple \\<Pi> i) \\<Longrightarrow>\n    chain_all \\<phi> \\<Pi>", "assume \"\\<forall>i<chainlen \\<Pi>. \\<phi> (nthtriple \\<Pi> i)\""], ["proof (state)\nthis:\n  \\<forall>i<chainlen \\<Pi>. \\<phi> (nthtriple \\<Pi> i)\n\ngoal (1 subgoal):\n 1. \\<forall>i<chainlen \\<Pi>. \\<phi> (nthtriple \\<Pi> i) \\<Longrightarrow>\n    chain_all \\<phi> \\<Pi>", "hence \"\\<And>i. i < chainlen \\<Pi> \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> i)\""], ["proof (prove)\nusing this:\n  \\<forall>i<chainlen \\<Pi>. \\<phi> (nthtriple \\<Pi> i)\n\ngoal (1 subgoal):\n 1. \\<And>i. i < chainlen \\<Pi> \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> i)", "by auto"], ["proof (state)\nthis:\n  ?i < chainlen \\<Pi> \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> ?i)\n\ngoal (1 subgoal):\n 1. \\<forall>i<chainlen \\<Pi>. \\<phi> (nthtriple \\<Pi> i) \\<Longrightarrow>\n    chain_all \\<phi> \\<Pi>", "thus \"chain_all \\<phi> \\<Pi>\""], ["proof (prove)\nusing this:\n  ?i < chainlen \\<Pi> \\<Longrightarrow> \\<phi> (nthtriple \\<Pi> ?i)\n\ngoal (1 subgoal):\n 1. chain_all \\<phi> \\<Pi>", "proof (induct \\<Pi>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       (\\<And>i.\n           i < chainlen \\<lbrace> x \\<rbrace> \\<Longrightarrow>\n           \\<phi> (nthtriple \\<lbrace> x \\<rbrace> i)) \\<Longrightarrow>\n       chain_all \\<phi> \\<lbrace> x \\<rbrace>\n 2. \\<And>x1a x2 \\<Pi>.\n       \\<lbrakk>(\\<And>i.\n                    i < chainlen \\<Pi> \\<Longrightarrow>\n                    \\<phi> (nthtriple \\<Pi> i)) \\<Longrightarrow>\n                chain_all \\<phi> \\<Pi>;\n        \\<And>i.\n           i < chainlen\n                (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>) \\<Longrightarrow>\n           \\<phi>\n            (nthtriple (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\n              i)\\<rbrakk>\n       \\<Longrightarrow> chain_all \\<phi>\n                          (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)", "case (cCons \\<sigma> x \\<Pi>')"], ["proof (state)\nthis:\n  (\\<And>i.\n      i < chainlen \\<Pi>' \\<Longrightarrow>\n      \\<phi> (nthtriple \\<Pi>' i)) \\<Longrightarrow>\n  chain_all \\<phi> \\<Pi>'\n  ?i < chainlen\n        (\\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>') \\<Longrightarrow>\n  \\<phi>\n   (nthtriple (\\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>') ?i)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       (\\<And>i.\n           i < chainlen \\<lbrace> x \\<rbrace> \\<Longrightarrow>\n           \\<phi> (nthtriple \\<lbrace> x \\<rbrace> i)) \\<Longrightarrow>\n       chain_all \\<phi> \\<lbrace> x \\<rbrace>\n 2. \\<And>x1a x2 \\<Pi>.\n       \\<lbrakk>(\\<And>i.\n                    i < chainlen \\<Pi> \\<Longrightarrow>\n                    \\<phi> (nthtriple \\<Pi> i)) \\<Longrightarrow>\n                chain_all \\<phi> \\<Pi>;\n        \\<And>i.\n           i < chainlen\n                (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>) \\<Longrightarrow>\n           \\<phi>\n            (nthtriple (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\n              i)\\<rbrakk>\n       \\<Longrightarrow> chain_all \\<phi>\n                          (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. chain_all \\<phi> (\\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>')", "apply (simp, intro conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<phi> (\\<sigma>, x, pre \\<Pi>')\n 2. chain_all \\<phi> \\<Pi>'", "apply (subgoal_tac \"\\<phi> (nthtriple (\\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>') 0)\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<phi>\n     (nthtriple (\\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>') 0)\n 2. chain_all \\<phi> \\<Pi>'", "apply (intro cCons.prems, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. chain_all \\<phi> \\<Pi>'", "apply (intro cCons.hyps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < chainlen \\<Pi>' \\<Longrightarrow> \\<phi> (nthtriple \\<Pi>' i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < chainlen \\<Pi>' \\<Longrightarrow> \\<phi> (nthtriple \\<Pi>' i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < chainlen \\<Pi>' \\<Longrightarrow> \\<phi> (nthtriple \\<Pi>' i)", "assume \"i < chainlen \\<Pi>'\""], ["proof (state)\nthis:\n  i < chainlen \\<Pi>'\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < chainlen \\<Pi>' \\<Longrightarrow> \\<phi> (nthtriple \\<Pi>' i)", "hence \"Suc i < chainlen (\\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>')\""], ["proof (prove)\nusing this:\n  i < chainlen \\<Pi>'\n\ngoal (1 subgoal):\n 1. Suc i < chainlen (\\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>')", "by auto"], ["proof (state)\nthis:\n  Suc i < chainlen (\\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>')\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < chainlen \\<Pi>' \\<Longrightarrow> \\<phi> (nthtriple \\<Pi>' i)", "from cCons.prems[OF this]"], ["proof (chain)\npicking this:\n  \\<phi>\n   (nthtriple (\\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>')\n     (Suc i))", "show \"\\<phi> (nthtriple \\<Pi>' i)\""], ["proof (prove)\nusing this:\n  \\<phi>\n   (nthtriple (\\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>')\n     (Suc i))\n\ngoal (1 subgoal):\n 1. \\<phi> (nthtriple \\<Pi>' i)", "by auto"], ["proof (state)\nthis:\n  \\<phi> (nthtriple \\<Pi>' i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  chain_all \\<phi> (\\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>i.\n           i < chainlen \\<lbrace> x \\<rbrace> \\<Longrightarrow>\n           \\<phi> (nthtriple \\<lbrace> x \\<rbrace> i)) \\<Longrightarrow>\n       chain_all \\<phi> \\<lbrace> x \\<rbrace>", "qed(auto)"], ["proof (state)\nthis:\n  chain_all \\<phi> \\<Pi>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>A map function for proof chains\\<close>"], ["", "text \\<open>@{term \"chainmap f g \\<Pi>\"} maps @{term f} over each of @{term \\<Pi>}'s \n  assertions, and @{term g} over each of @{term \\<Pi>}'s commands.\\<close>"], ["", "fun\n  chainmap :: \"('a \\<Rightarrow> 'b) \\<Rightarrow> ('c \\<Rightarrow> 'd) \\<Rightarrow> ('a,'c) chain \\<Rightarrow> ('b,'d) chain\"\nwhere\n  \"chainmap f g \\<lbrace> P \\<rbrace> = \\<lbrace> f P \\<rbrace>\"\n| \"chainmap f g (\\<lbrace> P \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>) = \\<lbrace> f P \\<rbrace> \\<cdot> g x \\<cdot> chainmap f g \\<Pi>\""], ["", "text \\<open>Mapping over a chain preserves its length.\\<close>"], ["", "lemma chainmap_preserves_length: \n  \"chainlen (chainmap f g \\<Pi>) = chainlen \\<Pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chainlen (chainmap f g \\<Pi>) = chainlen \\<Pi>", "by (induct \\<Pi>, auto)"], ["", "lemma pre_chainmap:\n  \"pre (chainmap f g \\<Pi>) = f (pre \\<Pi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre (chainmap f g \\<Pi>) = f (pre \\<Pi>)", "by (induct \\<Pi>, auto)"], ["", "lemma post_chainmap:\n  \"post (chainmap f g \\<Pi>) = f (post \\<Pi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. post (chainmap f g \\<Pi>) = f (post \\<Pi>)", "by (induct \\<Pi>, auto)"], ["", "lemma nthtriple_chainmap: \n  assumes \"i < chainlen \\<Pi>\"\n  shows \"nthtriple (chainmap f g \\<Pi>) i \n    = (\\<lambda>t. (f (fst3 t), g (snd3 t), f (thd3 t))) (nthtriple \\<Pi> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nthtriple (chainmap f g \\<Pi>) i =\n    (f (fst3 (nthtriple \\<Pi> i)), g (snd3 (nthtriple \\<Pi> i)),\n     f (thd3 (nthtriple \\<Pi> i)))", "using assms"], ["proof (prove)\nusing this:\n  i < chainlen \\<Pi>\n\ngoal (1 subgoal):\n 1. nthtriple (chainmap f g \\<Pi>) i =\n    (f (fst3 (nthtriple \\<Pi> i)), g (snd3 (nthtriple \\<Pi> i)),\n     f (thd3 (nthtriple \\<Pi> i)))", "proof (induct \\<Pi> arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x i.\n       i < chainlen \\<lbrace> x \\<rbrace> \\<Longrightarrow>\n       nthtriple (chainmap f g \\<lbrace> x \\<rbrace>) i =\n       (f (fst3 (nthtriple \\<lbrace> x \\<rbrace> i)),\n        g (snd3 (nthtriple \\<lbrace> x \\<rbrace> i)),\n        f (thd3 (nthtriple \\<lbrace> x \\<rbrace> i)))\n 2. \\<And>x1a x2 \\<Pi> i.\n       \\<lbrakk>\\<And>i.\n                   i < chainlen \\<Pi> \\<Longrightarrow>\n                   nthtriple (chainmap f g \\<Pi>) i =\n                   (f (fst3 (nthtriple \\<Pi> i)),\n                    g (snd3 (nthtriple \\<Pi> i)),\n                    f (thd3 (nthtriple \\<Pi> i)));\n        i < chainlen\n             (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\\<rbrakk>\n       \\<Longrightarrow> nthtriple\n                          (chainmap f g\n                            (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>))\n                          i =\n                         (f (fst3\n                              (nthtriple\n                                (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\n                                i)),\n                          g (snd3\n                              (nthtriple\n                                (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\n                                i)),\n                          f (thd3\n                              (nthtriple\n                                (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\n                                i)))", "case cCons"], ["proof (state)\nthis:\n  ?i < chainlen \\<Pi>_ \\<Longrightarrow>\n  nthtriple (chainmap f g \\<Pi>_) ?i =\n  (f (fst3 (nthtriple \\<Pi>_ ?i)), g (snd3 (nthtriple \\<Pi>_ ?i)),\n   f (thd3 (nthtriple \\<Pi>_ ?i)))\n  i < chainlen (\\<lbrace> x1a_ \\<rbrace> \\<cdot> x2_ \\<cdot> \\<Pi>_)\n\ngoal (2 subgoals):\n 1. \\<And>x i.\n       i < chainlen \\<lbrace> x \\<rbrace> \\<Longrightarrow>\n       nthtriple (chainmap f g \\<lbrace> x \\<rbrace>) i =\n       (f (fst3 (nthtriple \\<lbrace> x \\<rbrace> i)),\n        g (snd3 (nthtriple \\<lbrace> x \\<rbrace> i)),\n        f (thd3 (nthtriple \\<lbrace> x \\<rbrace> i)))\n 2. \\<And>x1a x2 \\<Pi> i.\n       \\<lbrakk>\\<And>i.\n                   i < chainlen \\<Pi> \\<Longrightarrow>\n                   nthtriple (chainmap f g \\<Pi>) i =\n                   (f (fst3 (nthtriple \\<Pi> i)),\n                    g (snd3 (nthtriple \\<Pi> i)),\n                    f (thd3 (nthtriple \\<Pi> i)));\n        i < chainlen\n             (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\\<rbrakk>\n       \\<Longrightarrow> nthtriple\n                          (chainmap f g\n                            (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>))\n                          i =\n                         (f (fst3\n                              (nthtriple\n                                (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\n                                i)),\n                          g (snd3\n                              (nthtriple\n                                (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\n                                i)),\n                          f (thd3\n                              (nthtriple\n                                (\\<lbrace> x1a \\<rbrace> \\<cdot> x2 \\<cdot> \\<Pi>)\n                                i)))", "thus ?case"], ["proof (prove)\nusing this:\n  ?i < chainlen \\<Pi>_ \\<Longrightarrow>\n  nthtriple (chainmap f g \\<Pi>_) ?i =\n  (f (fst3 (nthtriple \\<Pi>_ ?i)), g (snd3 (nthtriple \\<Pi>_ ?i)),\n   f (thd3 (nthtriple \\<Pi>_ ?i)))\n  i < chainlen (\\<lbrace> x1a_ \\<rbrace> \\<cdot> x2_ \\<cdot> \\<Pi>_)\n\ngoal (1 subgoal):\n 1. nthtriple\n     (chainmap f g (\\<lbrace> x1a_ \\<rbrace> \\<cdot> x2_ \\<cdot> \\<Pi>_))\n     i =\n    (f (fst3\n         (nthtriple (\\<lbrace> x1a_ \\<rbrace> \\<cdot> x2_ \\<cdot> \\<Pi>_)\n           i)),\n     g (snd3\n         (nthtriple (\\<lbrace> x1a_ \\<rbrace> \\<cdot> x2_ \\<cdot> \\<Pi>_)\n           i)),\n     f (thd3\n         (nthtriple (\\<lbrace> x1a_ \\<rbrace> \\<cdot> x2_ \\<cdot> \\<Pi>_)\n           i)))", "by (induct i, auto simp add: pre_chainmap fst3_def snd3_def thd3_def)"], ["proof (state)\nthis:\n  nthtriple\n   (chainmap f g (\\<lbrace> x1a_ \\<rbrace> \\<cdot> x2_ \\<cdot> \\<Pi>_)) i =\n  (f (fst3\n       (nthtriple (\\<lbrace> x1a_ \\<rbrace> \\<cdot> x2_ \\<cdot> \\<Pi>_) i)),\n   g (snd3\n       (nthtriple (\\<lbrace> x1a_ \\<rbrace> \\<cdot> x2_ \\<cdot> \\<Pi>_) i)),\n   f (thd3\n       (nthtriple (\\<lbrace> x1a_ \\<rbrace> \\<cdot> x2_ \\<cdot> \\<Pi>_) i)))\n\ngoal (1 subgoal):\n 1. \\<And>x i.\n       i < chainlen \\<lbrace> x \\<rbrace> \\<Longrightarrow>\n       nthtriple (chainmap f g \\<lbrace> x \\<rbrace>) i =\n       (f (fst3 (nthtriple \\<lbrace> x \\<rbrace> i)),\n        g (snd3 (nthtriple \\<lbrace> x \\<rbrace> i)),\n        f (thd3 (nthtriple \\<lbrace> x \\<rbrace> i)))", "qed (auto)"], ["", "subsection \\<open>Extending a chain on its right-hand side\\<close>"], ["", "fun\n  cSnoc :: \"('a,'c) chain \\<Rightarrow> 'c \\<Rightarrow> 'a \\<Rightarrow> ('a,'c) chain\"\nwhere\n  \"cSnoc \\<lbrace> \\<sigma> \\<rbrace> y \\<tau> = \\<lbrace> \\<sigma> \\<rbrace> \\<cdot> y \\<cdot> \\<lbrace> \\<tau> \\<rbrace>\"\n| \"cSnoc (\\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>) y \\<tau> = \\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> (cSnoc \\<Pi> y \\<tau>)\""], ["", "lemma len_snoc:\n  fixes \\<Pi> x P\n  shows \"chainlen (cSnoc \\<Pi> x P) = 1 + (chainlen \\<Pi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chainlen (cSnoc \\<Pi> x P) = 1 + chainlen \\<Pi>", "by (induct \\<Pi>, auto)"], ["", "lemma pre_snoc: \n  \"pre (cSnoc \\<Pi> x P) = pre \\<Pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre (cSnoc \\<Pi> x P) = pre \\<Pi>", "by (induct \\<Pi>, auto)"], ["", "lemma post_snoc:\n  \"post (cSnoc \\<Pi> x P) = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. post (cSnoc \\<Pi> x P) = P", "by (induct \\<Pi>, auto)"], ["", "lemma comlist_snoc:\n  \"comlist (cSnoc \\<Pi> x p) = comlist \\<Pi> @ [x]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comlist (cSnoc \\<Pi> x p) = comlist \\<Pi> @ [x]", "by (induct \\<Pi>, auto)"], ["", "end"]]}