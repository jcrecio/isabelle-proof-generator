{"file_name": "/home/qj213/afp-2021-10-22/thys/Ribbon_Proofs/Ribbons_Graphical_Soundness.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Ribbon_Proofs", "problem_names": ["lemma mk_ps_chain_preserves_length:\n  fixes \\<pi> \\<Pi>\n  shows \"chainlen (mk_ps_chain \\<Pi> \\<pi>) = chainlen \\<Pi> + length \\<pi>\"", "lemma mk_ps_chain_cons:\n  \"mk_ps_chain \\<Pi> (x # \\<pi>) = mk_ps_chain (cSnoc \\<Pi> x (next_ps (post \\<Pi>) x)) \\<pi>\"", "lemma mk_ps_chain_snoc:\n  \"mk_ps_chain \\<Pi> (\\<pi> @ [x])\n    = cSnoc (mk_ps_chain \\<Pi> \\<pi>) x (next_ps (post (mk_ps_chain \\<Pi> \\<pi>)) x)\"", "lemma mk_ps_chain_ccons:\n  fixes \\<pi> \\<Pi>\n  shows \"mk_ps_chain (\\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>) \\<pi> = \\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> mk_ps_chain \\<Pi> \\<pi> \"", "lemma pre_mk_ps_chain:\n  fixes \\<Pi> \\<pi>\n  shows \"pre (mk_ps_chain \\<Pi> \\<pi>) = pre \\<Pi>\"", "lemma comlist_mk_ps_chain:\n  \"comlist (mk_ps_chain \\<Pi> \\<pi>) = comlist \\<Pi> @ \\<pi>\"", "lemma lins2D:\n  assumes \"\\<pi> \\<in> lins2 S G\"\n  shows \"distinct \\<pi>\"\n    and \"set \\<pi> = (fset G^V - fset S) <+> set G^E\"\n    and \"\\<And>i j v e. \\<lbrakk> i < length \\<pi> ; j < length \\<pi> ;\n      \\<pi>!i = Inl v ; \\<pi>!j = Inr e ; v |\\<in>| fst3 e \\<rbrakk> \\<Longrightarrow> i<j\"\n    and \"\\<And>i k w e. \\<lbrakk> j < length \\<pi> ; k < length \\<pi> ;\n      \\<pi>!j = Inr e ; \\<pi>!k = Inl w ; w |\\<in>| thd3 e \\<rbrakk> \\<Longrightarrow> j<k\"", "lemma lins2I:\n  assumes \"distinct \\<pi>\"\n    and \"set \\<pi> = (fset G^V - fset S) <+> set G^E\"\n    and \"\\<And>i j v e. \\<lbrakk> i < length \\<pi> ; j < length \\<pi> ;\n      \\<pi>!i = Inl v ; \\<pi>!j = Inr e ; v |\\<in>| fst3 e \\<rbrakk> \\<Longrightarrow> i<j\"\n    and \"\\<And>j k w e. \\<lbrakk> j < length \\<pi> ; k < length \\<pi> ;\n      \\<pi>!j = Inr e ; \\<pi>!k = Inl w ; w |\\<in>| thd3 e \\<rbrakk> \\<Longrightarrow> j<k\"\n  shows \"\\<pi> \\<in> lins2 S G\"", "lemma lins_is_lins2_with_empty_S:\n  \"lins G = lins2 {||} G\"", "lemma initial_ps_is_initial_ps2_with_empty_S:\n  \"initial_ps = initial_ps2 {||}\"", "lemma ps_chains_is_ps_chains2_with_empty_S:\n  \"ps_chains = ps_chains2 {||}\"", "lemma wf_ps_triple_nodeI:\n  assumes \"\\<exists>\\<sigma>. v |\\<notin>| fmdom \\<sigma>  \\<and>\n    \\<sigma>1 = [ {|v|} |=> Top ] ++\\<^sub>f \\<sigma> \\<and>\n    \\<sigma>2 = [ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>\"\n  shows \"wf_ps_triple (\\<sigma>1, Inl v, \\<sigma>2)\"", "lemma wf_ps_triple_edgeI:\n  assumes \"\\<exists>\\<sigma>. (fst3 e |\\<union>| thd3 e) |\\<inter>| fmdom \\<sigma> = {||}\n      \\<and> \\<sigma>1 = [ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>\n      \\<and> \\<sigma>2 = [ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>\"\n  shows \"wf_ps_triple (\\<sigma>1, Inr e, \\<sigma>2)\"", "lemma next_initial_ps2_vertex:\n  \"initial_ps2 ({|v|} |\\<union>| S) G\n  = initial_ps2 S G \\<ominus> {|v|} ++\\<^sub>f [ {|v|} |=> Bot ]\"", "lemma next_initial_ps2_edge:\n  assumes \"G = Graph V \\<Lambda> E\" and \"G' = Graph V' \\<Lambda> E'\" and\n    \"V' = V - fst3 e\" and \"E' = removeAll e E\" and \"e \\<in> set E\" and\n    \"fst3 e |\\<subseteq>| S\" and \"S |\\<subseteq>| initials G\" and \"wf_dia G\"\n  shows \"initial_ps2 (S - fst3 e) G' =\n  initial_ps2 S G \\<ominus> fst3 e ++\\<^sub>f [ thd3 e |=> Top ]\"", "lemma next_lins2_vertex:\n  assumes \"Inl v # \\<pi> \\<in> lins2 S G\"\n  assumes \"v |\\<notin>| S\"\n  shows \"\\<pi> \\<in> lins2 ({|v|} |\\<union>| S) G\"", "lemma next_lins2_edge:\n  assumes \"Inr e # \\<pi> \\<in> lins2 S (Graph V \\<Lambda> E)\"\n      and \"vs |\\<subseteq>| S\"\n      and \"e = (vs,c,ws)\"\n  shows \"\\<pi> \\<in> lins2 (S - vs) (Graph (V - vs) \\<Lambda> (removeAll e E))\"", "lemmas [simp] = fmember.rep_eq", "lemma wf_chains2:\n  fixes k\n  assumes \"S |\\<subseteq>| initials G\"\n      and \"wf_dia G\"\n      and \"\\<Pi> \\<in> ps_chains2 S G\"\n      and \"fcard G^V + length G^E = k + fcard S\"\n  shows \"wf_ps_chain \\<Pi> \\<and> (post \\<Pi> = [ terminals G |=> Bot ])\"", "lemma ps_chain_to_int_chain_simp:\n  \"ps_chain_to_int_chain (Graph V \\<Lambda> E) \\<Pi> =\n    chainmap (ps_to_int (Graph V \\<Lambda> E)) ((case_sum (Inl \\<circ> \\<Lambda>) (Inr \\<circ> snd3))) \\<Pi>\"", "lemma soundness_graphical_helper:\n  assumes no_var_interference: \"\\<And>c. wr_com c = {}\"\n  shows\n    \"(prov_dia G P Q \\<longrightarrow>\n      (P = top_dia G \\<and> Q = bot_dia G \\<and>\n      (\\<forall>c. coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q))))\n   \\<and> (prov_com C P Q \\<longrightarrow>\n      (\\<forall>c. coms_com C c \\<longrightarrow> prov_triple (asn P, c, asn Q)))\n   \\<and> (prov_ass A \\<longrightarrow>\n      (\\<forall>c. coms_ass A c \\<longrightarrow> prov_triple (asn (top_ass A), c, asn (bot_ass A))))\""], "translations": [["", "lemma mk_ps_chain_preserves_length:\n  fixes \\<pi> \\<Pi>\n  shows \"chainlen (mk_ps_chain \\<Pi> \\<pi>) = chainlen \\<Pi> + length \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chainlen (mk_ps_chain \\<Pi> \\<pi>) = chainlen \\<Pi> + length \\<pi>", "proof (induct \\<pi> arbitrary: \\<Pi>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Pi>.\n       chainlen (mk_ps_chain \\<Pi> []) = chainlen \\<Pi> + length []\n 2. \\<And>a \\<pi> \\<Pi>.\n       (\\<And>\\<Pi>.\n           chainlen (mk_ps_chain \\<Pi> \\<pi>) =\n           chainlen \\<Pi> + length \\<pi>) \\<Longrightarrow>\n       chainlen (mk_ps_chain \\<Pi> (a # \\<pi>)) =\n       chainlen \\<Pi> + length (a # \\<pi>)", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>\\<Pi>.\n       chainlen (mk_ps_chain \\<Pi> []) = chainlen \\<Pi> + length []\n 2. \\<And>a \\<pi> \\<Pi>.\n       (\\<And>\\<Pi>.\n           chainlen (mk_ps_chain \\<Pi> \\<pi>) =\n           chainlen \\<Pi> + length \\<pi>) \\<Longrightarrow>\n       chainlen (mk_ps_chain \\<Pi> (a # \\<pi>)) =\n       chainlen \\<Pi> + length (a # \\<pi>)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. chainlen (mk_ps_chain \\<Pi> []) = chainlen \\<Pi> + length []", "by (unfold mk_ps_chain_def, auto)"], ["proof (state)\nthis:\n  chainlen (mk_ps_chain \\<Pi> []) = chainlen \\<Pi> + length []\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi> \\<Pi>.\n       (\\<And>\\<Pi>.\n           chainlen (mk_ps_chain \\<Pi> \\<pi>) =\n           chainlen \\<Pi> + length \\<pi>) \\<Longrightarrow>\n       chainlen (mk_ps_chain \\<Pi> (a # \\<pi>)) =\n       chainlen \\<Pi> + length (a # \\<pi>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a \\<pi> \\<Pi>.\n       (\\<And>\\<Pi>.\n           chainlen (mk_ps_chain \\<Pi> \\<pi>) =\n           chainlen \\<Pi> + length \\<pi>) \\<Longrightarrow>\n       chainlen (mk_ps_chain \\<Pi> (a # \\<pi>)) =\n       chainlen \\<Pi> + length (a # \\<pi>)", "case (Cons x \\<pi>)"], ["proof (state)\nthis:\n  chainlen (mk_ps_chain ?\\<Pi> \\<pi>) = chainlen ?\\<Pi> + length \\<pi>\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi> \\<Pi>.\n       (\\<And>\\<Pi>.\n           chainlen (mk_ps_chain \\<Pi> \\<pi>) =\n           chainlen \\<Pi> + length \\<pi>) \\<Longrightarrow>\n       chainlen (mk_ps_chain \\<Pi> (a # \\<pi>)) =\n       chainlen \\<Pi> + length (a # \\<pi>)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. chainlen (mk_ps_chain \\<Pi> (x # \\<pi>)) =\n    chainlen \\<Pi> + length (x # \\<pi>)", "apply (unfold mk_ps_chain_def list.size foldl.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. chainlen\n     (foldl (\\<lambda>\\<Pi> x. cSnoc \\<Pi> x (next_ps (post \\<Pi>) x))\n       (cSnoc \\<Pi> x (next_ps (post \\<Pi>) x)) \\<pi>) =\n    chainlen \\<Pi> + (length \\<pi> + Suc 0)", "apply (fold mk_ps_chain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. chainlen (mk_ps_chain (cSnoc \\<Pi> x (next_ps (post \\<Pi>) x)) \\<pi>) =\n    chainlen \\<Pi> + (length \\<pi> + Suc 0)", "apply (auto simp add: Cons len_snoc)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  chainlen (mk_ps_chain \\<Pi> (x # \\<pi>)) =\n  chainlen \\<Pi> + length (x # \\<pi>)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Distributing @{term mk_ps_chain} over @{term Cons}.\\<close>"], ["", "lemma mk_ps_chain_cons:\n  \"mk_ps_chain \\<Pi> (x # \\<pi>) = mk_ps_chain (cSnoc \\<Pi> x (next_ps (post \\<Pi>) x)) \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_ps_chain \\<Pi> (x # \\<pi>) =\n    mk_ps_chain (cSnoc \\<Pi> x (next_ps (post \\<Pi>) x)) \\<pi>", "by (auto simp add: mk_ps_chain_def)"], ["", "text \\<open>Distributing @{term mk_ps_chain} over @{term snoc}.\\<close>"], ["", "lemma mk_ps_chain_snoc:\n  \"mk_ps_chain \\<Pi> (\\<pi> @ [x])\n    = cSnoc (mk_ps_chain \\<Pi> \\<pi>) x (next_ps (post (mk_ps_chain \\<Pi> \\<pi>)) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_ps_chain \\<Pi> (\\<pi> @ [x]) =\n    cSnoc (mk_ps_chain \\<Pi> \\<pi>) x\n     (next_ps (post (mk_ps_chain \\<Pi> \\<pi>)) x)", "by (unfold mk_ps_chain_def, auto)"], ["", "text \\<open>Distributing @{term mk_ps_chain} over @{term cCons}.\\<close>"], ["", "lemma mk_ps_chain_ccons:\n  fixes \\<pi> \\<Pi>\n  shows \"mk_ps_chain (\\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>) \\<pi> = \\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> mk_ps_chain \\<Pi> \\<pi> \""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_ps_chain (\\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> \\<Pi>)\n     \\<pi> =\n    \\<lbrace> \\<sigma> \\<rbrace> \\<cdot> x \\<cdot> mk_ps_chain \\<Pi> \\<pi>", "by (induct \\<pi> arbitrary: \\<Pi>, auto simp add: mk_ps_chain_cons mk_ps_chain_def)"], ["", "lemma pre_mk_ps_chain:\n  fixes \\<Pi> \\<pi>\n  shows \"pre (mk_ps_chain \\<Pi> \\<pi>) = pre \\<Pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre (mk_ps_chain \\<Pi> \\<pi>) = pre \\<Pi>", "apply (induct \\<pi> arbitrary: \\<Pi>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<Pi>. pre (mk_ps_chain \\<Pi> []) = pre \\<Pi>\n 2. \\<And>a \\<pi> \\<Pi>.\n       (\\<And>\\<Pi>.\n           pre (mk_ps_chain \\<Pi> \\<pi>) = pre \\<Pi>) \\<Longrightarrow>\n       pre (mk_ps_chain \\<Pi> (a # \\<pi>)) = pre \\<Pi>", "apply (auto simp add: mk_ps_chain_def mk_ps_chain_cons pre_snoc)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>A chain which is obtained from the list @{term \\<pi>}, has @{term \\<pi>}\n  as its list of commands. The following lemma states this in a slightly\n  more general form, that allows for part of the chain to have already\n  been processed.\\<close>"], ["", "lemma comlist_mk_ps_chain:\n  \"comlist (mk_ps_chain \\<Pi> \\<pi>) = comlist \\<Pi> @ \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comlist (mk_ps_chain \\<Pi> \\<pi>) = comlist \\<Pi> @ \\<pi>", "proof (induct \\<pi> arbitrary: \\<Pi>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Pi>. comlist (mk_ps_chain \\<Pi> []) = comlist \\<Pi> @ []\n 2. \\<And>a \\<pi> \\<Pi>.\n       (\\<And>\\<Pi>.\n           comlist (mk_ps_chain \\<Pi> \\<pi>) =\n           comlist \\<Pi> @ \\<pi>) \\<Longrightarrow>\n       comlist (mk_ps_chain \\<Pi> (a # \\<pi>)) = comlist \\<Pi> @ a # \\<pi>", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>\\<Pi>. comlist (mk_ps_chain \\<Pi> []) = comlist \\<Pi> @ []\n 2. \\<And>a \\<pi> \\<Pi>.\n       (\\<And>\\<Pi>.\n           comlist (mk_ps_chain \\<Pi> \\<pi>) =\n           comlist \\<Pi> @ \\<pi>) \\<Longrightarrow>\n       comlist (mk_ps_chain \\<Pi> (a # \\<pi>)) = comlist \\<Pi> @ a # \\<pi>", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. comlist (mk_ps_chain \\<Pi> []) = comlist \\<Pi> @ []", "by (auto simp add: mk_ps_chain_def)"], ["proof (state)\nthis:\n  comlist (mk_ps_chain \\<Pi> []) = comlist \\<Pi> @ []\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi> \\<Pi>.\n       (\\<And>\\<Pi>.\n           comlist (mk_ps_chain \\<Pi> \\<pi>) =\n           comlist \\<Pi> @ \\<pi>) \\<Longrightarrow>\n       comlist (mk_ps_chain \\<Pi> (a # \\<pi>)) = comlist \\<Pi> @ a # \\<pi>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a \\<pi> \\<Pi>.\n       (\\<And>\\<Pi>.\n           comlist (mk_ps_chain \\<Pi> \\<pi>) =\n           comlist \\<Pi> @ \\<pi>) \\<Longrightarrow>\n       comlist (mk_ps_chain \\<Pi> (a # \\<pi>)) = comlist \\<Pi> @ a # \\<pi>", "case (Cons x \\<pi>')"], ["proof (state)\nthis:\n  comlist (mk_ps_chain ?\\<Pi> \\<pi>') = comlist ?\\<Pi> @ \\<pi>'\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi> \\<Pi>.\n       (\\<And>\\<Pi>.\n           comlist (mk_ps_chain \\<Pi> \\<pi>) =\n           comlist \\<Pi> @ \\<pi>) \\<Longrightarrow>\n       comlist (mk_ps_chain \\<Pi> (a # \\<pi>)) = comlist \\<Pi> @ a # \\<pi>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. comlist (mk_ps_chain \\<Pi> (x # \\<pi>')) = comlist \\<Pi> @ x # \\<pi>'", "apply (unfold mk_ps_chain_def foldl.simps, fold mk_ps_chain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. comlist (mk_ps_chain (cSnoc \\<Pi> x (next_ps (post \\<Pi>) x)) \\<pi>') =\n    comlist \\<Pi> @ x # \\<pi>'", "apply (auto simp add: Cons comlist_snoc)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  comlist (mk_ps_chain \\<Pi> (x # \\<pi>')) = comlist \\<Pi> @ x # \\<pi>'\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>In order to perform induction over our diagrams, we shall wish\n  to obtain ``smaller'' diagrams, by removing nodes or edges. However, the\n  syntax and well-formedness constraints for diagrams are such that although\n  we can always remove an edge from a diagram, we cannot (in general) remove\n  a node -- the resultant diagram would not be a well-formed if an edge\n  connected to that node.\n\n  Hence, we consider ``partially-processed diagrams'' @{term \"(G,S)\"}, which\n  comprise a diagram @{term G} and a set @{term S} of nodes. @{term S} denotes\n  the subset of @{term G}'s initial nodes that have already been processed,\n  and can be thought of as having been removed from @{term G}.\n\n  We now give an updated version of the @{term \"lins G\"} function. This was\n  originally defined in @{theory Ribbon_Proofs.Ribbons_Graphical}. We provide an extra\n  parameter, @{term S}, which denotes the subset of @{term G}'s initial nodes\n  that shouldn't be included in the linear extensions.\\<close>"], ["", "definition lins2 :: \"[node fset, diagram] \\<Rightarrow> lin set\"\nwhere\n  \"lins2 S G \\<equiv> {\\<pi> :: lin .\n    (distinct \\<pi>)\n  \\<and> (set \\<pi> = (fset G^V - fset S) <+> set G^E)\n  \\<and> (\\<forall>i j v e. i < length \\<pi> \\<and> j < length \\<pi>\n    \\<and> \\<pi>!i = Inl v \\<and> \\<pi>!j = Inr e \\<and> v |\\<in>| fst3 e \\<longrightarrow> i<j)\n  \\<and> (\\<forall>j k w e. j < length \\<pi> \\<and> k < length \\<pi>\n    \\<and> \\<pi>!j = Inr e \\<and> \\<pi>!k = Inl w \\<and> w |\\<in>| thd3 e \\<longrightarrow> j<k) }\""], ["", "lemma lins2D:\n  assumes \"\\<pi> \\<in> lins2 S G\"\n  shows \"distinct \\<pi>\"\n    and \"set \\<pi> = (fset G^V - fset S) <+> set G^E\"\n    and \"\\<And>i j v e. \\<lbrakk> i < length \\<pi> ; j < length \\<pi> ;\n      \\<pi>!i = Inl v ; \\<pi>!j = Inr e ; v |\\<in>| fst3 e \\<rbrakk> \\<Longrightarrow> i<j\"\n    and \"\\<And>i k w e. \\<lbrakk> j < length \\<pi> ; k < length \\<pi> ;\n      \\<pi>!j = Inr e ; \\<pi>!k = Inl w ; w |\\<in>| thd3 e \\<rbrakk> \\<Longrightarrow> j<k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (distinct \\<pi> &&& set \\<pi> = (fset G^V - fset S) <+> set G^E) &&&\n    (\\<And>i j v e.\n        \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n         \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n        \\<Longrightarrow> i < j) &&&\n    (\\<And>i k w e.\n        \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n         \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n        \\<Longrightarrow> j < k)", "using assms"], ["proof (prove)\nusing this:\n  \\<pi> \\<in> lins2 S G\n\ngoal (1 subgoal):\n 1. (distinct \\<pi> &&& set \\<pi> = (fset G^V - fset S) <+> set G^E) &&&\n    (\\<And>i j v e.\n        \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n         \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n        \\<Longrightarrow> i < j) &&&\n    (\\<And>i k w e.\n        \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n         \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n        \\<Longrightarrow> j < k)", "apply (unfold lins2_def Collect_iff)"], ["proof (prove)\ngoal (4 subgoals):\n 1. distinct \\<pi> \\<and>\n    set \\<pi> = (fset G^V - fset S) <+> set G^E \\<and>\n    (\\<forall>i j v e.\n        i < length \\<pi> \\<and>\n        j < length \\<pi> \\<and>\n        \\<pi> ! i = Inl v \\<and>\n        \\<pi> ! j = Inr e \\<and> v |\\<in>| fst3 e \\<longrightarrow>\n        i < j) \\<and>\n    (\\<forall>j k w e.\n        j < length \\<pi> \\<and>\n        k < length \\<pi> \\<and>\n        \\<pi> ! j = Inr e \\<and>\n        \\<pi> ! k = Inl w \\<and> w |\\<in>| thd3 e \\<longrightarrow>\n        j < k) \\<Longrightarrow>\n    distinct \\<pi>\n 2. distinct \\<pi> \\<and>\n    set \\<pi> = (fset G^V - fset S) <+> set G^E \\<and>\n    (\\<forall>i j v e.\n        i < length \\<pi> \\<and>\n        j < length \\<pi> \\<and>\n        \\<pi> ! i = Inl v \\<and>\n        \\<pi> ! j = Inr e \\<and> v |\\<in>| fst3 e \\<longrightarrow>\n        i < j) \\<and>\n    (\\<forall>j k w e.\n        j < length \\<pi> \\<and>\n        k < length \\<pi> \\<and>\n        \\<pi> ! j = Inr e \\<and>\n        \\<pi> ! k = Inl w \\<and> w |\\<in>| thd3 e \\<longrightarrow>\n        j < k) \\<Longrightarrow>\n    set \\<pi> = (fset G^V - fset S) <+> set G^E\n 3. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e;\n        distinct \\<pi> \\<and>\n        set \\<pi> = (fset G^V - fset S) <+> set G^E \\<and>\n        (\\<forall>i j v e.\n            i < length \\<pi> \\<and>\n            j < length \\<pi> \\<and>\n            \\<pi> ! i = Inl v \\<and>\n            \\<pi> ! j = Inr e \\<and> v |\\<in>| fst3 e \\<longrightarrow>\n            i < j) \\<and>\n        (\\<forall>j k w e.\n            j < length \\<pi> \\<and>\n            k < length \\<pi> \\<and>\n            \\<pi> ! j = Inr e \\<and>\n            \\<pi> ! k = Inl w \\<and> w |\\<in>| thd3 e \\<longrightarrow>\n            j < k)\\<rbrakk>\n       \\<Longrightarrow> i < j\n 4. \\<And>i k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e;\n        distinct \\<pi> \\<and>\n        set \\<pi> = (fset G^V - fset S) <+> set G^E \\<and>\n        (\\<forall>i j v e.\n            i < length \\<pi> \\<and>\n            j < length \\<pi> \\<and>\n            \\<pi> ! i = Inl v \\<and>\n            \\<pi> ! j = Inr e \\<and> v |\\<in>| fst3 e \\<longrightarrow>\n            i < j) \\<and>\n        (\\<forall>j k w e.\n            j < length \\<pi> \\<and>\n            k < length \\<pi> \\<and>\n            \\<pi> ! j = Inr e \\<and>\n            \\<pi> ! k = Inl w \\<and> w |\\<in>| thd3 e \\<longrightarrow>\n            j < k)\\<rbrakk>\n       \\<Longrightarrow> j < k", "apply (elim conjE, assumption)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e;\n        distinct \\<pi> \\<and>\n        set \\<pi> = (fset G^V - fset S) <+> set G^E \\<and>\n        (\\<forall>i j v e.\n            i < length \\<pi> \\<and>\n            j < length \\<pi> \\<and>\n            \\<pi> ! i = Inl v \\<and>\n            \\<pi> ! j = Inr e \\<and> v |\\<in>| fst3 e \\<longrightarrow>\n            i < j) \\<and>\n        (\\<forall>j k w e.\n            j < length \\<pi> \\<and>\n            k < length \\<pi> \\<and>\n            \\<pi> ! j = Inr e \\<and>\n            \\<pi> ! k = Inl w \\<and> w |\\<in>| thd3 e \\<longrightarrow>\n            j < k)\\<rbrakk>\n       \\<Longrightarrow> i < j\n 2. \\<And>i k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e;\n        distinct \\<pi> \\<and>\n        set \\<pi> = (fset G^V - fset S) <+> set G^E \\<and>\n        (\\<forall>i j v e.\n            i < length \\<pi> \\<and>\n            j < length \\<pi> \\<and>\n            \\<pi> ! i = Inl v \\<and>\n            \\<pi> ! j = Inr e \\<and> v |\\<in>| fst3 e \\<longrightarrow>\n            i < j) \\<and>\n        (\\<forall>j k w e.\n            j < length \\<pi> \\<and>\n            k < length \\<pi> \\<and>\n            \\<pi> ! j = Inr e \\<and>\n            \\<pi> ! k = Inl w \\<and> w |\\<in>| thd3 e \\<longrightarrow>\n            j < k)\\<rbrakk>\n       \\<Longrightarrow> j < k", "apply blast+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma lins2I:\n  assumes \"distinct \\<pi>\"\n    and \"set \\<pi> = (fset G^V - fset S) <+> set G^E\"\n    and \"\\<And>i j v e. \\<lbrakk> i < length \\<pi> ; j < length \\<pi> ;\n      \\<pi>!i = Inl v ; \\<pi>!j = Inr e ; v |\\<in>| fst3 e \\<rbrakk> \\<Longrightarrow> i<j\"\n    and \"\\<And>j k w e. \\<lbrakk> j < length \\<pi> ; k < length \\<pi> ;\n      \\<pi>!j = Inr e ; \\<pi>!k = Inl w ; w |\\<in>| thd3 e \\<rbrakk> \\<Longrightarrow> j<k\"\n  shows \"\\<pi> \\<in> lins2 S G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<in> lins2 S G", "using assms"], ["proof (prove)\nusing this:\n  distinct \\<pi>\n  set \\<pi> = (fset G^V - fset S) <+> set G^E\n  \\<lbrakk>?i < length \\<pi>; ?j < length \\<pi>; \\<pi> ! ?i = Inl ?v;\n   \\<pi> ! ?j = Inr ?e; ?v |\\<in>| fst3 ?e\\<rbrakk>\n  \\<Longrightarrow> ?i < ?j\n  \\<lbrakk>?j < length \\<pi>; ?k < length \\<pi>; \\<pi> ! ?j = Inr ?e;\n   \\<pi> ! ?k = Inl ?w; ?w |\\<in>| thd3 ?e\\<rbrakk>\n  \\<Longrightarrow> ?j < ?k\n\ngoal (1 subgoal):\n 1. \\<pi> \\<in> lins2 S G", "apply (unfold lins2_def Collect_iff, intro conjI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>distinct \\<pi>; set \\<pi> = (fset G^V - fset S) <+> set G^E;\n     \\<And>i j v e.\n        \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n         \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n        \\<Longrightarrow> i < j;\n     \\<And>j k e w.\n        \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n         \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n        \\<Longrightarrow> j < k;\n     distinct \\<pi>; set \\<pi> = (fset G^V - fset S) <+> set G^E;\n     \\<And>i j v e.\n        \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n         \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n        \\<Longrightarrow> i < j;\n     \\<And>j k e w.\n        \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n         \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n        \\<Longrightarrow> j < k\\<rbrakk>\n    \\<Longrightarrow> distinct \\<pi>\n 2. \\<lbrakk>distinct \\<pi>; set \\<pi> = (fset G^V - fset S) <+> set G^E;\n     \\<And>i j v e.\n        \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n         \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n        \\<Longrightarrow> i < j;\n     \\<And>j k e w.\n        \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n         \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n        \\<Longrightarrow> j < k;\n     distinct \\<pi>; set \\<pi> = (fset G^V - fset S) <+> set G^E;\n     \\<And>i j v e.\n        \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n         \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n        \\<Longrightarrow> i < j;\n     \\<And>j k e w.\n        \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n         \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n        \\<Longrightarrow> j < k\\<rbrakk>\n    \\<Longrightarrow> set \\<pi> = (fset G^V - fset S) <+> set G^E\n 3. \\<lbrakk>distinct \\<pi>; set \\<pi> = (fset G^V - fset S) <+> set G^E;\n     \\<And>i j v e.\n        \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n         \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n        \\<Longrightarrow> i < j;\n     \\<And>j k e w.\n        \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n         \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n        \\<Longrightarrow> j < k;\n     distinct \\<pi>; set \\<pi> = (fset G^V - fset S) <+> set G^E;\n     \\<And>i j v e.\n        \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n         \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n        \\<Longrightarrow> i < j;\n     \\<And>j k e w.\n        \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n         \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n        \\<Longrightarrow> j < k\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i j v e.\n                         i < length \\<pi> \\<and>\n                         j < length \\<pi> \\<and>\n                         \\<pi> ! i = Inl v \\<and>\n                         \\<pi> ! j = Inr e \\<and>\n                         v |\\<in>| fst3 e \\<longrightarrow>\n                         i < j\n 4. \\<lbrakk>distinct \\<pi>; set \\<pi> = (fset G^V - fset S) <+> set G^E;\n     \\<And>i j v e.\n        \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n         \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n        \\<Longrightarrow> i < j;\n     \\<And>j k e w.\n        \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n         \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n        \\<Longrightarrow> j < k;\n     distinct \\<pi>; set \\<pi> = (fset G^V - fset S) <+> set G^E;\n     \\<And>i j v e.\n        \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n         \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n        \\<Longrightarrow> i < j;\n     \\<And>j k e w.\n        \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n         \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n        \\<Longrightarrow> j < k\\<rbrakk>\n    \\<Longrightarrow> \\<forall>j k w e.\n                         j < length \\<pi> \\<and>\n                         k < length \\<pi> \\<and>\n                         \\<pi> ! j = Inr e \\<and>\n                         \\<pi> ! k = Inl w \\<and>\n                         w |\\<in>| thd3 e \\<longrightarrow>\n                         j < k", "apply assumption+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct \\<pi>; set \\<pi> = (fset G^V - fset S) <+> set G^E;\n     \\<And>i j v e.\n        \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n         \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n        \\<Longrightarrow> i < j;\n     \\<And>j k e w.\n        \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n         \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n        \\<Longrightarrow> j < k;\n     distinct \\<pi>; set \\<pi> = (fset G^V - fset S) <+> set G^E;\n     \\<And>i j v e.\n        \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n         \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n        \\<Longrightarrow> i < j;\n     \\<And>j k e w.\n        \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n         \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n        \\<Longrightarrow> j < k\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i j v e.\n                         i < length \\<pi> \\<and>\n                         j < length \\<pi> \\<and>\n                         \\<pi> ! i = Inl v \\<and>\n                         \\<pi> ! j = Inr e \\<and>\n                         v |\\<in>| fst3 e \\<longrightarrow>\n                         i < j\n 2. \\<lbrakk>distinct \\<pi>; set \\<pi> = (fset G^V - fset S) <+> set G^E;\n     \\<And>i j v e.\n        \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n         \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n        \\<Longrightarrow> i < j;\n     \\<And>j k e w.\n        \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n         \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n        \\<Longrightarrow> j < k;\n     distinct \\<pi>; set \\<pi> = (fset G^V - fset S) <+> set G^E;\n     \\<And>i j v e.\n        \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n         \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n        \\<Longrightarrow> i < j;\n     \\<And>j k e w.\n        \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n         \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n        \\<Longrightarrow> j < k\\<rbrakk>\n    \\<Longrightarrow> \\<forall>j k w e.\n                         j < length \\<pi> \\<and>\n                         k < length \\<pi> \\<and>\n                         \\<pi> ! j = Inr e \\<and>\n                         \\<pi> ! k = Inl w \\<and>\n                         w |\\<in>| thd3 e \\<longrightarrow>\n                         j < k", "apply blast+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>When @{term S} is empty, the two definitions coincide.\\<close>"], ["", "lemma lins_is_lins2_with_empty_S:\n  \"lins G = lins2 {||} G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lins G = lins2 {||} G", "by (unfold lins_def lins2_def, auto)"], ["", "text \\<open>The first proofstate for a diagram @{term G} is obtained by\n  mapping each of its initial nodes to @{term Top}.\\<close>"], ["", "definition\n  initial_ps :: \"diagram \\<Rightarrow> proofstate\"\nwhere\n  \"initial_ps G \\<equiv> [ initials G |=> Top ]\""], ["", "text \\<open>The first proofstate for the partially-processed diagram @{term G} is\n  obtained by mapping each of its initial nodes to @{term Top}, except those\n  in @{term S}, which are mapped to @{term Bot}.\\<close>"], ["", "definition\n  initial_ps2 :: \"[node fset, diagram] \\<Rightarrow> proofstate\"\nwhere\n  \"initial_ps2 S G \\<equiv> [ initials G - S |=> Top ] ++\\<^sub>f [ S |=> Bot ]\""], ["", "text \\<open>When @{term S} is empty, the above two definitions coincide.\\<close>"], ["", "lemma initial_ps_is_initial_ps2_with_empty_S:\n  \"initial_ps = initial_ps2 {||}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initial_ps = initial_ps2 {||}", "apply (unfold fun_eq_iff, intro allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. initial_ps x = initial_ps2 {||} x", "apply (unfold initial_ps_def initial_ps2_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       [ initials x |=> Top ] =\n       [ initials x |-| {||} |=> Top ] ++\\<^sub>f [ {||} |=> Bot ]", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>The following function extracts the set of proofstate chains from\n   a diagram.\\<close>"], ["", "definition\n  ps_chains :: \"diagram \\<Rightarrow> ps_chain set\"\nwhere\n  \"ps_chains G \\<equiv> mk_ps_chain (cNil (initial_ps G)) ` lins G\""], ["", "text \\<open>The following function extracts the set of proofstate chains from\n   a partially-processed diagram. Nodes in @{term S} are excluded from\n   the resulting chains.\\<close>"], ["", "definition\n  ps_chains2 :: \"[node fset, diagram] \\<Rightarrow> ps_chain set\"\nwhere\n  \"ps_chains2 S G \\<equiv> mk_ps_chain (cNil (initial_ps2 S G)) ` lins2 S G\""], ["", "text \\<open>When @{term S} is empty, the above two definitions coincide.\\<close>"], ["", "lemma ps_chains_is_ps_chains2_with_empty_S:\n  \"ps_chains = ps_chains2 {||}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ps_chains = ps_chains2 {||}", "apply (unfold fun_eq_iff, intro allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. ps_chains x = ps_chains2 {||} x", "apply (unfold ps_chains_def ps_chains2_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       mk_ps_chain \\<lbrace> initial_ps x \\<rbrace> ` lins x =\n       mk_ps_chain \\<lbrace> initial_ps2 {||} x \\<rbrace> ` lins2 {||} x", "apply (fold initial_ps_is_initial_ps2_with_empty_S)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       mk_ps_chain \\<lbrace> initial_ps x \\<rbrace> ` lins x =\n       mk_ps_chain \\<lbrace> initial_ps x \\<rbrace> ` lins2 {||} x", "apply (fold lins_is_lins2_with_empty_S)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       mk_ps_chain \\<lbrace> initial_ps x \\<rbrace> ` lins x =\n       mk_ps_chain \\<lbrace> initial_ps x \\<rbrace> ` lins x", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>We now wish to describe proofstates chain that are well-formed. First,\n  let us say that @{term \"f ++\\<^sub>fdisjoint g\"} is defined, when @{term f} and\n  @{term g} have disjoint domains, as @{term \"f ++\\<^sub>f g\"}. Then, a well-formed\n  proofstate chain consists of triples of the form @{term \"(\\<sigma> ++\\<^sub>fdisjoint\n  [{| v |} |=> Top], Inl v, \\<sigma> ++\\<^sub>fdisjoint [{| v |} |=> Bot])\"}, where @{term v}\n  is a node, or of the form @{term \"(\\<sigma> ++\\<^sub>fdisjoint [{| vs |} |=> Bot], Inr e,\n  \\<sigma> ++\\<^sub>fdisjoint [{| ws |} |=> Top])\"}, where @{term e} is an edge with source\n  and target nodes @{term vs} and @{term ws} respectively.\n\n  The definition below describes a well-formed triple; we then lift this\n  to complete chains shortly.\\<close>"], ["", "definition\n  wf_ps_triple :: \"proofstate \\<times> (node + edge) \\<times> proofstate \\<Rightarrow> bool\"\nwhere\n  \"wf_ps_triple T = (case snd3 T of\n    Inl v \\<Rightarrow> (\\<exists>\\<sigma>. v |\\<notin>| fmdom \\<sigma>\n      \\<and> fst3 T = [ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>\n      \\<and> thd3 T = [ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>)\n  | Inr e \\<Rightarrow> (\\<exists>\\<sigma>. (fst3 e |\\<union>| thd3 e) |\\<inter>| fmdom \\<sigma> = {||}\n      \\<and> fst3 T = [ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>\n      \\<and> thd3 T = [ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>))\""], ["", "lemma wf_ps_triple_nodeI:\n  assumes \"\\<exists>\\<sigma>. v |\\<notin>| fmdom \\<sigma>  \\<and>\n    \\<sigma>1 = [ {|v|} |=> Top ] ++\\<^sub>f \\<sigma> \\<and>\n    \\<sigma>2 = [ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>\"\n  shows \"wf_ps_triple (\\<sigma>1, Inl v, \\<sigma>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_triple (\\<sigma>1, Inl v, \\<sigma>2)", "using assms"], ["proof (prove)\nusing this:\n  \\<exists>\\<sigma>.\n     v |\\<notin>| fmdom \\<sigma> \\<and>\n     \\<sigma>1 = [ {|v|} |=> Top ] ++\\<^sub>f \\<sigma> \\<and>\n     \\<sigma>2 = [ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>\n\ngoal (1 subgoal):\n 1. wf_ps_triple (\\<sigma>1, Inl v, \\<sigma>2)", "unfolding wf_ps_triple_def"], ["proof (prove)\nusing this:\n  \\<exists>\\<sigma>.\n     v |\\<notin>| fmdom \\<sigma> \\<and>\n     \\<sigma>1 = [ {|v|} |=> Top ] ++\\<^sub>f \\<sigma> \\<and>\n     \\<sigma>2 = [ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>\n\ngoal (1 subgoal):\n 1. case snd3 (\\<sigma>1, Inl v, \\<sigma>2) of\n    Inl va \\<Rightarrow>\n      \\<exists>\\<sigma>.\n         va |\\<notin>| fmdom \\<sigma> \\<and>\n         fst3 (\\<sigma>1, Inl v, \\<sigma>2) =\n         [ {|va|} |=> Top ] ++\\<^sub>f \\<sigma> \\<and>\n         thd3 (\\<sigma>1, Inl v, \\<sigma>2) =\n         [ {|va|} |=> Bot ] ++\\<^sub>f \\<sigma>\n    | Inr e \\<Rightarrow>\n        \\<exists>\\<sigma>.\n           fst3 e |\\<union>| thd3 e |\\<inter>| fmdom \\<sigma> = {||} \\<and>\n           fst3 (\\<sigma>1, Inl v, \\<sigma>2) =\n           [ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma> \\<and>\n           thd3 (\\<sigma>1, Inl v, \\<sigma>2) =\n           [ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>", "by (auto simp add: fst3_simp snd3_simp thd3_simp)"], ["", "lemma wf_ps_triple_edgeI:\n  assumes \"\\<exists>\\<sigma>. (fst3 e |\\<union>| thd3 e) |\\<inter>| fmdom \\<sigma> = {||}\n      \\<and> \\<sigma>1 = [ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>\n      \\<and> \\<sigma>2 = [ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>\"\n  shows \"wf_ps_triple (\\<sigma>1, Inr e, \\<sigma>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_triple (\\<sigma>1, Inr e, \\<sigma>2)", "using assms"], ["proof (prove)\nusing this:\n  \\<exists>\\<sigma>.\n     fst3 e |\\<union>| thd3 e |\\<inter>| fmdom \\<sigma> = {||} \\<and>\n     \\<sigma>1 = [ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma> \\<and>\n     \\<sigma>2 = [ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>\n\ngoal (1 subgoal):\n 1. wf_ps_triple (\\<sigma>1, Inr e, \\<sigma>2)", "unfolding wf_ps_triple_def"], ["proof (prove)\nusing this:\n  \\<exists>\\<sigma>.\n     fst3 e |\\<union>| thd3 e |\\<inter>| fmdom \\<sigma> = {||} \\<and>\n     \\<sigma>1 = [ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma> \\<and>\n     \\<sigma>2 = [ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>\n\ngoal (1 subgoal):\n 1. case snd3 (\\<sigma>1, Inr e, \\<sigma>2) of\n    Inl v \\<Rightarrow>\n      \\<exists>\\<sigma>.\n         v |\\<notin>| fmdom \\<sigma> \\<and>\n         fst3 (\\<sigma>1, Inr e, \\<sigma>2) =\n         [ {|v|} |=> Top ] ++\\<^sub>f \\<sigma> \\<and>\n         thd3 (\\<sigma>1, Inr e, \\<sigma>2) =\n         [ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>\n    | Inr ea \\<Rightarrow>\n        \\<exists>\\<sigma>.\n           fst3 ea |\\<union>| thd3 ea |\\<inter>| fmdom \\<sigma> =\n           {||} \\<and>\n           fst3 (\\<sigma>1, Inr e, \\<sigma>2) =\n           [ fst3 ea |=> Bot ] ++\\<^sub>f \\<sigma> \\<and>\n           thd3 (\\<sigma>1, Inr e, \\<sigma>2) =\n           [ thd3 ea |=> Top ] ++\\<^sub>f \\<sigma>", "by (auto simp add: fst3_simp snd3_simp thd3_simp)"], ["", "definition\n  wf_ps_chain :: \"ps_chain \\<Rightarrow> bool\"\nwhere\n  \"wf_ps_chain \\<equiv> chain_all wf_ps_triple\""], ["", "lemma next_initial_ps2_vertex:\n  \"initial_ps2 ({|v|} |\\<union>| S) G\n  = initial_ps2 S G \\<ominus> {|v|} ++\\<^sub>f [ {|v|} |=> Bot ]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initial_ps2 ({|v|} |\\<union>| S) G =\n    initial_ps2 S G \\<ominus> {|v|} ++\\<^sub>f [ {|v|} |=> Bot ]", "apply (unfold initial_ps2_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n    [ {|v|} |\\<union>| S |=> Bot ] =\n    ([ initials G |-| S |=> Top ] ++\\<^sub>f [ S |=> Bot ]) \\<ominus>\n    {|v|} ++\\<^sub>f\n    [ {|v|} |=> Bot ]", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G v S.\n       make_map (initials G |-| ({|v|} |\\<union>| S)) Top ++\n       make_map ({|v|} |\\<union>| S) Bot =\n       map_diff (make_map (initials G |-| S) Top ++ make_map S Bot) {|v|} ++\n       make_map {|v|} Bot", "apply (auto simp add: make_map_def map_diff_def map_add_def restrict_map_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma next_initial_ps2_edge:\n  assumes \"G = Graph V \\<Lambda> E\" and \"G' = Graph V' \\<Lambda> E'\" and\n    \"V' = V - fst3 e\" and \"E' = removeAll e E\" and \"e \\<in> set E\" and\n    \"fst3 e |\\<subseteq>| S\" and \"S |\\<subseteq>| initials G\" and \"wf_dia G\"\n  shows \"initial_ps2 (S - fst3 e) G' =\n  initial_ps2 S G \\<ominus> fst3 e ++\\<^sub>f [ thd3 e |=> Top ]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initial_ps2 (S |-| fst3 e) G' =\n    initial_ps2 S G \\<ominus> fst3 e ++\\<^sub>f [ thd3 e |=> Top ]", "proof (insert assms, unfold initial_ps2_def, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>G V \\<Lambda> E G' V' E' e S.\n       \\<lbrakk>G = Graph V \\<Lambda> E; G' = Graph V' \\<Lambda> E';\n        V' = V |-| fst3 e; E' = removeAll e E; e \\<in> set E;\n        fst3 e |\\<subseteq>| S; S |\\<subseteq>| initials G;\n        wf_dia G\\<rbrakk>\n       \\<Longrightarrow> make_map (initials G' |-| (S |-| fst3 e)) Top ++\n                         make_map (S |-| fst3 e) Bot =\n                         map_diff\n                          (make_map (initials G |-| S) Top ++\n                           make_map S Bot)\n                          (fst3 e) ++\n                         make_map (thd3 e) Top", "fix G V \\<Lambda> E G' V' E' e S"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>G V \\<Lambda> E G' V' E' e S.\n       \\<lbrakk>G = Graph V \\<Lambda> E; G' = Graph V' \\<Lambda> E';\n        V' = V |-| fst3 e; E' = removeAll e E; e \\<in> set E;\n        fst3 e |\\<subseteq>| S; S |\\<subseteq>| initials G;\n        wf_dia G\\<rbrakk>\n       \\<Longrightarrow> make_map (initials G' |-| (S |-| fst3 e)) Top ++\n                         make_map (S |-| fst3 e) Bot =\n                         map_diff\n                          (make_map (initials G |-| S) Top ++\n                           make_map S Bot)\n                          (fst3 e) ++\n                         make_map (thd3 e) Top", "assume G_def: \"G = Graph V \\<Lambda> E\" and G'_def: \"G' = Graph V' \\<Lambda> E'\" and\n    V'_def: \"V' = V - fst3 e\" and E'_def: \"E' = removeAll e E\" and\n    e_in_E: \"e \\<in> set E\" and fst_e_in_S: \"fst3 e |\\<subseteq>| S\" and\n    S_initials: \"S |\\<subseteq>| initials G\" and wf_G: \"wf_dia G\""], ["proof (state)\nthis:\n  G = Graph V \\<Lambda> E\n  G' = Graph V' \\<Lambda> E'\n  V' = V |-| fst3 e\n  E' = removeAll e E\n  e \\<in> set E\n  fst3 e |\\<subseteq>| S\n  S |\\<subseteq>| initials G\n  wf_dia G\n\ngoal (1 subgoal):\n 1. \\<And>G V \\<Lambda> E G' V' E' e S.\n       \\<lbrakk>G = Graph V \\<Lambda> E; G' = Graph V' \\<Lambda> E';\n        V' = V |-| fst3 e; E' = removeAll e E; e \\<in> set E;\n        fst3 e |\\<subseteq>| S; S |\\<subseteq>| initials G;\n        wf_dia G\\<rbrakk>\n       \\<Longrightarrow> make_map (initials G' |-| (S |-| fst3 e)) Top ++\n                         make_map (S |-| fst3 e) Bot =\n                         map_diff\n                          (make_map (initials G |-| S) Top ++\n                           make_map S Bot)\n                          (fst3 e) ++\n                         make_map (thd3 e) Top", "have \"thd3 e |\\<inter>| initials G = {||}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. thd3 e |\\<inter>| initials G = {||}", "by (auto simp add: initials_def G_def e_in_E)"], ["proof (state)\nthis:\n  thd3 e |\\<inter>| initials G = {||}\n\ngoal (1 subgoal):\n 1. \\<And>G V \\<Lambda> E G' V' E' e S.\n       \\<lbrakk>G = Graph V \\<Lambda> E; G' = Graph V' \\<Lambda> E';\n        V' = V |-| fst3 e; E' = removeAll e E; e \\<in> set E;\n        fst3 e |\\<subseteq>| S; S |\\<subseteq>| initials G;\n        wf_dia G\\<rbrakk>\n       \\<Longrightarrow> make_map (initials G' |-| (S |-| fst3 e)) Top ++\n                         make_map (S |-| fst3 e) Bot =\n                         map_diff\n                          (make_map (initials G |-| S) Top ++\n                           make_map S Bot)\n                          (fst3 e) ++\n                         make_map (thd3 e) Top", "show \"make_map (initials G' - (S - fst3 e)) Top ++ make_map (S - fst3 e) Bot\n    = map_diff (make_map (initials G - S) Top ++ make_map S Bot) (fst3 e)\n        ++ make_map (thd3 e) Top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. make_map (initials G' |-| (S |-| fst3 e)) Top ++\n    make_map (S |-| fst3 e) Bot =\n    map_diff (make_map (initials G |-| S) Top ++ make_map S Bot) (fst3 e) ++\n    make_map (thd3 e) Top", "apply (unfold make_map_def map_diff_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k.\n        if k \\<in> fset (initials G' |-| (S |-| fst3 e)) then Some Top\n        else None) ++\n    (\\<lambda>k. if k \\<in> fset (S |-| fst3 e) then Some Bot else None) =\n    ((\\<lambda>k.\n         if k \\<in> fset (initials G |-| S) then Some Top else None) ++\n     (\\<lambda>k. if k \\<in> fset S then Some Bot else None)) |`\n    (- fset (fst3 e)) ++\n    (\\<lambda>k. if k \\<in> fset (thd3 e) then Some Top else None)", "apply (unfold map_add_def restrict_map_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        case if x \\<in> fset (S |-| fst3 e) then Some Bot else None of\n        None \\<Rightarrow>\n          if x \\<in> fset (initials G' |-| (S |-| fst3 e)) then Some Top\n          else None\n        | Some x \\<Rightarrow> Some x) =\n    (\\<lambda>x.\n        case if x \\<in> fset (thd3 e) then Some Top else None of\n        None \\<Rightarrow>\n          if x \\<in> - fset (fst3 e)\n          then case if x \\<in> fset S then Some Bot else None of\n               None \\<Rightarrow>\n                 if x \\<in> fset (initials G |-| S) then Some Top else None\n               | Some x \\<Rightarrow> Some x\n          else None\n        | Some x \\<Rightarrow> Some x)", "apply (unfold minus_fset)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        case if x \\<in> fset S - fset (fst3 e) then Some Bot else None of\n        None \\<Rightarrow>\n          if x \\<in> fset (initials G') - (fset S - fset (fst3 e))\n          then Some Top else None\n        | Some x \\<Rightarrow> Some x) =\n    (\\<lambda>x.\n        case if x \\<in> fset (thd3 e) then Some Top else None of\n        None \\<Rightarrow>\n          if x \\<in> - fset (fst3 e)\n          then case if x \\<in> fset S then Some Bot else None of\n               None \\<Rightarrow>\n                 if x \\<in> fset (initials G) - fset S then Some Top\n                 else None\n               | Some x \\<Rightarrow> Some x\n          else None\n        | Some x \\<Rightarrow> Some x)", "apply (unfold fun_eq_iff initials_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (case if x \\<in> fset S - fset (fst3 e) then Some Bot else None of\n        None \\<Rightarrow>\n          if x \\<in> fset\n                      (ffilter\n                        (\\<lambda>v.\n                            \\<forall>e\\<in>set G'^E. v |\\<notin>| thd3 e)\n                        G'^V) -\n                     (fset S - fset (fst3 e))\n          then Some Top else None\n        | Some x \\<Rightarrow> Some x) =\n       (case if x \\<in> fset (thd3 e) then Some Top else None of\n        None \\<Rightarrow>\n          if x \\<in> - fset (fst3 e)\n          then case if x \\<in> fset S then Some Bot else None of\n               None \\<Rightarrow>\n                 if x \\<in> fset\n                             (ffilter\n                               (\\<lambda>v.\n                                   \\<forall>e\\<in>set G^E.\nv |\\<notin>| thd3 e)\n                               G^V) -\n                            fset S\n                 then Some Top else None\n               | Some x \\<Rightarrow> Some x\n          else None\n        | Some x \\<Rightarrow> Some x)", "apply (unfold G_def G'_def V'_def E'_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (case if x \\<in> fset S - fset (fst3 e) then Some Bot else None of\n        None \\<Rightarrow>\n          if x \\<in> fset\n                      (ffilter\n                        (\\<lambda>v.\n                            \\<forall>e\\<in>set\n      (Graph (V |-| fst3 e) \\<Lambda> (removeAll e E))^E.\n                               v |\\<notin>| thd3 e)\n                        (Graph (V |-| fst3 e) \\<Lambda>\n                          (removeAll e E))^V) -\n                     (fset S - fset (fst3 e))\n          then Some Top else None\n        | Some x \\<Rightarrow> Some x) =\n       (case if x \\<in> fset (thd3 e) then Some Top else None of\n        None \\<Rightarrow>\n          if x \\<in> - fset (fst3 e)\n          then case if x \\<in> fset S then Some Bot else None of\n               None \\<Rightarrow>\n                 if x \\<in> fset\n                             (ffilter\n                               (\\<lambda>v.\n                                   \\<forall>e\n      \\<in>set (Graph V \\<Lambda> E)^E.\nv |\\<notin>| thd3 e)\n                               (Graph V \\<Lambda> E)^V) -\n                            fset S\n                 then Some Top else None\n               | Some x \\<Rightarrow> Some x\n          else None\n        | Some x \\<Rightarrow> Some x)", "apply (unfold edges.simps vertices.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (case if x \\<in> fset S - fset (fst3 e) then Some Bot else None of\n        None \\<Rightarrow>\n          if x \\<in> fset\n                      (ffilter\n                        (\\<lambda>v.\n                            \\<forall>e\\<in>set (removeAll e E).\n                               v |\\<notin>| thd3 e)\n                        (V |-| fst3 e)) -\n                     (fset S - fset (fst3 e))\n          then Some Top else None\n        | Some x \\<Rightarrow> Some x) =\n       (case if x \\<in> fset (thd3 e) then Some Top else None of\n        None \\<Rightarrow>\n          if x \\<in> - fset (fst3 e)\n          then case if x \\<in> fset S then Some Bot else None of\n               None \\<Rightarrow>\n                 if x \\<in> fset\n                             (ffilter\n                               (\\<lambda>v.\n                                   \\<forall>e\\<in>set E.\nv |\\<notin>| thd3 e)\n                               V) -\n                            fset S\n                 then Some Top else None\n               | Some x \\<Rightarrow> Some x\n          else None\n        | Some x \\<Rightarrow> Some x)", "apply (simp add: less_eq_fset.rep_eq fmember.rep_eq e_in_E)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       ((\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e)) \\<and>\n        x \\<in> fset V \\<longrightarrow>\n        (\\<exists>e\\<in>set E. x \\<in> fset (thd3 e)) \\<longrightarrow>\n        (x \\<in> fset S \\<longrightarrow>\n         (x \\<notin> fset (fst3 e) \\<longrightarrow>\n          x \\<notin> fset (thd3 e)) \\<and>\n         (x \\<in> fset (fst3 e) \\<longrightarrow>\n          x \\<notin> fset (thd3 e))) \\<and>\n        (x \\<notin> fset S \\<longrightarrow>\n         (x \\<notin> fset (fst3 e) \\<longrightarrow>\n          x \\<in> fset (thd3 e)) \\<and>\n         (x \\<in> fset (fst3 e) \\<longrightarrow>\n          x \\<notin> fset (thd3 e)))) \\<and>\n       ((\\<exists>e\\<in>set E - {e}.\n            x \\<in> fset (thd3 e)) \\<longrightarrow>\n        ((\\<exists>e\\<in>set E. x \\<in> fset (thd3 e)) \\<longrightarrow>\n         (x \\<notin> fset (fst3 e) \\<longrightarrow>\n          x \\<notin> fset (thd3 e)) \\<and>\n         (x \\<in> fset (fst3 e) \\<longrightarrow>\n          x \\<notin> fset (thd3 e))) \\<and>\n        (x \\<notin> fset V \\<longrightarrow>\n         (x \\<notin> fset (fst3 e) \\<longrightarrow>\n          x \\<notin> fset (thd3 e)) \\<and>\n         (x \\<in> fset (fst3 e) \\<longrightarrow>\n          x \\<notin> fset (thd3 e)))) \\<and>\n       (x \\<notin> fset V \\<longrightarrow>\n        ((\\<exists>e\\<in>set E. x \\<in> fset (thd3 e)) \\<longrightarrow>\n         (x \\<notin> fset (fst3 e) \\<longrightarrow>\n          x \\<notin> fset (thd3 e)) \\<and>\n         (x \\<in> fset (fst3 e) \\<longrightarrow>\n          x \\<notin> fset (thd3 e))) \\<and>\n        (x \\<notin> fset (fst3 e) \\<longrightarrow>\n         x \\<notin> fset (thd3 e)) \\<and>\n        (x \\<in> fset (fst3 e) \\<longrightarrow> x \\<notin> fset (thd3 e)))", "apply safe"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset S;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset S;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset S;\n        x \\<notin> fset (fst3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset (thd3 e)\n 4. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset S;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 10. \\<And>x a aa b.\n        \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n         x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n         x \\<in> fset (thd3 e)\\<rbrakk>\n        \\<Longrightarrow> False\nA total of 12 subgoals...", "apply (insert \\<open>thd3 e |\\<inter>| initials G = {||}\\<close>)[1]"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset S;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e);\n        thd3 e |\\<inter>| initials G = {||}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset S;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset S;\n        x \\<notin> fset (fst3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset (thd3 e)\n 4. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset S;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 10. \\<And>x a aa b.\n        \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n         x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n         x \\<in> fset (thd3 e)\\<rbrakk>\n        \\<Longrightarrow> False\nA total of 12 subgoals...", "apply (insert S_initials, fold fset_cong)[2]"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset S;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e);\n        fset (thd3 e |\\<inter>| initials G) = fset {||};\n        S |\\<subseteq>| initials G\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset S;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e);\n        S |\\<subseteq>| initials G\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset S;\n        x \\<notin> fset (fst3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset (thd3 e)\n 4. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset S;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 10. \\<And>x a aa b.\n        \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n         x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n         x \\<in> fset (thd3 e)\\<rbrakk>\n        \\<Longrightarrow> False\nA total of 12 subgoals...", "apply (unfold less_eq_fset.rep_eq initials_def filter_fset)"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset S;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e);\n        fset\n         (thd3 e |\\<inter>|\n          ffilter (\\<lambda>v. \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n           G^V) =\n        fset {||};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set G^E.\n                           v |\\<notin>| thd3 e} \\<inter>\n                    fset G^V\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset S;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e);\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set G^E.\n                           v |\\<notin>| thd3 e} \\<inter>\n                    fset G^V\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset S;\n        x \\<notin> fset (fst3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset (thd3 e)\n 4. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset S;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 10. \\<And>x a aa b.\n        \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n         x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n         x \\<in> fset (thd3 e)\\<rbrakk>\n        \\<Longrightarrow> False\nA total of 12 subgoals...", "apply (auto simp add: fmember.rep_eq G_def e_in_E)[1]"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset S;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e);\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set G^E.\n                           v |\\<notin>| thd3 e} \\<inter>\n                    fset G^V\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset S;\n        x \\<notin> fset (fst3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset (thd3 e)\n 3. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset S;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 10. \\<And>x.\n        \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n         x \\<in> fset (thd3 e)\\<rbrakk>\n        \\<Longrightarrow> False\nA total of 11 subgoals...", "apply (auto simp add: fmember.rep_eq G_def e_in_E)[1]"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset S;\n        x \\<notin> fset (fst3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset (thd3 e)\n 2. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset S;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 10. \\<And>x.\n        \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n         x \\<in> fset (thd3 e)\\<rbrakk>\n        \\<Longrightarrow> False", "apply (auto simp add: fmember.rep_eq G_def e_in_E)[1]"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset S;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (insert wf_G)[1]"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset S;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e); wf_dia G\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold G_def vertices.simps edges.simps)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset S;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e);\n        wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (drule wf_dia_inv(3))"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset S;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e); acyclicity E\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold acyclicity_def)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset S;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e);\n        acyclic\n         (\\<Union>e\\<in>set E.\n             fset (fst3 e) \\<times> fset (thd3 e))\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (metis fst_e_in_S inter_fset le_iff_inf subsetD)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (insert wf_G)[1]"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e); wf_dia G\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold G_def vertices.simps edges.simps)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e);\n        wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (drule wf_dia_inv(4))"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e);\n        linearity E\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (drule linearityD2)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e);\n        \\<forall>e f.\n           e \\<in> set E \\<and>\n           f \\<in> set E \\<and> e \\<noteq> f \\<longrightarrow>\n           fst3 e |\\<inter>| fst3 f = {||} \\<and>\n           thd3 e |\\<inter>| thd3 f = {||}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (fold fset_cong, unfold inter_fset fset_simps)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e);\n        \\<forall>e f.\n           e \\<in> set E \\<and>\n           f \\<in> set E \\<and> e \\<noteq> f \\<longrightarrow>\n           fset (fst3 e) \\<inter> fset (fst3 f) = {} \\<and>\n           fset (thd3 e) \\<inter> fset (thd3 f) = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (insert e_in_E, blast)[1]"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (insert wf_G)[1]"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e); wf_dia G\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold G_def vertices.simps edges.simps)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e);\n        wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (drule wf_dia_inv(3))"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x a aa b ab ac ba.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e;\n        (ab, ac, ba) \\<in> set E; x \\<in> fset (thd3 (ab, ac, ba));\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e); acyclicity E\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (metis (lifting) e_in_E G_def empty_iff fset_simps(1)\n    finter_iff linearityD(2) notin_fset wf_G wf_dia_inv(4))"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (insert wf_G)[1]"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e); wf_dia G\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold G_def vertices.simps edges.simps)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e);\n        wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (drule wf_dia_inv(4))"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e);\n        linearity E\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (drule linearityD2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e);\n        \\<forall>e f.\n           e \\<in> set E \\<and>\n           f \\<in> set E \\<and> e \\<noteq> f \\<longrightarrow>\n           fst3 e |\\<inter>| fst3 f = {||} \\<and>\n           thd3 e |\\<inter>| thd3 f = {||}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (fold fset_cong, unfold inter_fset fset_simps)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<notin> fset (fst3 e); x \\<in> fset (thd3 e);\n        \\<forall>e f.\n           e \\<in> set E \\<and>\n           f \\<in> set E \\<and> e \\<noteq> f \\<longrightarrow>\n           fset (fst3 e) \\<inter> fset (fst3 f) = {} \\<and>\n           fset (thd3 e) \\<inter> fset (thd3 f) = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (insert e_in_E, blast)[1]"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (insert wf_G)[1]"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e); wf_dia G\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold G_def vertices.simps edges.simps)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e);\n        wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (drule wf_dia_inv(3))"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<in> fset (thd3 (a, aa, b)); (a, aa, b) \\<in> set E;\n        (a, aa, b) \\<notin> {}; (a, aa, b) \\<noteq> e; x \\<notin> fset V;\n        x \\<in> fset (fst3 e); x \\<in> fset (thd3 e); acyclicity E\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (metis (lifting) e_in_E G_def empty_iff fset_simps(1)\n    finter_iff linearityD(2) notin_fset wf_G wf_dia_inv(4))"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (insert wf_G)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia G\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia G\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia G\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia G\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold G_def vertices.simps edges.simps)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (drule wf_dia_inv(5))"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e);\n        \\<forall>e\\<in>set E.\n           fst3 e |\\<union>| thd3 e |\\<subseteq>| V\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold less_eq_fset.rep_eq union_fset)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e);\n        \\<forall>e\\<in>set E.\n           fset (fst3 e) \\<union> fset (thd3 e) \\<subseteq> fset V\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto[1]"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (drule wf_dia_inv(5))"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e);\n        \\<forall>e\\<in>set E.\n           fst3 e |\\<union>| thd3 e |\\<subseteq>| V\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold less_eq_fset.rep_eq union_fset)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x a aa b.\n       \\<lbrakk>x \\<notin> fset V; (a, aa, b) \\<in> set E;\n        x \\<in> fset (thd3 (a, aa, b)); x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e);\n        \\<forall>e\\<in>set E.\n           fset (fst3 e) \\<union> fset (thd3 e) \\<subseteq> fset V\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto[1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (drule wf_dia_inv(5))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e);\n        \\<forall>e\\<in>set E.\n           fst3 e |\\<union>| thd3 e |\\<subseteq>| V\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold less_eq_fset.rep_eq union_fset)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset (thd3 e);\n        \\<forall>e\\<in>set E.\n           fset (fst3 e) \\<union> fset (thd3 e) \\<subseteq> fset V\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (auto simp add: e_in_E)[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e); wf_dia (Graph V \\<Lambda> E)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (drule wf_dia_inv(5))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e);\n        \\<forall>e\\<in>set E.\n           fst3 e |\\<union>| thd3 e |\\<subseteq>| V\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold less_eq_fset.rep_eq union_fset)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<notin> fset V; x \\<in> fset (fst3 e);\n        x \\<in> fset (thd3 e);\n        \\<forall>e\\<in>set E.\n           fset (fst3 e) \\<union> fset (thd3 e) \\<subseteq> fset V\\<rbrakk>\n       \\<Longrightarrow> False", "apply (auto simp add: e_in_E)[1]"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  make_map (initials G' |-| (S |-| fst3 e)) Top ++\n  make_map (S |-| fst3 e) Bot =\n  map_diff (make_map (initials G |-| S) Top ++ make_map S Bot) (fst3 e) ++\n  make_map (thd3 e) Top\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma next_lins2_vertex:\n  assumes \"Inl v # \\<pi> \\<in> lins2 S G\"\n  assumes \"v |\\<notin>| S\"\n  shows \"\\<pi> \\<in> lins2 ({|v|} |\\<union>| S) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<in> lins2 ({|v|} |\\<union>| S) G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi> \\<in> lins2 ({|v|} |\\<union>| S) G", "note lins2D = lins2D[OF assms(1)]"], ["proof (state)\nthis:\n  distinct (Inl v # \\<pi>)\n  set (Inl v # \\<pi>) = (fset G^V - fset S) <+> set G^E\n  \\<lbrakk>?i < length (Inl v # \\<pi>); ?j < length (Inl v # \\<pi>);\n   (Inl v # \\<pi>) ! ?i = Inl ?v; (Inl v # \\<pi>) ! ?j = Inr ?e;\n   ?v |\\<in>| fst3 ?e\\<rbrakk>\n  \\<Longrightarrow> ?i < ?j\n  \\<lbrakk>?j < length (Inl v # \\<pi>); ?k < length (Inl v # \\<pi>);\n   (Inl v # \\<pi>) ! ?j = Inr ?e; (Inl v # \\<pi>) ! ?k = Inl ?w;\n   ?w |\\<in>| thd3 ?e\\<rbrakk>\n  \\<Longrightarrow> ?j < ?k\n\ngoal (1 subgoal):\n 1. \\<pi> \\<in> lins2 ({|v|} |\\<union>| S) G", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<in> lins2 ({|v|} |\\<union>| S) G", "proof (intro lins2I)"], ["proof (state)\ngoal (4 subgoals):\n 1. distinct \\<pi>\n 2. set \\<pi> = (fset G^V - fset ({|v|} |\\<union>| S)) <+> set G^E\n 3. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n       \\<Longrightarrow> i < j\n 4. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "show \"distinct \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct \\<pi>", "using lins2D(1)"], ["proof (prove)\nusing this:\n  distinct (Inl v # \\<pi>)\n\ngoal (1 subgoal):\n 1. distinct \\<pi>", "by auto"], ["proof (state)\nthis:\n  distinct \\<pi>\n\ngoal (3 subgoals):\n 1. set \\<pi> = (fset G^V - fset ({|v|} |\\<union>| S)) <+> set G^E\n 2. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n       \\<Longrightarrow> i < j\n 3. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. set \\<pi> = (fset G^V - fset ({|v|} |\\<union>| S)) <+> set G^E\n 2. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n       \\<Longrightarrow> i < j\n 3. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "have \"set \\<pi> = set (Inl v # \\<pi>) - {Inl v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set \\<pi> = set (Inl v # \\<pi>) - {Inl v}", "using lins2D(1)"], ["proof (prove)\nusing this:\n  distinct (Inl v # \\<pi>)\n\ngoal (1 subgoal):\n 1. set \\<pi> = set (Inl v # \\<pi>) - {Inl v}", "by auto"], ["proof (state)\nthis:\n  set \\<pi> = set (Inl v # \\<pi>) - {Inl v}\n\ngoal (3 subgoals):\n 1. set \\<pi> = (fset G^V - fset ({|v|} |\\<union>| S)) <+> set G^E\n 2. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n       \\<Longrightarrow> i < j\n 3. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "also"], ["proof (state)\nthis:\n  set \\<pi> = set (Inl v # \\<pi>) - {Inl v}\n\ngoal (3 subgoals):\n 1. set \\<pi> = (fset G^V - fset ({|v|} |\\<union>| S)) <+> set G^E\n 2. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n       \\<Longrightarrow> i < j\n 3. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "have \"... = (fset G^V - fset ({|v|} |\\<union>| S)) <+> set G^E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (Inl v # \\<pi>) - {Inl v} =\n    (fset G^V - fset ({|v|} |\\<union>| S)) <+> set G^E", "using lins2D(2)"], ["proof (prove)\nusing this:\n  set (Inl v # \\<pi>) = (fset G^V - fset S) <+> set G^E\n\ngoal (1 subgoal):\n 1. set (Inl v # \\<pi>) - {Inl v} =\n    (fset G^V - fset ({|v|} |\\<union>| S)) <+> set G^E", "by auto"], ["proof (state)\nthis:\n  set (Inl v # \\<pi>) - {Inl v} =\n  (fset G^V - fset ({|v|} |\\<union>| S)) <+> set G^E\n\ngoal (3 subgoals):\n 1. set \\<pi> = (fset G^V - fset ({|v|} |\\<union>| S)) <+> set G^E\n 2. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n       \\<Longrightarrow> i < j\n 3. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "finally"], ["proof (chain)\npicking this:\n  set \\<pi> = (fset G^V - fset ({|v|} |\\<union>| S)) <+> set G^E", "show \"set \\<pi> = (fset G^V - fset ({|v|} |\\<union>| S)) <+> set G^E\""], ["proof (prove)\nusing this:\n  set \\<pi> = (fset G^V - fset ({|v|} |\\<union>| S)) <+> set G^E\n\ngoal (1 subgoal):\n 1. set \\<pi> = (fset G^V - fset ({|v|} |\\<union>| S)) <+> set G^E", "by auto"], ["proof (state)\nthis:\n  set \\<pi> = (fset G^V - fset ({|v|} |\\<union>| S)) <+> set G^E\n\ngoal (2 subgoals):\n 1. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n       \\<Longrightarrow> i < j\n 2. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n       \\<Longrightarrow> i < j\n 2. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "fix i j v e"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n       \\<Longrightarrow> i < j\n 2. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "assume \"i < length \\<pi>\" \"j < length \\<pi>\" \"\\<pi> ! i = Inl v\"\n      \"\\<pi> ! j = Inr e\" \"v |\\<in>| fst3 e\""], ["proof (state)\nthis:\n  i < length \\<pi>\n  j < length \\<pi>\n  \\<pi> ! i = Inl v\n  \\<pi> ! j = Inr e\n  v |\\<in>| fst3 e\n\ngoal (2 subgoals):\n 1. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n       \\<Longrightarrow> i < j\n 2. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "thus \"i < j\""], ["proof (prove)\nusing this:\n  i < length \\<pi>\n  j < length \\<pi>\n  \\<pi> ! i = Inl v\n  \\<pi> ! j = Inr e\n  v |\\<in>| fst3 e\n\ngoal (1 subgoal):\n 1. i < j", "using lins2D(3)[of \"i+1\" \"j+1\"]"], ["proof (prove)\nusing this:\n  i < length \\<pi>\n  j < length \\<pi>\n  \\<pi> ! i = Inl v\n  \\<pi> ! j = Inr e\n  v |\\<in>| fst3 e\n  \\<lbrakk>i + 1 < length (Inl v # \\<pi>); j + 1 < length (Inl v # \\<pi>);\n   (Inl v # \\<pi>) ! (i + 1) = Inl ?v; (Inl v # \\<pi>) ! (j + 1) = Inr ?e;\n   ?v |\\<in>| fst3 ?e\\<rbrakk>\n  \\<Longrightarrow> i + 1 < j + 1\n\ngoal (1 subgoal):\n 1. i < j", "by auto"], ["proof (state)\nthis:\n  i < j\n\ngoal (1 subgoal):\n 1. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "fix j k w e"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "assume \"j < length \\<pi>\" \"k < length \\<pi>\" \"\\<pi> ! j = Inr e\"\n      \"\\<pi> ! k = Inl w\" \"w |\\<in>| thd3 e\""], ["proof (state)\nthis:\n  j < length \\<pi>\n  k < length \\<pi>\n  \\<pi> ! j = Inr e\n  \\<pi> ! k = Inl w\n  w |\\<in>| thd3 e\n\ngoal (1 subgoal):\n 1. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "thus \"j < k\""], ["proof (prove)\nusing this:\n  j < length \\<pi>\n  k < length \\<pi>\n  \\<pi> ! j = Inr e\n  \\<pi> ! k = Inl w\n  w |\\<in>| thd3 e\n\ngoal (1 subgoal):\n 1. j < k", "using lins2D(4)[of \"j+1\" \"k+1\"]"], ["proof (prove)\nusing this:\n  j < length \\<pi>\n  k < length \\<pi>\n  \\<pi> ! j = Inr e\n  \\<pi> ! k = Inl w\n  w |\\<in>| thd3 e\n  \\<lbrakk>j + 1 < length (Inl v # \\<pi>); k + 1 < length (Inl v # \\<pi>);\n   (Inl v # \\<pi>) ! (j + 1) = Inr ?e; (Inl v # \\<pi>) ! (k + 1) = Inl ?w;\n   ?w |\\<in>| thd3 ?e\\<rbrakk>\n  \\<Longrightarrow> j + 1 < k + 1\n\ngoal (1 subgoal):\n 1. j < k", "by auto"], ["proof (state)\nthis:\n  j < k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<pi> \\<in> lins2 ({|v|} |\\<union>| S) G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma next_lins2_edge:\n  assumes \"Inr e # \\<pi> \\<in> lins2 S (Graph V \\<Lambda> E)\"\n      and \"vs |\\<subseteq>| S\"\n      and \"e = (vs,c,ws)\"\n  shows \"\\<pi> \\<in> lins2 (S - vs) (Graph (V - vs) \\<Lambda> (removeAll e E))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\n    \\<in> lins2 (S |-| vs) (Graph (V |-| vs) \\<Lambda> (removeAll e E))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi>\n    \\<in> lins2 (S |-| vs) (Graph (V |-| vs) \\<Lambda> (removeAll e E))", "note lins2D = lins2D[OF assms(1)]"], ["proof (state)\nthis:\n  distinct (Inr e # \\<pi>)\n  set (Inr e # \\<pi>) =\n  (fset (Graph V \\<Lambda> E)^V - fset S) <+> set (Graph V \\<Lambda> E)^E\n  \\<lbrakk>?i < length (Inr e # \\<pi>); ?j < length (Inr e # \\<pi>);\n   (Inr e # \\<pi>) ! ?i = Inl ?v; (Inr e # \\<pi>) ! ?j = Inr ?e;\n   ?v |\\<in>| fst3 ?e\\<rbrakk>\n  \\<Longrightarrow> ?i < ?j\n  \\<lbrakk>?j < length (Inr e # \\<pi>); ?k < length (Inr e # \\<pi>);\n   (Inr e # \\<pi>) ! ?j = Inr ?e; (Inr e # \\<pi>) ! ?k = Inl ?w;\n   ?w |\\<in>| thd3 ?e\\<rbrakk>\n  \\<Longrightarrow> ?j < ?k\n\ngoal (1 subgoal):\n 1. \\<pi>\n    \\<in> lins2 (S |-| vs) (Graph (V |-| vs) \\<Lambda> (removeAll e E))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\n    \\<in> lins2 (S |-| vs) (Graph (V |-| vs) \\<Lambda> (removeAll e E))", "proof (intro lins2I, unfold vertices.simps edges.simps)"], ["proof (state)\ngoal (4 subgoals):\n 1. distinct \\<pi>\n 2. set \\<pi> = (fset (V |-| vs) - fset (S |-| vs)) <+> set (removeAll e E)\n 3. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n       \\<Longrightarrow> i < j\n 4. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "show \"distinct \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct \\<pi>", "using lins2D(1)"], ["proof (prove)\nusing this:\n  distinct (Inr e # \\<pi>)\n\ngoal (1 subgoal):\n 1. distinct \\<pi>", "by auto"], ["proof (state)\nthis:\n  distinct \\<pi>\n\ngoal (3 subgoals):\n 1. set \\<pi> = (fset (V |-| vs) - fset (S |-| vs)) <+> set (removeAll e E)\n 2. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n       \\<Longrightarrow> i < j\n 3. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. set \\<pi> = (fset (V |-| vs) - fset (S |-| vs)) <+> set (removeAll e E)\n 2. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n       \\<Longrightarrow> i < j\n 3. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "show \"set \\<pi> = (fset (V - vs) - fset (S - vs))\n      <+> set (removeAll e E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set \\<pi> = (fset (V |-| vs) - fset (S |-| vs)) <+> set (removeAll e E)", "apply (insert lins2D(1) lins2D(2) assms(2))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct (Inr e # \\<pi>);\n     set (Inr e # \\<pi>) =\n     (fset (Graph V \\<Lambda> E)^V - fset S) <+>\n     set (Graph V \\<Lambda> E)^E;\n     vs |\\<subseteq>| S\\<rbrakk>\n    \\<Longrightarrow> set \\<pi> =\n                      (fset (V |-| vs) - fset (S |-| vs)) <+>\n                      set (removeAll e E)", "apply (unfold assms(3) vertices.simps edges.simps less_eq_fset.rep_eq, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Inr (vs, c, ws) \\<notin> set \\<pi> \\<and> distinct \\<pi>;\n     insert (Inr (vs, c, ws)) (set \\<pi>) = (fset V - fset S) <+> set E;\n     fset vs \\<subseteq> fset S\\<rbrakk>\n    \\<Longrightarrow> set \\<pi> =\n                      (fset V - fset vs - (fset S - fset vs)) <+>\n                      set E - {(vs, c, ws)}", "apply (unfold diff_diff_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Inr (vs, c, ws) \\<notin> set \\<pi> \\<and> distinct \\<pi>;\n     insert (Inr (vs, c, ws)) (set \\<pi>) = (fset V - fset S) <+> set E;\n     fset vs \\<subseteq> fset S\\<rbrakk>\n    \\<Longrightarrow> set \\<pi> =\n                      (fset V - fset S) <+> set E - {(vs, c, ws)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Inr (vs, c, ws) \\<notin> set \\<pi> \\<and> distinct \\<pi>;\n     insert (Inr (vs, c, ws)) (set \\<pi>) = (fset V - fset S) <+> set E;\n     fset vs \\<subseteq> fset S\\<rbrakk>\n    \\<Longrightarrow> set \\<pi> =\n                      (fset V - fset S) <+> set E - {(vs, c, ws)}", "have \"\\<forall>a aa b.\n       insert (Inr (vs, c, ws)) (set \\<pi>) = (fset V - fset S) <+> set E \\<longrightarrow>\n       fset vs \\<subseteq> fset S \\<longrightarrow>\n       Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n       distinct \\<pi> \\<longrightarrow> (a, aa, b) \\<in> set E \\<longrightarrow> Inr (a, aa, b) \\<notin> set \\<pi> \\<longrightarrow> b = ws\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a aa b.\n       insert (Inr (vs, c, ws)) (set \\<pi>) =\n       (fset V - fset S) <+> set E \\<longrightarrow>\n       fset vs \\<subseteq> fset S \\<longrightarrow>\n       Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n       distinct \\<pi> \\<longrightarrow>\n       (a, aa, b) \\<in> set E \\<longrightarrow>\n       Inr (a, aa, b) \\<notin> set \\<pi> \\<longrightarrow> b = ws", "by (metis (lifting) InrI List.set_simps(2)\n      prod.inject set_ConsD sum.simps(2))"], ["proof (state)\nthis:\n  \\<forall>a aa b.\n     insert (Inr (vs, c, ws)) (set \\<pi>) =\n     (fset V - fset S) <+> set E \\<longrightarrow>\n     fset vs \\<subseteq> fset S \\<longrightarrow>\n     Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n     distinct \\<pi> \\<longrightarrow>\n     (a, aa, b) \\<in> set E \\<longrightarrow>\n     Inr (a, aa, b) \\<notin> set \\<pi> \\<longrightarrow> b = ws\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Inr (vs, c, ws) \\<notin> set \\<pi> \\<and> distinct \\<pi>;\n     insert (Inr (vs, c, ws)) (set \\<pi>) = (fset V - fset S) <+> set E;\n     fset vs \\<subseteq> fset S\\<rbrakk>\n    \\<Longrightarrow> set \\<pi> =\n                      (fset V - fset S) <+> set E - {(vs, c, ws)}", "moreover"], ["proof (state)\nthis:\n  \\<forall>a aa b.\n     insert (Inr (vs, c, ws)) (set \\<pi>) =\n     (fset V - fset S) <+> set E \\<longrightarrow>\n     fset vs \\<subseteq> fset S \\<longrightarrow>\n     Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n     distinct \\<pi> \\<longrightarrow>\n     (a, aa, b) \\<in> set E \\<longrightarrow>\n     Inr (a, aa, b) \\<notin> set \\<pi> \\<longrightarrow> b = ws\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Inr (vs, c, ws) \\<notin> set \\<pi> \\<and> distinct \\<pi>;\n     insert (Inr (vs, c, ws)) (set \\<pi>) = (fset V - fset S) <+> set E;\n     fset vs \\<subseteq> fset S\\<rbrakk>\n    \\<Longrightarrow> set \\<pi> =\n                      (fset V - fset S) <+> set E - {(vs, c, ws)}", "have \"\\<forall>a aa b.\n       insert (Inr (vs, c, ws)) (set \\<pi>) = (fset V - fset S) <+> set E \\<longrightarrow>\n       fset vs \\<subseteq> fset S \\<longrightarrow>\n       Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n       distinct \\<pi> \\<longrightarrow> (a, aa, b) \\<in> set E \\<longrightarrow> Inr (a, aa, b) \\<notin> set \\<pi> \\<longrightarrow> aa = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a aa b.\n       insert (Inr (vs, c, ws)) (set \\<pi>) =\n       (fset V - fset S) <+> set E \\<longrightarrow>\n       fset vs \\<subseteq> fset S \\<longrightarrow>\n       Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n       distinct \\<pi> \\<longrightarrow>\n       (a, aa, b) \\<in> set E \\<longrightarrow>\n       Inr (a, aa, b) \\<notin> set \\<pi> \\<longrightarrow> aa = c", "by (metis (lifting) InrI List.set_simps(2)\n      prod.inject set_ConsD sum.simps(2))"], ["proof (state)\nthis:\n  \\<forall>a aa b.\n     insert (Inr (vs, c, ws)) (set \\<pi>) =\n     (fset V - fset S) <+> set E \\<longrightarrow>\n     fset vs \\<subseteq> fset S \\<longrightarrow>\n     Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n     distinct \\<pi> \\<longrightarrow>\n     (a, aa, b) \\<in> set E \\<longrightarrow>\n     Inr (a, aa, b) \\<notin> set \\<pi> \\<longrightarrow> aa = c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Inr (vs, c, ws) \\<notin> set \\<pi> \\<and> distinct \\<pi>;\n     insert (Inr (vs, c, ws)) (set \\<pi>) = (fset V - fset S) <+> set E;\n     fset vs \\<subseteq> fset S\\<rbrakk>\n    \\<Longrightarrow> set \\<pi> =\n                      (fset V - fset S) <+> set E - {(vs, c, ws)}", "moreover"], ["proof (state)\nthis:\n  \\<forall>a aa b.\n     insert (Inr (vs, c, ws)) (set \\<pi>) =\n     (fset V - fset S) <+> set E \\<longrightarrow>\n     fset vs \\<subseteq> fset S \\<longrightarrow>\n     Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n     distinct \\<pi> \\<longrightarrow>\n     (a, aa, b) \\<in> set E \\<longrightarrow>\n     Inr (a, aa, b) \\<notin> set \\<pi> \\<longrightarrow> aa = c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Inr (vs, c, ws) \\<notin> set \\<pi> \\<and> distinct \\<pi>;\n     insert (Inr (vs, c, ws)) (set \\<pi>) = (fset V - fset S) <+> set E;\n     fset vs \\<subseteq> fset S\\<rbrakk>\n    \\<Longrightarrow> set \\<pi> =\n                      (fset V - fset S) <+> set E - {(vs, c, ws)}", "have \"\\<forall>x. insert (Inr (vs, c, ws)) (set \\<pi>) = (fset V - fset S) <+> set E \\<longrightarrow>\n         fset vs \\<subseteq> fset S \\<longrightarrow>\n         Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n         distinct \\<pi> \\<longrightarrow> x \\<in> set \\<pi> \\<longrightarrow> x \\<in> (fset V - fset S) <+> set E - {(vs, c, ws)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       insert (Inr (vs, c, ws)) (set \\<pi>) =\n       (fset V - fset S) <+> set E \\<longrightarrow>\n       fset vs \\<subseteq> fset S \\<longrightarrow>\n       Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n       distinct \\<pi> \\<longrightarrow>\n       x \\<in> set \\<pi> \\<longrightarrow>\n       x \\<in> (fset V - fset S) <+> set E - {(vs, c, ws)}", "apply (unfold insert_is_Un[of _ \"set \\<pi>\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       {Inr (vs, c, ws)} \\<union> set \\<pi> =\n       (fset V - fset S) <+> set E \\<longrightarrow>\n       fset vs \\<subseteq> fset S \\<longrightarrow>\n       Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n       distinct \\<pi> \\<longrightarrow>\n       x \\<in> set \\<pi> \\<longrightarrow>\n       x \\<in> (fset V - fset S) <+> set E - {(vs, c, ws)}", "apply (fold assms(3))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       {Inr e} \\<union> set \\<pi> =\n       (fset V - fset S) <+> set E \\<longrightarrow>\n       fset vs \\<subseteq> fset S \\<longrightarrow>\n       Inr e \\<notin> set \\<pi> \\<longrightarrow>\n       distinct \\<pi> \\<longrightarrow>\n       x \\<in> set \\<pi> \\<longrightarrow>\n       x \\<in> (fset V - fset S) <+> set E - {e}", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>{Inr e} \\<union> set \\<pi> = (fset V - fset S) <+> set E;\n        fset vs \\<subseteq> fset S; Inr e \\<notin> set \\<pi>;\n        distinct \\<pi>; x \\<in> set \\<pi>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (fset V - fset S) <+> set E - {e}", "apply (subgoal_tac \"set \\<pi> = ((fset V - fset S) <+> set E) - {Inr e}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>{Inr e} \\<union> set \\<pi> = (fset V - fset S) <+> set E;\n        fset vs \\<subseteq> fset S; Inr e \\<notin> set \\<pi>;\n        distinct \\<pi>; x \\<in> set \\<pi>;\n        set \\<pi> = (fset V - fset S) <+> set E - {Inr e}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (fset V - fset S) <+> set E - {e}\n 2. \\<And>x.\n       \\<lbrakk>{Inr e} \\<union> set \\<pi> = (fset V - fset S) <+> set E;\n        fset vs \\<subseteq> fset S; Inr e \\<notin> set \\<pi>;\n        distinct \\<pi>; x \\<in> set \\<pi>\\<rbrakk>\n       \\<Longrightarrow> set \\<pi> = (fset V - fset S) <+> set E - {Inr e}", "by auto"], ["proof (state)\nthis:\n  \\<forall>x.\n     insert (Inr (vs, c, ws)) (set \\<pi>) =\n     (fset V - fset S) <+> set E \\<longrightarrow>\n     fset vs \\<subseteq> fset S \\<longrightarrow>\n     Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n     distinct \\<pi> \\<longrightarrow>\n     x \\<in> set \\<pi> \\<longrightarrow>\n     x \\<in> (fset V - fset S) <+> set E - {(vs, c, ws)}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Inr (vs, c, ws) \\<notin> set \\<pi> \\<and> distinct \\<pi>;\n     insert (Inr (vs, c, ws)) (set \\<pi>) = (fset V - fset S) <+> set E;\n     fset vs \\<subseteq> fset S\\<rbrakk>\n    \\<Longrightarrow> set \\<pi> =\n                      (fset V - fset S) <+> set E - {(vs, c, ws)}", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>a aa b.\n     insert (Inr (vs, c, ws)) (set \\<pi>) =\n     (fset V - fset S) <+> set E \\<longrightarrow>\n     fset vs \\<subseteq> fset S \\<longrightarrow>\n     Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n     distinct \\<pi> \\<longrightarrow>\n     (a, aa, b) \\<in> set E \\<longrightarrow>\n     Inr (a, aa, b) \\<notin> set \\<pi> \\<longrightarrow> b = ws\n  \\<forall>a aa b.\n     insert (Inr (vs, c, ws)) (set \\<pi>) =\n     (fset V - fset S) <+> set E \\<longrightarrow>\n     fset vs \\<subseteq> fset S \\<longrightarrow>\n     Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n     distinct \\<pi> \\<longrightarrow>\n     (a, aa, b) \\<in> set E \\<longrightarrow>\n     Inr (a, aa, b) \\<notin> set \\<pi> \\<longrightarrow> aa = c\n  \\<forall>x.\n     insert (Inr (vs, c, ws)) (set \\<pi>) =\n     (fset V - fset S) <+> set E \\<longrightarrow>\n     fset vs \\<subseteq> fset S \\<longrightarrow>\n     Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n     distinct \\<pi> \\<longrightarrow>\n     x \\<in> set \\<pi> \\<longrightarrow>\n     x \\<in> (fset V - fset S) <+> set E - {(vs, c, ws)}", "show \"Inr (vs, c, ws) \\<notin> set \\<pi> \\<and> distinct \\<pi> \\<Longrightarrow>\n      insert (Inr (vs, c, ws)) (set \\<pi>) = (fset V - fset S) <+> set E \\<Longrightarrow>\n      fset vs \\<subseteq> fset S \\<Longrightarrow> set \\<pi> = (fset V - fset S) <+> set E - {(vs, c, ws)}\""], ["proof (prove)\nusing this:\n  \\<forall>a aa b.\n     insert (Inr (vs, c, ws)) (set \\<pi>) =\n     (fset V - fset S) <+> set E \\<longrightarrow>\n     fset vs \\<subseteq> fset S \\<longrightarrow>\n     Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n     distinct \\<pi> \\<longrightarrow>\n     (a, aa, b) \\<in> set E \\<longrightarrow>\n     Inr (a, aa, b) \\<notin> set \\<pi> \\<longrightarrow> b = ws\n  \\<forall>a aa b.\n     insert (Inr (vs, c, ws)) (set \\<pi>) =\n     (fset V - fset S) <+> set E \\<longrightarrow>\n     fset vs \\<subseteq> fset S \\<longrightarrow>\n     Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n     distinct \\<pi> \\<longrightarrow>\n     (a, aa, b) \\<in> set E \\<longrightarrow>\n     Inr (a, aa, b) \\<notin> set \\<pi> \\<longrightarrow> aa = c\n  \\<forall>x.\n     insert (Inr (vs, c, ws)) (set \\<pi>) =\n     (fset V - fset S) <+> set E \\<longrightarrow>\n     fset vs \\<subseteq> fset S \\<longrightarrow>\n     Inr (vs, c, ws) \\<notin> set \\<pi> \\<longrightarrow>\n     distinct \\<pi> \\<longrightarrow>\n     x \\<in> set \\<pi> \\<longrightarrow>\n     x \\<in> (fset V - fset S) <+> set E - {(vs, c, ws)}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Inr (vs, c, ws) \\<notin> set \\<pi> \\<and> distinct \\<pi>;\n     insert (Inr (vs, c, ws)) (set \\<pi>) = (fset V - fset S) <+> set E;\n     fset vs \\<subseteq> fset S\\<rbrakk>\n    \\<Longrightarrow> set \\<pi> =\n                      (fset V - fset S) <+> set E - {(vs, c, ws)}", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>Inr (vs, c, ws) \\<notin> set \\<pi> \\<and> distinct \\<pi>;\n   insert (Inr (vs, c, ws)) (set \\<pi>) = (fset V - fset S) <+> set E;\n   fset vs \\<subseteq> fset S\\<rbrakk>\n  \\<Longrightarrow> set \\<pi> = (fset V - fset S) <+> set E - {(vs, c, ws)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set \\<pi> = (fset (V |-| vs) - fset (S |-| vs)) <+> set (removeAll e E)\n\ngoal (2 subgoals):\n 1. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n       \\<Longrightarrow> i < j\n 2. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n       \\<Longrightarrow> i < j\n 2. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "fix i j v e"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n       \\<Longrightarrow> i < j\n 2. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "assume \"i < length \\<pi>\" \"j < length \\<pi>\" \"\\<pi> ! i = Inl v\"\n      \"\\<pi> ! j = Inr e\" \"v |\\<in>| fst3 e\""], ["proof (state)\nthis:\n  i < length \\<pi>\n  j < length \\<pi>\n  \\<pi> ! i = Inl v\n  \\<pi> ! j = Inr e\n  v |\\<in>| fst3 e\n\ngoal (2 subgoals):\n 1. \\<And>i j v e.\n       \\<lbrakk>i < length \\<pi>; j < length \\<pi>; \\<pi> ! i = Inl v;\n        \\<pi> ! j = Inr e; v |\\<in>| fst3 e\\<rbrakk>\n       \\<Longrightarrow> i < j\n 2. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "thus \"i < j\""], ["proof (prove)\nusing this:\n  i < length \\<pi>\n  j < length \\<pi>\n  \\<pi> ! i = Inl v\n  \\<pi> ! j = Inr e\n  v |\\<in>| fst3 e\n\ngoal (1 subgoal):\n 1. i < j", "using lins2D(3)[of \"i+1\" \"j+1\"]"], ["proof (prove)\nusing this:\n  i < length \\<pi>\n  j < length \\<pi>\n  \\<pi> ! i = Inl v\n  \\<pi> ! j = Inr e\n  v |\\<in>| fst3 e\n  \\<lbrakk>i + 1 < length (Inr e # \\<pi>); j + 1 < length (Inr e # \\<pi>);\n   (Inr e # \\<pi>) ! (i + 1) = Inl ?v; (Inr e # \\<pi>) ! (j + 1) = Inr ?e;\n   ?v |\\<in>| fst3 ?e\\<rbrakk>\n  \\<Longrightarrow> i + 1 < j + 1\n\ngoal (1 subgoal):\n 1. i < j", "by auto"], ["proof (state)\nthis:\n  i < j\n\ngoal (1 subgoal):\n 1. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "fix j k w e"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "assume \"j < length \\<pi>\" \"k < length \\<pi>\" \"\\<pi> ! j = Inr e\"\n      \"\\<pi> ! k = Inl w\" \"w |\\<in>| thd3 e\""], ["proof (state)\nthis:\n  j < length \\<pi>\n  k < length \\<pi>\n  \\<pi> ! j = Inr e\n  \\<pi> ! k = Inl w\n  w |\\<in>| thd3 e\n\ngoal (1 subgoal):\n 1. \\<And>j k w e.\n       \\<lbrakk>j < length \\<pi>; k < length \\<pi>; \\<pi> ! j = Inr e;\n        \\<pi> ! k = Inl w; w |\\<in>| thd3 e\\<rbrakk>\n       \\<Longrightarrow> j < k", "thus \"j < k\""], ["proof (prove)\nusing this:\n  j < length \\<pi>\n  k < length \\<pi>\n  \\<pi> ! j = Inr e\n  \\<pi> ! k = Inl w\n  w |\\<in>| thd3 e\n\ngoal (1 subgoal):\n 1. j < k", "using lins2D(4)[of \"j+1\" \"k+1\"]"], ["proof (prove)\nusing this:\n  j < length \\<pi>\n  k < length \\<pi>\n  \\<pi> ! j = Inr e\n  \\<pi> ! k = Inl w\n  w |\\<in>| thd3 e\n  \\<lbrakk>j + 1 < length (Inr e # \\<pi>); k + 1 < length (Inr e # \\<pi>);\n   (Inr e # \\<pi>) ! (j + 1) = Inr ?e; (Inr e # \\<pi>) ! (k + 1) = Inl ?w;\n   ?w |\\<in>| thd3 ?e\\<rbrakk>\n  \\<Longrightarrow> j + 1 < k + 1\n\ngoal (1 subgoal):\n 1. j < k", "by auto"], ["proof (state)\nthis:\n  j < k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<pi> \\<in> lins2 (S |-| vs) (Graph (V |-| vs) \\<Lambda> (removeAll e E))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We wish to prove that every proofstate chain that can be obtained from\n  a linear extension of @{term G} is well-formed and has as its final\n  proofstate that state in which every terminal node in @{term G} is mapped\n  to @{term Bot}.\n\n  We first prove this for partially-processed diagrams, for\n  then the result for ordinary diagrams follows as an easy corollary.\n\n  We use induction on the size of the partially-processed diagram. The size of\n  a partially-processed diagram @{term \"(G,S)\"} is defined as the number of\n  nodes in @{term G}, plus the number of edges, minus the number of nodes in\n  @{term S}.\\<close>"], ["", "lemmas [simp] = fmember.rep_eq"], ["", "lemma wf_chains2:\n  fixes k\n  assumes \"S |\\<subseteq>| initials G\"\n      and \"wf_dia G\"\n      and \"\\<Pi> \\<in> ps_chains2 S G\"\n      and \"fcard G^V + length G^E = k + fcard S\"\n  shows \"wf_ps_chain \\<Pi> \\<and> (post \\<Pi> = [ terminals G |=> Bot ])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "using assms"], ["proof (prove)\nusing this:\n  S |\\<subseteq>| initials G\n  wf_dia G\n  \\<Pi> \\<in> ps_chains2 S G\n  fcard G^V + length G^E = k + fcard S\n\ngoal (1 subgoal):\n 1. wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "proof (induct k arbitrary: S G \\<Pi>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S G \\<Pi>.\n       \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n        \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = 0 + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "case 0"], ["proof (state)\nthis:\n  S |\\<subseteq>| initials G\n  wf_dia G\n  \\<Pi> \\<in> ps_chains2 S G\n  fcard G^V + length G^E = 0 + fcard S\n\ngoal (2 subgoals):\n 1. \\<And>S G \\<Pi>.\n       \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n        \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = 0 + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "obtain V \\<Lambda> E where G_def: \"G = Graph V \\<Lambda> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>V \\<Lambda> E.\n        G = Graph V \\<Lambda> E \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis diagram.exhaust)"], ["proof (state)\nthis:\n  G = Graph V \\<Lambda> E\n\ngoal (2 subgoals):\n 1. \\<And>S G \\<Pi>.\n       \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n        \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = 0 + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "have \"S |\\<subseteq>| V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S |\\<subseteq>| V", "using \"0.prems\"(1) initials_in_vertices[of \"G\"]"], ["proof (prove)\nusing this:\n  S |\\<subseteq>| initials G\n  initials G |\\<subseteq>| G^V\n\ngoal (1 subgoal):\n 1. S |\\<subseteq>| V", "by (auto simp add: G_def)"], ["proof (state)\nthis:\n  S |\\<subseteq>| V\n\ngoal (2 subgoals):\n 1. \\<And>S G \\<Pi>.\n       \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n        \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = 0 + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "have \"fcard V \\<le> fcard S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fcard V \\<le> fcard S", "using \"0.prems\"(4)"], ["proof (prove)\nusing this:\n  fcard G^V + length G^E = 0 + fcard S\n\ngoal (1 subgoal):\n 1. fcard V \\<le> fcard S", "by (unfold G_def, auto)"], ["proof (state)\nthis:\n  fcard V \\<le> fcard S\n\ngoal (2 subgoals):\n 1. \\<And>S G \\<Pi>.\n       \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n        \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = 0 + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "from fcard_seteq[OF \\<open>S |\\<subseteq>| V\\<close> this]"], ["proof (chain)\npicking this:\n  S = V", "have \"S = V\""], ["proof (prove)\nusing this:\n  S = V\n\ngoal (1 subgoal):\n 1. S = V", "by auto"], ["proof (state)\nthis:\n  S = V\n\ngoal (2 subgoals):\n 1. \\<And>S G \\<Pi>.\n       \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n        \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = 0 + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "hence \"E = []\""], ["proof (prove)\nusing this:\n  S = V\n\ngoal (1 subgoal):\n 1. E = []", "using \"0.prems\"(4)"], ["proof (prove)\nusing this:\n  S = V\n  fcard G^V + length G^E = 0 + fcard S\n\ngoal (1 subgoal):\n 1. E = []", "by (unfold G_def, auto)"], ["proof (state)\nthis:\n  E = []\n\ngoal (2 subgoals):\n 1. \\<And>S G \\<Pi>.\n       \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n        \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = 0 + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "have \"initials G = V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initials G = V", "by (unfold G_def \\<open>E=[]\\<close>, rule no_edges_imp_all_nodes_initial)"], ["proof (state)\nthis:\n  initials G = V\n\ngoal (2 subgoals):\n 1. \\<And>S G \\<Pi>.\n       \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n        \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = 0 + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "have \"terminals G = V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. terminals G = V", "by (unfold G_def \\<open>E=[]\\<close>, rule no_edges_imp_all_nodes_terminal)"], ["proof (state)\nthis:\n  terminals G = V\n\ngoal (2 subgoals):\n 1. \\<And>S G \\<Pi>.\n       \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n        \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = 0 + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "have \"{} <+> {} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} <+> {} = {}", "by auto"], ["proof (state)\nthis:\n  {} <+> {} = {}\n\ngoal (2 subgoals):\n 1. \\<And>S G \\<Pi>.\n       \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n        \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = 0 + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "have \"lins2 S G = { [] }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lins2 S G = {[]}", "apply (unfold G_def \\<open>S=V\\<close> \\<open>E=[]\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. lins2 V (Graph V \\<Lambda> []) = {[]}", "apply (unfold lins2_def, auto simp add: \\<open>{} <+> {} = {}\\<close>)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  lins2 S G = {[]}\n\ngoal (2 subgoals):\n 1. \\<And>S G \\<Pi>.\n       \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n        \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = 0 + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "hence \\<Pi>_def: \"\\<Pi> = \\<lbrace> initial_ps2 S G \\<rbrace>\""], ["proof (prove)\nusing this:\n  lins2 S G = {[]}\n\ngoal (1 subgoal):\n 1. \\<Pi> = \\<lbrace> initial_ps2 S G \\<rbrace>", "using \"0.prems\"(3)"], ["proof (prove)\nusing this:\n  lins2 S G = {[]}\n  \\<Pi> \\<in> ps_chains2 S G\n\ngoal (1 subgoal):\n 1. \\<Pi> = \\<lbrace> initial_ps2 S G \\<rbrace>", "by (auto simp add: ps_chains2_def mk_ps_chain_def)"], ["proof (state)\nthis:\n  \\<Pi> = \\<lbrace> initial_ps2 S G \\<rbrace>\n\ngoal (2 subgoals):\n 1. \\<And>S G \\<Pi>.\n       \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n        \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = 0 + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "apply (intro conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. wf_ps_chain \\<Pi>\n 2. post \\<Pi> = [ terminals G |=> Bot ]", "apply (unfold \\<Pi>_def wf_ps_chain_def, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. initial_ps2 S G = [ terminals G |=> Bot ]", "apply (unfold post.simps initial_ps2_def \\<open>initials G = V\\<close> \\<open>terminals G = V\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [ V |-| S |=> Top ] ++\\<^sub>f [ S |=> Bot ] = [ V |=> Bot ]", "apply (unfold \\<open>S=V\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [ V |-| V |=> Top ] ++\\<^sub>f [ V |=> Bot ] = [ V |=> Bot ]", "apply (subgoal_tac \"V - V = {||}\", simp_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n\ngoal (1 subgoal):\n 1. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>?S |\\<subseteq>| initials ?G; wf_dia ?G;\n   ?\\<Pi> \\<in> ps_chains2 ?S ?G;\n   fcard ?G^V + length ?G^E = k + fcard ?S\\<rbrakk>\n  \\<Longrightarrow> wf_ps_chain ?\\<Pi> \\<and>\n                    post ?\\<Pi> = [ terminals ?G |=> Bot ]\n  S |\\<subseteq>| initials G\n  wf_dia G\n  \\<Pi> \\<in> ps_chains2 S G\n  fcard G^V + length G^E = Suc k + fcard S\n\ngoal (1 subgoal):\n 1. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "obtain V \\<Lambda> E where G_def: \"G = Graph V \\<Lambda> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>V \\<Lambda> E.\n        G = Graph V \\<Lambda> E \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis diagram.exhaust)"], ["proof (state)\nthis:\n  G = Graph V \\<Lambda> E\n\ngoal (1 subgoal):\n 1. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "from Suc.prems(3)"], ["proof (chain)\npicking this:\n  \\<Pi> \\<in> ps_chains2 S G", "obtain \\<pi> where\n    \\<Pi>_def: \"\\<Pi> = mk_ps_chain \\<lbrace> initial_ps2 S G \\<rbrace> \\<pi>\" and\n    \\<pi>_in: \"\\<pi> \\<in> lins2 S G\""], ["proof (prove)\nusing this:\n  \\<Pi> \\<in> ps_chains2 S G\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<Pi> =\n                 mk_ps_chain \\<lbrace> initial_ps2 S G \\<rbrace> \\<pi>;\n         \\<pi> \\<in> lins2 S G\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: ps_chains2_def)"], ["proof (state)\nthis:\n  \\<Pi> = mk_ps_chain \\<lbrace> initial_ps2 S G \\<rbrace> \\<pi>\n  \\<pi> \\<in> lins2 S G\n\ngoal (1 subgoal):\n 1. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "note lins2 = lins2D[OF \\<pi>_in]"], ["proof (state)\nthis:\n  distinct \\<pi>\n  set \\<pi> = (fset G^V - fset S) <+> set G^E\n  \\<lbrakk>?i < length \\<pi>; ?j < length \\<pi>; \\<pi> ! ?i = Inl ?v;\n   \\<pi> ! ?j = Inr ?e; ?v |\\<in>| fst3 ?e\\<rbrakk>\n  \\<Longrightarrow> ?i < ?j\n  \\<lbrakk>?j < length \\<pi>; ?k < length \\<pi>; \\<pi> ! ?j = Inr ?e;\n   \\<pi> ! ?k = Inl ?w; ?w |\\<in>| thd3 ?e\\<rbrakk>\n  \\<Longrightarrow> ?j < ?k\n\ngoal (1 subgoal):\n 1. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "have \"S |\\<subseteq>| V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S |\\<subseteq>| V", "using Suc.prems(1) initials_in_vertices[of \"G\"]"], ["proof (prove)\nusing this:\n  S |\\<subseteq>| initials G\n  initials G |\\<subseteq>| G^V\n\ngoal (1 subgoal):\n 1. S |\\<subseteq>| V", "by (auto simp add: G_def)"], ["proof (state)\nthis:\n  S |\\<subseteq>| V\n\ngoal (1 subgoal):\n 1. \\<And>k S G \\<Pi>.\n       \\<lbrakk>\\<And>S G \\<Pi>.\n                   \\<lbrakk>S |\\<subseteq>| initials G; wf_dia G;\n                    \\<Pi> \\<in> ps_chains2 S G;\n                    fcard G^V + length G^E = k + fcard S\\<rbrakk>\n                   \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                                     post \\<Pi> = [ terminals G |=> Bot ];\n        S |\\<subseteq>| initials G; wf_dia G; \\<Pi> \\<in> ps_chains2 S G;\n        fcard G^V + length G^E = Suc k + fcard S\\<rbrakk>\n       \\<Longrightarrow> wf_ps_chain \\<Pi> \\<and>\n                         post \\<Pi> = [ terminals G |=> Bot ]", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "proof (cases \\<pi>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<pi> = [] \\<Longrightarrow>\n    wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>a list.\n       \\<pi> = a # list \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "case Nil"], ["proof (state)\nthis:\n  \\<pi> = []\n\ngoal (2 subgoals):\n 1. \\<pi> = [] \\<Longrightarrow>\n    wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>a list.\n       \\<pi> = a # list \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "from \\<pi>_in"], ["proof (chain)\npicking this:\n  \\<pi> \\<in> lins2 S G", "have \"V = S\" \"E = []\""], ["proof (prove)\nusing this:\n  \\<pi> \\<in> lins2 S G\n\ngoal (1 subgoal):\n 1. V = S &&& E = []", "apply (-, unfold \\<open>\\<pi> = []\\<close> lins2_def, simp_all)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>{} = (fset G^V - fset S) <+> set G^E;\n     \\<pi> \\<in> lins2 S G\\<rbrakk>\n    \\<Longrightarrow> V = S\n 2. \\<lbrakk>{} = (fset G^V - fset S) <+> set G^E;\n     \\<pi> \\<in> lins2 S G\\<rbrakk>\n    \\<Longrightarrow> E = []", "apply (unfold empty_eq_Plus_conv)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fset G^V - fset S = {} \\<and> set G^E = {};\n     \\<pi> \\<in> lins2 S G\\<rbrakk>\n    \\<Longrightarrow> V = S\n 2. \\<lbrakk>fset G^V - fset S = {} \\<and> set G^E = {};\n     \\<pi> \\<in> lins2 S G\\<rbrakk>\n    \\<Longrightarrow> E = []", "apply (unfold G_def vertices.simps edges.simps, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<pi> \\<in> lins2 S (Graph V \\<Lambda> []);\n        fset V \\<subseteq> fset S; E = []; x \\<in> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset V", "by (metis \\<open>S |\\<subseteq>| V\\<close> less_eq_fset.rep_eq subset_antisym)"], ["proof (state)\nthis:\n  V = S\n  E = []\n\ngoal (2 subgoals):\n 1. \\<pi> = [] \\<Longrightarrow>\n    wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>a list.\n       \\<pi> = a # list \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "with Suc.prems(4)"], ["proof (chain)\npicking this:\n  fcard G^V + length G^E = Suc k + fcard S\n  V = S\n  E = []", "have False"], ["proof (prove)\nusing this:\n  fcard G^V + length G^E = Suc k + fcard S\n  V = S\n  E = []\n\ngoal (1 subgoal):\n 1. False", "by (simp add: G_def)"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<pi> = [] \\<Longrightarrow>\n    wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>a list.\n       \\<pi> = a # list \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "by auto"], ["proof (state)\nthis:\n  wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<pi> = a # list \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<pi> = a # list \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "case (Cons x \\<pi>')"], ["proof (state)\nthis:\n  \\<pi> = x # \\<pi>'\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<pi> = a # list \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "note \\<pi>_def = this"], ["proof (state)\nthis:\n  \\<pi> = x # \\<pi>'\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<pi> = a # list \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "proof (cases x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a.\n       x = Inl a \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "case (Inl v)"], ["proof (state)\nthis:\n  x = Inl v\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       x = Inl a \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "note x_def = this"], ["proof (state)\nthis:\n  x = Inl v\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       x = Inl a \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "have \"v |\\<notin>| S \\<and> v |\\<in>| V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v |\\<notin>| S \\<and> v |\\<in>| V", "apply (subgoal_tac \"v \\<in> fset V - fset S\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. v \\<in> fset V - fset S \\<Longrightarrow>\n    v |\\<notin>| S \\<and> v |\\<in>| V\n 2. v \\<in> fset V - fset S", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> fset V - fset S", "apply (subgoal_tac \"Inl v \\<in> (fset V - fset S) <+> set E\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. Inl v \\<in> (fset V - fset S) <+> set E \\<Longrightarrow>\n    v \\<in> fset V - fset S\n 2. Inl v \\<in> (fset V - fset S) <+> set E", "apply (metis Inl_inject Inr_not_Inl PlusE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inl v \\<in> (fset V - fset S) <+> set E", "apply (metis lins2(1) lins2(2) Cons G_def Inl distinct.simps(2)\n        distinct_length_2_or_more edges.simps vertices.simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  v |\\<notin>| S \\<and> v |\\<in>| V\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       x = Inl a \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "hence v_notin_S: \"v |\\<notin>| S\" and v_in_V: \"v |\\<in>| V\""], ["proof (prove)\nusing this:\n  v |\\<notin>| S \\<and> v |\\<in>| V\n\ngoal (1 subgoal):\n 1. v |\\<notin>| S &&& v |\\<in>| V", "by auto"], ["proof (state)\nthis:\n  v |\\<notin>| S\n  v |\\<in>| V\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       x = Inl a \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "have v_initial_not_S: \"v |\\<in>| initials G - S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v |\\<in>| initials G |-| S", "apply (simp only: G_def initials_def vertices.simps edges.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. v |\\<in>|\n    ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e) V |-| S", "apply (simp only: fminus_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. v |\\<in>|\n    ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e) V \\<and>\n    v |\\<notin>| S", "apply (simp only: conj_commute, intro conjI, rule v_notin_S)"], ["proof (prove)\ngoal (1 subgoal):\n 1. v |\\<in>|\n    ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e) V", "apply (subgoal_tac\n        \"v \\<in> fset (ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e) V)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. v \\<in> fset\n             (ffilter\n               (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n               V) \\<Longrightarrow>\n    v |\\<in>|\n    ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e) V\n 2. v \\<in> fset\n             (ffilter\n               (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e) V)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> fset\n             (ffilter\n               (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e) V)", "apply (simp only: filter_fset, simp, simp only: conj_commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> fset V \\<and> (\\<forall>e\\<in>set E. v \\<notin> fset (thd3 e))", "apply (intro conjI ballI notI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. v \\<in> fset V\n 2. \\<And>e.\n       \\<lbrakk>e \\<in> set E; v \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (insert v_in_V, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<in> set E; v \\<in> fset (thd3 e); v |\\<in>| V\\<rbrakk>\n       \\<Longrightarrow> False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<in> set E; v \\<in> fset (thd3 e); v |\\<in>| V\\<rbrakk>\n       \\<Longrightarrow> False", "fix e :: edge"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<in> set E; v \\<in> fset (thd3 e); v |\\<in>| V\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"v \\<in> fset (thd3 e)\""], ["proof (state)\nthis:\n  v \\<in> fset (thd3 e)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<in> set E; v \\<in> fset (thd3 e); v |\\<in>| V\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v \\<in> fset (thd3 e)", "have \"v |\\<in>| (thd3 e)\""], ["proof (prove)\nusing this:\n  v \\<in> fset (thd3 e)\n\ngoal (1 subgoal):\n 1. v |\\<in>| thd3 e", "by auto"], ["proof (state)\nthis:\n  v |\\<in>| thd3 e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<in> set E; v \\<in> fset (thd3 e); v |\\<in>| V\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"e \\<in> set E\""], ["proof (state)\nthis:\n  e \\<in> set E\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<in> set E; v \\<in> fset (thd3 e); v |\\<in>| V\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"Inr e \\<in> set \\<pi>\""], ["proof (prove)\nusing this:\n  e \\<in> set E\n\ngoal (1 subgoal):\n 1. Inr e \\<in> set \\<pi>", "using lins2(2)"], ["proof (prove)\nusing this:\n  e \\<in> set E\n  set \\<pi> = (fset G^V - fset S) <+> set G^E\n\ngoal (1 subgoal):\n 1. Inr e \\<in> set \\<pi>", "by (auto simp add: G_def)"], ["proof (state)\nthis:\n  Inr e \\<in> set \\<pi>\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<in> set E; v \\<in> fset (thd3 e); v |\\<in>| V\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Inr e \\<in> set \\<pi>", "obtain j where\n          \"j < length \\<pi>\" \"0 < length \\<pi>\" \"\\<pi>!j = Inr e\" \"\\<pi>!0 = Inl v\""], ["proof (prove)\nusing this:\n  Inr e \\<in> set \\<pi>\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>j < length \\<pi>; 0 < length \\<pi>; \\<pi> ! j = Inr e;\n         \\<pi> ! 0 = Inl v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis \\<pi>_def x_def in_set_conv_nth length_pos_if_in_set nth_Cons_0)"], ["proof (state)\nthis:\n  j < length \\<pi>\n  0 < length \\<pi>\n  \\<pi> ! j = Inr e\n  \\<pi> ! 0 = Inl v\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<in> set E; v \\<in> fset (thd3 e); v |\\<in>| V\\<rbrakk>\n       \\<Longrightarrow> False", "with lins2(4)[OF this \\<open>v |\\<in>| (thd3 e)\\<close>]"], ["proof (chain)\npicking this:\n  j < 0\n  j < length \\<pi>\n  0 < length \\<pi>\n  \\<pi> ! j = Inr e\n  \\<pi> ! 0 = Inl v", "show False"], ["proof (prove)\nusing this:\n  j < 0\n  j < length \\<pi>\n  0 < length \\<pi>\n  \\<pi> ! j = Inr e\n  \\<pi> ! 0 = Inl v\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v |\\<in>| initials G |-| S\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       x = Inl a \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "define S' where \"S' = {|v|} |\\<union>| S\""], ["proof (state)\nthis:\n  S' = {|v|} |\\<union>| S\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       x = Inl a \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "define \\<Pi>' where \"\\<Pi>' = mk_ps_chain \\<lbrace> initial_ps2 S' G \\<rbrace> \\<pi>'\""], ["proof (state)\nthis:\n  \\<Pi>' = mk_ps_chain \\<lbrace> initial_ps2 S' G \\<rbrace> \\<pi>'\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       x = Inl a \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "hence pre_\\<Pi>': \"pre \\<Pi>' = initial_ps2 S' G\""], ["proof (prove)\nusing this:\n  \\<Pi>' = mk_ps_chain \\<lbrace> initial_ps2 S' G \\<rbrace> \\<pi>'\n\ngoal (1 subgoal):\n 1. pre \\<Pi>' = initial_ps2 S' G", "by (metis pre.simps(1) pre_mk_ps_chain)"], ["proof (state)\nthis:\n  pre \\<Pi>' = initial_ps2 S' G\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       x = Inl a \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "define \\<sigma> where \"\\<sigma> = [ initials G - ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f [ S |=> Bot ]\""], ["proof (state)\nthis:\n  \\<sigma> =\n  [ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f [ S |=> Bot ]\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       x = Inl a \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "have \"wf_ps_chain \\<Pi>' \\<and> (post \\<Pi>' = [terminals G |=> Bot])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain \\<Pi>' \\<and> post \\<Pi>' = [ terminals G |=> Bot ]", "proof (intro Suc.hyps[of \"S'\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. S' |\\<subseteq>| initials G\n 2. wf_dia G\n 3. \\<Pi>' \\<in> ps_chains2 S' G\n 4. fcard G^V + length G^E = k + fcard S'", "show \"S' |\\<subseteq>| initials G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S' |\\<subseteq>| initials G", "apply (unfold S'_def, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. v \\<in> fset (initials G)\n 2. \\<And>x. x \\<in> fset S \\<Longrightarrow> x \\<in> fset (initials G)", "apply (metis fmember.rep_eq fminus_iff v_initial_not_S)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> fset S \\<Longrightarrow> x \\<in> fset (initials G)", "by (metis Suc.prems(1) fmember.rep_eq fset_rev_mp)"], ["proof (state)\nthis:\n  S' |\\<subseteq>| initials G\n\ngoal (3 subgoals):\n 1. wf_dia G\n 2. \\<Pi>' \\<in> ps_chains2 S' G\n 3. fcard G^V + length G^E = k + fcard S'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. wf_dia G\n 2. \\<Pi>' \\<in> ps_chains2 S' G\n 3. fcard G^V + length G^E = k + fcard S'", "show \"wf_dia G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_dia G", "by (rule Suc.prems(2))"], ["proof (state)\nthis:\n  wf_dia G\n\ngoal (2 subgoals):\n 1. \\<Pi>' \\<in> ps_chains2 S' G\n 2. fcard G^V + length G^E = k + fcard S'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Pi>' \\<in> ps_chains2 S' G\n 2. fcard G^V + length G^E = k + fcard S'", "show \"\\<Pi>' \\<in> ps_chains2 S' G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Pi>' \\<in> ps_chains2 S' G", "apply (unfold ps_chains2_def \\<Pi>'_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_ps_chain \\<lbrace> initial_ps2 S' G \\<rbrace> \\<pi>'\n    \\<in> mk_ps_chain \\<lbrace> initial_ps2 S' G \\<rbrace> ` lins2 S' G", "apply (intro imageI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>' \\<in> lins2 S' G", "apply (unfold S'_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>' \\<in> lins2 ({|v|} |\\<union>| S) G", "apply (intro next_lins2_vertex)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Inl v # \\<pi>' \\<in> lins2 S G\n 2. v |\\<notin>| S", "apply (fold x_def, fold \\<pi>_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<pi> \\<in> lins2 S G\n 2. v |\\<notin>| S", "apply (rule \\<pi>_in)"], ["proof (prove)\ngoal (1 subgoal):\n 1. v |\\<notin>| S", "by (metis v_notin_S)"], ["proof (state)\nthis:\n  \\<Pi>' \\<in> ps_chains2 S' G\n\ngoal (1 subgoal):\n 1. fcard G^V + length G^E = k + fcard S'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. fcard G^V + length G^E = k + fcard S'", "show \"fcard G^V + length G^E = k + fcard S'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fcard G^V + length G^E = k + fcard S'", "apply (unfold S'_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fcard G^V + length G^E = k + fcard ({|v|} |\\<union>| S)", "by (auto simp add: Suc.prems(4) fcard_finsert_disjoint[OF v_notin_S])"], ["proof (state)\nthis:\n  fcard G^V + length G^E = k + fcard S'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wf_ps_chain \\<Pi>' \\<and> post \\<Pi>' = [ terminals G |=> Bot ]\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       x = Inl a \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "hence\n        wf_\\<Pi>': \"wf_ps_chain \\<Pi>'\" and\n        post_\\<Pi>': \"post \\<Pi>' = [terminals G |=> Bot]\""], ["proof (prove)\nusing this:\n  wf_ps_chain \\<Pi>' \\<and> post \\<Pi>' = [ terminals G |=> Bot ]\n\ngoal (1 subgoal):\n 1. wf_ps_chain \\<Pi>' &&& post \\<Pi>' = [ terminals G |=> Bot ]", "by auto"], ["proof (state)\nthis:\n  wf_ps_chain \\<Pi>'\n  post \\<Pi>' = [ terminals G |=> Bot ]\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       x = Inl a \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n 2. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "proof (intro conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. wf_ps_chain \\<Pi>\n 2. post \\<Pi> = [ terminals G |=> Bot ]", "have 1: \"fmdom [ {|v|} |=> Bot ]\n        |\\<inter>| fmdom ([ initials G - ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n     [ S |=> Bot ]) = {||}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmdom [ {|v|} |=> Bot ] |\\<inter>|\n    fmdom\n     ([ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n      [ S |=> Bot ]) =\n    {||}", "by (metis (no_types) fdom_make_fmap fmdom_add\n          bot_least funion_iff finter_finsert_left le_iff_inf\n          fminus_iff finsert_fsubset sup_ge1 v_initial_not_S)"], ["proof (state)\nthis:\n  fmdom [ {|v|} |=> Bot ] |\\<inter>|\n  fmdom\n   ([ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n    [ S |=> Bot ]) =\n  {||}\n\ngoal (2 subgoals):\n 1. wf_ps_chain \\<Pi>\n 2. post \\<Pi> = [ terminals G |=> Bot ]", "show \"wf_ps_chain \\<Pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain \\<Pi>", "using [[unfold_abs_def = false]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain \\<Pi>", "apply (simp only: \\<Pi>_def \\<pi>_def x_def mk_ps_chain_cons)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain\n     (mk_ps_chain\n       (cSnoc \\<lbrace> initial_ps2 S G \\<rbrace> (Inl v)\n         (next_ps (post \\<lbrace> initial_ps2 S G \\<rbrace>) (Inl v)))\n       \\<pi>')", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain\n     (mk_ps_chain\n       (\\<lbrace> initial_ps2 S\n                   G \\<rbrace> \\<cdot> Inl\n  v \\<cdot> \\<lbrace> initial_ps2 S G \\<ominus> {|v|} ++\\<^sub>f\n                      [ {|v|} |=> Bot ] \\<rbrace>)\n       \\<pi>')", "apply (unfold mk_ps_chain_ccons)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain\n     (\\<lbrace> initial_ps2 S\n                 G \\<rbrace> \\<cdot> Inl\nv \\<cdot> mk_ps_chain\n           \\<lbrace> initial_ps2 S G \\<ominus> {|v|} ++\\<^sub>f\n                     [ {|v|} |=> Bot ] \\<rbrace>\n           \\<pi>')", "apply (fold next_initial_ps2_vertex S'_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain\n     (\\<lbrace> initial_ps2 S\n                 G \\<rbrace> \\<cdot> Inl\nv \\<cdot> mk_ps_chain \\<lbrace> initial_ps2 S' G \\<rbrace> \\<pi>')", "apply (fold \\<Pi>'_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain\n     (\\<lbrace> initial_ps2 S G \\<rbrace> \\<cdot> Inl v \\<cdot> \\<Pi>')", "apply (unfold wf_ps_chain_def chain_all.simps conj_commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. chain_all wf_ps_triple \\<Pi>' \\<and>\n    wf_ps_triple (initial_ps2 S G, Inl v, pre \\<Pi>')", "apply (intro conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. chain_all wf_ps_triple \\<Pi>'\n 2. wf_ps_triple (initial_ps2 S G, Inl v, pre \\<Pi>')", "apply (fold wf_ps_chain_def, rule wf_\\<Pi>')"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_triple (initial_ps2 S G, Inl v, pre \\<Pi>')", "apply (intro wf_ps_triple_nodeI exI[of _ \"\\<sigma>\"] conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. v |\\<notin>| fmdom \\<sigma>\n 2. initial_ps2 S G = [ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>\n 3. pre \\<Pi>' = [ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>", "apply (unfold \\<sigma>_def fmdom_add fdom_make_fmap)"], ["proof (prove)\ngoal (3 subgoals):\n 1. v |\\<notin>| initials G |-| ({|v|} |\\<union>| S) |\\<union>| S\n 2. initial_ps2 S G =\n    [ {|v|} |=> Top ] ++\\<^sub>f\n    ([ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n     [ S |=> Bot ])\n 3. pre \\<Pi>' =\n    [ {|v|} |=> Bot ] ++\\<^sub>f\n    ([ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n     [ S |=> Bot ])", "apply (metis finsertI1 fminus_iff funion_iff v_notin_S)"], ["proof (prove)\ngoal (2 subgoals):\n 1. initial_ps2 S G =\n    [ {|v|} |=> Top ] ++\\<^sub>f\n    ([ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n     [ S |=> Bot ])\n 2. pre \\<Pi>' =\n    [ {|v|} |=> Bot ] ++\\<^sub>f\n    ([ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n     [ S |=> Bot ])", "apply (unfold pre_\\<Pi>' initial_ps2_def S'_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. [ initials G |-| S |=> Top ] ++\\<^sub>f [ S |=> Bot ] =\n    [ {|v|} |=> Top ] ++\\<^sub>f\n    ([ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n     [ S |=> Bot ])\n 2. [ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n    [ {|v|} |\\<union>| S |=> Bot ] =\n    [ {|v|} |=> Bot ] ++\\<^sub>f\n    ([ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n     [ S |=> Bot ])", "apply (unfold fmap_add_commute[OF 1])"], ["proof (prove)\ngoal (2 subgoals):\n 1. [ initials G |-| S |=> Top ] ++\\<^sub>f [ S |=> Bot ] =\n    [ {|v|} |=> Top ] ++\\<^sub>f\n    ([ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n     [ S |=> Bot ])\n 2. [ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n    [ {|v|} |\\<union>| S |=> Bot ] =\n    [ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n    [ S |=> Bot ] ++\\<^sub>f\n    [ {|v|} |=> Bot ]", "apply (unfold fmadd_assoc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. [ initials G |-| S |=> Top ] ++\\<^sub>f [ S |=> Bot ] =\n    [ {|v|} |=> Top ] ++\\<^sub>f\n    [ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n    [ S |=> Bot ]\n 2. [ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n    [ {|v|} |\\<union>| S |=> Bot ] =\n    [ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n    [ S |=> Bot ] ++\\<^sub>f\n    [ {|v|} |=> Bot ]", "apply (fold fmadd_assoc[of _ \"[ S |=> Bot ]\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. [ initials G |-| S |=> Top ] ++\\<^sub>f [ S |=> Bot ] =\n    [ {|v|} |=> Top ] ++\\<^sub>f\n    [ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n    [ S |=> Bot ]\n 2. [ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n    [ {|v|} |\\<union>| S |=> Bot ] =\n    [ initials G |-| ({|v|} |\\<union>| S) |=> Top ] ++\\<^sub>f\n    ([ S |=> Bot ] ++\\<^sub>f [ {|v|} |=> Bot ])", "apply (unfold make_fmap_union sup.commute[of \"{|v|}\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. [ initials G |-| S |=> Top ] ++\\<^sub>f [ S |=> Bot ] =\n    [ initials G |-| (S |\\<union>| {|v|}) |\\<union>|\n      {|v|} |=> Top ] ++\\<^sub>f\n    [ S |=> Bot ]\n 2. [ initials G |-| (S |\\<union>| {|v|}) |=> Top ] ++\\<^sub>f\n    [ S |\\<union>| {|v|} |=> Bot ] =\n    [ initials G |-| (S |\\<union>| {|v|}) |=> Top ] ++\\<^sub>f\n    [ S |\\<union>| {|v|} |=> Bot ]", "apply (unfold fminus_funion)"], ["proof (prove)\ngoal (2 subgoals):\n 1. [ initials G |-| S |=> Top ] ++\\<^sub>f [ S |=> Bot ] =\n    [ initials G |-| S |\\<inter>| (initials G |-| {|v|}) |\\<union>|\n      {|v|} |=> Top ] ++\\<^sub>f\n    [ S |=> Bot ]\n 2. [ initials G |-| S |\\<inter>|\n      (initials G |-| {|v|}) |=> Top ] ++\\<^sub>f\n    [ S |\\<union>| {|v|} |=> Bot ] =\n    [ initials G |-| S |\\<inter>|\n      (initials G |-| {|v|}) |=> Top ] ++\\<^sub>f\n    [ S |\\<union>| {|v|} |=> Bot ]", "using v_initial_not_S"], ["proof (prove)\nusing this:\n  v |\\<in>| initials G |-| S\n\ngoal (2 subgoals):\n 1. [ initials G |-| S |=> Top ] ++\\<^sub>f [ S |=> Bot ] =\n    [ initials G |-| S |\\<inter>| (initials G |-| {|v|}) |\\<union>|\n      {|v|} |=> Top ] ++\\<^sub>f\n    [ S |=> Bot ]\n 2. [ initials G |-| S |\\<inter>|\n      (initials G |-| {|v|}) |=> Top ] ++\\<^sub>f\n    [ S |\\<union>| {|v|} |=> Bot ] =\n    [ initials G |-| S |\\<inter>|\n      (initials G |-| {|v|}) |=> Top ] ++\\<^sub>f\n    [ S |\\<union>| {|v|} |=> Bot ]", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v \\<in> fset (initials G); v \\<notin> fset S\\<rbrakk>\n    \\<Longrightarrow> [ initials G |-| S |=> Top ] ++\\<^sub>f\n                      [ S |=> Bot ] =\n                      [ finsert v\n                         (initials G |-| S |\\<inter>|\n                          (initials G |-| {|v|})) |=> Top ] ++\\<^sub>f\n                      [ S |=> Bot ]", "by (metis (hide_lams, no_types) finsert_absorb finsert_fminus_single finter_fminus\n            inf_commute inf_idem v_initial_not_S)"], ["proof (state)\nthis:\n  wf_ps_chain \\<Pi>\n\ngoal (1 subgoal):\n 1. post \\<Pi> = [ terminals G |=> Bot ]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. post \\<Pi> = [ terminals G |=> Bot ]", "show \"post \\<Pi> = [ terminals G |=> Bot ]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. post \\<Pi> = [ terminals G |=> Bot ]", "apply (unfold \\<Pi>_def \\<pi>_def x_def mk_ps_chain_cons, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. post\n     (mk_ps_chain\n       (\\<lbrace> initial_ps2 S\n                   G \\<rbrace> \\<cdot> Inl\n  v \\<cdot> \\<lbrace> initial_ps2 S G \\<ominus> {|v|} ++\\<^sub>f\n                      [ {|v|} |=> Bot ] \\<rbrace>)\n       \\<pi>') =\n    [ terminals G |=> Bot ]", "apply (unfold mk_ps_chain_ccons post.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. post\n     (mk_ps_chain\n       \\<lbrace> initial_ps2 S G \\<ominus> {|v|} ++\\<^sub>f\n                 [ {|v|} |=> Bot ] \\<rbrace>\n       \\<pi>') =\n    [ terminals G |=> Bot ]", "apply (fold next_initial_ps2_vertex S'_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. post (mk_ps_chain \\<lbrace> initial_ps2 S' G \\<rbrace> \\<pi>') =\n    [ terminals G |=> Bot ]", "apply (fold \\<Pi>'_def, rule post_\\<Pi>')"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  post \\<Pi> = [ terminals G |=> Bot ]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "case (Inr e)"], ["proof (state)\nthis:\n  x = Inr e\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "note x_def = this"], ["proof (state)\nthis:\n  x = Inr e\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "define vs where \"vs = fst3 e\""], ["proof (state)\nthis:\n  vs = fst3 e\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "define ws where \"ws = thd3 e\""], ["proof (state)\nthis:\n  ws = thd3 e\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "obtain c where e_def: \"e = (vs, c, ws)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c. e = (vs, c, ws) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis vs_def ws_def fst3_simp thd3_simp prod_cases3)"], ["proof (state)\nthis:\n  e = (vs, c, ws)\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "have \"linearity E\" and \"acyclicity E\" and\n        e_in_V: \"\\<And>e. e \\<in> set E \\<Longrightarrow> fst3 e |\\<union>| thd3 e |\\<subseteq>| V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. linearity E &&&\n    acyclicity E &&&\n    (\\<And>e.\n        e \\<in> set E \\<Longrightarrow>\n        fst3 e |\\<union>| thd3 e |\\<subseteq>| V)", "by (insert Suc.prems(2) wf_dia_inv, unfold G_def, blast)+"], ["proof (state)\nthis:\n  linearity E\n  acyclicity E\n  ?e \\<in> set E \\<Longrightarrow>\n  fst3 ?e |\\<union>| thd3 ?e |\\<subseteq>| V\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "note lin = linearityD[OF this(1)]"], ["proof (state)\nthis:\n  distinct E\n  \\<lbrakk>?e \\<in> set E; ?f \\<in> set E; ?e \\<noteq> ?f\\<rbrakk>\n  \\<Longrightarrow> fst3 ?e |\\<inter>| fst3 ?f = {||} \\<and>\n                    thd3 ?e |\\<inter>| thd3 ?f = {||}\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "have acy: \"\\<And>e. e \\<in> set E \\<Longrightarrow> fst3 e |\\<inter>| thd3 e = {||}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e. e \\<in> set E \\<Longrightarrow> fst3 e |\\<inter>| thd3 e = {||}", "apply (fold fset_cong, insert \\<open>acyclicity E\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<in> set E; acyclicity E\\<rbrakk>\n       \\<Longrightarrow> fset (fst3 e |\\<inter>| thd3 e) = fset {||}", "apply (unfold acyclicity_def acyclic_def, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ?e \\<in> set E \\<Longrightarrow> fst3 ?e |\\<inter>| thd3 ?e = {||}\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "note lins = lins2D[OF \\<pi>_in]"], ["proof (state)\nthis:\n  distinct \\<pi>\n  set \\<pi> = (fset G^V - fset S) <+> set G^E\n  \\<lbrakk>?i < length \\<pi>; ?j < length \\<pi>; \\<pi> ! ?i = Inl ?v;\n   \\<pi> ! ?j = Inr ?e; ?v |\\<in>| fst3 ?e\\<rbrakk>\n  \\<Longrightarrow> ?i < ?j\n  \\<lbrakk>?j < length \\<pi>; ?k < length \\<pi>; \\<pi> ! ?j = Inr ?e;\n   \\<pi> ! ?k = Inl ?w; ?w |\\<in>| thd3 ?e\\<rbrakk>\n  \\<Longrightarrow> ?j < ?k\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "have e_in_E: \"e \\<in> set E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<in> set E", "apply (subgoal_tac \"set \\<pi> = (fset G^V - fset S) <+> set G^E\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. set \\<pi> = (fset G^V - fset S) <+> set G^E \\<Longrightarrow>\n    e \\<in> set E\n 2. set \\<pi> = (fset G^V - fset S) <+> set G^E", "apply (unfold \\<pi>_def x_def G_def edges.simps, auto)[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. set \\<pi> = (fset G^V - fset S) <+> set G^E", "apply (simp add: lins(2))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  e \\<in> set E\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "have vs_in_S: \"vs |\\<subseteq>| S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs |\\<subseteq>| S", "apply (insert e_in_V[OF e_in_E])"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst3 e |\\<union>| thd3 e |\\<subseteq>| V \\<Longrightarrow>\n    vs |\\<subseteq>| S", "apply (unfold less_eq_fset.rep_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V \\<Longrightarrow>\n    fset vs \\<subseteq> fset S", "apply (intro subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n        x \\<in> fset vs\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset S", "apply (unfold vs_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n        x \\<in> fset (fst3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset S", "apply (rule ccontr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n        x \\<in> fset (fst3 e); x \\<notin> fset S\\<rbrakk>\n       \\<Longrightarrow> False", "apply (subgoal_tac \"x \\<in> fset V\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n        x \\<in> fset (fst3 e); x \\<notin> fset S; x \\<in> fset V\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       \\<lbrakk>fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n        x \\<in> fset (fst3 e); x \\<notin> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset V", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n        x \\<in> fset (fst3 e); x \\<notin> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset V\n 2. \\<And>x.\n       \\<lbrakk>fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n        x \\<in> fset (fst3 e); x \\<notin> fset S; x \\<in> fset V\\<rbrakk>\n       \\<Longrightarrow> False", "apply (auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> fset (fst3 e); x \\<notin> fset S; x \\<in> fset V;\n        fset (fst3 e) \\<subseteq> fset V;\n        fset (thd3 e) \\<subseteq> fset V\\<rbrakk>\n       \\<Longrightarrow> False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> fset (fst3 e); x \\<notin> fset S; x \\<in> fset V;\n        fset (fst3 e) \\<subseteq> fset V;\n        fset (thd3 e) \\<subseteq> fset V\\<rbrakk>\n       \\<Longrightarrow> False", "fix v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> fset (fst3 e); x \\<notin> fset S; x \\<in> fset V;\n        fset (fst3 e) \\<subseteq> fset V;\n        fset (thd3 e) \\<subseteq> fset V\\<rbrakk>\n       \\<Longrightarrow> False", "assume a: \"v \\<in> fset (fst3 e)\""], ["proof (state)\nthis:\n  v \\<in> fset (fst3 e)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> fset (fst3 e); x \\<notin> fset S; x \\<in> fset V;\n        fset (fst3 e) \\<subseteq> fset V;\n        fset (thd3 e) \\<subseteq> fset V\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"v \\<notin> fset S\" and \"v \\<in> fset V\""], ["proof (state)\nthis:\n  v \\<notin> fset S\n  v \\<in> fset V\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> fset (fst3 e); x \\<notin> fset S; x \\<in> fset V;\n        fset (fst3 e) \\<subseteq> fset V;\n        fset (thd3 e) \\<subseteq> fset V\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"Inl v \\<in> set \\<pi>\""], ["proof (prove)\nusing this:\n  v \\<notin> fset S\n  v \\<in> fset V\n\ngoal (1 subgoal):\n 1. Inl v \\<in> set \\<pi>", "by (metis (lifting) DiffI G_def InlI lins(2) vertices.simps)"], ["proof (state)\nthis:\n  Inl v \\<in> set \\<pi>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> fset (fst3 e); x \\<notin> fset S; x \\<in> fset V;\n        fset (fst3 e) \\<subseteq> fset V;\n        fset (thd3 e) \\<subseteq> fset V\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Inl v \\<in> set \\<pi>", "obtain i where\n          \"i < length \\<pi>\" \"0 < length \\<pi>\" \"\\<pi>!i = Inl v\"  \"\\<pi>!0 = Inr e\""], ["proof (prove)\nusing this:\n  Inl v \\<in> set \\<pi>\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < length \\<pi>; 0 < length \\<pi>; \\<pi> ! i = Inl v;\n         \\<pi> ! 0 = Inr e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Cons Inr in_set_conv_nth length_pos_if_in_set nth_Cons_0)"], ["proof (state)\nthis:\n  i < length \\<pi>\n  0 < length \\<pi>\n  \\<pi> ! i = Inl v\n  \\<pi> ! 0 = Inr e\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> fset (fst3 e); x \\<notin> fset S; x \\<in> fset V;\n        fset (fst3 e) \\<subseteq> fset V;\n        fset (thd3 e) \\<subseteq> fset V\\<rbrakk>\n       \\<Longrightarrow> False", "from lins(3)[OF this]"], ["proof (chain)\npicking this:\n  v |\\<in>| fst3 e \\<Longrightarrow> i < 0", "show \"False\""], ["proof (prove)\nusing this:\n  v |\\<in>| fst3 e \\<Longrightarrow> i < 0\n\ngoal (1 subgoal):\n 1. False", "by (auto simp add: a)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  vs |\\<subseteq>| S\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "have \"ws |\\<inter>| (initials G) = {||}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ws |\\<inter>| initials G = {||}", "apply (insert e_in_V[OF e_in_E])"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst3 e |\\<union>| thd3 e |\\<subseteq>| V \\<Longrightarrow>\n    ws |\\<inter>| initials G = {||}", "apply (unfold initials_def less_eq_fset.rep_eq fmember.rep_eq, fold fset_cong)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V \\<Longrightarrow>\n    fset\n     (ws |\\<inter>|\n      ffilter (\\<lambda>v. \\<forall>e\\<in>set G^E. v \\<notin> fset (thd3 e))\n       G^V) =\n    fset {||}", "apply (unfold ws_def G_def, auto simp add: e_in_E)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ws |\\<inter>| initials G = {||}\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "define S' where \"S' = S - vs\""], ["proof (state)\nthis:\n  S' = S |-| vs\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "define V' where \"V' = V - vs\""], ["proof (state)\nthis:\n  V' = V |-| vs\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "define E' where \"E' = removeAll e E\""], ["proof (state)\nthis:\n  E' = removeAll e E\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "define G' where \"G' = Graph V' \\<Lambda> E'\""], ["proof (state)\nthis:\n  G' = Graph V' \\<Lambda> E'\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "define \\<Pi>' where \"\\<Pi>' = mk_ps_chain \\<lbrace> initial_ps2 S' G' \\<rbrace> \\<pi>'\""], ["proof (state)\nthis:\n  \\<Pi>' = mk_ps_chain \\<lbrace> initial_ps2 S' G' \\<rbrace> \\<pi>'\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "hence pre_\\<Pi>': \"pre \\<Pi>' = initial_ps2 S' G'\""], ["proof (prove)\nusing this:\n  \\<Pi>' = mk_ps_chain \\<lbrace> initial_ps2 S' G' \\<rbrace> \\<pi>'\n\ngoal (1 subgoal):\n 1. pre \\<Pi>' = initial_ps2 S' G'", "by (metis pre.simps(1) pre_mk_ps_chain)"], ["proof (state)\nthis:\n  pre \\<Pi>' = initial_ps2 S' G'\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "define \\<sigma> where \"\\<sigma> = [ initials G - S |=> Top ] ++\\<^sub>f [ S - vs |=> Bot ]\""], ["proof (state)\nthis:\n  \\<sigma> = [ initials G |-| S |=> Top ] ++\\<^sub>f [ S |-| vs |=> Bot ]\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "have next_initial_ps2: \"initial_ps2 S' G'\n        = initial_ps2 S G \\<ominus> vs ++\\<^sub>f [ws |=> Top]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initial_ps2 S' G' =\n    initial_ps2 S G \\<ominus> vs ++\\<^sub>f [ ws |=> Top ]", "using next_initial_ps2_edge[OF G_def _ _ _ e_in_E _ Suc.prems(1)\n        Suc.prems(2)] G'_def E'_def vs_def ws_def V'_def vs_in_S S'_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?G' = Graph ?V' \\<Lambda> ?E'; ?V' = V |-| fst3 e;\n   ?E' = removeAll e E; fst3 e |\\<subseteq>| S\\<rbrakk>\n  \\<Longrightarrow> initial_ps2 (S |-| fst3 e) ?G' =\n                    initial_ps2 S G \\<ominus> fst3 e ++\\<^sub>f\n                    [ thd3 e |=> Top ]\n  G' = Graph V' \\<Lambda> E'\n  E' = removeAll e E\n  vs = fst3 e\n  ws = thd3 e\n  V' = V |-| vs\n  vs |\\<subseteq>| S\n  S' = S |-| vs\n\ngoal (1 subgoal):\n 1. initial_ps2 S' G' =\n    initial_ps2 S G \\<ominus> vs ++\\<^sub>f [ ws |=> Top ]", "by auto"], ["proof (state)\nthis:\n  initial_ps2 S' G' = initial_ps2 S G \\<ominus> vs ++\\<^sub>f [ ws |=> Top ]\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "have \"wf_ps_chain \\<Pi>' \\<and> post \\<Pi>' = [ terminals G' |=> Bot ]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain \\<Pi>' \\<and> post \\<Pi>' = [ terminals G' |=> Bot ]", "proof (intro Suc.hyps[of \"S'\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. S' |\\<subseteq>| initials G'\n 2. wf_dia G'\n 3. \\<Pi>' \\<in> ps_chains2 S' G'\n 4. fcard G'^V + length G'^E = k + fcard S'", "show \"S' |\\<subseteq>| initials G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S' |\\<subseteq>| initials G'", "apply (insert Suc.prems(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. S |\\<subseteq>| initials G \\<Longrightarrow>\n    S' |\\<subseteq>| initials G'", "apply (unfold G'_def G_def initials_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. S |\\<subseteq>|\n    ffilter\n     (\\<lambda>v.\n         \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E. v |\\<notin>| thd3 e)\n     (Graph V \\<Lambda> E)^V \\<Longrightarrow>\n    S' |\\<subseteq>|\n    ffilter\n     (\\<lambda>v.\n         \\<forall>e\\<in>set (Graph V' \\<Lambda> E')^E. v |\\<notin>| thd3 e)\n     (Graph V' \\<Lambda> E')^V", "apply (unfold less_eq_fset.rep_eq S'_def E'_def V'_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fset S\n    \\<subseteq> fset\n                 (ffilter\n                   (\\<lambda>v.\n                       \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                          v |\\<notin>| thd3 e)\n                   (Graph V \\<Lambda> E)^V) \\<Longrightarrow>\n    fset (S |-| vs)\n    \\<subseteq> fset\n                 (ffilter\n                   (\\<lambda>v.\n                       \\<forall>e\\<in>set\n (Graph (V |-| vs) \\<Lambda> (removeAll e E))^E.\n                          v |\\<notin>| thd3 e)\n                   (Graph (V |-| vs) \\<Lambda> (removeAll e E))^V)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  S' |\\<subseteq>| initials G'\n\ngoal (3 subgoals):\n 1. wf_dia G'\n 2. \\<Pi>' \\<in> ps_chains2 S' G'\n 3. fcard G'^V + length G'^E = k + fcard S'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. wf_dia G'\n 2. \\<Pi>' \\<in> ps_chains2 S' G'\n 3. fcard G'^V + length G'^E = k + fcard S'", "from Suc.prems(2)"], ["proof (chain)\npicking this:\n  wf_dia G", "have \"wf_dia (Graph V \\<Lambda> E)\""], ["proof (prove)\nusing this:\n  wf_dia G\n\ngoal (1 subgoal):\n 1. wf_dia (Graph V \\<Lambda> E)", "by (unfold G_def)"], ["proof (state)\nthis:\n  wf_dia (Graph V \\<Lambda> E)\n\ngoal (3 subgoals):\n 1. wf_dia G'\n 2. \\<Pi>' \\<in> ps_chains2 S' G'\n 3. fcard G'^V + length G'^E = k + fcard S'", "note wf_G = wf_dia_inv[OF this]"], ["proof (state)\nthis:\n  \\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v)\n  \\<forall>e\\<in>set E. wf_com (snd3 e)\n  acyclicity E\n  linearity E\n  \\<forall>e\\<in>set E. fst3 e |\\<union>| thd3 e |\\<subseteq>| V\n\ngoal (3 subgoals):\n 1. wf_dia G'\n 2. \\<Pi>' \\<in> ps_chains2 S' G'\n 3. fcard G'^V + length G'^E = k + fcard S'", "show \"wf_dia G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_dia G'", "apply (unfold G'_def V'_def E'_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_dia (Graph (V |-| vs) \\<Lambda> (removeAll e E))", "apply (insert wf_G e_in_E vs_in_S Suc.prems(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E; linearity E;\n     \\<forall>e\\<in>set E. fst3 e |\\<union>| thd3 e |\\<subseteq>| V;\n     e \\<in> set E; vs |\\<subseteq>| S; S |\\<subseteq>| initials G\\<rbrakk>\n    \\<Longrightarrow> wf_dia (Graph (V |-| vs) \\<Lambda> (removeAll e E))", "apply (unfold vs_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E; linearity E;\n     \\<forall>e\\<in>set E. fst3 e |\\<union>| thd3 e |\\<subseteq>| V;\n     e \\<in> set E; fst3 e |\\<subseteq>| S;\n     S |\\<subseteq>| initials G\\<rbrakk>\n    \\<Longrightarrow> wf_dia\n                       (Graph (V |-| fst3 e) \\<Lambda> (removeAll e E))", "apply (intro wf_dia)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E; linearity E;\n     \\<forall>e\\<in>set E. fst3 e |\\<union>| thd3 e |\\<subseteq>| V;\n     e \\<in> set E; fst3 e |\\<subseteq>| S;\n     S |\\<subseteq>| initials G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>e\\<in>set (removeAll e E). wf_com (snd3 e)\n 2. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E; linearity E;\n     \\<forall>e\\<in>set E. fst3 e |\\<union>| thd3 e |\\<subseteq>| V;\n     e \\<in> set E; fst3 e |\\<subseteq>| S;\n     S |\\<subseteq>| initials G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>v\\<in>fset (V |-| fst3 e).\n                         wf_ass (\\<Lambda> v)\n 3. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E; linearity E;\n     \\<forall>e\\<in>set E. fst3 e |\\<union>| thd3 e |\\<subseteq>| V;\n     e \\<in> set E; fst3 e |\\<subseteq>| S;\n     S |\\<subseteq>| initials G\\<rbrakk>\n    \\<Longrightarrow> acyclicity (removeAll e E)\n 4. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E; linearity E;\n     \\<forall>e\\<in>set E. fst3 e |\\<union>| thd3 e |\\<subseteq>| V;\n     e \\<in> set E; fst3 e |\\<subseteq>| S;\n     S |\\<subseteq>| initials G\\<rbrakk>\n    \\<Longrightarrow> linearity (removeAll e E)\n 5. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E; linearity E;\n     \\<forall>e\\<in>set E. fst3 e |\\<union>| thd3 e |\\<subseteq>| V;\n     e \\<in> set E; fst3 e |\\<subseteq>| S;\n     S |\\<subseteq>| initials G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>ea\\<in>set (removeAll e E).\n                         fst3 ea |\\<union>| thd3 ea |\\<subseteq>|\n                         V |-| fst3 e", "apply (unfold linearity_def initials_def G_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E;\n     distinct E \\<and>\n     (\\<forall>e\\<in>set E.\n         \\<forall>f\\<in>set E.\n            e \\<noteq> f \\<longrightarrow>\n            fst3 e |\\<inter>| fst3 f = {||} \\<and>\n            thd3 e |\\<inter>| thd3 f = {||});\n     \\<forall>e\\<in>set E. fst3 e |\\<union>| thd3 e |\\<subseteq>| V;\n     e \\<in> set E; fst3 e |\\<subseteq>| S;\n     S |\\<subseteq>|\n     ffilter\n      (\\<lambda>v.\n          \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E. v |\\<notin>| thd3 e)\n      (Graph V \\<Lambda> E)^V\\<rbrakk>\n    \\<Longrightarrow> \\<forall>e\\<in>set (removeAll e E). wf_com (snd3 e)\n 2. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E;\n     distinct E \\<and>\n     (\\<forall>e\\<in>set E.\n         \\<forall>f\\<in>set E.\n            e \\<noteq> f \\<longrightarrow>\n            fst3 e |\\<inter>| fst3 f = {||} \\<and>\n            thd3 e |\\<inter>| thd3 f = {||});\n     \\<forall>e\\<in>set E. fst3 e |\\<union>| thd3 e |\\<subseteq>| V;\n     e \\<in> set E; fst3 e |\\<subseteq>| S;\n     S |\\<subseteq>|\n     ffilter\n      (\\<lambda>v.\n          \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E. v |\\<notin>| thd3 e)\n      (Graph V \\<Lambda> E)^V\\<rbrakk>\n    \\<Longrightarrow> \\<forall>v\\<in>fset (V |-| fst3 e).\n                         wf_ass (\\<Lambda> v)\n 3. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E;\n     distinct E \\<and>\n     (\\<forall>e\\<in>set E.\n         \\<forall>f\\<in>set E.\n            e \\<noteq> f \\<longrightarrow>\n            fst3 e |\\<inter>| fst3 f = {||} \\<and>\n            thd3 e |\\<inter>| thd3 f = {||});\n     \\<forall>e\\<in>set E. fst3 e |\\<union>| thd3 e |\\<subseteq>| V;\n     e \\<in> set E; fst3 e |\\<subseteq>| S;\n     S |\\<subseteq>|\n     ffilter\n      (\\<lambda>v.\n          \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E. v |\\<notin>| thd3 e)\n      (Graph V \\<Lambda> E)^V\\<rbrakk>\n    \\<Longrightarrow> acyclicity (removeAll e E)\n 4. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E;\n     distinct E \\<and>\n     (\\<forall>e\\<in>set E.\n         \\<forall>f\\<in>set E.\n            e \\<noteq> f \\<longrightarrow>\n            fst3 e |\\<inter>| fst3 f = {||} \\<and>\n            thd3 e |\\<inter>| thd3 f = {||});\n     \\<forall>e\\<in>set E. fst3 e |\\<union>| thd3 e |\\<subseteq>| V;\n     e \\<in> set E; fst3 e |\\<subseteq>| S;\n     S |\\<subseteq>|\n     ffilter\n      (\\<lambda>v.\n          \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E. v |\\<notin>| thd3 e)\n      (Graph V \\<Lambda> E)^V\\<rbrakk>\n    \\<Longrightarrow> distinct (removeAll e E) \\<and>\n                      (\\<forall>ea\\<in>set (removeAll e E).\n                          \\<forall>f\\<in>set (removeAll e E).\n                             ea \\<noteq> f \\<longrightarrow>\n                             fst3 ea |\\<inter>| fst3 f = {||} \\<and>\n                             thd3 ea |\\<inter>| thd3 f = {||})\n 5. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E;\n     distinct E \\<and>\n     (\\<forall>e\\<in>set E.\n         \\<forall>f\\<in>set E.\n            e \\<noteq> f \\<longrightarrow>\n            fst3 e |\\<inter>| fst3 f = {||} \\<and>\n            thd3 e |\\<inter>| thd3 f = {||});\n     \\<forall>e\\<in>set E. fst3 e |\\<union>| thd3 e |\\<subseteq>| V;\n     e \\<in> set E; fst3 e |\\<subseteq>| S;\n     S |\\<subseteq>|\n     ffilter\n      (\\<lambda>v.\n          \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E. v |\\<notin>| thd3 e)\n      (Graph V \\<Lambda> E)^V\\<rbrakk>\n    \\<Longrightarrow> \\<forall>ea\\<in>set (removeAll e E).\n                         fst3 ea |\\<union>| thd3 ea |\\<subseteq>|\n                         V |-| fst3 e", "apply (fold fset_cong, unfold less_eq_fset.rep_eq fmember.rep_eq)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E;\n     distinct E \\<and>\n     (\\<forall>e\\<in>set E.\n         \\<forall>f\\<in>set E.\n            e \\<noteq> f \\<longrightarrow>\n            fset (fst3 e |\\<inter>| fst3 f) = fset {||} \\<and>\n            fset (thd3 e |\\<inter>| thd3 f) = fset {||});\n     \\<forall>e\\<in>set E.\n        fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n     e \\<in> set E; fset (fst3 e) \\<subseteq> fset S;\n     fset S\n     \\<subseteq> fset\n                  (ffilter\n                    (\\<lambda>v.\n                        \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                           v \\<notin> fset (thd3 e))\n                    (Graph V \\<Lambda> E)^V)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>e\\<in>set (removeAll e E). wf_com (snd3 e)\n 2. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E;\n     distinct E \\<and>\n     (\\<forall>e\\<in>set E.\n         \\<forall>f\\<in>set E.\n            e \\<noteq> f \\<longrightarrow>\n            fset (fst3 e |\\<inter>| fst3 f) = fset {||} \\<and>\n            fset (thd3 e |\\<inter>| thd3 f) = fset {||});\n     \\<forall>e\\<in>set E.\n        fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n     e \\<in> set E; fset (fst3 e) \\<subseteq> fset S;\n     fset S\n     \\<subseteq> fset\n                  (ffilter\n                    (\\<lambda>v.\n                        \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                           v \\<notin> fset (thd3 e))\n                    (Graph V \\<Lambda> E)^V)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>v\\<in>fset (V |-| fst3 e).\n                         wf_ass (\\<Lambda> v)\n 3. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E;\n     distinct E \\<and>\n     (\\<forall>e\\<in>set E.\n         \\<forall>f\\<in>set E.\n            e \\<noteq> f \\<longrightarrow>\n            fset (fst3 e |\\<inter>| fst3 f) = fset {||} \\<and>\n            fset (thd3 e |\\<inter>| thd3 f) = fset {||});\n     \\<forall>e\\<in>set E.\n        fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n     e \\<in> set E; fset (fst3 e) \\<subseteq> fset S;\n     fset S\n     \\<subseteq> fset\n                  (ffilter\n                    (\\<lambda>v.\n                        \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                           v \\<notin> fset (thd3 e))\n                    (Graph V \\<Lambda> E)^V)\\<rbrakk>\n    \\<Longrightarrow> acyclicity (removeAll e E)\n 4. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E;\n     distinct E \\<and>\n     (\\<forall>e\\<in>set E.\n         \\<forall>f\\<in>set E.\n            e \\<noteq> f \\<longrightarrow>\n            fset (fst3 e |\\<inter>| fst3 f) = fset {||} \\<and>\n            fset (thd3 e |\\<inter>| thd3 f) = fset {||});\n     \\<forall>e\\<in>set E.\n        fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n     e \\<in> set E; fset (fst3 e) \\<subseteq> fset S;\n     fset S\n     \\<subseteq> fset\n                  (ffilter\n                    (\\<lambda>v.\n                        \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                           v \\<notin> fset (thd3 e))\n                    (Graph V \\<Lambda> E)^V)\\<rbrakk>\n    \\<Longrightarrow> distinct (removeAll e E) \\<and>\n                      (\\<forall>ea\\<in>set (removeAll e E).\n                          \\<forall>f\\<in>set (removeAll e E).\n                             ea \\<noteq> f \\<longrightarrow>\n                             fset (fst3 ea |\\<inter>| fst3 f) =\n                             fset {||} \\<and>\n                             fset (thd3 ea |\\<inter>| thd3 f) = fset {||})\n 5. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E;\n     distinct E \\<and>\n     (\\<forall>e\\<in>set E.\n         \\<forall>f\\<in>set E.\n            e \\<noteq> f \\<longrightarrow>\n            fset (fst3 e |\\<inter>| fst3 f) = fset {||} \\<and>\n            fset (thd3 e |\\<inter>| thd3 f) = fset {||});\n     \\<forall>e\\<in>set E.\n        fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n     e \\<in> set E; fset (fst3 e) \\<subseteq> fset S;\n     fset S\n     \\<subseteq> fset\n                  (ffilter\n                    (\\<lambda>v.\n                        \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                           v \\<notin> fset (thd3 e))\n                    (Graph V \\<Lambda> E)^V)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>ea\\<in>set (removeAll e E).\n                         fset (fst3 ea |\\<union>| thd3 ea)\n                         \\<subseteq> fset (V |-| fst3 e)", "apply (simp, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E;\n     distinct E \\<and>\n     (\\<forall>e\\<in>set E.\n         \\<forall>f\\<in>set E.\n            e \\<noteq> f \\<longrightarrow>\n            fset (fst3 e |\\<inter>| fst3 f) = fset {||} \\<and>\n            fset (thd3 e |\\<inter>| thd3 f) = fset {||});\n     \\<forall>e\\<in>set E.\n        fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n     e \\<in> set E; fset (fst3 e) \\<subseteq> fset S;\n     fset S\n     \\<subseteq> fset\n                  (ffilter\n                    (\\<lambda>v.\n                        \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                           v \\<notin> fset (thd3 e))\n                    (Graph V \\<Lambda> E)^V)\\<rbrakk>\n    \\<Longrightarrow> acyclicity (removeAll e E)\n 2. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E;\n     distinct E \\<and>\n     (\\<forall>e\\<in>set E.\n         \\<forall>f\\<in>set E.\n            e \\<noteq> f \\<longrightarrow>\n            fset (fst3 e |\\<inter>| fst3 f) = fset {||} \\<and>\n            fset (thd3 e |\\<inter>| thd3 f) = fset {||});\n     \\<forall>e\\<in>set E.\n        fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n     e \\<in> set E; fset (fst3 e) \\<subseteq> fset S;\n     fset S\n     \\<subseteq> fset\n                  (ffilter\n                    (\\<lambda>v.\n                        \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                           v \\<notin> fset (thd3 e))\n                    (Graph V \\<Lambda> E)^V)\\<rbrakk>\n    \\<Longrightarrow> distinct (removeAll e E) \\<and>\n                      (\\<forall>ea\\<in>set (removeAll e E).\n                          \\<forall>f\\<in>set (removeAll e E).\n                             ea \\<noteq> f \\<longrightarrow>\n                             fset (fst3 ea |\\<inter>| fst3 f) =\n                             fset {||} \\<and>\n                             fset (thd3 ea |\\<inter>| thd3 f) = fset {||})\n 3. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e); acyclicity E;\n     distinct E \\<and>\n     (\\<forall>e\\<in>set E.\n         \\<forall>f\\<in>set E.\n            e \\<noteq> f \\<longrightarrow>\n            fset (fst3 e |\\<inter>| fst3 f) = fset {||} \\<and>\n            fset (thd3 e |\\<inter>| thd3 f) = fset {||});\n     \\<forall>e\\<in>set E.\n        fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n     e \\<in> set E; fset (fst3 e) \\<subseteq> fset S;\n     fset S\n     \\<subseteq> fset\n                  (ffilter\n                    (\\<lambda>v.\n                        \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                           v \\<notin> fset (thd3 e))\n                    (Graph V \\<Lambda> E)^V)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>ea\\<in>set (removeAll e E).\n                         fset (fst3 ea |\\<union>| thd3 ea)\n                         \\<subseteq> fset (V |-| fst3 e)", "apply (unfold acyclicity_def, rule acyclic_subset)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e);\n     acyclic (\\<Union>e\\<in>set E. fset (fst3 e) \\<times> fset (thd3 e));\n     distinct E \\<and>\n     (\\<forall>e\\<in>set E.\n         \\<forall>f\\<in>set E.\n            e \\<noteq> f \\<longrightarrow>\n            fset (fst3 e |\\<inter>| fst3 f) = fset {||} \\<and>\n            fset (thd3 e |\\<inter>| thd3 f) = fset {||});\n     \\<forall>e\\<in>set E.\n        fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n     e \\<in> set E; fset (fst3 e) \\<subseteq> fset S;\n     fset S\n     \\<subseteq> fset\n                  (ffilter\n                    (\\<lambda>v.\n                        \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                           v \\<notin> fset (thd3 e))\n                    (Graph V \\<Lambda> E)^V)\\<rbrakk>\n    \\<Longrightarrow> acyclic ?s14\n 2. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e);\n     acyclic (\\<Union>e\\<in>set E. fset (fst3 e) \\<times> fset (thd3 e));\n     distinct E \\<and>\n     (\\<forall>e\\<in>set E.\n         \\<forall>f\\<in>set E.\n            e \\<noteq> f \\<longrightarrow>\n            fset (fst3 e |\\<inter>| fst3 f) = fset {||} \\<and>\n            fset (thd3 e |\\<inter>| thd3 f) = fset {||});\n     \\<forall>e\\<in>set E.\n        fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n     e \\<in> set E; fset (fst3 e) \\<subseteq> fset S;\n     fset S\n     \\<subseteq> fset\n                  (ffilter\n                    (\\<lambda>v.\n                        \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                           v \\<notin> fset (thd3 e))\n                    (Graph V \\<Lambda> E)^V)\\<rbrakk>\n    \\<Longrightarrow> (\\<Union>e\\<in>set (removeAll e E).\n                          fset (fst3 e) \\<times> fset (thd3 e))\n                      \\<subseteq> ?s14\n 3. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e);\n     acyclic (\\<Union>e\\<in>set E. fset (fst3 e) \\<times> fset (thd3 e));\n     distinct E \\<and>\n     (\\<forall>e\\<in>set E.\n         \\<forall>f\\<in>set E.\n            e \\<noteq> f \\<longrightarrow>\n            fset (fst3 e |\\<inter>| fst3 f) = fset {||} \\<and>\n            fset (thd3 e |\\<inter>| thd3 f) = fset {||});\n     \\<forall>e\\<in>set E.\n        fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n     e \\<in> set E; fset (fst3 e) \\<subseteq> fset S;\n     fset S\n     \\<subseteq> fset\n                  (ffilter\n                    (\\<lambda>v.\n                        \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                           v \\<notin> fset (thd3 e))\n                    (Graph V \\<Lambda> E)^V)\\<rbrakk>\n    \\<Longrightarrow> distinct (removeAll e E) \\<and>\n                      (\\<forall>ea\\<in>set (removeAll e E).\n                          \\<forall>f\\<in>set (removeAll e E).\n                             ea \\<noteq> f \\<longrightarrow>\n                             fset (fst3 ea |\\<inter>| fst3 f) =\n                             fset {||} \\<and>\n                             fset (thd3 ea |\\<inter>| thd3 f) = fset {||})\n 4. \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n     \\<forall>e\\<in>set E. wf_com (snd3 e);\n     acyclic (\\<Union>e\\<in>set E. fset (fst3 e) \\<times> fset (thd3 e));\n     distinct E \\<and>\n     (\\<forall>e\\<in>set E.\n         \\<forall>f\\<in>set E.\n            e \\<noteq> f \\<longrightarrow>\n            fset (fst3 e |\\<inter>| fst3 f) = fset {||} \\<and>\n            fset (thd3 e |\\<inter>| thd3 f) = fset {||});\n     \\<forall>e\\<in>set E.\n        fset (fst3 e |\\<union>| thd3 e) \\<subseteq> fset V;\n     e \\<in> set E; fset (fst3 e) \\<subseteq> fset S;\n     fset S\n     \\<subseteq> fset\n                  (ffilter\n                    (\\<lambda>v.\n                        \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                           v \\<notin> fset (thd3 e))\n                    (Graph V \\<Lambda> E)^V)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>ea\\<in>set (removeAll e E).\n                         fset (fst3 ea |\\<union>| thd3 ea)\n                         \\<subseteq> fset (V |-| fst3 e)", "apply (auto simp add: distinct_removeAll)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa b x.\n       \\<lbrakk>\\<forall>v\\<in>fset V. wf_ass (\\<Lambda> v);\n        \\<forall>e\\<in>set E. wf_com (snd3 e);\n        acyclic (\\<Union>e\\<in>set E. fset (fst3 e) \\<times> fset (thd3 e));\n        \\<forall>e\\<in>set E.\n           fset (fst3 e) \\<subseteq> fset V \\<and>\n           fset (thd3 e) \\<subseteq> fset V;\n        e \\<in> set E; fset (fst3 e) \\<subseteq> fset S;\n        (a, aa, b) \\<in> set E; distinct E;\n        \\<forall>e\\<in>set E.\n           \\<forall>f\\<in>set E.\n              e \\<noteq> f \\<longrightarrow>\n              fset (fst3 e) \\<inter> fset (fst3 f) = {} \\<and>\n              fset (thd3 e) \\<inter> fset (thd3 f) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; (a, aa, b) \\<noteq> e;\n        x \\<in> fset (fst3 (a, aa, b)); x \\<in> fset (fst3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (metis (lifting) IntI empty_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  wf_dia G'\n\ngoal (2 subgoals):\n 1. \\<Pi>' \\<in> ps_chains2 S' G'\n 2. fcard G'^V + length G'^E = k + fcard S'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Pi>' \\<in> ps_chains2 S' G'\n 2. fcard G'^V + length G'^E = k + fcard S'", "show \"\\<Pi>' \\<in> ps_chains2 S' G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Pi>' \\<in> ps_chains2 S' G'", "apply (unfold \\<Pi>_def \\<Pi>'_def ps_chains2_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_ps_chain \\<lbrace> initial_ps2 S' G' \\<rbrace> \\<pi>'\n    \\<in> mk_ps_chain \\<lbrace> initial_ps2 S' G' \\<rbrace> ` lins2 S' G'", "apply (intro imageI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>' \\<in> lins2 S' G'", "apply (unfold S'_def G'_def V'_def E'_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>'\n    \\<in> lins2 (S |-| vs) (Graph (V |-| vs) \\<Lambda> (removeAll e E))", "apply (intro next_lins2_edge)"], ["proof (prove)\ngoal (3 subgoals):\n 1. Inr e # \\<pi>' \\<in> lins2 S (Graph V \\<Lambda> E)\n 2. vs |\\<subseteq>| S\n 3. e = (vs, ?c1, ?ws1)", "apply (metis \\<pi>_def G_def x_def \\<pi>_in)"], ["proof (prove)\ngoal (2 subgoals):\n 1. vs |\\<subseteq>| S\n 2. e = (vs, ?c1, ?ws1)", "by (simp only: vs_in_S e_def)+"], ["proof (state)\nthis:\n  \\<Pi>' \\<in> ps_chains2 S' G'\n\ngoal (1 subgoal):\n 1. fcard G'^V + length G'^E = k + fcard S'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. fcard G'^V + length G'^E = k + fcard S'", "have \"vs |\\<subseteq>| V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs |\\<subseteq>| V", "by (metis (lifting) \\<open>S |\\<subseteq>| V\\<close> order_trans vs_in_S)"], ["proof (state)\nthis:\n  vs |\\<subseteq>| V\n\ngoal (1 subgoal):\n 1. fcard G'^V + length G'^E = k + fcard S'", "have \"distinct E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct E", "using \\<open>linearity E\\<close> linearity_def"], ["proof (prove)\nusing this:\n  linearity E\n  linearity ?E \\<equiv>\n  distinct ?E \\<and>\n  (\\<forall>e\\<in>set ?E.\n      \\<forall>f\\<in>set ?E.\n         e \\<noteq> f \\<longrightarrow>\n         fst3 e |\\<inter>| fst3 f = {||} \\<and>\n         thd3 e |\\<inter>| thd3 f = {||})\n\ngoal (1 subgoal):\n 1. distinct E", "by auto"], ["proof (state)\nthis:\n  distinct E\n\ngoal (1 subgoal):\n 1. fcard G'^V + length G'^E = k + fcard S'", "show \"fcard G'^V + length G'^E = k + fcard S'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fcard G'^V + length G'^E = k + fcard S'", "apply (insert Suc.prems(4))"], ["proof (prove)\ngoal (1 subgoal):\n 1. fcard G^V + length G^E = Suc k + fcard S \\<Longrightarrow>\n    fcard G'^V + length G'^E = k + fcard S'", "apply (unfold G_def G'_def vertices.simps edges.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fcard V + length E = Suc k + fcard S \\<Longrightarrow>\n    fcard V' + length E' = k + fcard S'", "apply (unfold V'_def E'_def S'_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fcard V + length E = Suc k + fcard S \\<Longrightarrow>\n    fcard (V |-| vs) + length (removeAll e E) = k + fcard (S |-| vs)", "apply (unfold fcard_funion_fsubset[OF \\<open>vs |\\<subseteq>| V\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. fcard V + length E = Suc k + fcard S \\<Longrightarrow>\n    fcard V - fcard vs + length (removeAll e E) = k + fcard (S |-| vs)", "apply (unfold fcard_funion_fsubset[OF \\<open>vs |\\<subseteq>| S\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. fcard V + length E = Suc k + fcard S \\<Longrightarrow>\n    fcard V - fcard vs + length (removeAll e E) = k + (fcard S - fcard vs)", "apply (fold distinct_remove1_removeAll[OF \\<open>distinct E\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. fcard V + length E = Suc k + fcard S \\<Longrightarrow>\n    fcard V - fcard vs + length (remove1 e E) = k + (fcard S - fcard vs)", "apply (unfold length_remove1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fcard V + length E = Suc k + fcard S \\<Longrightarrow>\n    fcard V - fcard vs +\n    (if e \\<in> set E then length E - 1 else length E) =\n    k + (fcard S - fcard vs)", "apply (simp add: e_in_E)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fcard V + length E = Suc (k + fcard S) \\<Longrightarrow>\n    fcard V - fcard vs + (length E - Suc 0) = k + (fcard S - fcard vs)", "apply (drule arg_cong[of _ _ \"\\<lambda>x. x - fcard vs - 1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. fcard V + length E - fcard vs - 1 =\n    Suc (k + fcard S) - fcard vs - 1 \\<Longrightarrow>\n    fcard V - fcard vs + (length E - Suc 0) = k + (fcard S - fcard vs)", "apply (subst (asm) add_diff_assoc2[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. fcard vs \\<le> fcard V\n 2. fcard V - fcard vs + length E - 1 =\n    Suc (k + fcard S) - fcard vs - 1 \\<Longrightarrow>\n    fcard V - fcard vs + (length E - Suc 0) = k + (fcard S - fcard vs)", "apply (simp add: fcard_mono[OF \\<open>vs |\\<subseteq>| V\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. fcard V - fcard vs + length E - 1 =\n    Suc (k + fcard S) - fcard vs - 1 \\<Longrightarrow>\n    fcard V - fcard vs + (length E - Suc 0) = k + (fcard S - fcard vs)", "apply (subst add_diff_assoc, insert length_pos_if_in_set[OF e_in_E], arith, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fcard V - fcard vs + length E - Suc 0 = k + fcard S - fcard vs;\n     E \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> k + fcard S - fcard vs = k + (fcard S - fcard vs)", "apply (subst add_diff_assoc, auto simp add: fcard_mono[OF \\<open>vs |\\<subseteq>| S\\<close>])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  fcard G'^V + length G'^E = k + fcard S'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wf_ps_chain \\<Pi>' \\<and> post \\<Pi>' = [ terminals G' |=> Bot ]\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "hence\n        wf_\\<Pi>': \"wf_ps_chain \\<Pi>'\" and\n        post_\\<Pi>': \"post \\<Pi>' = [ terminals G' |=> Bot ]\""], ["proof (prove)\nusing this:\n  wf_ps_chain \\<Pi>' \\<and> post \\<Pi>' = [ terminals G' |=> Bot ]\n\ngoal (1 subgoal):\n 1. wf_ps_chain \\<Pi>' &&& post \\<Pi>' = [ terminals G' |=> Bot ]", "by auto"], ["proof (state)\nthis:\n  wf_ps_chain \\<Pi>'\n  post \\<Pi>' = [ terminals G' |=> Bot ]\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "have terms_same: \"terminals G = terminals G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. terminals G = terminals G'", "apply (unfold G'_def G_def terminals_def edges.simps vertices.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| fst3 e) V =\n    ffilter (\\<lambda>v. \\<forall>e\\<in>set E'. v |\\<notin>| fst3 e) V'", "apply (unfold E'_def V'_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| fst3 e) V =\n    ffilter\n     (\\<lambda>v. \\<forall>e\\<in>set (removeAll e E). v |\\<notin>| fst3 e)\n     (V |-| vs)", "apply (fold fset_cong, auto simp add: e_in_E vs_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  terminals G = terminals G'\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "have 1: \"fmdom [ fst3 e |=> Bot ] |\\<inter>|\n        fmdom([ ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e) V - S |=> Top ]\n        ++\\<^sub>f [ S - fst3 e |=> Bot ]) = {||}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmdom [ fst3 e |=> Bot ] |\\<inter>|\n    fmdom\n     ([ ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n         V |-|\n        S |=> Top ] ++\\<^sub>f\n      [ S |-| fst3 e |=> Bot ]) =\n    {||}", "apply (unfold fmdom_add fdom_make_fmap)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst3 e |\\<inter>|\n    (ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e) V |-|\n     S |\\<union>|\n     (S |-| fst3 e)) =\n    {||}", "apply (fold fset_cong)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fset\n     (fst3 e |\\<inter>|\n      (ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e) V |-|\n       S |\\<union>|\n       (S |-| fst3 e))) =\n    fset {||}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> fset (fst3 e); x \\<notin> fset S; x \\<in> fset V;\n        \\<forall>e\\<in>set E. x \\<notin> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (metis in_mono less_eq_fset.rep_eq vs_def vs_in_S)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  fmdom [ fst3 e |=> Bot ] |\\<inter>|\n  fmdom\n   ([ ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e) V |-|\n      S |=> Top ] ++\\<^sub>f\n    [ S |-| fst3 e |=> Bot ]) =\n  {||}\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       x = Inr b \\<Longrightarrow>\n       wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "proof (intro conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. wf_ps_chain \\<Pi>\n 2. post \\<Pi> = [ terminals G |=> Bot ]", "show \"wf_ps_chain \\<Pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain \\<Pi>", "using [[unfold_abs_def = false]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain \\<Pi>", "apply (unfold \\<Pi>_def \\<pi>_def x_def mk_ps_chain_cons)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain\n     (mk_ps_chain\n       (cSnoc \\<lbrace> initial_ps2 S G \\<rbrace> (Inr e)\n         (next_ps (post \\<lbrace> initial_ps2 S G \\<rbrace>) (Inr e)))\n       \\<pi>')", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain\n     (mk_ps_chain\n       (\\<lbrace> initial_ps2 S\n                   G \\<rbrace> \\<cdot> Inr\n  e \\<cdot> \\<lbrace> initial_ps2 S G \\<ominus> fst3 e ++\\<^sub>f\n                      [ thd3 e |=> Top ] \\<rbrace>)\n       \\<pi>')", "apply (unfold mk_ps_chain_ccons)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain\n     (\\<lbrace> initial_ps2 S\n                 G \\<rbrace> \\<cdot> Inr\ne \\<cdot> mk_ps_chain\n           \\<lbrace> initial_ps2 S G \\<ominus> fst3 e ++\\<^sub>f\n                     [ thd3 e |=> Top ] \\<rbrace>\n           \\<pi>')", "apply (fold vs_def ws_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain\n     (\\<lbrace> initial_ps2 S\n                 G \\<rbrace> \\<cdot> Inr\ne \\<cdot> mk_ps_chain\n           \\<lbrace> initial_ps2 S G \\<ominus> vs ++\\<^sub>f\n                     [ ws |=> Top ] \\<rbrace>\n           \\<pi>')", "apply (fold next_initial_ps2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain\n     (\\<lbrace> initial_ps2 S\n                 G \\<rbrace> \\<cdot> Inr\ne \\<cdot> mk_ps_chain \\<lbrace> initial_ps2 S' G' \\<rbrace> \\<pi>')", "apply (fold \\<Pi>'_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain\n     (\\<lbrace> initial_ps2 S G \\<rbrace> \\<cdot> Inr e \\<cdot> \\<Pi>')", "apply (unfold wf_ps_chain_def chain_all.simps conj_commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. chain_all wf_ps_triple \\<Pi>' \\<and>\n    wf_ps_triple (initial_ps2 S G, Inr e, pre \\<Pi>')", "apply (intro conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. chain_all wf_ps_triple \\<Pi>'\n 2. wf_ps_triple (initial_ps2 S G, Inr e, pre \\<Pi>')", "apply (fold wf_ps_chain_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. wf_ps_chain \\<Pi>'\n 2. wf_ps_triple (initial_ps2 S G, Inr e, pre \\<Pi>')", "apply (rule wf_\\<Pi>')"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_triple (initial_ps2 S G, Inr e, pre \\<Pi>')", "apply (intro wf_ps_triple_edgeI exI[of _ \"\\<sigma>\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst3 e |\\<union>| thd3 e |\\<inter>| fmdom \\<sigma> = {||} \\<and>\n    initial_ps2 S G = [ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma> \\<and>\n    pre \\<Pi>' = [ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>", "apply (unfold e_def fst3_simp thd3_simp \\<sigma>_def, intro conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. vs |\\<union>| ws |\\<inter>|\n    fmdom ([ initials G |-| S |=> Top ] ++\\<^sub>f [ S |-| vs |=> Bot ]) =\n    {||}\n 2. initial_ps2 S G =\n    [ vs |=> Bot ] ++\\<^sub>f\n    ([ initials G |-| S |=> Top ] ++\\<^sub>f [ S |-| vs |=> Bot ])\n 3. pre \\<Pi>' =\n    [ ws |=> Top ] ++\\<^sub>f\n    ([ initials G |-| S |=> Top ] ++\\<^sub>f [ S |-| vs |=> Bot ])", "apply (insert Suc.prems(1))"], ["proof (prove)\ngoal (3 subgoals):\n 1. S |\\<subseteq>| initials G \\<Longrightarrow>\n    vs |\\<union>| ws |\\<inter>|\n    fmdom ([ initials G |-| S |=> Top ] ++\\<^sub>f [ S |-| vs |=> Bot ]) =\n    {||}\n 2. S |\\<subseteq>| initials G \\<Longrightarrow>\n    initial_ps2 S G =\n    [ vs |=> Bot ] ++\\<^sub>f\n    ([ initials G |-| S |=> Top ] ++\\<^sub>f [ S |-| vs |=> Bot ])\n 3. S |\\<subseteq>| initials G \\<Longrightarrow>\n    pre \\<Pi>' =\n    [ ws |=> Top ] ++\\<^sub>f\n    ([ initials G |-| S |=> Top ] ++\\<^sub>f [ S |-| vs |=> Bot ])", "apply (unfold pre_\\<Pi>' initial_ps2_def initials_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. S |\\<subseteq>|\n    ffilter (\\<lambda>v. \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n     G^V \\<Longrightarrow>\n    vs |\\<union>| ws |\\<inter>|\n    fmdom\n     ([ ffilter (\\<lambda>v. \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n         G^V |-|\n        S |=> Top ] ++\\<^sub>f\n      [ S |-| vs |=> Bot ]) =\n    {||}\n 2. S |\\<subseteq>|\n    ffilter (\\<lambda>v. \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n     G^V \\<Longrightarrow>\n    [ ffilter (\\<lambda>v. \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n       G^V |-|\n      S |=> Top ] ++\\<^sub>f\n    [ S |=> Bot ] =\n    [ vs |=> Bot ] ++\\<^sub>f\n    ([ ffilter (\\<lambda>v. \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n        G^V |-|\n       S |=> Top ] ++\\<^sub>f\n     [ S |-| vs |=> Bot ])\n 3. S |\\<subseteq>|\n    ffilter (\\<lambda>v. \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n     G^V \\<Longrightarrow>\n    [ ffilter (\\<lambda>v. \\<forall>e\\<in>set G'^E. v |\\<notin>| thd3 e)\n       G'^V |-|\n      S' |=> Top ] ++\\<^sub>f\n    [ S' |=> Bot ] =\n    [ ws |=> Top ] ++\\<^sub>f\n    ([ ffilter (\\<lambda>v. \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n        G^V |-|\n       S |=> Top ] ++\\<^sub>f\n     [ S |-| vs |=> Bot ])", "apply (insert vs_in_S acy[OF e_in_E])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>S |\\<subseteq>|\n             ffilter\n              (\\<lambda>v. \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e) G^V;\n     vs |\\<subseteq>| S; fst3 e |\\<inter>| thd3 e = {||}\\<rbrakk>\n    \\<Longrightarrow> vs |\\<union>| ws |\\<inter>|\n                      fmdom\n                       ([ ffilter\n                           (\\<lambda>v.\n                               \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n                           G^V |-|\n                          S |=> Top ] ++\\<^sub>f\n                        [ S |-| vs |=> Bot ]) =\n                      {||}\n 2. \\<lbrakk>S |\\<subseteq>|\n             ffilter\n              (\\<lambda>v. \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e) G^V;\n     vs |\\<subseteq>| S; fst3 e |\\<inter>| thd3 e = {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n                         G^V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |=> Bot ] =\n                      [ vs |=> Bot ] ++\\<^sub>f\n                      ([ ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n                          G^V |-|\n                         S |=> Top ] ++\\<^sub>f\n                       [ S |-| vs |=> Bot ])\n 3. \\<lbrakk>S |\\<subseteq>|\n             ffilter\n              (\\<lambda>v. \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e) G^V;\n     vs |\\<subseteq>| S; fst3 e |\\<inter>| thd3 e = {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set G'^E. v |\\<notin>| thd3 e)\n                         G'^V |-|\n                        S' |=> Top ] ++\\<^sub>f\n                      [ S' |=> Bot ] =\n                      [ ws |=> Top ] ++\\<^sub>f\n                      ([ ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n                          G^V |-|\n                         S |=> Top ] ++\\<^sub>f\n                       [ S |-| vs |=> Bot ])", "apply (fold fset_cong)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>S |\\<subseteq>|\n             ffilter\n              (\\<lambda>v. \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e) G^V;\n     vs |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> fset\n                       (vs |\\<union>| ws |\\<inter>|\n                        fmdom\n                         ([ ffilter\n                             (\\<lambda>v.\n                                 \\<forall>e\\<in>set G^E.\n                                    v |\\<notin>| thd3 e)\n                             G^V |-|\n                            S |=> Top ] ++\\<^sub>f\n                          [ S |-| vs |=> Bot ])) =\n                      fset {||}\n 2. \\<lbrakk>S |\\<subseteq>|\n             ffilter\n              (\\<lambda>v. \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e) G^V;\n     vs |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n                         G^V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |=> Bot ] =\n                      [ vs |=> Bot ] ++\\<^sub>f\n                      ([ ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n                          G^V |-|\n                         S |=> Top ] ++\\<^sub>f\n                       [ S |-| vs |=> Bot ])\n 3. \\<lbrakk>S |\\<subseteq>|\n             ffilter\n              (\\<lambda>v. \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e) G^V;\n     vs |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set G'^E. v |\\<notin>| thd3 e)\n                         G'^V |-|\n                        S' |=> Top ] ++\\<^sub>f\n                      [ S' |=> Bot ] =\n                      [ ws |=> Top ] ++\\<^sub>f\n                      ([ ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n                          G^V |-|\n                         S |=> Top ] ++\\<^sub>f\n                       [ S |-| vs |=> Bot ])", "apply (unfold less_eq_fset.rep_eq)[1]"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fset S\n             \\<subseteq> fset\n                          (ffilter\n                            (\\<lambda>v.\n                                \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n                            G^V);\n     fset vs \\<subseteq> fset S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> fset\n                       (vs |\\<union>| ws |\\<inter>|\n                        fmdom\n                         ([ ffilter\n                             (\\<lambda>v.\n                                 \\<forall>e\\<in>set G^E.\n                                    v |\\<notin>| thd3 e)\n                             G^V |-|\n                            S |=> Top ] ++\\<^sub>f\n                          [ S |-| vs |=> Bot ])) =\n                      fset {||}\n 2. \\<lbrakk>S |\\<subseteq>|\n             ffilter\n              (\\<lambda>v. \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e) G^V;\n     vs |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n                         G^V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |=> Bot ] =\n                      [ vs |=> Bot ] ++\\<^sub>f\n                      ([ ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n                          G^V |-|\n                         S |=> Top ] ++\\<^sub>f\n                       [ S |-| vs |=> Bot ])\n 3. \\<lbrakk>S |\\<subseteq>|\n             ffilter\n              (\\<lambda>v. \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e) G^V;\n     vs |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set G'^E. v |\\<notin>| thd3 e)\n                         G'^V |-|\n                        S' |=> Top ] ++\\<^sub>f\n                      [ S' |=> Bot ] =\n                      [ ws |=> Top ] ++\\<^sub>f\n                      ([ ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set G^E. v |\\<notin>| thd3 e)\n                          G^V |-|\n                         S |=> Top ] ++\\<^sub>f\n                       [ S |-| vs |=> Bot ])", "apply (unfold G_def G'_def vs_def ws_def V'_def E'_def S'_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fset S\n             \\<subseteq> fset\n                          (ffilter\n                            (\\<lambda>v.\n                                \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                                   v |\\<notin>| thd3 e)\n                            (Graph V \\<Lambda> E)^V);\n     fset (fst3 e) \\<subseteq> fset S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> fset\n                       (fst3 e |\\<union>| thd3 e |\\<inter>|\n                        fmdom\n                         ([ ffilter\n                             (\\<lambda>v.\n                                 \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                                    v |\\<notin>| thd3 e)\n                             (Graph V \\<Lambda> E)^V |-|\n                            S |=> Top ] ++\\<^sub>f\n                          [ S |-| fst3 e |=> Bot ])) =\n                      fset {||}\n 2. \\<lbrakk>S |\\<subseteq>|\n             ffilter\n              (\\<lambda>v.\n                  \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                     v |\\<notin>| thd3 e)\n              (Graph V \\<Lambda> E)^V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                                v |\\<notin>| thd3 e)\n                         (Graph V \\<Lambda> E)^V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |=> Bot ] =\n                      [ fst3 e |=> Bot ] ++\\<^sub>f\n                      ([ ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                                 v |\\<notin>| thd3 e)\n                          (Graph V \\<Lambda> E)^V |-|\n                         S |=> Top ] ++\\<^sub>f\n                       [ S |-| fst3 e |=> Bot ])\n 3. \\<lbrakk>S |\\<subseteq>|\n             ffilter\n              (\\<lambda>v.\n                  \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                     v |\\<notin>| thd3 e)\n              (Graph V \\<Lambda> E)^V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\n\\<in>set (Graph (V |-| fst3 e) \\<Lambda> (removeAll e E))^E.\n                                v |\\<notin>| thd3 e)\n                         (Graph (V |-| fst3 e) \\<Lambda>\n                           (removeAll e E))^V |-|\n                        (S |-| fst3 e) |=> Top ] ++\\<^sub>f\n                      [ S |-| fst3 e |=> Bot ] =\n                      [ thd3 e |=> Top ] ++\\<^sub>f\n                      ([ ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set (Graph V \\<Lambda> E)^E.\n                                 v |\\<notin>| thd3 e)\n                          (Graph V \\<Lambda> E)^V |-|\n                         S |=> Top ] ++\\<^sub>f\n                       [ S |-| fst3 e |=> Bot ])", "apply (unfold vertices.simps edges.simps)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fset S\n             \\<subseteq> fset\n                          (ffilter\n                            (\\<lambda>v.\n                                \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                            V);\n     fset (fst3 e) \\<subseteq> fset S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> fset\n                       (fst3 e |\\<union>| thd3 e |\\<inter>|\n                        fmdom\n                         ([ ffilter\n                             (\\<lambda>v.\n                                 \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                             V |-|\n                            S |=> Top ] ++\\<^sub>f\n                          [ S |-| fst3 e |=> Bot ])) =\n                      fset {||}\n 2. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                         V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |=> Bot ] =\n                      [ fst3 e |=> Bot ] ++\\<^sub>f\n                      ([ ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                          V |-|\n                         S |=> Top ] ++\\<^sub>f\n                       [ S |-| fst3 e |=> Bot ])\n 3. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set (removeAll e E).\n                                v |\\<notin>| thd3 e)\n                         (V |-| fst3 e) |-|\n                        (S |-| fst3 e) |=> Top ] ++\\<^sub>f\n                      [ S |-| fst3 e |=> Bot ] =\n                      [ thd3 e |=> Top ] ++\\<^sub>f\n                      ([ ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                          V |-|\n                         S |=> Top ] ++\\<^sub>f\n                       [ S |-| fst3 e |=> Bot ])", "apply (unfold fmap_add_commute[OF 1])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fset S\n             \\<subseteq> fset\n                          (ffilter\n                            (\\<lambda>v.\n                                \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                            V);\n     fset (fst3 e) \\<subseteq> fset S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> fset\n                       (fst3 e |\\<union>| thd3 e |\\<inter>|\n                        fmdom\n                         ([ ffilter\n                             (\\<lambda>v.\n                                 \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                             V |-|\n                            S |=> Top ] ++\\<^sub>f\n                          [ S |-| fst3 e |=> Bot ])) =\n                      fset {||}\n 2. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                         V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |=> Bot ] =\n                      [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                         V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |-| fst3 e |=> Bot ] ++\\<^sub>f\n                      [ fst3 e |=> Bot ]\n 3. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set (removeAll e E).\n                                v |\\<notin>| thd3 e)\n                         (V |-| fst3 e) |-|\n                        (S |-| fst3 e) |=> Top ] ++\\<^sub>f\n                      [ S |-| fst3 e |=> Bot ] =\n                      [ thd3 e |=> Top ] ++\\<^sub>f\n                      ([ ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                          V |-|\n                         S |=> Top ] ++\\<^sub>f\n                       [ S |-| fst3 e |=> Bot ])", "apply (fold fmadd_assoc)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fset S\n             \\<subseteq> fset\n                          (ffilter\n                            (\\<lambda>v.\n                                \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                            V);\n     fset (fst3 e) \\<subseteq> fset S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> fset\n                       (fst3 e |\\<union>| thd3 e |\\<inter>|\n                        fmdom\n                         ([ ffilter\n                             (\\<lambda>v.\n                                 \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                             V |-|\n                            S |=> Top ] ++\\<^sub>f\n                          [ S |-| fst3 e |=> Bot ])) =\n                      fset {||}\n 2. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                         V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |=> Bot ] =\n                      [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                         V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      ([ S |-| fst3 e |=> Bot ] ++\\<^sub>f\n                       [ fst3 e |=> Bot ])\n 3. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set (removeAll e E).\n                                v |\\<notin>| thd3 e)\n                         (V |-| fst3 e) |-|\n                        (S |-| fst3 e) |=> Top ] ++\\<^sub>f\n                      [ S |-| fst3 e |=> Bot ] =\n                      [ thd3 e |=> Top ] ++\\<^sub>f\n                      ([ ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                          V |-|\n                         S |=> Top ] ++\\<^sub>f\n                       [ S |-| fst3 e |=> Bot ])", "apply (unfold make_fmap_union)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fset S\n             \\<subseteq> fset\n                          (ffilter\n                            (\\<lambda>v.\n                                \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                            V);\n     fset (fst3 e) \\<subseteq> fset S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> fset\n                       (fst3 e |\\<union>| thd3 e |\\<inter>|\n                        fmdom\n                         ([ ffilter\n                             (\\<lambda>v.\n                                 \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                             V |-|\n                            S |=> Top ] ++\\<^sub>f\n                          [ S |-| fst3 e |=> Bot ])) =\n                      fset {||}\n 2. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                         V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |=> Bot ] =\n                      [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                         V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |-| fst3 e |\\<union>| fst3 e |=> Bot ]\n 3. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set (removeAll e E).\n                                v |\\<notin>| thd3 e)\n                         (V |-| fst3 e) |-|\n                        (S |-| fst3 e) |=> Top ] ++\\<^sub>f\n                      [ S |-| fst3 e |=> Bot ] =\n                      [ thd3 e |=> Top ] ++\\<^sub>f\n                      ([ ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                          V |-|\n                         S |=> Top ] ++\\<^sub>f\n                       [ S |-| fst3 e |=> Bot ])", "apply (auto simp add: fdom_make_fmap e_in_E)[1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                         V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |=> Bot ] =\n                      [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                         V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |-| fst3 e |\\<union>| fst3 e |=> Bot ]\n 2. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set (removeAll e E).\n                                v |\\<notin>| thd3 e)\n                         (V |-| fst3 e) |-|\n                        (S |-| fst3 e) |=> Top ] ++\\<^sub>f\n                      [ S |-| fst3 e |=> Bot ] =\n                      [ thd3 e |=> Top ] ++\\<^sub>f\n                      ([ ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                          V |-|\n                         S |=> Top ] ++\\<^sub>f\n                       [ S |-| fst3 e |=> Bot ])", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S |\\<subseteq>|\n             ffilter\n              (\\<lambda>v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e))\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e) \\<inter> fset (thd3 e) = {}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e))\n                         V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |=> Bot ] =\n                      [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e))\n                         V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |\\<union>| fst3 e |=> Bot ]\n 2. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set (removeAll e E).\n                                v |\\<notin>| thd3 e)\n                         (V |-| fst3 e) |-|\n                        (S |-| fst3 e) |=> Top ] ++\\<^sub>f\n                      [ S |-| fst3 e |=> Bot ] =\n                      [ thd3 e |=> Top ] ++\\<^sub>f\n                      ([ ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                          V |-|\n                         S |=> Top ] ++\\<^sub>f\n                       [ S |-| fst3 e |=> Bot ])", "apply (unfold fmadd_assoc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S |\\<subseteq>|\n             ffilter\n              (\\<lambda>v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e))\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e) \\<inter> fset (thd3 e) = {}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e))\n                         V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |=> Bot ] =\n                      [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e))\n                         V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |\\<union>| fst3 e |=> Bot ]\n 2. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set (removeAll e E).\n                                v |\\<notin>| thd3 e)\n                         (V |-| fst3 e) |-|\n                        (S |-| fst3 e) |=> Top ] ++\\<^sub>f\n                      [ S |-| fst3 e |=> Bot ] =\n                      [ thd3 e |=> Top ] ++\\<^sub>f\n                      [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                         V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |-| fst3 e |=> Bot ]", "apply (unfold make_fmap_union)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S |\\<subseteq>|\n             ffilter\n              (\\<lambda>v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e))\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e) \\<inter> fset (thd3 e) = {}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e))\n                         V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |=> Bot ] =\n                      [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e))\n                         V |-|\n                        S |=> Top ] ++\\<^sub>f\n                      [ S |\\<union>| fst3 e |=> Bot ]\n 2. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set (removeAll e E).\n                                v |\\<notin>| thd3 e)\n                         (V |-| fst3 e) |-|\n                        (S |-| fst3 e) |=> Top ] ++\\<^sub>f\n                      [ S |-| fst3 e |=> Bot ] =\n                      [ thd3 e |\\<union>|\n                        (ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                          V |-|\n                         S) |=> Top ] ++\\<^sub>f\n                      [ S |-| fst3 e |=> Bot ]", "apply (metis (lifting) funion_absorb2 vs_def vs_in_S)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set (removeAll e E).\n                                v |\\<notin>| thd3 e)\n                         (V |-| fst3 e) |-|\n                        (S |-| fst3 e) |=> Top ] ++\\<^sub>f\n                      [ S |-| fst3 e |=> Bot ] =\n                      [ thd3 e |\\<union>|\n                        (ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                          V |-|\n                         S) |=> Top ] ++\\<^sub>f\n                      [ S |-| fst3 e |=> Bot ]", "apply (intro arg_cong2[of _ _ \"[ S - fst3 e |=> Bot ]\"\n            \"[ S - fst3 e |=> Bot ]\" \"(++\\<^sub>f)\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set (removeAll e E).\n                                v |\\<notin>| thd3 e)\n                         (V |-| fst3 e) |-|\n                        (S |-| fst3 e) |=> Top ] =\n                      [ thd3 e |\\<union>|\n                        (ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                          V |-|\n                         S) |=> Top ]\n 2. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ S |-| fst3 e |=> Bot ] = [ S |-| fst3 e |=> Bot ]", "apply (intro arg_cong2[of _ _ \"Top\" \"Top\" \"make_fmap\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> ffilter\n                       (\\<lambda>v.\n                           \\<forall>e\\<in>set (removeAll e E).\n                              v |\\<notin>| thd3 e)\n                       (V |-| fst3 e) |-|\n                      (S |-| fst3 e) =\n                      thd3 e |\\<union>|\n                      (ffilter\n                        (\\<lambda>v.\n                            \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                        V |-|\n                       S)\n 2. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> Top = Top\n 3. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ S |-| fst3 e |=> Bot ] = [ S |-| fst3 e |=> Bot ]", "defer 1"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> Top = Top\n 2. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> [ S |-| fst3 e |=> Bot ] = [ S |-| fst3 e |=> Bot ]\n 3. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> ffilter\n                       (\\<lambda>v.\n                           \\<forall>e\\<in>set (removeAll e E).\n                              v |\\<notin>| thd3 e)\n                       (V |-| fst3 e) |-|\n                      (S |-| fst3 e) =\n                      thd3 e |\\<union>|\n                      (ffilter\n                        (\\<lambda>v.\n                            \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                        V |-|\n                       S)", "apply (simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> ffilter\n                       (\\<lambda>v.\n                           \\<forall>e\\<in>set (removeAll e E).\n                              v |\\<notin>| thd3 e)\n                       (V |-| fst3 e) |-|\n                      (S |-| fst3 e) =\n                      thd3 e |\\<union>|\n                      (ffilter\n                        (\\<lambda>v.\n                            \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                        V |-|\n                       S)", "apply (fold fset_cong)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S |\\<subseteq>|\n             ffilter (\\<lambda>v. \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n              V;\n     fst3 e |\\<subseteq>| S;\n     fset (fst3 e |\\<inter>| thd3 e) = fset {||}\\<rbrakk>\n    \\<Longrightarrow> fset\n                       (ffilter\n                         (\\<lambda>v.\n                             \\<forall>e\\<in>set (removeAll e E).\n                                v |\\<notin>| thd3 e)\n                         (V |-| fst3 e) |-|\n                        (S |-| fst3 e)) =\n                      fset\n                       (thd3 e |\\<union>|\n                        (ffilter\n                          (\\<lambda>v.\n                              \\<forall>e\\<in>set E. v |\\<notin>| thd3 e)\n                          V |-|\n                         S))", "apply (unfold less_eq_fset.rep_eq fmember.rep_eq, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fset S\n             \\<subseteq> {v. \\<forall>e\\<in>set E.\n                                v \\<notin> fset (thd3 e)} \\<and>\n             fset S \\<subseteq> fset V;\n     fset (fst3 e) \\<subseteq> fset S;\n     fset (fst3 e) \\<inter> fset (thd3 e) = {}\\<rbrakk>\n    \\<Longrightarrow> {v. \\<forall>e\\<in>set E - {e}.\n                             v \\<notin> fset (thd3 e)} \\<inter>\n                      (fset V - fset (fst3 e)) -\n                      (fset S - fset (fst3 e)) =\n                      fset (thd3 e) \\<union>\n                      ({v. \\<forall>e\\<in>set E.\n                              v \\<notin> fset (thd3 e)} \\<inter>\n                       fset V -\n                       fset S)", "apply (elim conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n     fset (fst3 e) \\<inter> fset (thd3 e) = {};\n     fset S \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n     fset S \\<subseteq> fset V\\<rbrakk>\n    \\<Longrightarrow> {v. \\<forall>e\\<in>set E - {e}.\n                             v \\<notin> fset (thd3 e)} \\<inter>\n                      (fset V - fset (fst3 e)) -\n                      (fset S - fset (fst3 e)) =\n                      fset (thd3 e) \\<union>\n                      ({v. \\<forall>e\\<in>set E.\n                              v \\<notin> fset (thd3 e)} \\<inter>\n                       fset V -\n                       fset S)", "apply (intro set_eqI iffI, simp_all)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V;\n        (\\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e)) \\<and>\n        x \\<in> fset V \\<and>\n        x \\<notin> fset (fst3 e) \\<and>\n        (x \\<in> fset S \\<longrightarrow> x \\<in> fset (fst3 e))\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset (thd3 e) \\<or>\n                         (\\<forall>e\\<in>set E.\n                             x \\<notin> fset (thd3 e)) \\<and>\n                         x \\<notin> fset S\n 2. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V;\n        x \\<in> fset (thd3 e) \\<or>\n        (\\<forall>e\\<in>set E. x \\<notin> fset (thd3 e)) \\<and>\n        x \\<in> fset V \\<and> x \\<notin> fset S\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>e\\<in>set E - {e}.\n                             x \\<notin> fset (thd3 e)) \\<and>\n                         x \\<in> fset V \\<and>\n                         x \\<notin> fset (fst3 e) \\<and>\n                         (x \\<in> fset S \\<longrightarrow>\n                          x \\<in> fset (fst3 e))", "apply (elim conjE, intro disjI conjI ballI, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x ea.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V;\n        \\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; x \\<notin> fset (fst3 e); x \\<notin> fset S;\n        x \\<notin> fset (thd3 e); ea \\<in> set E\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (thd3 ea)\n 2. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V;\n        \\<forall>e\\<in>set E - {e}. x \\<notin> fset (thd3 e);\n        x \\<in> fset V; x \\<notin> fset (fst3 e);\n        x \\<in> fset S \\<longrightarrow> x \\<in> fset (fst3 e);\n        x \\<notin> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset S\n 3. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V;\n        x \\<in> fset (thd3 e) \\<or>\n        (\\<forall>e\\<in>set E. x \\<notin> fset (thd3 e)) \\<and>\n        x \\<in> fset V \\<and> x \\<notin> fset S\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>e\\<in>set E - {e}.\n                             x \\<notin> fset (thd3 e)) \\<and>\n                         x \\<in> fset V \\<and>\n                         x \\<notin> fset (fst3 e) \\<and>\n                         (x \\<in> fset S \\<longrightarrow>\n                          x \\<in> fset (fst3 e))", "apply (case_tac \"ea=e\", simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V;\n        x \\<in> fset (thd3 e) \\<or>\n        (\\<forall>e\\<in>set E. x \\<notin> fset (thd3 e)) \\<and>\n        x \\<in> fset V \\<and> x \\<notin> fset S\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>e\\<in>set E - {e}.\n                             x \\<notin> fset (thd3 e)) \\<and>\n                         x \\<in> fset V \\<and>\n                         x \\<notin> fset (fst3 e) \\<and>\n                         (x \\<in> fset S \\<longrightarrow>\n                          x \\<in> fset (fst3 e))", "apply (elim disjE conjE, intro conjI ballI impI, simp_all)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x ea.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e);\n        ea \\<in> set E \\<and> ea \\<noteq> e\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (thd3 ea)\n 2. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset V\n 3. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)\n 4. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e);\n        x \\<in> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset (fst3 e)\n 5. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V;\n        \\<forall>e\\<in>set E. x \\<notin> fset (thd3 e); x \\<in> fset V;\n        x \\<notin> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)", "apply (insert e_in_E lin(2))[1]"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x ea.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e);\n        ea \\<in> set E \\<and> ea \\<noteq> e; e \\<in> set E;\n        \\<And>e f.\n           \\<lbrakk>e \\<in> set E; f \\<in> set E; e \\<noteq> f\\<rbrakk>\n           \\<Longrightarrow> fst3 e |\\<inter>| fst3 f = {||} \\<and>\n                             thd3 e |\\<inter>| thd3 f = {||}\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (thd3 ea)\n 2. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset V\n 3. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)\n 4. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e);\n        x \\<in> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset (fst3 e)\n 5. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V;\n        \\<forall>e\\<in>set E. x \\<notin> fset (thd3 e); x \\<in> fset V;\n        x \\<notin> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)", "apply (subst (asm) (2) fset_cong[symmetric])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x ea.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e);\n        ea \\<in> set E \\<and> ea \\<noteq> e; e \\<in> set E;\n        \\<And>e f.\n           \\<lbrakk>e \\<in> set E; f \\<in> set E; e \\<noteq> f\\<rbrakk>\n           \\<Longrightarrow> fst3 e |\\<inter>| fst3 f = {||} \\<and>\n                             fset (thd3 e |\\<inter>| thd3 f) =\n                             fset {||}\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (thd3 ea)\n 2. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset V\n 3. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)\n 4. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e);\n        x \\<in> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset (fst3 e)\n 5. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V;\n        \\<forall>e\\<in>set E. x \\<notin> fset (thd3 e); x \\<in> fset V;\n        x \\<notin> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)", "apply (elim conjE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x ea.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e); e \\<in> set E;\n        \\<And>e f.\n           \\<lbrakk>e \\<in> set E; f \\<in> set E; e \\<noteq> f\\<rbrakk>\n           \\<Longrightarrow> fst3 e |\\<inter>| fst3 f = {||} \\<and>\n                             fset (thd3 e |\\<inter>| thd3 f) = fset {||};\n        ea \\<in> set E; ea \\<noteq> e\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (thd3 ea)\n 2. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset V\n 3. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)\n 4. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e);\n        x \\<in> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset (fst3 e)\n 5. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V;\n        \\<forall>e\\<in>set E. x \\<notin> fset (thd3 e); x \\<in> fset V;\n        x \\<notin> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)", "apply (subst (asm) inter_fset)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x ea.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e); e \\<in> set E;\n        \\<And>e f.\n           \\<lbrakk>e \\<in> set E; f \\<in> set E; e \\<noteq> f\\<rbrakk>\n           \\<Longrightarrow> fst3 e |\\<inter>| fst3 f = {||} \\<and>\n                             fset (thd3 e) \\<inter> fset (thd3 f) =\n                             fset {||};\n        ea \\<in> set E; ea \\<noteq> e\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (thd3 ea)\n 2. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset V\n 3. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)\n 4. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e);\n        x \\<in> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset (fst3 e)\n 5. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V;\n        \\<forall>e\\<in>set E. x \\<notin> fset (thd3 e); x \\<in> fset V;\n        x \\<notin> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)", "apply (subst (asm) fset_simps)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x ea.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e); e \\<in> set E;\n        \\<And>e f.\n           \\<lbrakk>e \\<in> set E; f \\<in> set E; e \\<noteq> f\\<rbrakk>\n           \\<Longrightarrow> fst3 e |\\<inter>| fst3 f = {||} \\<and>\n                             fset (thd3 e) \\<inter> fset (thd3 f) = {};\n        ea \\<in> set E; ea \\<noteq> e\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (thd3 ea)\n 2. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset V\n 3. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)\n 4. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e);\n        x \\<in> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset (fst3 e)\n 5. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V;\n        \\<forall>e\\<in>set E. x \\<notin> fset (thd3 e); x \\<in> fset V;\n        x \\<notin> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)", "apply (insert disjoint_iff_not_equal)[1]"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x ea.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e); e \\<in> set E;\n        \\<And>e f.\n           \\<lbrakk>e \\<in> set E; f \\<in> set E; e \\<noteq> f\\<rbrakk>\n           \\<Longrightarrow> fst3 e |\\<inter>| fst3 f = {||} \\<and>\n                             fset (thd3 e) \\<inter> fset (thd3 f) = {};\n        ea \\<in> set E; ea \\<noteq> e;\n        \\<And>A B.\n           (A \\<inter> B = {}) =\n           (\\<forall>x\\<in>A. \\<forall>y\\<in>B. x \\<noteq> y)\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (thd3 ea)\n 2. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset V\n 3. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)\n 4. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e);\n        x \\<in> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset (fst3 e)\n 5. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V;\n        \\<forall>e\\<in>set E. x \\<notin> fset (thd3 e); x \\<in> fset V;\n        x \\<notin> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset V\n 2. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)\n 3. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e);\n        x \\<in> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset (fst3 e)\n 4. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V;\n        \\<forall>e\\<in>set E. x \\<notin> fset (thd3 e); x \\<in> fset V;\n        x \\<notin> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)", "apply (metis G_def Suc(3) e_in_E subsetD less_eq_fset.rep_eq wf_dia_inv')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)\n 2. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e);\n        x \\<in> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset (fst3 e)\n 3. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V;\n        \\<forall>e\\<in>set E. x \\<notin> fset (thd3 e); x \\<in> fset V;\n        x \\<notin> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e);\n        x \\<in> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> fset (fst3 e)\n 2. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)\n 3. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V;\n        \\<forall>e\\<in>set E. x \\<notin> fset (thd3 e); x \\<in> fset V;\n        x \\<notin> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)", "apply (metis (lifting) IntI Suc(2) \\<open>ws |\\<inter>| initials G = {||}\\<close>\n            empty_iff fset_simps(1) in_mono inter_fset less_eq_fset.rep_eq ws_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V; x \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)\n 2. \\<And>x.\n       \\<lbrakk>fset (fst3 e) \\<subseteq> fset S;\n        fset (fst3 e) \\<inter> fset (thd3 e) = {};\n        fset S\n        \\<subseteq> {v. \\<forall>e\\<in>set E. v \\<notin> fset (thd3 e)};\n        fset S \\<subseteq> fset V;\n        \\<forall>e\\<in>set E. x \\<notin> fset (thd3 e); x \\<in> fset V;\n        x \\<notin> fset S\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> fset (fst3 e)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  wf_ps_chain \\<Pi>\n\ngoal (1 subgoal):\n 1. post \\<Pi> = [ terminals G |=> Bot ]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. post \\<Pi> = [ terminals G |=> Bot ]", "show \"post \\<Pi> = [terminals G |=> Bot]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. post \\<Pi> = [ terminals G |=> Bot ]", "apply (unfold \\<Pi>_def \\<pi>_def x_def mk_ps_chain_cons)"], ["proof (prove)\ngoal (1 subgoal):\n 1. post\n     (mk_ps_chain\n       (cSnoc \\<lbrace> initial_ps2 S G \\<rbrace> (Inr e)\n         (next_ps (post \\<lbrace> initial_ps2 S G \\<rbrace>) (Inr e)))\n       \\<pi>') =\n    [ terminals G |=> Bot ]", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. post\n     (mk_ps_chain\n       (\\<lbrace> initial_ps2 S\n                   G \\<rbrace> \\<cdot> Inr\n  e \\<cdot> \\<lbrace> initial_ps2 S G \\<ominus> fst3 e ++\\<^sub>f\n                      [ thd3 e |=> Top ] \\<rbrace>)\n       \\<pi>') =\n    [ terminals G |=> Bot ]", "apply (unfold mk_ps_chain_ccons post.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. post\n     (mk_ps_chain\n       \\<lbrace> initial_ps2 S G \\<ominus> fst3 e ++\\<^sub>f\n                 [ thd3 e |=> Top ] \\<rbrace>\n       \\<pi>') =\n    [ terminals G |=> Bot ]", "apply (fold vs_def ws_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. post\n     (mk_ps_chain\n       \\<lbrace> initial_ps2 S G \\<ominus> vs ++\\<^sub>f\n                 [ ws |=> Top ] \\<rbrace>\n       \\<pi>') =\n    [ terminals G |=> Bot ]", "apply (fold next_initial_ps2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. post (mk_ps_chain \\<lbrace> initial_ps2 S' G' \\<rbrace> \\<pi>') =\n    [ terminals G |=> Bot ]", "apply (fold \\<Pi>'_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. post \\<Pi>' = [ terminals G |=> Bot ]", "apply (unfold terms_same)"], ["proof (prove)\ngoal (1 subgoal):\n 1. post \\<Pi>' = [ terminals G' |=> Bot ]", "apply (rule post_\\<Pi>')"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  post \\<Pi> = [ terminals G |=> Bot ]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary wf_chains:\n  assumes \"wf_dia G\"\n  assumes \"\\<Pi> \\<in> ps_chains G\"\n  shows \"wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_ps_chain \\<Pi> \\<and> post \\<Pi> = [ terminals G |=> Bot ]", "apply (intro wf_chains2[of \"{||}\"], insert assms(2))"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<Pi> \\<in> ps_chains G \\<Longrightarrow> {||} |\\<subseteq>| initials G\n 2. \\<Pi> \\<in> ps_chains G \\<Longrightarrow> wf_dia G\n 3. \\<Pi> \\<in> ps_chains G \\<Longrightarrow> \\<Pi> \\<in> ps_chains2 {||} G\n 4. \\<Pi> \\<in> ps_chains G \\<Longrightarrow>\n    fcard G^V + length G^E = ?k + fcard {||}", "by (auto simp add: assms(1) ps_chains_is_ps_chains2_with_empty_S fcard_fempty)"], ["", "subsection \\<open>Interface chains\\<close>"], ["", "type_synonym int_chain = \"(interface, assertion_gadget + command_gadget) chain\""], ["", "text \\<open>An interface chain is similar to a proofstate chain. However, where a\n  proofstate chain talks about nodes and edges, an interface chain talks about\n  the assertion-gadgets and command-gadgets that label those nodes and edges\n  in a diagram. And where a proofstate chain talks about proofstates, an\n  interface chain talks about the interfaces obtained from those proofstates.\n\n  The following functions convert a proofstate chain into an\n  interface chain.\\<close>"], ["", "definition\n  ps_to_int :: \"[diagram, proofstate] \\<Rightarrow> interface\"\nwhere\n  \"ps_to_int G \\<sigma> \\<equiv>\n    \\<Otimes>v |\\<in>| fmdom \\<sigma>. case_topbot top_ass bot_ass (lookup \\<sigma> v) (G^\\<Lambda> v)\""], ["", "definition\n  ps_chain_to_int_chain :: \"[diagram, ps_chain] \\<Rightarrow> int_chain\"\nwhere\n  \"ps_chain_to_int_chain G \\<Pi> \\<equiv>\n    chainmap (ps_to_int G) ((case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))) \\<Pi>\""], ["", "lemma ps_chain_to_int_chain_simp:\n  \"ps_chain_to_int_chain (Graph V \\<Lambda> E) \\<Pi> =\n    chainmap (ps_to_int (Graph V \\<Lambda> E)) ((case_sum (Inl \\<circ> \\<Lambda>) (Inr \\<circ> snd3))) \\<Pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ps_chain_to_int_chain (Graph V \\<Lambda> E) \\<Pi> =\n    chainmap (ps_to_int (Graph V \\<Lambda> E))\n     (case_sum (Inl \\<circ> \\<Lambda>) (Inr \\<circ> snd3)) \\<Pi>", "by (simp add: ps_chain_to_int_chain_def)"], ["", "subsection \\<open>Soundness proof\\<close>"], ["", "text \\<open>We assume that @{term wr_com} always returns @{term \"{}\"}. This is\n  equivalent to changing our axiomatization of separation logic such that the\n  frame rule has no side-condition. One way to obtain a separation logic\n  lacking a side-condition on its frame rule is to use variables-as-\n  resource.\n\n  We proceed by induction on the proof rules for graphical diagrams. We\n  show that: (1) if a diagram @{term G} is provable w.r.t. interfaces\n  @{term P} and @{term Q}, then @{term P} and @{term Q} are the top and bottom\n  interfaces of @{term G}, and that the Hoare triple @{term \"(asn P,\n  c, asn Q)\"} is provable for each command @{term c} that can be extracted\n  from @{term G}; (2) if a command-gadget @{term C} is provable w.r.t.\n  interfaces @{term P} and @{term Q}, then the Hoare triple @{term \"(asn P,\n  c, asn Q)\"} is provable for each command @{term c} that can be extracted\n  from @{term C}; and (3) if an assertion-gadget @{term A} is provable, and if\n  the top and bottom interfaces of @{term A} are @{term P} and @{term Q}\n  respectively, then the Hoare triple @{term \"(asn P, c, asn Q)\"} is provable\n  for each command @{term c} that can be extracted from @{term A}.\\<close>"], ["", "lemma soundness_graphical_helper:\n  assumes no_var_interference: \"\\<And>c. wr_com c = {}\"\n  shows\n    \"(prov_dia G P Q \\<longrightarrow>\n      (P = top_dia G \\<and> Q = bot_dia G \\<and>\n      (\\<forall>c. coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q))))\n   \\<and> (prov_com C P Q \\<longrightarrow>\n      (\\<forall>c. coms_com C c \\<longrightarrow> prov_triple (asn P, c, asn Q)))\n   \\<and> (prov_ass A \\<longrightarrow>\n      (\\<forall>c. coms_ass A c \\<longrightarrow> prov_triple (asn (top_ass A), c, asn (bot_ass A))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (prov_dia G P Q \\<longrightarrow>\n     P = top_dia G \\<and>\n     Q = bot_dia G \\<and>\n     (\\<forall>c.\n         coms_dia G c \\<longrightarrow>\n         prov_triple (asn P, c, asn Q))) \\<and>\n    (prov_com C P Q \\<longrightarrow>\n     (\\<forall>c.\n         coms_com C c \\<longrightarrow>\n         prov_triple (asn P, c, asn Q))) \\<and>\n    (prov_ass A \\<longrightarrow>\n     (\\<forall>c.\n         coms_ass A c \\<longrightarrow>\n         prov_triple (asn (top_ass A), c, asn (bot_ass A))))", "proof (induct rule: prov_dia_prov_com_prov_ass.induct)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>p.\n       \\<forall>c.\n          coms_ass (Rib p) c \\<longrightarrow>\n          prov_triple (asn (top_ass (Rib p)), c, asn (bot_ass (Rib p)))\n 2. \\<And>G uu_ uv_ x.\n       \\<lbrakk>prov_dia G uu_ uv_;\n        uu_ = top_dia G \\<and>\n        uv_ = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn uu_, c, asn uv_))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_ass (Exists_dia x G) c \\<longrightarrow>\n                            prov_triple\n                             (asn (top_ass (Exists_dia x G)), c,\n                              asn (bot_ass (Exists_dia x G)))\n 3. \\<And>P c Q.\n       prov_triple (asn P, c, asn Q) \\<Longrightarrow>\n       \\<forall>ca.\n          coms_com (Com c) ca \\<longrightarrow>\n          prov_triple (asn P, ca, asn Q)\n 4. \\<And>G P Q H.\n       \\<lbrakk>prov_dia G P Q;\n        P = top_dia G \\<and>\n        Q = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q));\n        prov_dia H P Q;\n        P = top_dia H \\<and>\n        Q = bot_dia H \\<and>\n        (\\<forall>c.\n            coms_dia H c \\<longrightarrow>\n            prov_triple (asn P, c, asn Q))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Choose_dia G H) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn Q)\n 5. \\<And>G P.\n       \\<lbrakk>prov_dia G P P;\n        P = top_dia G \\<and>\n        P = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn P, c, asn P))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Loop_dia G) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn P)\n 6. \\<And>G.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3\n e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n       \\<Longrightarrow> top_dia G = top_dia G \\<and>\n                         bot_dia G = bot_dia G \\<and>\n                         (\\<forall>c.\n                             coms_dia G c \\<longrightarrow>\n                             prov_triple\n                              (asn (top_dia G), c, asn (bot_dia G)))", "case (Skip p)"], ["proof (state)\nthis:\n  \n\ngoal (6 subgoals):\n 1. \\<And>p.\n       \\<forall>c.\n          coms_ass (Rib p) c \\<longrightarrow>\n          prov_triple (asn (top_ass (Rib p)), c, asn (bot_ass (Rib p)))\n 2. \\<And>G uu_ uv_ x.\n       \\<lbrakk>prov_dia G uu_ uv_;\n        uu_ = top_dia G \\<and>\n        uv_ = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn uu_, c, asn uv_))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_ass (Exists_dia x G) c \\<longrightarrow>\n                            prov_triple\n                             (asn (top_ass (Exists_dia x G)), c,\n                              asn (bot_ass (Exists_dia x G)))\n 3. \\<And>P c Q.\n       prov_triple (asn P, c, asn Q) \\<Longrightarrow>\n       \\<forall>ca.\n          coms_com (Com c) ca \\<longrightarrow>\n          prov_triple (asn P, ca, asn Q)\n 4. \\<And>G P Q H.\n       \\<lbrakk>prov_dia G P Q;\n        P = top_dia G \\<and>\n        Q = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q));\n        prov_dia H P Q;\n        P = top_dia H \\<and>\n        Q = bot_dia H \\<and>\n        (\\<forall>c.\n            coms_dia H c \\<longrightarrow>\n            prov_triple (asn P, c, asn Q))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Choose_dia G H) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn Q)\n 5. \\<And>G P.\n       \\<lbrakk>prov_dia G P P;\n        P = top_dia G \\<and>\n        P = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn P, c, asn P))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Loop_dia G) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn P)\n 6. \\<And>G.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3\n e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n       \\<Longrightarrow> top_dia G = top_dia G \\<and>\n                         bot_dia G = bot_dia G \\<and>\n                         (\\<forall>c.\n                             coms_dia G c \\<longrightarrow>\n                             prov_triple\n                              (asn (top_dia G), c, asn (bot_dia G)))", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c.\n       coms_ass (Rib p) c \\<longrightarrow>\n       prov_triple (asn (top_ass (Rib p)), c, asn (bot_ass (Rib p)))", "apply (intro allI impI, elim conjE coms_skip_inv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c.\n       c = Skip \\<Longrightarrow>\n       prov_triple (asn (top_ass (Rib p)), c, asn (bot_ass (Rib p)))", "apply (auto simp add: prov_triple.skip)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>c.\n     coms_ass (Rib p) c \\<longrightarrow>\n     prov_triple (asn (top_ass (Rib p)), c, asn (bot_ass (Rib p)))\n\ngoal (5 subgoals):\n 1. \\<And>G uu_ uv_ x.\n       \\<lbrakk>prov_dia G uu_ uv_;\n        uu_ = top_dia G \\<and>\n        uv_ = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn uu_, c, asn uv_))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_ass (Exists_dia x G) c \\<longrightarrow>\n                            prov_triple\n                             (asn (top_ass (Exists_dia x G)), c,\n                              asn (bot_ass (Exists_dia x G)))\n 2. \\<And>P c Q.\n       prov_triple (asn P, c, asn Q) \\<Longrightarrow>\n       \\<forall>ca.\n          coms_com (Com c) ca \\<longrightarrow>\n          prov_triple (asn P, ca, asn Q)\n 3. \\<And>G P Q H.\n       \\<lbrakk>prov_dia G P Q;\n        P = top_dia G \\<and>\n        Q = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q));\n        prov_dia H P Q;\n        P = top_dia H \\<and>\n        Q = bot_dia H \\<and>\n        (\\<forall>c.\n            coms_dia H c \\<longrightarrow>\n            prov_triple (asn P, c, asn Q))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Choose_dia G H) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn Q)\n 4. \\<And>G P.\n       \\<lbrakk>prov_dia G P P;\n        P = top_dia G \\<and>\n        P = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn P, c, asn P))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Loop_dia G) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn P)\n 5. \\<And>G.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3\n e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n       \\<Longrightarrow> top_dia G = top_dia G \\<and>\n                         bot_dia G = bot_dia G \\<and>\n                         (\\<forall>c.\n                             coms_dia G c \\<longrightarrow>\n                             prov_triple\n                              (asn (top_dia G), c, asn (bot_dia G)))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>G uu_ uv_ x.\n       \\<lbrakk>prov_dia G uu_ uv_;\n        uu_ = top_dia G \\<and>\n        uv_ = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn uu_, c, asn uv_))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_ass (Exists_dia x G) c \\<longrightarrow>\n                            prov_triple\n                             (asn (top_ass (Exists_dia x G)), c,\n                              asn (bot_ass (Exists_dia x G)))\n 2. \\<And>P c Q.\n       prov_triple (asn P, c, asn Q) \\<Longrightarrow>\n       \\<forall>ca.\n          coms_com (Com c) ca \\<longrightarrow>\n          prov_triple (asn P, ca, asn Q)\n 3. \\<And>G P Q H.\n       \\<lbrakk>prov_dia G P Q;\n        P = top_dia G \\<and>\n        Q = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q));\n        prov_dia H P Q;\n        P = top_dia H \\<and>\n        Q = bot_dia H \\<and>\n        (\\<forall>c.\n            coms_dia H c \\<longrightarrow>\n            prov_triple (asn P, c, asn Q))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Choose_dia G H) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn Q)\n 4. \\<And>G P.\n       \\<lbrakk>prov_dia G P P;\n        P = top_dia G \\<and>\n        P = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn P, c, asn P))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Loop_dia G) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn P)\n 5. \\<And>G.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3\n e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n       \\<Longrightarrow> top_dia G = top_dia G \\<and>\n                         bot_dia G = bot_dia G \\<and>\n                         (\\<forall>c.\n                             coms_dia G c \\<longrightarrow>\n                             prov_triple\n                              (asn (top_dia G), c, asn (bot_dia G)))", "case (Exists G P Q x)"], ["proof (state)\nthis:\n  prov_dia G P Q\n  P = top_dia G \\<and>\n  Q = bot_dia G \\<and>\n  (\\<forall>c. coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q))\n\ngoal (5 subgoals):\n 1. \\<And>G uu_ uv_ x.\n       \\<lbrakk>prov_dia G uu_ uv_;\n        uu_ = top_dia G \\<and>\n        uv_ = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn uu_, c, asn uv_))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_ass (Exists_dia x G) c \\<longrightarrow>\n                            prov_triple\n                             (asn (top_ass (Exists_dia x G)), c,\n                              asn (bot_ass (Exists_dia x G)))\n 2. \\<And>P c Q.\n       prov_triple (asn P, c, asn Q) \\<Longrightarrow>\n       \\<forall>ca.\n          coms_com (Com c) ca \\<longrightarrow>\n          prov_triple (asn P, ca, asn Q)\n 3. \\<And>G P Q H.\n       \\<lbrakk>prov_dia G P Q;\n        P = top_dia G \\<and>\n        Q = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q));\n        prov_dia H P Q;\n        P = top_dia H \\<and>\n        Q = bot_dia H \\<and>\n        (\\<forall>c.\n            coms_dia H c \\<longrightarrow>\n            prov_triple (asn P, c, asn Q))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Choose_dia G H) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn Q)\n 4. \\<And>G P.\n       \\<lbrakk>prov_dia G P P;\n        P = top_dia G \\<and>\n        P = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn P, c, asn P))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Loop_dia G) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn P)\n 5. \\<And>G.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3\n e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n       \\<Longrightarrow> top_dia G = top_dia G \\<and>\n                         bot_dia G = bot_dia G \\<and>\n                         (\\<forall>c.\n                             coms_dia G c \\<longrightarrow>\n                             prov_triple\n                              (asn (top_dia G), c, asn (bot_dia G)))", "thus ?case"], ["proof (prove)\nusing this:\n  prov_dia G P Q\n  P = top_dia G \\<and>\n  Q = bot_dia G \\<and>\n  (\\<forall>c. coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q))\n\ngoal (1 subgoal):\n 1. \\<forall>c.\n       coms_ass (Exists_dia x G) c \\<longrightarrow>\n       prov_triple\n        (asn (top_ass (Exists_dia x G)), c, asn (bot_ass (Exists_dia x G)))", "apply (intro allI impI, elim conjE coms_exists_inv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c.\n       \\<lbrakk>prov_dia G P Q; prov_dia G P Q; P = top_dia G;\n        P = top_dia G; Q = bot_dia G;\n        \\<forall>c.\n           coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q);\n        Q = bot_dia G;\n        \\<forall>c.\n           coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q);\n        coms_dia G c\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (top_ass (Exists_dia x G)), c,\n                           asn (bot_ass (Exists_dia x G)))", "apply (auto simp add: prov_triple.exists)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>c.\n     coms_ass (Exists_dia x G) c \\<longrightarrow>\n     prov_triple\n      (asn (top_ass (Exists_dia x G)), c, asn (bot_ass (Exists_dia x G)))\n\ngoal (4 subgoals):\n 1. \\<And>P c Q.\n       prov_triple (asn P, c, asn Q) \\<Longrightarrow>\n       \\<forall>ca.\n          coms_com (Com c) ca \\<longrightarrow>\n          prov_triple (asn P, ca, asn Q)\n 2. \\<And>G P Q H.\n       \\<lbrakk>prov_dia G P Q;\n        P = top_dia G \\<and>\n        Q = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q));\n        prov_dia H P Q;\n        P = top_dia H \\<and>\n        Q = bot_dia H \\<and>\n        (\\<forall>c.\n            coms_dia H c \\<longrightarrow>\n            prov_triple (asn P, c, asn Q))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Choose_dia G H) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn Q)\n 3. \\<And>G P.\n       \\<lbrakk>prov_dia G P P;\n        P = top_dia G \\<and>\n        P = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn P, c, asn P))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Loop_dia G) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn P)\n 4. \\<And>G.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3\n e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n       \\<Longrightarrow> top_dia G = top_dia G \\<and>\n                         bot_dia G = bot_dia G \\<and>\n                         (\\<forall>c.\n                             coms_dia G c \\<longrightarrow>\n                             prov_triple\n                              (asn (top_dia G), c, asn (bot_dia G)))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P c Q.\n       prov_triple (asn P, c, asn Q) \\<Longrightarrow>\n       \\<forall>ca.\n          coms_com (Com c) ca \\<longrightarrow>\n          prov_triple (asn P, ca, asn Q)\n 2. \\<And>G P Q H.\n       \\<lbrakk>prov_dia G P Q;\n        P = top_dia G \\<and>\n        Q = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q));\n        prov_dia H P Q;\n        P = top_dia H \\<and>\n        Q = bot_dia H \\<and>\n        (\\<forall>c.\n            coms_dia H c \\<longrightarrow>\n            prov_triple (asn P, c, asn Q))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Choose_dia G H) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn Q)\n 3. \\<And>G P.\n       \\<lbrakk>prov_dia G P P;\n        P = top_dia G \\<and>\n        P = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn P, c, asn P))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Loop_dia G) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn P)\n 4. \\<And>G.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3\n e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n       \\<Longrightarrow> top_dia G = top_dia G \\<and>\n                         bot_dia G = bot_dia G \\<and>\n                         (\\<forall>c.\n                             coms_dia G c \\<longrightarrow>\n                             prov_triple\n                              (asn (top_dia G), c, asn (bot_dia G)))", "case (Basic P c Q)"], ["proof (state)\nthis:\n  prov_triple (asn P, c, asn Q)\n\ngoal (4 subgoals):\n 1. \\<And>P c Q.\n       prov_triple (asn P, c, asn Q) \\<Longrightarrow>\n       \\<forall>ca.\n          coms_com (Com c) ca \\<longrightarrow>\n          prov_triple (asn P, ca, asn Q)\n 2. \\<And>G P Q H.\n       \\<lbrakk>prov_dia G P Q;\n        P = top_dia G \\<and>\n        Q = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q));\n        prov_dia H P Q;\n        P = top_dia H \\<and>\n        Q = bot_dia H \\<and>\n        (\\<forall>c.\n            coms_dia H c \\<longrightarrow>\n            prov_triple (asn P, c, asn Q))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Choose_dia G H) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn Q)\n 3. \\<And>G P.\n       \\<lbrakk>prov_dia G P P;\n        P = top_dia G \\<and>\n        P = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn P, c, asn P))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Loop_dia G) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn P)\n 4. \\<And>G.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3\n e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n       \\<Longrightarrow> top_dia G = top_dia G \\<and>\n                         bot_dia G = bot_dia G \\<and>\n                         (\\<forall>c.\n                             coms_dia G c \\<longrightarrow>\n                             prov_triple\n                              (asn (top_dia G), c, asn (bot_dia G)))", "thus ?case"], ["proof (prove)\nusing this:\n  prov_triple (asn P, c, asn Q)\n\ngoal (1 subgoal):\n 1. \\<forall>ca.\n       coms_com (Com c) ca \\<longrightarrow> prov_triple (asn P, ca, asn Q)", "by (intro allI impI, elim conjE coms_basic_inv, auto)"], ["proof (state)\nthis:\n  \\<forall>ca.\n     coms_com (Com c) ca \\<longrightarrow> prov_triple (asn P, ca, asn Q)\n\ngoal (3 subgoals):\n 1. \\<And>G P Q H.\n       \\<lbrakk>prov_dia G P Q;\n        P = top_dia G \\<and>\n        Q = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q));\n        prov_dia H P Q;\n        P = top_dia H \\<and>\n        Q = bot_dia H \\<and>\n        (\\<forall>c.\n            coms_dia H c \\<longrightarrow>\n            prov_triple (asn P, c, asn Q))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Choose_dia G H) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn Q)\n 2. \\<And>G P.\n       \\<lbrakk>prov_dia G P P;\n        P = top_dia G \\<and>\n        P = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn P, c, asn P))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Loop_dia G) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn P)\n 3. \\<And>G.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3\n e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n       \\<Longrightarrow> top_dia G = top_dia G \\<and>\n                         bot_dia G = bot_dia G \\<and>\n                         (\\<forall>c.\n                             coms_dia G c \\<longrightarrow>\n                             prov_triple\n                              (asn (top_dia G), c, asn (bot_dia G)))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>G P Q H.\n       \\<lbrakk>prov_dia G P Q;\n        P = top_dia G \\<and>\n        Q = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q));\n        prov_dia H P Q;\n        P = top_dia H \\<and>\n        Q = bot_dia H \\<and>\n        (\\<forall>c.\n            coms_dia H c \\<longrightarrow>\n            prov_triple (asn P, c, asn Q))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Choose_dia G H) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn Q)\n 2. \\<And>G P.\n       \\<lbrakk>prov_dia G P P;\n        P = top_dia G \\<and>\n        P = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn P, c, asn P))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Loop_dia G) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn P)\n 3. \\<And>G.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3\n e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n       \\<Longrightarrow> top_dia G = top_dia G \\<and>\n                         bot_dia G = bot_dia G \\<and>\n                         (\\<forall>c.\n                             coms_dia G c \\<longrightarrow>\n                             prov_triple\n                              (asn (top_dia G), c, asn (bot_dia G)))", "case (Choice G P Q H)"], ["proof (state)\nthis:\n  prov_dia G P Q\n  P = top_dia G \\<and>\n  Q = bot_dia G \\<and>\n  (\\<forall>c. coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q))\n  prov_dia H P Q\n  P = top_dia H \\<and>\n  Q = bot_dia H \\<and>\n  (\\<forall>c. coms_dia H c \\<longrightarrow> prov_triple (asn P, c, asn Q))\n\ngoal (3 subgoals):\n 1. \\<And>G P Q H.\n       \\<lbrakk>prov_dia G P Q;\n        P = top_dia G \\<and>\n        Q = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q));\n        prov_dia H P Q;\n        P = top_dia H \\<and>\n        Q = bot_dia H \\<and>\n        (\\<forall>c.\n            coms_dia H c \\<longrightarrow>\n            prov_triple (asn P, c, asn Q))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Choose_dia G H) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn Q)\n 2. \\<And>G P.\n       \\<lbrakk>prov_dia G P P;\n        P = top_dia G \\<and>\n        P = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn P, c, asn P))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Loop_dia G) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn P)\n 3. \\<And>G.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3\n e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n       \\<Longrightarrow> top_dia G = top_dia G \\<and>\n                         bot_dia G = bot_dia G \\<and>\n                         (\\<forall>c.\n                             coms_dia G c \\<longrightarrow>\n                             prov_triple\n                              (asn (top_dia G), c, asn (bot_dia G)))", "thus ?case"], ["proof (prove)\nusing this:\n  prov_dia G P Q\n  P = top_dia G \\<and>\n  Q = bot_dia G \\<and>\n  (\\<forall>c. coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q))\n  prov_dia H P Q\n  P = top_dia H \\<and>\n  Q = bot_dia H \\<and>\n  (\\<forall>c. coms_dia H c \\<longrightarrow> prov_triple (asn P, c, asn Q))\n\ngoal (1 subgoal):\n 1. \\<forall>c.\n       coms_com (Choose_dia G H) c \\<longrightarrow>\n       prov_triple (asn P, c, asn Q)", "apply (intro allI impI, elim conjE coms_choice_inv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c ca d.\n       \\<lbrakk>prov_dia G P Q; prov_dia H P Q; prov_dia G P Q;\n        prov_dia H P Q; P = top_dia G; P = top_dia H; P = top_dia G;\n        P = top_dia H; Q = bot_dia G;\n        \\<forall>c.\n           coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q);\n        Q = bot_dia H;\n        \\<forall>c.\n           coms_dia H c \\<longrightarrow> prov_triple (asn P, c, asn Q);\n        Q = bot_dia G;\n        \\<forall>c.\n           coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q);\n        Q = bot_dia H;\n        \\<forall>c.\n           coms_dia H c \\<longrightarrow> prov_triple (asn P, c, asn Q);\n        c = Choose ca d; coms_dia G ca; coms_dia H d\\<rbrakk>\n       \\<Longrightarrow> prov_triple (asn P, c, asn Q)", "apply (auto simp add: prov_triple.choose)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>c.\n     coms_com (Choose_dia G H) c \\<longrightarrow>\n     prov_triple (asn P, c, asn Q)\n\ngoal (2 subgoals):\n 1. \\<And>G P.\n       \\<lbrakk>prov_dia G P P;\n        P = top_dia G \\<and>\n        P = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn P, c, asn P))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Loop_dia G) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn P)\n 2. \\<And>G.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3\n e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n       \\<Longrightarrow> top_dia G = top_dia G \\<and>\n                         bot_dia G = bot_dia G \\<and>\n                         (\\<forall>c.\n                             coms_dia G c \\<longrightarrow>\n                             prov_triple\n                              (asn (top_dia G), c, asn (bot_dia G)))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>G P.\n       \\<lbrakk>prov_dia G P P;\n        P = top_dia G \\<and>\n        P = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn P, c, asn P))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Loop_dia G) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn P)\n 2. \\<And>G.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3\n e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n       \\<Longrightarrow> top_dia G = top_dia G \\<and>\n                         bot_dia G = bot_dia G \\<and>\n                         (\\<forall>c.\n                             coms_dia G c \\<longrightarrow>\n                             prov_triple\n                              (asn (top_dia G), c, asn (bot_dia G)))", "case (Loop G P)"], ["proof (state)\nthis:\n  prov_dia G P P\n  P = top_dia G \\<and>\n  P = bot_dia G \\<and>\n  (\\<forall>c. coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn P))\n\ngoal (2 subgoals):\n 1. \\<And>G P.\n       \\<lbrakk>prov_dia G P P;\n        P = top_dia G \\<and>\n        P = bot_dia G \\<and>\n        (\\<forall>c.\n            coms_dia G c \\<longrightarrow>\n            prov_triple (asn P, c, asn P))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            coms_com (Loop_dia G) c \\<longrightarrow>\n                            prov_triple (asn P, c, asn P)\n 2. \\<And>G.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3\n e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n       \\<Longrightarrow> top_dia G = top_dia G \\<and>\n                         bot_dia G = bot_dia G \\<and>\n                         (\\<forall>c.\n                             coms_dia G c \\<longrightarrow>\n                             prov_triple\n                              (asn (top_dia G), c, asn (bot_dia G)))", "thus ?case"], ["proof (prove)\nusing this:\n  prov_dia G P P\n  P = top_dia G \\<and>\n  P = bot_dia G \\<and>\n  (\\<forall>c. coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn P))\n\ngoal (1 subgoal):\n 1. \\<forall>c.\n       coms_com (Loop_dia G) c \\<longrightarrow>\n       prov_triple (asn P, c, asn P)", "apply (intro allI impI, elim conjE coms_loop_inv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c ca.\n       \\<lbrakk>prov_dia G P P; prov_dia G P P; P = top_dia G;\n        P = top_dia G; P = bot_dia G;\n        \\<forall>c.\n           coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn P);\n        P = bot_dia G;\n        \\<forall>c.\n           coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn P);\n        c = Loop ca; coms_dia G ca\\<rbrakk>\n       \\<Longrightarrow> prov_triple (asn P, c, asn P)", "apply (auto simp add: prov_triple.loop)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>c.\n     coms_com (Loop_dia G) c \\<longrightarrow> prov_triple (asn P, c, asn P)\n\ngoal (1 subgoal):\n 1. \\<And>G.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3\n e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n       \\<Longrightarrow> top_dia G = top_dia G \\<and>\n                         bot_dia G = bot_dia G \\<and>\n                         (\\<forall>c.\n                             coms_dia G c \\<longrightarrow>\n                             prov_triple\n                              (asn (top_dia G), c, asn (bot_dia G)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>G.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3\n e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n       \\<Longrightarrow> top_dia G = top_dia G \\<and>\n                         bot_dia G = bot_dia G \\<and>\n                         (\\<forall>c.\n                             coms_dia G c \\<longrightarrow>\n                             prov_triple\n                              (asn (top_dia G), c, asn (bot_dia G)))", "case (Main G)"], ["proof (state)\nthis:\n  wf_dia G\n  ?v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> ?v)\n  ?v \\<in> fset G^V \\<Longrightarrow>\n  \\<forall>c.\n     coms_ass (G^\\<Lambda> ?v) c \\<longrightarrow>\n     prov_triple\n      (asn (top_ass (G^\\<Lambda> ?v)), c, asn (bot_ass (G^\\<Lambda> ?v)))\n  ?e \\<in> set G^E \\<Longrightarrow>\n  prov_com (snd3 ?e) (\\<Otimes>v|\\<in>|fst3 ?e. bot_ass (G^\\<Lambda> v))\n   (\\<Otimes>v|\\<in>|thd3 ?e. top_ass (G^\\<Lambda> v))\n  ?e \\<in> set G^E \\<Longrightarrow>\n  \\<forall>c.\n     coms_com (snd3 ?e) c \\<longrightarrow>\n     prov_triple\n      (asn (\\<Otimes>v|\\<in>|fst3 ?e. bot_ass (G^\\<Lambda> v)), c,\n       asn (\\<Otimes>v|\\<in>|thd3 ?e. top_ass (G^\\<Lambda> v)))\n\ngoal (1 subgoal):\n 1. \\<And>G.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3\n e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n       \\<Longrightarrow> top_dia G = top_dia G \\<and>\n                         bot_dia G = bot_dia G \\<and>\n                         (\\<forall>c.\n                             coms_dia G c \\<longrightarrow>\n                             prov_triple\n                              (asn (top_dia G), c, asn (bot_dia G)))", "thus ?case"], ["proof (prove)\nusing this:\n  wf_dia G\n  ?v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> ?v)\n  ?v \\<in> fset G^V \\<Longrightarrow>\n  \\<forall>c.\n     coms_ass (G^\\<Lambda> ?v) c \\<longrightarrow>\n     prov_triple\n      (asn (top_ass (G^\\<Lambda> ?v)), c, asn (bot_ass (G^\\<Lambda> ?v)))\n  ?e \\<in> set G^E \\<Longrightarrow>\n  prov_com (snd3 ?e) (\\<Otimes>v|\\<in>|fst3 ?e. bot_ass (G^\\<Lambda> v))\n   (\\<Otimes>v|\\<in>|thd3 ?e. top_ass (G^\\<Lambda> v))\n  ?e \\<in> set G^E \\<Longrightarrow>\n  \\<forall>c.\n     coms_com (snd3 ?e) c \\<longrightarrow>\n     prov_triple\n      (asn (\\<Otimes>v|\\<in>|fst3 ?e. bot_ass (G^\\<Lambda> v)), c,\n       asn (\\<Otimes>v|\\<in>|thd3 ?e. top_ass (G^\\<Lambda> v)))\n\ngoal (1 subgoal):\n 1. top_dia G = top_dia G \\<and>\n    bot_dia G = bot_dia G \\<and>\n    (\\<forall>c.\n        coms_dia G c \\<longrightarrow>\n        prov_triple (asn (top_dia G), c, asn (bot_dia G)))", "apply (intro conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>wf_dia G;\n     \\<And>v. v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n     \\<And>v.\n        v \\<in> fset G^V \\<Longrightarrow>\n        \\<forall>c.\n           coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n           prov_triple\n            (asn (top_ass (G^\\<Lambda> v)), c,\n             asn (bot_ass (G^\\<Lambda> v)));\n     \\<And>e.\n        e \\<in> set G^E \\<Longrightarrow>\n        prov_com (snd3 e) (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n         (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n     \\<And>e.\n        e \\<in> set G^E \\<Longrightarrow>\n        \\<forall>c.\n           coms_com (snd3 e) c \\<longrightarrow>\n           prov_triple\n            (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n             asn (\\<Otimes>v|\\<in>|thd3\n                                    e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n    \\<Longrightarrow> top_dia G = top_dia G\n 2. \\<lbrakk>wf_dia G;\n     \\<And>v. v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n     \\<And>v.\n        v \\<in> fset G^V \\<Longrightarrow>\n        \\<forall>c.\n           coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n           prov_triple\n            (asn (top_ass (G^\\<Lambda> v)), c,\n             asn (bot_ass (G^\\<Lambda> v)));\n     \\<And>e.\n        e \\<in> set G^E \\<Longrightarrow>\n        prov_com (snd3 e) (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n         (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n     \\<And>e.\n        e \\<in> set G^E \\<Longrightarrow>\n        \\<forall>c.\n           coms_com (snd3 e) c \\<longrightarrow>\n           prov_triple\n            (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n             asn (\\<Otimes>v|\\<in>|thd3\n                                    e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n    \\<Longrightarrow> bot_dia G = bot_dia G\n 3. \\<lbrakk>wf_dia G;\n     \\<And>v. v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n     \\<And>v.\n        v \\<in> fset G^V \\<Longrightarrow>\n        \\<forall>c.\n           coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n           prov_triple\n            (asn (top_ass (G^\\<Lambda> v)), c,\n             asn (bot_ass (G^\\<Lambda> v)));\n     \\<And>e.\n        e \\<in> set G^E \\<Longrightarrow>\n        prov_com (snd3 e) (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n         (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n     \\<And>e.\n        e \\<in> set G^E \\<Longrightarrow>\n        \\<forall>c.\n           coms_com (snd3 e) c \\<longrightarrow>\n           prov_triple\n            (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n             asn (\\<Otimes>v|\\<in>|thd3\n                                    e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n    \\<Longrightarrow> \\<forall>c.\n                         coms_dia G c \\<longrightarrow>\n                         prov_triple (asn (top_dia G), c, asn (bot_dia G))", "apply (simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_dia G;\n     \\<And>v. v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n     \\<And>v.\n        v \\<in> fset G^V \\<Longrightarrow>\n        \\<forall>c.\n           coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n           prov_triple\n            (asn (top_ass (G^\\<Lambda> v)), c,\n             asn (bot_ass (G^\\<Lambda> v)));\n     \\<And>e.\n        e \\<in> set G^E \\<Longrightarrow>\n        prov_com (snd3 e) (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n         (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n     \\<And>e.\n        e \\<in> set G^E \\<Longrightarrow>\n        \\<forall>c.\n           coms_com (snd3 e) c \\<longrightarrow>\n           prov_triple\n            (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n             asn (\\<Otimes>v|\\<in>|thd3\n                                    e. top_ass (G^\\<Lambda> v)))\\<rbrakk>\n    \\<Longrightarrow> \\<forall>c.\n                         coms_dia G c \\<longrightarrow>\n                         prov_triple (asn (top_dia G), c, asn (bot_dia G))", "apply (intro allI impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c.\n       \\<lbrakk>wf_dia G;\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow> prov_ass (G^\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset G^V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (G^\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (G^\\<Lambda> v)), c,\n                asn (bot_ass (G^\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set G^E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (G^\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (G^\\<Lambda> v)));\n        coms_dia G c\\<rbrakk>\n       \\<Longrightarrow> prov_triple (asn (top_dia G), c, asn (bot_dia G))", "apply (elim coms_main_inv, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "fix c V \\<Lambda> E"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "fix \\<pi>::\"lin\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "fix cs::\"command list\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "assume wf_G: \"wf_dia (Graph V \\<Lambda> E)\""], ["proof (state)\nthis:\n  wf_dia (Graph V \\<Lambda> E)\n\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "assume \"\\<And>v. v \\<in> fset V \\<Longrightarrow> \\<forall>c. coms_ass (\\<Lambda> v) c \\<longrightarrow>\n      prov_triple (asn (top_ass (\\<Lambda> v)), c, asn (bot_ass (\\<Lambda> v)))\""], ["proof (state)\nthis:\n  ?v \\<in> fset V \\<Longrightarrow>\n  \\<forall>c.\n     coms_ass (\\<Lambda> ?v) c \\<longrightarrow>\n     prov_triple\n      (asn (top_ass (\\<Lambda> ?v)), c, asn (bot_ass (\\<Lambda> ?v)))\n\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "hence prov_vertex: \"\\<And>v c P Q F. \\<lbrakk> coms_ass (\\<Lambda> v) c; v \\<in> fset V;\n      P = (top_ass (\\<Lambda> v) \\<otimes> F) ; Q = (bot_ass (\\<Lambda> v) \\<otimes> F) \\<rbrakk>\n      \\<Longrightarrow> prov_triple (asn P, c, asn Q)\""], ["proof (prove)\nusing this:\n  ?v \\<in> fset V \\<Longrightarrow>\n  \\<forall>c.\n     coms_ass (\\<Lambda> ?v) c \\<longrightarrow>\n     prov_triple\n      (asn (top_ass (\\<Lambda> ?v)), c, asn (bot_ass (\\<Lambda> ?v)))\n\ngoal (1 subgoal):\n 1. \\<And>v c P Q F.\n       \\<lbrakk>coms_ass (\\<Lambda> v) c; v \\<in> fset V;\n        P = (top_ass (\\<Lambda> v) \\<otimes> F);\n        Q = (bot_ass (\\<Lambda> v) \\<otimes> F)\\<rbrakk>\n       \\<Longrightarrow> prov_triple (asn P, c, asn Q)", "by (auto simp add: prov_triple.frame no_var_interference)"], ["proof (state)\nthis:\n  \\<lbrakk>coms_ass (\\<Lambda> ?v) ?c; ?v \\<in> fset V;\n   ?P = (top_ass (\\<Lambda> ?v) \\<otimes> ?F);\n   ?Q = (bot_ass (\\<Lambda> ?v) \\<otimes> ?F)\\<rbrakk>\n  \\<Longrightarrow> prov_triple (asn ?P, ?c, asn ?Q)\n\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "assume \"\\<And>e. e \\<in> set E \\<Longrightarrow> \\<forall>c. coms_com (snd3 e) c \\<longrightarrow> prov_triple\n      (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)),c,asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)))\""], ["proof (state)\nthis:\n  ?e \\<in> set E \\<Longrightarrow>\n  \\<forall>c.\n     coms_com (snd3 ?e) c \\<longrightarrow>\n     prov_triple\n      (asn (\\<Otimes>v|\\<in>|fst3 ?e. bot_ass (\\<Lambda> v)), c,\n       asn (\\<Otimes>v|\\<in>|thd3 ?e. top_ass (\\<Lambda> v)))\n\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "hence prov_edge: \"\\<And>e c P Q F. \\<lbrakk> e \\<in> set E ; coms_com (snd3 e) c ;\n      P = ((\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)) \\<otimes> F) ;\n      Q = ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes> F) \\<rbrakk>\n      \\<Longrightarrow> prov_triple (asn P, c, asn Q)\""], ["proof (prove)\nusing this:\n  ?e \\<in> set E \\<Longrightarrow>\n  \\<forall>c.\n     coms_com (snd3 ?e) c \\<longrightarrow>\n     prov_triple\n      (asn (\\<Otimes>v|\\<in>|fst3 ?e. bot_ass (\\<Lambda> v)), c,\n       asn (\\<Otimes>v|\\<in>|thd3 ?e. top_ass (\\<Lambda> v)))\n\ngoal (1 subgoal):\n 1. \\<And>e c P Q F.\n       \\<lbrakk>e \\<in> set E; coms_com (snd3 e) c;\n        P = ((\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)) \\<otimes> F);\n        Q =\n        ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes>\n         F)\\<rbrakk>\n       \\<Longrightarrow> prov_triple (asn P, c, asn Q)", "by (auto simp add: prov_triple.frame no_var_interference)"], ["proof (state)\nthis:\n  \\<lbrakk>?e \\<in> set E; coms_com (snd3 ?e) ?c;\n   ?P = ((\\<Otimes>v|\\<in>|fst3 ?e. bot_ass (\\<Lambda> v)) \\<otimes> ?F);\n   ?Q =\n   ((\\<Otimes>v|\\<in>|thd3 ?e. top_ass (\\<Lambda> v)) \\<otimes> ?F)\\<rbrakk>\n  \\<Longrightarrow> prov_triple (asn ?P, ?c, asn ?Q)\n\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "assume len_cs: \"length cs = length \\<pi>\""], ["proof (state)\nthis:\n  length cs = length \\<pi>\n\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "assume \"\\<forall>i<length \\<pi>.\n      case_sum (coms_ass \\<circ> \\<Lambda>) (coms_com \\<circ> snd3) (\\<pi> ! i) (cs ! i)\""], ["proof (state)\nthis:\n  \\<forall>i<length \\<pi>.\n     (case \\<pi> ! i of Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n      | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n      (cs ! i)\n\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "hence \\<pi>_cs: \"\\<And>i. i < length \\<pi> \\<Longrightarrow>\n      case_sum (coms_ass \\<circ> \\<Lambda>) (coms_com \\<circ> snd3) (\\<pi> ! i) (cs ! i)\""], ["proof (prove)\nusing this:\n  \\<forall>i<length \\<pi>.\n     (case \\<pi> ! i of Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n      | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n      (cs ! i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length \\<pi> \\<Longrightarrow>\n       (case \\<pi> ! i of Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n        | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n        (cs ! i)", "by auto"], ["proof (state)\nthis:\n  ?i < length \\<pi> \\<Longrightarrow>\n  (case \\<pi> ! ?i of Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n   | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n   (cs ! ?i)\n\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "assume G_def: \"G = Graph V \\<Lambda> E\""], ["proof (state)\nthis:\n  G = Graph V \\<Lambda> E\n\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "assume c_def: \"c = foldr (;;) cs Skip\""], ["proof (state)\nthis:\n  c = foldr (;;) cs Skip\n\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "assume \\<pi>_lin: \"\\<pi> \\<in> lins (Graph V \\<Lambda> E)\""], ["proof (state)\nthis:\n  \\<pi> \\<in> lins (Graph V \\<Lambda> E)\n\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "note lins = linsD[OF \\<pi>_lin]"], ["proof (state)\nthis:\n  distinct \\<pi>\n  set \\<pi> = fset (Graph V \\<Lambda> E)^V <+> set (Graph V \\<Lambda> E)^E\n  \\<forall>i j v e.\n     i < length \\<pi> \\<and>\n     j < length \\<pi> \\<and>\n     \\<pi> ! i = Inl v \\<and>\n     \\<pi> ! j = Inr e \\<and> v |\\<in>| fst3 e \\<longrightarrow>\n     i < j\n  \\<forall>j k w e.\n     j < length \\<pi> \\<and>\n     k < length \\<pi> \\<and>\n     \\<pi> ! j = Inr e \\<and>\n     \\<pi> ! k = Inl w \\<and> w |\\<in>| thd3 e \\<longrightarrow>\n     j < k\n\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "define \\<Pi> where \"\\<Pi> = mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>\""], ["proof (state)\nthis:\n  \\<Pi> = mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>\n\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "have \"\\<Pi> \\<in> ps_chains G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Pi> \\<in> ps_chains G", "by (simp add: \\<pi>_lin \\<Pi>_def ps_chains_def G_def)"], ["proof (state)\nthis:\n  \\<Pi> \\<in> ps_chains G\n\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "hence 1: \"post \\<Pi> = [ terminals G |=> Bot ]\"\n      and 2: \"chain_all wf_ps_triple \\<Pi>\""], ["proof (prove)\nusing this:\n  \\<Pi> \\<in> ps_chains G\n\ngoal (1 subgoal):\n 1. post \\<Pi> = [ terminals G |=> Bot ] &&& chain_all wf_ps_triple \\<Pi>", "by (insert wf_chains G_def wf_G, auto simp add: wf_ps_chain_def)"], ["proof (state)\nthis:\n  post \\<Pi> = [ terminals G |=> Bot ]\n  chain_all wf_ps_triple \\<Pi>\n\ngoal (1 subgoal):\n 1. \\<And>c \\<pi> V \\<Lambda> E cs.\n       \\<lbrakk>wf_dia (Graph V \\<Lambda> E);\n        \\<And>v. v \\<in> fset V \\<Longrightarrow> prov_ass (\\<Lambda> v);\n        \\<And>v.\n           v \\<in> fset V \\<Longrightarrow>\n           \\<forall>c.\n              coms_ass (\\<Lambda> v) c \\<longrightarrow>\n              prov_triple\n               (asn (top_ass (\\<Lambda> v)), c,\n                asn (bot_ass (\\<Lambda> v)));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           prov_com (snd3 e)\n            (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v))\n            (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v));\n        \\<And>e.\n           e \\<in> set E \\<Longrightarrow>\n           \\<forall>c.\n              coms_com (snd3 e) c \\<longrightarrow>\n              prov_triple\n               (asn (\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)), c,\n                asn (\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)));\n        G = Graph V \\<Lambda> E; c = foldr (;;) cs Skip;\n        \\<pi> \\<in> lins (Graph V \\<Lambda> E); length cs = length \\<pi>;\n        \\<forall>i<length \\<pi>.\n           (case \\<pi> ! i of\n            Inl x \\<Rightarrow> (coms_ass \\<circ> \\<Lambda>) x\n            | Inr x \\<Rightarrow> (coms_com \\<circ> snd3) x)\n            (cs ! i)\\<rbrakk>\n       \\<Longrightarrow> prov_triple\n                          (asn (\\<Otimes>v|\\<in>|initials\n            (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n                           foldr (;;) cs Skip,\n                           asn (\\<Otimes>v|\\<in>|terminals\n            (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "show \"prov_triple (asn (\\<Otimes>v|\\<in>|initials (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n      foldr (;;) cs Skip, asn (\\<Otimes>v|\\<in>|terminals (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prov_triple\n     (asn (\\<Otimes>v|\\<in>|initials\n                             (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n      foldr (;;) cs Skip,\n      asn (\\<Otimes>v|\\<in>|terminals\n                             (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "using [[unfold_abs_def = false]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. prov_triple\n     (asn (\\<Otimes>v|\\<in>|initials\n                             (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n      foldr (;;) cs Skip,\n      asn (\\<Otimes>v|\\<in>|terminals\n                             (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))", "apply (intro seq_fold[of _ \"ps_chain_to_int_chain G \\<Pi>\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. length cs = chainlen (ps_chain_to_int_chain G \\<Pi>)\n 2. asn (\\<Otimes>v|\\<in>|initials\n                           (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)) =\n    asn (pre (ps_chain_to_int_chain G \\<Pi>))\n 3. asn (\\<Otimes>v|\\<in>|terminals\n                           (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)) =\n    asn (post (ps_chain_to_int_chain G \\<Pi>))\n 4. \\<And>i.\n       i < chainlen (ps_chain_to_int_chain G \\<Pi>) \\<Longrightarrow>\n       prov_triple\n        (asn (fst3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)), cs ! i,\n         asn (thd3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)))", "apply (unfold len_cs)"], ["proof (prove)\ngoal (4 subgoals):\n 1. length \\<pi> = chainlen (ps_chain_to_int_chain G \\<Pi>)\n 2. asn (\\<Otimes>v|\\<in>|initials\n                           (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)) =\n    asn (pre (ps_chain_to_int_chain G \\<Pi>))\n 3. asn (\\<Otimes>v|\\<in>|terminals\n                           (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)) =\n    asn (post (ps_chain_to_int_chain G \\<Pi>))\n 4. \\<And>i.\n       i < chainlen (ps_chain_to_int_chain G \\<Pi>) \\<Longrightarrow>\n       prov_triple\n        (asn (fst3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)), cs ! i,\n         asn (thd3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)))", "apply (unfold ps_chain_to_int_chain_def chainmap_preserves_length \\<Pi>_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. length \\<pi> =\n    chainlen (mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>)\n 2. asn (\\<Otimes>v|\\<in>|initials\n                           (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)) =\n    asn (pre (chainmap (ps_to_int G)\n               (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n               (mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>)))\n 3. asn (\\<Otimes>v|\\<in>|terminals\n                           (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)) =\n    asn (post\n          (chainmap (ps_to_int G)\n            (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n            (mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>)))\n 4. \\<And>i.\n       i < chainlen\n            (mk_ps_chain \\<lbrace> initial_ps G \\<rbrace>\n              \\<pi>) \\<Longrightarrow>\n       prov_triple\n        (asn (fst3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                   (mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>))\n                 i)),\n         cs ! i,\n         asn (thd3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                   (mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>))\n                 i)))", "apply (unfold mk_ps_chain_preserves_length, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. asn (\\<Otimes>v|\\<in>|initials\n                           (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)) =\n    asn (pre (chainmap (ps_to_int G)\n               (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n               (mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>)))\n 2. asn (\\<Otimes>v|\\<in>|terminals\n                           (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)) =\n    asn (post\n          (chainmap (ps_to_int G)\n            (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n            (mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>)))\n 3. \\<And>i.\n       i < chainlen \\<lbrace> initial_ps G \\<rbrace> +\n           length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                   (mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>))\n                 i)),\n         cs ! i,\n         asn (thd3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                   (mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>))\n                 i)))", "apply (unfold pre_chainmap post_chainmap)"], ["proof (prove)\ngoal (3 subgoals):\n 1. asn (\\<Otimes>v|\\<in>|initials\n                           (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)) =\n    asn (ps_to_int G\n          (pre (mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>)))\n 2. asn (\\<Otimes>v|\\<in>|terminals\n                           (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)) =\n    asn (ps_to_int G\n          (post (mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>)))\n 3. \\<And>i.\n       i < chainlen \\<lbrace> initial_ps G \\<rbrace> +\n           length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                   (mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>))\n                 i)),\n         cs ! i,\n         asn (thd3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                   (mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>))\n                 i)))", "apply (unfold pre_mk_ps_chain pre.simps)"], ["proof (prove)\ngoal (3 subgoals):\n 1. asn (\\<Otimes>v|\\<in>|initials\n                           (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)) =\n    asn (ps_to_int G (initial_ps G))\n 2. asn (\\<Otimes>v|\\<in>|terminals\n                           (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)) =\n    asn (ps_to_int G\n          (post (mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>)))\n 3. \\<And>i.\n       i < chainlen \\<lbrace> initial_ps G \\<rbrace> +\n           length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                   (mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>))\n                 i)),\n         cs ! i,\n         asn (thd3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                   (mk_ps_chain \\<lbrace> initial_ps G \\<rbrace> \\<pi>))\n                 i)))", "apply (fold \\<Pi>_def, unfold 1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. asn (\\<Otimes>v|\\<in>|initials\n                           (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)) =\n    asn (ps_to_int G (initial_ps G))\n 2. asn (\\<Otimes>v|\\<in>|terminals\n                           (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)) =\n    asn (ps_to_int G [ terminals G |=> Bot ])\n 3. \\<And>i.\n       i < chainlen \\<lbrace> initial_ps G \\<rbrace> +\n           length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)),\n         cs ! i,\n         asn (thd3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)))", "apply (unfold initial_ps_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. asn (\\<Otimes>v|\\<in>|initials\n                           (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)) =\n    asn (ps_to_int G [ initials G |=> Top ])\n 2. asn (\\<Otimes>v|\\<in>|terminals\n                           (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)) =\n    asn (ps_to_int G [ terminals G |=> Bot ])\n 3. \\<And>i.\n       i < chainlen \\<lbrace> [ initials G |=> Top ] \\<rbrace> +\n           length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)),\n         cs ! i,\n         asn (thd3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)))", "apply (unfold ps_to_int_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. asn (\\<Otimes>v|\\<in>|initials\n                           (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)) =\n    asn (\\<Otimes>v|\\<in>|fmdom\n                           [ initials\n                              G |=> Top ]. (case lookup\n            [ initials G |=> Top ] v of\n      Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n      (G^\\<Lambda> v))\n 2. asn (\\<Otimes>v|\\<in>|terminals\n                           (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)) =\n    asn (\\<Otimes>v|\\<in>|fmdom\n                           [ terminals\n                              G |=> Bot ]. (case lookup\n            [ terminals G |=> Bot ] v of\n      Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n      (G^\\<Lambda> v))\n 3. \\<And>i.\n       i < chainlen \\<lbrace> [ initials G |=> Top ] \\<rbrace> +\n           length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)),\n         cs ! i,\n         asn (thd3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)))", "apply (unfold fdom_make_fmap)"], ["proof (prove)\ngoal (3 subgoals):\n 1. asn (\\<Otimes>v|\\<in>|initials\n                           (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)) =\n    asn (\\<Otimes>v|\\<in>|initials\n                           G. (case lookup [ initials G |=> Top ] v of\n                               Top \\<Rightarrow> top_ass\n                               | Bot \\<Rightarrow> bot_ass)\n                               (G^\\<Lambda> v))\n 2. asn (\\<Otimes>v|\\<in>|terminals\n                           (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)) =\n    asn (\\<Otimes>v|\\<in>|terminals\n                           G. (case lookup [ terminals G |=> Bot ] v of\n                               Top \\<Rightarrow> top_ass\n                               | Bot \\<Rightarrow> bot_ass)\n                               (G^\\<Lambda> v))\n 3. \\<And>i.\n       i < chainlen \\<lbrace> [ initials G |=> Top ] \\<rbrace> +\n           length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)),\n         cs ! i,\n         asn (thd3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)))", "apply (unfold G_def labelling.simps, fold G_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. asn (\\<Otimes>v|\\<in>|initials G. top_ass (\\<Lambda> v)) =\n    asn (\\<Otimes>v|\\<in>|initials\n                           G. (case lookup [ initials G |=> Top ] v of\n                               Top \\<Rightarrow> top_ass\n                               | Bot \\<Rightarrow> bot_ass)\n                               (\\<Lambda> v))\n 2. asn (\\<Otimes>v|\\<in>|terminals G. bot_ass (\\<Lambda> v)) =\n    asn (\\<Otimes>v|\\<in>|terminals\n                           G. (case lookup [ terminals G |=> Bot ] v of\n                               Top \\<Rightarrow> top_ass\n                               | Bot \\<Rightarrow> bot_ass)\n                               (\\<Lambda> v))\n 3. \\<And>i.\n       i < chainlen \\<lbrace> [ initials G |=> Top ] \\<rbrace> +\n           length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> \\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)),\n         cs ! i,\n         asn (thd3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> \\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)))", "apply (subgoal_tac \"\\<forall>v \\<in> fset (initials G). top_ass (\\<Lambda> v) =\n      case_topbot top_ass bot_ass (lookup [ initials G |=> Top ] v) (\\<Lambda> v)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<forall>v\\<in>fset (initials G).\n       top_ass (\\<Lambda> v) =\n       (case lookup [ initials G |=> Top ] v of Top \\<Rightarrow> top_ass\n        | Bot \\<Rightarrow> bot_ass)\n        (\\<Lambda> v) \\<Longrightarrow>\n    asn (\\<Otimes>v|\\<in>|initials G. top_ass (\\<Lambda> v)) =\n    asn (\\<Otimes>v|\\<in>|initials\n                           G. (case lookup [ initials G |=> Top ] v of\n                               Top \\<Rightarrow> top_ass\n                               | Bot \\<Rightarrow> bot_ass)\n                               (\\<Lambda> v))\n 2. \\<forall>v\\<in>fset (initials G).\n       top_ass (\\<Lambda> v) =\n       (case lookup [ initials G |=> Top ] v of Top \\<Rightarrow> top_ass\n        | Bot \\<Rightarrow> bot_ass)\n        (\\<Lambda> v)\n 3. asn (\\<Otimes>v|\\<in>|terminals G. bot_ass (\\<Lambda> v)) =\n    asn (\\<Otimes>v|\\<in>|terminals\n                           G. (case lookup [ terminals G |=> Bot ] v of\n                               Top \\<Rightarrow> top_ass\n                               | Bot \\<Rightarrow> bot_ass)\n                               (\\<Lambda> v))\n 4. \\<And>i.\n       i < chainlen \\<lbrace> [ initials G |=> Top ] \\<rbrace> +\n           length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> \\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)),\n         cs ! i,\n         asn (thd3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> \\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)))", "apply (unfold iter_hcomp_cong, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<forall>v\\<in>fset (initials G).\n       top_ass (\\<Lambda> v) =\n       (case lookup [ initials G |=> Top ] v of Top \\<Rightarrow> top_ass\n        | Bot \\<Rightarrow> bot_ass)\n        (\\<Lambda> v)\n 2. asn (\\<Otimes>v|\\<in>|terminals G. bot_ass (\\<Lambda> v)) =\n    asn (\\<Otimes>v|\\<in>|terminals\n                           G. (case lookup [ terminals G |=> Bot ] v of\n                               Top \\<Rightarrow> top_ass\n                               | Bot \\<Rightarrow> bot_ass)\n                               (\\<Lambda> v))\n 3. \\<And>i.\n       i < chainlen \\<lbrace> [ initials G |=> Top ] \\<rbrace> +\n           length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> \\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)),\n         cs ! i,\n         asn (thd3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> \\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)))", "apply (metis lookup_make_fmap topbot.simps(3))"], ["proof (prove)\ngoal (2 subgoals):\n 1. asn (\\<Otimes>v|\\<in>|terminals G. bot_ass (\\<Lambda> v)) =\n    asn (\\<Otimes>v|\\<in>|terminals\n                           G. (case lookup [ terminals G |=> Bot ] v of\n                               Top \\<Rightarrow> top_ass\n                               | Bot \\<Rightarrow> bot_ass)\n                               (\\<Lambda> v))\n 2. \\<And>i.\n       i < chainlen \\<lbrace> [ initials G |=> Top ] \\<rbrace> +\n           length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> \\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)),\n         cs ! i,\n         asn (thd3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> \\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)))", "apply (subgoal_tac \"\\<forall>v \\<in> fset (terminals G). bot_ass (\\<Lambda> v) =\n      case_topbot top_ass bot_ass (lookup [ terminals G |=> Bot ] v) (\\<Lambda> v)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<forall>v\\<in>fset (terminals G).\n       bot_ass (\\<Lambda> v) =\n       (case lookup [ terminals G |=> Bot ] v of Top \\<Rightarrow> top_ass\n        | Bot \\<Rightarrow> bot_ass)\n        (\\<Lambda> v) \\<Longrightarrow>\n    asn (\\<Otimes>v|\\<in>|terminals G. bot_ass (\\<Lambda> v)) =\n    asn (\\<Otimes>v|\\<in>|terminals\n                           G. (case lookup [ terminals G |=> Bot ] v of\n                               Top \\<Rightarrow> top_ass\n                               | Bot \\<Rightarrow> bot_ass)\n                               (\\<Lambda> v))\n 2. \\<forall>v\\<in>fset (terminals G).\n       bot_ass (\\<Lambda> v) =\n       (case lookup [ terminals G |=> Bot ] v of Top \\<Rightarrow> top_ass\n        | Bot \\<Rightarrow> bot_ass)\n        (\\<Lambda> v)\n 3. \\<And>i.\n       i < chainlen \\<lbrace> [ initials G |=> Top ] \\<rbrace> +\n           length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> \\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)),\n         cs ! i,\n         asn (thd3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> \\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)))", "apply (unfold iter_hcomp_cong, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>v\\<in>fset (terminals G).\n       bot_ass (\\<Lambda> v) =\n       (case lookup [ terminals G |=> Bot ] v of Top \\<Rightarrow> top_ass\n        | Bot \\<Rightarrow> bot_ass)\n        (\\<Lambda> v)\n 2. \\<And>i.\n       i < chainlen \\<lbrace> [ initials G |=> Top ] \\<rbrace> +\n           length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> \\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)),\n         cs ! i,\n         asn (thd3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> \\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)))", "apply (metis lookup_make_fmap topbot.simps(4), simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> \\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)),\n         cs ! i,\n         asn (thd3\n               (nthtriple\n                 (chainmap (ps_to_int G)\n                   (case_sum (Inl \\<circ> \\<Lambda>) (Inr \\<circ> snd3))\n                   \\<Pi>)\n                 i)))", "apply (unfold G_def, fold ps_chain_to_int_chain_simp G_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)), cs ! i,\n         asn (thd3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)), cs ! i,\n         asn (thd3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)))", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)), cs ! i,\n         asn (thd3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)))", "assume \"i < length \\<pi>\""], ["proof (state)\nthis:\n  i < length \\<pi>\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)), cs ! i,\n         asn (thd3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)))", "hence \"i < chainlen \\<Pi>\""], ["proof (prove)\nusing this:\n  i < length \\<pi>\n\ngoal (1 subgoal):\n 1. i < chainlen \\<Pi>", "by (metis \\<Pi>_def add_0_left chainlen.simps(1)\n        mk_ps_chain_preserves_length)"], ["proof (state)\nthis:\n  i < chainlen \\<Pi>\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)), cs ! i,\n         asn (thd3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)))", "hence wf_\\<Pi>i: \"wf_ps_triple (nthtriple \\<Pi> i)\""], ["proof (prove)\nusing this:\n  i < chainlen \\<Pi>\n\ngoal (1 subgoal):\n 1. wf_ps_triple (nthtriple \\<Pi> i)", "by (insert 2, simp add: chain_all_nthtriple)"], ["proof (state)\nthis:\n  wf_ps_triple (nthtriple \\<Pi> i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length \\<pi> \\<Longrightarrow>\n       prov_triple\n        (asn (fst3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)), cs ! i,\n         asn (thd3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)))", "show \"prov_triple (asn (fst3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)),\n                 cs ! i, asn (thd3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prov_triple\n     (asn (fst3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)), cs ! i,\n      asn (thd3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)))", "apply (unfold ps_chain_to_int_chain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. prov_triple\n     (asn (fst3\n            (nthtriple\n              (chainmap (ps_to_int G)\n                (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                \\<Pi>)\n              i)),\n      cs ! i,\n      asn (thd3\n            (nthtriple\n              (chainmap (ps_to_int G)\n                (case_sum (Inl \\<circ> G^\\<Lambda>) (Inr \\<circ> snd3))\n                \\<Pi>)\n              i)))", "apply (unfold nthtriple_chainmap[OF \\<open>i < chainlen \\<Pi>\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. prov_triple\n     (asn (fst3\n            (ps_to_int G (fst3 (nthtriple \\<Pi> i)),\n             case snd3 (nthtriple \\<Pi> i) of\n             Inl x \\<Rightarrow> (Inl \\<circ> G^\\<Lambda>) x\n             | Inr x \\<Rightarrow> (Inr \\<circ> snd3) x,\n             ps_to_int G (thd3 (nthtriple \\<Pi> i)))),\n      cs ! i,\n      asn (thd3\n            (ps_to_int G (fst3 (nthtriple \\<Pi> i)),\n             case snd3 (nthtriple \\<Pi> i) of\n             Inl x \\<Rightarrow> (Inl \\<circ> G^\\<Lambda>) x\n             | Inr x \\<Rightarrow> (Inr \\<circ> snd3) x,\n             ps_to_int G (thd3 (nthtriple \\<Pi> i)))))", "apply (unfold fst3_simp thd3_simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. prov_triple\n     (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n      asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))", "proof (cases \"\\<pi>!i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<pi> ! i = Inl a \\<Longrightarrow>\n       prov_triple\n        (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n         asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))\n 2. \\<And>b.\n       \\<pi> ! i = Inr b \\<Longrightarrow>\n       prov_triple\n        (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n         asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))", "case (Inl v)"], ["proof (state)\nthis:\n  \\<pi> ! i = Inl v\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<pi> ! i = Inl a \\<Longrightarrow>\n       prov_triple\n        (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n         asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))\n 2. \\<And>b.\n       \\<pi> ! i = Inr b \\<Longrightarrow>\n       prov_triple\n        (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n         asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))", "have \"snd3 (nthtriple \\<Pi> i) = Inl v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd3 (nthtriple \\<Pi> i) = Inl v", "apply (unfold snds_of_triples_form_comlist[OF \\<open>i < chainlen \\<Pi>\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. comlist \\<Pi> ! i = Inl v", "apply (auto simp add: \\<Pi>_def comlist_mk_ps_chain Inl)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  snd3 (nthtriple \\<Pi> i) = Inl v\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<pi> ! i = Inl a \\<Longrightarrow>\n       prov_triple\n        (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n         asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))\n 2. \\<And>b.\n       \\<pi> ! i = Inr b \\<Longrightarrow>\n       prov_triple\n        (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n         asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))", "with wf_\\<Pi>i wf_ps_triple_def"], ["proof (chain)\npicking this:\n  wf_ps_triple (nthtriple \\<Pi> i)\n  wf_ps_triple ?T =\n  (case snd3 ?T of\n   Inl v \\<Rightarrow>\n     \\<exists>\\<sigma>.\n        v |\\<notin>| fmdom \\<sigma> \\<and>\n        fst3 ?T = [ {|v|} |=> Top ] ++\\<^sub>f \\<sigma> \\<and>\n        thd3 ?T = [ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>\n   | Inr e \\<Rightarrow>\n       \\<exists>\\<sigma>.\n          fst3 e |\\<union>| thd3 e |\\<inter>| fmdom \\<sigma> = {||} \\<and>\n          fst3 ?T = [ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma> \\<and>\n          thd3 ?T = [ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n  snd3 (nthtriple \\<Pi> i) = Inl v", "obtain \\<sigma> where\n          v_notin_\\<sigma>: \"v |\\<notin>| fmdom \\<sigma>\" and\n          fst_\\<Pi>i: \"fst3 (nthtriple \\<Pi> i) = [ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>\" and\n          thd_\\<Pi>i: \"thd3 (nthtriple \\<Pi> i) = [ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>\""], ["proof (prove)\nusing this:\n  wf_ps_triple (nthtriple \\<Pi> i)\n  wf_ps_triple ?T =\n  (case snd3 ?T of\n   Inl v \\<Rightarrow>\n     \\<exists>\\<sigma>.\n        v |\\<notin>| fmdom \\<sigma> \\<and>\n        fst3 ?T = [ {|v|} |=> Top ] ++\\<^sub>f \\<sigma> \\<and>\n        thd3 ?T = [ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>\n   | Inr e \\<Rightarrow>\n       \\<exists>\\<sigma>.\n          fst3 e |\\<union>| thd3 e |\\<inter>| fmdom \\<sigma> = {||} \\<and>\n          fst3 ?T = [ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma> \\<and>\n          thd3 ?T = [ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n  snd3 (nthtriple \\<Pi> i) = Inl v\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>.\n        \\<lbrakk>v |\\<notin>| fmdom \\<sigma>;\n         fst3 (nthtriple \\<Pi> i) = [ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>;\n         thd3 (nthtriple \\<Pi> i) =\n         [ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  v |\\<notin>| fmdom \\<sigma>\n  fst3 (nthtriple \\<Pi> i) = [ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>\n  thd3 (nthtriple \\<Pi> i) = [ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<pi> ! i = Inl a \\<Longrightarrow>\n       prov_triple\n        (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n         asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))\n 2. \\<And>b.\n       \\<pi> ! i = Inr b \\<Longrightarrow>\n       prov_triple\n        (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n         asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))", "show \"prov_triple (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))),\n                   cs ! i, asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prov_triple\n     (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n      asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))", "apply (intro prov_vertex[where v=v])"], ["proof (prove)\ngoal (4 subgoals):\n 1. coms_ass (\\<Lambda> v) (cs ! i)\n 2. v \\<in> fset V\n 3. ps_to_int G (fst3 (nthtriple \\<Pi> i)) =\n    (top_ass (\\<Lambda> v) \\<otimes> ?F)\n 4. ps_to_int G (thd3 (nthtriple \\<Pi> i)) =\n    (bot_ass (\\<Lambda> v) \\<otimes> ?F)", "apply (metis (no_types) Inl \\<open>i < length \\<pi>\\<close> \\<pi>_cs o_def sum.simps(5))"], ["proof (prove)\ngoal (3 subgoals):\n 1. v \\<in> fset V\n 2. ps_to_int G (fst3 (nthtriple \\<Pi> i)) =\n    (top_ass (\\<Lambda> v) \\<otimes> ?F)\n 3. ps_to_int G (thd3 (nthtriple \\<Pi> i)) =\n    (bot_ass (\\<Lambda> v) \\<otimes> ?F)", "apply (metis (lifting) Inl lins(2) Inl_not_Inr PlusE \\<open>i < length \\<pi>\\<close>\n          nth_mem sum.simps(1) vertices.simps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ps_to_int G (fst3 (nthtriple \\<Pi> i)) =\n    (top_ass (\\<Lambda> v) \\<otimes> ?F)\n 2. ps_to_int G (thd3 (nthtriple \\<Pi> i)) =\n    (bot_ass (\\<Lambda> v) \\<otimes> ?F)", "apply (unfold fst_\\<Pi>i thd_\\<Pi>i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ps_to_int G ([ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>) =\n    (top_ass (\\<Lambda> v) \\<otimes> ?F)\n 2. ps_to_int G ([ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>) =\n    (bot_ass (\\<Lambda> v) \\<otimes> ?F)", "apply (unfold ps_to_int_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<Otimes>va|\\<in>|fmdom\n                        ([ {|v|} |=> Top ] ++\\<^sub>f\n                         \\<sigma>). (case lookup\n     ([ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>) va of\n                                     Top \\<Rightarrow> top_ass\n                                     | Bot \\<Rightarrow> bot_ass)\n                                     (G^\\<Lambda> va)) =\n    (top_ass (\\<Lambda> v) \\<otimes> ?F)\n 2. (\\<Otimes>va|\\<in>|fmdom\n                        ([ {|v|} |=> Bot ] ++\\<^sub>f\n                         \\<sigma>). (case lookup\n     ([ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>) va of\n                                     Top \\<Rightarrow> top_ass\n                                     | Bot \\<Rightarrow> bot_ass)\n                                     (G^\\<Lambda> va)) =\n    (bot_ass (\\<Lambda> v) \\<otimes> ?F)", "apply (unfold fmdom_add fdom_make_fmap)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<Otimes>va|\\<in>|{|v|} |\\<union>|\n                       fmdom\n                        \\<sigma>. (case lookup\n   ([ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>) va of\n                                   Top \\<Rightarrow> top_ass\n                                   | Bot \\<Rightarrow> bot_ass)\n                                   (G^\\<Lambda> va)) =\n    (top_ass (\\<Lambda> v) \\<otimes> ?F)\n 2. (\\<Otimes>va|\\<in>|{|v|} |\\<union>|\n                       fmdom\n                        \\<sigma>. (case lookup\n   ([ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>) va of\n                                   Top \\<Rightarrow> top_ass\n                                   | Bot \\<Rightarrow> bot_ass)\n                                   (G^\\<Lambda> va)) =\n    (bot_ass (\\<Lambda> v) \\<otimes> ?F)", "apply (unfold finsert_is_funion[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<Otimes>va|\\<in>|finsert v\n                        (fmdom\n                          \\<sigma>). (case lookup\n      ([ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>) va of\nTop \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n(G^\\<Lambda> va)) =\n    (top_ass (\\<Lambda> v) \\<otimes> ?F)\n 2. (\\<Otimes>va|\\<in>|finsert v\n                        (fmdom\n                          \\<sigma>). (case lookup\n      ([ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>) va of\nTop \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n(G^\\<Lambda> va)) =\n    (bot_ass (\\<Lambda> v) \\<otimes> ?F)", "apply (insert v_notin_\\<sigma>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. v |\\<notin>| fmdom \\<sigma> \\<Longrightarrow>\n    (\\<Otimes>va|\\<in>|finsert v\n                        (fmdom\n                          \\<sigma>). (case lookup\n      ([ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>) va of\nTop \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n(G^\\<Lambda> va)) =\n    (top_ass (\\<Lambda> v) \\<otimes> ?F)\n 2. v |\\<notin>| fmdom \\<sigma> \\<Longrightarrow>\n    (\\<Otimes>va|\\<in>|finsert v\n                        (fmdom\n                          \\<sigma>). (case lookup\n      ([ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>) va of\nTop \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n(G^\\<Lambda> va)) =\n    (bot_ass (\\<Lambda> v) \\<otimes> ?F)", "apply (unfold iter_hcomp_insert)"], ["proof (prove)\ngoal (2 subgoals):\n 1. v |\\<notin>| fmdom \\<sigma> \\<Longrightarrow>\n    ((case lookup ([ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>) v of\n      Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n      (G^\\<Lambda> v) \\<otimes>\n     (\\<Otimes>va|\\<in>|fmdom\n                         \\<sigma>. (case lookup\n    ([ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>) va of\n                                    Top \\<Rightarrow> top_ass\n                                    | Bot \\<Rightarrow> bot_ass)\n                                    (G^\\<Lambda> va))) =\n    (top_ass (\\<Lambda> v) \\<otimes> ?F)\n 2. v |\\<notin>| fmdom \\<sigma> \\<Longrightarrow>\n    ((case lookup ([ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n      Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n      (G^\\<Lambda> v) \\<otimes>\n     (\\<Otimes>va|\\<in>|fmdom\n                         \\<sigma>. (case lookup\n    ([ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>) va of\n                                    Top \\<Rightarrow> top_ass\n                                    | Bot \\<Rightarrow> bot_ass)\n                                    (G^\\<Lambda> va))) =\n    (bot_ass (\\<Lambda> v) \\<otimes> ?F)", "apply (unfold lookup_union2 lookup_make_fmap1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. v |\\<notin>| fmdom \\<sigma> \\<Longrightarrow>\n    ((case Top of Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n      (G^\\<Lambda> v) \\<otimes>\n     (\\<Otimes>va|\\<in>|fmdom\n                         \\<sigma>. (case lookup\n    ([ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>) va of\n                                    Top \\<Rightarrow> top_ass\n                                    | Bot \\<Rightarrow> bot_ass)\n                                    (G^\\<Lambda> va))) =\n    (top_ass (\\<Lambda> v) \\<otimes> ?F)\n 2. v |\\<notin>| fmdom \\<sigma> \\<Longrightarrow>\n    ((case Bot of Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n      (G^\\<Lambda> v) \\<otimes>\n     (\\<Otimes>va|\\<in>|fmdom\n                         \\<sigma>. (case lookup\n    ([ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>) va of\n                                    Top \\<Rightarrow> top_ass\n                                    | Bot \\<Rightarrow> bot_ass)\n                                    (G^\\<Lambda> va))) =\n    (bot_ass (\\<Lambda> v) \\<otimes> ?F)", "apply (unfold G_def labelling.simps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. v |\\<notin>| fmdom \\<sigma> \\<Longrightarrow>\n    ((case Top of Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n      (\\<Lambda> v) \\<otimes>\n     (\\<Otimes>va|\\<in>|fmdom\n                         \\<sigma>. (case lookup\n    ([ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>) va of\n                                    Top \\<Rightarrow> top_ass\n                                    | Bot \\<Rightarrow> bot_ass)\n                                    (\\<Lambda> va))) =\n    (top_ass (\\<Lambda> v) \\<otimes> ?F)\n 2. v |\\<notin>| fmdom \\<sigma> \\<Longrightarrow>\n    ((case Bot of Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n      (\\<Lambda> v) \\<otimes>\n     (\\<Otimes>va|\\<in>|fmdom\n                         \\<sigma>. (case lookup\n    ([ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>) va of\n                                    Top \\<Rightarrow> top_ass\n                                    | Bot \\<Rightarrow> bot_ass)\n                                    (\\<Lambda> va))) =\n    (bot_ass (\\<Lambda> v) \\<otimes> ?F)", "apply (subgoal_tac \"\\<forall>va \\<in> fset (fmdom \\<sigma>). case_topbot top_ass bot_ass\n          (lookup ([ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>) va) (\\<Lambda> va) =\n          case_topbot top_ass bot_ass (lookup ([{|v|} |=> Bot] ++\\<^sub>f \\<sigma>) va)(\\<Lambda> va)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>v |\\<notin>| fmdom \\<sigma>;\n     \\<forall>va\\<in>fset (fmdom \\<sigma>).\n        (case lookup ([ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>) va of\n         Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n         (\\<Lambda> va) =\n        (case lookup ([ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>) va of\n         Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n         (\\<Lambda> va)\\<rbrakk>\n    \\<Longrightarrow> ((case Top of Top \\<Rightarrow> top_ass\n                        | Bot \\<Rightarrow> bot_ass)\n                        (\\<Lambda> v) \\<otimes>\n                       (\\<Otimes>va|\\<in>|fmdom\n     \\<sigma>. (case lookup ([ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>) va of\n                Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n                (\\<Lambda> va))) =\n                      (top_ass (\\<Lambda> v) \\<otimes> ?F)\n 2. v |\\<notin>| fmdom \\<sigma> \\<Longrightarrow>\n    \\<forall>va\\<in>fset (fmdom \\<sigma>).\n       (case lookup ([ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>) va of\n        Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n        (\\<Lambda> va) =\n       (case lookup ([ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>) va of\n        Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n        (\\<Lambda> va)\n 3. v |\\<notin>| fmdom \\<sigma> \\<Longrightarrow>\n    ((case Bot of Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n      (\\<Lambda> v) \\<otimes>\n     (\\<Otimes>va|\\<in>|fmdom\n                         \\<sigma>. (case lookup\n    ([ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>) va of\n                                    Top \\<Rightarrow> top_ass\n                                    | Bot \\<Rightarrow> bot_ass)\n                                    (\\<Lambda> va))) =\n    (bot_ass (\\<Lambda> v) \\<otimes> ?F)", "apply (unfold iter_hcomp_cong, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. v |\\<notin>| fmdom \\<sigma> \\<Longrightarrow>\n    \\<forall>va\\<in>fset (fmdom \\<sigma>).\n       (case lookup ([ {|v|} |=> Top ] ++\\<^sub>f \\<sigma>) va of\n        Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n        (\\<Lambda> va) =\n       (case lookup ([ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>) va of\n        Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n        (\\<Lambda> va)\n 2. v |\\<notin>| fmdom \\<sigma> \\<Longrightarrow>\n    ((case Bot of Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n      (\\<Lambda> v) \\<otimes>\n     (\\<Otimes>va|\\<in>|fmdom\n                         \\<sigma>. (case lookup\n    ([ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>) va of\n                                    Top \\<Rightarrow> top_ass\n                                    | Bot \\<Rightarrow> bot_ass)\n                                    (\\<Lambda> va))) =\n    (bot_ass (\\<Lambda> v) \\<otimes>\n     (\\<Otimes>va|\\<in>|fmdom\n                         \\<sigma>. (case lookup\n    ([ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>) va of\n                                    Top \\<Rightarrow> top_ass\n                                    | Bot \\<Rightarrow> bot_ass)\n                                    (\\<Lambda> va)))", "apply (metis fmember.rep_eq lookup_union1, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  prov_triple\n   (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n    asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<pi> ! i = Inr b \\<Longrightarrow>\n       prov_triple\n        (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n         asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<pi> ! i = Inr b \\<Longrightarrow>\n       prov_triple\n        (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n         asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))", "case (Inr e)"], ["proof (state)\nthis:\n  \\<pi> ! i = Inr e\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<pi> ! i = Inr b \\<Longrightarrow>\n       prov_triple\n        (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n         asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))", "have \"snd3 (nthtriple \\<Pi> i) = Inr e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd3 (nthtriple \\<Pi> i) = Inr e", "apply (unfold snds_of_triples_form_comlist[OF \\<open>i < chainlen \\<Pi>\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. comlist \\<Pi> ! i = Inr e", "apply (auto simp add: \\<Pi>_def comlist_mk_ps_chain Inr)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  snd3 (nthtriple \\<Pi> i) = Inr e\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<pi> ! i = Inr b \\<Longrightarrow>\n       prov_triple\n        (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n         asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))", "with wf_\\<Pi>i wf_ps_triple_def"], ["proof (chain)\npicking this:\n  wf_ps_triple (nthtriple \\<Pi> i)\n  wf_ps_triple ?T =\n  (case snd3 ?T of\n   Inl v \\<Rightarrow>\n     \\<exists>\\<sigma>.\n        v |\\<notin>| fmdom \\<sigma> \\<and>\n        fst3 ?T = [ {|v|} |=> Top ] ++\\<^sub>f \\<sigma> \\<and>\n        thd3 ?T = [ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>\n   | Inr e \\<Rightarrow>\n       \\<exists>\\<sigma>.\n          fst3 e |\\<union>| thd3 e |\\<inter>| fmdom \\<sigma> = {||} \\<and>\n          fst3 ?T = [ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma> \\<and>\n          thd3 ?T = [ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n  snd3 (nthtriple \\<Pi> i) = Inr e", "obtain \\<sigma> where\n          fst_e_disjoint_\\<sigma>: \"fst3 e |\\<inter>| fmdom \\<sigma> = {||}\" and\n          thd_e_disjoint_\\<sigma>: \"thd3 e |\\<inter>| fmdom \\<sigma> = {||}\" and\n          fst_\\<Pi>i: \"fst3 (nthtriple \\<Pi> i) = [ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>\" and\n          thd_\\<Pi>i: \"thd3 (nthtriple \\<Pi> i) = [ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>\""], ["proof (prove)\nusing this:\n  wf_ps_triple (nthtriple \\<Pi> i)\n  wf_ps_triple ?T =\n  (case snd3 ?T of\n   Inl v \\<Rightarrow>\n     \\<exists>\\<sigma>.\n        v |\\<notin>| fmdom \\<sigma> \\<and>\n        fst3 ?T = [ {|v|} |=> Top ] ++\\<^sub>f \\<sigma> \\<and>\n        thd3 ?T = [ {|v|} |=> Bot ] ++\\<^sub>f \\<sigma>\n   | Inr e \\<Rightarrow>\n       \\<exists>\\<sigma>.\n          fst3 e |\\<union>| thd3 e |\\<inter>| fmdom \\<sigma> = {||} \\<and>\n          fst3 ?T = [ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma> \\<and>\n          thd3 ?T = [ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n  snd3 (nthtriple \\<Pi> i) = Inr e\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>.\n        \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n         thd3 e |\\<inter>| fmdom \\<sigma> = {||};\n         fst3 (nthtriple \\<Pi> i) = [ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>;\n         thd3 (nthtriple \\<Pi> i) =\n         [ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: inf_sup_distrib2)"], ["proof (state)\nthis:\n  fst3 e |\\<inter>| fmdom \\<sigma> = {||}\n  thd3 e |\\<inter>| fmdom \\<sigma> = {||}\n  fst3 (nthtriple \\<Pi> i) = [ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>\n  thd3 (nthtriple \\<Pi> i) = [ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<pi> ! i = Inr b \\<Longrightarrow>\n       prov_triple\n        (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n         asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))", "show \"prov_triple (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))),\n                   cs ! i, asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prov_triple\n     (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n      asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))", "apply (intro prov_edge[where e=e])"], ["proof (prove)\ngoal (4 subgoals):\n 1. e \\<in> set E\n 2. coms_com (snd3 e) (cs ! i)\n 3. ps_to_int G (fst3 (nthtriple \\<Pi> i)) =\n    ((\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)) \\<otimes> ?F)\n 4. ps_to_int G (thd3 (nthtriple \\<Pi> i)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes> ?F)", "apply (subgoal_tac \"Inr e \\<in> set \\<pi>\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. Inr e \\<in> set \\<pi> \\<Longrightarrow> e \\<in> set E\n 2. Inr e \\<in> set \\<pi>\n 3. coms_com (snd3 e) (cs ! i)\n 4. ps_to_int G (fst3 (nthtriple \\<Pi> i)) =\n    ((\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)) \\<otimes> ?F)\n 5. ps_to_int G (thd3 (nthtriple \\<Pi> i)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes> ?F)", "apply (metis Inr_not_Inl PlusE edges.simps lins(2) sum.simps(2))"], ["proof (prove)\ngoal (4 subgoals):\n 1. Inr e \\<in> set \\<pi>\n 2. coms_com (snd3 e) (cs ! i)\n 3. ps_to_int G (fst3 (nthtriple \\<Pi> i)) =\n    ((\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)) \\<otimes> ?F)\n 4. ps_to_int G (thd3 (nthtriple \\<Pi> i)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes> ?F)", "apply (metis Inr \\<open>i < length \\<pi>\\<close> nth_mem)"], ["proof (prove)\ngoal (3 subgoals):\n 1. coms_com (snd3 e) (cs ! i)\n 2. ps_to_int G (fst3 (nthtriple \\<Pi> i)) =\n    ((\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)) \\<otimes> ?F)\n 3. ps_to_int G (thd3 (nthtriple \\<Pi> i)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes> ?F)", "apply (metis (no_types) Inr \\<open>i < length \\<pi>\\<close> \\<pi>_cs o_def sum.simps(6))"], ["proof (prove)\ngoal (2 subgoals):\n 1. ps_to_int G (fst3 (nthtriple \\<Pi> i)) =\n    ((\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)) \\<otimes> ?F)\n 2. ps_to_int G (thd3 (nthtriple \\<Pi> i)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes> ?F)", "apply (unfold fst_\\<Pi>i thd_\\<Pi>i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ps_to_int G ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) =\n    ((\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)) \\<otimes> ?F)\n 2. ps_to_int G ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes> ?F)", "apply (unfold ps_to_int_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<Otimes>v|\\<in>|fmdom\n                       ([ fst3 e |=> Bot ] ++\\<^sub>f\n                        \\<sigma>). (case lookup\n    ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n                                    Top \\<Rightarrow> top_ass\n                                    | Bot \\<Rightarrow> bot_ass)\n                                    (G^\\<Lambda> v)) =\n    ((\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)) \\<otimes> ?F)\n 2. (\\<Otimes>v|\\<in>|fmdom\n                       ([ thd3 e |=> Top ] ++\\<^sub>f\n                        \\<sigma>). (case lookup\n    ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n                                    Top \\<Rightarrow> top_ass\n                                    | Bot \\<Rightarrow> bot_ass)\n                                    (G^\\<Lambda> v)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes> ?F)", "apply (unfold G_def labelling.simps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<Otimes>v|\\<in>|fmdom\n                       ([ fst3 e |=> Bot ] ++\\<^sub>f\n                        \\<sigma>). (case lookup\n    ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n                                    Top \\<Rightarrow> top_ass\n                                    | Bot \\<Rightarrow> bot_ass)\n                                    (\\<Lambda> v)) =\n    ((\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)) \\<otimes> ?F)\n 2. (\\<Otimes>v|\\<in>|fmdom\n                       ([ thd3 e |=> Top ] ++\\<^sub>f\n                        \\<sigma>). (case lookup\n    ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n                                    Top \\<Rightarrow> top_ass\n                                    | Bot \\<Rightarrow> bot_ass)\n                                    (\\<Lambda> v)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes> ?F)", "apply (unfold fmdom_add fdom_make_fmap)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<Otimes>v|\\<in>|fst3 e |\\<union>|\n                      fmdom\n                       \\<sigma>. (case lookup\n  ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n                                  Top \\<Rightarrow> top_ass\n                                  | Bot \\<Rightarrow> bot_ass)\n                                  (\\<Lambda> v)) =\n    ((\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)) \\<otimes> ?F)\n 2. (\\<Otimes>v|\\<in>|thd3 e |\\<union>|\n                      fmdom\n                       \\<sigma>. (case lookup\n  ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n                                  Top \\<Rightarrow> top_ass\n                                  | Bot \\<Rightarrow> bot_ass)\n                                  (\\<Lambda> v)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes> ?F)", "apply (insert fst_e_disjoint_\\<sigma>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. fst3 e |\\<inter>| fmdom \\<sigma> = {||} \\<Longrightarrow>\n    (\\<Otimes>v|\\<in>|fst3 e |\\<union>|\n                      fmdom\n                       \\<sigma>. (case lookup\n  ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n                                  Top \\<Rightarrow> top_ass\n                                  | Bot \\<Rightarrow> bot_ass)\n                                  (\\<Lambda> v)) =\n    ((\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)) \\<otimes> ?F)\n 2. fst3 e |\\<inter>| fmdom \\<sigma> = {||} \\<Longrightarrow>\n    (\\<Otimes>v|\\<in>|thd3 e |\\<union>|\n                      fmdom\n                       \\<sigma>. (case lookup\n  ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n                                  Top \\<Rightarrow> top_ass\n                                  | Bot \\<Rightarrow> bot_ass)\n                                  (\\<Lambda> v)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes> ?F)", "apply (unfold iter_hcomp_union)"], ["proof (prove)\ngoal (2 subgoals):\n 1. fst3 e |\\<inter>| fmdom \\<sigma> = {||} \\<Longrightarrow>\n    ((\\<Otimes>v|\\<in>|fst3\n                        e. (case lookup\n                                  ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>)\n                                  v of\n                            Top \\<Rightarrow> top_ass\n                            | Bot \\<Rightarrow> bot_ass)\n                            (\\<Lambda> v)) \\<otimes>\n     (\\<Otimes>v|\\<in>|fmdom\n                        \\<sigma>. (case lookup\n   ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n                                   Top \\<Rightarrow> top_ass\n                                   | Bot \\<Rightarrow> bot_ass)\n                                   (\\<Lambda> v))) =\n    ((\\<Otimes>v|\\<in>|fst3 e. bot_ass (\\<Lambda> v)) \\<otimes> ?F)\n 2. fst3 e |\\<inter>| fmdom \\<sigma> = {||} \\<Longrightarrow>\n    (\\<Otimes>v|\\<in>|thd3 e |\\<union>|\n                      fmdom\n                       \\<sigma>. (case lookup\n  ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n                                  Top \\<Rightarrow> top_ass\n                                  | Bot \\<Rightarrow> bot_ass)\n                                  (\\<Lambda> v)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes> ?F)", "apply (subgoal_tac \"\\<forall>v \\<in> fset (fst3 e). case_topbot top_ass bot_ass\n          (lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v) (\\<Lambda> v) = bot_ass (\\<Lambda> v)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     \\<forall>v\\<in>fset (fst3 e).\n        (case lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n         Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n         (\\<Lambda> v) =\n        bot_ass (\\<Lambda> v)\\<rbrakk>\n    \\<Longrightarrow> ((\\<Otimes>v|\\<in>|fst3\n    e. (case lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n        Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n        (\\<Lambda> v)) \\<otimes>\n                       (\\<Otimes>v|\\<in>|fmdom\n    \\<sigma>. (case lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n               Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n               (\\<Lambda> v))) =\n                      ((\\<Otimes>v|\\<in>|fst3\n    e. bot_ass (\\<Lambda> v)) \\<otimes>\n                       ?F)\n 2. fst3 e |\\<inter>| fmdom \\<sigma> = {||} \\<Longrightarrow>\n    \\<forall>v\\<in>fset (fst3 e).\n       (case lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n        Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n        (\\<Lambda> v) =\n       bot_ass (\\<Lambda> v)\n 3. fst3 e |\\<inter>| fmdom \\<sigma> = {||} \\<Longrightarrow>\n    (\\<Otimes>v|\\<in>|thd3 e |\\<union>|\n                      fmdom\n                       \\<sigma>. (case lookup\n  ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n                                  Top \\<Rightarrow> top_ass\n                                  | Bot \\<Rightarrow> bot_ass)\n                                  (\\<Lambda> v)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes> ?F)", "apply (unfold iter_hcomp_cong)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     \\<forall>v\\<in>fset (fst3 e).\n        (case lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n         Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n         (\\<Lambda> v) =\n        bot_ass (\\<Lambda> v)\\<rbrakk>\n    \\<Longrightarrow> ((\\<Otimes>v|\\<in>|fst3\n    e. bot_ass (\\<Lambda> v)) \\<otimes>\n                       (\\<Otimes>v|\\<in>|fmdom\n    \\<sigma>. (case lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n               Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n               (\\<Lambda> v))) =\n                      ((\\<Otimes>v|\\<in>|fst3\n    e. bot_ass (\\<Lambda> v)) \\<otimes>\n                       ?F)\n 2. fst3 e |\\<inter>| fmdom \\<sigma> = {||} \\<Longrightarrow>\n    \\<forall>v\\<in>fset (fst3 e).\n       (case lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n        Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n        (\\<Lambda> v) =\n       bot_ass (\\<Lambda> v)\n 3. fst3 e |\\<inter>| fmdom \\<sigma> = {||} \\<Longrightarrow>\n    (\\<Otimes>v|\\<in>|thd3 e |\\<union>|\n                      fmdom\n                       \\<sigma>. (case lookup\n  ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n                                  Top \\<Rightarrow> top_ass\n                                  | Bot \\<Rightarrow> bot_ass)\n                                  (\\<Lambda> v)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes> ?F)", "apply (simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. fst3 e |\\<inter>| fmdom \\<sigma> = {||} \\<Longrightarrow>\n    \\<forall>v\\<in>fset (fst3 e).\n       (case lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n        Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n        (\\<Lambda> v) =\n       bot_ass (\\<Lambda> v)\n 2. fst3 e |\\<inter>| fmdom \\<sigma> = {||} \\<Longrightarrow>\n    (\\<Otimes>v|\\<in>|thd3 e |\\<union>|\n                      fmdom\n                       \\<sigma>. (case lookup\n  ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n                                  Top \\<Rightarrow> top_ass\n                                  | Bot \\<Rightarrow> bot_ass)\n                                  (\\<Lambda> v)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes>\n     (\\<Otimes>v|\\<in>|fmdom\n                        \\<sigma>. (case lookup\n   ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n                                   Top \\<Rightarrow> top_ass\n                                   | Bot \\<Rightarrow> bot_ass)\n                                   (\\<Lambda> v)))", "apply (intro ballI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n        v \\<in> fset (fst3 e)\\<rbrakk>\n       \\<Longrightarrow> (case lookup\n                                ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         bot_ass (\\<Lambda> v)\n 2. fst3 e |\\<inter>| fmdom \\<sigma> = {||} \\<Longrightarrow>\n    (\\<Otimes>v|\\<in>|thd3 e |\\<union>|\n                      fmdom\n                       \\<sigma>. (case lookup\n  ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n                                  Top \\<Rightarrow> top_ass\n                                  | Bot \\<Rightarrow> bot_ass)\n                                  (\\<Lambda> v)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes>\n     (\\<Otimes>v|\\<in>|fmdom\n                        \\<sigma>. (case lookup\n   ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n                                   Top \\<Rightarrow> top_ass\n                                   | Bot \\<Rightarrow> bot_ass)\n                                   (\\<Lambda> v)))", "apply (subgoal_tac \"v |\\<notin>| fmdom \\<sigma>\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n        v \\<in> fset (fst3 e); v |\\<notin>| fmdom \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> (case lookup\n                                ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         bot_ass (\\<Lambda> v)\n 2. \\<And>v.\n       \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n        v \\<in> fset (fst3 e)\\<rbrakk>\n       \\<Longrightarrow> v |\\<notin>| fmdom \\<sigma>\n 3. fst3 e |\\<inter>| fmdom \\<sigma> = {||} \\<Longrightarrow>\n    (\\<Otimes>v|\\<in>|thd3 e |\\<union>|\n                      fmdom\n                       \\<sigma>. (case lookup\n  ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n                                  Top \\<Rightarrow> top_ass\n                                  | Bot \\<Rightarrow> bot_ass)\n                                  (\\<Lambda> v)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes>\n     (\\<Otimes>v|\\<in>|fmdom\n                        \\<sigma>. (case lookup\n   ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n                                   Top \\<Rightarrow> top_ass\n                                   | Bot \\<Rightarrow> bot_ass)\n                                   (\\<Lambda> v)))", "apply (unfold lookup_union2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n        v \\<in> fset (fst3 e); v |\\<notin>| fmdom \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> (case lookup [ fst3 e |=> Bot ] v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         bot_ass (\\<Lambda> v)\n 2. \\<And>v.\n       \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n        v \\<in> fset (fst3 e)\\<rbrakk>\n       \\<Longrightarrow> v |\\<notin>| fmdom \\<sigma>\n 3. fst3 e |\\<inter>| fmdom \\<sigma> = {||} \\<Longrightarrow>\n    (\\<Otimes>v|\\<in>|thd3 e |\\<union>|\n                      fmdom\n                       \\<sigma>. (case lookup\n  ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n                                  Top \\<Rightarrow> top_ass\n                                  | Bot \\<Rightarrow> bot_ass)\n                                  (\\<Lambda> v)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes>\n     (\\<Otimes>v|\\<in>|fmdom\n                        \\<sigma>. (case lookup\n   ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n                                   Top \\<Rightarrow> top_ass\n                                   | Bot \\<Rightarrow> bot_ass)\n                                   (\\<Lambda> v)))", "apply (metis lookup_make_fmap topbot.simps(4))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n        v \\<in> fset (fst3 e)\\<rbrakk>\n       \\<Longrightarrow> v |\\<notin>| fmdom \\<sigma>\n 2. fst3 e |\\<inter>| fmdom \\<sigma> = {||} \\<Longrightarrow>\n    (\\<Otimes>v|\\<in>|thd3 e |\\<union>|\n                      fmdom\n                       \\<sigma>. (case lookup\n  ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n                                  Top \\<Rightarrow> top_ass\n                                  | Bot \\<Rightarrow> bot_ass)\n                                  (\\<Lambda> v)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes>\n     (\\<Otimes>v|\\<in>|fmdom\n                        \\<sigma>. (case lookup\n   ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n                                   Top \\<Rightarrow> top_ass\n                                   | Bot \\<Rightarrow> bot_ass)\n                                   (\\<Lambda> v)))", "apply (metis fempty_iff finterI fmember.rep_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst3 e |\\<inter>| fmdom \\<sigma> = {||} \\<Longrightarrow>\n    (\\<Otimes>v|\\<in>|thd3 e |\\<union>|\n                      fmdom\n                       \\<sigma>. (case lookup\n  ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n                                  Top \\<Rightarrow> top_ass\n                                  | Bot \\<Rightarrow> bot_ass)\n                                  (\\<Lambda> v)) =\n    ((\\<Otimes>v|\\<in>|thd3 e. top_ass (\\<Lambda> v)) \\<otimes>\n     (\\<Otimes>v|\\<in>|fmdom\n                        \\<sigma>. (case lookup\n   ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n                                   Top \\<Rightarrow> top_ass\n                                   | Bot \\<Rightarrow> bot_ass)\n                                   (\\<Lambda> v)))", "apply (insert thd_e_disjoint_\\<sigma>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     thd3 e |\\<inter>| fmdom \\<sigma> = {||}\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>v|\\<in>|thd3 e |\\<union>|\n  fmdom\n   \\<sigma>. (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n              Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n              (\\<Lambda> v)) =\n                      ((\\<Otimes>v|\\<in>|thd3\n    e. top_ass (\\<Lambda> v)) \\<otimes>\n                       (\\<Otimes>v|\\<in>|fmdom\n    \\<sigma>. (case lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n               Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n               (\\<Lambda> v)))", "apply (unfold iter_hcomp_union)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     thd3 e |\\<inter>| fmdom \\<sigma> = {||}\\<rbrakk>\n    \\<Longrightarrow> ((\\<Otimes>v|\\<in>|thd3\n    e. (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n        Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n        (\\<Lambda> v)) \\<otimes>\n                       (\\<Otimes>v|\\<in>|fmdom\n    \\<sigma>. (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n               Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n               (\\<Lambda> v))) =\n                      ((\\<Otimes>v|\\<in>|thd3\n    e. top_ass (\\<Lambda> v)) \\<otimes>\n                       (\\<Otimes>v|\\<in>|fmdom\n    \\<sigma>. (case lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n               Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n               (\\<Lambda> v)))", "apply (subgoal_tac \"\\<forall>v \\<in> fset (thd3 e). case_topbot top_ass bot_ass\n          (lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v) (\\<Lambda> v) = top_ass (\\<Lambda> v)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     thd3 e |\\<inter>| fmdom \\<sigma> = {||};\n     \\<forall>v\\<in>fset (thd3 e).\n        (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n         Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n         (\\<Lambda> v) =\n        top_ass (\\<Lambda> v)\\<rbrakk>\n    \\<Longrightarrow> ((\\<Otimes>v|\\<in>|thd3\n    e. (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n        Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n        (\\<Lambda> v)) \\<otimes>\n                       (\\<Otimes>v|\\<in>|fmdom\n    \\<sigma>. (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n               Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n               (\\<Lambda> v))) =\n                      ((\\<Otimes>v|\\<in>|thd3\n    e. top_ass (\\<Lambda> v)) \\<otimes>\n                       (\\<Otimes>v|\\<in>|fmdom\n    \\<sigma>. (case lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n               Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n               (\\<Lambda> v)))\n 2. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     thd3 e |\\<inter>| fmdom \\<sigma> = {||}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>v\\<in>fset (thd3 e).\n                         (case lookup\n                                ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         top_ass (\\<Lambda> v)", "apply (unfold iter_hcomp_cong)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     thd3 e |\\<inter>| fmdom \\<sigma> = {||};\n     \\<forall>v\\<in>fset (thd3 e).\n        (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n         Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n         (\\<Lambda> v) =\n        top_ass (\\<Lambda> v)\\<rbrakk>\n    \\<Longrightarrow> ((\\<Otimes>v|\\<in>|thd3\n    e. top_ass (\\<Lambda> v)) \\<otimes>\n                       (\\<Otimes>v|\\<in>|fmdom\n    \\<sigma>. (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n               Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n               (\\<Lambda> v))) =\n                      ((\\<Otimes>v|\\<in>|thd3\n    e. top_ass (\\<Lambda> v)) \\<otimes>\n                       (\\<Otimes>v|\\<in>|fmdom\n    \\<sigma>. (case lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n               Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n               (\\<Lambda> v)))\n 2. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     thd3 e |\\<inter>| fmdom \\<sigma> = {||}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>v\\<in>fset (thd3 e).\n                         (case lookup\n                                ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         top_ass (\\<Lambda> v)", "apply (subgoal_tac \"\\<forall>v \\<in> fset (fmdom \\<sigma>). case_topbot top_ass bot_ass\n          (lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v) (\\<Lambda> v) =\n          case_topbot top_ass bot_ass (lookup ([fst3 e |=> Bot] ++\\<^sub>f \\<sigma>) v) (\\<Lambda> v)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     thd3 e |\\<inter>| fmdom \\<sigma> = {||};\n     \\<forall>v\\<in>fset (thd3 e).\n        (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n         Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n         (\\<Lambda> v) =\n        top_ass (\\<Lambda> v);\n     \\<forall>v\\<in>fset (fmdom \\<sigma>).\n        (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n         Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n         (\\<Lambda> v) =\n        (case lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n         Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n         (\\<Lambda> v)\\<rbrakk>\n    \\<Longrightarrow> ((\\<Otimes>v|\\<in>|thd3\n    e. top_ass (\\<Lambda> v)) \\<otimes>\n                       (\\<Otimes>v|\\<in>|fmdom\n    \\<sigma>. (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n               Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n               (\\<Lambda> v))) =\n                      ((\\<Otimes>v|\\<in>|thd3\n    e. top_ass (\\<Lambda> v)) \\<otimes>\n                       (\\<Otimes>v|\\<in>|fmdom\n    \\<sigma>. (case lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n               Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n               (\\<Lambda> v)))\n 2. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     thd3 e |\\<inter>| fmdom \\<sigma> = {||};\n     \\<forall>v\\<in>fset (thd3 e).\n        (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n         Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n         (\\<Lambda> v) =\n        top_ass (\\<Lambda> v)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>v\\<in>fset (fmdom \\<sigma>).\n                         (case lookup\n                                ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         (case lookup\n                                ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v)\n 3. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     thd3 e |\\<inter>| fmdom \\<sigma> = {||}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>v\\<in>fset (thd3 e).\n                         (case lookup\n                                ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         top_ass (\\<Lambda> v)", "apply (unfold iter_hcomp_cong)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     thd3 e |\\<inter>| fmdom \\<sigma> = {||};\n     \\<forall>v\\<in>fset (thd3 e).\n        (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n         Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n         (\\<Lambda> v) =\n        top_ass (\\<Lambda> v);\n     \\<forall>v\\<in>fset (fmdom \\<sigma>).\n        (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n         Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n         (\\<Lambda> v) =\n        (case lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n         Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n         (\\<Lambda> v)\\<rbrakk>\n    \\<Longrightarrow> ((\\<Otimes>v|\\<in>|thd3\n    e. top_ass (\\<Lambda> v)) \\<otimes>\n                       (\\<Otimes>v|\\<in>|fmdom\n    \\<sigma>. (case lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n               Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n               (\\<Lambda> v))) =\n                      ((\\<Otimes>v|\\<in>|thd3\n    e. top_ass (\\<Lambda> v)) \\<otimes>\n                       (\\<Otimes>v|\\<in>|fmdom\n    \\<sigma>. (case lookup ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>) v of\n               Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n               (\\<Lambda> v)))\n 2. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     thd3 e |\\<inter>| fmdom \\<sigma> = {||};\n     \\<forall>v\\<in>fset (thd3 e).\n        (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n         Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n         (\\<Lambda> v) =\n        top_ass (\\<Lambda> v)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>v\\<in>fset (fmdom \\<sigma>).\n                         (case lookup\n                                ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         (case lookup\n                                ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v)\n 3. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     thd3 e |\\<inter>| fmdom \\<sigma> = {||}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>v\\<in>fset (thd3 e).\n                         (case lookup\n                                ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         top_ass (\\<Lambda> v)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     thd3 e |\\<inter>| fmdom \\<sigma> = {||};\n     \\<forall>v\\<in>fset (thd3 e).\n        (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n         Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n         (\\<Lambda> v) =\n        top_ass (\\<Lambda> v)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>v\\<in>fset (fmdom \\<sigma>).\n                         (case lookup\n                                ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         (case lookup\n                                ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v)\n 2. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     thd3 e |\\<inter>| fmdom \\<sigma> = {||}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>v\\<in>fset (thd3 e).\n                         (case lookup\n                                ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         top_ass (\\<Lambda> v)", "apply (intro ballI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n        thd3 e |\\<inter>| fmdom \\<sigma> = {||};\n        \\<forall>v\\<in>fset (thd3 e).\n           (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n            Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n            (\\<Lambda> v) =\n           top_ass (\\<Lambda> v);\n        v \\<in> fset (fmdom \\<sigma>)\\<rbrakk>\n       \\<Longrightarrow> (case lookup\n                                ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         (case lookup\n                                ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v)\n 2. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     thd3 e |\\<inter>| fmdom \\<sigma> = {||}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>v\\<in>fset (thd3 e).\n                         (case lookup\n                                ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         top_ass (\\<Lambda> v)", "apply (subgoal_tac \"v |\\<in>| fmdom \\<sigma>\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n        thd3 e |\\<inter>| fmdom \\<sigma> = {||};\n        \\<forall>v\\<in>fset (thd3 e).\n           (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n            Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n            (\\<Lambda> v) =\n           top_ass (\\<Lambda> v);\n        v \\<in> fset (fmdom \\<sigma>); v |\\<in>| fmdom \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> (case lookup\n                                ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         (case lookup\n                                ([ fst3 e |=> Bot ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v)\n 2. \\<And>v.\n       \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n        thd3 e |\\<inter>| fmdom \\<sigma> = {||};\n        \\<forall>v\\<in>fset (thd3 e).\n           (case lookup ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>) v of\n            Top \\<Rightarrow> top_ass | Bot \\<Rightarrow> bot_ass)\n            (\\<Lambda> v) =\n           top_ass (\\<Lambda> v);\n        v \\<in> fset (fmdom \\<sigma>)\\<rbrakk>\n       \\<Longrightarrow> v |\\<in>| fmdom \\<sigma>\n 3. \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n     thd3 e |\\<inter>| fmdom \\<sigma> = {||}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>v\\<in>fset (thd3 e).\n                         (case lookup\n                                ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         top_ass (\\<Lambda> v)", "apply (unfold lookup_union1, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n        thd3 e |\\<inter>| fmdom \\<sigma> = {||};\n        v \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> (case lookup\n                                ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         top_ass (\\<Lambda> v)", "apply (subgoal_tac \"v |\\<notin>| fmdom \\<sigma>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n        thd3 e |\\<inter>| fmdom \\<sigma> = {||}; v \\<in> fset (thd3 e);\n        v |\\<notin>| fmdom \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> (case lookup\n                                ([ thd3 e |=> Top ] ++\\<^sub>f \\<sigma>)\n                                v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         top_ass (\\<Lambda> v)\n 2. \\<And>v.\n       \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n        thd3 e |\\<inter>| fmdom \\<sigma> = {||};\n        v \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> v |\\<notin>| fmdom \\<sigma>", "apply (unfold lookup_union2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n        thd3 e |\\<inter>| fmdom \\<sigma> = {||}; v \\<in> fset (thd3 e);\n        v |\\<notin>| fmdom \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> (case lookup [ thd3 e |=> Top ] v of\n                          Top \\<Rightarrow> top_ass\n                          | Bot \\<Rightarrow> bot_ass)\n                          (\\<Lambda> v) =\n                         top_ass (\\<Lambda> v)\n 2. \\<And>v.\n       \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n        thd3 e |\\<inter>| fmdom \\<sigma> = {||};\n        v \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> v |\\<notin>| fmdom \\<sigma>", "apply (metis lookup_make_fmap topbot.simps(3))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>fst3 e |\\<inter>| fmdom \\<sigma> = {||};\n        thd3 e |\\<inter>| fmdom \\<sigma> = {||};\n        v \\<in> fset (thd3 e)\\<rbrakk>\n       \\<Longrightarrow> v |\\<notin>| fmdom \\<sigma>", "by (metis fempty_iff finterI fmember.rep_eq)"], ["proof (state)\nthis:\n  prov_triple\n   (asn (ps_to_int G (fst3 (nthtriple \\<Pi> i))), cs ! i,\n    asn (ps_to_int G (thd3 (nthtriple \\<Pi> i))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prov_triple\n   (asn (fst3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)), cs ! i,\n    asn (thd3 (nthtriple (ps_chain_to_int_chain G \\<Pi>) i)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prov_triple\n   (asn (\\<Otimes>v|\\<in>|initials\n                           (Graph V \\<Lambda> E). top_ass (\\<Lambda> v)),\n    foldr (;;) cs Skip,\n    asn (\\<Otimes>v|\\<in>|terminals\n                           (Graph V \\<Lambda> E). bot_ass (\\<Lambda> v)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  top_dia G = top_dia G \\<and>\n  bot_dia G = bot_dia G \\<and>\n  (\\<forall>c.\n      coms_dia G c \\<longrightarrow>\n      prov_triple (asn (top_dia G), c, asn (bot_dia G)))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The soundness theorem states that any diagram provable using the\n  proof rules for ribbons can be recreated as a valid proof in separation\n  logic.\\<close>"], ["", "corollary soundness_graphical:\n  assumes \"\\<And>c. wr_com c = {}\"\n  assumes \"prov_dia G P Q\"\n  shows \"\\<forall>c. coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c. coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q)", "using soundness_graphical_helper[OF assms(1)] and assms(2)"], ["proof (prove)\nusing this:\n  (prov_dia ?G ?P ?Q \\<longrightarrow>\n   ?P = top_dia ?G \\<and>\n   ?Q = bot_dia ?G \\<and>\n   (\\<forall>c.\n       coms_dia ?G c \\<longrightarrow>\n       prov_triple (asn ?P, c, asn ?Q))) \\<and>\n  (prov_com ?C ?P ?Q \\<longrightarrow>\n   (\\<forall>c.\n       coms_com ?C c \\<longrightarrow>\n       prov_triple (asn ?P, c, asn ?Q))) \\<and>\n  (prov_ass ?A \\<longrightarrow>\n   (\\<forall>c.\n       coms_ass ?A c \\<longrightarrow>\n       prov_triple (asn (top_ass ?A), c, asn (bot_ass ?A))))\n  prov_dia G P Q\n\ngoal (1 subgoal):\n 1. \\<forall>c. coms_dia G c \\<longrightarrow> prov_triple (asn P, c, asn Q)", "by auto"], ["", "end"]]}