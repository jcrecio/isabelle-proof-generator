{"file_name": "/home/qj213/afp-2021-10-22/thys/Hermite_Lindemann/Min_Int_Poly.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Hermite_Lindemann", "problem_names": ["lemma\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows min_int_poly_represents [intro]: \"algebraic x \\<Longrightarrow> min_int_poly x represents x\"\n  and   min_int_poly_irreducible [intro]: \"irreducible (min_int_poly x)\"\n  and   lead_coeff_min_int_poly_pos: \"Polynomial.lead_coeff (min_int_poly x) > 0\"", "lemma \n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows degree_min_int_poly_pos [intro]: \"Polynomial.degree (min_int_poly x) > 0\"\n    and degree_min_int_poly_nonzero [simp]: \"Polynomial.degree (min_int_poly x) \\<noteq> 0\"", "lemma min_int_poly_squarefree [intro]:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows \"squarefree (min_int_poly x)\"", "lemma min_int_poly_primitive [intro]:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows \"primitive (min_int_poly x)\"", "lemma min_int_poly_content [simp]:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows \"content (min_int_poly x) = 1\"", "lemma ipoly_min_int_poly [simp]: \n  \"algebraic x \\<Longrightarrow> ipoly (min_int_poly x) (x :: 'a :: {field_gcd, field_char_0}) = 0\"", "lemma min_int_poly_nonzero [simp]:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows \"min_int_poly x \\<noteq> 0\"", "lemma min_int_poly_normalize [simp]:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows \"normalize (min_int_poly x) = min_int_poly x\"", "lemma min_int_poly_prime_elem [intro]:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows \"prime_elem (min_int_poly x)\"", "lemma min_int_poly_prime [intro]:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows \"prime (min_int_poly x)\"", "lemma min_int_poly_unique:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  assumes \"p represents x\" \"irreducible p\" \"Polynomial.lead_coeff p > 0\"\n  shows \"min_int_poly x = p\"", "lemma min_int_poly_of_int [simp]:\n  \"min_int_poly (of_int n :: 'a :: {field_char_0, field_gcd}) = [:-of_int n, 1:]\"", "lemma min_int_poly_of_nat [simp]:\n  \"min_int_poly (of_nat n :: 'a :: {field_char_0, field_gcd}) = [:-of_nat n, 1:]\"", "lemma min_int_poly_0 [simp]: \"min_int_poly (0 :: 'a :: {field_char_0, field_gcd}) = [:0, 1:]\"", "lemma min_int_poly_1 [simp]: \"min_int_poly (1 :: 'a :: {field_char_0, field_gcd}) = [:-1, 1:]\"", "lemma poly_min_int_poly_0_eq_0_iff [simp]:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  assumes \"algebraic x\"\n  shows \"poly (min_int_poly x) 0 = 0 \\<longleftrightarrow> x = 0\"", "lemma min_int_poly_conv_Gcd:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  assumes \"algebraic x\"\n  shows \"min_int_poly x = Gcd {p. p \\<noteq> 0 \\<and> p represents x}\"", "lemma min_int_poly_eqI:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  assumes \"p represents x\" \"irreducible p\" \"Polynomial.lead_coeff p \\<ge> 0\"\n  shows   \"min_int_poly x = p\""], "translations": [["", "lemma\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows min_int_poly_represents [intro]: \"algebraic x \\<Longrightarrow> min_int_poly x represents x\"\n  and   min_int_poly_irreducible [intro]: \"irreducible (min_int_poly x)\"\n  and   lead_coeff_min_int_poly_pos: \"Polynomial.lead_coeff (min_int_poly x) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (algebraic x \\<Longrightarrow> min_int_poly x represents x) &&&\n    irreducible (min_int_poly x) &&&\n    0 < Polynomial.lead_coeff (min_int_poly x)", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. algebraic x \\<Longrightarrow> min_int_poly x represents x\n 2. irreducible (min_int_poly x)\n 3. 0 < Polynomial.lead_coeff (min_int_poly x)", "note * = theI'[OF algebraic_imp_represents_unique, of x]"], ["proof (state)\nthis:\n  algebraic x \\<Longrightarrow>\n  (THE xa.\n      xa represents x \\<and>\n      irreducible xa \\<and> 0 < Polynomial.lead_coeff xa) represents\n  x \\<and>\n  irreducible\n   (THE xa.\n       xa represents x \\<and>\n       irreducible xa \\<and> 0 < Polynomial.lead_coeff xa) \\<and>\n  0 < Polynomial.lead_coeff\n       (THE xa.\n           xa represents x \\<and>\n           irreducible xa \\<and> 0 < Polynomial.lead_coeff xa)\n\ngoal (3 subgoals):\n 1. algebraic x \\<Longrightarrow> min_int_poly x represents x\n 2. irreducible (min_int_poly x)\n 3. 0 < Polynomial.lead_coeff (min_int_poly x)", "show \"min_int_poly x represents x\" if \"algebraic x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min_int_poly x represents x", "using *[OF that]"], ["proof (prove)\nusing this:\n  (THE xa.\n      xa represents x \\<and>\n      irreducible xa \\<and> 0 < Polynomial.lead_coeff xa) represents\n  x \\<and>\n  irreducible\n   (THE xa.\n       xa represents x \\<and>\n       irreducible xa \\<and> 0 < Polynomial.lead_coeff xa) \\<and>\n  0 < Polynomial.lead_coeff\n       (THE xa.\n           xa represents x \\<and>\n           irreducible xa \\<and> 0 < Polynomial.lead_coeff xa)\n\ngoal (1 subgoal):\n 1. min_int_poly x represents x", "by (simp add: that min_int_poly_def)"], ["proof (state)\nthis:\n  algebraic x \\<Longrightarrow> min_int_poly x represents x\n\ngoal (2 subgoals):\n 1. irreducible (min_int_poly x)\n 2. 0 < Polynomial.lead_coeff (min_int_poly x)", "have \"irreducible [:0, 1::int:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible [:0, 1:]", "by (rule irreducible_linear_poly) auto"], ["proof (state)\nthis:\n  irreducible [:0, 1:]\n\ngoal (2 subgoals):\n 1. irreducible (min_int_poly x)\n 2. 0 < Polynomial.lead_coeff (min_int_poly x)", "thus \"irreducible (min_int_poly x)\""], ["proof (prove)\nusing this:\n  irreducible [:0, 1:]\n\ngoal (1 subgoal):\n 1. irreducible (min_int_poly x)", "using *"], ["proof (prove)\nusing this:\n  irreducible [:0, 1:]\n  algebraic x \\<Longrightarrow>\n  (THE xa.\n      xa represents x \\<and>\n      irreducible xa \\<and> 0 < Polynomial.lead_coeff xa) represents\n  x \\<and>\n  irreducible\n   (THE xa.\n       xa represents x \\<and>\n       irreducible xa \\<and> 0 < Polynomial.lead_coeff xa) \\<and>\n  0 < Polynomial.lead_coeff\n       (THE xa.\n           xa represents x \\<and>\n           irreducible xa \\<and> 0 < Polynomial.lead_coeff xa)\n\ngoal (1 subgoal):\n 1. irreducible (min_int_poly x)", "by (auto simp: min_int_poly_def)"], ["proof (state)\nthis:\n  irreducible (min_int_poly x)\n\ngoal (1 subgoal):\n 1. 0 < Polynomial.lead_coeff (min_int_poly x)", "show \"Polynomial.lead_coeff (min_int_poly x) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Polynomial.lead_coeff (min_int_poly x)", "using *"], ["proof (prove)\nusing this:\n  algebraic x \\<Longrightarrow>\n  (THE xa.\n      xa represents x \\<and>\n      irreducible xa \\<and> 0 < Polynomial.lead_coeff xa) represents\n  x \\<and>\n  irreducible\n   (THE xa.\n       xa represents x \\<and>\n       irreducible xa \\<and> 0 < Polynomial.lead_coeff xa) \\<and>\n  0 < Polynomial.lead_coeff\n       (THE xa.\n           xa represents x \\<and>\n           irreducible xa \\<and> 0 < Polynomial.lead_coeff xa)\n\ngoal (1 subgoal):\n 1. 0 < Polynomial.lead_coeff (min_int_poly x)", "by (auto simp: min_int_poly_def)"], ["proof (state)\nthis:\n  0 < Polynomial.lead_coeff (min_int_poly x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows degree_min_int_poly_pos [intro]: \"Polynomial.degree (min_int_poly x) > 0\"\n    and degree_min_int_poly_nonzero [simp]: \"Polynomial.degree (min_int_poly x) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Polynomial.degree (min_int_poly x) &&&\n    Polynomial.degree (min_int_poly x) \\<noteq> 0", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < Polynomial.degree (min_int_poly x)\n 2. Polynomial.degree (min_int_poly x) \\<noteq> 0", "show \"Polynomial.degree (min_int_poly x) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Polynomial.degree (min_int_poly x)", "proof (cases \"algebraic x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. algebraic x \\<Longrightarrow> 0 < Polynomial.degree (min_int_poly x)\n 2. \\<not> algebraic x \\<Longrightarrow>\n    0 < Polynomial.degree (min_int_poly x)", "case True"], ["proof (state)\nthis:\n  algebraic x\n\ngoal (2 subgoals):\n 1. algebraic x \\<Longrightarrow> 0 < Polynomial.degree (min_int_poly x)\n 2. \\<not> algebraic x \\<Longrightarrow>\n    0 < Polynomial.degree (min_int_poly x)", "hence \"min_int_poly x represents x\""], ["proof (prove)\nusing this:\n  algebraic x\n\ngoal (1 subgoal):\n 1. min_int_poly x represents x", "by auto"], ["proof (state)\nthis:\n  min_int_poly x represents x\n\ngoal (2 subgoals):\n 1. algebraic x \\<Longrightarrow> 0 < Polynomial.degree (min_int_poly x)\n 2. \\<not> algebraic x \\<Longrightarrow>\n    0 < Polynomial.degree (min_int_poly x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  min_int_poly x represents x\n\ngoal (1 subgoal):\n 1. 0 < Polynomial.degree (min_int_poly x)", "by blast"], ["proof (state)\nthis:\n  0 < Polynomial.degree (min_int_poly x)\n\ngoal (1 subgoal):\n 1. \\<not> algebraic x \\<Longrightarrow>\n    0 < Polynomial.degree (min_int_poly x)", "qed (auto simp: min_int_poly_def)"], ["proof (state)\nthis:\n  0 < Polynomial.degree (min_int_poly x)\n\ngoal (1 subgoal):\n 1. Polynomial.degree (min_int_poly x) \\<noteq> 0", "thus \"Polynomial.degree (min_int_poly x) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  0 < Polynomial.degree (min_int_poly x)\n\ngoal (1 subgoal):\n 1. Polynomial.degree (min_int_poly x) \\<noteq> 0", "by blast"], ["proof (state)\nthis:\n  Polynomial.degree (min_int_poly x) \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma min_int_poly_squarefree [intro]:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows \"squarefree (min_int_poly x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. squarefree (min_int_poly x)", "by (rule irreducible_imp_squarefree) auto"], ["", "lemma min_int_poly_primitive [intro]:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows \"primitive (min_int_poly x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Missing_Polynomial_Factorial.primitive (min_int_poly x)", "by (rule irreducible_imp_primitive) auto"], ["", "lemma min_int_poly_content [simp]:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows \"content (min_int_poly x) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. content (min_int_poly x) = 1", "using min_int_poly_primitive[of x]"], ["proof (prove)\nusing this:\n  Missing_Polynomial_Factorial.primitive (min_int_poly x)\n\ngoal (1 subgoal):\n 1. content (min_int_poly x) = 1", "by (simp add: primitive_def)"], ["", "lemma ipoly_min_int_poly [simp]: \n  \"algebraic x \\<Longrightarrow> ipoly (min_int_poly x) (x :: 'a :: {field_gcd, field_char_0}) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. algebraic x \\<Longrightarrow> ipoly (min_int_poly x) x = (0::'a)", "using min_int_poly_represents[of x]"], ["proof (prove)\nusing this:\n  algebraic x \\<Longrightarrow> min_int_poly x represents x\n\ngoal (1 subgoal):\n 1. algebraic x \\<Longrightarrow> ipoly (min_int_poly x) x = (0::'a)", "by (auto simp: represents_def)"], ["", "lemma min_int_poly_nonzero [simp]:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows \"min_int_poly x \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min_int_poly x \\<noteq> 0", "using lead_coeff_min_int_poly_pos[of x]"], ["proof (prove)\nusing this:\n  0 < Polynomial.lead_coeff (min_int_poly x)\n\ngoal (1 subgoal):\n 1. min_int_poly x \\<noteq> 0", "by auto"], ["", "lemma min_int_poly_normalize [simp]:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows \"normalize (min_int_poly x) = min_int_poly x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. normalize (min_int_poly x) = min_int_poly x", "unfolding normalize_poly_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. min_int_poly x div\n    [:unit_factor (Polynomial.lead_coeff (min_int_poly x)):] =\n    min_int_poly x", "using lead_coeff_min_int_poly_pos[of x]"], ["proof (prove)\nusing this:\n  0 < Polynomial.lead_coeff (min_int_poly x)\n\ngoal (1 subgoal):\n 1. min_int_poly x div\n    [:unit_factor (Polynomial.lead_coeff (min_int_poly x)):] =\n    min_int_poly x", "by simp"], ["", "lemma min_int_poly_prime_elem [intro]:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows \"prime_elem (min_int_poly x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_elem (min_int_poly x)", "using min_int_poly_irreducible[of x]"], ["proof (prove)\nusing this:\n  irreducible (min_int_poly x)\n\ngoal (1 subgoal):\n 1. prime_elem (min_int_poly x)", "by blast"], ["", "lemma min_int_poly_prime [intro]:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  shows \"prime (min_int_poly x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (min_int_poly x)", "using min_int_poly_prime_elem[of x]"], ["proof (prove)\nusing this:\n  prime_elem (min_int_poly x)\n\ngoal (1 subgoal):\n 1. prime (min_int_poly x)", "by (simp only: prime_normalize_iff [symmetric] min_int_poly_normalize)"], ["", "lemma min_int_poly_unique:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  assumes \"p represents x\" \"irreducible p\" \"Polynomial.lead_coeff p > 0\"\n  shows \"min_int_poly x = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min_int_poly x = p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. min_int_poly x = p", "from assms(1)"], ["proof (chain)\npicking this:\n  p represents x", "have x: \"algebraic x\""], ["proof (prove)\nusing this:\n  p represents x\n\ngoal (1 subgoal):\n 1. algebraic x", "using algebraic_iff_represents"], ["proof (prove)\nusing this:\n  p represents x\n  algebraic ?x = (\\<exists>p. p represents ?x)\n\ngoal (1 subgoal):\n 1. algebraic x", "by blast"], ["proof (state)\nthis:\n  algebraic x\n\ngoal (1 subgoal):\n 1. min_int_poly x = p", "thus ?thesis"], ["proof (prove)\nusing this:\n  algebraic x\n\ngoal (1 subgoal):\n 1. min_int_poly x = p", "using the1_equality[OF algebraic_imp_represents_unique[OF x], of p] assms"], ["proof (prove)\nusing this:\n  algebraic x\n  p represents x \\<and>\n  irreducible p \\<and> 0 < Polynomial.lead_coeff p \\<Longrightarrow>\n  (THE xa.\n      xa represents x \\<and>\n      irreducible xa \\<and> 0 < Polynomial.lead_coeff xa) =\n  p\n  p represents x\n  irreducible p\n  0 < Polynomial.lead_coeff p\n\ngoal (1 subgoal):\n 1. min_int_poly x = p", "unfolding min_int_poly_def"], ["proof (prove)\nusing this:\n  algebraic x\n  p represents x \\<and>\n  irreducible p \\<and> 0 < Polynomial.lead_coeff p \\<Longrightarrow>\n  (THE xa.\n      xa represents x \\<and>\n      irreducible xa \\<and> 0 < Polynomial.lead_coeff xa) =\n  p\n  p represents x\n  irreducible p\n  0 < Polynomial.lead_coeff p\n\ngoal (1 subgoal):\n 1. (if algebraic x\n     then THE p.\n             p represents x \\<and>\n             irreducible p \\<and> 0 < Polynomial.lead_coeff p\n     else [:0, 1:]) =\n    p", "by auto"], ["proof (state)\nthis:\n  min_int_poly x = p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma min_int_poly_of_int [simp]:\n  \"min_int_poly (of_int n :: 'a :: {field_char_0, field_gcd}) = [:-of_int n, 1:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min_int_poly (of_int n) = [:- of_int n, 1:]", "by (intro min_int_poly_unique irreducible_linear_poly) auto"], ["", "lemma min_int_poly_of_nat [simp]:\n  \"min_int_poly (of_nat n :: 'a :: {field_char_0, field_gcd}) = [:-of_nat n, 1:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min_int_poly (of_nat n) = [:- int n, 1:]", "using min_int_poly_of_int[of \"int n\"]"], ["proof (prove)\nusing this:\n  min_int_poly (of_int (int n)) = [:- of_int (int n), 1:]\n\ngoal (1 subgoal):\n 1. min_int_poly (of_nat n) = [:- int n, 1:]", "by (simp del: min_int_poly_of_int)"], ["", "lemma min_int_poly_0 [simp]: \"min_int_poly (0 :: 'a :: {field_char_0, field_gcd}) = [:0, 1:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min_int_poly (0::'a) = [:0, 1:]", "using min_int_poly_of_int[of 0]"], ["proof (prove)\nusing this:\n  min_int_poly (of_int 0) = [:- of_int 0, 1:]\n\ngoal (1 subgoal):\n 1. min_int_poly (0::'a) = [:0, 1:]", "unfolding of_int_0"], ["proof (prove)\nusing this:\n  min_int_poly (0::?'a) = [:- 0, 1:]\n\ngoal (1 subgoal):\n 1. min_int_poly (0::'a) = [:0, 1:]", "by simp"], ["", "lemma min_int_poly_1 [simp]: \"min_int_poly (1 :: 'a :: {field_char_0, field_gcd}) = [:-1, 1:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min_int_poly (1::'a) = [:- 1, 1:]", "using min_int_poly_of_int[of 1]"], ["proof (prove)\nusing this:\n  min_int_poly (of_int 1) = [:- of_int 1, 1:]\n\ngoal (1 subgoal):\n 1. min_int_poly (1::'a) = [:- 1, 1:]", "unfolding of_int_1"], ["proof (prove)\nusing this:\n  min_int_poly (1::?'a) = [:- 1, 1:]\n\ngoal (1 subgoal):\n 1. min_int_poly (1::'a) = [:- 1, 1:]", "by simp"], ["", "lemma poly_min_int_poly_0_eq_0_iff [simp]:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  assumes \"algebraic x\"\n  shows \"poly (min_int_poly x) 0 = 0 \\<longleftrightarrow> x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (poly (min_int_poly x) 0 = 0) = (x = (0::'a))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. poly (min_int_poly x) 0 = 0 \\<Longrightarrow> x = (0::'a)\n 2. x = (0::'a) \\<Longrightarrow> poly (min_int_poly x) 0 = 0", "assume *: \"poly (min_int_poly x) 0 = 0\""], ["proof (state)\nthis:\n  poly (min_int_poly x) 0 = 0\n\ngoal (2 subgoals):\n 1. poly (min_int_poly x) 0 = 0 \\<Longrightarrow> x = (0::'a)\n 2. x = (0::'a) \\<Longrightarrow> poly (min_int_poly x) 0 = 0", "show \"x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = (0::'a)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> (0::'a) \\<Longrightarrow> False", "assume \"x \\<noteq> 0\""], ["proof (state)\nthis:\n  x \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. x \\<noteq> (0::'a) \\<Longrightarrow> False", "hence \"poly (min_int_poly x) 0 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  x \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. poly (min_int_poly x) 0 \\<noteq> 0", "using assms"], ["proof (prove)\nusing this:\n  x \\<noteq> (0::'a)\n  algebraic x\n\ngoal (1 subgoal):\n 1. poly (min_int_poly x) 0 \\<noteq> 0", "by (intro represents_irr_non_0) auto"], ["proof (state)\nthis:\n  poly (min_int_poly x) 0 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x \\<noteq> (0::'a) \\<Longrightarrow> False", "with *"], ["proof (chain)\npicking this:\n  poly (min_int_poly x) 0 = 0\n  poly (min_int_poly x) 0 \\<noteq> 0", "show False"], ["proof (prove)\nusing this:\n  poly (min_int_poly x) 0 = 0\n  poly (min_int_poly x) 0 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = (0::'a)\n\ngoal (1 subgoal):\n 1. x = (0::'a) \\<Longrightarrow> poly (min_int_poly x) 0 = 0", "qed auto"], ["", "lemma min_int_poly_conv_Gcd:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  assumes \"algebraic x\"\n  shows \"min_int_poly x = Gcd {p. p \\<noteq> 0 \\<and> p represents x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min_int_poly x = Gcd {p. p \\<noteq> 0 \\<and> p represents x}", "proof (rule sym, rule Gcd_eqI, (safe)?)"], ["proof (state)\ngoal (3 subgoals):\n 1. normalize (min_int_poly x) = min_int_poly x\n 2. \\<And>b.\n       \\<lbrakk>b \\<noteq> 0; b represents x\\<rbrakk>\n       \\<Longrightarrow> min_int_poly x dvd b\n 3. \\<And>c.\n       (\\<And>b.\n           b \\<in> {p. p \\<noteq> 0 \\<and> p represents x} \\<Longrightarrow>\n           c dvd b) \\<Longrightarrow>\n       c dvd min_int_poly x", "fix p"], ["proof (state)\ngoal (3 subgoals):\n 1. normalize (min_int_poly x) = min_int_poly x\n 2. \\<And>b.\n       \\<lbrakk>b \\<noteq> 0; b represents x\\<rbrakk>\n       \\<Longrightarrow> min_int_poly x dvd b\n 3. \\<And>c.\n       (\\<And>b.\n           b \\<in> {p. p \\<noteq> 0 \\<and> p represents x} \\<Longrightarrow>\n           c dvd b) \\<Longrightarrow>\n       c dvd min_int_poly x", "assume p: \"\\<And>q. q \\<in> {p. p \\<noteq> 0 \\<and> p represents x} \\<Longrightarrow> p dvd q\""], ["proof (state)\nthis:\n  ?q \\<in> {p. p \\<noteq> 0 \\<and> p represents x} \\<Longrightarrow>\n  p dvd ?q\n\ngoal (3 subgoals):\n 1. normalize (min_int_poly x) = min_int_poly x\n 2. \\<And>b.\n       \\<lbrakk>b \\<noteq> 0; b represents x\\<rbrakk>\n       \\<Longrightarrow> min_int_poly x dvd b\n 3. \\<And>c.\n       (\\<And>b.\n           b \\<in> {p. p \\<noteq> 0 \\<and> p represents x} \\<Longrightarrow>\n           c dvd b) \\<Longrightarrow>\n       c dvd min_int_poly x", "show \"p dvd min_int_poly x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p dvd min_int_poly x", "using assms"], ["proof (prove)\nusing this:\n  algebraic x\n\ngoal (1 subgoal):\n 1. p dvd min_int_poly x", "by (intro p) auto"], ["proof (state)\nthis:\n  p dvd min_int_poly x\n\ngoal (2 subgoals):\n 1. normalize (min_int_poly x) = min_int_poly x\n 2. \\<And>b.\n       \\<lbrakk>b \\<noteq> 0; b represents x\\<rbrakk>\n       \\<Longrightarrow> min_int_poly x dvd b", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. normalize (min_int_poly x) = min_int_poly x\n 2. \\<And>b.\n       \\<lbrakk>b \\<noteq> 0; b represents x\\<rbrakk>\n       \\<Longrightarrow> min_int_poly x dvd b", "fix p"], ["proof (state)\ngoal (2 subgoals):\n 1. normalize (min_int_poly x) = min_int_poly x\n 2. \\<And>b.\n       \\<lbrakk>b \\<noteq> 0; b represents x\\<rbrakk>\n       \\<Longrightarrow> min_int_poly x dvd b", "assume p: \"p \\<noteq> 0\" \"p represents x\""], ["proof (state)\nthis:\n  p \\<noteq> 0\n  p represents x\n\ngoal (2 subgoals):\n 1. normalize (min_int_poly x) = min_int_poly x\n 2. \\<And>b.\n       \\<lbrakk>b \\<noteq> 0; b represents x\\<rbrakk>\n       \\<Longrightarrow> min_int_poly x dvd b", "have \"min_int_poly x represents x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min_int_poly x represents x", "using assms"], ["proof (prove)\nusing this:\n  algebraic x\n\ngoal (1 subgoal):\n 1. min_int_poly x represents x", "by auto"], ["proof (state)\nthis:\n  min_int_poly x represents x\n\ngoal (2 subgoals):\n 1. normalize (min_int_poly x) = min_int_poly x\n 2. \\<And>b.\n       \\<lbrakk>b \\<noteq> 0; b represents x\\<rbrakk>\n       \\<Longrightarrow> min_int_poly x dvd b", "hence \"poly (gcd (of_int_poly (min_int_poly x)) (of_int_poly p)) x = 0\""], ["proof (prove)\nusing this:\n  min_int_poly x represents x\n\ngoal (1 subgoal):\n 1. poly (gcd (of_int_poly (min_int_poly x)) (of_int_poly p)) x = (0::'a)", "using p"], ["proof (prove)\nusing this:\n  min_int_poly x represents x\n  p \\<noteq> 0\n  p represents x\n\ngoal (1 subgoal):\n 1. poly (gcd (of_int_poly (min_int_poly x)) (of_int_poly p)) x = (0::'a)", "by (intro poly_gcd_eq_0I) auto"], ["proof (state)\nthis:\n  poly (gcd (of_int_poly (min_int_poly x)) (of_int_poly p)) x = (0::'a)\n\ngoal (2 subgoals):\n 1. normalize (min_int_poly x) = min_int_poly x\n 2. \\<And>b.\n       \\<lbrakk>b \\<noteq> 0; b represents x\\<rbrakk>\n       \\<Longrightarrow> min_int_poly x dvd b", "hence \"ipoly (gcd (min_int_poly x) p) x = 0\""], ["proof (prove)\nusing this:\n  poly (gcd (of_int_poly (min_int_poly x)) (of_int_poly p)) x = (0::'a)\n\ngoal (1 subgoal):\n 1. ipoly (gcd (min_int_poly x) p) x = (0::'a)", "by (subst (asm) gcd_of_int_poly) auto"], ["proof (state)\nthis:\n  ipoly (gcd (min_int_poly x) p) x = (0::'a)\n\ngoal (2 subgoals):\n 1. normalize (min_int_poly x) = min_int_poly x\n 2. \\<And>b.\n       \\<lbrakk>b \\<noteq> 0; b represents x\\<rbrakk>\n       \\<Longrightarrow> min_int_poly x dvd b", "hence \"gcd (min_int_poly x) p represents x\""], ["proof (prove)\nusing this:\n  ipoly (gcd (min_int_poly x) p) x = (0::'a)\n\ngoal (1 subgoal):\n 1. gcd (min_int_poly x) p represents x", "using p"], ["proof (prove)\nusing this:\n  ipoly (gcd (min_int_poly x) p) x = (0::'a)\n  p \\<noteq> 0\n  p represents x\n\ngoal (1 subgoal):\n 1. gcd (min_int_poly x) p represents x", "unfolding represents_def"], ["proof (prove)\nusing this:\n  ipoly (gcd (min_int_poly x) p) x = (0::'a)\n  p \\<noteq> 0\n  ipoly p x = (0::'a) \\<and> p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ipoly (gcd (min_int_poly x) p) x = (0::'a) \\<and>\n    gcd (min_int_poly x) p \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  gcd (min_int_poly x) p represents x\n\ngoal (2 subgoals):\n 1. normalize (min_int_poly x) = min_int_poly x\n 2. \\<And>b.\n       \\<lbrakk>b \\<noteq> 0; b represents x\\<rbrakk>\n       \\<Longrightarrow> min_int_poly x dvd b", "have \"min_int_poly x dvd gcd (min_int_poly x) p \\<or> is_unit (gcd (min_int_poly x) p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min_int_poly x dvd gcd (min_int_poly x) p \\<or>\n    is_unit (gcd (min_int_poly x) p)", "by (intro irreducibleD') auto"], ["proof (state)\nthis:\n  min_int_poly x dvd gcd (min_int_poly x) p \\<or>\n  is_unit (gcd (min_int_poly x) p)\n\ngoal (2 subgoals):\n 1. normalize (min_int_poly x) = min_int_poly x\n 2. \\<And>b.\n       \\<lbrakk>b \\<noteq> 0; b represents x\\<rbrakk>\n       \\<Longrightarrow> min_int_poly x dvd b", "moreover"], ["proof (state)\nthis:\n  min_int_poly x dvd gcd (min_int_poly x) p \\<or>\n  is_unit (gcd (min_int_poly x) p)\n\ngoal (2 subgoals):\n 1. normalize (min_int_poly x) = min_int_poly x\n 2. \\<And>b.\n       \\<lbrakk>b \\<noteq> 0; b represents x\\<rbrakk>\n       \\<Longrightarrow> min_int_poly x dvd b", "from \\<open>gcd (min_int_poly x) p represents x\\<close>"], ["proof (chain)\npicking this:\n  gcd (min_int_poly x) p represents x", "have \"\\<not>is_unit (gcd (min_int_poly x) p)\""], ["proof (prove)\nusing this:\n  gcd (min_int_poly x) p represents x\n\ngoal (1 subgoal):\n 1. \\<not> is_unit (gcd (min_int_poly x) p)", "by (auto simp: represents_def)"], ["proof (state)\nthis:\n  \\<not> is_unit (gcd (min_int_poly x) p)\n\ngoal (2 subgoals):\n 1. normalize (min_int_poly x) = min_int_poly x\n 2. \\<And>b.\n       \\<lbrakk>b \\<noteq> 0; b represents x\\<rbrakk>\n       \\<Longrightarrow> min_int_poly x dvd b", "ultimately"], ["proof (chain)\npicking this:\n  min_int_poly x dvd gcd (min_int_poly x) p \\<or>\n  is_unit (gcd (min_int_poly x) p)\n  \\<not> is_unit (gcd (min_int_poly x) p)", "have \"min_int_poly x dvd gcd (min_int_poly x) p\""], ["proof (prove)\nusing this:\n  min_int_poly x dvd gcd (min_int_poly x) p \\<or>\n  is_unit (gcd (min_int_poly x) p)\n  \\<not> is_unit (gcd (min_int_poly x) p)\n\ngoal (1 subgoal):\n 1. min_int_poly x dvd gcd (min_int_poly x) p", "by blast"], ["proof (state)\nthis:\n  min_int_poly x dvd gcd (min_int_poly x) p\n\ngoal (2 subgoals):\n 1. normalize (min_int_poly x) = min_int_poly x\n 2. \\<And>b.\n       \\<lbrakk>b \\<noteq> 0; b represents x\\<rbrakk>\n       \\<Longrightarrow> min_int_poly x dvd b", "also"], ["proof (state)\nthis:\n  min_int_poly x dvd gcd (min_int_poly x) p\n\ngoal (2 subgoals):\n 1. normalize (min_int_poly x) = min_int_poly x\n 2. \\<And>b.\n       \\<lbrakk>b \\<noteq> 0; b represents x\\<rbrakk>\n       \\<Longrightarrow> min_int_poly x dvd b", "have \"\\<dots> dvd p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd (min_int_poly x) p dvd p", "by blast"], ["proof (state)\nthis:\n  gcd (min_int_poly x) p dvd p\n\ngoal (2 subgoals):\n 1. normalize (min_int_poly x) = min_int_poly x\n 2. \\<And>b.\n       \\<lbrakk>b \\<noteq> 0; b represents x\\<rbrakk>\n       \\<Longrightarrow> min_int_poly x dvd b", "finally"], ["proof (chain)\npicking this:\n  min_int_poly x dvd p", "show \"min_int_poly x dvd p\""], ["proof (prove)\nusing this:\n  min_int_poly x dvd p\n\ngoal (1 subgoal):\n 1. min_int_poly x dvd p", "."], ["proof (state)\nthis:\n  min_int_poly x dvd p\n\ngoal (1 subgoal):\n 1. normalize (min_int_poly x) = min_int_poly x", "qed auto"], ["", "lemma min_int_poly_eqI:\n  fixes x :: \"'a :: {field_char_0, field_gcd}\"\n  assumes \"p represents x\" \"irreducible p\" \"Polynomial.lead_coeff p \\<ge> 0\"\n  shows   \"min_int_poly x = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min_int_poly x = p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. min_int_poly x = p", "from assms"], ["proof (chain)\npicking this:\n  p represents x\n  irreducible p\n  0 \\<le> Polynomial.lead_coeff p", "have [simp]: \"p \\<noteq> 0\""], ["proof (prove)\nusing this:\n  p represents x\n  irreducible p\n  0 \\<le> Polynomial.lead_coeff p\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. min_int_poly x = p", "have \"Polynomial.lead_coeff p \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial.lead_coeff p \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  Polynomial.lead_coeff p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. min_int_poly x = p", "with assms(3)"], ["proof (chain)\npicking this:\n  0 \\<le> Polynomial.lead_coeff p\n  Polynomial.lead_coeff p \\<noteq> 0", "have \"Polynomial.lead_coeff p > 0\""], ["proof (prove)\nusing this:\n  0 \\<le> Polynomial.lead_coeff p\n  Polynomial.lead_coeff p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < Polynomial.lead_coeff p", "by linarith"], ["proof (state)\nthis:\n  0 < Polynomial.lead_coeff p\n\ngoal (1 subgoal):\n 1. min_int_poly x = p", "moreover"], ["proof (state)\nthis:\n  0 < Polynomial.lead_coeff p\n\ngoal (1 subgoal):\n 1. min_int_poly x = p", "have \"algebraic x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. algebraic x", "using \\<open>p represents x\\<close>"], ["proof (prove)\nusing this:\n  p represents x\n\ngoal (1 subgoal):\n 1. algebraic x", "by (meson algebraic_iff_represents)"], ["proof (state)\nthis:\n  algebraic x\n\ngoal (1 subgoal):\n 1. min_int_poly x = p", "ultimately"], ["proof (chain)\npicking this:\n  0 < Polynomial.lead_coeff p\n  algebraic x", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < Polynomial.lead_coeff p\n  algebraic x\n\ngoal (1 subgoal):\n 1. min_int_poly x = p", "unfolding min_int_poly_def"], ["proof (prove)\nusing this:\n  0 < Polynomial.lead_coeff p\n  algebraic x\n\ngoal (1 subgoal):\n 1. (if algebraic x\n     then THE p.\n             p represents x \\<and>\n             irreducible p \\<and> 0 < Polynomial.lead_coeff p\n     else [:0, 1:]) =\n    p", "using the1_equality[OF algebraic_imp_represents_unique[OF \\<open>algebraic x\\<close>], of p] assms"], ["proof (prove)\nusing this:\n  0 < Polynomial.lead_coeff p\n  algebraic x\n  p represents x \\<and>\n  irreducible p \\<and> 0 < Polynomial.lead_coeff p \\<Longrightarrow>\n  (THE xa.\n      xa represents x \\<and>\n      irreducible xa \\<and> 0 < Polynomial.lead_coeff xa) =\n  p\n  p represents x\n  irreducible p\n  0 \\<le> Polynomial.lead_coeff p\n\ngoal (1 subgoal):\n 1. (if algebraic x\n     then THE p.\n             p represents x \\<and>\n             irreducible p \\<and> 0 < Polynomial.lead_coeff p\n     else [:0, 1:]) =\n    p", "by auto"], ["proof (state)\nthis:\n  min_int_poly x = p\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}