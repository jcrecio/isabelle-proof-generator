{"file_name": "/home/qj213/afp-2021-10-22/thys/Hermite_Lindemann/Complex_Lexorder.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Hermite_Lindemann", "problem_names": ["lemmas [trans] =\n  complex_lex.order.trans complex_lex.less_le_trans\n  complex_lex.less_trans complex_lex.le_less_trans", "lemma (in ordered_comm_monoid_add) sum_mono_complex_lex:\n  \"(\\<And>i. i\\<in>K \\<Longrightarrow> f i \\<le>\\<^sub>\\<complex> g i) \\<Longrightarrow> (\\<Sum>i\\<in>K. f i) \\<le>\\<^sub>\\<complex> (\\<Sum>i\\<in>K. g i)\"", "lemma sum_strict_mono_ex1_complex_lex:\n  fixes f g :: \"'i \\<Rightarrow> complex\"\n  assumes \"finite A\"\n    and \"\\<forall>x\\<in>A. f x \\<le>\\<^sub>\\<complex> g x\"\n    and \"\\<exists>a\\<in>A. f a <\\<^sub>\\<complex> g a\"\n  shows \"sum f A <\\<^sub>\\<complex> sum g A\"", "lemma sum_list_mono_complex_lex:\n  assumes \"list_all2 (\\<le>\\<^sub>\\<complex>) xs ys\"\n  shows   \"sum_list xs \\<le>\\<^sub>\\<complex> sum_list ys\"", "lemma sum_mset_mono_complex_lex:\n  assumes \"rel_mset (\\<le>\\<^sub>\\<complex>) A B\"\n  shows   \"sum_mset A \\<le>\\<^sub>\\<complex> sum_mset B\"", "lemma rel_msetI:\n  assumes \"list_all2 R xs ys\" \"mset xs = A\" \"mset ys = B\"\n  shows   \"rel_mset R A B\"", "lemma mset_replicate [simp]: \"mset (replicate n x) = replicate_mset n x\"", "lemma rel_mset_replicate_mset_right:\n  assumes \"\\<And>x. x \\<in># A \\<Longrightarrow> R x y\" \"size A = n\"\n  shows   \"rel_mset R A (replicate_mset n y)\""], "translations": [["", "lemmas [trans] =\n  complex_lex.order.trans complex_lex.less_le_trans\n  complex_lex.less_trans complex_lex.le_less_trans"], ["", "lemma (in ordered_comm_monoid_add) sum_mono_complex_lex:\n  \"(\\<And>i. i\\<in>K \\<Longrightarrow> f i \\<le>\\<^sub>\\<complex> g i) \\<Longrightarrow> (\\<Sum>i\\<in>K. f i) \\<le>\\<^sub>\\<complex> (\\<Sum>i\\<in>K. g i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i \\<in> K \\<Longrightarrow>\n        f i \\<le>\\<^sub>\\<complex> g i) \\<Longrightarrow>\n    sum f K \\<le>\\<^sub>\\<complex> sum g K", "by (induct K rule: infinite_finite_induct) (use complex_lex.add_mono in auto)"], ["", "lemma sum_strict_mono_ex1_complex_lex:\n  fixes f g :: \"'i \\<Rightarrow> complex\"\n  assumes \"finite A\"\n    and \"\\<forall>x\\<in>A. f x \\<le>\\<^sub>\\<complex> g x\"\n    and \"\\<exists>a\\<in>A. f a <\\<^sub>\\<complex> g a\"\n  shows \"sum f A <\\<^sub>\\<complex> sum g A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f A <\\<^sub>\\<complex> sum g A", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum f A <\\<^sub>\\<complex> sum g A", "from assms(3)"], ["proof (chain)\npicking this:\n  \\<exists>a\\<in>A. f a <\\<^sub>\\<complex> g a", "obtain a where a: \"a \\<in> A\" \"f a <\\<^sub>\\<complex> g a\""], ["proof (prove)\nusing this:\n  \\<exists>a\\<in>A. f a <\\<^sub>\\<complex> g a\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> A; f a <\\<^sub>\\<complex> g a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a \\<in> A\n  f a <\\<^sub>\\<complex> g a\n\ngoal (1 subgoal):\n 1. sum f A <\\<^sub>\\<complex> sum g A", "have \"sum f A = sum f ((A - {a}) \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f A = sum f (A - {a} \\<union> {a})", "by (simp add: insert_absorb[OF \\<open>a \\<in> A\\<close>])"], ["proof (state)\nthis:\n  sum f A = sum f (A - {a} \\<union> {a})\n\ngoal (1 subgoal):\n 1. sum f A <\\<^sub>\\<complex> sum g A", "also"], ["proof (state)\nthis:\n  sum f A = sum f (A - {a} \\<union> {a})\n\ngoal (1 subgoal):\n 1. sum f A <\\<^sub>\\<complex> sum g A", "have \"\\<dots> = sum f (A - {a}) + sum f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f (A - {a} \\<union> {a}) = sum f (A - {a}) + sum f {a}", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. sum f (A - {a} \\<union> {a}) = sum f (A - {a}) + sum f {a}", "by (subst sum.union_disjoint) auto"], ["proof (state)\nthis:\n  sum f (A - {a} \\<union> {a}) = sum f (A - {a}) + sum f {a}\n\ngoal (1 subgoal):\n 1. sum f A <\\<^sub>\\<complex> sum g A", "also"], ["proof (state)\nthis:\n  sum f (A - {a} \\<union> {a}) = sum f (A - {a}) + sum f {a}\n\ngoal (1 subgoal):\n 1. sum f A <\\<^sub>\\<complex> sum g A", "have \"\\<dots> \\<le>\\<^sub>\\<complex> sum g (A - {a}) + sum f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f (A - {a}) + sum f {a} \\<le>\\<^sub>\\<complex>\n    sum g (A - {a}) + sum f {a}", "by (intro complex_lex.add_mono sum_mono_complex_lex) (simp_all add: assms)"], ["proof (state)\nthis:\n  sum f (A - {a}) + sum f {a} \\<le>\\<^sub>\\<complex>\n  sum g (A - {a}) + sum f {a}\n\ngoal (1 subgoal):\n 1. sum f A <\\<^sub>\\<complex> sum g A", "also"], ["proof (state)\nthis:\n  sum f (A - {a}) + sum f {a} \\<le>\\<^sub>\\<complex>\n  sum g (A - {a}) + sum f {a}\n\ngoal (1 subgoal):\n 1. sum f A <\\<^sub>\\<complex> sum g A", "have \"\\<dots> <\\<^sub>\\<complex> sum g (A - {a}) + sum g {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum g (A - {a}) + sum f {a} <\\<^sub>\\<complex>\n    sum g (A - {a}) + sum g {a}", "using a"], ["proof (prove)\nusing this:\n  a \\<in> A\n  f a <\\<^sub>\\<complex> g a\n\ngoal (1 subgoal):\n 1. sum g (A - {a}) + sum f {a} <\\<^sub>\\<complex>\n    sum g (A - {a}) + sum g {a}", "by (intro complex_lex.add_strict_left_mono) auto"], ["proof (state)\nthis:\n  sum g (A - {a}) + sum f {a} <\\<^sub>\\<complex> sum g (A - {a}) + sum g {a}\n\ngoal (1 subgoal):\n 1. sum f A <\\<^sub>\\<complex> sum g A", "also"], ["proof (state)\nthis:\n  sum g (A - {a}) + sum f {a} <\\<^sub>\\<complex> sum g (A - {a}) + sum g {a}\n\ngoal (1 subgoal):\n 1. sum f A <\\<^sub>\\<complex> sum g A", "have \"\\<dots> = sum g ((A - {a}) \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum g (A - {a}) + sum g {a} = sum g (A - {a} \\<union> {a})", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. sum g (A - {a}) + sum g {a} = sum g (A - {a} \\<union> {a})", "by (subst sum.union_disjoint[symmetric]) auto"], ["proof (state)\nthis:\n  sum g (A - {a}) + sum g {a} = sum g (A - {a} \\<union> {a})\n\ngoal (1 subgoal):\n 1. sum f A <\\<^sub>\\<complex> sum g A", "also"], ["proof (state)\nthis:\n  sum g (A - {a}) + sum g {a} = sum g (A - {a} \\<union> {a})\n\ngoal (1 subgoal):\n 1. sum f A <\\<^sub>\\<complex> sum g A", "have \"\\<dots> = sum g A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum g (A - {a} \\<union> {a}) = sum g A", "by (simp add: insert_absorb[OF \\<open>a \\<in> A\\<close>])"], ["proof (state)\nthis:\n  sum g (A - {a} \\<union> {a}) = sum g A\n\ngoal (1 subgoal):\n 1. sum f A <\\<^sub>\\<complex> sum g A", "finally"], ["proof (chain)\npicking this:\n  sum f A <\\<^sub>\\<complex> sum g A", "show ?thesis"], ["proof (prove)\nusing this:\n  sum f A <\\<^sub>\\<complex> sum g A\n\ngoal (1 subgoal):\n 1. sum f A <\\<^sub>\\<complex> sum g A", "by simp"], ["proof (state)\nthis:\n  sum f A <\\<^sub>\\<complex> sum g A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_list_mono_complex_lex:\n  assumes \"list_all2 (\\<le>\\<^sub>\\<complex>) xs ys\"\n  shows   \"sum_list xs \\<le>\\<^sub>\\<complex> sum_list ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list xs \\<le>\\<^sub>\\<complex> sum_list ys", "using assms"], ["proof (prove)\nusing this:\n  list_all2 (\\<le>\\<^sub>\\<complex>) xs ys\n\ngoal (1 subgoal):\n 1. sum_list xs \\<le>\\<^sub>\\<complex> sum_list ys", "by induction (auto intro: complex_lex.add_mono)"], ["", "lemma sum_mset_mono_complex_lex:\n  assumes \"rel_mset (\\<le>\\<^sub>\\<complex>) A B\"\n  shows   \"sum_mset A \\<le>\\<^sub>\\<complex> sum_mset B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># A \\<le>\\<^sub>\\<complex> \\<Sum>\\<^sub># B", "using assms"], ["proof (prove)\nusing this:\n  rel_mset (\\<le>\\<^sub>\\<complex>) A B\n\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># A \\<le>\\<^sub>\\<complex> \\<Sum>\\<^sub># B", "by (auto simp: rel_mset_def sum_mset_sum_list intro: sum_list_mono_complex_lex)"], ["", "lemma rel_msetI:\n  assumes \"list_all2 R xs ys\" \"mset xs = A\" \"mset ys = B\"\n  shows   \"rel_mset R A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_mset R A B", "using assms"], ["proof (prove)\nusing this:\n  list_all2 R xs ys\n  mset xs = A\n  mset ys = B\n\ngoal (1 subgoal):\n 1. rel_mset R A B", "by (auto simp: rel_mset_def)"], ["", "lemma mset_replicate [simp]: \"mset (replicate n x) = replicate_mset n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mset (replicate n x) = replicate_mset n x", "by (induction n) auto"], ["", "lemma rel_mset_replicate_mset_right:\n  assumes \"\\<And>x. x \\<in># A \\<Longrightarrow> R x y\" \"size A = n\"\n  shows   \"rel_mset R A (replicate_mset n y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_mset R A (replicate_mset n y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rel_mset R A (replicate_mset n y)", "obtain xs where [simp]: \"A = mset xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xs. A = mset xs \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis ex_mset)"], ["proof (state)\nthis:\n  A = mset xs\n\ngoal (1 subgoal):\n 1. rel_mset R A (replicate_mset n y)", "from assms"], ["proof (chain)\npicking this:\n  ?x \\<in># A \\<Longrightarrow> R ?x y\n  size A = n", "have \"\\<forall>x\\<in>set xs. R x y\""], ["proof (prove)\nusing this:\n  ?x \\<in># A \\<Longrightarrow> R ?x y\n  size A = n\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set xs. R x y", "by auto"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set xs. R x y\n\ngoal (1 subgoal):\n 1. rel_mset R A (replicate_mset n y)", "hence \"list_all2 R xs (replicate (length xs) y)\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set xs. R x y\n\ngoal (1 subgoal):\n 1. list_all2 R xs (replicate (length xs) y)", "by (induction xs) auto"], ["proof (state)\nthis:\n  list_all2 R xs (replicate (length xs) y)\n\ngoal (1 subgoal):\n 1. rel_mset R A (replicate_mset n y)", "with assms(2)"], ["proof (chain)\npicking this:\n  size A = n\n  list_all2 R xs (replicate (length xs) y)", "show ?thesis"], ["proof (prove)\nusing this:\n  size A = n\n  list_all2 R xs (replicate (length xs) y)\n\ngoal (1 subgoal):\n 1. rel_mset R A (replicate_mset n y)", "by (intro rel_msetI[of R xs \"replicate n y\"]) auto"], ["proof (state)\nthis:\n  rel_mset R A (replicate_mset n y)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}