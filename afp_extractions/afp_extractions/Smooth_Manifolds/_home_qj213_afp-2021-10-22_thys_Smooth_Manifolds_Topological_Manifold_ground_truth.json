{"file_name": "/home/qj213/afp-2021-10-22/thys/Smooth_Manifolds/Topological_Manifold.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Smooth_Manifolds", "problem_names": ["lemma open_carrier[intro, simp]: \"open carrier\"", "lemma carrierE:\n  assumes \"x \\<in> carrier\"\n  obtains c where \"c \\<in> charts\" \"x \\<in> domain c\"", "lemma domain_subset_carrier[simp]: \"domain c \\<subseteq> carrier\" if \"c \\<in> charts\"", "lemma in_domain_in_carrier[intro, simp]: \"c \\<in> charts \\<Longrightarrow> x \\<in> domain c \\<Longrightarrow> x \\<in> carrier\"", "lemma precompact_neighborhoodE:\n  assumes \"x \\<in> carrier\"\n  obtains C where \"x \\<in> C\" \"open C\" \"compact (closure C)\" \"closure C \\<subseteq> carrier\"", "lemma precompact_open_coverE:\n  obtains U::\"nat\\<Rightarrow>'a set\"\n  where \"(\\<Union>i. U i) = carrier\" \"\\<And>i. open (U i)\" \"\\<And>i. compact (closure (U i))\"\n    \"\\<And>i. closure (U i) \\<subseteq> carrier\"", "lemma precompact_locally_finite_open_coverE:\n  obtains W::\"nat\\<Rightarrow>'a set\"\n  where \"carrier = (\\<Union>i. W i)\" \"\\<And>i. open (W i)\" \"\\<And>i. compact (closure (W i))\"\n    \"\\<And>i. closure (W i) \\<subseteq> carrier\"\n    \"locally_finite_on carrier UNIV W\""], "translations": [["", "lemma open_carrier[intro, simp]: \"open carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open carrier", "by (auto simp: carrier_def)"], ["", "lemma carrierE:\n  assumes \"x \\<in> carrier\"\n  obtains c where \"c \\<in> charts\" \"x \\<in> domain c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> charts; x \\<in> domain c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> charts; x \\<in> domain c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: carrier_def)"], ["", "lemma domain_subset_carrier[simp]: \"domain c \\<subseteq> carrier\" if \"c \\<in> charts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. domain c \\<subseteq> carrier", "using that"], ["proof (prove)\nusing this:\n  c \\<in> charts\n\ngoal (1 subgoal):\n 1. domain c \\<subseteq> carrier", "by (auto simp: carrier_def)"], ["", "lemma in_domain_in_carrier[intro, simp]: \"c \\<in> charts \\<Longrightarrow> x \\<in> domain c \\<Longrightarrow> x \\<in> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<in> charts; x \\<in> domain c\\<rbrakk>\n    \\<Longrightarrow> x \\<in> carrier", "by (auto simp: carrier_def)"], ["", "subsection \\<open>Existence of locally finite cover\\<close>"], ["", "text \\<open>Every point has a precompact neighborhood.\\<close>"], ["", "lemma precompact_neighborhoodE:\n  assumes \"x \\<in> carrier\"\n  obtains C where \"x \\<in> C\" \"open C\" \"compact (closure C)\" \"closure C \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>x \\<in> C; open C; compact (closure C);\n         closure C \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>x \\<in> C; open C; compact (closure C);\n         closure C \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from carrierE[OF assms]"], ["proof (chain)\npicking this:\n  (\\<And>c.\n      \\<lbrakk>c \\<in> charts; x \\<in> domain c\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain c where c: \"c \\<in> charts\" \"x \\<in> domain c\""], ["proof (prove)\nusing this:\n  (\\<And>c.\n      \\<lbrakk>c \\<in> charts; x \\<in> domain c\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> charts; x \\<in> domain c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c \\<in> charts\n  x \\<in> domain c\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>x \\<in> C; open C; compact (closure C);\n         closure C \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  c \\<in> charts\n  x \\<in> domain c", "have \"c x \\<in> codomain c\""], ["proof (prove)\nusing this:\n  c \\<in> charts\n  x \\<in> domain c\n\ngoal (1 subgoal):\n 1. apply_chart c x \\<in> codomain c", "by auto"], ["proof (state)\nthis:\n  apply_chart c x \\<in> codomain c\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>x \\<in> C; open C; compact (closure C);\n         closure C \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with open_contains_cball[of \"codomain c\"]"], ["proof (chain)\npicking this:\n  open (codomain c) =\n  (\\<forall>x\\<in>codomain c.\n      \\<exists>e>0. cball x e \\<subseteq> codomain c)\n  apply_chart c x \\<in> codomain c", "obtain e where e: \"0 < e\" \"cball (apply_chart c x) e \\<subseteq> codomain c\""], ["proof (prove)\nusing this:\n  open (codomain c) =\n  (\\<forall>x\\<in>codomain c.\n      \\<exists>e>0. cball x e \\<subseteq> codomain c)\n  apply_chart c x \\<in> codomain c\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         cball (apply_chart c x) e \\<subseteq> codomain c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < e\n  cball (apply_chart c x) e \\<subseteq> codomain c\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>x \\<in> C; open C; compact (closure C);\n         closure C \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  0 < e\n  cball (apply_chart c x) e \\<subseteq> codomain c", "have e': \"ball (apply_chart c x) e \\<subseteq> codomain c\""], ["proof (prove)\nusing this:\n  0 < e\n  cball (apply_chart c x) e \\<subseteq> codomain c\n\ngoal (1 subgoal):\n 1. ball (apply_chart c x) e \\<subseteq> codomain c", "by (auto simp: mem_ball)"], ["proof (state)\nthis:\n  ball (apply_chart c x) e \\<subseteq> codomain c\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>x \\<in> C; open C; compact (closure C);\n         closure C \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define C where \"C = inv_chart c ` ball (c x) e\""], ["proof (state)\nthis:\n  C = inv_chart c ` ball (apply_chart c x) e\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>x \\<in> C; open C; compact (closure C);\n         closure C \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"x \\<in> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> C", "using c \\<open>e > 0\\<close>"], ["proof (prove)\nusing this:\n  c \\<in> charts\n  x \\<in> domain c\n  0 < e\n\ngoal (1 subgoal):\n 1. x \\<in> C", "unfolding C_def"], ["proof (prove)\nusing this:\n  c \\<in> charts\n  x \\<in> domain c\n  0 < e\n\ngoal (1 subgoal):\n 1. x \\<in> inv_chart c ` ball (apply_chart c x) e", "by (auto intro!: image_eqI[where x=\"apply_chart c x\"])"], ["proof (state)\nthis:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>x \\<in> C; open C; compact (closure C);\n         closure C \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>x \\<in> C; open C; compact (closure C);\n         closure C \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"open C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open C", "using e'"], ["proof (prove)\nusing this:\n  ball (apply_chart c x) e \\<subseteq> codomain c\n\ngoal (1 subgoal):\n 1. open C", "by (auto simp: C_def)"], ["proof (state)\nthis:\n  open C\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>x \\<in> C; open C; compact (closure C);\n         closure C \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  open C\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>x \\<in> C; open C; compact (closure C);\n         closure C \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have compact: \"compact (inv_chart c ` cball (apply_chart c x) e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact (inv_chart c ` cball (apply_chart c x) e)", "using e"], ["proof (prove)\nusing this:\n  0 < e\n  cball (apply_chart c x) e \\<subseteq> codomain c\n\ngoal (1 subgoal):\n 1. compact (inv_chart c ` cball (apply_chart c x) e)", "by (intro compact_continuous_image continuous_on_chart) auto"], ["proof (state)\nthis:\n  compact (inv_chart c ` cball (apply_chart c x) e)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>x \\<in> C; open C; compact (closure C);\n         closure C \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have closure_subset: \"closure C \\<subseteq> inv_chart c ` cball (apply_chart c x) e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closure C \\<subseteq> inv_chart c ` cball (apply_chart c x) e", "apply (rule closure_minimal)"], ["proof (prove)\ngoal (2 subgoals):\n 1. C \\<subseteq> inv_chart c ` cball (apply_chart c x) e\n 2. closed (inv_chart c ` cball (apply_chart c x) e)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<subseteq> inv_chart c ` cball (apply_chart c x) e", "by (auto simp: C_def mem_ball)"], ["proof (prove)\ngoal (1 subgoal):\n 1. closed (inv_chart c ` cball (apply_chart c x) e)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. closed (inv_chart c ` cball (apply_chart c x) e)", "by (rule compact_imp_closed) (rule compact)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  closure C \\<subseteq> inv_chart c ` cball (apply_chart c x) e\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>x \\<in> C; open C; compact (closure C);\n         closure C \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"compact (closure C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact (closure C)", "apply (rule compact_if_closed_subset_of_compact[where T=\"inv_chart c ` cball (c x) e\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. closed (closure C)\n 2. compact (inv_chart c ` cball (apply_chart c x) e)\n 3. closure C \\<subseteq> inv_chart c ` cball (apply_chart c x) e", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. closed (closure C)", "by simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. compact (inv_chart c ` cball (apply_chart c x) e)\n 2. closure C \\<subseteq> inv_chart c ` cball (apply_chart c x) e", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. compact (inv_chart c ` cball (apply_chart c x) e)", "by (rule compact)"], ["proof (prove)\ngoal (1 subgoal):\n 1. closure C \\<subseteq> inv_chart c ` cball (apply_chart c x) e", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. closure C \\<subseteq> inv_chart c ` cball (apply_chart c x) e", "by (rule closure_subset)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  compact (closure C)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>x \\<in> C; open C; compact (closure C);\n         closure C \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  compact (closure C)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>x \\<in> C; open C; compact (closure C);\n         closure C \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"closure C \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closure C \\<subseteq> carrier", "using closure_subset c e"], ["proof (prove)\nusing this:\n  closure C \\<subseteq> inv_chart c ` cball (apply_chart c x) e\n  c \\<in> charts\n  x \\<in> domain c\n  0 < e\n  cball (apply_chart c x) e \\<subseteq> codomain c\n\ngoal (1 subgoal):\n 1. closure C \\<subseteq> carrier", "by force"], ["proof (state)\nthis:\n  closure C \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>x \\<in> C; open C; compact (closure C);\n         closure C \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> C\n  open C\n  compact (closure C)\n  closure C \\<subseteq> carrier", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> C\n  open C\n  compact (closure C)\n  closure C \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>There exists a covering of the carrier by precompact sets.\\<close>"], ["", "lemma precompact_open_coverE:\n  obtains U::\"nat\\<Rightarrow>'a set\"\n  where \"(\\<Union>i. U i) = carrier\" \"\\<And>i. open (U i)\" \"\\<And>i. compact (closure (U i))\"\n    \"\\<And>i. closure (U i) \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n         \\<And>i. compact (closure (U i));\n         \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     ?P2\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume \"carrier = {}\""], ["proof (state)\nthis:\n  carrier = {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     ?P2\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  carrier = {}", "have \"(\\<Union>i. {}) = carrier\" \"open {}\" \"compact (closure {})\" \"closure {} \\<subseteq> carrier\""], ["proof (prove)\nusing this:\n  carrier = {}\n\ngoal (1 subgoal):\n 1. ((\\<Union>i. {}) = carrier &&& open {}) &&&\n    compact (closure {}) &&& closure {} \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  (\\<Union>i. {}) = carrier\n  open {}\n  compact (closure {})\n  closure {} \\<subseteq> carrier\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     ?P2\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  (\\<Union>i. {}) = carrier\n  open {}\n  compact (closure {})\n  closure {} \\<subseteq> carrier", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Union>i. {}) = carrier\n  open {}\n  compact (closure {})\n  closure {} \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     carrier \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     carrier \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume \"carrier \\<noteq> {}\""], ["proof (state)\nthis:\n  carrier \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     carrier \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"\\<exists>b. x \\<in> b \\<and> open b \\<and> compact (closure b) \\<and> closure b \\<subseteq> carrier\" if \"x \\<in> carrier\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b.\n       x \\<in> b \\<and>\n       open b \\<and>\n       compact (closure b) \\<and> closure b \\<subseteq> carrier", "using that"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n\ngoal (1 subgoal):\n 1. \\<exists>b.\n       x \\<in> b \\<and>\n       open b \\<and>\n       compact (closure b) \\<and> closure b \\<subseteq> carrier", "by (rule precompact_neighborhoodE) auto"], ["proof (state)\nthis:\n  ?x \\<in> carrier \\<Longrightarrow>\n  \\<exists>b.\n     ?x \\<in> b \\<and>\n     open b \\<and> compact (closure b) \\<and> closure b \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     carrier \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  ?x \\<in> carrier \\<Longrightarrow>\n  \\<exists>b.\n     ?x \\<in> b \\<and>\n     open b \\<and> compact (closure b) \\<and> closure b \\<subseteq> carrier", "obtain balls where balls:\n    \"\\<And>x. x \\<in> carrier \\<Longrightarrow> x \\<in> balls x\"\n    \"\\<And>x. x \\<in> carrier \\<Longrightarrow> open (balls x)\"\n    \"\\<And>x. x \\<in> carrier \\<Longrightarrow> compact (closure (balls x))\"\n    \"\\<And>x. x \\<in> carrier \\<Longrightarrow> closure (balls x) \\<subseteq> carrier\""], ["proof (prove)\nusing this:\n  ?x \\<in> carrier \\<Longrightarrow>\n  \\<exists>b.\n     ?x \\<in> b \\<and>\n     open b \\<and> compact (closure b) \\<and> closure b \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. (\\<And>balls.\n        \\<lbrakk>\\<And>x. x \\<in> carrier \\<Longrightarrow> x \\<in> balls x;\n         \\<And>x. x \\<in> carrier \\<Longrightarrow> open (balls x);\n         \\<And>x.\n            x \\<in> carrier \\<Longrightarrow> compact (closure (balls x));\n         \\<And>x.\n            x \\<in> carrier \\<Longrightarrow>\n            closure (balls x) \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  ?x \\<in> carrier \\<Longrightarrow> ?x \\<in> balls ?x\n  ?x \\<in> carrier \\<Longrightarrow> open (balls ?x)\n  ?x \\<in> carrier \\<Longrightarrow> compact (closure (balls ?x))\n  ?x \\<in> carrier \\<Longrightarrow> closure (balls ?x) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     carrier \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "let ?balls = \"balls ` carrier\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     carrier \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "have *: \"\\<And>x::'a set. x \\<in> ?balls \\<Longrightarrow> open x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> balls ` carrier \\<Longrightarrow> open x", "by (auto simp: balls)"], ["proof (state)\nthis:\n  ?x \\<in> balls ` carrier \\<Longrightarrow> open ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     carrier \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "from Lindelof[of \"?balls\", OF this]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>S.\n              S \\<in> balls ` carrier \\<Longrightarrow>\n              S \\<in> balls ` carrier;\n   \\<And>\\<F>'.\n      \\<lbrakk>\\<F>' \\<subseteq> balls ` carrier; countable \\<F>';\n       \\<Union> \\<F>' = \\<Union> (balls ` carrier)\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "obtain \\<F>' where \\<F>': \"\\<F>' \\<subseteq> ?balls\" \"countable \\<F>'\" \"\\<Union>\\<F>' = \\<Union>?balls\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>S.\n              S \\<in> balls ` carrier \\<Longrightarrow>\n              S \\<in> balls ` carrier;\n   \\<And>\\<F>'.\n      \\<lbrakk>\\<F>' \\<subseteq> balls ` carrier; countable \\<F>';\n       \\<Union> \\<F>' = \\<Union> (balls ` carrier)\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>\\<F>'.\n        \\<lbrakk>\\<F>' \\<subseteq> balls ` carrier; countable \\<F>';\n         \\<Union> \\<F>' = \\<Union> (balls ` carrier)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<F>' \\<subseteq> balls ` carrier\n  countable \\<F>'\n  \\<Union> \\<F>' = \\<Union> (balls ` carrier)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     carrier \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"\\<F>' \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<F>' \\<noteq> {}", "using \\<F>' balls \\<open>carrier \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  \\<F>' \\<subseteq> balls ` carrier\n  countable \\<F>'\n  \\<Union> \\<F>' = \\<Union> (balls ` carrier)\n  ?x \\<in> carrier \\<Longrightarrow> ?x \\<in> balls ?x\n  ?x \\<in> carrier \\<Longrightarrow> open (balls ?x)\n  ?x \\<in> carrier \\<Longrightarrow> compact (closure (balls ?x))\n  ?x \\<in> carrier \\<Longrightarrow> closure (balls ?x) \\<subseteq> carrier\n  carrier \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<F>' \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  \\<F>' \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     carrier \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "define U where \"U = from_nat_into \\<F>'\""], ["proof (state)\nthis:\n  U = from_nat_into \\<F>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     carrier \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "have into_range_balls: \"U i \\<in> ?balls\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. U i \\<in> balls ` carrier", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. U i \\<in> balls ` carrier", "have \"from_nat_into \\<F>' i \\<in> \\<F>'\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. from_nat_into \\<F>' i \\<in> \\<F>'", "by (rule from_nat_into) fact"], ["proof (state)\nthis:\n  from_nat_into \\<F>' ?i \\<in> \\<F>'\n\ngoal (1 subgoal):\n 1. U i \\<in> balls ` carrier", "also"], ["proof (state)\nthis:\n  from_nat_into \\<F>' ?i \\<in> \\<F>'\n\ngoal (1 subgoal):\n 1. U i \\<in> balls ` carrier", "have \"\\<F>' \\<subseteq> ?balls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<F>' \\<subseteq> balls ` carrier", "by fact"], ["proof (state)\nthis:\n  \\<F>' \\<subseteq> balls ` carrier\n\ngoal (1 subgoal):\n 1. U i \\<in> balls ` carrier", "finally"], ["proof (chain)\npicking this:\n  from_nat_into \\<F>' ?i1 \\<in> balls ` carrier", "show ?thesis"], ["proof (prove)\nusing this:\n  from_nat_into \\<F>' ?i1 \\<in> balls ` carrier\n\ngoal (1 subgoal):\n 1. U i \\<in> balls ` carrier", "by (simp add: U_def)"], ["proof (state)\nthis:\n  U i \\<in> balls ` carrier\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  U ?i \\<in> balls ` carrier\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     carrier \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "have U: \"open (U i)\" \"compact (closure (U i))\" \"closure (U i) \\<subseteq> carrier\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. open (U i) &&&\n    compact (closure (U i)) &&& closure (U i) \\<subseteq> carrier", "using balls into_range_balls[of i]"], ["proof (prove)\nusing this:\n  ?x \\<in> carrier \\<Longrightarrow> ?x \\<in> balls ?x\n  ?x \\<in> carrier \\<Longrightarrow> open (balls ?x)\n  ?x \\<in> carrier \\<Longrightarrow> compact (closure (balls ?x))\n  ?x \\<in> carrier \\<Longrightarrow> closure (balls ?x) \\<subseteq> carrier\n  U i \\<in> balls ` carrier\n\ngoal (1 subgoal):\n 1. open (U i) &&&\n    compact (closure (U i)) &&& closure (U i) \\<subseteq> carrier", "by force+"], ["proof (state)\nthis:\n  open (U ?i)\n  compact (closure (U ?i))\n  closure (U ?i) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     carrier \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  open (U ?i)\n  compact (closure (U ?i))\n  closure (U ?i) \\<subseteq> carrier", "have \"U i \\<subseteq> carrier\" for i"], ["proof (prove)\nusing this:\n  open (U ?i)\n  compact (closure (U ?i))\n  closure (U ?i) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. U i \\<subseteq> carrier", "using closure_subset"], ["proof (prove)\nusing this:\n  open (U ?i)\n  compact (closure (U ?i))\n  closure (U ?i) \\<subseteq> carrier\n  ?S \\<subseteq> closure ?S\n\ngoal (1 subgoal):\n 1. U i \\<subseteq> carrier", "by force"], ["proof (state)\nthis:\n  U ?i \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     carrier \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"(\\<Union>i. U i) = carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (range U) = carrier", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Union> (range U) \\<subseteq> carrier\n 2. carrier \\<subseteq> \\<Union> (range U)", "show \"(\\<Union>i. U i) \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (range U) \\<subseteq> carrier", "using \\<open>U _ \\<subseteq> carrier\\<close>"], ["proof (prove)\nusing this:\n  U ?_dummy_ \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<Union> (range U) \\<subseteq> carrier", "by force"], ["proof (state)\nthis:\n  \\<Union> (range U) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. carrier \\<subseteq> \\<Union> (range U)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. carrier \\<subseteq> \\<Union> (range U)", "show \"carrier \\<subseteq> (\\<Union>i. U i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier \\<subseteq> \\<Union> (range U)", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier \\<Longrightarrow> x \\<in> \\<Union> (range U)", "fix x::'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier \\<Longrightarrow> x \\<in> \\<Union> (range U)", "assume \"x \\<in> carrier\""], ["proof (state)\nthis:\n  x \\<in> carrier\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier \\<Longrightarrow> x \\<in> \\<Union> (range U)", "then"], ["proof (chain)\npicking this:\n  x \\<in> carrier", "have \"x \\<in> balls x\""], ["proof (prove)\nusing this:\n  x \\<in> carrier\n\ngoal (1 subgoal):\n 1. x \\<in> balls x", "by fact"], ["proof (state)\nthis:\n  x \\<in> balls x\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier \\<Longrightarrow> x \\<in> \\<Union> (range U)", "with \\<open>x \\<in> carrier\\<close> \\<F>'"], ["proof (chain)\npicking this:\n  x \\<in> carrier\n  \\<F>' \\<subseteq> balls ` carrier\n  countable \\<F>'\n  \\<Union> \\<F>' = \\<Union> (balls ` carrier)\n  x \\<in> balls x", "obtain F where \"x \\<in> F\" \"F \\<in> \\<F>'\""], ["proof (prove)\nusing this:\n  x \\<in> carrier\n  \\<F>' \\<subseteq> balls ` carrier\n  countable \\<F>'\n  \\<Union> \\<F>' = \\<Union> (balls ` carrier)\n  x \\<in> balls x\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>x \\<in> F; F \\<in> \\<F>'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> F\n  F \\<in> \\<F>'\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier \\<Longrightarrow> x \\<in> \\<Union> (range U)", "with from_nat_into_surj[OF \\<open>countable \\<F>'\\<close> \\<open>F \\<in> \\<F>'\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>n. from_nat_into \\<F>' n = F\n  x \\<in> F\n  F \\<in> \\<F>'", "obtain i where \"x \\<in> U i\""], ["proof (prove)\nusing this:\n  \\<exists>n. from_nat_into \\<F>' n = F\n  x \\<in> F\n  F \\<in> \\<F>'\n\ngoal (1 subgoal):\n 1. (\\<And>i. x \\<in> U i \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto simp: U_def)"], ["proof (state)\nthis:\n  x \\<in> U i\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier \\<Longrightarrow> x \\<in> \\<Union> (range U)", "then"], ["proof (chain)\npicking this:\n  x \\<in> U i", "show \"x \\<in> (\\<Union>i. U i)\""], ["proof (prove)\nusing this:\n  x \\<in> U i\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Union> (range U)", "by auto"], ["proof (state)\nthis:\n  x \\<in> \\<Union> (range U)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  carrier \\<subseteq> \\<Union> (range U)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Union> (range U) = carrier\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>U.\n                \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n                 \\<And>i. compact (closure (U i));\n                 \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     carrier \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<Union> (range U) = carrier", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Union> (range U) = carrier\n\ngoal (1 subgoal):\n 1. thesis", "using U"], ["proof (prove)\nusing this:\n  \\<Union> (range U) = carrier\n  open (U ?i)\n  compact (closure (U ?i))\n  closure (U ?i) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>There exists a locally finite covering of the carrier by precompact sets.\\<close>"], ["", "lemma precompact_locally_finite_open_coverE:\n  obtains W::\"nat\\<Rightarrow>'a set\"\n  where \"carrier = (\\<Union>i. W i)\" \"\\<And>i. open (W i)\" \"\\<And>i. compact (closure (W i))\"\n    \"\\<And>i. closure (W i) \\<subseteq> carrier\"\n    \"locally_finite_on carrier UNIV W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>W.\n        \\<lbrakk>carrier = \\<Union> (range W); \\<And>i. open (W i);\n         \\<And>i. compact (closure (W i));\n         \\<And>i. closure (W i) \\<subseteq> carrier;\n         locally_finite_on carrier UNIV W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>W.\n        \\<lbrakk>carrier = \\<Union> (range W); \\<And>i. open (W i);\n         \\<And>i. compact (closure (W i));\n         \\<And>i. closure (W i) \\<subseteq> carrier;\n         locally_finite_on carrier UNIV W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from precompact_open_coverE"], ["proof (chain)\npicking this:\n  (\\<And>U.\n      \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n       \\<And>i. compact (closure (U i));\n       \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain U\n    where U: \"(\\<Union>i::nat. U i) = carrier\" \"\\<And>i. open (U i)\" \"\\<And>i. compact (closure (U i))\"\n      \"\\<And>i. closure (U i) \\<subseteq> carrier\""], ["proof (prove)\nusing this:\n  (\\<And>U.\n      \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n       \\<And>i. compact (closure (U i));\n       \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>\\<Union> (range U) = carrier; \\<And>i. open (U i);\n         \\<And>i. compact (closure (U i));\n         \\<And>i. closure (U i) \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<Union> (range U) = carrier\n  open (U ?i)\n  compact (closure (U ?i))\n  closure (U ?i) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. (\\<And>W.\n        \\<lbrakk>carrier = \\<Union> (range W); \\<And>i. open (W i);\n         \\<And>i. compact (closure (W i));\n         \\<And>i. closure (W i) \\<subseteq> carrier;\n         locally_finite_on carrier UNIV W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<exists>V. \\<forall>j.\n    (open (V j) \\<and>\n    compact (closure (V j)) \\<and>\n    U j \\<subseteq> V j \\<and>\n    closure (V j) \\<subseteq> carrier) \\<and>\n    closure (V j) \\<subseteq> V (Suc j)\"\n    (is \"\\<exists>V. \\<forall>j. ?P j (V j) \\<and> ?Q j (V j) (V (Suc j))\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>V.\n       \\<forall>j.\n          (open (V j) \\<and>\n           compact (closure (V j)) \\<and>\n           U j \\<subseteq> V j \\<and>\n           closure (V j) \\<subseteq> carrier) \\<and>\n          closure (V j) \\<subseteq> V (Suc j)", "proof (rule dependent_nat_choice)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>x.\n       open x \\<and>\n       compact (closure x) \\<and>\n       U 0 \\<subseteq> x \\<and> closure x \\<subseteq> carrier\n 2. \\<And>x j.\n       open x \\<and>\n       compact (closure x) \\<and>\n       U j \\<subseteq> x \\<and>\n       closure x \\<subseteq> carrier \\<Longrightarrow>\n       \\<exists>y.\n          (open y \\<and>\n           compact (closure y) \\<and>\n           U (Suc j) \\<subseteq> y \\<and>\n           closure y \\<subseteq> carrier) \\<and>\n          closure x \\<subseteq> y", "show \"\\<exists>x. ?P 0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x.\n       open x \\<and>\n       compact (closure x) \\<and>\n       U 0 \\<subseteq> x \\<and> closure x \\<subseteq> carrier", "using U"], ["proof (prove)\nusing this:\n  \\<Union> (range U) = carrier\n  open (U ?i)\n  compact (closure (U ?i))\n  closure (U ?i) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       open x \\<and>\n       compact (closure x) \\<and>\n       U 0 \\<subseteq> x \\<and> closure x \\<subseteq> carrier", "by (force intro!: exI[where x=\"U 0\"])"], ["proof (state)\nthis:\n  \\<exists>x.\n     open x \\<and>\n     compact (closure x) \\<and>\n     U 0 \\<subseteq> x \\<and> closure x \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<And>x j.\n       open x \\<and>\n       compact (closure x) \\<and>\n       U j \\<subseteq> x \\<and>\n       closure x \\<subseteq> carrier \\<Longrightarrow>\n       \\<exists>y.\n          (open y \\<and>\n           compact (closure y) \\<and>\n           U (Suc j) \\<subseteq> y \\<and>\n           closure y \\<subseteq> carrier) \\<and>\n          closure x \\<subseteq> y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x j.\n       open x \\<and>\n       compact (closure x) \\<and>\n       U j \\<subseteq> x \\<and>\n       closure x \\<subseteq> carrier \\<Longrightarrow>\n       \\<exists>y.\n          (open y \\<and>\n           compact (closure y) \\<and>\n           U (Suc j) \\<subseteq> y \\<and>\n           closure y \\<subseteq> carrier) \\<and>\n          closure x \\<subseteq> y", "fix X n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x j.\n       open x \\<and>\n       compact (closure x) \\<and>\n       U j \\<subseteq> x \\<and>\n       closure x \\<subseteq> carrier \\<Longrightarrow>\n       \\<exists>y.\n          (open y \\<and>\n           compact (closure y) \\<and>\n           U (Suc j) \\<subseteq> y \\<and>\n           closure y \\<subseteq> carrier) \\<and>\n          closure x \\<subseteq> y", "assume P: \"?P n X\""], ["proof (state)\nthis:\n  open X \\<and>\n  compact (closure X) \\<and>\n  U n \\<subseteq> X \\<and> closure X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<And>x j.\n       open x \\<and>\n       compact (closure x) \\<and>\n       U j \\<subseteq> x \\<and>\n       closure x \\<subseteq> carrier \\<Longrightarrow>\n       \\<exists>y.\n          (open y \\<and>\n           compact (closure y) \\<and>\n           U (Suc j) \\<subseteq> y \\<and>\n           closure y \\<subseteq> carrier) \\<and>\n          closure x \\<subseteq> y", "have \"closure X \\<subseteq> (\\<Union>c. U c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closure X \\<subseteq> \\<Union> (range U)", "unfolding U"], ["proof (prove)\ngoal (1 subgoal):\n 1. closure X \\<subseteq> carrier", "using P"], ["proof (prove)\nusing this:\n  open X \\<and>\n  compact (closure X) \\<and>\n  U n \\<subseteq> X \\<and> closure X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. closure X \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  closure X \\<subseteq> \\<Union> (range U)\n\ngoal (1 subgoal):\n 1. \\<And>x j.\n       open x \\<and>\n       compact (closure x) \\<and>\n       U j \\<subseteq> x \\<and>\n       closure x \\<subseteq> carrier \\<Longrightarrow>\n       \\<exists>y.\n          (open y \\<and>\n           compact (closure y) \\<and>\n           U (Suc j) \\<subseteq> y \\<and>\n           closure y \\<subseteq> carrier) \\<and>\n          closure x \\<subseteq> y", "have \"compact (closure X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact (closure X)", "using P"], ["proof (prove)\nusing this:\n  open X \\<and>\n  compact (closure X) \\<and>\n  U n \\<subseteq> X \\<and> closure X \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. compact (closure X)", "by auto"], ["proof (state)\nthis:\n  compact (closure X)\n\ngoal (1 subgoal):\n 1. \\<And>x j.\n       open x \\<and>\n       compact (closure x) \\<and>\n       U j \\<subseteq> x \\<and>\n       closure x \\<subseteq> carrier \\<Longrightarrow>\n       \\<exists>y.\n          (open y \\<and>\n           compact (closure y) \\<and>\n           U (Suc j) \\<subseteq> y \\<and>\n           closure y \\<subseteq> carrier) \\<and>\n          closure x \\<subseteq> y", "from compactE_image[OF this, of UNIV U, OF \\<open>open (U _)\\<close> \\<open>closure X \\<subseteq> _\\<close>]"], ["proof (chain)\npicking this:\n  (\\<And>C'.\n      \\<lbrakk>C' \\<subseteq> UNIV; finite C';\n       closure X \\<subseteq> \\<Union> (U ` C')\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain M where M: \"M \\<subseteq> UNIV\" \"finite M\" \"closure X \\<subseteq> (\\<Union>c\\<in>M. U c)\""], ["proof (prove)\nusing this:\n  (\\<And>C'.\n      \\<lbrakk>C' \\<subseteq> UNIV; finite C';\n       closure X \\<subseteq> \\<Union> (U ` C')\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>M \\<subseteq> UNIV; finite M;\n         closure X \\<subseteq> \\<Union> (U ` M)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  M \\<subseteq> UNIV\n  finite M\n  closure X \\<subseteq> \\<Union> (U ` M)\n\ngoal (1 subgoal):\n 1. \\<And>x j.\n       open x \\<and>\n       compact (closure x) \\<and>\n       U j \\<subseteq> x \\<and>\n       closure x \\<subseteq> carrier \\<Longrightarrow>\n       \\<exists>y.\n          (open y \\<and>\n           compact (closure y) \\<and>\n           U (Suc j) \\<subseteq> y \\<and>\n           closure y \\<subseteq> carrier) \\<and>\n          closure x \\<subseteq> y", "show \"\\<exists>y. ?P (Suc n) y \\<and> ?Q n X y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y.\n       (open y \\<and>\n        compact (closure y) \\<and>\n        U (Suc n) \\<subseteq> y \\<and> closure y \\<subseteq> carrier) \\<and>\n       closure X \\<subseteq> y", "proof (intro exI[where x=\"U (Suc n) \\<union> (\\<Union>c\\<in>M. U c)\"] impI conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. open (U (Suc n) \\<union> \\<Union> (U ` M))\n 2. compact (closure (U (Suc n) \\<union> \\<Union> (U ` M)))\n 3. U (Suc n) \\<subseteq> U (Suc n) \\<union> \\<Union> (U ` M)\n 4. closure (U (Suc n) \\<union> \\<Union> (U ` M)) \\<subseteq> carrier\n 5. closure X \\<subseteq> U (Suc n) \\<union> \\<Union> (U ` M)", "show \"open (U (Suc n) \\<union> \\<Union>(U ` M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open (U (Suc n) \\<union> \\<Union> (U ` M))", "by (auto intro!: U)"], ["proof (state)\nthis:\n  open (U (Suc n) \\<union> \\<Union> (U ` M))\n\ngoal (4 subgoals):\n 1. compact (closure (U (Suc n) \\<union> \\<Union> (U ` M)))\n 2. U (Suc n) \\<subseteq> U (Suc n) \\<union> \\<Union> (U ` M)\n 3. closure (U (Suc n) \\<union> \\<Union> (U ` M)) \\<subseteq> carrier\n 4. closure X \\<subseteq> U (Suc n) \\<union> \\<Union> (U ` M)", "show \"compact (closure (U (Suc n) \\<union> \\<Union>(U ` M)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact (closure (U (Suc n) \\<union> \\<Union> (U ` M)))", "using \\<open>finite M\\<close>"], ["proof (prove)\nusing this:\n  finite M\n\ngoal (1 subgoal):\n 1. compact (closure (U (Suc n) \\<union> \\<Union> (U ` M)))", "by (auto simp add: closure_Union intro!: U)"], ["proof (state)\nthis:\n  compact (closure (U (Suc n) \\<union> \\<Union> (U ` M)))\n\ngoal (3 subgoals):\n 1. U (Suc n) \\<subseteq> U (Suc n) \\<union> \\<Union> (U ` M)\n 2. closure (U (Suc n) \\<union> \\<Union> (U ` M)) \\<subseteq> carrier\n 3. closure X \\<subseteq> U (Suc n) \\<union> \\<Union> (U ` M)", "show \"U (Suc n) \\<subseteq> U (Suc n) \\<union> \\<Union>(U ` M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U (Suc n) \\<subseteq> U (Suc n) \\<union> \\<Union> (U ` M)", "by auto"], ["proof (state)\nthis:\n  U (Suc n) \\<subseteq> U (Suc n) \\<union> \\<Union> (U ` M)\n\ngoal (2 subgoals):\n 1. closure (U (Suc n) \\<union> \\<Union> (U ` M)) \\<subseteq> carrier\n 2. closure X \\<subseteq> U (Suc n) \\<union> \\<Union> (U ` M)", "show \"closure (U (Suc n) \\<union> \\<Union>(U ` M)) \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closure (U (Suc n) \\<union> \\<Union> (U ` M)) \\<subseteq> carrier", "using U \\<open>finite M\\<close>"], ["proof (prove)\nusing this:\n  \\<Union> (range U) = carrier\n  open (U ?i)\n  compact (closure (U ?i))\n  closure (U ?i) \\<subseteq> carrier\n  finite M\n\ngoal (1 subgoal):\n 1. closure (U (Suc n) \\<union> \\<Union> (U ` M)) \\<subseteq> carrier", "by (force simp: closure_Union)"], ["proof (state)\nthis:\n  closure (U (Suc n) \\<union> \\<Union> (U ` M)) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. closure X \\<subseteq> U (Suc n) \\<union> \\<Union> (U ` M)", "show \"closure X \\<subseteq> U (Suc n) \\<union> (\\<Union>c\\<in>M. U c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closure X \\<subseteq> U (Suc n) \\<union> \\<Union> (U ` M)", "using M"], ["proof (prove)\nusing this:\n  M \\<subseteq> UNIV\n  finite M\n  closure X \\<subseteq> \\<Union> (U ` M)\n\ngoal (1 subgoal):\n 1. closure X \\<subseteq> U (Suc n) \\<union> \\<Union> (U ` M)", "by auto"], ["proof (state)\nthis:\n  closure X \\<subseteq> U (Suc n) \\<union> \\<Union> (U ` M)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>y.\n     (open y \\<and>\n      compact (closure y) \\<and>\n      U (Suc n) \\<subseteq> y \\<and> closure y \\<subseteq> carrier) \\<and>\n     closure X \\<subseteq> y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>V.\n     \\<forall>j.\n        (open (V j) \\<and>\n         compact (closure (V j)) \\<and>\n         U j \\<subseteq> V j \\<and>\n         closure (V j) \\<subseteq> carrier) \\<and>\n        closure (V j) \\<subseteq> V (Suc j)\n\ngoal (1 subgoal):\n 1. (\\<And>W.\n        \\<lbrakk>carrier = \\<Union> (range W); \\<And>i. open (W i);\n         \\<And>i. compact (closure (W i));\n         \\<And>i. closure (W i) \\<subseteq> carrier;\n         locally_finite_on carrier UNIV W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>V.\n     \\<forall>j.\n        (open (V j) \\<and>\n         compact (closure (V j)) \\<and>\n         U j \\<subseteq> V j \\<and>\n         closure (V j) \\<subseteq> carrier) \\<and>\n        closure (V j) \\<subseteq> V (Suc j)", "obtain V where V:\n    \"\\<And>j. closure (V j) \\<subseteq> V (Suc j)\"\n    \"\\<And>j. open (V j)\"\n    \"\\<And>j. compact (closure (V j))\"\n    \"\\<And>j. U j \\<subseteq> V j\"\n    \"\\<And>j. closure (V j) \\<subseteq> carrier\""], ["proof (prove)\nusing this:\n  \\<exists>V.\n     \\<forall>j.\n        (open (V j) \\<and>\n         compact (closure (V j)) \\<and>\n         U j \\<subseteq> V j \\<and>\n         closure (V j) \\<subseteq> carrier) \\<and>\n        closure (V j) \\<subseteq> V (Suc j)\n\ngoal (1 subgoal):\n 1. (\\<And>V.\n        \\<lbrakk>\\<And>j. closure (V j) \\<subseteq> V (Suc j);\n         \\<And>j. open (V j); \\<And>j. compact (closure (V j));\n         \\<And>j. U j \\<subseteq> V j;\n         \\<And>j. closure (V j) \\<subseteq> carrier\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  closure (V ?j) \\<subseteq> V (Suc ?j)\n  open (V ?j)\n  compact (closure (V ?j))\n  U ?j \\<subseteq> V ?j\n  closure (V ?j) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. (\\<And>W.\n        \\<lbrakk>carrier = \\<Union> (range W); \\<And>i. open (W i);\n         \\<And>i. compact (closure (W i));\n         \\<And>i. closure (W i) \\<subseteq> carrier;\n         locally_finite_on carrier UNIV W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have V_mono_Suc: \"\\<And>j. V j \\<subseteq> V (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j. V j \\<subseteq> V (Suc j)", "using V"], ["proof (prove)\nusing this:\n  closure (V ?j) \\<subseteq> V (Suc ?j)\n  open (V ?j)\n  compact (closure (V ?j))\n  U ?j \\<subseteq> V ?j\n  closure (V ?j) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<And>j. V j \\<subseteq> V (Suc j)", "by auto"], ["proof (state)\nthis:\n  V ?j \\<subseteq> V (Suc ?j)\n\ngoal (1 subgoal):\n 1. (\\<And>W.\n        \\<lbrakk>carrier = \\<Union> (range W); \\<And>i. open (W i);\n         \\<And>i. compact (closure (W i));\n         \\<And>i. closure (W i) \\<subseteq> carrier;\n         locally_finite_on carrier UNIV W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have V_mono: \"V l \\<subseteq> V m\" if \"l \\<le> m\" for l m"], ["proof (prove)\ngoal (1 subgoal):\n 1. V l \\<subseteq> V m", "using V_mono_Suc that"], ["proof (prove)\nusing this:\n  V ?j \\<subseteq> V (Suc ?j)\n  l \\<le> m\n\ngoal (1 subgoal):\n 1. V l \\<subseteq> V m", "by (rule lift_Suc_mono_le[of V])"], ["proof (state)\nthis:\n  ?l \\<le> ?m \\<Longrightarrow> V ?l \\<subseteq> V ?m\n\ngoal (1 subgoal):\n 1. (\\<And>W.\n        \\<lbrakk>carrier = \\<Union> (range W); \\<And>i. open (W i);\n         \\<And>i. compact (closure (W i));\n         \\<And>i. closure (W i) \\<subseteq> carrier;\n         locally_finite_on carrier UNIV W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have V_cover: \"carrier = \\<Union>(V ` UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier = \\<Union> (range V)", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. carrier \\<subseteq> \\<Union> (range V)\n 2. \\<Union> (range V) \\<subseteq> carrier", "show \"carrier \\<subseteq> \\<Union>(V ` UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier \\<subseteq> \\<Union> (range V)", "unfolding U(1)[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (range U) \\<subseteq> \\<Union> (range V)", "using V(4)"], ["proof (prove)\nusing this:\n  U ?j \\<subseteq> V ?j\n\ngoal (1 subgoal):\n 1. \\<Union> (range U) \\<subseteq> \\<Union> (range V)", "by auto"], ["proof (state)\nthis:\n  carrier \\<subseteq> \\<Union> (range V)\n\ngoal (1 subgoal):\n 1. \\<Union> (range V) \\<subseteq> carrier", "show \"\\<Union>(V ` UNIV) \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (range V) \\<subseteq> carrier", "using V(5)"], ["proof (prove)\nusing this:\n  closure (V ?j) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<Union> (range V) \\<subseteq> carrier", "by force"], ["proof (state)\nthis:\n  \\<Union> (range V) \\<subseteq> carrier\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  carrier = \\<Union> (range V)\n\ngoal (1 subgoal):\n 1. (\\<And>W.\n        \\<lbrakk>carrier = \\<Union> (range W); \\<And>i. open (W i);\n         \\<And>i. compact (closure (W i));\n         \\<And>i. closure (W i) \\<subseteq> carrier;\n         locally_finite_on carrier UNIV W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define W where \"W j = (if j < 2 then V j else V j - closure (V (j - 2)))\" for j"], ["proof (state)\nthis:\n  W ?j = (if ?j < 2 then V ?j else V ?j - closure (V (?j - 2)))\n\ngoal (1 subgoal):\n 1. (\\<And>W.\n        \\<lbrakk>carrier = \\<Union> (range W); \\<And>i. open (W i);\n         \\<And>i. compact (closure (W i));\n         \\<And>i. closure (W i) \\<subseteq> carrier;\n         locally_finite_on carrier UNIV W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"compact (closure (W j))\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. compact (closure (W j))", "apply (rule compact_if_closed_subset_of_compact[where T=\"closure (V j)\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. closed (closure (W j))\n 2. compact (closure (V j))\n 3. closure (W j) \\<subseteq> closure (V j)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. closed (closure (W j))", "by simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. compact (closure (V j))\n 2. closure (W j) \\<subseteq> closure (V j)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. compact (closure (V j))", "by (simp add: V)"], ["proof (prove)\ngoal (1 subgoal):\n 1. closure (W j) \\<subseteq> closure (V j)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. closure (W j) \\<subseteq> closure (V j)", "apply (rule closure_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. W j \\<subseteq> V j", "using V(1)[of j] V(1)[of \"Suc j\"]"], ["proof (prove)\nusing this:\n  closure (V j) \\<subseteq> V (Suc j)\n  closure (V (Suc j)) \\<subseteq> V (Suc (Suc j))\n\ngoal (1 subgoal):\n 1. W j \\<subseteq> V j", "by (auto simp: W_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  compact (closure (W ?j))\n\ngoal (1 subgoal):\n 1. (\\<And>W.\n        \\<lbrakk>carrier = \\<Union> (range W); \\<And>i. open (W i);\n         \\<And>i. compact (closure (W i));\n         \\<And>i. closure (W i) \\<subseteq> carrier;\n         locally_finite_on carrier UNIV W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have open_W: \"open (W j)\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. open (W j)", "by (auto simp: W_def V)"], ["proof (state)\nthis:\n  open (W ?j)\n\ngoal (1 subgoal):\n 1. (\\<And>W.\n        \\<lbrakk>carrier = \\<Union> (range W); \\<And>i. open (W i);\n         \\<And>i. compact (closure (W i));\n         \\<And>i. closure (W i) \\<subseteq> carrier;\n         locally_finite_on carrier UNIV W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have W_cover: \"p \\<in> \\<Union>(W ` UNIV)\" if \"p \\<in> carrier\" for p"], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> \\<Union> (range W)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<in> \\<Union> (range W)", "have \"p \\<in> \\<Union>(V ` UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> \\<Union> (range V)", "using that V_cover"], ["proof (prove)\nusing this:\n  p \\<in> carrier\n  carrier = \\<Union> (range V)\n\ngoal (1 subgoal):\n 1. p \\<in> \\<Union> (range V)", "by auto"], ["proof (state)\nthis:\n  p \\<in> \\<Union> (range V)\n\ngoal (1 subgoal):\n 1. p \\<in> \\<Union> (range W)", "then"], ["proof (chain)\npicking this:\n  p \\<in> \\<Union> (range V)", "have ex: \"\\<exists>i. p \\<in> V i\""], ["proof (prove)\nusing this:\n  p \\<in> \\<Union> (range V)\n\ngoal (1 subgoal):\n 1. \\<exists>i. p \\<in> V i", "by auto"], ["proof (state)\nthis:\n  \\<exists>i. p \\<in> V i\n\ngoal (1 subgoal):\n 1. p \\<in> \\<Union> (range W)", "define k where \"k = (LEAST i. p \\<in> V i)\""], ["proof (state)\nthis:\n  k = (LEAST i. p \\<in> V i)\n\ngoal (1 subgoal):\n 1. p \\<in> \\<Union> (range W)", "from LeastI_ex[OF ex]"], ["proof (chain)\npicking this:\n  p \\<in> V (LEAST i. p \\<in> V i)", "have k: \"p \\<in> V k\""], ["proof (prove)\nusing this:\n  p \\<in> V (LEAST i. p \\<in> V i)\n\ngoal (1 subgoal):\n 1. p \\<in> V k", "by (auto simp: k_def)"], ["proof (state)\nthis:\n  p \\<in> V k\n\ngoal (1 subgoal):\n 1. p \\<in> \\<Union> (range W)", "have \"p \\<in> W k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> W k", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> p \\<in> W k\n 2. \\<not> ?P \\<Longrightarrow> p \\<in> W k", "assume \"k < 2\""], ["proof (state)\nthis:\n  k < 2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> p \\<in> W k\n 2. \\<not> ?P \\<Longrightarrow> p \\<in> W k", "then"], ["proof (chain)\npicking this:\n  k < 2", "show ?thesis"], ["proof (prove)\nusing this:\n  k < 2\n\ngoal (1 subgoal):\n 1. p \\<in> W k", "using k"], ["proof (prove)\nusing this:\n  k < 2\n  p \\<in> V k\n\ngoal (1 subgoal):\n 1. p \\<in> W k", "by (auto simp: W_def)"], ["proof (state)\nthis:\n  p \\<in> W k\n\ngoal (1 subgoal):\n 1. \\<not> k < 2 \\<Longrightarrow> p \\<in> W k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> k < 2 \\<Longrightarrow> p \\<in> W k", "assume k2: \"\\<not>k < 2\""], ["proof (state)\nthis:\n  \\<not> k < 2\n\ngoal (1 subgoal):\n 1. \\<not> k < 2 \\<Longrightarrow> p \\<in> W k", "have False if \"p \\<in> closure (V (k - 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "have \"Suc (k - 2) = k - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (k - 2) = k - 1", "using k2"], ["proof (prove)\nusing this:\n  \\<not> k < 2\n\ngoal (1 subgoal):\n 1. Suc (k - 2) = k - 1", "by arith"], ["proof (state)\nthis:\n  Suc (k - 2) = k - 1\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  Suc (k - 2) = k - 1", "have \"p \\<in> V (k - 1)\""], ["proof (prove)\nusing this:\n  Suc (k - 2) = k - 1\n\ngoal (1 subgoal):\n 1. p \\<in> V (k - 1)", "using k2 that V(1)[of \"k - 2\"]"], ["proof (prove)\nusing this:\n  Suc (k - 2) = k - 1\n  \\<not> k < 2\n  p \\<in> closure (V (k - 2))\n  closure (V (k - 2)) \\<subseteq> V (Suc (k - 2))\n\ngoal (1 subgoal):\n 1. p \\<in> V (k - 1)", "by auto"], ["proof (state)\nthis:\n  p \\<in> V (k - 1)\n\ngoal (1 subgoal):\n 1. False", "moreover"], ["proof (state)\nthis:\n  p \\<in> V (k - 1)\n\ngoal (1 subgoal):\n 1. False", "have \"k - 1 < k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k - 1 < k", "using k2"], ["proof (prove)\nusing this:\n  \\<not> k < 2\n\ngoal (1 subgoal):\n 1. k - 1 < k", "by arith"], ["proof (state)\nthis:\n  k - 1 < k\n\ngoal (1 subgoal):\n 1. False", "from not_less_Least[OF this[unfolded k_def], folded k_def]"], ["proof (chain)\npicking this:\n  p \\<notin> V (k - 1)", "have \"p \\<notin> V (k - 1)\""], ["proof (prove)\nusing this:\n  p \\<notin> V (k - 1)\n\ngoal (1 subgoal):\n 1. p \\<notin> V (k - 1)", "."], ["proof (state)\nthis:\n  p \\<notin> V (k - 1)\n\ngoal (1 subgoal):\n 1. False", "ultimately"], ["proof (chain)\npicking this:\n  p \\<in> V (k - 1)\n  p \\<notin> V (k - 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  p \\<in> V (k - 1)\n  p \\<notin> V (k - 1)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<in> closure (V (k - 2)) \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> k < 2 \\<Longrightarrow> p \\<in> W k", "then"], ["proof (chain)\npicking this:\n  p \\<in> closure (V (k - 2)) \\<Longrightarrow> False", "show ?thesis"], ["proof (prove)\nusing this:\n  p \\<in> closure (V (k - 2)) \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. p \\<in> W k", "using k"], ["proof (prove)\nusing this:\n  p \\<in> closure (V (k - 2)) \\<Longrightarrow> False\n  p \\<in> V k\n\ngoal (1 subgoal):\n 1. p \\<in> W k", "by (auto simp: W_def)"], ["proof (state)\nthis:\n  p \\<in> W k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<in> W k\n\ngoal (1 subgoal):\n 1. p \\<in> \\<Union> (range W)", "then"], ["proof (chain)\npicking this:\n  p \\<in> W k", "show ?thesis"], ["proof (prove)\nusing this:\n  p \\<in> W k\n\ngoal (1 subgoal):\n 1. p \\<in> \\<Union> (range W)", "by auto"], ["proof (state)\nthis:\n  p \\<in> \\<Union> (range W)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?p \\<in> carrier \\<Longrightarrow> ?p \\<in> \\<Union> (range W)\n\ngoal (1 subgoal):\n 1. (\\<And>W.\n        \\<lbrakk>carrier = \\<Union> (range W); \\<And>i. open (W i);\n         \\<And>i. compact (closure (W i));\n         \\<And>i. closure (W i) \\<subseteq> carrier;\n         locally_finite_on carrier UNIV W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have W_eq_carrier: \"carrier = (\\<Union>i. W i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier = \\<Union> (range W)", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. carrier \\<subseteq> \\<Union> (range W)\n 2. \\<Union> (range W) \\<subseteq> carrier", "show \"carrier \\<subseteq> (\\<Union>i. W i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier \\<subseteq> \\<Union> (range W)", "using W_cover"], ["proof (prove)\nusing this:\n  ?p \\<in> carrier \\<Longrightarrow> ?p \\<in> \\<Union> (range W)\n\ngoal (1 subgoal):\n 1. carrier \\<subseteq> \\<Union> (range W)", "by auto"], ["proof (state)\nthis:\n  carrier \\<subseteq> \\<Union> (range W)\n\ngoal (1 subgoal):\n 1. \\<Union> (range W) \\<subseteq> carrier", "have \"(\\<Union>i. W i) \\<subseteq> (\\<Union>i. V i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (range W) \\<subseteq> \\<Union> (range V)", "by (auto simp: W_def split: if_splits)"], ["proof (state)\nthis:\n  \\<Union> (range W) \\<subseteq> \\<Union> (range V)\n\ngoal (1 subgoal):\n 1. \\<Union> (range W) \\<subseteq> carrier", "also"], ["proof (state)\nthis:\n  \\<Union> (range W) \\<subseteq> \\<Union> (range V)\n\ngoal (1 subgoal):\n 1. \\<Union> (range W) \\<subseteq> carrier", "have \"\\<dots> = carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (range V) = carrier", "by (simp add: V_cover)"], ["proof (state)\nthis:\n  \\<Union> (range V) = carrier\n\ngoal (1 subgoal):\n 1. \\<Union> (range W) \\<subseteq> carrier", "finally"], ["proof (chain)\npicking this:\n  \\<Union> (range W) \\<subseteq> carrier", "show \"(\\<Union>i. W i) \\<subseteq> carrier\""], ["proof (prove)\nusing this:\n  \\<Union> (range W) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<Union> (range W) \\<subseteq> carrier", "."], ["proof (state)\nthis:\n  \\<Union> (range W) \\<subseteq> carrier\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  carrier = \\<Union> (range W)\n\ngoal (1 subgoal):\n 1. (\\<And>W.\n        \\<lbrakk>carrier = \\<Union> (range W); \\<And>i. open (W i);\n         \\<And>i. compact (closure (W i));\n         \\<And>i. closure (W i) \\<subseteq> carrier;\n         locally_finite_on carrier UNIV W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have W_disjoint: \"W k \\<inter> W l = {}\" if less: \"l < k - 1\" for l k"], ["proof (prove)\ngoal (1 subgoal):\n 1. W k \\<inter> W l = {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. W k \\<inter> W l = {}", "from less"], ["proof (chain)\npicking this:\n  l < k - 1", "have \"k \\<ge> 2\""], ["proof (prove)\nusing this:\n  l < k - 1\n\ngoal (1 subgoal):\n 1. 2 \\<le> k", "by arith"], ["proof (state)\nthis:\n  2 \\<le> k\n\ngoal (1 subgoal):\n 1. W k \\<inter> W l = {}", "then"], ["proof (chain)\npicking this:\n  2 \\<le> k", "have \"W k = V k - closure (V (k - 2))\""], ["proof (prove)\nusing this:\n  2 \\<le> k\n\ngoal (1 subgoal):\n 1. W k = V k - closure (V (k - 2))", "by (auto simp: W_def)"], ["proof (state)\nthis:\n  W k = V k - closure (V (k - 2))\n\ngoal (1 subgoal):\n 1. W k \\<inter> W l = {}", "moreover"], ["proof (state)\nthis:\n  W k = V k - closure (V (k - 2))\n\ngoal (1 subgoal):\n 1. W k \\<inter> W l = {}", "have \"W l \\<subseteq> V (k - 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W l \\<subseteq> V (k - 2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. W l \\<subseteq> V (k - 2)", "have \"W l \\<subseteq> V l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W l \\<subseteq> V l", "by (auto simp: W_def)"], ["proof (state)\nthis:\n  W l \\<subseteq> V l\n\ngoal (1 subgoal):\n 1. W l \\<subseteq> V (k - 2)", "also"], ["proof (state)\nthis:\n  W l \\<subseteq> V l\n\ngoal (1 subgoal):\n 1. W l \\<subseteq> V (k - 2)", "have \"\\<dots> \\<subseteq> V (k - 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V l \\<subseteq> V (k - 2)", "by (rule V_mono) (use less in arith)"], ["proof (state)\nthis:\n  V l \\<subseteq> V (k - 2)\n\ngoal (1 subgoal):\n 1. W l \\<subseteq> V (k - 2)", "finally"], ["proof (chain)\npicking this:\n  W l \\<subseteq> V (k - 2)", "show ?thesis"], ["proof (prove)\nusing this:\n  W l \\<subseteq> V (k - 2)\n\ngoal (1 subgoal):\n 1. W l \\<subseteq> V (k - 2)", "."], ["proof (state)\nthis:\n  W l \\<subseteq> V (k - 2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  W l \\<subseteq> V (k - 2)\n\ngoal (1 subgoal):\n 1. W k \\<inter> W l = {}", "ultimately"], ["proof (chain)\npicking this:\n  W k = V k - closure (V (k - 2))\n  W l \\<subseteq> V (k - 2)", "show ?thesis"], ["proof (prove)\nusing this:\n  W k = V k - closure (V (k - 2))\n  W l \\<subseteq> V (k - 2)\n\ngoal (1 subgoal):\n 1. W k \\<inter> W l = {}", "by auto"], ["proof (state)\nthis:\n  W k \\<inter> W l = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?l < ?k - 1 \\<Longrightarrow> W ?k \\<inter> W ?l = {}\n\ngoal (1 subgoal):\n 1. (\\<And>W.\n        \\<lbrakk>carrier = \\<Union> (range W); \\<And>i. open (W i);\n         \\<And>i. compact (closure (W i));\n         \\<And>i. closure (W i) \\<subseteq> carrier;\n         locally_finite_on carrier UNIV W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"locally_finite_on carrier UNIV W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. locally_finite_on carrier UNIV W", "proof (rule locally_finite_on_open_coverI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>j.\n       j \\<in> UNIV \\<Longrightarrow>\n       finite {i \\<in> UNIV. W i \\<inter> W j \\<noteq> {}}\n 2. carrier \\<subseteq> \\<Union> (range W)\n 3. \\<And>i. i \\<in> UNIV \\<Longrightarrow> open (W i)", "show \"carrier \\<subseteq> \\<Union>(W ` UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier \\<subseteq> \\<Union> (range W)", "unfolding W_eq_carrier"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (range W) \\<subseteq> \\<Union> (range W)", "by simp"], ["proof (state)\nthis:\n  carrier \\<subseteq> \\<Union> (range W)\n\ngoal (2 subgoals):\n 1. \\<And>j.\n       j \\<in> UNIV \\<Longrightarrow>\n       finite {i \\<in> UNIV. W i \\<inter> W j \\<noteq> {}}\n 2. \\<And>i. i \\<in> UNIV \\<Longrightarrow> open (W i)", "show \"open (W i)\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. open (W i)", "by (auto simp: open_W)"], ["proof (state)\nthis:\n  open (W ?i)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> UNIV \\<Longrightarrow>\n       finite {i \\<in> UNIV. W i \\<inter> W j \\<noteq> {}}", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> UNIV \\<Longrightarrow>\n       finite {i \\<in> UNIV. W i \\<inter> W j \\<noteq> {}}", "have \"{i. W i \\<inter> W k \\<noteq> {}} \\<subseteq> {(k - 1) .. (k + 1)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. W i \\<inter> W k \\<noteq> {}} \\<subseteq> {k - 1..k + 1}", "proof (rule subsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. W i \\<inter> W k \\<noteq> {}} \\<Longrightarrow>\n       x \\<in> {k - 1..k + 1}", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. W i \\<inter> W k \\<noteq> {}} \\<Longrightarrow>\n       x \\<in> {k - 1..k + 1}", "assume \"l \\<in> {i. W i \\<inter> W k \\<noteq> {}} \""], ["proof (state)\nthis:\n  l \\<in> {i. W i \\<inter> W k \\<noteq> {}}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. W i \\<inter> W k \\<noteq> {}} \\<Longrightarrow>\n       x \\<in> {k - 1..k + 1}", "then"], ["proof (chain)\npicking this:\n  l \\<in> {i. W i \\<inter> W k \\<noteq> {}}", "have l: \"W l \\<inter> W k \\<noteq> {}\""], ["proof (prove)\nusing this:\n  l \\<in> {i. W i \\<inter> W k \\<noteq> {}}\n\ngoal (1 subgoal):\n 1. W l \\<inter> W k \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  W l \\<inter> W k \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. W i \\<inter> W k \\<noteq> {}} \\<Longrightarrow>\n       x \\<in> {k - 1..k + 1}", "consider \"l < k - 1\" | \"l > k + 1\" | \"k-1 \\<le> l\" \"l \\<le> k+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>l < k - 1 \\<Longrightarrow> thesis;\n     k + 1 < l \\<Longrightarrow> thesis;\n     \\<lbrakk>k - 1 \\<le> l; l \\<le> k + 1\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by arith"], ["proof (state)\nthis:\n  \\<lbrakk>l < k - 1 \\<Longrightarrow> ?thesis;\n   k + 1 < l \\<Longrightarrow> ?thesis;\n   \\<lbrakk>k - 1 \\<le> l; l \\<le> k + 1\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. W i \\<inter> W k \\<noteq> {}} \\<Longrightarrow>\n       x \\<in> {k - 1..k + 1}", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>l < k - 1 \\<Longrightarrow> ?thesis;\n   k + 1 < l \\<Longrightarrow> ?thesis;\n   \\<lbrakk>k - 1 \\<le> l; l \\<le> k + 1\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"l \\<in> {(k - 1) .. (k + 1)}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>l < k - 1 \\<Longrightarrow> ?thesis;\n   k + 1 < l \\<Longrightarrow> ?thesis;\n   \\<lbrakk>k - 1 \\<le> l; l \\<le> k + 1\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. l \\<in> {k - 1..k + 1}", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. l < k - 1 \\<Longrightarrow> l \\<in> {k - 1..k + 1}\n 2. k + 1 < l \\<Longrightarrow> l \\<in> {k - 1..k + 1}\n 3. \\<lbrakk>k - 1 \\<le> l; l \\<le> k + 1\\<rbrakk>\n    \\<Longrightarrow> l \\<in> {k - 1..k + 1}", "case 1"], ["proof (state)\nthis:\n  l < k - 1\n\ngoal (3 subgoals):\n 1. l < k - 1 \\<Longrightarrow> l \\<in> {k - 1..k + 1}\n 2. k + 1 < l \\<Longrightarrow> l \\<in> {k - 1..k + 1}\n 3. \\<lbrakk>k - 1 \\<le> l; l \\<le> k + 1\\<rbrakk>\n    \\<Longrightarrow> l \\<in> {k - 1..k + 1}", "from W_disjoint[OF this] l"], ["proof (chain)\npicking this:\n  W k \\<inter> W l = {}\n  W l \\<inter> W k \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  W k \\<inter> W l = {}\n  W l \\<inter> W k \\<noteq> {}\n\ngoal (1 subgoal):\n 1. l \\<in> {k - 1..k + 1}", "by auto"], ["proof (state)\nthis:\n  l \\<in> {k - 1..k + 1}\n\ngoal (2 subgoals):\n 1. k + 1 < l \\<Longrightarrow> l \\<in> {k - 1..k + 1}\n 2. \\<lbrakk>k - 1 \\<le> l; l \\<le> k + 1\\<rbrakk>\n    \\<Longrightarrow> l \\<in> {k - 1..k + 1}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. k + 1 < l \\<Longrightarrow> l \\<in> {k - 1..k + 1}\n 2. \\<lbrakk>k - 1 \\<le> l; l \\<le> k + 1\\<rbrakk>\n    \\<Longrightarrow> l \\<in> {k - 1..k + 1}", "case 2"], ["proof (state)\nthis:\n  k + 1 < l\n\ngoal (2 subgoals):\n 1. k + 1 < l \\<Longrightarrow> l \\<in> {k - 1..k + 1}\n 2. \\<lbrakk>k - 1 \\<le> l; l \\<le> k + 1\\<rbrakk>\n    \\<Longrightarrow> l \\<in> {k - 1..k + 1}", "then"], ["proof (chain)\npicking this:\n  k + 1 < l", "have \"k < l - 1\""], ["proof (prove)\nusing this:\n  k + 1 < l\n\ngoal (1 subgoal):\n 1. k < l - 1", "by arith"], ["proof (state)\nthis:\n  k < l - 1\n\ngoal (2 subgoals):\n 1. k + 1 < l \\<Longrightarrow> l \\<in> {k - 1..k + 1}\n 2. \\<lbrakk>k - 1 \\<le> l; l \\<le> k + 1\\<rbrakk>\n    \\<Longrightarrow> l \\<in> {k - 1..k + 1}", "from W_disjoint[OF this] l"], ["proof (chain)\npicking this:\n  W l \\<inter> W k = {}\n  W l \\<inter> W k \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  W l \\<inter> W k = {}\n  W l \\<inter> W k \\<noteq> {}\n\ngoal (1 subgoal):\n 1. l \\<in> {k - 1..k + 1}", "by auto"], ["proof (state)\nthis:\n  l \\<in> {k - 1..k + 1}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k - 1 \\<le> l; l \\<le> k + 1\\<rbrakk>\n    \\<Longrightarrow> l \\<in> {k - 1..k + 1}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>k - 1 \\<le> l; l \\<le> k + 1\\<rbrakk>\n    \\<Longrightarrow> l \\<in> {k - 1..k + 1}", "case 3"], ["proof (state)\nthis:\n  k - 1 \\<le> l\n  l \\<le> k + 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k - 1 \\<le> l; l \\<le> k + 1\\<rbrakk>\n    \\<Longrightarrow> l \\<in> {k - 1..k + 1}", "then"], ["proof (chain)\npicking this:\n  k - 1 \\<le> l\n  l \\<le> k + 1", "show ?thesis"], ["proof (prove)\nusing this:\n  k - 1 \\<le> l\n  l \\<le> k + 1\n\ngoal (1 subgoal):\n 1. l \\<in> {k - 1..k + 1}", "by (auto simp: l)"], ["proof (state)\nthis:\n  l \\<in> {k - 1..k + 1}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  l \\<in> {k - 1..k + 1}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {i. W i \\<inter> W k \\<noteq> {}} \\<subseteq> {k - 1..k + 1}\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> UNIV \\<Longrightarrow>\n       finite {i \\<in> UNIV. W i \\<inter> W j \\<noteq> {}}", "also"], ["proof (state)\nthis:\n  {i. W i \\<inter> W k \\<noteq> {}} \\<subseteq> {k - 1..k + 1}\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> UNIV \\<Longrightarrow>\n       finite {i \\<in> UNIV. W i \\<inter> W j \\<noteq> {}}", "have \"finite \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {k - 1..k + 1}", "by simp"], ["proof (state)\nthis:\n  finite {k - 1..k + 1}\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> UNIV \\<Longrightarrow>\n       finite {i \\<in> UNIV. W i \\<inter> W j \\<noteq> {}}", "finally (finite_subset)"], ["proof (chain)\npicking this:\n  finite {i. W i \\<inter> W k \\<noteq> {}}", "show \"finite {i\\<in>UNIV . W i \\<inter> W k \\<noteq> {}}\""], ["proof (prove)\nusing this:\n  finite {i. W i \\<inter> W k \\<noteq> {}}\n\ngoal (1 subgoal):\n 1. finite {i \\<in> UNIV. W i \\<inter> W k \\<noteq> {}}", "by simp"], ["proof (state)\nthis:\n  finite {i \\<in> UNIV. W i \\<inter> W k \\<noteq> {}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  locally_finite_on carrier UNIV W\n\ngoal (1 subgoal):\n 1. (\\<And>W.\n        \\<lbrakk>carrier = \\<Union> (range W); \\<And>i. open (W i);\n         \\<And>i. compact (closure (W i));\n         \\<And>i. closure (W i) \\<subseteq> carrier;\n         locally_finite_on carrier UNIV W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"closure (W i) \\<subseteq> carrier\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. closure (W i) \\<subseteq> carrier", "using V closure_mono"], ["proof (prove)\nusing this:\n  closure (V ?j) \\<subseteq> V (Suc ?j)\n  open (V ?j)\n  compact (closure (V ?j))\n  U ?j \\<subseteq> V ?j\n  closure (V ?j) \\<subseteq> carrier\n  ?S \\<subseteq> ?T \\<Longrightarrow> closure ?S \\<subseteq> closure ?T\n\ngoal (1 subgoal):\n 1. closure (W i) \\<subseteq> carrier", "apply (auto simp: W_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>j. closure (V j) \\<subseteq> V (Suc j);\n        \\<And>j. open (V j); \\<And>j. compact (closure (V j));\n        \\<And>j. U j \\<subseteq> V j;\n        \\<And>j. closure (V j) \\<subseteq> carrier;\n        \\<And>S T.\n           S \\<subseteq> T \\<Longrightarrow>\n           closure S \\<subseteq> closure T;\n        \\<not> i < 2; x \\<in> closure (V i - closure (V (i - 2)))\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier", "using Diff_subset subsetD"], ["proof (prove)\nusing this:\n  ?A - ?B \\<subseteq> ?A\n  \\<lbrakk>?A \\<subseteq> ?B; ?c \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?c \\<in> ?B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>j. closure (V j) \\<subseteq> V (Suc j);\n        \\<And>j. open (V j); \\<And>j. compact (closure (V j));\n        \\<And>j. U j \\<subseteq> V j;\n        \\<And>j. closure (V j) \\<subseteq> carrier;\n        \\<And>S T.\n           S \\<subseteq> T \\<Longrightarrow>\n           closure S \\<subseteq> closure T;\n        \\<not> i < 2; x \\<in> closure (V i - closure (V (i - 2)))\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier", "by blast"], ["proof (state)\nthis:\n  closure (W ?i) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. (\\<And>W.\n        \\<lbrakk>carrier = \\<Union> (range W); \\<And>i. open (W i);\n         \\<And>i. compact (closure (W i));\n         \\<And>i. closure (W i) \\<subseteq> carrier;\n         locally_finite_on carrier UNIV W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"carrier = (\\<Union>i. W i)\" \"\\<And>i. open (W i)\" \"\\<And>i. compact (closure (W i))\"\n    \"\\<And>i. closure (W i) \\<subseteq> carrier\"\n    \"locally_finite_on carrier UNIV W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (carrier = \\<Union> (range W) &&& (\\<And>i. open (W i))) &&&\n    (\\<And>i. compact (closure (W i))) &&&\n    (\\<And>i. closure (W i) \\<subseteq> carrier) &&&\n    locally_finite_on carrier UNIV W", "by fact+"], ["proof (state)\nthis:\n  carrier = \\<Union> (range W)\n  open (W ?i)\n  compact (closure (W ?i))\n  closure (W ?i) \\<subseteq> carrier\n  locally_finite_on carrier UNIV W\n\ngoal (1 subgoal):\n 1. (\\<And>W.\n        \\<lbrakk>carrier = \\<Union> (range W); \\<And>i. open (W i);\n         \\<And>i. compact (closure (W i));\n         \\<And>i. closure (W i) \\<subseteq> carrier;\n         locally_finite_on carrier UNIV W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  carrier = \\<Union> (range W)\n  open (W ?i)\n  compact (closure (W ?i))\n  closure (W ?i) \\<subseteq> carrier\n  locally_finite_on carrier UNIV W", "show ?thesis"], ["proof (prove)\nusing this:\n  carrier = \\<Union> (range W)\n  open (W ?i)\n  compact (closure (W ?i))\n  closure (W ?i) \\<subseteq> carrier\n  locally_finite_on carrier UNIV W\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}