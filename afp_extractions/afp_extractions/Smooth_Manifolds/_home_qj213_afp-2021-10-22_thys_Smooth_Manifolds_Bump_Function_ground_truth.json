{"file_name": "/home/qj213/afp-2021-10-22/thys/Smooth_Manifolds/Bump_Function.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Smooth_Manifolds", "problem_names": ["lemma f_nonpos[simp]: \"x \\<le> 0 \\<Longrightarrow> f x = 0\"", "lemma exp_inv_limit_0_right:\n  \"((\\<lambda>(t::real). exp(-inverse t)) \\<longlongrightarrow> 0) (at_right 0)\"", "lemma \"\\<forall>\\<^sub>F t in at_right 0. ((\\<lambda>x. inverse (x ^ Suc k)) has_real_derivative\n  - (inverse (t ^ Suc k) * ((1 + real k) * t ^ k) * inverse (t ^ Suc k))) (at t)\"", "lemma exp_inv_limit_0_right_gen':\n  \"((\\<lambda>(t::real). inverse (t ^ k) / exp(inverse t)) \\<longlongrightarrow> 0) (at_right 0)\"", "lemma exp_inv_limit_0_right_gen:\n  \"((\\<lambda>(t::real). exp(-inverse t) / t ^ k) \\<longlongrightarrow> 0) (at_right 0)\"", "lemma f_limit_0_right: \"(f \\<longlongrightarrow> 0) (at_right 0)\"", "lemma f_limit_0: \"(f \\<longlongrightarrow> 0) (at 0)\"", "lemma f_tendsto: \"(f \\<longlongrightarrow> f x) (at x)\"", "lemma f_continuous: \"continuous_on S f\"", "lemma continuous_on_real_polynomial_function:\n  \"continuous_on S p\" if \"real_polynomial_function p\"", "lemma f_nth_derivative_is_poly:\n  \"higher_differentiable_on {0<..} f k \\<and>\n   (\\<exists>p. real_polynomial_function p \\<and> (\\<forall>t>0. nth_derivative k f t 1 = p t / (t ^ (2 * k)) * exp(-inverse t)))\"", "lemma f_has_derivative_at_neg:\n  \" x < 0 \\<Longrightarrow> (f has_derivative (\\<lambda>x. 0)) (at x)\"", "lemma f_differentiable_at_neg:\n  \"x < 0 \\<Longrightarrow> f differentiable at x\"", "lemma frechet_derivative_f_at_neg:\n  \"x \\<in> {..<0} \\<Longrightarrow> frechet_derivative f (at x) = (\\<lambda>x. 0)\"", "lemma f_nth_derivative_lt_0:\n  \"higher_differentiable_on {..<0} f k \\<and> (\\<forall>t<0. nth_derivative k f t 1 = 0)\"", "lemma netlimit_at_left: \"netlimit (at_left x) = x\" for x::real", "lemma netlimit_at_right: \"netlimit (at_right x) = x\" for x::real", "lemma has_derivative_split_at:\n  \"(g has_derivative g') (at x)\"\n  if\n    \"(g has_derivative g') (at_left x)\"\n    \"(g has_derivative g') (at_right x)\"\n  for x::real", "lemma has_derivative_at_left_at_right':\n  \"(g has_derivative g') (at x)\"\n  if\n    \"(g has_derivative g') (at x within {..x})\"\n    \"(g has_derivative g') (at x within {x..})\"\n  for x::real", "lemma real_polynomial_function_tendsto:\n  \"(p \\<longlongrightarrow> p x) (at x within X)\" if \"real_polynomial_function p\"", "lemma f_nth_derivative_cases:\n  \"higher_differentiable_on UNIV f k \\<and>\n   (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n   (\\<exists>p. real_polynomial_function p \\<and>\n      (\\<forall>t>0. nth_derivative k f t 1 = p t / (t ^ (2 * k)) * exp(-inverse t)))\"", "lemma f_smooth_on: \"k-smooth_on S f\"\n  and f_higher_differentiable_on: \"higher_differentiable_on S f n\"", "lemma f_compose_smooth_on: \"k-smooth_on S (\\<lambda>x. f (g x))\"\n  if \"k-smooth_on S g\" \"open S\"", "lemma f_nonneg: \"f x \\<ge> 0\"", "lemma f_pos_iff: \"f x > 0 \\<longleftrightarrow> x > 0\"", "lemma f_eq_zero_iff: \"f x = 0 \\<longleftrightarrow> x \\<le> 0\"", "lemma denominator_pos: \"f (2 - t) + f (t - 1) > 0\"", "lemma denominator_nonzero: \"f (2 - t) + f (t - 1) = 0 \\<longleftrightarrow> False\"", "lemma h_range: \"0 \\<le> h t\" \"h t \\<le> 1\"", "lemma h_pos: \"t < 2 \\<Longrightarrow> 0 < h t\"\n  and h_less_one: \"1 < t \\<Longrightarrow> h t < 1\"", "lemma h_eq_0: \"h t = 0\" if \"t \\<ge> 2\"", "lemma h_eq_1: \"h t = 1\" if \"t \\<le> 1\"", "lemma h_compose_smooth_on: \"k-smooth_on S (\\<lambda>x. h (g x))\"\n  if \"k-smooth_on S g\" \"open S\"", "lemma H_range: \"0 \\<le> H x\" \"H x \\<le> 1\"", "lemma H_eq_one: \"H x = 1\" if \"x \\<in> cball 0 1\"", "lemma H_pos: \"H x > 0\" if \"x \\<in> ball 0 2\"", "lemma H_eq_zero: \"H x = 0\" if \"x \\<notin> ball 0 2\"", "lemma H_neq_zeroD: \"H x \\<noteq> 0 \\<Longrightarrow> x \\<in> ball 0 2\"", "lemma H_smooth_on: \"k-smooth_on UNIV H\"", "lemma H_compose_smooth_on: \"k-smooth_on S (\\<lambda>x. H (g x))\" if \"k-smooth_on S g\" \"open S\"\n  for g :: \"_ \\<Rightarrow> _::euclidean_space\""], "translations": [["", "lemma f_nonpos[simp]: \"x \\<le> 0 \\<Longrightarrow> f x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> 0 \\<Longrightarrow> f x = 0", "by (auto simp: f_def)"], ["", "lemma exp_inv_limit_0_right:\n  \"((\\<lambda>(t::real). exp(-inverse t)) \\<longlongrightarrow> 0) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. exp (- inverse t)) \\<longlongrightarrow> 0) (at_right 0)", "apply (rule filterlim_compose[where g = exp])"], ["proof (prove)\ngoal (2 subgoals):\n 1. (exp \\<longlongrightarrow> 0) ?F2.0\n 2. LIM x at_right 0. - inverse x :> ?F2.0", "apply (rule exp_at_bot)"], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM x at_right 0. - inverse x :> at_bot", "apply (rule filterlim_compose[where g = uminus])"], ["proof (prove)\ngoal (2 subgoals):\n 1. filterlim uminus at_bot ?F2.4\n 2. filterlim inverse ?F2.4 (at_right 0)", "apply (rule filterlim_uminus_at_bot_at_top)"], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim inverse at_top (at_right 0)", "by (rule filterlim_inverse_at_top_right)"], ["", "lemma \"\\<forall>\\<^sub>F t in at_right 0. ((\\<lambda>x. inverse (x ^ Suc k)) has_real_derivative\n  - (inverse (t ^ Suc k) * ((1 + real k) * t ^ k) * inverse (t ^ Suc k))) (at t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0.\n       ((\\<lambda>x. inverse (x ^ Suc k)) has_real_derivative\n        - (inverse (t ^ Suc k) * ((1 + real k) * t ^ k) *\n           inverse (t ^ Suc k)))\n        (at t)", "unfolding eventually_at_filter"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in nhds 0.\n       x \\<noteq> 0 \\<longrightarrow>\n       x \\<in> {0<..} \\<longrightarrow>\n       ((\\<lambda>x. inverse (x ^ Suc k)) has_real_derivative\n        - (inverse (x ^ Suc k) * ((1 + real k) * x ^ k) *\n           inverse (x ^ Suc k)))\n        (at x)", "by (auto simp del: power_Suc intro!: derivative_eq_intros eventuallyI)"], ["", "lemma exp_inv_limit_0_right_gen':\n  \"((\\<lambda>(t::real). inverse (t ^ k) / exp(inverse t)) \\<longlongrightarrow> 0) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. inverse (t ^ k) / exp (inverse t)) \\<longlongrightarrow>\n     0)\n     (at_right 0)", "proof (induct k)"], ["proof (state)\ngoal (2 subgoals):\n 1. ((\\<lambda>t. inverse (t ^ 0) / exp (inverse t)) \\<longlongrightarrow>\n     0)\n     (at_right 0)\n 2. \\<And>k.\n       ((\\<lambda>t.\n            inverse (t ^ k) / exp (inverse t)) \\<longlongrightarrow>\n        0)\n        (at_right 0) \\<Longrightarrow>\n       ((\\<lambda>t.\n            inverse (t ^ Suc k) / exp (inverse t)) \\<longlongrightarrow>\n        0)\n        (at_right 0)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. ((\\<lambda>t. inverse (t ^ 0) / exp (inverse t)) \\<longlongrightarrow>\n     0)\n     (at_right 0)\n 2. \\<And>k.\n       ((\\<lambda>t.\n            inverse (t ^ k) / exp (inverse t)) \\<longlongrightarrow>\n        0)\n        (at_right 0) \\<Longrightarrow>\n       ((\\<lambda>t.\n            inverse (t ^ Suc k) / exp (inverse t)) \\<longlongrightarrow>\n        0)\n        (at_right 0)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. inverse (t ^ 0) / exp (inverse t)) \\<longlongrightarrow>\n     0)\n     (at_right 0)", "using exp_inv_limit_0_right"], ["proof (prove)\nusing this:\n  ((\\<lambda>t. exp (- inverse t)) \\<longlongrightarrow> 0) (at_right 0)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. inverse (t ^ 0) / exp (inverse t)) \\<longlongrightarrow>\n     0)\n     (at_right 0)", "by (auto simp: exp_minus inverse_eq_divide)"], ["proof (state)\nthis:\n  ((\\<lambda>t. inverse (t ^ 0) / exp (inverse t)) \\<longlongrightarrow> 0)\n   (at_right 0)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       ((\\<lambda>t.\n            inverse (t ^ k) / exp (inverse t)) \\<longlongrightarrow>\n        0)\n        (at_right 0) \\<Longrightarrow>\n       ((\\<lambda>t.\n            inverse (t ^ Suc k) / exp (inverse t)) \\<longlongrightarrow>\n        0)\n        (at_right 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       ((\\<lambda>t.\n            inverse (t ^ k) / exp (inverse t)) \\<longlongrightarrow>\n        0)\n        (at_right 0) \\<Longrightarrow>\n       ((\\<lambda>t.\n            inverse (t ^ Suc k) / exp (inverse t)) \\<longlongrightarrow>\n        0)\n        (at_right 0)", "case (Suc k)"], ["proof (state)\nthis:\n  ((\\<lambda>t. inverse (t ^ k) / exp (inverse t)) \\<longlongrightarrow> 0)\n   (at_right 0)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       ((\\<lambda>t.\n            inverse (t ^ k) / exp (inverse t)) \\<longlongrightarrow>\n        0)\n        (at_right 0) \\<Longrightarrow>\n       ((\\<lambda>t.\n            inverse (t ^ Suc k) / exp (inverse t)) \\<longlongrightarrow>\n        0)\n        (at_right 0)", "have df: \"\\<forall>\\<^sub>F t in at_right 0. ((\\<lambda>x. inverse (x ^ Suc k)) has_real_derivative \n    - (inverse (t ^ k) * ((1 + real k)) * (inverse t ^ 2))) (at t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0.\n       ((\\<lambda>x. inverse (x ^ Suc k)) has_real_derivative\n        - (inverse (t ^ k) * (1 + real k) * (inverse t)\\<^sup>2))\n        (at t)", "unfolding eventually_at_filter"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in nhds 0.\n       x \\<noteq> 0 \\<longrightarrow>\n       x \\<in> {0<..} \\<longrightarrow>\n       ((\\<lambda>x. inverse (x ^ Suc k)) has_real_derivative\n        - (inverse (x ^ k) * (1 + real k) * (inverse x)\\<^sup>2))\n        (at x)", "apply (auto simp del: power_Suc intro!: derivative_eq_intros eventuallyI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       inverse (x ^ Suc k) * (x ^ k * inverse (x ^ Suc k)) =\n       inverse (x ^ k) * (inverse x)\\<^sup>2", "by (auto simp: power2_eq_square)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0.\n     ((\\<lambda>x. inverse (x ^ Suc k)) has_real_derivative\n      - (inverse (t ^ k) * (1 + real k) * (inverse t)\\<^sup>2))\n      (at t)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       ((\\<lambda>t.\n            inverse (t ^ k) / exp (inverse t)) \\<longlongrightarrow>\n        0)\n        (at_right 0) \\<Longrightarrow>\n       ((\\<lambda>t.\n            inverse (t ^ Suc k) / exp (inverse t)) \\<longlongrightarrow>\n        0)\n        (at_right 0)", "have dg: \"\\<forall>\\<^sub>F t in at_right 0. ((\\<lambda>x. exp (inverse x)) has_real_derivative\n    - (exp (inverse t) * (inverse t ^ 2))) (at t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0.\n       ((\\<lambda>x. exp (inverse x)) has_real_derivative\n        - (exp (inverse t) * (inverse t)\\<^sup>2))\n        (at t)", "unfolding eventually_at_filter"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in nhds 0.\n       x \\<noteq> 0 \\<longrightarrow>\n       x \\<in> {0<..} \\<longrightarrow>\n       ((\\<lambda>x. exp (inverse x)) has_real_derivative\n        - (exp (inverse x) * (inverse x)\\<^sup>2))\n        (at x)", "by (auto simp del: power_Suc intro!: derivative_eq_intros eventuallyI simp: power2_eq_square)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0.\n     ((\\<lambda>x. exp (inverse x)) has_real_derivative\n      - (exp (inverse t) * (inverse t)\\<^sup>2))\n      (at t)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       ((\\<lambda>t.\n            inverse (t ^ k) / exp (inverse t)) \\<longlongrightarrow>\n        0)\n        (at_right 0) \\<Longrightarrow>\n       ((\\<lambda>t.\n            inverse (t ^ Suc k) / exp (inverse t)) \\<longlongrightarrow>\n        0)\n        (at_right 0)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         inverse (t ^ Suc k) / exp (inverse t)) \\<longlongrightarrow>\n     0)\n     (at_right 0)", "apply (rule lhopital_right_0_at_top [OF _ _ df dg])"], ["proof (prove)\ngoal (3 subgoals):\n 1. LIM t at_right 0. exp (inverse t) :> at_top\n 2. \\<forall>\\<^sub>F t in at_right 0.\n       - (exp (inverse t) * (inverse t)\\<^sup>2) \\<noteq> 0\n 3. ((\\<lambda>t.\n         - (inverse (t ^ k) * (1 + real k) * (inverse t)\\<^sup>2) /\n         - (exp (inverse t) * (inverse t)\\<^sup>2)) \\<longlongrightarrow>\n     0)\n     (at_right 0)", "apply (rule filterlim_compose[where g = exp])"], ["proof (prove)\ngoal (4 subgoals):\n 1. filterlim exp at_top ?F2.6\n 2. filterlim inverse ?F2.6 (at_right 0)\n 3. \\<forall>\\<^sub>F t in at_right 0.\n       - (exp (inverse t) * (inverse t)\\<^sup>2) \\<noteq> 0\n 4. ((\\<lambda>t.\n         - (inverse (t ^ k) * (1 + real k) * (inverse t)\\<^sup>2) /\n         - (exp (inverse t) * (inverse t)\\<^sup>2)) \\<longlongrightarrow>\n     0)\n     (at_right 0)", "apply (rule exp_at_top)"], ["proof (prove)\ngoal (3 subgoals):\n 1. filterlim inverse at_top (at_right 0)\n 2. \\<forall>\\<^sub>F t in at_right 0.\n       - (exp (inverse t) * (inverse t)\\<^sup>2) \\<noteq> 0\n 3. ((\\<lambda>t.\n         - (inverse (t ^ k) * (1 + real k) * (inverse t)\\<^sup>2) /\n         - (exp (inverse t) * (inverse t)\\<^sup>2)) \\<longlongrightarrow>\n     0)\n     (at_right 0)", "apply (rule filterlim_inverse_at_top_right)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F t in at_right 0.\n       - (exp (inverse t) * (inverse t)\\<^sup>2) \\<noteq> 0\n 2. ((\\<lambda>t.\n         - (inverse (t ^ k) * (1 + real k) * (inverse t)\\<^sup>2) /\n         - (exp (inverse t) * (inverse t)\\<^sup>2)) \\<longlongrightarrow>\n     0)\n     (at_right 0)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0.\n       - (exp (inverse t) * (inverse t)\\<^sup>2) \\<noteq> 0", "by (auto simp: eventually_at_filter)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         - (inverse (t ^ k) * (1 + real k) * (inverse t)\\<^sup>2) /\n         - (exp (inverse t) * (inverse t)\\<^sup>2)) \\<longlongrightarrow>\n     0)\n     (at_right 0)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         - (inverse (t ^ k) * (1 + real k) * (inverse t)\\<^sup>2) /\n         - (exp (inverse t) * (inverse t)\\<^sup>2)) \\<longlongrightarrow>\n     0)\n     (at_right 0)", "apply (rule Lim_transform_eventually[where f = \"\\<lambda>x. (1 + real k) * (inverse (x ^ k) / exp (inverse x))\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((\\<lambda>x.\n         (1 + real k) *\n         (inverse (x ^ k) / exp (inverse x))) \\<longlongrightarrow>\n     0)\n     (at_right 0)\n 2. \\<forall>\\<^sub>F x in at_right 0.\n       (1 + real k) * (inverse (x ^ k) / exp (inverse x)) =\n       - (inverse (x ^ k) * (1 + real k) * (inverse x)\\<^sup>2) /\n       - (exp (inverse x) * (inverse x)\\<^sup>2)", "using Suc.hyps tendsto_mult_right_zero"], ["proof (prove)\nusing this:\n  ((\\<lambda>t. inverse (t ^ k) / exp (inverse t)) \\<longlongrightarrow> 0)\n   (at_right 0)\n  (?f \\<longlongrightarrow> (0::?'a)) ?F \\<Longrightarrow>\n  ((\\<lambda>x. ?c * ?f x) \\<longlongrightarrow> (0::?'a)) ?F\n\ngoal (2 subgoals):\n 1. ((\\<lambda>x.\n         (1 + real k) *\n         (inverse (x ^ k) / exp (inverse x))) \\<longlongrightarrow>\n     0)\n     (at_right 0)\n 2. \\<forall>\\<^sub>F x in at_right 0.\n       (1 + real k) * (inverse (x ^ k) / exp (inverse x)) =\n       - (inverse (x ^ k) * (1 + real k) * (inverse x)\\<^sup>2) /\n       - (exp (inverse x) * (inverse x)\\<^sup>2)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_right 0.\n       (1 + real k) * (inverse (x ^ k) / exp (inverse x)) =\n       - (inverse (x ^ k) * (1 + real k) * (inverse x)\\<^sup>2) /\n       - (exp (inverse x) * (inverse x)\\<^sup>2)", "by (auto simp: eventually_at_filter)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ((\\<lambda>t. inverse (t ^ Suc k) / exp (inverse t)) \\<longlongrightarrow>\n   0)\n   (at_right 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma exp_inv_limit_0_right_gen:\n  \"((\\<lambda>(t::real). exp(-inverse t) / t ^ k) \\<longlongrightarrow> 0) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. exp (- inverse t) / t ^ k) \\<longlongrightarrow> 0)\n     (at_right 0)", "using exp_inv_limit_0_right_gen'[of k]"], ["proof (prove)\nusing this:\n  ((\\<lambda>t. inverse (t ^ k) / exp (inverse t)) \\<longlongrightarrow> 0)\n   (at_right 0)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. exp (- inverse t) / t ^ k) \\<longlongrightarrow> 0)\n     (at_right 0)", "by (metis (no_types, lifting) Groups.mult_ac(2) Lim_cong_within divide_inverse exp_minus)"], ["", "lemma f_limit_0_right: \"(f \\<longlongrightarrow> 0) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> 0) (at_right 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> 0) (at_right 0)", "have \"\\<forall>\\<^sub>F t in at_right 0. (t::real) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually ((<) 0) (at_right 0)", "by (rule eventually_at_right_less)"], ["proof (state)\nthis:\n  eventually ((<) 0) (at_right 0)\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> 0) (at_right 0)", "then"], ["proof (chain)\npicking this:\n  eventually ((<) 0) (at_right 0)", "have \"\\<forall>\\<^sub>F t in at_right 0. exp(-inverse t) = f t\""], ["proof (prove)\nusing this:\n  eventually ((<) 0) (at_right 0)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right 0. exp (- inverse t) = f t", "by (eventually_elim) (auto simp: f_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. exp (- inverse t) = f t\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> 0) (at_right 0)", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right 0. exp (- inverse t) = f t\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> 0) (at_right 0)", "have \"((\\<lambda>(t::real). exp(-inverse t)) \\<longlongrightarrow> 0) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. exp (- inverse t)) \\<longlongrightarrow> 0) (at_right 0)", "by (rule exp_inv_limit_0_right)"], ["proof (state)\nthis:\n  ((\\<lambda>t. exp (- inverse t)) \\<longlongrightarrow> 0) (at_right 0)\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> 0) (at_right 0)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F t in at_right 0. exp (- inverse t) = f t\n  ((\\<lambda>t. exp (- inverse t)) \\<longlongrightarrow> 0) (at_right 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at_right 0. exp (- inverse t) = f t\n  ((\\<lambda>t. exp (- inverse t)) \\<longlongrightarrow> 0) (at_right 0)\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> 0) (at_right 0)", "by (blast intro: Lim_transform_eventually)"], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> 0) (at_right 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma f_limit_0: \"(f \\<longlongrightarrow> 0) (at 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<midarrow>0\\<rightarrow> 0", "using _ f_limit_0_right"], ["proof (prove)\nusing this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  (f \\<longlongrightarrow> 0) (at_right 0)\n\ngoal (1 subgoal):\n 1. f \\<midarrow>0\\<rightarrow> 0", "proof (rule filterlim_split_at_real)"], ["proof (state)\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> 0) (at_left 0)", "have \"\\<forall>\\<^sub>F t in at_left 0. 0 = f t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_left 0. 0 = f t", "by (auto simp: f_def eventually_at_filter)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_left 0. 0 = f t\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> 0) (at_left 0)", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F t in at_left 0. 0 = f t", "show \"(f \\<longlongrightarrow> 0) (at_left 0)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at_left 0. 0 = f t\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> 0) (at_left 0)", "by (blast intro: Lim_transform_eventually)"], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> 0) (at_left 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma f_tendsto: \"(f \\<longlongrightarrow> f x) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<midarrow>x\\<rightarrow> f x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<midarrow>x\\<rightarrow> f x", "consider \"x = 0\" | \"x < 0\" | \"x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = 0 \\<Longrightarrow> thesis; x < 0 \\<Longrightarrow> thesis;\n     0 < x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by arith"], ["proof (state)\nthis:\n  \\<lbrakk>x = 0 \\<Longrightarrow> ?thesis; x < 0 \\<Longrightarrow> ?thesis;\n   0 < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. f \\<midarrow>x\\<rightarrow> f x", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x = 0 \\<Longrightarrow> ?thesis; x < 0 \\<Longrightarrow> ?thesis;\n   0 < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = 0 \\<Longrightarrow> ?thesis; x < 0 \\<Longrightarrow> ?thesis;\n   0 < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. f \\<midarrow>x\\<rightarrow> f x", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. x = 0 \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x\n 2. x < 0 \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x\n 3. 0 < x \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "case 1"], ["proof (state)\nthis:\n  x = 0\n\ngoal (3 subgoals):\n 1. x = 0 \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x\n 2. x < 0 \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x\n 3. 0 < x \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "then"], ["proof (chain)\npicking this:\n  x = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  x = 0\n\ngoal (1 subgoal):\n 1. f \\<midarrow>x\\<rightarrow> f x", "by (auto simp: f_limit_0 f_def)"], ["proof (state)\nthis:\n  f \\<midarrow>x\\<rightarrow> f x\n\ngoal (2 subgoals):\n 1. x < 0 \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x\n 2. 0 < x \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x < 0 \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x\n 2. 0 < x \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "case 2"], ["proof (state)\nthis:\n  x < 0\n\ngoal (2 subgoals):\n 1. x < 0 \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x\n 2. 0 < x \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "have \"\\<forall>\\<^sub>F t in at x. t < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at x. t < 0", "apply (rule order_tendstoD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lambda>x. x) \\<midarrow>x\\<rightarrow> ?y\n 2. ?y < 0", "by (rule tendsto_intros) fact"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at x. t < 0\n\ngoal (2 subgoals):\n 1. x < 0 \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x\n 2. 0 < x \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F t in at x. t < 0", "have \"\\<forall>\\<^sub>F t in at x. 0 = f t\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at x. t < 0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at x. 0 = f t", "by (eventually_elim) (auto simp: f_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at x. 0 = f t\n\ngoal (2 subgoals):\n 1. x < 0 \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x\n 2. 0 < x \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F t in at x. 0 = f t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at x. 0 = f t\n\ngoal (1 subgoal):\n 1. f \\<midarrow>x\\<rightarrow> f x", "using \\<open>x < 0\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at x. 0 = f t\n  x < 0\n\ngoal (1 subgoal):\n 1. f \\<midarrow>x\\<rightarrow> f x", "by (auto simp: f_def intro: Lim_transform_eventually)"], ["proof (state)\nthis:\n  f \\<midarrow>x\\<rightarrow> f x\n\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "case 3"], ["proof (state)\nthis:\n  0 < x\n\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "have \"\\<forall>\\<^sub>F t in at x. t > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually ((<) 0) (at x)", "apply (rule order_tendstoD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lambda>x. x) \\<midarrow>x\\<rightarrow> ?y\n 2. 0 < ?y", "by (rule tendsto_intros) fact"], ["proof (state)\nthis:\n  eventually ((<) 0) (at x)\n\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "then"], ["proof (chain)\npicking this:\n  eventually ((<) 0) (at x)", "have \"\\<forall>\\<^sub>F t in at x. exp(-inverse t) = f t\""], ["proof (prove)\nusing this:\n  eventually ((<) 0) (at x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at x. exp (- inverse t) = f t", "by (eventually_elim) (auto simp: f_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at x. exp (- inverse t) = f t\n\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at x. exp (- inverse t) = f t\n\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "have \"(\\<lambda>t. exp (- inverse t)) \\<midarrow>x\\<rightarrow> f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. exp (- inverse t)) \\<midarrow>x\\<rightarrow> f x", "using \\<open>x > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. exp (- inverse t)) \\<midarrow>x\\<rightarrow> f x", "by (auto simp: f_def tendsto_intros )"], ["proof (state)\nthis:\n  (\\<lambda>t. exp (- inverse t)) \\<midarrow>x\\<rightarrow> f x\n\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F t in at x. exp (- inverse t) = f t\n  (\\<lambda>t. exp (- inverse t)) \\<midarrow>x\\<rightarrow> f x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at x. exp (- inverse t) = f t\n  (\\<lambda>t. exp (- inverse t)) \\<midarrow>x\\<rightarrow> f x\n\ngoal (1 subgoal):\n 1. f \\<midarrow>x\\<rightarrow> f x", "by (blast intro: Lim_transform_eventually)"], ["proof (state)\nthis:\n  f \\<midarrow>x\\<rightarrow> f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f \\<midarrow>x\\<rightarrow> f x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma f_continuous: \"continuous_on S f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on S f", "using f_tendsto continuous_on continuous_on_subset subset_UNIV"], ["proof (prove)\nusing this:\n  f \\<midarrow>?x\\<rightarrow> f ?x\n  continuous_on ?s ?f =\n  (\\<forall>x\\<in>?s. (?f \\<longlongrightarrow> ?f x) (at x within ?s))\n  \\<lbrakk>continuous_on ?s ?f; ?t \\<subseteq> ?s\\<rbrakk>\n  \\<Longrightarrow> continuous_on ?t ?f\n  ?A \\<subseteq> UNIV\n\ngoal (1 subgoal):\n 1. continuous_on S f", "by metis"], ["", "lemma continuous_on_real_polynomial_function:\n  \"continuous_on S p\" if \"real_polynomial_function p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on S p", "using that"], ["proof (prove)\nusing this:\n  real_polynomial_function p\n\ngoal (1 subgoal):\n 1. continuous_on S p", "by induction (auto intro: continuous_intros linear_continuous_on)"], ["", "lemma f_nth_derivative_is_poly:\n  \"higher_differentiable_on {0<..} f k \\<and>\n   (\\<exists>p. real_polynomial_function p \\<and> (\\<forall>t>0. nth_derivative k f t 1 = p t / (t ^ (2 * k)) * exp(-inverse t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. higher_differentiable_on {0<..} f k \\<and>\n    (\\<exists>p.\n        real_polynomial_function p \\<and>\n        (\\<forall>t>0.\n            nth_derivative k f t 1 = p t / t ^ (2 * k) * exp (- inverse t)))", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. higher_differentiable_on {0<..} f 0 \\<and>\n    (\\<exists>p.\n        real_polynomial_function p \\<and>\n        (\\<forall>t>0.\n            nth_derivative 0 f t 1 = p t / t ^ (2 * 0) * exp (- inverse t)))\n 2. \\<And>k.\n       higher_differentiable_on {0<..} f k \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on {0<..} f (Suc k) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. higher_differentiable_on {0<..} f 0 \\<and>\n    (\\<exists>p.\n        real_polynomial_function p \\<and>\n        (\\<forall>t>0.\n            nth_derivative 0 f t 1 = p t / t ^ (2 * 0) * exp (- inverse t)))\n 2. \\<And>k.\n       higher_differentiable_on {0<..} f k \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on {0<..} f (Suc k) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. higher_differentiable_on {0<..} f 0 \\<and>\n    (\\<exists>p.\n        real_polynomial_function p \\<and>\n        (\\<forall>t>0.\n            nth_derivative 0 f t 1 = p t / t ^ (2 * 0) * exp (- inverse t)))", "apply (auto simp: higher_differentiable_on.simps f_continuous)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p.\n       real_polynomial_function p \\<and>\n       (\\<forall>t>0. f t = p t * exp (- inverse t))", "by (auto simp: f_def)"], ["proof (state)\nthis:\n  higher_differentiable_on {0<..} f 0 \\<and>\n  (\\<exists>p.\n      real_polynomial_function p \\<and>\n      (\\<forall>t>0.\n          nth_derivative 0 f t 1 = p t / t ^ (2 * 0) * exp (- inverse t)))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on {0<..} f k \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on {0<..} f (Suc k) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on {0<..} f k \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on {0<..} f (Suc k) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "case (Suc k)"], ["proof (state)\nthis:\n  higher_differentiable_on {0<..} f k \\<and>\n  (\\<exists>p.\n      real_polynomial_function p \\<and>\n      (\\<forall>t>0.\n          nth_derivative k f t 1 = p t / t ^ (2 * k) * exp (- inverse t)))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on {0<..} f k \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on {0<..} f (Suc k) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "obtain p where fk: \"higher_differentiable_on {0<..} f k\"\n    and p1: \"real_polynomial_function p\"\n    and p2: \"\\<forall>t>0. nth_derivative k f t 1 = p t / t ^ (2 * k) * exp (- inverse t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>higher_differentiable_on {0<..} f k;\n         real_polynomial_function p;\n         \\<forall>t>0.\n            nth_derivative k f t 1 =\n            p t / t ^ (2 * k) * exp (- inverse t)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Suc"], ["proof (prove)\nusing this:\n  higher_differentiable_on {0<..} f k \\<and>\n  (\\<exists>p.\n      real_polynomial_function p \\<and>\n      (\\<forall>t>0.\n          nth_derivative k f t 1 = p t / t ^ (2 * k) * exp (- inverse t)))\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>higher_differentiable_on {0<..} f k;\n         real_polynomial_function p;\n         \\<forall>t>0.\n            nth_derivative k f t 1 =\n            p t / t ^ (2 * k) * exp (- inverse t)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  higher_differentiable_on {0<..} f k\n  real_polynomial_function p\n  \\<forall>t>0.\n     nth_derivative k f t 1 = p t / t ^ (2 * k) * exp (- inverse t)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on {0<..} f k \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on {0<..} f (Suc k) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "obtain p' where p'1: \"real_polynomial_function p'\"\n    and p'2: \"\\<forall>t. (p has_real_derivative (p' t)) (at t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        \\<lbrakk>real_polynomial_function p';\n         \\<forall>t. (p has_real_derivative p' t) (at t)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using has_real_derivative_polynomial_function[of p] p1"], ["proof (prove)\nusing this:\n  real_polynomial_function p \\<Longrightarrow>\n  \\<exists>p'.\n     real_polynomial_function p' \\<and>\n     (\\<forall>x. (p has_real_derivative p' x) (at x))\n  real_polynomial_function p\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        \\<lbrakk>real_polynomial_function p';\n         \\<forall>t. (p has_real_derivative p' t) (at t)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  real_polynomial_function p'\n  \\<forall>t. (p has_real_derivative p' t) (at t)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on {0<..} f k \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on {0<..} f (Suc k) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "define rp where \"rp t = (t\\<^sup>2 * p' t - 2 * real k * t * p t + p t)\" for t"], ["proof (state)\nthis:\n  rp ?t = ?t\\<^sup>2 * p' ?t - 2 * real k * ?t * p ?t + p ?t\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on {0<..} f k \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on {0<..} f (Suc k) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "have rp: \"real_polynomial_function rp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_polynomial_function rp", "unfolding rp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_polynomial_function\n     (\\<lambda>t. t\\<^sup>2 * p' t - 2 * real k * t * p t + p t)", "by (auto intro!: real_polynomial_function.intros(2-) real_polynomial_function_diff\n        p1 p'1 simp: power2_eq_square)"], ["proof (state)\nthis:\n  real_polynomial_function rp\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on {0<..} f k \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on {0<..} f (Suc k) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "moreover"], ["proof (state)\nthis:\n  real_polynomial_function rp\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on {0<..} f k \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on {0<..} f (Suc k) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "have fk': \"(\\<lambda>x. nth_derivative k f x 1) differentiable at t\" (is ?a)\n    \"frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1 =\n        rp t * (exp (-inverse t) / t^(2*k+2))\" (is ?b)\n    if \"0 < t\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. nth_derivative k f x 1) differentiable at t &&&\n    frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1 =\n    rp t * (exp (- inverse t) / t ^ (2 * k + 2))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. nth_derivative k f x 1) differentiable at t\n 2. frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1 =\n    rp t * (exp (- inverse t) / t ^ (2 * k + 2))", "from p'2 that"], ["proof (chain)\npicking this:\n  \\<forall>t. (p has_real_derivative p' t) (at t)\n  0 < t", "have dp: \"(p has_derivative ((*) (p' t))) (at t within {0<..})\""], ["proof (prove)\nusing this:\n  \\<forall>t. (p has_real_derivative p' t) (at t)\n  0 < t\n\ngoal (1 subgoal):\n 1. (p has_derivative (*) (p' t)) (at t within {0<..})", "by (auto simp: at_within_open[of _ \"{0<..}\"] has_field_derivative_def ac_simps)"], ["proof (state)\nthis:\n  (p has_derivative (*) (p' t)) (at t within {0<..})\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. nth_derivative k f x 1) differentiable at t\n 2. frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1 =\n    rp t * (exp (- inverse t) / t ^ (2 * k + 2))", "have \"((\\<lambda>t. p t / t ^ (2 * k) * exp (- inverse t)) has_derivative\n      (\\<lambda>v. v * rp t * (exp (-inverse t) / t^(2*k+2)))) (at t within {0<..})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. p t / t ^ (2 * k) * exp (- inverse t)) has_derivative\n     (\\<lambda>v. v * rp t * (exp (- inverse t) / t ^ (2 * k + 2))))\n     (at t within {0<..})", "using that"], ["proof (prove)\nusing this:\n  0 < t\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. p t / t ^ (2 * k) * exp (- inverse t)) has_derivative\n     (\\<lambda>v. v * rp t * (exp (- inverse t) / t ^ (2 * k + 2))))\n     (at t within {0<..})", "apply (auto intro!: derivative_eq_intros dp ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>h.\n       0 < t \\<Longrightarrow>\n       ((p t * (inverse t * h * inverse t * exp (- inverse t)) +\n         p' t * h * exp (- inverse t)) *\n        t ^ (2 * k) -\n        p t * exp (- inverse t) * (2 * real k * h * t ^ (2 * k - Suc 0))) /\n       (t ^ (2 * k) * t ^ (2 * k)) =\n       h * rp t * exp (- inverse t) / (t * (t * t ^ (2 * k)))", "apply (simp add: divide_simps algebra_simps rp_def power2_eq_square)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>h.\n       0 < t \\<Longrightarrow>\n       h = 0 \\<or>\n       k = 0 \\<or> p t = 0 \\<or> t ^ (k * 2) = t * t ^ (k * 2 - Suc 0)", "by (metis Suc_pred mult_is_0 neq0_conv power_Suc zero_neq_numeral)"], ["proof (state)\nthis:\n  ((\\<lambda>t. p t / t ^ (2 * k) * exp (- inverse t)) has_derivative\n   (\\<lambda>v. v * rp t * (exp (- inverse t) / t ^ (2 * k + 2))))\n   (at t within {0<..})\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. nth_derivative k f x 1) differentiable at t\n 2. frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1 =\n    rp t * (exp (- inverse t) / t ^ (2 * k + 2))", "then"], ["proof (chain)\npicking this:\n  ((\\<lambda>t. p t / t ^ (2 * k) * exp (- inverse t)) has_derivative\n   (\\<lambda>v. v * rp t * (exp (- inverse t) / t ^ (2 * k + 2))))\n   (at t within {0<..})", "have \"((\\<lambda>x. nth_derivative k f x 1) has_derivative\n      (\\<lambda>v. v * rp t * (exp (-inverse t) / t^(2*k+2)))) (at t within {0<..})\""], ["proof (prove)\nusing this:\n  ((\\<lambda>t. p t / t ^ (2 * k) * exp (- inverse t)) has_derivative\n   (\\<lambda>v. v * rp t * (exp (- inverse t) / t ^ (2 * k + 2))))\n   (at t within {0<..})\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. nth_derivative k f x 1) has_derivative\n     (\\<lambda>v. v * rp t * (exp (- inverse t) / t ^ (2 * k + 2))))\n     (at t within {0<..})", "apply (rule has_derivative_transform_within[OF _ zero_less_one])"], ["proof (prove)\ngoal (2 subgoals):\n 1. t \\<in> {0<..}\n 2. \\<And>x'.\n       \\<lbrakk>x' \\<in> {0<..}; dist x' t < 1\\<rbrakk>\n       \\<Longrightarrow> p x' / x' ^ (2 * k) * exp (- inverse x') =\n                         nth_derivative k f x' 1", "using that p2"], ["proof (prove)\nusing this:\n  0 < t\n  \\<forall>t>0.\n     nth_derivative k f t 1 = p t / t ^ (2 * k) * exp (- inverse t)\n\ngoal (2 subgoals):\n 1. t \\<in> {0<..}\n 2. \\<And>x'.\n       \\<lbrakk>x' \\<in> {0<..}; dist x' t < 1\\<rbrakk>\n       \\<Longrightarrow> p x' / x' ^ (2 * k) * exp (- inverse x') =\n                         nth_derivative k f x' 1", "by (auto simp: )"], ["proof (state)\nthis:\n  ((\\<lambda>x. nth_derivative k f x 1) has_derivative\n   (\\<lambda>v. v * rp t * (exp (- inverse t) / t ^ (2 * k + 2))))\n   (at t within {0<..})\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. nth_derivative k f x 1) differentiable at t\n 2. frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1 =\n    rp t * (exp (- inverse t) / t ^ (2 * k + 2))", "then"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. nth_derivative k f x 1) has_derivative\n   (\\<lambda>v. v * rp t * (exp (- inverse t) / t ^ (2 * k + 2))))\n   (at t within {0<..})", "have \"((\\<lambda>x. nth_derivative k f x 1) has_derivative\n      (\\<lambda>v. v * rp t * (exp (-inverse t) / t^(2*k+2)))) (at t)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. nth_derivative k f x 1) has_derivative\n   (\\<lambda>v. v * rp t * (exp (- inverse t) / t ^ (2 * k + 2))))\n   (at t within {0<..})\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. nth_derivative k f x 1) has_derivative\n     (\\<lambda>v. v * rp t * (exp (- inverse t) / t ^ (2 * k + 2))))\n     (at t)", "using that"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. nth_derivative k f x 1) has_derivative\n   (\\<lambda>v. v * rp t * (exp (- inverse t) / t ^ (2 * k + 2))))\n   (at t within {0<..})\n  0 < t\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. nth_derivative k f x 1) has_derivative\n     (\\<lambda>v. v * rp t * (exp (- inverse t) / t ^ (2 * k + 2))))\n     (at t)", "by (auto simp: at_within_open[of _ \"{0<..}\"])"], ["proof (state)\nthis:\n  ((\\<lambda>x. nth_derivative k f x 1) has_derivative\n   (\\<lambda>v. v * rp t * (exp (- inverse t) / t ^ (2 * k + 2))))\n   (at t)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. nth_derivative k f x 1) differentiable at t\n 2. frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1 =\n    rp t * (exp (- inverse t) / t ^ (2 * k + 2))", "from frechet_derivative_at'[OF this] this"], ["proof (chain)\npicking this:\n  frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) =\n  (\\<lambda>v. v * rp t * (exp (- inverse t) / t ^ (2 * k + 2)))\n  ((\\<lambda>x. nth_derivative k f x 1) has_derivative\n   (\\<lambda>v. v * rp t * (exp (- inverse t) / t ^ (2 * k + 2))))\n   (at t)", "show ?a ?b"], ["proof (prove)\nusing this:\n  frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) =\n  (\\<lambda>v. v * rp t * (exp (- inverse t) / t ^ (2 * k + 2)))\n  ((\\<lambda>x. nth_derivative k f x 1) has_derivative\n   (\\<lambda>v. v * rp t * (exp (- inverse t) / t ^ (2 * k + 2))))\n   (at t)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. nth_derivative k f x 1) differentiable at t &&&\n    frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1 =\n    rp t * (exp (- inverse t) / t ^ (2 * k + 2))", "by (auto simp: differentiable_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. nth_derivative k f x 1) differentiable at t\n  frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1 =\n  rp t * (exp (- inverse t) / t ^ (2 * k + 2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < ?t \\<Longrightarrow>\n  (\\<lambda>x. nth_derivative k f x 1) differentiable at ?t\n  0 < ?t \\<Longrightarrow>\n  frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at ?t) 1 =\n  rp ?t * (exp (- inverse ?t) / ?t ^ (2 * k + 2))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on {0<..} f k \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on {0<..} f (Suc k) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "have hdS: \"higher_differentiable_on {0<..} f (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. higher_differentiable_on {0<..} f (Suc k)", "apply (subst higher_differentiable_on_real_Suc')"], ["proof (prove)\ngoal (2 subgoals):\n 1. open {0<..}\n 2. (\\<forall>v.\n        continuous_on {0<..}\n         (\\<lambda>x. nth_derivative (Suc k) f x 1)) \\<and>\n    (\\<forall>x\\<in>{0<..}.\n        \\<forall>v.\n           (\\<lambda>x. nth_derivative k f x 1) differentiable at x) \\<and>\n    higher_differentiable_on {0<..} f k", "apply (auto simp: fk fk' frechet_derivative_nth_derivative_commute[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {0<..}\n     (\\<lambda>x.\n         frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at x) 1)", "apply (subst continuous_on_cong[OF refl])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..} \\<Longrightarrow>\n       frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at x) 1 =\n       ?g9 x\n 2. continuous_on {0<..} ?g9", "apply (rule fk')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> {0<..} \\<Longrightarrow> 0 < x\n 2. continuous_on {0<..}\n     (\\<lambda>x. rp x * (exp (- inverse x) / x ^ (2 * k + 2)))", "by (auto intro!: continuous_intros p'1 p1 rp\n        intro: continuous_on_real_polynomial_function)"], ["proof (state)\nthis:\n  higher_differentiable_on {0<..} f (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on {0<..} f k \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on {0<..} f (Suc k) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "moreover"], ["proof (state)\nthis:\n  higher_differentiable_on {0<..} f (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on {0<..} f k \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on {0<..} f (Suc k) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "have \"nth_derivative (Suc k) f t 1 = rp t / t ^ (2 * (Suc k)) * exp (- inverse t)\"\n    if \"t > 0\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_derivative (Suc k) f t 1 =\n    rp t / t ^ (2 * Suc k) * exp (- inverse t)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nth_derivative (Suc k) f t 1 =\n    rp t / t ^ (2 * Suc k) * exp (- inverse t)", "have \"nth_derivative (Suc k) f t 1 = frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_derivative (Suc k) f t 1 =\n    frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1", "by (simp add: frechet_derivative_nth_derivative_commute)"], ["proof (state)\nthis:\n  nth_derivative (Suc k) f t 1 =\n  frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1\n\ngoal (1 subgoal):\n 1. nth_derivative (Suc k) f t 1 =\n    rp t / t ^ (2 * Suc k) * exp (- inverse t)", "also"], ["proof (state)\nthis:\n  nth_derivative (Suc k) f t 1 =\n  frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1\n\ngoal (1 subgoal):\n 1. nth_derivative (Suc k) f t 1 =\n    rp t / t ^ (2 * Suc k) * exp (- inverse t)", "have \"\\<dots> = rp t / t^(2*k+2) * (exp (-inverse t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1 =\n    rp t / t ^ (2 * k + 2) * exp (- inverse t)", "using fk'[OF \\<open>t > 0\\<close>]"], ["proof (prove)\nusing this:\n  (\\<lambda>x. nth_derivative k f x 1) differentiable at t\n  frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1 =\n  rp t * (exp (- inverse t) / t ^ (2 * k + 2))\n\ngoal (1 subgoal):\n 1. frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1 =\n    rp t / t ^ (2 * k + 2) * exp (- inverse t)", "by simp"], ["proof (state)\nthis:\n  frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1 =\n  rp t / t ^ (2 * k + 2) * exp (- inverse t)\n\ngoal (1 subgoal):\n 1. nth_derivative (Suc k) f t 1 =\n    rp t / t ^ (2 * Suc k) * exp (- inverse t)", "finally"], ["proof (chain)\npicking this:\n  nth_derivative (Suc k) f t 1 = rp t / t ^ (2 * k + 2) * exp (- inverse t)", "show ?thesis"], ["proof (prove)\nusing this:\n  nth_derivative (Suc k) f t 1 = rp t / t ^ (2 * k + 2) * exp (- inverse t)\n\ngoal (1 subgoal):\n 1. nth_derivative (Suc k) f t 1 =\n    rp t / t ^ (2 * Suc k) * exp (- inverse t)", "by simp"], ["proof (state)\nthis:\n  nth_derivative (Suc k) f t 1 = rp t / t ^ (2 * Suc k) * exp (- inverse t)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < ?t \\<Longrightarrow>\n  nth_derivative (Suc k) f ?t 1 =\n  rp ?t / ?t ^ (2 * Suc k) * exp (- inverse ?t)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on {0<..} f k \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on {0<..} f (Suc k) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "ultimately"], ["proof (chain)\npicking this:\n  real_polynomial_function rp\n  higher_differentiable_on {0<..} f (Suc k)\n  0 < ?t \\<Longrightarrow>\n  nth_derivative (Suc k) f ?t 1 =\n  rp ?t / ?t ^ (2 * Suc k) * exp (- inverse ?t)", "show ?case"], ["proof (prove)\nusing this:\n  real_polynomial_function rp\n  higher_differentiable_on {0<..} f (Suc k)\n  0 < ?t \\<Longrightarrow>\n  nth_derivative (Suc k) f ?t 1 =\n  rp ?t / ?t ^ (2 * Suc k) * exp (- inverse ?t)\n\ngoal (1 subgoal):\n 1. higher_differentiable_on {0<..} f (Suc k) \\<and>\n    (\\<exists>p.\n        real_polynomial_function p \\<and>\n        (\\<forall>t>0.\n            nth_derivative (Suc k) f t 1 =\n            p t / t ^ (2 * Suc k) * exp (- inverse t)))", "by blast"], ["proof (state)\nthis:\n  higher_differentiable_on {0<..} f (Suc k) \\<and>\n  (\\<exists>p.\n      real_polynomial_function p \\<and>\n      (\\<forall>t>0.\n          nth_derivative (Suc k) f t 1 =\n          p t / t ^ (2 * Suc k) * exp (- inverse t)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma f_has_derivative_at_neg:\n  \" x < 0 \\<Longrightarrow> (f has_derivative (\\<lambda>x. 0)) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < 0 \\<Longrightarrow> (f has_derivative (\\<lambda>x. 0)) (at x)", "by (rule has_derivative_transform_within_open[where f=\"\\<lambda>x. 0\" and s=\"{..<0}\"])\n    (auto simp: f_def)"], ["", "lemma f_differentiable_at_neg:\n  \"x < 0 \\<Longrightarrow> f differentiable at x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < 0 \\<Longrightarrow> f differentiable at x", "using f_has_derivative_at_neg"], ["proof (prove)\nusing this:\n  ?x < 0 \\<Longrightarrow> (f has_derivative (\\<lambda>x. 0)) (at ?x)\n\ngoal (1 subgoal):\n 1. x < 0 \\<Longrightarrow> f differentiable at x", "by (auto simp: differentiable_def)"], ["", "lemma frechet_derivative_f_at_neg:\n  \"x \\<in> {..<0} \\<Longrightarrow> frechet_derivative f (at x) = (\\<lambda>x. 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {..<0} \\<Longrightarrow>\n    frechet_derivative f (at x) = (\\<lambda>x. 0)", "by (rule frechet_derivative_at') (rule f_has_derivative_at_neg, simp)"], ["", "lemma f_nth_derivative_lt_0:\n  \"higher_differentiable_on {..<0} f k \\<and> (\\<forall>t<0. nth_derivative k f t 1 = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. higher_differentiable_on {..<0} f k \\<and>\n    (\\<forall>t<0. nth_derivative k f t 1 = 0)", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. higher_differentiable_on {..<0} f 0 \\<and>\n    (\\<forall>t<0. nth_derivative 0 f t 1 = 0)\n 2. \\<And>k.\n       higher_differentiable_on {..<0} f k \\<and>\n       (\\<forall>t<0. nth_derivative k f t 1 = 0) \\<Longrightarrow>\n       higher_differentiable_on {..<0} f (Suc k) \\<and>\n       (\\<forall>t<0. nth_derivative (Suc k) f t 1 = 0)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. higher_differentiable_on {..<0} f 0 \\<and>\n    (\\<forall>t<0. nth_derivative 0 f t 1 = 0)\n 2. \\<And>k.\n       higher_differentiable_on {..<0} f k \\<and>\n       (\\<forall>t<0. nth_derivative k f t 1 = 0) \\<Longrightarrow>\n       higher_differentiable_on {..<0} f (Suc k) \\<and>\n       (\\<forall>t<0. nth_derivative (Suc k) f t 1 = 0)", "have rewr: \"a \\<in> {..<0} \\<Longrightarrow> \\<not>0 < a\" for a::real"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> {..<0} \\<Longrightarrow> \\<not> 0 < a", "by simp"], ["proof (state)\nthis:\n  ?a \\<in> {..<0} \\<Longrightarrow> \\<not> 0 < ?a\n\ngoal (2 subgoals):\n 1. higher_differentiable_on {..<0} f 0 \\<and>\n    (\\<forall>t<0. nth_derivative 0 f t 1 = 0)\n 2. \\<And>k.\n       higher_differentiable_on {..<0} f k \\<and>\n       (\\<forall>t<0. nth_derivative k f t 1 = 0) \\<Longrightarrow>\n       higher_differentiable_on {..<0} f (Suc k) \\<and>\n       (\\<forall>t<0. nth_derivative (Suc k) f t 1 = 0)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. higher_differentiable_on {..<0} f 0 \\<and>\n    (\\<forall>t<0. nth_derivative 0 f t 1 = 0)", "by (auto simp: higher_differentiable_on.simps f_def rewr\n        simp del: lessThan_iff\n        cong: continuous_on_cong)"], ["proof (state)\nthis:\n  higher_differentiable_on {..<0} f 0 \\<and>\n  (\\<forall>t<0. nth_derivative 0 f t 1 = 0)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on {..<0} f k \\<and>\n       (\\<forall>t<0. nth_derivative k f t 1 = 0) \\<Longrightarrow>\n       higher_differentiable_on {..<0} f (Suc k) \\<and>\n       (\\<forall>t<0. nth_derivative (Suc k) f t 1 = 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on {..<0} f k \\<and>\n       (\\<forall>t<0. nth_derivative k f t 1 = 0) \\<Longrightarrow>\n       higher_differentiable_on {..<0} f (Suc k) \\<and>\n       (\\<forall>t<0. nth_derivative (Suc k) f t 1 = 0)", "case (Suc k)"], ["proof (state)\nthis:\n  higher_differentiable_on {..<0} f k \\<and>\n  (\\<forall>t<0. nth_derivative k f t 1 = 0)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on {..<0} f k \\<and>\n       (\\<forall>t<0. nth_derivative k f t 1 = 0) \\<Longrightarrow>\n       higher_differentiable_on {..<0} f (Suc k) \\<and>\n       (\\<forall>t<0. nth_derivative (Suc k) f t 1 = 0)", "have \"t < 0 \\<Longrightarrow> (\\<lambda>x. nth_derivative k f x 1) differentiable at t\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. t < 0 \\<Longrightarrow>\n    (\\<lambda>x. nth_derivative k f x 1) differentiable at t", "by (rule differentiable_eqI[where g=0 and X=\"{..<0}\"])\n      (auto simp: zero_fun_def frechet_derivative_const Suc.IH)"], ["proof (state)\nthis:\n  ?t < 0 \\<Longrightarrow>\n  (\\<lambda>x. nth_derivative k f x 1) differentiable at ?t\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on {..<0} f k \\<and>\n       (\\<forall>t<0. nth_derivative k f t 1 = 0) \\<Longrightarrow>\n       higher_differentiable_on {..<0} f (Suc k) \\<and>\n       (\\<forall>t<0. nth_derivative (Suc k) f t 1 = 0)", "then"], ["proof (chain)\npicking this:\n  ?t < 0 \\<Longrightarrow>\n  (\\<lambda>x. nth_derivative k f x 1) differentiable at ?t", "have \"frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1 = 0\" if \"t < 0\" for t"], ["proof (prove)\nusing this:\n  ?t < 0 \\<Longrightarrow>\n  (\\<lambda>x. nth_derivative k f x 1) differentiable at ?t\n\ngoal (1 subgoal):\n 1. frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1 = 0", "using that Suc.IH"], ["proof (prove)\nusing this:\n  ?t < 0 \\<Longrightarrow>\n  (\\<lambda>x. nth_derivative k f x 1) differentiable at ?t\n  t < 0\n  higher_differentiable_on {..<0} f k \\<and>\n  (\\<forall>t<0. nth_derivative k f t 1 = 0)\n\ngoal (1 subgoal):\n 1. frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at t) 1 = 0", "by (subst frechet_derivative_transform_within_open[where X=\"{..<0}\" and g =0])\n      (auto simp: frechet_derivative_zero_fun)"], ["proof (state)\nthis:\n  ?t < 0 \\<Longrightarrow>\n  frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at ?t) 1 = 0\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on {..<0} f k \\<and>\n       (\\<forall>t<0. nth_derivative k f t 1 = 0) \\<Longrightarrow>\n       higher_differentiable_on {..<0} f (Suc k) \\<and>\n       (\\<forall>t<0. nth_derivative (Suc k) f t 1 = 0)", "with Suc"], ["proof (chain)\npicking this:\n  higher_differentiable_on {..<0} f k \\<and>\n  (\\<forall>t<0. nth_derivative k f t 1 = 0)\n  ?t < 0 \\<Longrightarrow>\n  frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at ?t) 1 = 0", "show ?case"], ["proof (prove)\nusing this:\n  higher_differentiable_on {..<0} f k \\<and>\n  (\\<forall>t<0. nth_derivative k f t 1 = 0)\n  ?t < 0 \\<Longrightarrow>\n  frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at ?t) 1 = 0\n\ngoal (1 subgoal):\n 1. higher_differentiable_on {..<0} f (Suc k) \\<and>\n    (\\<forall>t<0. nth_derivative (Suc k) f t 1 = 0)", "by (auto simp: higher_differentiable_on.simps f_differentiable_at_neg\n        frechet_derivative_f_at_neg zero_fun_def\n        simp flip: frechet_derivative_nth_derivative_commute\n        simp del: lessThan_iff\n        intro!: higher_differentiable_on_const\n        cong: higher_differentiable_on_cong)"], ["proof (state)\nthis:\n  higher_differentiable_on {..<0} f (Suc k) \\<and>\n  (\\<forall>t<0. nth_derivative (Suc k) f t 1 = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma netlimit_at_left: \"netlimit (at_left x) = x\" for x::real"], ["proof (prove)\ngoal (1 subgoal):\n 1. netlimit (at_left x) = x", "by (rule Lim_ident_at) simp"], ["", "lemma netlimit_at_right: \"netlimit (at_right x) = x\" for x::real"], ["proof (prove)\ngoal (1 subgoal):\n 1. netlimit (at_right x) = x", "by (rule Lim_ident_at) simp"], ["", "lemma has_derivative_split_at:\n  \"(g has_derivative g') (at x)\"\n  if\n    \"(g has_derivative g') (at_left x)\"\n    \"(g has_derivative g') (at_right x)\"\n  for x::real"], ["proof (prove)\ngoal (1 subgoal):\n 1. (g has_derivative g') (at x)", "using that"], ["proof (prove)\nusing this:\n  (g has_derivative g') (at_left x)\n  (g has_derivative g') (at_right x)\n\ngoal (1 subgoal):\n 1. (g has_derivative g') (at x)", "unfolding has_derivative_def netlimit_at netlimit_at_right netlimit_at_left"], ["proof (prove)\nusing this:\n  bounded_linear g' \\<and>\n  ((\\<lambda>y.\n       (g y - g x - g' (y - x)) /\\<^sub>R\n       norm (y - x)) \\<longlongrightarrow>\n   (0::'a))\n   (at_left x)\n  bounded_linear g' \\<and>\n  ((\\<lambda>y.\n       (g y - g x - g' (y - x)) /\\<^sub>R\n       norm (y - x)) \\<longlongrightarrow>\n   (0::'a))\n   (at_right x)\n\ngoal (1 subgoal):\n 1. bounded_linear g' \\<and>\n    (\\<lambda>y. (g y - g x - g' (y - x)) /\\<^sub>R norm (y - x))\n    \\<midarrow>x\\<rightarrow> (0::'a)", "by (auto intro: filterlim_split_at)"], ["", "lemma has_derivative_at_left_at_right':\n  \"(g has_derivative g') (at x)\"\n  if\n    \"(g has_derivative g') (at x within {..x})\"\n    \"(g has_derivative g') (at x within {x..})\"\n  for x::real"], ["proof (prove)\ngoal (1 subgoal):\n 1. (g has_derivative g') (at x)", "apply (rule has_derivative_split_at)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (g has_derivative g') (at_left x)\n 2. (g has_derivative g') (at_right x)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (g has_derivative g') (at_left x)", "by (rule has_derivative_subset) (fact, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (g has_derivative g') (at_right x)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (g has_derivative g') (at_right x)", "by (rule has_derivative_subset) (fact, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma real_polynomial_function_tendsto:\n  \"(p \\<longlongrightarrow> p x) (at x within X)\" if \"real_polynomial_function p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p \\<longlongrightarrow> p x) (at x within X)", "using that"], ["proof (prove)\nusing this:\n  real_polynomial_function p\n\ngoal (1 subgoal):\n 1. (p \\<longlongrightarrow> p x) (at x within X)", "by (induction p) (auto intro!: tendsto_eq_intros intro: bounded_linear.tendsto)"], ["", "lemma f_nth_derivative_cases:\n  \"higher_differentiable_on UNIV f k \\<and>\n   (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n   (\\<exists>p. real_polynomial_function p \\<and>\n      (\\<forall>t>0. nth_derivative k f t 1 = p t / (t ^ (2 * k)) * exp(-inverse t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. higher_differentiable_on UNIV f k \\<and>\n    (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n    (\\<exists>p.\n        real_polynomial_function p \\<and>\n        (\\<forall>t>0.\n            nth_derivative k f t 1 = p t / t ^ (2 * k) * exp (- inverse t)))", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. higher_differentiable_on UNIV f 0 \\<and>\n    (\\<forall>t\\<le>0. nth_derivative 0 f t 1 = 0) \\<and>\n    (\\<exists>p.\n        real_polynomial_function p \\<and>\n        (\\<forall>t>0.\n            nth_derivative 0 f t 1 = p t / t ^ (2 * 0) * exp (- inverse t)))\n 2. \\<And>k.\n       higher_differentiable_on UNIV f k \\<and>\n       (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on UNIV f (Suc k) \\<and>\n       (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. higher_differentiable_on UNIV f 0 \\<and>\n    (\\<forall>t\\<le>0. nth_derivative 0 f t 1 = 0) \\<and>\n    (\\<exists>p.\n        real_polynomial_function p \\<and>\n        (\\<forall>t>0.\n            nth_derivative 0 f t 1 = p t / t ^ (2 * 0) * exp (- inverse t)))\n 2. \\<And>k.\n       higher_differentiable_on UNIV f k \\<and>\n       (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on UNIV f (Suc k) \\<and>\n       (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. higher_differentiable_on UNIV f 0 \\<and>\n    (\\<forall>t\\<le>0. nth_derivative 0 f t 1 = 0) \\<and>\n    (\\<exists>p.\n        real_polynomial_function p \\<and>\n        (\\<forall>t>0.\n            nth_derivative 0 f t 1 = p t / t ^ (2 * 0) * exp (- inverse t)))", "apply (auto simp: higher_differentiable_on.simps f_continuous)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p.\n       real_polynomial_function p \\<and>\n       (\\<forall>t>0. f t = p t * exp (- inverse t))", "by (auto simp: f_def)"], ["proof (state)\nthis:\n  higher_differentiable_on UNIV f 0 \\<and>\n  (\\<forall>t\\<le>0. nth_derivative 0 f t 1 = 0) \\<and>\n  (\\<exists>p.\n      real_polynomial_function p \\<and>\n      (\\<forall>t>0.\n          nth_derivative 0 f t 1 = p t / t ^ (2 * 0) * exp (- inverse t)))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on UNIV f k \\<and>\n       (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on UNIV f (Suc k) \\<and>\n       (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on UNIV f k \\<and>\n       (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on UNIV f (Suc k) \\<and>\n       (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "case (Suc k)"], ["proof (state)\nthis:\n  higher_differentiable_on UNIV f k \\<and>\n  (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n  (\\<exists>p.\n      real_polynomial_function p \\<and>\n      (\\<forall>t>0.\n          nth_derivative k f t 1 = p t / t ^ (2 * k) * exp (- inverse t)))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on UNIV f k \\<and>\n       (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on UNIV f (Suc k) \\<and>\n       (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "from Suc.IH"], ["proof (chain)\npicking this:\n  higher_differentiable_on UNIV f k \\<and>\n  (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n  (\\<exists>p.\n      real_polynomial_function p \\<and>\n      (\\<forall>t>0.\n          nth_derivative k f t 1 = p t / t ^ (2 * k) * exp (- inverse t)))", "obtain pk where IH:\n    \"higher_differentiable_on UNIV f k\"\n    \"\\<And>t. t \\<le> 0 \\<Longrightarrow> nth_derivative k f t 1 = 0\"\n    \"real_polynomial_function pk\"\n    \"\\<And>t. t > 0 \\<Longrightarrow> nth_derivative k f t 1 = pk t / t ^ (2 * k) * exp (- inverse t)\""], ["proof (prove)\nusing this:\n  higher_differentiable_on UNIV f k \\<and>\n  (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n  (\\<exists>p.\n      real_polynomial_function p \\<and>\n      (\\<forall>t>0.\n          nth_derivative k f t 1 = p t / t ^ (2 * k) * exp (- inverse t)))\n\ngoal (1 subgoal):\n 1. (\\<And>pk.\n        \\<lbrakk>higher_differentiable_on UNIV f k;\n         \\<And>t. t \\<le> 0 \\<Longrightarrow> nth_derivative k f t 1 = 0;\n         real_polynomial_function pk;\n         \\<And>t.\n            0 < t \\<Longrightarrow>\n            nth_derivative k f t 1 =\n            pk t / t ^ (2 * k) * exp (- inverse t)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  higher_differentiable_on UNIV f k\n  ?t \\<le> 0 \\<Longrightarrow> nth_derivative k f ?t 1 = 0\n  real_polynomial_function pk\n  0 < ?t \\<Longrightarrow>\n  nth_derivative k f ?t 1 = pk ?t / ?t ^ (2 * k) * exp (- inverse ?t)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on UNIV f k \\<and>\n       (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on UNIV f (Suc k) \\<and>\n       (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "from f_nth_derivative_lt_0[of \"Suc k\"]\n    local.f_nth_derivative_is_poly[of \"Suc k\"]"], ["proof (chain)\npicking this:\n  higher_differentiable_on {..<0} f (Suc k) \\<and>\n  (\\<forall>t<0. nth_derivative (Suc k) f t 1 = 0)\n  higher_differentiable_on {0<..} f (Suc k) \\<and>\n  (\\<exists>p.\n      real_polynomial_function p \\<and>\n      (\\<forall>t>0.\n          nth_derivative (Suc k) f t 1 =\n          p t / t ^ (2 * Suc k) * exp (- inverse t)))", "obtain p where neg: \"higher_differentiable_on {..<0} f (Suc k)\"\n    and neg0: \"(\\<forall>t<0. nth_derivative (Suc k) f t 1 = 0)\"\n    and pos: \"higher_differentiable_on {0<..} f (Suc k)\"\n    and p: \"real_polynomial_function p\"\n    \"\\<And>t. t > 0 \\<Longrightarrow> nth_derivative (Suc k) f t 1 = p t / t ^ (2 * Suc k) * exp (- inverse t)\""], ["proof (prove)\nusing this:\n  higher_differentiable_on {..<0} f (Suc k) \\<and>\n  (\\<forall>t<0. nth_derivative (Suc k) f t 1 = 0)\n  higher_differentiable_on {0<..} f (Suc k) \\<and>\n  (\\<exists>p.\n      real_polynomial_function p \\<and>\n      (\\<forall>t>0.\n          nth_derivative (Suc k) f t 1 =\n          p t / t ^ (2 * Suc k) * exp (- inverse t)))\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>higher_differentiable_on {..<0} f (Suc k);\n         \\<forall>t<0. nth_derivative (Suc k) f t 1 = 0;\n         higher_differentiable_on {0<..} f (Suc k);\n         real_polynomial_function p;\n         \\<And>t.\n            0 < t \\<Longrightarrow>\n            nth_derivative (Suc k) f t 1 =\n            p t / t ^ (2 * Suc k) * exp (- inverse t)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  higher_differentiable_on {..<0} f (Suc k)\n  \\<forall>t<0. nth_derivative (Suc k) f t 1 = 0\n  higher_differentiable_on {0<..} f (Suc k)\n  real_polynomial_function p\n  0 < ?t \\<Longrightarrow>\n  nth_derivative (Suc k) f ?t 1 =\n  p ?t / ?t ^ (2 * Suc k) * exp (- inverse ?t)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on UNIV f k \\<and>\n       (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on UNIV f (Suc k) \\<and>\n       (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "moreover"], ["proof (state)\nthis:\n  higher_differentiable_on {..<0} f (Suc k)\n  \\<forall>t<0. nth_derivative (Suc k) f t 1 = 0\n  higher_differentiable_on {0<..} f (Suc k)\n  real_polynomial_function p\n  0 < ?t \\<Longrightarrow>\n  nth_derivative (Suc k) f ?t 1 =\n  p ?t / ?t ^ (2 * Suc k) * exp (- inverse ?t)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on UNIV f k \\<and>\n       (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on UNIV f (Suc k) \\<and>\n       (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "have at_within_eq_at_right: \"(at 0 within {0..}) = at_right (0::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at 0 within {0..} = at_right 0", "apply (auto simp: filter_eq_iff eventually_at_filter )"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P.\n       \\<forall>\\<^sub>F x in nhds 0.\n          x \\<noteq> 0 \\<longrightarrow>\n          0 \\<le> x \\<longrightarrow> P x \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in nhds 0.\n          x \\<noteq> 0 \\<longrightarrow> 0 < x \\<longrightarrow> P x\n 2. \\<And>P.\n       \\<forall>\\<^sub>F x in nhds 0.\n          x \\<noteq> 0 \\<longrightarrow>\n          0 < x \\<longrightarrow> P x \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in nhds 0.\n          x \\<noteq> 0 \\<longrightarrow> 0 \\<le> x \\<longrightarrow> P x", "apply (simp add: eventually_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P.\n       \\<forall>\\<^sub>F x in nhds 0.\n          x \\<noteq> 0 \\<longrightarrow>\n          0 < x \\<longrightarrow> P x \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in nhds 0.\n          x \\<noteq> 0 \\<longrightarrow> 0 \\<le> x \\<longrightarrow> P x", "apply (simp add: eventually_mono)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  at 0 within {0..} = at_right 0\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on UNIV f k \\<and>\n       (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on UNIV f (Suc k) \\<and>\n       (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "have [simp]: \"{0..} - {0} = {0::real<..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..} - {0} = {0<..}", "by auto"], ["proof (state)\nthis:\n  {0..} - {0} = {0<..}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on UNIV f k \\<and>\n       (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on UNIV f (Suc k) \\<and>\n       (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "have [simp]: \"(at (0::real) within {0..}) \\<noteq> bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at 0 within {0..} \\<noteq> bot", "by (auto simp: at_within_eq_bot_iff)"], ["proof (state)\nthis:\n  at 0 within {0..} \\<noteq> bot\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on UNIV f k \\<and>\n       (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on UNIV f (Suc k) \\<and>\n       (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "have k_th_has_derivative_at_left:\n    \"((\\<lambda>x. nth_derivative k f x 1) has_derivative (\\<lambda>x. 0)) (at 0 within {..0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. nth_derivative k f x 1) has_derivative (\\<lambda>x. 0))\n     (at 0 within {..0})", "apply (rule has_derivative_transform_within[OF _ zero_less_one])"], ["proof (prove)\ngoal (3 subgoals):\n 1. (?f has_derivative (\\<lambda>x. 0)) (at 0 within {..0})\n 2. 0 \\<in> {..0}\n 3. \\<And>x'.\n       \\<lbrakk>x' \\<in> {..0}; dist x' 0 < 1\\<rbrakk>\n       \\<Longrightarrow> ?f x' = nth_derivative k f x' 1", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. 0 \\<in> {..0}\n 2. (?f has_derivative (\\<lambda>x. 0)) (at 0 within {..0})\n 3. \\<And>x'.\n       \\<lbrakk>x' \\<in> {..0}; dist x' 0 < 1\\<rbrakk>\n       \\<Longrightarrow> ?f x' = nth_derivative k f x' 1", "apply force"], ["proof (prove)\ngoal (2 subgoals):\n 1. (?f has_derivative (\\<lambda>x. 0)) (at 0 within {..0})\n 2. \\<And>x'.\n       \\<lbrakk>x' \\<in> {..0}; dist x' 0 < 1\\<rbrakk>\n       \\<Longrightarrow> ?f x' = nth_derivative k f x' 1", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {..0}; dist x' 0 < 1\\<rbrakk>\n       \\<Longrightarrow> ?f x' = nth_derivative k f x' 1\n 2. (?f has_derivative (\\<lambda>x. 0)) (at 0 within {..0})", "apply (simp add: IH)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x'. 0) has_derivative (\\<lambda>x. 0)) (at 0 within {..0})", "by (rule derivative_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>x. nth_derivative k f x 1) has_derivative (\\<lambda>x. 0))\n   (at 0 within {..0})\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on UNIV f k \\<and>\n       (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on UNIV f (Suc k) \\<and>\n       (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "have k_th_has_derivative_at_right:\n    \"((\\<lambda>x. nth_derivative k f x 1) has_derivative (\\<lambda>x. 0)) (at 0 within {0..})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. nth_derivative k f x 1) has_derivative (\\<lambda>x. 0))\n     (at 0 within {0..})", "apply (rule has_derivative_transform_within[where\n          f=\"\\<lambda>x'. if x' = 0 then 0 else pk x' / x' ^ (2 * k) * exp (- inverse x')\", OF _ zero_less_one])"], ["proof (prove)\ngoal (3 subgoals):\n 1. ((\\<lambda>x'.\n         if x' = 0 then 0\n         else pk x' / x' ^ (2 * k) * exp (- inverse x')) has_derivative\n     (\\<lambda>x. 0))\n     (at 0 within {0..})\n 2. 0 \\<in> {0..}\n 3. \\<And>x'.\n       \\<lbrakk>x' \\<in> {0..}; dist x' 0 < 1\\<rbrakk>\n       \\<Longrightarrow> (if x' = 0 then 0\n                          else pk x' / x' ^ (2 * k) * exp (- inverse x')) =\n                         nth_derivative k f x' 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x'.\n         if x' = 0 then 0\n         else pk x' / x' ^ (2 * k) * exp (- inverse x')) has_derivative\n     (\\<lambda>x. 0))\n     (at 0 within {0..})", "unfolding has_derivative_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_linear (\\<lambda>x. 0) \\<and>\n    ((\\<lambda>y.\n         ((if y = 0 then 0 else pk y / y ^ (2 * k) * exp (- inverse y)) -\n          (if netlimit (at 0 within {0..}) = 0 then 0\n           else pk (netlimit (at 0 within {0..})) /\n                netlimit (at 0 within {0..}) ^ (2 * k) *\n                exp (- inverse (netlimit (at 0 within {0..})))) -\n          0) /\\<^sub>R\n         norm (y - netlimit (at 0 within {0..}))) \\<longlongrightarrow>\n     0)\n     (at 0 within {0..})", "apply (auto simp: Lim_ident_at)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         inverse \\<bar>y\\<bar> *\n         (if y = 0 then 0\n          else pk y / y ^ (2 * k) *\n               exp (- inverse y))) \\<longlongrightarrow>\n     0)\n     (at 0 within {0..})", "apply (rule Lim_transform_eventually[where f=\"\\<lambda>x. (pk x * (exp (- inverse x) / x ^ (2 * k + 1)))\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((\\<lambda>x.\n         pk x * (exp (- inverse x) / x ^ (2 * k + 1))) \\<longlongrightarrow>\n     0)\n     (at 0 within {0..})\n 2. \\<forall>\\<^sub>F x in at 0 within {0..}.\n       pk x * (exp (- inverse x) / x ^ (2 * k + 1)) =\n       inverse \\<bar>x\\<bar> *\n       (if x = 0 then 0 else pk x / x ^ (2 * k) * exp (- inverse x))", "apply (rule tendsto_eq_intros)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (pk \\<longlongrightarrow> ?a6) (at 0 within {0..})\n 2. ((\\<lambda>x. exp (- inverse x) / x ^ (2 * k + 1)) \\<longlongrightarrow>\n     ?b6)\n     (at 0 within {0..})\n 3. ?a6 * ?b6 = 0\n 4. \\<forall>\\<^sub>F x in at 0 within {0..}.\n       pk x * (exp (- inverse x) / x ^ (2 * k + 1)) =\n       inverse \\<bar>x\\<bar> *\n       (if x = 0 then 0 else pk x / x ^ (2 * k) * exp (- inverse x))", "apply (rule real_polynomial_function_tendsto[THEN tendsto_eq_rhs])"], ["proof (prove)\ngoal (5 subgoals):\n 1. real_polynomial_function pk\n 2. pk 0 = ?a6\n 3. ((\\<lambda>x. exp (- inverse x) / x ^ (2 * k + 1)) \\<longlongrightarrow>\n     ?b6)\n     (at 0 within {0..})\n 4. ?a6 * ?b6 = 0\n 5. \\<forall>\\<^sub>F x in at 0 within {0..}.\n       pk x * (exp (- inverse x) / x ^ (2 * k + 1)) =\n       inverse \\<bar>x\\<bar> *\n       (if x = 0 then 0 else pk x / x ^ (2 * k) * exp (- inverse x))", "apply fact"], ["proof (prove)\ngoal (4 subgoals):\n 1. pk 0 = ?a6\n 2. ((\\<lambda>x. exp (- inverse x) / x ^ (2 * k + 1)) \\<longlongrightarrow>\n     ?b6)\n     (at 0 within {0..})\n 3. ?a6 * ?b6 = 0\n 4. \\<forall>\\<^sub>F x in at 0 within {0..}.\n       pk x * (exp (- inverse x) / x ^ (2 * k + 1)) =\n       inverse \\<bar>x\\<bar> *\n       (if x = 0 then 0 else pk x / x ^ (2 * k) * exp (- inverse x))", "apply (rule refl)"], ["proof (prove)\ngoal (3 subgoals):\n 1. ((\\<lambda>x. exp (- inverse x) / x ^ (2 * k + 1)) \\<longlongrightarrow>\n     ?b6)\n     (at 0 within {0..})\n 2. pk 0 * ?b6 = 0\n 3. \\<forall>\\<^sub>F x in at 0 within {0..}.\n       pk x * (exp (- inverse x) / x ^ (2 * k + 1)) =\n       inverse \\<bar>x\\<bar> *\n       (if x = 0 then 0 else pk x / x ^ (2 * k) * exp (- inverse x))", "apply (subst at_within_eq_at_right)"], ["proof (prove)\ngoal (3 subgoals):\n 1. ((\\<lambda>x. exp (- inverse x) / x ^ (2 * k + 1)) \\<longlongrightarrow>\n     ?b6)\n     (at_right 0)\n 2. pk 0 * ?b6 = 0\n 3. \\<forall>\\<^sub>F x in at 0 within {0..}.\n       pk x * (exp (- inverse x) / x ^ (2 * k + 1)) =\n       inverse \\<bar>x\\<bar> *\n       (if x = 0 then 0 else pk x / x ^ (2 * k) * exp (- inverse x))", "apply (rule exp_inv_limit_0_right_gen)"], ["proof (prove)\ngoal (2 subgoals):\n 1. pk 0 * 0 = 0\n 2. \\<forall>\\<^sub>F x in at 0 within {0..}.\n       pk x * (exp (- inverse x) / x ^ (2 * k + 1)) =\n       inverse \\<bar>x\\<bar> *\n       (if x = 0 then 0 else pk x / x ^ (2 * k) * exp (- inverse x))", "apply (auto simp add: eventually_at_filter divide_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 \\<in> {0..}\n 2. \\<And>x'.\n       \\<lbrakk>x' \\<in> {0..}; dist x' 0 < 1\\<rbrakk>\n       \\<Longrightarrow> (if x' = 0 then 0\n                          else pk x' / x' ^ (2 * k) * exp (- inverse x')) =\n                         nth_derivative k f x' 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in> {0..}", "by force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<lbrakk>x' \\<in> {0..}; dist x' 0 < 1\\<rbrakk>\n       \\<Longrightarrow> (if x' = 0 then 0\n                          else pk x' / x' ^ (2 * k) * exp (- inverse x')) =\n                         nth_derivative k f x' 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x'_ \\<in> {0..}; dist x'_ 0 < 1\\<rbrakk>\n    \\<Longrightarrow> (if x'_ = 0 then 0\n                       else pk x'_ / x'_ ^ (2 * k) * exp (- inverse x'_)) =\n                      nth_derivative k f x'_ 1", "by (auto simp: IH(2) IH(4))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ((\\<lambda>x. nth_derivative k f x 1) has_derivative (\\<lambda>x. 0))\n   (at 0 within {0..})\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on UNIV f k \\<and>\n       (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on UNIV f (Suc k) \\<and>\n       (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "have k_th_has_derivative: \"((\\<lambda>x. nth_derivative k f x 1) has_derivative (\\<lambda>x. 0)) (at 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. nth_derivative k f x 1) has_derivative (\\<lambda>x. 0))\n     (at 0)", "apply (rule has_derivative_at_left_at_right')"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((\\<lambda>x. nth_derivative k f x 1) has_derivative (\\<lambda>x. 0))\n     (at 0 within {..0})\n 2. ((\\<lambda>x. nth_derivative k f x 1) has_derivative (\\<lambda>x. 0))\n     (at 0 within {0..})", "apply (rule k_th_has_derivative_at_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. nth_derivative k f x 1) has_derivative (\\<lambda>x. 0))\n     (at 0 within {0..})", "apply (rule k_th_has_derivative_at_right)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ((\\<lambda>x. nth_derivative k f x 1) has_derivative (\\<lambda>x. 0))\n   (at 0)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on UNIV f k \\<and>\n       (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on UNIV f (Suc k) \\<and>\n       (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "have nth_Suc_zero: \"nth_derivative (Suc k) f 0 1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_derivative (Suc k) f 0 1 = 0", "apply (auto simp: frechet_derivative_nth_derivative_commute[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. frechet_derivative (\\<lambda>x. nth_derivative k f x 1) (at 0) 1 = 0", "apply (subst frechet_derivative_at')"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((\\<lambda>x. nth_derivative k f x 1) has_derivative ?y) (at 0)\n 2. ?y 1 = 0", "apply (rule k_th_has_derivative)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 = 0", "by simp"], ["proof (state)\nthis:\n  nth_derivative (Suc k) f 0 1 = 0\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on UNIV f k \\<and>\n       (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on UNIV f (Suc k) \\<and>\n       (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "moreover"], ["proof (state)\nthis:\n  nth_derivative (Suc k) f 0 1 = 0\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on UNIV f k \\<and>\n       (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on UNIV f (Suc k) \\<and>\n       (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "have \"higher_differentiable_on UNIV f (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. higher_differentiable_on UNIV f (Suc k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. higher_differentiable_on UNIV f (Suc k)", "have \"continuous_on UNIV (\\<lambda>x. nth_derivative (Suc k) f x 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV (\\<lambda>x. nth_derivative (Suc k) f x 1)", "unfolding continuous_on_eq_continuous_within"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV. isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV \\<Longrightarrow>\n       isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "fix x::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV \\<Longrightarrow>\n       isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "consider \"x < 0\" | \"x > 0\" | \"x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < 0 \\<Longrightarrow> thesis; 0 < x \\<Longrightarrow> thesis;\n     x = 0 \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by arith"], ["proof (state)\nthis:\n  \\<lbrakk>x < 0 \\<Longrightarrow> ?thesis; 0 < x \\<Longrightarrow> ?thesis;\n   x = 0 \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV \\<Longrightarrow>\n       isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x < 0 \\<Longrightarrow> ?thesis; 0 < x \\<Longrightarrow> ?thesis;\n   x = 0 \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x < 0 \\<Longrightarrow> ?thesis; 0 < x \\<Longrightarrow> ?thesis;\n   x = 0 \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. x < 0 \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x\n 2. 0 < x \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x\n 3. x = 0 \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "case 1"], ["proof (state)\nthis:\n  x < 0\n\ngoal (3 subgoals):\n 1. x < 0 \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x\n 2. 0 < x \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x\n 3. x = 0 \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "then"], ["proof (chain)\npicking this:\n  x < 0", "have at_eq: \"at x = at x within {..<0}\""], ["proof (prove)\nusing this:\n  x < 0\n\ngoal (1 subgoal):\n 1. at x = at x within {..<0}", "using at_within_open[of x \"{..<0}\"]"], ["proof (prove)\nusing this:\n  x < 0\n  \\<lbrakk>x \\<in> {..<0}; open {..<0}\\<rbrakk>\n  \\<Longrightarrow> at x within {..<0} = at x\n\ngoal (1 subgoal):\n 1. at x = at x within {..<0}", "by auto"], ["proof (state)\nthis:\n  at x = at x within {..<0}\n\ngoal (3 subgoals):\n 1. x < 0 \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x\n 2. 0 < x \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x\n 3. x = 0 \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "unfolding at_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous (at x within {..<0})\n     (\\<lambda>x. nth_derivative (Suc k) f x 1)", "apply (rule continuous_transform_within[OF _ zero_less_one])"], ["proof (prove)\ngoal (3 subgoals):\n 1. continuous (at x within {..<0}) ?f\n 2. x \\<in> {..<0}\n 3. \\<And>x'.\n       \\<lbrakk>x' \\<in> {..<0}; dist x' x < 1\\<rbrakk>\n       \\<Longrightarrow> ?f x' = nth_derivative (Suc k) f x' 1", "using neg0 1"], ["proof (prove)\nusing this:\n  \\<forall>t<0. nth_derivative (Suc k) f t 1 = 0\n  x < 0\n\ngoal (3 subgoals):\n 1. continuous (at x within {..<0}) ?f\n 2. x \\<in> {..<0}\n 3. \\<And>x'.\n       \\<lbrakk>x' \\<in> {..<0}; dist x' x < 1\\<rbrakk>\n       \\<Longrightarrow> ?f x' = nth_derivative (Suc k) f x' 1", "by (auto simp: at_eq)"], ["proof (state)\nthis:\n  isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x\n\ngoal (2 subgoals):\n 1. 0 < x \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x\n 2. x = 0 \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < x \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x\n 2. x = 0 \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "case 2"], ["proof (state)\nthis:\n  0 < x\n\ngoal (2 subgoals):\n 1. 0 < x \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x\n 2. x = 0 \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "then"], ["proof (chain)\npicking this:\n  0 < x", "have at_eq: \"at x = at x within {0<..}\""], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. at x = at x within {0<..}", "using at_within_open[of x \"{0<..}\"]"], ["proof (prove)\nusing this:\n  0 < x\n  \\<lbrakk>x \\<in> {0<..}; open {0<..}\\<rbrakk>\n  \\<Longrightarrow> at x within {0<..} = at x\n\ngoal (1 subgoal):\n 1. at x = at x within {0<..}", "by auto"], ["proof (state)\nthis:\n  at x = at x within {0<..}\n\ngoal (2 subgoals):\n 1. 0 < x \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x\n 2. x = 0 \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "unfolding at_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous (at x within {0<..})\n     (\\<lambda>x. nth_derivative (Suc k) f x 1)", "apply (rule continuous_transform_within[OF _ zero_less_one])"], ["proof (prove)\ngoal (3 subgoals):\n 1. continuous (at x within {0<..}) ?f\n 2. x \\<in> {0<..}\n 3. \\<And>x'.\n       \\<lbrakk>x' \\<in> {0<..}; dist x' x < 1\\<rbrakk>\n       \\<Longrightarrow> ?f x' = nth_derivative (Suc k) f x' 1", "using p 2"], ["proof (prove)\nusing this:\n  real_polynomial_function p\n  0 < ?t \\<Longrightarrow>\n  nth_derivative (Suc k) f ?t 1 =\n  p ?t / ?t ^ (2 * Suc k) * exp (- inverse ?t)\n  0 < x\n\ngoal (3 subgoals):\n 1. continuous (at x within {0<..}) ?f\n 2. x \\<in> {0<..}\n 3. \\<And>x'.\n       \\<lbrakk>x' \\<in> {0<..}; dist x' x < 1\\<rbrakk>\n       \\<Longrightarrow> ?f x' = nth_derivative (Suc k) f x' 1", "by (auto intro!: continuous_intros\n              intro: continuous_real_polymonial_function continuous_at_imp_continuous_within)"], ["proof (state)\nthis:\n  isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x\n\ngoal (1 subgoal):\n 1. x = 0 \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x = 0 \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "case 3"], ["proof (state)\nthis:\n  x = 0\n\ngoal (1 subgoal):\n 1. x = 0 \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "have \"((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0) (at_left 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n     (at_left 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n     (at_left 0)", "have \"\\<forall>\\<^sub>F x in at_left 0. 0 = nth_derivative (Suc k) f x 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_left 0. 0 = nth_derivative (Suc k) f x 1", "using neg0"], ["proof (prove)\nusing this:\n  \\<forall>t<0. nth_derivative (Suc k) f t 1 = 0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_left 0. 0 = nth_derivative (Suc k) f x 1", "by (auto simp: eventually_at_filter)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_left 0. 0 = nth_derivative (Suc k) f x 1\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n     (at_left 0)", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_left 0. 0 = nth_derivative (Suc k) f x 1", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_left 0. 0 = nth_derivative (Suc k) f x 1\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n     (at_left 0)", "by (blast intro: Lim_transform_eventually)"], ["proof (state)\nthis:\n  ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n   (at_left 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n   (at_left 0)\n\ngoal (1 subgoal):\n 1. x = 0 \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n   (at_left 0)\n\ngoal (1 subgoal):\n 1. x = 0 \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "have \"((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n     (at_right 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n     (at_right 0)", "have \"((\\<lambda>x. p x * (exp (- inverse x) / x ^ (2 * Suc k))) \\<longlongrightarrow> 0) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         p x * (exp (- inverse x) / x ^ (2 * Suc k))) \\<longlongrightarrow>\n     0)\n     (at_right 0)", "apply (rule tendsto_eq_intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (p \\<longlongrightarrow> ?a1) (at_right 0)\n 2. ((\\<lambda>x. exp (- inverse x) / x ^ (2 * Suc k)) \\<longlongrightarrow>\n     ?b1)\n     (at_right 0)\n 3. ?a1 * ?b1 = 0", "apply (rule real_polynomial_function_tendsto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. real_polynomial_function p\n 2. ((\\<lambda>x. exp (- inverse x) / x ^ (2 * Suc k)) \\<longlongrightarrow>\n     ?b1)\n     (at_right 0)\n 3. p 0 * ?b1 = 0", "apply fact"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((\\<lambda>x. exp (- inverse x) / x ^ (2 * Suc k)) \\<longlongrightarrow>\n     ?b1)\n     (at_right 0)\n 2. p 0 * ?b1 = 0", "apply (rule exp_inv_limit_0_right_gen)"], ["proof (prove)\ngoal (1 subgoal):\n 1. p 0 * 0 = 0", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       p x * (exp (- inverse x) / x ^ (2 * Suc k))) \\<longlongrightarrow>\n   0)\n   (at_right 0)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n     (at_right 0)", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       p x * (exp (- inverse x) / x ^ (2 * Suc k))) \\<longlongrightarrow>\n   0)\n   (at_right 0)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n     (at_right 0)", "have \"\\<forall>\\<^sub>F x in at_right 0. p x * (exp (- inverse x) / x ^ (2 * Suc k)) =\n            nth_derivative (Suc k) f x 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_right 0.\n       p x * (exp (- inverse x) / x ^ (2 * Suc k)) =\n       nth_derivative (Suc k) f x 1", "using p"], ["proof (prove)\nusing this:\n  real_polynomial_function p\n  0 < ?t \\<Longrightarrow>\n  nth_derivative (Suc k) f ?t 1 =\n  p ?t / ?t ^ (2 * Suc k) * exp (- inverse ?t)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_right 0.\n       p x * (exp (- inverse x) / x ^ (2 * Suc k)) =\n       nth_derivative (Suc k) f x 1", "by (auto simp: eventually_at_filter)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_right 0.\n     p x * (exp (- inverse x) / x ^ (2 * Suc k)) =\n     nth_derivative (Suc k) f x 1\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n     (at_right 0)", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       p x * (exp (- inverse x) / x ^ (2 * Suc k))) \\<longlongrightarrow>\n   0)\n   (at_right 0)\n  \\<forall>\\<^sub>F x in at_right 0.\n     p x * (exp (- inverse x) / x ^ (2 * Suc k)) =\n     nth_derivative (Suc k) f x 1", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       p x * (exp (- inverse x) / x ^ (2 * Suc k))) \\<longlongrightarrow>\n   0)\n   (at_right 0)\n  \\<forall>\\<^sub>F x in at_right 0.\n     p x * (exp (- inverse x) / x ^ (2 * Suc k)) =\n     nth_derivative (Suc k) f x 1\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n     (at_right 0)", "by (rule Lim_transform_eventually)"], ["proof (state)\nthis:\n  ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n   (at_right 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n   (at_right 0)\n\ngoal (1 subgoal):\n 1. x = 0 \\<Longrightarrow>\n    isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n   (at_left 0)\n  ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n   (at_right 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n   (at_left 0)\n  ((\\<lambda>x. nth_derivative (Suc k) f x 1) \\<longlongrightarrow> 0)\n   (at_right 0)\n\ngoal (1 subgoal):\n 1. isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x", "by (auto simp: continuous_def nth_Suc_zero 3 filterlim_split_at\n              simp del: nth_derivative.simps)"], ["proof (state)\nthis:\n  isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  isCont (\\<lambda>x. nth_derivative (Suc k) f x 1) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  continuous_on UNIV (\\<lambda>x. nth_derivative (Suc k) f x 1)\n\ngoal (1 subgoal):\n 1. higher_differentiable_on UNIV f (Suc k)", "moreover"], ["proof (state)\nthis:\n  continuous_on UNIV (\\<lambda>x. nth_derivative (Suc k) f x 1)\n\ngoal (1 subgoal):\n 1. higher_differentiable_on UNIV f (Suc k)", "have \"(\\<lambda>x. nth_derivative k f x 1) differentiable at x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. nth_derivative k f x 1) differentiable at x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. nth_derivative k f x 1) differentiable at x", "consider  \"x = 0\" | \"x < 0\" | \"x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = 0 \\<Longrightarrow> thesis; x < 0 \\<Longrightarrow> thesis;\n     0 < x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by arith"], ["proof (state)\nthis:\n  \\<lbrakk>x = 0 \\<Longrightarrow> ?thesis; x < 0 \\<Longrightarrow> ?thesis;\n   0 < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. nth_derivative k f x 1) differentiable at x", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x = 0 \\<Longrightarrow> ?thesis; x < 0 \\<Longrightarrow> ?thesis;\n   0 < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = 0 \\<Longrightarrow> ?thesis; x < 0 \\<Longrightarrow> ?thesis;\n   0 < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. nth_derivative k f x 1) differentiable at x", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. x = 0 \\<Longrightarrow>\n    (\\<lambda>x. nth_derivative k f x 1) differentiable at x\n 2. x < 0 \\<Longrightarrow>\n    (\\<lambda>x. nth_derivative k f x 1) differentiable at x\n 3. 0 < x \\<Longrightarrow>\n    (\\<lambda>x. nth_derivative k f x 1) differentiable at x", "case 1"], ["proof (state)\nthis:\n  x = 0\n\ngoal (3 subgoals):\n 1. x = 0 \\<Longrightarrow>\n    (\\<lambda>x. nth_derivative k f x 1) differentiable at x\n 2. x < 0 \\<Longrightarrow>\n    (\\<lambda>x. nth_derivative k f x 1) differentiable at x\n 3. 0 < x \\<Longrightarrow>\n    (\\<lambda>x. nth_derivative k f x 1) differentiable at x", "then"], ["proof (chain)\npicking this:\n  x = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  x = 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. nth_derivative k f x 1) differentiable at x", "using k_th_has_derivative"], ["proof (prove)\nusing this:\n  x = 0\n  ((\\<lambda>x. nth_derivative k f x 1) has_derivative (\\<lambda>x. 0))\n   (at 0)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. nth_derivative k f x 1) differentiable at x", "by (auto simp: differentiable_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. nth_derivative k f x 1) differentiable at x\n\ngoal (2 subgoals):\n 1. x < 0 \\<Longrightarrow>\n    (\\<lambda>x. nth_derivative k f x 1) differentiable at x\n 2. 0 < x \\<Longrightarrow>\n    (\\<lambda>x. nth_derivative k f x 1) differentiable at x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x < 0 \\<Longrightarrow>\n    (\\<lambda>x. nth_derivative k f x 1) differentiable at x\n 2. 0 < x \\<Longrightarrow>\n    (\\<lambda>x. nth_derivative k f x 1) differentiable at x", "case 2"], ["proof (state)\nthis:\n  x < 0\n\ngoal (2 subgoals):\n 1. x < 0 \\<Longrightarrow>\n    (\\<lambda>x. nth_derivative k f x 1) differentiable at x\n 2. 0 < x \\<Longrightarrow>\n    (\\<lambda>x. nth_derivative k f x 1) differentiable at x", "with neg"], ["proof (chain)\npicking this:\n  higher_differentiable_on {..<0} f (Suc k)\n  x < 0", "show ?thesis"], ["proof (prove)\nusing this:\n  higher_differentiable_on {..<0} f (Suc k)\n  x < 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. nth_derivative k f x 1) differentiable at x", "by (subst (asm) higher_differentiable_on_real_Suc') (auto simp: )"], ["proof (state)\nthis:\n  (\\<lambda>x. nth_derivative k f x 1) differentiable at x\n\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow>\n    (\\<lambda>x. nth_derivative k f x 1) differentiable at x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow>\n    (\\<lambda>x. nth_derivative k f x 1) differentiable at x", "case 3"], ["proof (state)\nthis:\n  0 < x\n\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow>\n    (\\<lambda>x. nth_derivative k f x 1) differentiable at x", "with pos"], ["proof (chain)\npicking this:\n  higher_differentiable_on {0<..} f (Suc k)\n  0 < x", "show ?thesis"], ["proof (prove)\nusing this:\n  higher_differentiable_on {0<..} f (Suc k)\n  0 < x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. nth_derivative k f x 1) differentiable at x", "by (subst (asm) higher_differentiable_on_real_Suc') (auto simp: )"], ["proof (state)\nthis:\n  (\\<lambda>x. nth_derivative k f x 1) differentiable at x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. nth_derivative k f x 1) differentiable at x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. nth_derivative k f x 1) differentiable at ?x\n\ngoal (1 subgoal):\n 1. higher_differentiable_on UNIV f (Suc k)", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>x. nth_derivative k f x 1) differentiable at ?x\n\ngoal (1 subgoal):\n 1. higher_differentiable_on UNIV f (Suc k)", "have \"higher_differentiable_on UNIV f k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. higher_differentiable_on UNIV f k", "by fact"], ["proof (state)\nthis:\n  higher_differentiable_on UNIV f k\n\ngoal (1 subgoal):\n 1. higher_differentiable_on UNIV f (Suc k)", "ultimately"], ["proof (chain)\npicking this:\n  continuous_on UNIV (\\<lambda>x. nth_derivative (Suc k) f x 1)\n  (\\<lambda>x. nth_derivative k f x 1) differentiable at ?x\n  higher_differentiable_on UNIV f k", "show ?thesis"], ["proof (prove)\nusing this:\n  continuous_on UNIV (\\<lambda>x. nth_derivative (Suc k) f x 1)\n  (\\<lambda>x. nth_derivative k f x 1) differentiable at ?x\n  higher_differentiable_on UNIV f k\n\ngoal (1 subgoal):\n 1. higher_differentiable_on UNIV f (Suc k)", "by (subst higher_differentiable_on_real_Suc'[OF open_UNIV]) auto"], ["proof (state)\nthis:\n  higher_differentiable_on UNIV f (Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  higher_differentiable_on UNIV f (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       higher_differentiable_on UNIV f k \\<and>\n       (\\<forall>t\\<le>0. nth_derivative k f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative k f t 1 =\n               p t / t ^ (2 * k) * exp (- inverse t))) \\<Longrightarrow>\n       higher_differentiable_on UNIV f (Suc k) \\<and>\n       (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n       (\\<exists>p.\n           real_polynomial_function p \\<and>\n           (\\<forall>t>0.\n               nth_derivative (Suc k) f t 1 =\n               p t / t ^ (2 * Suc k) * exp (- inverse t)))", "ultimately"], ["proof (chain)\npicking this:\n  higher_differentiable_on {..<0} f (Suc k)\n  \\<forall>t<0. nth_derivative (Suc k) f t 1 = 0\n  higher_differentiable_on {0<..} f (Suc k)\n  real_polynomial_function p\n  0 < ?t \\<Longrightarrow>\n  nth_derivative (Suc k) f ?t 1 =\n  p ?t / ?t ^ (2 * Suc k) * exp (- inverse ?t)\n  nth_derivative (Suc k) f 0 1 = 0\n  higher_differentiable_on UNIV f (Suc k)", "show ?case"], ["proof (prove)\nusing this:\n  higher_differentiable_on {..<0} f (Suc k)\n  \\<forall>t<0. nth_derivative (Suc k) f t 1 = 0\n  higher_differentiable_on {0<..} f (Suc k)\n  real_polynomial_function p\n  0 < ?t \\<Longrightarrow>\n  nth_derivative (Suc k) f ?t 1 =\n  p ?t / ?t ^ (2 * Suc k) * exp (- inverse ?t)\n  nth_derivative (Suc k) f 0 1 = 0\n  higher_differentiable_on UNIV f (Suc k)\n\ngoal (1 subgoal):\n 1. higher_differentiable_on UNIV f (Suc k) \\<and>\n    (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n    (\\<exists>p.\n        real_polynomial_function p \\<and>\n        (\\<forall>t>0.\n            nth_derivative (Suc k) f t 1 =\n            p t / t ^ (2 * Suc k) * exp (- inverse t)))", "by (auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  higher_differentiable_on UNIV f (Suc k) \\<and>\n  (\\<forall>t\\<le>0. nth_derivative (Suc k) f t 1 = 0) \\<and>\n  (\\<exists>p.\n      real_polynomial_function p \\<and>\n      (\\<forall>t>0.\n          nth_derivative (Suc k) f t 1 =\n          p t / t ^ (2 * Suc k) * exp (- inverse t)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma f_smooth_on: \"k-smooth_on S f\"\n  and f_higher_differentiable_on: \"higher_differentiable_on S f n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on S f &&& higher_differentiable_on S f n", "using f_nth_derivative_cases"], ["proof (prove)\nusing this:\n  higher_differentiable_on UNIV f ?k \\<and>\n  (\\<forall>t\\<le>0. nth_derivative ?k f t 1 = 0) \\<and>\n  (\\<exists>p.\n      real_polynomial_function p \\<and>\n      (\\<forall>t>0.\n          nth_derivative ?k f t 1 = p t / t ^ (2 * ?k) * exp (- inverse t)))\n\ngoal (1 subgoal):\n 1. k-smooth_on S f &&& higher_differentiable_on S f n", "by (auto simp: smooth_on_def higher_differentiable_on_subset[OF _ subset_UNIV])"], ["", "lemma f_compose_smooth_on: \"k-smooth_on S (\\<lambda>x. f (g x))\"\n  if \"k-smooth_on S g\" \"open S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on S (\\<lambda>x. f (g x))", "using smooth_on_compose[OF f_smooth_on that open_UNIV subset_UNIV]"], ["proof (prove)\nusing this:\n  k-smooth_on S (f \\<circ> g)\n\ngoal (1 subgoal):\n 1. k-smooth_on S (\\<lambda>x. f (g x))", "by (auto simp: o_def)"], ["", "lemma f_nonneg: \"f x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> f x", "by (auto simp: f_def)"], ["", "lemma f_pos_iff: \"f x > 0 \\<longleftrightarrow> x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < f x) = (0 < x)", "by (auto simp: f_def)"], ["", "lemma f_eq_zero_iff: \"f x = 0 \\<longleftrightarrow> x \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f x = 0) = (x \\<le> 0)", "by (auto simp: f_def)"], ["", "subsection \\<open>Cutoff function\\<close>"], ["", "definition \"h t = f (2 - t) / (f (2 - t) + f (t - 1))\""], ["", "lemma denominator_pos: \"f (2 - t) + f (t - 1) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < f (2 - t) + f (t - 1)", "by (auto simp: f_def add_pos_pos)"], ["", "lemma denominator_nonzero: \"f (2 - t) + f (t - 1) = 0 \\<longleftrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f (2 - t) + f (t - 1) = 0) = False", "using denominator_pos[of t]"], ["proof (prove)\nusing this:\n  0 < f (2 - t) + f (t - 1)\n\ngoal (1 subgoal):\n 1. (f (2 - t) + f (t - 1) = 0) = False", "by auto"], ["", "lemma h_range: \"0 \\<le> h t\" \"h t \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> h t &&& h t \\<le> 1", "by (auto simp: h_def f_nonneg denominator_pos)"], ["", "lemma h_pos: \"t < 2 \\<Longrightarrow> 0 < h t\"\n  and h_less_one: \"1 < t \\<Longrightarrow> h t < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t < 2 \\<Longrightarrow> 0 < h t) &&& (1 < t \\<Longrightarrow> h t < 1)", "by (auto simp: h_def f_pos_iff denominator_pos)"], ["", "lemma h_eq_0: \"h t = 0\" if \"t \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h t = 0", "using that"], ["proof (prove)\nusing this:\n  2 \\<le> t\n\ngoal (1 subgoal):\n 1. h t = 0", "by (auto simp: h_def)"], ["", "lemma h_eq_1: \"h t = 1\" if \"t \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h t = 1", "using that"], ["proof (prove)\nusing this:\n  t \\<le> 1\n\ngoal (1 subgoal):\n 1. h t = 1", "by (auto simp: h_def f_eq_zero_iff)"], ["", "lemma h_compose_smooth_on: \"k-smooth_on S (\\<lambda>x. h (g x))\"\n  if \"k-smooth_on S g\" \"open S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on S (\\<lambda>x. h (g x))", "by (auto simp: h_def[abs_def] denominator_nonzero\n      intro!: smooth_on_divide f_compose_smooth_on smooth_on_minus smooth_on_add\n      that)"], ["", "subsection \\<open>Bump function\\<close>"], ["", "definition H::\"_::real_inner \\<Rightarrow> real\" where \"H x = h (norm x)\""], ["", "lemma H_range: \"0 \\<le> H x\" \"H x \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> H x &&& H x \\<le> 1", "by (auto simp: H_def h_range)"], ["", "lemma H_eq_one: \"H x = 1\" if \"x \\<in> cball 0 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H x = 1", "using that"], ["proof (prove)\nusing this:\n  x \\<in> cball (0::'a) 1\n\ngoal (1 subgoal):\n 1. H x = 1", "by (auto simp: H_def h_eq_1)"], ["", "lemma H_pos: \"H x > 0\" if \"x \\<in> ball 0 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < H x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> ball (0::'a) 2\n\ngoal (1 subgoal):\n 1. 0 < H x", "by (auto simp: H_def h_pos)"], ["", "lemma H_eq_zero: \"H x = 0\" if \"x \\<notin> ball 0 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H x = 0", "using that"], ["proof (prove)\nusing this:\n  x \\<notin> ball (0::'a) 2\n\ngoal (1 subgoal):\n 1. H x = 0", "by (auto simp: H_def h_eq_0)"], ["", "lemma H_neq_zeroD: \"H x \\<noteq> 0 \\<Longrightarrow> x \\<in> ball 0 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H x \\<noteq> 0 \\<Longrightarrow> x \\<in> ball (0::'a) 2", "using H_eq_zero"], ["proof (prove)\nusing this:\n  ?x \\<notin> ball (0::?'a) 2 \\<Longrightarrow> H ?x = 0\n\ngoal (1 subgoal):\n 1. H x \\<noteq> 0 \\<Longrightarrow> x \\<in> ball (0::'a) 2", "by blast"], ["", "lemma H_smooth_on: \"k-smooth_on UNIV H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on UNIV H", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k-smooth_on UNIV H", "have 1: \"k-smooth_on (ball 0 1) H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (ball (0::'b) 1) H", "by (rule smooth_on_cong[where g=\"\\<lambda>x. 1\"]) (auto simp: H_eq_one)"], ["proof (state)\nthis:\n  k-smooth_on (ball (0::?'b1) 1) H\n\ngoal (1 subgoal):\n 1. k-smooth_on UNIV H", "have 2: \"k-smooth_on (UNIV - cball 0 (1/2)) H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (UNIV - cball (0::'b) (1 / 2)) H", "by (auto simp: H_def[abs_def]\n        intro!: h_compose_smooth_on smooth_on_norm)"], ["proof (state)\nthis:\n  k-smooth_on (UNIV - cball (0::?'b2) (1 / 2)) H\n\ngoal (1 subgoal):\n 1. k-smooth_on UNIV H", "have O: \"open (ball 0 1)\" \"open (UNIV - cball 0 (1 / 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open (ball (0::'b) 1) &&& open (UNIV - cball (0::'c) (1 / 2))", "by auto"], ["proof (state)\nthis:\n  open (ball (0::?'b3) 1)\n  open (UNIV - cball (0::?'c3) (1 / 2))\n\ngoal (1 subgoal):\n 1. k-smooth_on UNIV H", "have *: \"ball 0 1 \\<union> (UNIV - cball 0 (1 / 2)) = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ball (0::'b) 1 \\<union> (UNIV - cball (0::'b) (1 / 2)) = UNIV", "by (auto simp: mem_ball)"], ["proof (state)\nthis:\n  ball (0::?'b4) 1 \\<union> (UNIV - cball (0::?'b4) (1 / 2)) = UNIV\n\ngoal (1 subgoal):\n 1. k-smooth_on UNIV H", "from smooth_on_open_Un[OF 1 2 O, unfolded *]"], ["proof (chain)\npicking this:\n  k-smooth_on UNIV H", "show ?thesis"], ["proof (prove)\nusing this:\n  k-smooth_on UNIV H\n\ngoal (1 subgoal):\n 1. k-smooth_on UNIV H", "by (rule smooth_on_subset) auto"], ["proof (state)\nthis:\n  k-smooth_on UNIV H\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma H_compose_smooth_on: \"k-smooth_on S (\\<lambda>x. H (g x))\" if \"k-smooth_on S g\" \"open S\"\n  for g :: \"_ \\<Rightarrow> _::euclidean_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on S (\\<lambda>x. H (g x))", "using smooth_on_compose[OF H_smooth_on that]"], ["proof (prove)\nusing this:\n  \\<lbrakk>open UNIV; g ` S \\<subseteq> UNIV\\<rbrakk>\n  \\<Longrightarrow> k-smooth_on S (H \\<circ> g)\n\ngoal (1 subgoal):\n 1. k-smooth_on S (\\<lambda>x. H (g x))", "by (auto simp: o_def)"], ["", "end"], ["", "end"]]}