{"file_name": "/home/qj213/afp-2021-10-22/thys/Smooth_Manifolds/Product_Manifold.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Smooth_Manifolds", "problem_names": ["lemma domain_prod_chart[simp]: \"domain (prod_chart c1 c2) = domain c1 \\<times> domain c2\"\n  and codomain_prod_chart[simp]: \"codomain (prod_chart c1 c2) = codomain c1 \\<times> codomain c2\"\n  and apply_prod_chart[simp]: \"apply_chart (prod_chart c1 c2) = (\\<lambda>(x,y). (c1 x, c2 y))\"\n  and inv_chart_prod_chart[simp]: \"inv_chart (prod_chart c1 c2) = (\\<lambda>(x,y). (inv_chart c1 x, inv_chart c2 y))\"", "lemma prod_chart_compat:\n  \"k-smooth_compat (prod_chart c1 c2) (prod_chart d1 d2)\"\n  if compat1: \"k-smooth_compat c1 d1\" and compat2: \"k-smooth_compat c2 d2\"", "lemma c_manifold_atlas_product: \"c_manifold prod_charts k\""], "translations": [["", "lemma domain_prod_chart[simp]: \"domain (prod_chart c1 c2) = domain c1 \\<times> domain c2\"\n  and codomain_prod_chart[simp]: \"codomain (prod_chart c1 c2) = codomain c1 \\<times> codomain c2\"\n  and apply_prod_chart[simp]: \"apply_chart (prod_chart c1 c2) = (\\<lambda>(x,y). (c1 x, c2 y))\"\n  and inv_chart_prod_chart[simp]: \"inv_chart (prod_chart c1 c2) = (\\<lambda>(x,y). (inv_chart c1 x, inv_chart c2 y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (domain (prod_chart c1 c2) = domain c1 \\<times> domain c2 &&&\n     codomain (prod_chart c1 c2) = codomain c1 \\<times> codomain c2) &&&\n    apply_chart (prod_chart c1 c2) =\n    (\\<lambda>(x, y). (apply_chart c1 x, apply_chart c2 y)) &&&\n    inv_chart (prod_chart c1 c2) =\n    (\\<lambda>(x, y). (inv_chart c1 x, inv_chart c2 y))", "by (transfer, auto)+"], ["", "lemma prod_chart_compat:\n  \"k-smooth_compat (prod_chart c1 c2) (prod_chart d1 d2)\"\n  if compat1: \"k-smooth_compat c1 d1\" and compat2: \"k-smooth_compat c2 d2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat (prod_chart c1 c2) (prod_chart d1 d2)", "unfolding smooth_compat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on\n     (apply_chart (prod_chart c1 c2) `\n      (domain (prod_chart c1 c2) \\<inter> domain (prod_chart d1 d2)))\n     (apply_chart (prod_chart d1 d2) \\<circ>\n      inv_chart (prod_chart c1 c2)) \\<and>\n    k-smooth_on\n     (apply_chart (prod_chart d1 d2) `\n      (domain (prod_chart c1 c2) \\<inter> domain (prod_chart d1 d2)))\n     (apply_chart (prod_chart c1 c2) \\<circ> inv_chart (prod_chart d1 d2))", "apply (auto simp add: comp_def case_prod_beta cong del: image_cong_simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. k-smooth_on\n     ((\\<lambda>(x, y). (apply_chart c1 x, apply_chart c2 y)) `\n      (domain c1 \\<times> domain c2 \\<inter> domain d1 \\<times> domain d2))\n     (\\<lambda>x.\n         (apply_chart d1 (inv_chart c1 (fst x)),\n          apply_chart d2 (inv_chart c2 (snd x))))\n 2. k-smooth_on\n     ((\\<lambda>(x, y). (apply_chart d1 x, apply_chart d2 y)) `\n      (domain c1 \\<times> domain c2 \\<inter> domain d1 \\<times> domain d2))\n     (\\<lambda>x.\n         (apply_chart c1 (inv_chart d1 (fst x)),\n          apply_chart c2 (inv_chart d2 (snd x))))", "apply (simp add: Times_Int_Times image_prod)"], ["proof (prove)\ngoal (2 subgoals):\n 1. k-smooth_on\n     (apply_chart c1 ` (domain c1 \\<inter> domain d1) \\<times>\n      apply_chart c2 ` (domain c2 \\<inter> domain d2))\n     (\\<lambda>x.\n         (apply_chart d1 (inv_chart c1 (fst x)),\n          apply_chart d2 (inv_chart c2 (snd x))))\n 2. k-smooth_on\n     ((\\<lambda>(x, y). (apply_chart d1 x, apply_chart d2 y)) `\n      (domain c1 \\<times> domain c2 \\<inter> domain d1 \\<times> domain d2))\n     (\\<lambda>x.\n         (apply_chart c1 (inv_chart d1 (fst x)),\n          apply_chart c2 (inv_chart d2 (snd x))))", "apply (rule smooth_on_Pair')"], ["proof (prove)\ngoal (5 subgoals):\n 1. open (apply_chart c1 ` (domain c1 \\<inter> domain d1))\n 2. open (apply_chart c2 ` (domain c2 \\<inter> domain d2))\n 3. k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain d1))\n     (\\<lambda>a. apply_chart d1 (inv_chart c1 a))\n 4. k-smooth_on (apply_chart c2 ` (domain c2 \\<inter> domain d2))\n     (\\<lambda>a. apply_chart d2 (inv_chart c2 a))\n 5. k-smooth_on\n     ((\\<lambda>(x, y). (apply_chart d1 x, apply_chart d2 y)) `\n      (domain c1 \\<times> domain c2 \\<inter> domain d1 \\<times> domain d2))\n     (\\<lambda>x.\n         (apply_chart c1 (inv_chart d1 (fst x)),\n          apply_chart c2 (inv_chart d2 (snd x))))", "apply (auto intro!: continuous_intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain d1))\n     (\\<lambda>a. apply_chart d1 (inv_chart c1 a))\n 2. k-smooth_on (apply_chart c2 ` (domain c2 \\<inter> domain d2))\n     (\\<lambda>a. apply_chart d2 (inv_chart c2 a))\n 3. k-smooth_on\n     ((\\<lambda>x.\n          case x of\n          (x, y) \\<Rightarrow> (apply_chart d1 x, apply_chart d2 y)) `\n      (domain c1 \\<times> domain c2 \\<inter> domain d1 \\<times> domain d2))\n     (\\<lambda>x.\n         (apply_chart c1 (inv_chart d1 (fst x)),\n          apply_chart c2 (inv_chart d2 (snd x))))", "apply (auto simp: compat1[unfolded smooth_compat_def comp_def])"], ["proof (prove)\ngoal (2 subgoals):\n 1. k-smooth_on (apply_chart c2 ` (domain c2 \\<inter> domain d2))\n     (\\<lambda>a. apply_chart d2 (inv_chart c2 a))\n 2. k-smooth_on\n     ((\\<lambda>x.\n          case x of\n          (x, y) \\<Rightarrow> (apply_chart d1 x, apply_chart d2 y)) `\n      (domain c1 \\<times> domain c2 \\<inter> domain d1 \\<times> domain d2))\n     (\\<lambda>x.\n         (apply_chart c1 (inv_chart d1 (fst x)),\n          apply_chart c2 (inv_chart d2 (snd x))))", "apply (auto simp: compat2[unfolded smooth_compat_def comp_def])"], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on\n     ((\\<lambda>x.\n          case x of\n          (x, y) \\<Rightarrow> (apply_chart d1 x, apply_chart d2 y)) `\n      (domain c1 \\<times> domain c2 \\<inter> domain d1 \\<times> domain d2))\n     (\\<lambda>x.\n         (apply_chart c1 (inv_chart d1 (fst x)),\n          apply_chart c2 (inv_chart d2 (snd x))))", "apply (simp add: Times_Int_Times image_prod)"], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on\n     (apply_chart d1 ` (domain c1 \\<inter> domain d1) \\<times>\n      apply_chart d2 ` (domain c2 \\<inter> domain d2))\n     (\\<lambda>x.\n         (apply_chart c1 (inv_chart d1 (fst x)),\n          apply_chart c2 (inv_chart d2 (snd x))))", "apply (rule smooth_on_Pair')"], ["proof (prove)\ngoal (4 subgoals):\n 1. open (apply_chart d1 ` (domain c1 \\<inter> domain d1))\n 2. open (apply_chart d2 ` (domain c2 \\<inter> domain d2))\n 3. k-smooth_on (apply_chart d1 ` (domain c1 \\<inter> domain d1))\n     (\\<lambda>a. apply_chart c1 (inv_chart d1 a))\n 4. k-smooth_on (apply_chart d2 ` (domain c2 \\<inter> domain d2))\n     (\\<lambda>a. apply_chart c2 (inv_chart d2 a))", "apply (auto intro!: continuous_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. k-smooth_on (apply_chart d1 ` (domain c1 \\<inter> domain d1))\n     (\\<lambda>a. apply_chart c1 (inv_chart d1 a))\n 2. k-smooth_on (apply_chart d2 ` (domain c2 \\<inter> domain d2))\n     (\\<lambda>a. apply_chart c2 (inv_chart d2 a))", "apply (auto simp: compat2[unfolded smooth_compat_def comp_def])"], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart d1 ` (domain c1 \\<inter> domain d1))\n     (\\<lambda>a. apply_chart c1 (inv_chart d1 a))", "apply (auto simp: compat1[unfolded smooth_compat_def comp_def])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition prod_charts :: \"('a \\<times> 'c, 'b \\<times> 'd) chart set\" where\n  \"prod_charts = {prod_chart c1 c2 | c1 c2. c1 \\<in> charts1 \\<and> c2 \\<in> charts2}\""], ["", "lemma c_manifold_atlas_product: \"c_manifold prod_charts k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_manifold prod_charts k", "apply (unfold_locales)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>c1 \\<in> prod_charts; c2 \\<in> prod_charts\\<rbrakk>\n       \\<Longrightarrow> k-smooth_compat c1 c2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>c1 \\<in> prod_charts; c2 \\<in> prod_charts\\<rbrakk>\n       \\<Longrightarrow> k-smooth_compat c1 c2", "fix c d"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>c1 \\<in> prod_charts; c2 \\<in> prod_charts\\<rbrakk>\n       \\<Longrightarrow> k-smooth_compat c1 c2", "assume c: \"c \\<in> prod_charts\" and d: \"d \\<in> prod_charts\""], ["proof (state)\nthis:\n  c \\<in> prod_charts\n  d \\<in> prod_charts\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>c1 \\<in> prod_charts; c2 \\<in> prod_charts\\<rbrakk>\n       \\<Longrightarrow> k-smooth_compat c1 c2", "obtain c1 c2 where c_def: \"c = prod_chart c1 c2\" and c1: \"c1 \\<in> charts1\" and c2: \"c2 \\<in> charts2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>c = prod_chart c1 c2; c1 \\<in> charts1;\n         c2 \\<in> charts2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using c prod_charts_def"], ["proof (prove)\nusing this:\n  c \\<in> prod_charts\n  prod_charts =\n  {prod_chart c1 c2 |c1 c2. c1 \\<in> charts1 \\<and> c2 \\<in> charts2}\n\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>c = prod_chart c1 c2; c1 \\<in> charts1;\n         c2 \\<in> charts2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c = prod_chart c1 c2\n  c1 \\<in> charts1\n  c2 \\<in> charts2\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>c1 \\<in> prod_charts; c2 \\<in> prod_charts\\<rbrakk>\n       \\<Longrightarrow> k-smooth_compat c1 c2", "obtain d1 d2 where d_def: \"d = prod_chart d1 d2\" and d1: \"d1 \\<in> charts1\" and d2: \"d2 \\<in> charts2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d1 d2.\n        \\<lbrakk>d = prod_chart d1 d2; d1 \\<in> charts1;\n         d2 \\<in> charts2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using d prod_charts_def"], ["proof (prove)\nusing this:\n  d \\<in> prod_charts\n  prod_charts =\n  {prod_chart c1 c2 |c1 c2. c1 \\<in> charts1 \\<and> c2 \\<in> charts2}\n\ngoal (1 subgoal):\n 1. (\\<And>d1 d2.\n        \\<lbrakk>d = prod_chart d1 d2; d1 \\<in> charts1;\n         d2 \\<in> charts2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  d = prod_chart d1 d2\n  d1 \\<in> charts1\n  d2 \\<in> charts2\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>c1 \\<in> prod_charts; c2 \\<in> prod_charts\\<rbrakk>\n       \\<Longrightarrow> k-smooth_compat c1 c2", "have compat1: \"k-smooth_compat c1 d1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat c1 d1", "using c1 d1"], ["proof (prove)\nusing this:\n  c1 \\<in> charts1\n  d1 \\<in> charts1\n\ngoal (1 subgoal):\n 1. k-smooth_compat c1 d1", "by (auto intro: m1.pairwise_compat)"], ["proof (state)\nthis:\n  k-smooth_compat c1 d1\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>c1 \\<in> prod_charts; c2 \\<in> prod_charts\\<rbrakk>\n       \\<Longrightarrow> k-smooth_compat c1 c2", "have compat2: \"k-smooth_compat c2 d2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat c2 d2", "using c2 d2"], ["proof (prove)\nusing this:\n  c2 \\<in> charts2\n  d2 \\<in> charts2\n\ngoal (1 subgoal):\n 1. k-smooth_compat c2 d2", "by (auto intro: m2.pairwise_compat)"], ["proof (state)\nthis:\n  k-smooth_compat c2 d2\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>c1 \\<in> prod_charts; c2 \\<in> prod_charts\\<rbrakk>\n       \\<Longrightarrow> k-smooth_compat c1 c2", "show \"k-smooth_compat c d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat c d", "unfolding c_def d_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat (prod_chart c1 c2) (prod_chart d1 d2)", "using compat1 compat2"], ["proof (prove)\nusing this:\n  k-smooth_compat c1 d1\n  k-smooth_compat c2 d2\n\ngoal (1 subgoal):\n 1. k-smooth_compat (prod_chart c1 c2) (prod_chart d1 d2)", "by (rule prod_chart_compat)"], ["proof (state)\nthis:\n  k-smooth_compat c d\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}