{"file_name": "/home/qj213/afp-2021-10-22/thys/Smooth_Manifolds/Differentiable_Manifold.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Smooth_Manifolds", "problem_names": ["lemma smooth_compat_D1:\n  \"k-smooth_on (c1 ` (domain c1 \\<inter> domain c2)) (c2 \\<circ> inv_chart c1)\"\n  if \"k-smooth_compat c1 c2\"", "lemma smooth_compat_D2:\n  \"k-smooth_on (c2 ` (domain c1 \\<inter> domain c2)) (c1 \\<circ> inv_chart c2)\"\n  if \"k-smooth_compat c1 c2\"", "lemma smooth_compat_refl: \"k-smooth_compat x x\"", "lemma smooth_compat_commute: \"k-smooth_compat x y \\<longleftrightarrow> k-smooth_compat y x\"", "lemma smooth_compat_restrict_chartI:\n  \"k-smooth_compat (restrict_chart S c) c'\"\n  if \"k-smooth_compat c c'\"", "lemma smooth_compat_restrict_chartI2:\n  \"k-smooth_compat c' (restrict_chart S c)\"\n  if \"k-smooth_compat c' c\"", "lemma smooth_compat_restrict_chartD:\n  \"domain c1 \\<subseteq> U \\<Longrightarrow> open U \\<Longrightarrow> k-smooth_compat c1 (restrict_chart U c2) \\<Longrightarrow> k-smooth_compat c1 c2\"", "lemma smooth_compat_restrict_chartD2:\n  \"domain c1 \\<subseteq> U \\<Longrightarrow> open U \\<Longrightarrow> k-smooth_compat (restrict_chart U c2) c1 \\<Longrightarrow> k-smooth_compat c2 c1\"", "lemma smooth_compat_le:\n  \"l-smooth_compat c1 c2\" if \"k-smooth_compat c1 c2\" \"l \\<le> k\"", "lemma charts_subset_atlas: \"charts \\<subseteq> atlas\"", "lemma in_charts_in_atlas[intro]: \"x \\<in> charts \\<Longrightarrow> x \\<in> atlas\"", "lemma maximal_atlas:\n  \"c \\<in> atlas\"\n  if \"\\<And>c'. c' \\<in> atlas \\<Longrightarrow> k-smooth_compat c c'\"\n    \"domain c \\<subseteq> carrier\"", "lemma chart_compose_lemma:\n  fixes c1 c2\n  defines [simp]: \"U \\<equiv> domain c1\"\n  defines [simp]: \"V \\<equiv> domain c2\"\n  assumes subsets: \"U \\<inter> V \\<subseteq> carrier\"\n  assumes \"\\<And>c. c \\<in> charts \\<Longrightarrow> k-smooth_compat c1 c\"\n    \"\\<And>c. c \\<in> charts \\<Longrightarrow> k-smooth_compat c2 c\"\n  shows \"k-smooth_on (c1 ` (U \\<inter> V)) (c2 \\<circ> inv_chart c1)\"", "lemma smooth_compat_trans: \"k-smooth_compat c1 c2\"\n  if \"\\<And>c. c \\<in> charts \\<Longrightarrow> k-smooth_compat c1 c\"\n    \"\\<And>c. c \\<in> charts \\<Longrightarrow> k-smooth_compat c2 c\"\n    \"domain c1 \\<inter> domain c2 \\<subseteq> carrier\"", "lemma maximal_atlas':\n  \"c \\<in> atlas\"\n  if \"\\<And>c'. c' \\<in> charts \\<Longrightarrow> k-smooth_compat c c'\"\n    \"domain c \\<subseteq> carrier\"", "lemma atlas_is_atlas: \"k-smooth_compat a1 a2\"\n  if \"a1 \\<in> atlas\" \"a2 \\<in> atlas\"", "lemma domain_atlas_subset_carrier: \"c \\<in> atlas \\<Longrightarrow> domain c \\<subseteq> carrier\"\n  and in_carrier_atlasI[intro, simp]: \"c \\<in> atlas \\<Longrightarrow> x \\<in> domain c \\<Longrightarrow> x \\<in> carrier\"", "lemma atlasE:\n  assumes \"x \\<in> carrier\"\n  obtains c where \"c \\<in> atlas\" \"x \\<in> domain c\"", "lemma restrict_chart_in_atlas: \"restrict_chart S c \\<in> atlas\" if \"c \\<in> atlas\"", "lemma atlas_restrictE:\n  assumes \"x \\<in> carrier\" \"x \\<in> X\" \"open X\"\n  obtains c where \"c \\<in> atlas\" \"x \\<in> domain c\" \"domain c \\<subseteq> X\"", "lemma open_ball_chartE:\n  assumes \"x \\<in> U\" \"open U\" \"U \\<subseteq> carrier\"\n  obtains c r where\n    \"c \\<in> atlas\"\n    \"x \\<in> domain c\" \"domain c \\<subseteq> U\" \"codomain c = ball (c x) r\" \"r > 0\"", "lemma smooth_compat_compose_chart:\n  fixes c'\n  assumes \"k-smooth_compat c c'\"\n  assumes diffeo: \"diffeomorphism k UNIV UNIV p p'\"\n  shows \"k-smooth_compat (compose_chart p p' c) c'\"", "lemma compose_chart_in_atlas:\n  assumes \"c \\<in> atlas\"\n  assumes diffeo: \"diffeomorphism k UNIV UNIV p p'\"\n  shows \"compose_chart p p' c \\<in> atlas\"", "lemma open_centered_ball_chartE:\n  assumes \"x \\<in> U\" \"open U\" \"U \\<subseteq> carrier\" \"e > 0\"\n  obtains c where\n    \"c \\<in> atlas\" \"x \\<in> domain c\" \"c x = x0\" \"domain c \\<subseteq> U\" \"codomain c = ball x0 e\"", "lemma charts_submanifold: \"c_manifold (charts_submanifold S) k\"", "lemma carrier_submanifold[simp]: \"sub.carrier = S \\<inter> carrier\"", "lemma restrict_chart_carrier[simp]:\n  \"restrict_chart carrier x = x\"\n  if \"x \\<in> charts\"", "lemma charts_submanifold_carrier[simp]: \"charts_submanifold carrier = charts\"", "lemma charts_submanifold_Int_carrier:\n  \"charts_submanifold (S \\<inter> carrier) = charts_submanifold S\"", "lemma submanifold_atlasE:\n  assumes \"c \\<in> sub.atlas\"\n  shows \"c \\<in> atlas\"", "lemma submanifold_atlasI:\n  \"restrict_chart S c \\<in> sub.atlas\"\n  if \"c \\<in> atlas\"", "lemma (in c_manifold) restrict_chart_carrier[simp]:\n  \"restrict_chart carrier x = x\"\n  if \"x \\<in> charts\"", "lemma (in c_manifold) charts_submanifold_carrier[simp]: \"charts_submanifold carrier = charts\"", "lemma defined: \"f ` src.carrier \\<subseteq> dest.carrier\"", "lemma diff_iff: \"diff k charts1 charts2 f \\<longleftrightarrow>\n  (\\<forall>x\\<in>src.carrier. \\<exists>c1\\<in>src.atlas. \\<exists>c2\\<in>dest.atlas.\n    x \\<in> domain c1 \\<and>\n    f ` domain c1 \\<subseteq> domain c2 \\<and>\n    k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1))\"\n  (is \"?l \\<longleftrightarrow> (\\<forall>x\\<in>_. ?r x)\")", "lemma diffE:\n  assumes \"x \\<in> src.carrier\"\n  obtains c1::\"('a, 'e) chart\"\n    and c2::\"('b, 'f) chart\"\n  where\n    \"c1 \\<in> src.atlas\" \"c2 \\<in> dest.atlas\" \"x \\<in> domain c1\" \"f ` domain c1 \\<subseteq> domain c2\"\n    \"k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\"", "lemma continuous_at: \"continuous (at x within T) f\" if \"x \\<in> src.carrier\"", "lemma continuous_on: \"continuous_on src.carrier f\"", "lemmas continuous_on_intro[continuous_intros] = continuous_on_compose2[OF continuous_on _]", "lemmas continuous_within[continuous_intros] = continuous_within_compose3[OF continuous_at]", "lemmas tendsto[tendsto_intros] = isCont_tendsto_compose[OF continuous_at]", "lemma diff_chartsD:\n  assumes \"d1 \\<in> src.atlas\" \"d2 \\<in> dest.atlas\"\n  shows \"k-smooth_on (codomain d1 \\<inter> inv_chart d1 -` (src.carrier \\<inter> f -` domain d2))\n      (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\"", "lemma diff_between_chartsE:\n  assumes \"d1 \\<in> src.atlas\" \"d2 \\<in> dest.atlas\"\n  assumes \"y \\<in> domain d1\" \"y \\<in> src.carrier\" \"f y \\<in> domain d2\"\n  obtains X where\n    \"k-smooth_on X (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\"\n    \"d1 y \\<in> X\"\n    \"open X\"\n    \"X = codomain d1 \\<inter> inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\"", "lemma diff_compose:\n  \"diff k M1 M3 (g \\<circ> f)\"\n  if \"diff k M1 M2 f\" \"diff k M2 M3 g\"", "lemma diff_submanifold: \"diff k (src.charts_submanifold S) charts2 f\"\n  if \"open S\"", "lemma diff_submanifold2: \"diff k charts1 (dest.charts_submanifold S) f\"\n  if \"open S\" \"f ` src.carrier \\<subseteq> S\"", "lemma diff_localI: \"diff k charts1 charts2 f\"\n  if \"\\<And>x. x \\<in> src.carrier \\<Longrightarrow> diff k (src.charts_submanifold (U x)) charts2 f\"\n    \"\\<And>x. x \\<in> src.carrier \\<Longrightarrow> open (U x)\"\n    \"\\<And>x. x \\<in> src.carrier \\<Longrightarrow> x \\<in> (U x)\"", "lemma diff_open_coverI: \"diff k charts1 charts2 f\"\n  if diff: \"\\<And>u. u \\<in> U \\<Longrightarrow> diff k (src.charts_submanifold u) charts2 f\"\n    and op: \"\\<And>u. u \\<in> U \\<Longrightarrow> open u\"\n    and cover: \"src.carrier \\<subseteq> \\<Union>U\"", "lemma diff_open_Un: \"diff k charts1 charts2 f\"\n  if \"diff k (src.charts_submanifold U) charts2 f\"\n    \"diff k (src.charts_submanifold V) charts2 f\"\n    and \"open U\" \"open V\" \"src.carrier \\<subseteq> U \\<union> V\"", "lemma diff_id: \"diff k charts charts (\\<lambda>x. x)\"", "lemma c_manifold_order_le: \"c_manifold charts l\" if \"l \\<le> k\"", "lemma in_atlas_order_le: \"c \\<in> c_manifold.atlas charts l\" if \"l \\<le> k\" \"c \\<in> atlas\"", "lemma c_manifolds_order_le: \"c_manifolds l charts1 charts2\" if \"l \\<le> k\"", "lemma diff_order_le: \"diff l charts1 charts2 f\" if \"l \\<le> k\"", "lemma chart_eucl_simps[simp]:\n  \"domain chart_eucl = UNIV\"\n  \"codomain chart_eucl = UNIV\"\n  \"apply_chart chart_eucl = (\\<lambda>x. x)\"\n  \"inv_chart chart_eucl = (\\<lambda>x. x)\"", "lemma diff_fun_compose:\n  \"diff_fun k M1 (g \\<circ> f)\"\n  if \"diff k M1 M2 f\" \"diff_fun k M2 g\"", "lemma c1_manifold_atlas_eucl: \"c_manifold charts_eucl k\"", "lemma chart_eucl_in_atlas[intro,simp]: \"chart_eucl \\<in> manifold_eucl.atlas k\"", "lemma apply_chart_smooth_on:\n  \"k-smooth_on (domain c) c\" if \"c \\<in> manifold_eucl.atlas k\"", "lemma inv_chart_smooth_on: \"k-smooth_on (codomain c) (inv_chart c)\" if \"c \\<in> manifold_eucl.atlas k\"", "lemma smooth_on_chart_inv:\n  fixes c::\"('a::euclidean_space, 'a) chart\"\n  assumes \"k-smooth_on X (apply_chart c \\<circ> f)\"\n  assumes \"continuous_on X f\"\n  assumes \"c \\<in> manifold_eucl.atlas k\" \"open X\" \"f ` X \\<subseteq> domain c\"\n  shows \"k-smooth_on X f\"", "lemma smooth_on_chart_inv2:\n  fixes c::\"('a::euclidean_space, 'a) chart\"\n  assumes \"k-smooth_on (c ` X) (f o inv_chart c)\"\n  assumes \"c \\<in> manifold_eucl.atlas k\" \"open X\" \"X \\<subseteq> domain c\"\n  shows \"k-smooth_on X f\"", "lemma diff_fun_order_le: \"diff_fun l charts f\" if \"l \\<le> k\"", "lemma diff_funI:\n  \"diff_fun k charts f\"\n  if \"(\\<And>x. x\\<in>carrier \\<Longrightarrow> \\<exists>c1\\<in>atlas. x \\<in> domain c1 \\<and> (k-smooth_on (codomain c1) (f \\<circ> inv_chart c1)))\"", "lemma (in diff) diff_cong: \"diff k charts1 charts2 g\" if \"\\<And>x. x \\<in> src.carrier \\<Longrightarrow> f x = g x\"", "lemma diff_fun_cong: \"diff_fun k charts g\" if \"\\<And>x. x \\<in> src.carrier \\<Longrightarrow> f x = g x\"", "lemma diff_funD:\n  \"\\<exists>c1\\<in>src.atlas. x \\<in> domain c1 \\<and> (k-smooth_on (codomain c1) (f \\<circ> inv_chart c1))\"\n  if x: \"x \\<in> src.carrier\"", "lemma diff_funE:\n  assumes \"x \\<in> src.carrier\"\n  obtains c1 where\n    \"c1\\<in>src.atlas\" \"x \\<in> domain c1\" \"k-smooth_on (codomain c1) (f \\<circ> inv_chart c1)\"", "lemma diff_fun_between_chartsD:\n  assumes \"c \\<in> src.atlas\" \"x \\<in> domain c\"\n  shows \"k-smooth_on (codomain c) (f \\<circ> inv_chart c)\"", "lemma diff_fun_submanifold: \"diff_fun k (src.charts_submanifold S) f\"\n  if [simp]: \"open S\"", "lemma diff_fun_zero: \"diff_fun k charts 0\"", "lemma diff_fun_const: \"diff_fun k charts (\\<lambda>x. c)\"", "lemma diff_fun_add: \"diff_fun k charts (a + b)\" if \"diff_fun k charts a\" \"diff_fun k charts b\"", "lemma diff_fun_sum: \"diff_fun k charts (\\<lambda>x. \\<Sum>i\\<in>S. f i x)\" if \"\\<And>i. i \\<in> S \\<Longrightarrow> diff_fun k charts (f i)\"", "lemma diff_fun_scaleR: \"diff_fun k charts (\\<lambda>x. a x *\\<^sub>R b x)\"\n    if \"diff_fun k charts a\" \"diff_fun k charts b\"", "lemma diff_fun_scaleR_left: \"diff_fun k charts (c *\\<^sub>R b)\"\n  if \"diff_fun k charts b\"", "lemma diff_fun_times: \"diff_fun k charts (a * b)\" if \"diff_fun k charts a\" \"diff_fun k charts b\"\n  for a b::\"_ \\<Rightarrow> _::real_normed_algebra\"", "lemma diff_fun_divide: \"diff_fun k charts (\\<lambda>x. a x / b x)\"\n  if \"diff_fun k charts a\" \"diff_fun k charts b\"\n    and nz: \"\\<And>x. x \\<in> carrier \\<Longrightarrow> b x \\<noteq> 0\"\n  for a b::\"_ \\<Rightarrow> _::real_normed_field\"", "lemma subspace_Collect_diff_fun:\n  \"subspace (Collect (diff_fun k charts))\"", "lemma manifold_eucl_carrier[simp]: \"manifold_eucl.carrier = UNIV\"", "lemma diff_fun_charts_euclD: \"k-smooth_on UNIV g\" if \"diff_fun k charts_eucl g\"", "lemma diff_fun_charts_euclI: \"diff_fun k charts_eucl g\" if \"k-smooth_on UNIV g\""], "translations": [["", "lemma smooth_compat_D1:\n  \"k-smooth_on (c1 ` (domain c1 \\<inter> domain c2)) (c2 \\<circ> inv_chart c1)\"\n  if \"k-smooth_compat c1 c2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c2 \\<circ> inv_chart c1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c2 \\<circ> inv_chart c1)", "have \"open (c1 ` (domain c1 \\<inter> domain c2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open (apply_chart c1 ` (domain c1 \\<inter> domain c2))", "by (rule open_chart_image) auto"], ["proof (state)\nthis:\n  open (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c2 \\<circ> inv_chart c1)", "moreover"], ["proof (state)\nthis:\n  open (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c2 \\<circ> inv_chart c1)", "have \"k-smooth_on (c1 ` (domain c1 \\<inter> domain c2)) (c2 \\<circ> inv_chart c1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c2 \\<circ> inv_chart c1)", "using that(1)"], ["proof (prove)\nusing this:\n  k-smooth_compat c1 c2\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c2 \\<circ> inv_chart c1)", "by (auto simp: smooth_compat_def)"], ["proof (state)\nthis:\n  k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n   (apply_chart c2 \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c2 \\<circ> inv_chart c1)", "ultimately"], ["proof (chain)\npicking this:\n  open (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n  k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n   (apply_chart c2 \\<circ> inv_chart c1)", "show ?thesis"], ["proof (prove)\nusing this:\n  open (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n  k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n   (apply_chart c2 \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c2 \\<circ> inv_chart c1)", "by blast"], ["proof (state)\nthis:\n  k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n   (apply_chart c2 \\<circ> inv_chart c1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smooth_compat_D2:\n  \"k-smooth_on (c2 ` (domain c1 \\<inter> domain c2)) (c1 \\<circ> inv_chart c2)\"\n  if \"k-smooth_compat c1 c2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c1 \\<circ> inv_chart c2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c1 \\<circ> inv_chart c2)", "have \"open (c2 ` (domain c1 \\<inter> domain c2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open (apply_chart c2 ` (domain c1 \\<inter> domain c2))", "by (rule open_chart_image) auto"], ["proof (state)\nthis:\n  open (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c1 \\<circ> inv_chart c2)", "moreover"], ["proof (state)\nthis:\n  open (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c1 \\<circ> inv_chart c2)", "have \"k-smooth_on (c2 ` (domain c1 \\<inter> domain c2)) (c1 \\<circ> inv_chart c2) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c1 \\<circ> inv_chart c2)", "using that(1)"], ["proof (prove)\nusing this:\n  k-smooth_compat c1 c2\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c1 \\<circ> inv_chart c2)", "by (auto simp: smooth_compat_def)"], ["proof (state)\nthis:\n  k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n   (apply_chart c1 \\<circ> inv_chart c2)\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c1 \\<circ> inv_chart c2)", "ultimately"], ["proof (chain)\npicking this:\n  open (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n  k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n   (apply_chart c1 \\<circ> inv_chart c2)", "show ?thesis"], ["proof (prove)\nusing this:\n  open (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n  k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n   (apply_chart c1 \\<circ> inv_chart c2)\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c1 \\<circ> inv_chart c2)", "by blast"], ["proof (state)\nthis:\n  k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n   (apply_chart c1 \\<circ> inv_chart c2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smooth_compat_refl: \"k-smooth_compat x x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat x x", "unfolding smooth_compat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart x ` (domain x \\<inter> domain x))\n     (apply_chart x \\<circ> inv_chart x) \\<and>\n    k-smooth_on (apply_chart x ` (domain x \\<inter> domain x))\n     (apply_chart x \\<circ> inv_chart x)", "by (auto intro: smooth_on_cong[where g=\"\\<lambda>x. x\"] simp: smooth_on_id)"], ["", "lemma smooth_compat_commute: \"k-smooth_compat x y \\<longleftrightarrow> k-smooth_compat y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat x y = k-smooth_compat y x", "by (auto simp: smooth_compat_def inf_commute)"], ["", "lemma smooth_compat_restrict_chartI:\n  \"k-smooth_compat (restrict_chart S c) c'\"\n  if \"k-smooth_compat c c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat (restrict_chart S c) c'", "using that"], ["proof (prove)\nusing this:\n  k-smooth_compat c c'\n\ngoal (1 subgoal):\n 1. k-smooth_compat (restrict_chart S c) c'", "by (auto simp: smooth_compat_def domain_restrict_chart_if intro: smooth_on_subset)"], ["", "lemma smooth_compat_restrict_chartI2:\n  \"k-smooth_compat c' (restrict_chart S c)\"\n  if \"k-smooth_compat c' c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat c' (restrict_chart S c)", "using smooth_compat_restrict_chartI[of k c c'] that"], ["proof (prove)\nusing this:\n  k-smooth_compat c c' \\<Longrightarrow>\n  k-smooth_compat (restrict_chart ?S c) c'\n  k-smooth_compat c' c\n\ngoal (1 subgoal):\n 1. k-smooth_compat c' (restrict_chart S c)", "by (auto simp: smooth_compat_commute)"], ["", "lemma smooth_compat_restrict_chartD:\n  \"domain c1 \\<subseteq> U \\<Longrightarrow> open U \\<Longrightarrow> k-smooth_compat c1 (restrict_chart U c2) \\<Longrightarrow> k-smooth_compat c1 c2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>domain c1 \\<subseteq> U; open U;\n     k-smooth_compat c1 (restrict_chart U c2)\\<rbrakk>\n    \\<Longrightarrow> k-smooth_compat c1 c2", "by (auto simp: smooth_compat_def domain_restrict_chart_if intro: smooth_on_subset)"], ["", "lemma smooth_compat_restrict_chartD2:\n  \"domain c1 \\<subseteq> U \\<Longrightarrow> open U \\<Longrightarrow> k-smooth_compat (restrict_chart U c2) c1 \\<Longrightarrow> k-smooth_compat c2 c1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>domain c1 \\<subseteq> U; open U;\n     k-smooth_compat (restrict_chart U c2) c1\\<rbrakk>\n    \\<Longrightarrow> k-smooth_compat c2 c1", "using smooth_compat_restrict_chartD[of c1 U k c2]"], ["proof (prove)\nusing this:\n  \\<lbrakk>domain c1 \\<subseteq> U; open U;\n   k-smooth_compat c1 (restrict_chart U c2)\\<rbrakk>\n  \\<Longrightarrow> k-smooth_compat c1 c2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>domain c1 \\<subseteq> U; open U;\n     k-smooth_compat (restrict_chart U c2) c1\\<rbrakk>\n    \\<Longrightarrow> k-smooth_compat c2 c1", "by (auto simp: smooth_compat_commute)"], ["", "lemma smooth_compat_le:\n  \"l-smooth_compat c1 c2\" if \"k-smooth_compat c1 c2\" \"l \\<le> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l-smooth_compat c1 c2", "using that"], ["proof (prove)\nusing this:\n  k-smooth_compat c1 c2\n  l \\<le> k\n\ngoal (1 subgoal):\n 1. l-smooth_compat c1 c2", "by (auto simp: smooth_compat_def smooth_on_le)"], ["", "subsection \\<open>\\<open>C^k\\<close>-Manifold\\<close>"], ["", "locale c_manifold = manifold +\n  fixes k::enat\n  assumes pairwise_compat: \"c1 \\<in> charts \\<Longrightarrow> c2 \\<in> charts \\<Longrightarrow> k-smooth_compat c1 c2\"\nbegin"], ["", "subsubsection \\<open>Atlas\\<close>"], ["", "definition atlas :: \"('a, 'b) chart set\" where\n  \"atlas = {c. domain c \\<subseteq> carrier \\<and> (\\<forall>c' \\<in> charts. k-smooth_compat c c')}\""], ["", "lemma charts_subset_atlas: \"charts \\<subseteq> atlas\""], ["proof (prove)\ngoal (1 subgoal):\n 1. charts \\<subseteq> atlas", "by (auto simp: atlas_def pairwise_compat)"], ["", "lemma in_charts_in_atlas[intro]: \"x \\<in> charts \\<Longrightarrow> x \\<in> atlas\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> charts \\<Longrightarrow> x \\<in> atlas", "by (auto simp: atlas_def pairwise_compat)"], ["", "lemma maximal_atlas:\n  \"c \\<in> atlas\"\n  if \"\\<And>c'. c' \\<in> atlas \\<Longrightarrow> k-smooth_compat c c'\"\n    \"domain c \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> atlas", "using that charts_subset_atlas"], ["proof (prove)\nusing this:\n  ?c' \\<in> atlas \\<Longrightarrow> k-smooth_compat c ?c'\n  domain c \\<subseteq> carrier\n  charts \\<subseteq> atlas\n\ngoal (1 subgoal):\n 1. c \\<in> atlas", "by (auto simp: atlas_def)"], ["", "lemma chart_compose_lemma:\n  fixes c1 c2\n  defines [simp]: \"U \\<equiv> domain c1\"\n  defines [simp]: \"V \\<equiv> domain c2\"\n  assumes subsets: \"U \\<inter> V \\<subseteq> carrier\"\n  assumes \"\\<And>c. c \\<in> charts \\<Longrightarrow> k-smooth_compat c1 c\"\n    \"\\<And>c. c \\<in> charts \\<Longrightarrow> k-smooth_compat c2 c\"\n  shows \"k-smooth_on (c1 ` (U \\<inter> V)) (c2 \\<circ> inv_chart c1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (U \\<inter> V))\n     (apply_chart c2 \\<circ> inv_chart c1)", "proof (rule smooth_on_open_subsetsI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> apply_chart c1 ` (U \\<inter> V) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)", "fix w'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> apply_chart c1 ` (U \\<inter> V) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)", "assume \"w' \\<in> c1 ` (U \\<inter> V)\""], ["proof (state)\nthis:\n  w' \\<in> apply_chart c1 ` (U \\<inter> V)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> apply_chart c1 ` (U \\<inter> V) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)", "then"], ["proof (chain)\npicking this:\n  w' \\<in> apply_chart c1 ` (U \\<inter> V)", "obtain w where w': \"w' = c1 w\" and \"w \\<in> U\" \"w \\<in> V\""], ["proof (prove)\nusing this:\n  w' \\<in> apply_chart c1 ` (U \\<inter> V)\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>w' = apply_chart c1 w; w \\<in> U; w \\<in> V\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w' = apply_chart c1 w\n  w \\<in> U\n  w \\<in> V\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> apply_chart c1 ` (U \\<inter> V) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)", "then"], ["proof (chain)\npicking this:\n  w' = apply_chart c1 w\n  w \\<in> U\n  w \\<in> V", "have \"w \\<in> carrier\""], ["proof (prove)\nusing this:\n  w' = apply_chart c1 w\n  w \\<in> U\n  w \\<in> V\n\ngoal (1 subgoal):\n 1. w \\<in> carrier", "using subsets"], ["proof (prove)\nusing this:\n  w' = apply_chart c1 w\n  w \\<in> U\n  w \\<in> V\n  U \\<inter> V \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. w \\<in> carrier", "by auto"], ["proof (state)\nthis:\n  w \\<in> carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> apply_chart c1 ` (U \\<inter> V) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)", "then"], ["proof (chain)\npicking this:\n  w \\<in> carrier", "obtain c3 where c3: \"w \\<in> domain c3\" \"c3 \\<in> charts\""], ["proof (prove)\nusing this:\n  w \\<in> carrier\n\ngoal (1 subgoal):\n 1. (\\<And>c3.\n        \\<lbrakk>w \\<in> domain c3; c3 \\<in> charts\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule carrierE)"], ["proof (state)\nthis:\n  w \\<in> domain c3\n  c3 \\<in> charts\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> apply_chart c1 ` (U \\<inter> V) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)", "then"], ["proof (chain)\npicking this:\n  w \\<in> domain c3\n  c3 \\<in> charts", "have c13: \"k-smooth_compat c1 c3\" and c23: \"k-smooth_compat c2 c3\""], ["proof (prove)\nusing this:\n  w \\<in> domain c3\n  c3 \\<in> charts\n\ngoal (1 subgoal):\n 1. k-smooth_compat c1 c3 &&& k-smooth_compat c2 c3", "using assms"], ["proof (prove)\nusing this:\n  w \\<in> domain c3\n  c3 \\<in> charts\n  U \\<equiv> domain c1\n  V \\<equiv> domain c2\n  U \\<inter> V \\<subseteq> carrier\n  ?c \\<in> charts \\<Longrightarrow> k-smooth_compat c1 ?c\n  ?c \\<in> charts \\<Longrightarrow> k-smooth_compat c2 ?c\n\ngoal (1 subgoal):\n 1. k-smooth_compat c1 c3 &&& k-smooth_compat c2 c3", "by auto"], ["proof (state)\nthis:\n  k-smooth_compat c1 c3\n  k-smooth_compat c2 c3\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> apply_chart c1 ` (U \\<inter> V) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)", "define W where [simp]: \"W = domain c3\""], ["proof (state)\nthis:\n  W = domain c3\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> apply_chart c1 ` (U \\<inter> V) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)", "have diff1: \"k-smooth_on (c1 ` (U \\<inter> W)) (c3 \\<circ> inv_chart c1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (U \\<inter> W))\n     (apply_chart c3 \\<circ> inv_chart c1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (U \\<inter> W))\n     (apply_chart c3 \\<circ> inv_chart c1)", "have 1: \"open (c1 ` (U \\<inter> W))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open (apply_chart c1 ` (U \\<inter> W))", "by (rule open_chart_image) auto"], ["proof (state)\nthis:\n  open (apply_chart c1 ` (U \\<inter> W))\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (U \\<inter> W))\n     (apply_chart c3 \\<circ> inv_chart c1)", "have 2: \"w' \\<in> c1 ` (U \\<inter> W)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w' \\<in> apply_chart c1 ` (U \\<inter> W)", "using \\<open>w \\<in> U\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> U\n\ngoal (1 subgoal):\n 1. w' \\<in> apply_chart c1 ` (U \\<inter> W)", "by (auto simp: c3 w')"], ["proof (state)\nthis:\n  w' \\<in> apply_chart c1 ` (U \\<inter> W)\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (U \\<inter> W))\n     (apply_chart c3 \\<circ> inv_chart c1)", "from c13"], ["proof (chain)\npicking this:\n  k-smooth_compat c1 c3", "show ?thesis"], ["proof (prove)\nusing this:\n  k-smooth_compat c1 c3\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (U \\<inter> W))\n     (apply_chart c3 \\<circ> inv_chart c1)", "by (auto simp: smooth_compat_def)"], ["proof (state)\nthis:\n  k-smooth_on (apply_chart c1 ` (U \\<inter> W))\n   (apply_chart c3 \\<circ> inv_chart c1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k-smooth_on (apply_chart c1 ` (U \\<inter> W))\n   (apply_chart c3 \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> apply_chart c1 ` (U \\<inter> V) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)", "define y where \"y = (c3 \\<circ> inv_chart c1) w'\""], ["proof (state)\nthis:\n  y = (apply_chart c3 \\<circ> inv_chart c1) w'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> apply_chart c1 ` (U \\<inter> V) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)", "have diff2: \"k-smooth_on (c3 ` (V \\<inter> W)) (c2 \\<circ> inv_chart c3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c3 ` (V \\<inter> W))\n     (apply_chart c2 \\<circ> inv_chart c3)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c3 ` (V \\<inter> W))\n     (apply_chart c2 \\<circ> inv_chart c3)", "have 1: \"open (c3 ` (V \\<inter> W))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open (apply_chart c3 ` (V \\<inter> W))", "by (rule open_chart_image) auto"], ["proof (state)\nthis:\n  open (apply_chart c3 ` (V \\<inter> W))\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c3 ` (V \\<inter> W))\n     (apply_chart c2 \\<circ> inv_chart c3)", "have 2: \"y \\<in> c3 ` (V \\<inter> W)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> apply_chart c3 ` (V \\<inter> W)", "using \\<open>w \\<in> U\\<close> \\<open>w \\<in> V\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> U\n  w \\<in> V\n\ngoal (1 subgoal):\n 1. y \\<in> apply_chart c3 ` (V \\<inter> W)", "by (auto simp: y_def c3 w')"], ["proof (state)\nthis:\n  y \\<in> apply_chart c3 ` (V \\<inter> W)\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c3 ` (V \\<inter> W))\n     (apply_chart c2 \\<circ> inv_chart c3)", "from c23"], ["proof (chain)\npicking this:\n  k-smooth_compat c2 c3", "show ?thesis"], ["proof (prove)\nusing this:\n  k-smooth_compat c2 c3\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c3 ` (V \\<inter> W))\n     (apply_chart c2 \\<circ> inv_chart c3)", "by (auto simp: smooth_compat_def)"], ["proof (state)\nthis:\n  k-smooth_on (apply_chart c3 ` (V \\<inter> W))\n   (apply_chart c2 \\<circ> inv_chart c3)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k-smooth_on (apply_chart c3 ` (V \\<inter> W))\n   (apply_chart c2 \\<circ> inv_chart c3)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> apply_chart c1 ` (U \\<inter> V) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)", "have \"k-smooth_on (c1 ` (U \\<inter> V \\<inter> W)) ((c2 \\<circ> inv_chart c3) o (c3 \\<circ> inv_chart c1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (U \\<inter> V \\<inter> W))\n     (apply_chart c2 \\<circ> inv_chart c3 \\<circ>\n      (apply_chart c3 \\<circ> inv_chart c1))", "using diff2 diff1"], ["proof (prove)\nusing this:\n  k-smooth_on (apply_chart c3 ` (V \\<inter> W))\n   (apply_chart c2 \\<circ> inv_chart c3)\n  k-smooth_on (apply_chart c1 ` (U \\<inter> W))\n   (apply_chart c3 \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (U \\<inter> V \\<inter> W))\n     (apply_chart c2 \\<circ> inv_chart c3 \\<circ>\n      (apply_chart c3 \\<circ> inv_chart c1))", "by (rule smooth_on_compose2) auto"], ["proof (state)\nthis:\n  k-smooth_on (apply_chart c1 ` (U \\<inter> V \\<inter> W))\n   (apply_chart c2 \\<circ> inv_chart c3 \\<circ>\n    (apply_chart c3 \\<circ> inv_chart c1))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> apply_chart c1 ` (U \\<inter> V) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)", "then"], ["proof (chain)\npicking this:\n  k-smooth_on (apply_chart c1 ` (U \\<inter> V \\<inter> W))\n   (apply_chart c2 \\<circ> inv_chart c3 \\<circ>\n    (apply_chart c3 \\<circ> inv_chart c1))", "have \"k-smooth_on (c1 ` (U \\<inter> V \\<inter> W)) (c2 \\<circ> inv_chart c1)\""], ["proof (prove)\nusing this:\n  k-smooth_on (apply_chart c1 ` (U \\<inter> V \\<inter> W))\n   (apply_chart c2 \\<circ> inv_chart c3 \\<circ>\n    (apply_chart c3 \\<circ> inv_chart c1))\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (U \\<inter> V \\<inter> W))\n     (apply_chart c2 \\<circ> inv_chart c1)", "by (rule smooth_on_cong) auto"], ["proof (state)\nthis:\n  k-smooth_on (apply_chart c1 ` (U \\<inter> V \\<inter> W))\n   (apply_chart c2 \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> apply_chart c1 ` (U \\<inter> V) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)", "moreover"], ["proof (state)\nthis:\n  k-smooth_on (apply_chart c1 ` (U \\<inter> V \\<inter> W))\n   (apply_chart c2 \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> apply_chart c1 ` (U \\<inter> V) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)", "have \"w' \\<in> c1 ` (U \\<inter> V \\<inter> W)\" \"open (c1 ` (U \\<inter> V \\<inter> W))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w' \\<in> apply_chart c1 ` (U \\<inter> V \\<inter> W) &&&\n    open (apply_chart c1 ` (U \\<inter> V \\<inter> W))", "using \\<open>w \\<in> U\\<close> \\<open>w \\<in> V\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> U\n  w \\<in> V\n\ngoal (1 subgoal):\n 1. w' \\<in> apply_chart c1 ` (U \\<inter> V \\<inter> W) &&&\n    open (apply_chart c1 ` (U \\<inter> V \\<inter> W))", "by (auto simp: w' c3)"], ["proof (state)\nthis:\n  w' \\<in> apply_chart c1 ` (U \\<inter> V \\<inter> W)\n  open (apply_chart c1 ` (U \\<inter> V \\<inter> W))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> apply_chart c1 ` (U \\<inter> V) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)", "ultimately"], ["proof (chain)\npicking this:\n  k-smooth_on (apply_chart c1 ` (U \\<inter> V \\<inter> W))\n   (apply_chart c2 \\<circ> inv_chart c1)\n  w' \\<in> apply_chart c1 ` (U \\<inter> V \\<inter> W)\n  open (apply_chart c1 ` (U \\<inter> V \\<inter> W))", "show \"\\<exists>T. w' \\<in> T \\<and> open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)\""], ["proof (prove)\nusing this:\n  k-smooth_on (apply_chart c1 ` (U \\<inter> V \\<inter> W))\n   (apply_chart c2 \\<circ> inv_chart c1)\n  w' \\<in> apply_chart c1 ` (U \\<inter> V \\<inter> W)\n  open (apply_chart c1 ` (U \\<inter> V \\<inter> W))\n\ngoal (1 subgoal):\n 1. \\<exists>T.\n       w' \\<in> T \\<and>\n       open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)", "by (intro exI[where x=\"c1 ` (U \\<inter> V \\<inter> W)\"]) simp"], ["proof (state)\nthis:\n  \\<exists>T.\n     w' \\<in> T \\<and>\n     open T \\<and> k-smooth_on T (apply_chart c2 \\<circ> inv_chart c1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smooth_compat_trans: \"k-smooth_compat c1 c2\"\n  if \"\\<And>c. c \\<in> charts \\<Longrightarrow> k-smooth_compat c1 c\"\n    \"\\<And>c. c \\<in> charts \\<Longrightarrow> k-smooth_compat c2 c\"\n    \"domain c1 \\<inter> domain c2 \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat c1 c2", "unfolding smooth_compat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c2 \\<circ> inv_chart c1) \\<and>\n    k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c1 \\<circ> inv_chart c2)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c2 \\<circ> inv_chart c1)\n 2. k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c1 \\<circ> inv_chart c2)", "show \"k-smooth_on (c1 ` (domain c1 \\<inter> domain c2)) (c2 \\<circ> inv_chart c1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c2 \\<circ> inv_chart c1)", "by (auto intro!: that chart_compose_lemma)"], ["proof (state)\nthis:\n  k-smooth_on (apply_chart c1 ` (domain c1 \\<inter> domain c2))\n   (apply_chart c2 \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c1 \\<circ> inv_chart c2)", "show \"k-smooth_on (c2 ` (domain c1 \\<inter> domain c2)) (c1 \\<circ> inv_chart c2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c1 \\<circ> inv_chart c2)", "using that"], ["proof (prove)\nusing this:\n  ?c \\<in> charts \\<Longrightarrow> k-smooth_compat c1 ?c\n  ?c \\<in> charts \\<Longrightarrow> k-smooth_compat c2 ?c\n  domain c1 \\<inter> domain c2 \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n     (apply_chart c1 \\<circ> inv_chart c2)", "by (subst inf_commute) (auto intro!: chart_compose_lemma)"], ["proof (state)\nthis:\n  k-smooth_on (apply_chart c2 ` (domain c1 \\<inter> domain c2))\n   (apply_chart c1 \\<circ> inv_chart c2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma maximal_atlas':\n  \"c \\<in> atlas\"\n  if \"\\<And>c'. c' \\<in> charts \\<Longrightarrow> k-smooth_compat c c'\"\n    \"domain c \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> atlas", "proof (rule maximal_atlas)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c'. c' \\<in> atlas \\<Longrightarrow> k-smooth_compat c c'\n 2. domain c \\<subseteq> carrier", "fix c'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c'. c' \\<in> atlas \\<Longrightarrow> k-smooth_compat c c'\n 2. domain c \\<subseteq> carrier", "assume \"c' \\<in> atlas\""], ["proof (state)\nthis:\n  c' \\<in> atlas\n\ngoal (2 subgoals):\n 1. \\<And>c'. c' \\<in> atlas \\<Longrightarrow> k-smooth_compat c c'\n 2. domain c \\<subseteq> carrier", "show \"k-smooth_compat c c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat c c'", "apply (rule smooth_compat_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ca. ca \\<in> charts \\<Longrightarrow> k-smooth_compat c ca\n 2. \\<And>c. c \\<in> charts \\<Longrightarrow> k-smooth_compat c' c\n 3. domain c \\<inter> domain c' \\<subseteq> carrier", "apply (rule that(1))"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>c. c \\<in> charts \\<Longrightarrow> c \\<in> charts\n 2. \\<And>c. c \\<in> charts \\<Longrightarrow> k-smooth_compat c' c\n 3. domain c \\<inter> domain c' \\<subseteq> carrier", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>c. c \\<in> charts \\<Longrightarrow> k-smooth_compat c' c\n 2. domain c \\<inter> domain c' \\<subseteq> carrier", "using atlas_def \\<open>c' \\<in> atlas\\<close>"], ["proof (prove)\nusing this:\n  atlas =\n  {c. domain c \\<subseteq> carrier \\<and>\n      (\\<forall>c'\\<in>charts. k-smooth_compat c c')}\n  c' \\<in> atlas\n\ngoal (2 subgoals):\n 1. \\<And>c. c \\<in> charts \\<Longrightarrow> k-smooth_compat c' c\n 2. domain c \\<inter> domain c' \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  k-smooth_compat c c'\n\ngoal (1 subgoal):\n 1. domain c \\<subseteq> carrier", "qed fact"], ["", "lemma atlas_is_atlas: \"k-smooth_compat a1 a2\"\n  if \"a1 \\<in> atlas\" \"a2 \\<in> atlas\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat a1 a2", "using that atlas_def smooth_compat_trans"], ["proof (prove)\nusing this:\n  a1 \\<in> atlas\n  a2 \\<in> atlas\n  atlas =\n  {c. domain c \\<subseteq> carrier \\<and>\n      (\\<forall>c'\\<in>charts. k-smooth_compat c c')}\n  \\<lbrakk>\\<And>c.\n              c \\<in> charts \\<Longrightarrow> k-smooth_compat ?c1.0 c;\n   \\<And>c. c \\<in> charts \\<Longrightarrow> k-smooth_compat ?c2.0 c;\n   domain ?c1.0 \\<inter> domain ?c2.0 \\<subseteq> carrier\\<rbrakk>\n  \\<Longrightarrow> k-smooth_compat ?c1.0 ?c2.0\n\ngoal (1 subgoal):\n 1. k-smooth_compat a1 a2", "by blast"], ["", "lemma domain_atlas_subset_carrier: \"c \\<in> atlas \\<Longrightarrow> domain c \\<subseteq> carrier\"\n  and in_carrier_atlasI[intro, simp]: \"c \\<in> atlas \\<Longrightarrow> x \\<in> domain c \\<Longrightarrow> x \\<in> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c \\<in> atlas \\<Longrightarrow> domain c \\<subseteq> carrier) &&&\n    (\\<lbrakk>c \\<in> atlas; x \\<in> domain c\\<rbrakk>\n     \\<Longrightarrow> x \\<in> carrier)", "by (auto simp: atlas_def)"], ["", "lemma atlasE:\n  assumes \"x \\<in> carrier\"\n  obtains c where \"c \\<in> atlas\" \"x \\<in> domain c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using carrierE[OF assms] charts_subset_atlas"], ["proof (prove)\nusing this:\n  (\\<And>c.\n      \\<lbrakk>c \\<in> charts; x \\<in> domain c\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  charts \\<subseteq> atlas\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma restrict_chart_in_atlas: \"restrict_chart S c \\<in> atlas\" if \"c \\<in> atlas\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict_chart S c \\<in> atlas", "proof (rule maximal_atlas)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c'.\n       c' \\<in> atlas \\<Longrightarrow>\n       k-smooth_compat (restrict_chart S c) c'\n 2. domain (restrict_chart S c) \\<subseteq> carrier", "fix c'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c'.\n       c' \\<in> atlas \\<Longrightarrow>\n       k-smooth_compat (restrict_chart S c) c'\n 2. domain (restrict_chart S c) \\<subseteq> carrier", "assume \"c' \\<in> atlas\""], ["proof (state)\nthis:\n  c' \\<in> atlas\n\ngoal (2 subgoals):\n 1. \\<And>c'.\n       c' \\<in> atlas \\<Longrightarrow>\n       k-smooth_compat (restrict_chart S c) c'\n 2. domain (restrict_chart S c) \\<subseteq> carrier", "then"], ["proof (chain)\npicking this:\n  c' \\<in> atlas", "have \"k-smooth_compat c c'\""], ["proof (prove)\nusing this:\n  c' \\<in> atlas\n\ngoal (1 subgoal):\n 1. k-smooth_compat c c'", "using \\<open>c \\<in> atlas\\<close>"], ["proof (prove)\nusing this:\n  c' \\<in> atlas\n  c \\<in> atlas\n\ngoal (1 subgoal):\n 1. k-smooth_compat c c'", "by (auto simp: atlas_is_atlas)"], ["proof (state)\nthis:\n  k-smooth_compat c c'\n\ngoal (2 subgoals):\n 1. \\<And>c'.\n       c' \\<in> atlas \\<Longrightarrow>\n       k-smooth_compat (restrict_chart S c) c'\n 2. domain (restrict_chart S c) \\<subseteq> carrier", "then"], ["proof (chain)\npicking this:\n  k-smooth_compat c c'", "show \"k-smooth_compat (restrict_chart S c) c'\""], ["proof (prove)\nusing this:\n  k-smooth_compat c c'\n\ngoal (1 subgoal):\n 1. k-smooth_compat (restrict_chart S c) c'", "by (rule smooth_compat_restrict_chartI)"], ["proof (state)\nthis:\n  k-smooth_compat (restrict_chart S c) c'\n\ngoal (1 subgoal):\n 1. domain (restrict_chart S c) \\<subseteq> carrier", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. domain (restrict_chart S c) \\<subseteq> carrier", "have \"domain (restrict_chart S c) \\<subseteq> domain c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. domain (restrict_chart S c) \\<subseteq> domain c", "by (simp add: domain_restrict_chart_if)"], ["proof (state)\nthis:\n  domain (restrict_chart S c) \\<subseteq> domain c\n\ngoal (1 subgoal):\n 1. domain (restrict_chart S c) \\<subseteq> carrier", "also"], ["proof (state)\nthis:\n  domain (restrict_chart S c) \\<subseteq> domain c\n\ngoal (1 subgoal):\n 1. domain (restrict_chart S c) \\<subseteq> carrier", "have \"\\<dots> \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. domain c \\<subseteq> carrier", "using that"], ["proof (prove)\nusing this:\n  c \\<in> atlas\n\ngoal (1 subgoal):\n 1. domain c \\<subseteq> carrier", "by (rule domain_atlas_subset_carrier)"], ["proof (state)\nthis:\n  domain c \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. domain (restrict_chart S c) \\<subseteq> carrier", "finally"], ["proof (chain)\npicking this:\n  domain (restrict_chart S c) \\<subseteq> carrier", "show \"domain (restrict_chart S c) \\<subseteq> carrier\""], ["proof (prove)\nusing this:\n  domain (restrict_chart S c) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. domain (restrict_chart S c) \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  domain (restrict_chart S c) \\<subseteq> carrier\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma atlas_restrictE:\n  assumes \"x \\<in> carrier\" \"x \\<in> X\" \"open X\"\n  obtains c where \"c \\<in> atlas\" \"x \\<in> domain c\" \"domain c \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c;\n         domain c \\<subseteq> X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c;\n         domain c \\<subseteq> X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms(1)"], ["proof (chain)\npicking this:\n  x \\<in> carrier", "obtain c where c: \"c \\<in> atlas\" \"x \\<in> domain c\""], ["proof (prove)\nusing this:\n  x \\<in> carrier\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast elim!: carrierE)"], ["proof (state)\nthis:\n  c \\<in> atlas\n  x \\<in> domain c\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c;\n         domain c \\<subseteq> X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define d where \"d = restrict_chart X c\""], ["proof (state)\nthis:\n  d = restrict_chart X c\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c;\n         domain c \\<subseteq> X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from c"], ["proof (chain)\npicking this:\n  c \\<in> atlas\n  x \\<in> domain c", "have \"d \\<in> atlas\" \"x \\<in> domain d\" \"domain d \\<subseteq> X\""], ["proof (prove)\nusing this:\n  c \\<in> atlas\n  x \\<in> domain c\n\ngoal (1 subgoal):\n 1. d \\<in> atlas &&& x \\<in> domain d &&& domain d \\<subseteq> X", "using assms(2,3)"], ["proof (prove)\nusing this:\n  c \\<in> atlas\n  x \\<in> domain c\n  x \\<in> X\n  open X\n\ngoal (1 subgoal):\n 1. d \\<in> atlas &&& x \\<in> domain d &&& domain d \\<subseteq> X", "by (auto simp: d_def restrict_chart_in_atlas)"], ["proof (state)\nthis:\n  d \\<in> atlas\n  x \\<in> domain d\n  domain d \\<subseteq> X\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c;\n         domain c \\<subseteq> X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  d \\<in> atlas\n  x \\<in> domain d\n  domain d \\<subseteq> X", "show ?thesis"], ["proof (prove)\nusing this:\n  d \\<in> atlas\n  x \\<in> domain d\n  domain d \\<subseteq> X\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma open_ball_chartE:\n  assumes \"x \\<in> U\" \"open U\" \"U \\<subseteq> carrier\"\n  obtains c r where\n    \"c \\<in> atlas\"\n    \"x \\<in> domain c\" \"domain c \\<subseteq> U\" \"codomain c = ball (c x) r\" \"r > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  x \\<in> U\n  open U\n  U \\<subseteq> carrier", "have \"x \\<in> carrier\""], ["proof (prove)\nusing this:\n  x \\<in> U\n  open U\n  U \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. x \\<in> carrier", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from carrierE[OF this]"], ["proof (chain)\npicking this:\n  (\\<And>c.\n      \\<lbrakk>c \\<in> charts; x \\<in> domain c\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain c where c: \"c \\<in> charts\" \"x \\<in> domain c\""], ["proof (prove)\nusing this:\n  (\\<And>c.\n      \\<lbrakk>c \\<in> charts; x \\<in> domain c\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> charts; x \\<in> domain c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c \\<in> charts\n  x \\<in> domain c\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  c \\<in> charts\n  x \\<in> domain c", "have \"x \\<in> domain c \\<inter> U\""], ["proof (prove)\nusing this:\n  c \\<in> charts\n  x \\<in> domain c\n\ngoal (1 subgoal):\n 1. x \\<in> domain c \\<inter> U", "using assms"], ["proof (prove)\nusing this:\n  c \\<in> charts\n  x \\<in> domain c\n  x \\<in> U\n  open U\n  U \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. x \\<in> domain c \\<inter> U", "by auto"], ["proof (state)\nthis:\n  x \\<in> domain c \\<inter> U\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  x \\<in> domain c \\<inter> U", "have \"open (apply_chart c ` (domain c \\<inter> U))\" \"c x \\<in> c ` (domain c \\<inter> U)\""], ["proof (prove)\nusing this:\n  x \\<in> domain c \\<inter> U\n\ngoal (1 subgoal):\n 1. open (apply_chart c ` (domain c \\<inter> U)) &&&\n    apply_chart c x \\<in> apply_chart c ` (domain c \\<inter> U)", "by (auto intro!: assms)"], ["proof (state)\nthis:\n  open (apply_chart c ` (domain c \\<inter> U))\n  apply_chart c x \\<in> apply_chart c ` (domain c \\<inter> U)\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from openE[OF this]"], ["proof (chain)\npicking this:\n  (\\<And>e.\n      \\<lbrakk>0 < e;\n       ball (apply_chart c x) e\n       \\<subseteq> apply_chart c ` (domain c \\<inter> U)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain e where e: \"0 < e\" \"ball (c x) e \\<subseteq> c ` (domain c \\<inter> U)\""], ["proof (prove)\nusing this:\n  (\\<And>e.\n      \\<lbrakk>0 < e;\n       ball (apply_chart c x) e\n       \\<subseteq> apply_chart c ` (domain c \\<inter> U)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         ball (apply_chart c x) e\n         \\<subseteq> apply_chart c ` (domain c \\<inter> U)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < e\n  ball (apply_chart c x) e \\<subseteq> apply_chart c ` (domain c \\<inter> U)\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define C where \"C = inv_chart c ` ball (c x) e\""], ["proof (state)\nthis:\n  C = inv_chart c ` ball (apply_chart c x) e\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"open C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open C", "using e"], ["proof (prove)\nusing this:\n  0 < e\n  ball (apply_chart c x) e \\<subseteq> apply_chart c ` (domain c \\<inter> U)\n\ngoal (1 subgoal):\n 1. open C", "by (auto simp: C_def)"], ["proof (state)\nthis:\n  open C\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define c' where \"c' = restrict_chart C c\""], ["proof (state)\nthis:\n  c' = restrict_chart C c\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from c"], ["proof (chain)\npicking this:\n  c \\<in> charts\n  x \\<in> domain c", "have \"c \\<in> atlas\""], ["proof (prove)\nusing this:\n  c \\<in> charts\n  x \\<in> domain c\n\ngoal (1 subgoal):\n 1. c \\<in> atlas", "by auto"], ["proof (state)\nthis:\n  c \\<in> atlas\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  c \\<in> atlas", "have \"c' \\<in> atlas\""], ["proof (prove)\nusing this:\n  c \\<in> atlas\n\ngoal (1 subgoal):\n 1. c' \\<in> atlas", "by (auto simp: c'_def restrict_chart_in_atlas)"], ["proof (state)\nthis:\n  c' \\<in> atlas\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  c' \\<in> atlas\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"x \\<in> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> C", "using c \\<open>e > 0\\<close>"], ["proof (prove)\nusing this:\n  c \\<in> charts\n  x \\<in> domain c\n  0 < e\n\ngoal (1 subgoal):\n 1. x \\<in> C", "unfolding C_def"], ["proof (prove)\nusing this:\n  c \\<in> charts\n  x \\<in> domain c\n  0 < e\n\ngoal (1 subgoal):\n 1. x \\<in> inv_chart c ` ball (apply_chart c x) e", "by (auto intro!: image_eqI[where x=\"apply_chart c x\"])"], ["proof (state)\nthis:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"x \\<in> domain c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> domain c'", "by (auto simp: c'_def \\<open>open C\\<close> c \\<open>x \\<in> C\\<close>)"], ["proof (state)\nthis:\n  x \\<in> domain c'\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  x \\<in> domain c'\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"C \\<subseteq> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<subseteq> U", "using e"], ["proof (prove)\nusing this:\n  0 < e\n  ball (apply_chart c x) e \\<subseteq> apply_chart c ` (domain c \\<inter> U)\n\ngoal (1 subgoal):\n 1. C \\<subseteq> U", "by (auto simp: C_def)"], ["proof (state)\nthis:\n  C \\<subseteq> U\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  C \\<subseteq> U", "have \"domain c' \\<subseteq> U\""], ["proof (prove)\nusing this:\n  C \\<subseteq> U\n\ngoal (1 subgoal):\n 1. domain c' \\<subseteq> U", "by (auto simp: c'_def \\<open>open C\\<close>)"], ["proof (state)\nthis:\n  domain c' \\<subseteq> U\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  domain c' \\<subseteq> U\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"codomain c' = ball (c' x) e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. codomain c' = ball (apply_chart c' x) e", "using e \\<open>open C\\<close>"], ["proof (prove)\nusing this:\n  0 < e\n  ball (apply_chart c x) e \\<subseteq> apply_chart c ` (domain c \\<inter> U)\n  open C\n\ngoal (1 subgoal):\n 1. codomain c' = ball (apply_chart c' x) e", "by (force simp: c'_def codomain_restrict_chart_if C_def)"], ["proof (state)\nthis:\n  codomain c' = ball (apply_chart c' x) e\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  codomain c' = ball (apply_chart c' x) e\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"e > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < e", "by fact"], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  c' \\<in> atlas\n  x \\<in> domain c'\n  domain c' \\<subseteq> U\n  codomain c' = ball (apply_chart c' x) e\n  0 < e", "show ?thesis"], ["proof (prove)\nusing this:\n  c' \\<in> atlas\n  x \\<in> domain c'\n  domain c' \\<subseteq> U\n  codomain c' = ball (apply_chart c' x) e\n  0 < e\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smooth_compat_compose_chart:\n  fixes c'\n  assumes \"k-smooth_compat c c'\"\n  assumes diffeo: \"diffeomorphism k UNIV UNIV p p'\"\n  shows \"k-smooth_compat (compose_chart p p' c) c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat (compose_chart p p' c) c'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k-smooth_compat (compose_chart p p' c) c'", "note dD[simp] = diffeomorphismD[OF diffeo]"], ["proof (state)\nthis:\n  k-smooth_on UNIV p\n  k-smooth_on UNIV p'\n  ?x \\<in> UNIV \\<Longrightarrow> p' (p ?x) = ?x\n  ?y \\<in> UNIV \\<Longrightarrow> p (p' ?y) = ?y\n  surj p\n  surj p'\n\ngoal (1 subgoal):\n 1. k-smooth_compat (compose_chart p p' c) c'", "note homeo[simp] = diffeomorphism_imp_homeomorphism[OF diffeo]"], ["proof (state)\nthis:\n  homeomorphism UNIV UNIV p p'\n\ngoal (1 subgoal):\n 1. k-smooth_compat (compose_chart p p' c) c'", "from assms(1)"], ["proof (chain)\npicking this:\n  k-smooth_compat c c'", "have c: \"k-smooth_on (apply_chart c ` (domain c \\<inter> domain c')) (apply_chart c' \\<circ> inv_chart c)\"\n    and c': \"k-smooth_on (apply_chart c' ` (domain c \\<inter> domain c')) (apply_chart c \\<circ> inv_chart c')\""], ["proof (prove)\nusing this:\n  k-smooth_compat c c'\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c ` (domain c \\<inter> domain c'))\n     (apply_chart c' \\<circ> inv_chart c) &&&\n    k-smooth_on (apply_chart c' ` (domain c \\<inter> domain c'))\n     (apply_chart c \\<circ> inv_chart c')", "by (auto simp: smooth_compat_def)"], ["proof (state)\nthis:\n  k-smooth_on (apply_chart c ` (domain c \\<inter> domain c'))\n   (apply_chart c' \\<circ> inv_chart c)\n  k-smooth_on (apply_chart c' ` (domain c \\<inter> domain c'))\n   (apply_chart c \\<circ> inv_chart c')\n\ngoal (1 subgoal):\n 1. k-smooth_compat (compose_chart p p' c) c'", "from homeo"], ["proof (chain)\npicking this:\n  homeomorphism UNIV UNIV p p'", "have *: \"open (p ` apply_chart c ` (domain c \\<inter> domain c'))\""], ["proof (prove)\nusing this:\n  homeomorphism UNIV UNIV p p'\n\ngoal (1 subgoal):\n 1. open (p ` apply_chart c ` (domain c \\<inter> domain c'))", "by (rule homeomorphism_UNIV_imp_open_map) auto"], ["proof (state)\nthis:\n  open (p ` apply_chart c ` (domain c \\<inter> domain c'))\n\ngoal (1 subgoal):\n 1. k-smooth_compat (compose_chart p p' c) c'", "have \"k-smooth_on ((p \\<circ> apply_chart c) ` (domain c \\<inter> domain c')) (apply_chart c' \\<circ> inv_chart c \\<circ> p')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on ((p \\<circ> apply_chart c) ` (domain c \\<inter> domain c'))\n     (apply_chart c' \\<circ> inv_chart c \\<circ> p')", "apply (rule smooth_on_compose2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. k-smooth_on ?T (apply_chart c' \\<circ> inv_chart c)\n 2. k-smooth_on ?S p'\n 3. open ((p \\<circ> apply_chart c) ` (domain c \\<inter> domain c'))\n 4. open ?T\n 5. p' ` (p \\<circ> apply_chart c) ` (domain c \\<inter> domain c')\n    \\<subseteq> ?T\n 6. (p \\<circ> apply_chart c) ` (domain c \\<inter> domain c') \\<subseteq> ?S", "prefer 2"], ["proof (prove)\ngoal (6 subgoals):\n 1. k-smooth_on ?S p'\n 2. k-smooth_on ?T (apply_chart c' \\<circ> inv_chart c)\n 3. open ((p \\<circ> apply_chart c) ` (domain c \\<inter> domain c'))\n 4. open ?T\n 5. p' ` (p \\<circ> apply_chart c) ` (domain c \\<inter> domain c')\n    \\<subseteq> ?T\n 6. (p \\<circ> apply_chart c) ` (domain c \\<inter> domain c') \\<subseteq> ?S", "apply (rule dD)"], ["proof (prove)\ngoal (5 subgoals):\n 1. k-smooth_on ?T (apply_chart c' \\<circ> inv_chart c)\n 2. open ((p \\<circ> apply_chart c) ` (domain c \\<inter> domain c'))\n 3. open ?T\n 4. p' ` (p \\<circ> apply_chart c) ` (domain c \\<inter> domain c')\n    \\<subseteq> ?T\n 5. (p \\<circ> apply_chart c) ` (domain c \\<inter> domain c')\n    \\<subseteq> UNIV", "apply (rule c)"], ["proof (prove)\ngoal (4 subgoals):\n 1. open ((p \\<circ> apply_chart c) ` (domain c \\<inter> domain c'))\n 2. open (apply_chart c ` (domain c \\<inter> domain c'))\n 3. p' ` (p \\<circ> apply_chart c) ` (domain c \\<inter> domain c')\n    \\<subseteq> apply_chart c ` (domain c \\<inter> domain c')\n 4. (p \\<circ> apply_chart c) ` (domain c \\<inter> domain c')\n    \\<subseteq> UNIV", "apply (auto simp add: assms image_comp [symmetric] * cong del: image_cong_simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  k-smooth_on ((p \\<circ> apply_chart c) ` (domain c \\<inter> domain c'))\n   (apply_chart c' \\<circ> inv_chart c \\<circ> p')\n\ngoal (1 subgoal):\n 1. k-smooth_compat (compose_chart p p' c) c'", "moreover"], ["proof (state)\nthis:\n  k-smooth_on ((p \\<circ> apply_chart c) ` (domain c \\<inter> domain c'))\n   (apply_chart c' \\<circ> inv_chart c \\<circ> p')\n\ngoal (1 subgoal):\n 1. k-smooth_compat (compose_chart p p' c) c'", "have \"k-smooth_on (apply_chart c' ` (domain c \\<inter> domain c')) (p \\<circ> (apply_chart c \\<circ> inv_chart c'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c' ` (domain c \\<inter> domain c'))\n     (p \\<circ> (apply_chart c \\<circ> inv_chart c'))", "apply (rule smooth_on_compose2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. k-smooth_on ?T p\n 2. k-smooth_on ?S (apply_chart c \\<circ> inv_chart c')\n 3. open (apply_chart c' ` (domain c \\<inter> domain c'))\n 4. open ?T\n 5. (apply_chart c \\<circ> inv_chart c') `\n    apply_chart c' ` (domain c \\<inter> domain c')\n    \\<subseteq> ?T\n 6. apply_chart c' ` (domain c \\<inter> domain c') \\<subseteq> ?S", "apply (rule dD)"], ["proof (prove)\ngoal (5 subgoals):\n 1. k-smooth_on ?S (apply_chart c \\<circ> inv_chart c')\n 2. open (apply_chart c' ` (domain c \\<inter> domain c'))\n 3. open UNIV\n 4. (apply_chart c \\<circ> inv_chart c') `\n    apply_chart c' ` (domain c \\<inter> domain c')\n    \\<subseteq> UNIV\n 5. apply_chart c' ` (domain c \\<inter> domain c') \\<subseteq> ?S", "apply fact"], ["proof (prove)\ngoal (4 subgoals):\n 1. open (apply_chart c' ` (domain c \\<inter> domain c'))\n 2. open UNIV\n 3. (apply_chart c \\<circ> inv_chart c') `\n    apply_chart c' ` (domain c \\<inter> domain c')\n    \\<subseteq> UNIV\n 4. apply_chart c' ` (domain c \\<inter> domain c')\n    \\<subseteq> apply_chart c' ` (domain c \\<inter> domain c')", "by (auto simp: assms image_comp[symmetric])"], ["proof (state)\nthis:\n  k-smooth_on (apply_chart c' ` (domain c \\<inter> domain c'))\n   (p \\<circ> (apply_chart c \\<circ> inv_chart c'))\n\ngoal (1 subgoal):\n 1. k-smooth_compat (compose_chart p p' c) c'", "ultimately"], ["proof (chain)\npicking this:\n  k-smooth_on ((p \\<circ> apply_chart c) ` (domain c \\<inter> domain c'))\n   (apply_chart c' \\<circ> inv_chart c \\<circ> p')\n  k-smooth_on (apply_chart c' ` (domain c \\<inter> domain c'))\n   (p \\<circ> (apply_chart c \\<circ> inv_chart c'))", "show ?thesis"], ["proof (prove)\nusing this:\n  k-smooth_on ((p \\<circ> apply_chart c) ` (domain c \\<inter> domain c'))\n   (apply_chart c' \\<circ> inv_chart c \\<circ> p')\n  k-smooth_on (apply_chart c' ` (domain c \\<inter> domain c'))\n   (p \\<circ> (apply_chart c \\<circ> inv_chart c'))\n\ngoal (1 subgoal):\n 1. k-smooth_compat (compose_chart p p' c) c'", "unfolding smooth_compat_def"], ["proof (prove)\nusing this:\n  k-smooth_on ((p \\<circ> apply_chart c) ` (domain c \\<inter> domain c'))\n   (apply_chart c' \\<circ> inv_chart c \\<circ> p')\n  k-smooth_on (apply_chart c' ` (domain c \\<inter> domain c'))\n   (p \\<circ> (apply_chart c \\<circ> inv_chart c'))\n\ngoal (1 subgoal):\n 1. k-smooth_on\n     (apply_chart (compose_chart p p' c) `\n      (domain (compose_chart p p' c) \\<inter> domain c'))\n     (apply_chart c' \\<circ> inv_chart (compose_chart p p' c)) \\<and>\n    k-smooth_on\n     (apply_chart c' ` (domain (compose_chart p p' c) \\<inter> domain c'))\n     (apply_chart (compose_chart p p' c) \\<circ> inv_chart c')", "by (auto intro!: simp: o_assoc)"], ["proof (state)\nthis:\n  k-smooth_compat (compose_chart p p' c) c'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma compose_chart_in_atlas:\n  assumes \"c \\<in> atlas\"\n  assumes diffeo: \"diffeomorphism k UNIV UNIV p p'\"\n  shows \"compose_chart p p' c \\<in> atlas\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compose_chart p p' c \\<in> atlas", "proof (rule maximal_atlas)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c'.\n       c' \\<in> atlas \\<Longrightarrow>\n       k-smooth_compat (compose_chart p p' c) c'\n 2. domain (compose_chart p p' c) \\<subseteq> carrier", "note [simp] = diffeomorphism_imp_homeomorphism[OF diffeo]"], ["proof (state)\nthis:\n  homeomorphism UNIV UNIV p p'\n\ngoal (2 subgoals):\n 1. \\<And>c'.\n       c' \\<in> atlas \\<Longrightarrow>\n       k-smooth_compat (compose_chart p p' c) c'\n 2. domain (compose_chart p p' c) \\<subseteq> carrier", "show \"domain (compose_chart p p' c) \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. domain (compose_chart p p' c) \\<subseteq> carrier", "using assms"], ["proof (prove)\nusing this:\n  c \\<in> atlas\n  diffeomorphism k UNIV UNIV p p'\n\ngoal (1 subgoal):\n 1. domain (compose_chart p p' c) \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  domain (compose_chart p p' c) \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       c' \\<in> atlas \\<Longrightarrow>\n       k-smooth_compat (compose_chart p p' c) c'", "fix c'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c'.\n       c' \\<in> atlas \\<Longrightarrow>\n       k-smooth_compat (compose_chart p p' c) c'", "assume \"c' \\<in> atlas\""], ["proof (state)\nthis:\n  c' \\<in> atlas\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       c' \\<in> atlas \\<Longrightarrow>\n       k-smooth_compat (compose_chart p p' c) c'", "with \\<open>c \\<in> atlas\\<close>"], ["proof (chain)\npicking this:\n  c \\<in> atlas\n  c' \\<in> atlas", "have \"k-smooth_compat c c'\""], ["proof (prove)\nusing this:\n  c \\<in> atlas\n  c' \\<in> atlas\n\ngoal (1 subgoal):\n 1. k-smooth_compat c c'", "by (rule atlas_is_atlas)"], ["proof (state)\nthis:\n  k-smooth_compat c c'\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       c' \\<in> atlas \\<Longrightarrow>\n       k-smooth_compat (compose_chart p p' c) c'", "then"], ["proof (chain)\npicking this:\n  k-smooth_compat c c'", "show \"k-smooth_compat (compose_chart p p' c) c'\""], ["proof (prove)\nusing this:\n  k-smooth_compat c c'\n\ngoal (1 subgoal):\n 1. k-smooth_compat (compose_chart p p' c) c'", "using diffeo"], ["proof (prove)\nusing this:\n  k-smooth_compat c c'\n  diffeomorphism k UNIV UNIV p p'\n\ngoal (1 subgoal):\n 1. k-smooth_compat (compose_chart p p' c) c'", "by (rule smooth_compat_compose_chart)"], ["proof (state)\nthis:\n  k-smooth_compat (compose_chart p p' c) c'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma open_centered_ball_chartE:\n  assumes \"x \\<in> U\" \"open U\" \"U \\<subseteq> carrier\" \"e > 0\"\n  obtains c where\n    \"c \\<in> atlas\" \"x \\<in> domain c\" \"c x = x0\" \"domain c \\<subseteq> U\" \"codomain c = ball x0 e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from open_ball_chartE[OF assms(1-3)]"], ["proof (chain)\npicking this:\n  (\\<And>c r.\n      \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n       codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain c r where c:\n    \"c \\<in> atlas\"\n    \"x \\<in> domain c\" \"domain c \\<subseteq> U\" \"codomain c = ball (c x) r\"\n    and r: \"r > 0\""], ["proof (prove)\nusing this:\n  (\\<And>c r.\n      \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n       codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c r.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; domain c \\<subseteq> U;\n         codomain c = ball (apply_chart c x) r; 0 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c \\<in> atlas\n  x \\<in> domain c\n  domain c \\<subseteq> U\n  codomain c = ball (apply_chart c x) r\n  0 < r\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have nz: \"e / r \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e / r \\<noteq> 0", "using \\<open>e > 0\\<close> \\<open>r > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < e\n  0 < r\n\ngoal (1 subgoal):\n 1. e / r \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  e / r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 1: \"diffeomorphism k UNIV UNIV (\\<lambda>y. y + (- c x)) (\\<lambda>y. y - (- c x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diffeomorphism k UNIV UNIV (\\<lambda>y. y + - apply_chart c x)\n     (\\<lambda>y. y - - apply_chart c x)", "using diffeomorphism_add[of k \"(- c x)\"]"], ["proof (prove)\nusing this:\n  diffeomorphism k UNIV UNIV (\\<lambda>xa. xa + - apply_chart c x)\n   (\\<lambda>xa. xa - - apply_chart c x)\n\ngoal (1 subgoal):\n 1. diffeomorphism k UNIV UNIV (\\<lambda>y. y + - apply_chart c x)\n     (\\<lambda>y. y - - apply_chart c x)", "by auto"], ["proof (state)\nthis:\n  diffeomorphism k UNIV UNIV (\\<lambda>y. y + - apply_chart c x)\n   (\\<lambda>y. y - - apply_chart c x)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 2: \"diffeomorphism k UNIV UNIV (\\<lambda>y. (e / r) *\\<^sub>R y) (\\<lambda>y. y /\\<^sub>R (e / r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diffeomorphism k UNIV UNIV ((*\\<^sub>R) (e / r))\n     (\\<lambda>y. y /\\<^sub>R (e / r))", "using diffeomorphism_scaleR[of \"e / r\" k] \\<open>e > 0\\<close> \\<open>r > 0\\<close>"], ["proof (prove)\nusing this:\n  e / r \\<noteq> 0 \\<Longrightarrow>\n  diffeomorphism k UNIV UNIV ((*\\<^sub>R) (e / r))\n   (\\<lambda>x. x /\\<^sub>R (e / r))\n  0 < e\n  0 < r\n\ngoal (1 subgoal):\n 1. diffeomorphism k UNIV UNIV ((*\\<^sub>R) (e / r))\n     (\\<lambda>y. y /\\<^sub>R (e / r))", "by auto"], ["proof (state)\nthis:\n  diffeomorphism k UNIV UNIV ((*\\<^sub>R) (e / r))\n   (\\<lambda>y. y /\\<^sub>R (e / r))\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 3: \"diffeomorphism k UNIV UNIV (\\<lambda>y. y + x0) (\\<lambda>y. y - x0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diffeomorphism k UNIV UNIV (\\<lambda>y. y + x0) (\\<lambda>y. y - x0)", "using diffeomorphism_add[of k x0]"], ["proof (prove)\nusing this:\n  diffeomorphism k UNIV UNIV (\\<lambda>x. x + x0) (\\<lambda>x. x - x0)\n\ngoal (1 subgoal):\n 1. diffeomorphism k UNIV UNIV (\\<lambda>y. y + x0) (\\<lambda>y. y - x0)", "by auto"], ["proof (state)\nthis:\n  diffeomorphism k UNIV UNIV (\\<lambda>y. y + x0) (\\<lambda>y. y - x0)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define t where \"t = (\\<lambda>y. (e / r) *\\<^sub>R (y + - c x) + x0)\""], ["proof (state)\nthis:\n  t = (\\<lambda>y. (e / r) *\\<^sub>R (y + - apply_chart c x) + x0)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define t' where \"t' = (\\<lambda>y. (y - x0) /\\<^sub>R (e / r) + c x)\""], ["proof (state)\nthis:\n  t' = (\\<lambda>y. (y - x0) /\\<^sub>R (e / r) + apply_chart c x)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from diffeomorphism_compose[OF diffeomorphism_compose[OF 1 2] 3, unfolded o_def]"], ["proof (chain)\npicking this:\n  \\<lbrakk>open UNIV; open UNIV; open UNIV; open UNIV; open UNIV;\n   open UNIV\\<rbrakk>\n  \\<Longrightarrow> diffeomorphism k UNIV UNIV\n                     (\\<lambda>xa.\n                         (e / r) *\\<^sub>R (xa + - apply_chart c x) + x0)\n                     (\\<lambda>xa.\n                         (xa - x0) /\\<^sub>R (e / r) - - apply_chart c x)", "have diffeo: \"diffeomorphism k UNIV UNIV t t'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>open UNIV; open UNIV; open UNIV; open UNIV; open UNIV;\n   open UNIV\\<rbrakk>\n  \\<Longrightarrow> diffeomorphism k UNIV UNIV\n                     (\\<lambda>xa.\n                         (e / r) *\\<^sub>R (xa + - apply_chart c x) + x0)\n                     (\\<lambda>xa.\n                         (xa - x0) /\\<^sub>R (e / r) - - apply_chart c x)\n\ngoal (1 subgoal):\n 1. diffeomorphism k UNIV UNIV t t'", "by (auto simp: t_def t'_def o_def)"], ["proof (state)\nthis:\n  diffeomorphism k UNIV UNIV t t'\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from compose_chart_in_atlas[OF \\<open>c \\<in> atlas\\<close> this]"], ["proof (chain)\npicking this:\n  compose_chart t t' c \\<in> atlas", "have \"compose_chart t t' c \\<in> atlas\""], ["proof (prove)\nusing this:\n  compose_chart t t' c \\<in> atlas\n\ngoal (1 subgoal):\n 1. compose_chart t t' c \\<in> atlas", "."], ["proof (state)\nthis:\n  compose_chart t t' c \\<in> atlas\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  compose_chart t t' c \\<in> atlas\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note [simp] = diffeomorphism_imp_homeomorphism[OF diffeo]"], ["proof (state)\nthis:\n  homeomorphism UNIV UNIV t t'\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"x \\<in> domain (compose_chart t t' c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> domain (compose_chart t t' c)", "by (auto simp: \\<open>x \\<in> domain c\\<close>)"], ["proof (state)\nthis:\n  x \\<in> domain (compose_chart t t' c)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  x \\<in> domain (compose_chart t t' c)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"t (c x) = x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t (apply_chart c x) = x0", "by (auto simp: t_def)"], ["proof (state)\nthis:\n  t (apply_chart c x) = x0\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  t (apply_chart c x) = x0", "have \"compose_chart t t' c x = x0\""], ["proof (prove)\nusing this:\n  t (apply_chart c x) = x0\n\ngoal (1 subgoal):\n 1. apply_chart (compose_chart t t' c) x = x0", "by simp"], ["proof (state)\nthis:\n  apply_chart (compose_chart t t' c) x = x0\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  apply_chart (compose_chart t t' c) x = x0\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"domain (compose_chart t t' c) \\<subseteq> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. domain (compose_chart t t' c) \\<subseteq> U", "using \\<open>domain c \\<subseteq> U\\<close>"], ["proof (prove)\nusing this:\n  domain c \\<subseteq> U\n\ngoal (1 subgoal):\n 1. domain (compose_chart t t' c) \\<subseteq> U", "by auto"], ["proof (state)\nthis:\n  domain (compose_chart t t' c) \\<subseteq> U\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  domain (compose_chart t t' c) \\<subseteq> U\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"t ` codomain c = ball x0 e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t ` codomain c = ball x0 e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. t ` codomain c = ball x0 e", "have \"t ` codomain c = (+) x0 ` (*\\<^sub>R) (e / r) ` (\\<lambda>y. - apply_chart c x + y) ` ball (c x) r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t ` codomain c =\n    (+) x0 `\n    (*\\<^sub>R) (e / r) ` (+) (- apply_chart c x) ` ball (apply_chart c x) r", "by (auto simp add: c t_def image_image)"], ["proof (state)\nthis:\n  t ` codomain c =\n  (+) x0 `\n  (*\\<^sub>R) (e / r) ` (+) (- apply_chart c x) ` ball (apply_chart c x) r\n\ngoal (1 subgoal):\n 1. t ` codomain c = ball x0 e", "also"], ["proof (state)\nthis:\n  t ` codomain c =\n  (+) x0 `\n  (*\\<^sub>R) (e / r) ` (+) (- apply_chart c x) ` ball (apply_chart c x) r\n\ngoal (1 subgoal):\n 1. t ` codomain c = ball x0 e", "have \"\\<dots> = ball x0 e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (+) x0 `\n    (*\\<^sub>R) (e / r) `\n    (+) (- apply_chart c x) ` ball (apply_chart c x) r =\n    ball x0 e", "using \\<open>e > 0\\<close> \\<open>r > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < e\n  0 < r\n\ngoal (1 subgoal):\n 1. (+) x0 `\n    (*\\<^sub>R) (e / r) `\n    (+) (- apply_chart c x) ` ball (apply_chart c x) r =\n    ball x0 e", "unfolding image_add_ball image_scaleR_ball[OF nz]"], ["proof (prove)\nusing this:\n  0 < e\n  0 < r\n\ngoal (1 subgoal):\n 1. ball ((e / r) *\\<^sub>R (apply_chart c x + - apply_chart c x) + x0)\n     (\\<bar>e / r\\<bar> *\\<^sub>R r) =\n    ball x0 e", "by simp"], ["proof (state)\nthis:\n  (+) x0 `\n  (*\\<^sub>R) (e / r) ` (+) (- apply_chart c x) ` ball (apply_chart c x) r =\n  ball x0 e\n\ngoal (1 subgoal):\n 1. t ` codomain c = ball x0 e", "finally"], ["proof (chain)\npicking this:\n  t ` codomain c = ball x0 e", "show ?thesis"], ["proof (prove)\nusing this:\n  t ` codomain c = ball x0 e\n\ngoal (1 subgoal):\n 1. t ` codomain c = ball x0 e", "."], ["proof (state)\nthis:\n  t ` codomain c = ball x0 e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t ` codomain c = ball x0 e\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  t ` codomain c = ball x0 e", "have \"codomain (compose_chart t t' c) = ball x0 e\""], ["proof (prove)\nusing this:\n  t ` codomain c = ball x0 e\n\ngoal (1 subgoal):\n 1. codomain (compose_chart t t' c) = ball x0 e", "by auto"], ["proof (state)\nthis:\n  codomain (compose_chart t t' c) = ball x0 e\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c; apply_chart c x = x0;\n         domain c \\<subseteq> U; codomain c = ball x0 e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  compose_chart t t' c \\<in> atlas\n  x \\<in> domain (compose_chart t t' c)\n  apply_chart (compose_chart t t' c) x = x0\n  domain (compose_chart t t' c) \\<subseteq> U\n  codomain (compose_chart t t' c) = ball x0 e", "show ?thesis"], ["proof (prove)\nusing this:\n  compose_chart t t' c \\<in> atlas\n  x \\<in> domain (compose_chart t t' c)\n  apply_chart (compose_chart t t' c) x = x0\n  domain (compose_chart t t' c) \\<subseteq> U\n  codomain (compose_chart t t' c) = ball x0 e\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsubsection \\<open>Submanifold\\<close>"], ["", "definition (in manifold) \"charts_submanifold S = (restrict_chart S ` charts)\""], ["", "locale c_manifold' = c_manifold"], ["", "locale submanifold = c_manifold' charts k \\<comment>\\<open>breaks infinite loop for sublocale sub\\<close>\n  for charts::\"('a::{t2_space,second_countable_topology}, 'b::euclidean_space) chart set\" and k +\n  fixes S::\"'a set\"\n  assumes open_submanifold: \"open S\"\nbegin"], ["", "lemma charts_submanifold: \"c_manifold (charts_submanifold S) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_manifold (charts_submanifold S) k", "by unfold_locales\n    (auto simp: charts_submanifold_def atlas_is_atlas in_charts_in_atlas restrict_chart_in_atlas)"], ["", "sublocale sub: c_manifold \"(charts_submanifold S)\" k"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_manifold (charts_submanifold S) k", "by (rule charts_submanifold)"], ["", "lemma carrier_submanifold[simp]: \"sub.carrier = S \\<inter> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sub.carrier = S \\<inter> carrier", "using open_submanifold"], ["proof (prove)\nusing this:\n  open S\n\ngoal (1 subgoal):\n 1. sub.carrier = S \\<inter> carrier", "by (auto simp: manifold.carrier_def charts_submanifold_def domain_restrict_chart_if split: if_splits)"], ["", "lemma restrict_chart_carrier[simp]:\n  \"restrict_chart carrier x = x\"\n  if \"x \\<in> charts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict_chart carrier x = x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> charts\n\ngoal (1 subgoal):\n 1. restrict_chart carrier x = x", "by (auto intro!: chart_eqI)"], ["", "lemma charts_submanifold_carrier[simp]: \"charts_submanifold carrier = charts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. charts_submanifold carrier = charts", "by (force simp: charts_submanifold_def)"], ["", "lemma charts_submanifold_Int_carrier:\n  \"charts_submanifold (S \\<inter> carrier) = charts_submanifold S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. charts_submanifold (S \\<inter> carrier) = charts_submanifold S", "using open_submanifold"], ["proof (prove)\nusing this:\n  open S\n\ngoal (1 subgoal):\n 1. charts_submanifold (S \\<inter> carrier) = charts_submanifold S", "by (force simp: charts_submanifold_def restrict_chart_restrict_chart[symmetric])"], ["", "lemma submanifold_atlasE:\n  assumes \"c \\<in> sub.atlas\"\n  shows \"c \\<in> atlas\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> atlas", "proof (rule maximal_atlas')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c'. c' \\<in> charts \\<Longrightarrow> k-smooth_compat c c'\n 2. domain c \\<subseteq> carrier", "have dc: \"domain c \\<subseteq> S \\<inter> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. domain c \\<subseteq> S \\<inter> carrier", "using assms sub.domain_atlas_subset_carrier"], ["proof (prove)\nusing this:\n  c \\<in> sub.atlas\n  ?c \\<in> sub.atlas \\<Longrightarrow> domain ?c \\<subseteq> sub.carrier\n\ngoal (1 subgoal):\n 1. domain c \\<subseteq> S \\<inter> carrier", "by auto"], ["proof (state)\nthis:\n  domain c \\<subseteq> S \\<inter> carrier\n\ngoal (2 subgoals):\n 1. \\<And>c'. c' \\<in> charts \\<Longrightarrow> k-smooth_compat c c'\n 2. domain c \\<subseteq> carrier", "then"], ["proof (chain)\npicking this:\n  domain c \\<subseteq> S \\<inter> carrier", "show \"domain c \\<subseteq> carrier\""], ["proof (prove)\nusing this:\n  domain c \\<subseteq> S \\<inter> carrier\n\ngoal (1 subgoal):\n 1. domain c \\<subseteq> carrier", "using open_submanifold"], ["proof (prove)\nusing this:\n  domain c \\<subseteq> S \\<inter> carrier\n  open S\n\ngoal (1 subgoal):\n 1. domain c \\<subseteq> carrier", "by auto"], ["proof (state)\nthis:\n  domain c \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<And>c'. c' \\<in> charts \\<Longrightarrow> k-smooth_compat c c'", "fix c'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c'. c' \\<in> charts \\<Longrightarrow> k-smooth_compat c c'", "assume \"c' \\<in> charts\""], ["proof (state)\nthis:\n  c' \\<in> charts\n\ngoal (1 subgoal):\n 1. \\<And>c'. c' \\<in> charts \\<Longrightarrow> k-smooth_compat c c'", "then"], ["proof (chain)\npicking this:\n  c' \\<in> charts", "have \"restrict_chart S c' \\<in> (charts_submanifold S)\""], ["proof (prove)\nusing this:\n  c' \\<in> charts\n\ngoal (1 subgoal):\n 1. restrict_chart S c' \\<in> charts_submanifold S", "by (auto simp: charts_submanifold_def)"], ["proof (state)\nthis:\n  restrict_chart S c' \\<in> charts_submanifold S\n\ngoal (1 subgoal):\n 1. \\<And>c'. c' \\<in> charts \\<Longrightarrow> k-smooth_compat c c'", "then"], ["proof (chain)\npicking this:\n  restrict_chart S c' \\<in> charts_submanifold S", "have \"restrict_chart S c' \\<in> sub.atlas\""], ["proof (prove)\nusing this:\n  restrict_chart S c' \\<in> charts_submanifold S\n\ngoal (1 subgoal):\n 1. restrict_chart S c' \\<in> sub.atlas", "by auto"], ["proof (state)\nthis:\n  restrict_chart S c' \\<in> sub.atlas\n\ngoal (1 subgoal):\n 1. \\<And>c'. c' \\<in> charts \\<Longrightarrow> k-smooth_compat c c'", "have \"k-smooth_compat c (restrict_chart S c')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat c (restrict_chart S c')", "by (rule sub.atlas_is_atlas) fact+"], ["proof (state)\nthis:\n  k-smooth_compat c (restrict_chart S c')\n\ngoal (1 subgoal):\n 1. \\<And>c'. c' \\<in> charts \\<Longrightarrow> k-smooth_compat c c'", "show \"k-smooth_compat c c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat c c'", "apply (rule smooth_compat_restrict_chartD[where U=S])"], ["proof (prove)\ngoal (3 subgoals):\n 1. domain c \\<subseteq> S\n 2. open S\n 3. k-smooth_compat c (restrict_chart S c')", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. domain c \\<subseteq> S", "using dc"], ["proof (prove)\nusing this:\n  domain c \\<subseteq> S \\<inter> carrier\n\ngoal (1 subgoal):\n 1. domain c \\<subseteq> S", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. open S\n 2. k-smooth_compat c (restrict_chart S c')", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. open S", "by (rule open_submanifold)"], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat c (restrict_chart S c')", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat c (restrict_chart S c')", "by fact"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  k-smooth_compat c c'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma submanifold_atlasI:\n  \"restrict_chart S c \\<in> sub.atlas\"\n  if \"c \\<in> atlas\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict_chart S c \\<in> sub.atlas", "proof (rule sub.maximal_atlas')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c'.\n       c' \\<in> charts_submanifold S \\<Longrightarrow>\n       k-smooth_compat (restrict_chart S c) c'\n 2. domain (restrict_chart S c) \\<subseteq> sub.carrier", "fix c'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c'.\n       c' \\<in> charts_submanifold S \\<Longrightarrow>\n       k-smooth_compat (restrict_chart S c) c'\n 2. domain (restrict_chart S c) \\<subseteq> sub.carrier", "assume \"c' \\<in> (charts_submanifold S)\""], ["proof (state)\nthis:\n  c' \\<in> charts_submanifold S\n\ngoal (2 subgoals):\n 1. \\<And>c'.\n       c' \\<in> charts_submanifold S \\<Longrightarrow>\n       k-smooth_compat (restrict_chart S c) c'\n 2. domain (restrict_chart S c) \\<subseteq> sub.carrier", "then"], ["proof (chain)\npicking this:\n  c' \\<in> charts_submanifold S", "obtain c'' where c'': \"c' = restrict_chart S c''\" \"c'' \\<in> charts\""], ["proof (prove)\nusing this:\n  c' \\<in> charts_submanifold S\n\ngoal (1 subgoal):\n 1. (\\<And>c''.\n        \\<lbrakk>c' = restrict_chart S c''; c'' \\<in> charts\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding charts_submanifold_def"], ["proof (prove)\nusing this:\n  c' \\<in> restrict_chart S ` charts\n\ngoal (1 subgoal):\n 1. (\\<And>c''.\n        \\<lbrakk>c' = restrict_chart S c''; c'' \\<in> charts\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c' = restrict_chart S c''\n  c'' \\<in> charts\n\ngoal (2 subgoals):\n 1. \\<And>c'.\n       c' \\<in> charts_submanifold S \\<Longrightarrow>\n       k-smooth_compat (restrict_chart S c) c'\n 2. domain (restrict_chart S c) \\<subseteq> sub.carrier", "show \"k-smooth_compat (restrict_chart S c) c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat (restrict_chart S c) c'", "unfolding c''"], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat (restrict_chart S c) (restrict_chart S c'')", "apply (rule smooth_compat_restrict_chartI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat c (restrict_chart S c'')", "apply (rule smooth_compat_restrict_chartI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat c c''", "apply (rule atlas_is_atlas)"], ["proof (prove)\ngoal (2 subgoals):\n 1. c \\<in> atlas\n 2. c'' \\<in> atlas", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. c'' \\<in> atlas", "using \\<open>c'' \\<in> charts\\<close>"], ["proof (prove)\nusing this:\n  c'' \\<in> charts\n\ngoal (1 subgoal):\n 1. c'' \\<in> atlas", "by auto"], ["proof (state)\nthis:\n  k-smooth_compat (restrict_chart S c) c'\n\ngoal (1 subgoal):\n 1. domain (restrict_chart S c) \\<subseteq> sub.carrier", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. domain (restrict_chart S c) \\<subseteq> sub.carrier", "show \"domain (restrict_chart S c) \\<subseteq> sub.carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. domain (restrict_chart S c) \\<subseteq> sub.carrier", "using domain_atlas_subset_carrier[OF that]"], ["proof (prove)\nusing this:\n  domain c \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. domain (restrict_chart S c) \\<subseteq> sub.carrier", "by (auto simp: open_submanifold )"], ["proof (state)\nthis:\n  domain (restrict_chart S c) \\<subseteq> sub.carrier\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma (in c_manifold) restrict_chart_carrier[simp]:\n  \"restrict_chart carrier x = x\"\n  if \"x \\<in> charts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict_chart carrier x = x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> charts\n\ngoal (1 subgoal):\n 1. restrict_chart carrier x = x", "by (auto intro!: chart_eqI)"], ["", "lemma (in c_manifold) charts_submanifold_carrier[simp]: \"charts_submanifold carrier = charts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. charts_submanifold carrier = charts", "by (force simp: charts_submanifold_def)"], ["", "subsection \\<open>Differentiable maps\\<close>"], ["", "locale c_manifolds =\n  src: c_manifold charts1 k + \n  dest: c_manifold charts2 k for k charts1 charts2"], ["", "locale diff = c_manifolds k charts1 charts2\n  for k\n    and charts1 :: \"('a::{t2_space,second_countable_topology}, 'e::euclidean_space) chart set\"\n    and charts2 :: \"('b::{t2_space,second_countable_topology}, 'f::euclidean_space) chart set\"\n    +\n  fixes f :: \"('a \\<Rightarrow> 'b)\"\n  assumes exists_smooth_on: \"x \\<in> src.carrier \\<Longrightarrow>\n    \\<exists>c1\\<in>src.atlas. \\<exists>c2\\<in>dest.atlas.\n      x \\<in> domain c1 \\<and>\n      f ` domain c1 \\<subseteq> domain c2 \\<and>\n      k-smooth_on (codomain c1) (c2 \\<circ> f \\<circ> inv_chart c1)\"\nbegin"], ["", "lemma defined: \"f ` src.carrier \\<subseteq> dest.carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` src.carrier \\<subseteq> dest.carrier", "using exists_smooth_on"], ["proof (prove)\nusing this:\n  ?x \\<in> src.carrier \\<Longrightarrow>\n  \\<exists>c1\\<in>src.atlas.\n     \\<exists>c2\\<in>dest.atlas.\n        ?x \\<in> domain c1 \\<and>\n        f ` domain c1 \\<subseteq> domain c2 \\<and>\n        k-smooth_on (codomain c1)\n         (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. f ` src.carrier \\<subseteq> dest.carrier", "by auto"], ["", "end"], ["", "context c_manifolds begin"], ["", "lemma diff_iff: \"diff k charts1 charts2 f \\<longleftrightarrow>\n  (\\<forall>x\\<in>src.carrier. \\<exists>c1\\<in>src.atlas. \\<exists>c2\\<in>dest.atlas.\n    x \\<in> domain c1 \\<and>\n    f ` domain c1 \\<subseteq> domain c2 \\<and>\n    k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1))\"\n  (is \"?l \\<longleftrightarrow> (\\<forall>x\\<in>_. ?r x)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k charts1 charts2 f =\n    (\\<forall>x\\<in>src.carrier.\n        \\<exists>c1\\<in>src.atlas.\n           \\<exists>c2\\<in>dest.atlas.\n              x \\<in> domain c1 \\<and>\n              f ` domain c1 \\<subseteq> domain c2 \\<and>\n              k-smooth_on (codomain c1)\n               (apply_chart c2 \\<circ> f \\<circ> inv_chart c1))", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>diff k charts1 charts2 f; x \\<in> src.carrier\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c1\\<in>src.atlas.\n                            \\<exists>c2\\<in>dest.atlas.\n                               x \\<in> domain c1 \\<and>\n                               f ` domain c1 \\<subseteq> domain c2 \\<and>\n                               k-smooth_on (codomain c1)\n                                (apply_chart c2 \\<circ> f \\<circ>\n                                 inv_chart c1)\n 2. \\<forall>x\\<in>src.carrier.\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ>\n               inv_chart c1) \\<Longrightarrow>\n    diff k charts1 charts2 f", "assume ?l"], ["proof (state)\nthis:\n  diff k charts1 charts2 f\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>diff k charts1 charts2 f; x \\<in> src.carrier\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c1\\<in>src.atlas.\n                            \\<exists>c2\\<in>dest.atlas.\n                               x \\<in> domain c1 \\<and>\n                               f ` domain c1 \\<subseteq> domain c2 \\<and>\n                               k-smooth_on (codomain c1)\n                                (apply_chart c2 \\<circ> f \\<circ>\n                                 inv_chart c1)\n 2. \\<forall>x\\<in>src.carrier.\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ>\n               inv_chart c1) \\<Longrightarrow>\n    diff k charts1 charts2 f", "interpret diff k charts1 charts2 f"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k charts1 charts2 f", "by fact"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>diff k charts1 charts2 f; x \\<in> src.carrier\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c1\\<in>src.atlas.\n                            \\<exists>c2\\<in>dest.atlas.\n                               x \\<in> domain c1 \\<and>\n                               f ` domain c1 \\<subseteq> domain c2 \\<and>\n                               k-smooth_on (codomain c1)\n                                (apply_chart c2 \\<circ> f \\<circ>\n                                 inv_chart c1)\n 2. \\<forall>x\\<in>src.carrier.\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ>\n               inv_chart c1) \\<Longrightarrow>\n    diff k charts1 charts2 f", "show \"x \\<in> src.carrier \\<Longrightarrow> ?r x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> src.carrier \\<Longrightarrow>\n    \\<exists>c1\\<in>src.atlas.\n       \\<exists>c2\\<in>dest.atlas.\n          x \\<in> domain c1 \\<and>\n          f ` domain c1 \\<subseteq> domain c2 \\<and>\n          k-smooth_on (codomain c1)\n           (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "by (rule exists_smooth_on)"], ["proof (state)\nthis:\n  ?x \\<in> src.carrier \\<Longrightarrow>\n  \\<exists>c1\\<in>src.atlas.\n     \\<exists>c2\\<in>dest.atlas.\n        ?x \\<in> domain c1 \\<and>\n        f ` domain c1 \\<subseteq> domain c2 \\<and>\n        k-smooth_on (codomain c1)\n         (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>src.carrier.\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ>\n               inv_chart c1) \\<Longrightarrow>\n    diff k charts1 charts2 f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>src.carrier.\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ>\n               inv_chart c1) \\<Longrightarrow>\n    diff k charts1 charts2 f", "assume \"\\<forall>x\\<in>src.carrier. ?r x\""], ["proof (state)\nthis:\n  \\<forall>x\\<in>src.carrier.\n     \\<exists>c1\\<in>src.atlas.\n        \\<exists>c2\\<in>dest.atlas.\n           x \\<in> domain c1 \\<and>\n           f ` domain c1 \\<subseteq> domain c2 \\<and>\n           k-smooth_on (codomain c1)\n            (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>src.carrier.\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ>\n               inv_chart c1) \\<Longrightarrow>\n    diff k charts1 charts2 f", "then"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>src.carrier.\n     \\<exists>c1\\<in>src.atlas.\n        \\<exists>c2\\<in>dest.atlas.\n           x \\<in> domain c1 \\<and>\n           f ` domain c1 \\<subseteq> domain c2 \\<and>\n           k-smooth_on (codomain c1)\n            (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "show ?l"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>src.carrier.\n     \\<exists>c1\\<in>src.atlas.\n        \\<exists>c2\\<in>dest.atlas.\n           x \\<in> domain c1 \\<and>\n           f ` domain c1 \\<subseteq> domain c2 \\<and>\n           k-smooth_on (codomain c1)\n            (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. diff k charts1 charts2 f", "by unfold_locales auto"], ["proof (state)\nthis:\n  diff k charts1 charts2 f\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context diff begin"], ["", "lemma diffE:\n  assumes \"x \\<in> src.carrier\"\n  obtains c1::\"('a, 'e) chart\"\n    and c2::\"('b, 'f) chart\"\n  where\n    \"c1 \\<in> src.atlas\" \"c2 \\<in> dest.atlas\" \"x \\<in> domain c1\" \"f ` domain c1 \\<subseteq> domain c2\"\n    \"k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>c1 \\<in> src.atlas; c2 \\<in> dest.atlas; x \\<in> domain c1;\n         f ` domain c1 \\<subseteq> domain c2;\n         k-smooth_on (codomain c1)\n          (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using exists_smooth_on assms"], ["proof (prove)\nusing this:\n  ?x \\<in> src.carrier \\<Longrightarrow>\n  \\<exists>c1\\<in>src.atlas.\n     \\<exists>c2\\<in>dest.atlas.\n        ?x \\<in> domain c1 \\<and>\n        f ` domain c1 \\<subseteq> domain c2 \\<and>\n        k-smooth_on (codomain c1)\n         (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n  x \\<in> src.carrier\n\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>c1 \\<in> src.atlas; c2 \\<in> dest.atlas; x \\<in> domain c1;\n         f ` domain c1 \\<subseteq> domain c2;\n         k-smooth_on (codomain c1)\n          (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["", "lemma continuous_at: \"continuous (at x within T) f\" if \"x \\<in> src.carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous (at x within T) f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. continuous (at x within T) f", "from that"], ["proof (chain)\npicking this:\n  x \\<in> src.carrier", "obtain c1 c2 where \"c1 \\<in> src.atlas\" \"c2 \\<in> dest.atlas\" \"x \\<in> domain c1\"\n    \"f ` domain c1 \\<subseteq> domain c2\"\n    \"k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\""], ["proof (prove)\nusing this:\n  x \\<in> src.carrier\n\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>c1 \\<in> src.atlas; c2 \\<in> dest.atlas; x \\<in> domain c1;\n         f ` domain c1 \\<subseteq> domain c2;\n         k-smooth_on (codomain c1)\n          (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule diffE)"], ["proof (state)\nthis:\n  c1 \\<in> src.atlas\n  c2 \\<in> dest.atlas\n  x \\<in> domain c1\n  f ` domain c1 \\<subseteq> domain c2\n  k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. continuous (at x within T) f", "from smooth_on_imp_continuous_on[OF this(5)]"], ["proof (chain)\npicking this:\n  continuous_on (codomain c1)\n   (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "have \"continuous_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\""], ["proof (prove)\nusing this:\n  continuous_on (codomain c1)\n   (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. continuous_on (codomain c1)\n     (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "."], ["proof (state)\nthis:\n  continuous_on (codomain c1)\n   (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. continuous (at x within T) f", "then"], ["proof (chain)\npicking this:\n  continuous_on (codomain c1)\n   (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "have \"continuous_on (c1 ` domain c1) (f \\<circ> inv_chart c1)\""], ["proof (prove)\nusing this:\n  continuous_on (codomain c1)\n   (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. continuous_on (apply_chart c1 ` domain c1) (f \\<circ> inv_chart c1)", "using \\<open>f ` domain c1 \\<subseteq> domain c2\\<close> continuous_on_chart_inv"], ["proof (prove)\nusing this:\n  continuous_on (codomain c1)\n   (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n  f ` domain c1 \\<subseteq> domain c2\n  \\<lbrakk>continuous_on ?s (apply_chart ?c \\<circ> ?f);\n   ?f ` ?s \\<subseteq> domain ?c\\<rbrakk>\n  \\<Longrightarrow> continuous_on ?s ?f\n\ngoal (1 subgoal):\n 1. continuous_on (apply_chart c1 ` domain c1) (f \\<circ> inv_chart c1)", "by (fastforce simp: image_domain_eq)"], ["proof (state)\nthis:\n  continuous_on (apply_chart c1 ` domain c1) (f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. continuous (at x within T) f", "then"], ["proof (chain)\npicking this:\n  continuous_on (apply_chart c1 ` domain c1) (f \\<circ> inv_chart c1)", "have \"continuous_on (domain c1) f\""], ["proof (prove)\nusing this:\n  continuous_on (apply_chart c1 ` domain c1) (f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. continuous_on (domain c1) f", "by (rule continuous_on_chart_inv') simp"], ["proof (state)\nthis:\n  continuous_on (domain c1) f\n\ngoal (1 subgoal):\n 1. continuous (at x within T) f", "then"], ["proof (chain)\npicking this:\n  continuous_on (domain c1) f", "have \"isCont f x\""], ["proof (prove)\nusing this:\n  continuous_on (domain c1) f\n\ngoal (1 subgoal):\n 1. isCont f x", "using \\<open>x \\<in> domain c1\\<close>"], ["proof (prove)\nusing this:\n  continuous_on (domain c1) f\n  x \\<in> domain c1\n\ngoal (1 subgoal):\n 1. isCont f x", "unfolding continuous_on_eq_continuous_at[OF open_domain]"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>domain c1. isCont f x\n  x \\<in> domain c1\n\ngoal (1 subgoal):\n 1. isCont f x", "by auto"], ["proof (state)\nthis:\n  isCont f x\n\ngoal (1 subgoal):\n 1. continuous (at x within T) f", "then"], ["proof (chain)\npicking this:\n  isCont f x", "show \"continuous (at x within T) f\""], ["proof (prove)\nusing this:\n  isCont f x\n\ngoal (1 subgoal):\n 1. continuous (at x within T) f", "by (simp add: \\<open>isCont f x\\<close> continuous_at_imp_continuous_within)"], ["proof (state)\nthis:\n  continuous (at x within T) f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma continuous_on: \"continuous_on src.carrier f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on src.carrier f", "unfolding continuous_on_eq_continuous_within"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>src.carrier. continuous (at x within src.carrier) f", "by (auto intro: continuous_at)"], ["", "lemmas continuous_on_intro[continuous_intros] = continuous_on_compose2[OF continuous_on _]"], ["", "lemmas continuous_within[continuous_intros] = continuous_within_compose3[OF continuous_at]"], ["", "lemmas tendsto[tendsto_intros] = isCont_tendsto_compose[OF continuous_at]"], ["", "lemma diff_chartsD:\n  assumes \"d1 \\<in> src.atlas\" \"d2 \\<in> dest.atlas\"\n  shows \"k-smooth_on (codomain d1 \\<inter> inv_chart d1 -` (src.carrier \\<inter> f -` domain d2))\n      (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on\n     (codomain d1 \\<inter>\n      inv_chart d1 -` (src.carrier \\<inter> f -` domain d2))\n     (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "proof (rule smooth_on_open_subsetsI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "assume \"y \\<in> codomain d1 \\<inter> inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\""], ["proof (state)\nthis:\n  y \\<in> codomain d1 \\<inter>\n          inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "then"], ["proof (chain)\npicking this:\n  y \\<in> codomain d1 \\<inter>\n          inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)", "have y: \"f (inv_chart d1 y) \\<in> domain d2\" \"y \\<in> codomain d1\""], ["proof (prove)\nusing this:\n  y \\<in> codomain d1 \\<inter>\n          inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\n\ngoal (1 subgoal):\n 1. f (inv_chart d1 y) \\<in> domain d2 &&& y \\<in> codomain d1", "by auto"], ["proof (state)\nthis:\n  f (inv_chart d1 y) \\<in> domain d2\n  y \\<in> codomain d1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "then"], ["proof (chain)\npicking this:\n  f (inv_chart d1 y) \\<in> domain d2\n  y \\<in> codomain d1", "obtain x where x: \"d1 x = y\" \"x \\<in> domain d1\""], ["proof (prove)\nusing this:\n  f (inv_chart d1 y) \\<in> domain d2\n  y \\<in> codomain d1\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>apply_chart d1 x = y; x \\<in> domain d1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  apply_chart d1 x = y\n  x \\<in> domain d1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "then"], ["proof (chain)\npicking this:\n  apply_chart d1 x = y\n  x \\<in> domain d1", "have \"x \\<in> src.carrier\""], ["proof (prove)\nusing this:\n  apply_chart d1 x = y\n  x \\<in> domain d1\n\ngoal (1 subgoal):\n 1. x \\<in> src.carrier", "using assms"], ["proof (prove)\nusing this:\n  apply_chart d1 x = y\n  x \\<in> domain d1\n  d1 \\<in> src.atlas\n  d2 \\<in> dest.atlas\n\ngoal (1 subgoal):\n 1. x \\<in> src.carrier", "by force"], ["proof (state)\nthis:\n  x \\<in> src.carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "obtain c1 c2 where \"c1 \\<in> src.atlas\" \"c2 \\<in> dest.atlas\"\n    and fc1: \"f ` domain c1 \\<subseteq> domain c2\"\n    and xc1: \"x \\<in> domain c1\"\n    and d: \"k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>c1 \\<in> src.atlas; c2 \\<in> dest.atlas;\n         f ` domain c1 \\<subseteq> domain c2; x \\<in> domain c1;\n         k-smooth_on (codomain c1)\n          (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using diffE[OF \\<open>x \\<in> src.carrier\\<close>]"], ["proof (prove)\nusing this:\n  (\\<And>c1 c2.\n      \\<lbrakk>c1 \\<in> src.atlas; c2 \\<in> dest.atlas; x \\<in> domain c1;\n       f ` domain c1 \\<subseteq> domain c2;\n       k-smooth_on (codomain c1)\n        (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>c1 \\<in> src.atlas; c2 \\<in> dest.atlas;\n         f ` domain c1 \\<subseteq> domain c2; x \\<in> domain c1;\n         k-smooth_on (codomain c1)\n          (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  c1 \\<in> src.atlas\n  c2 \\<in> dest.atlas\n  f ` domain c1 \\<subseteq> domain c2\n  x \\<in> domain c1\n  k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "have [simp]: \"x \\<in> domain c1 \\<Longrightarrow> f x \\<in> domain c2\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> domain c1 \\<Longrightarrow> f x \\<in> domain c2", "using fc1"], ["proof (prove)\nusing this:\n  f ` domain c1 \\<subseteq> domain c2\n\ngoal (1 subgoal):\n 1. x \\<in> domain c1 \\<Longrightarrow> f x \\<in> domain c2", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> domain c1 \\<Longrightarrow> f ?x \\<in> domain c2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "have r1: \"k-smooth_on (d1 ` (domain d1 \\<inter> domain c1)) (c1 \\<circ> inv_chart d1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart d1 ` (domain d1 \\<inter> domain c1))\n     (apply_chart c1 \\<circ> inv_chart d1)", "using src.atlas_is_atlas[OF \\<open>d1 \\<in> src.atlas\\<close> \\<open>c1 \\<in> src.atlas\\<close>, THEN smooth_compat_D1]"], ["proof (prove)\nusing this:\n  k-smooth_on (apply_chart d1 ` (domain d1 \\<inter> domain c1))\n   (apply_chart c1 \\<circ> inv_chart d1)\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart d1 ` (domain d1 \\<inter> domain c1))\n     (apply_chart c1 \\<circ> inv_chart d1)", "."], ["proof (state)\nthis:\n  k-smooth_on (apply_chart d1 ` (domain d1 \\<inter> domain c1))\n   (apply_chart c1 \\<circ> inv_chart d1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "have r2: \"k-smooth_on (c2 ` (domain d2 \\<inter> domain c2)) (d2 \\<circ> inv_chart c2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c2 ` (domain d2 \\<inter> domain c2))\n     (apply_chart d2 \\<circ> inv_chart c2)", "using dest.atlas_is_atlas[OF \\<open>d2 \\<in> dest.atlas\\<close> \\<open>c2 \\<in> dest.atlas\\<close>, THEN smooth_compat_D2]"], ["proof (prove)\nusing this:\n  k-smooth_on (apply_chart c2 ` (domain d2 \\<inter> domain c2))\n   (apply_chart d2 \\<circ> inv_chart c2)\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c2 ` (domain d2 \\<inter> domain c2))\n     (apply_chart d2 \\<circ> inv_chart c2)", "."], ["proof (state)\nthis:\n  k-smooth_on (apply_chart c2 ` (domain d2 \\<inter> domain c2))\n   (apply_chart d2 \\<circ> inv_chart c2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "define T where \"T = (d1 ` (domain d1 \\<inter> domain c1) \\<inter> inv_chart d1 -` (src.carrier \\<inter> (f -` domain d2)))\""], ["proof (state)\nthis:\n  T =\n  apply_chart d1 ` (domain d1 \\<inter> domain c1) \\<inter>\n  inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "have \"open T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open T", "unfolding T_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. open\n     (apply_chart d1 ` (domain d1 \\<inter> domain c1) \\<inter>\n      inv_chart d1 -` (src.carrier \\<inter> f -` domain d2))", "by (rule open_continuous_vimage')\n      (auto intro!: continuous_intros open_continuous_vimage' src.open_carrier)"], ["proof (state)\nthis:\n  open T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "have T_subset: \"T \\<subseteq> apply_chart d1 ` (domain d1 \\<inter> domain c1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<subseteq> apply_chart d1 ` (domain d1 \\<inter> domain c1)", "by (auto simp: T_def)"], ["proof (state)\nthis:\n  T \\<subseteq> apply_chart d1 ` (domain d1 \\<inter> domain c1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "have opens: \"open (c1 ` inv_chart d1 ` T)\" \"open (c2 ` (domain d2 \\<inter> domain c2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open (apply_chart c1 ` inv_chart d1 ` T) &&&\n    open (apply_chart c2 ` (domain d2 \\<inter> domain c2))", "using fc1 \\<open>open T\\<close>"], ["proof (prove)\nusing this:\n  f ` domain c1 \\<subseteq> domain c2\n  open T\n\ngoal (1 subgoal):\n 1. open (apply_chart c1 ` inv_chart d1 ` T) &&&\n    open (apply_chart c2 ` (domain d2 \\<inter> domain c2))", "by (force simp: T_def)+"], ["proof (state)\nthis:\n  open (apply_chart c1 ` inv_chart d1 ` T)\n  open (apply_chart c2 ` (domain d2 \\<inter> domain c2))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "have \"k-smooth_on ((apply_chart c1 \\<circ> inv_chart d1) ` T) (d2 \\<circ> inv_chart c2 \\<circ> (c2 \\<circ> f \\<circ> inv_chart c1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on ((apply_chart c1 \\<circ> inv_chart d1) ` T)\n     (apply_chart d2 \\<circ> inv_chart c2 \\<circ>\n      (apply_chart c2 \\<circ> f \\<circ> inv_chart c1))", "using r2 d opens"], ["proof (prove)\nusing this:\n  k-smooth_on (apply_chart c2 ` (domain d2 \\<inter> domain c2))\n   (apply_chart d2 \\<circ> inv_chart c2)\n  k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n  open (apply_chart c1 ` inv_chart d1 ` T)\n  open (apply_chart c2 ` (domain d2 \\<inter> domain c2))\n\ngoal (1 subgoal):\n 1. k-smooth_on ((apply_chart c1 \\<circ> inv_chart d1) ` T)\n     (apply_chart d2 \\<circ> inv_chart c2 \\<circ>\n      (apply_chart c2 \\<circ> f \\<circ> inv_chart c1))", "unfolding image_comp[symmetric]"], ["proof (prove)\nusing this:\n  k-smooth_on (apply_chart c2 ` (domain d2 \\<inter> domain c2))\n   (apply_chart d2 \\<circ> inv_chart c2)\n  k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n  open (apply_chart c1 ` inv_chart d1 ` T)\n  open (apply_chart c2 ` (domain d2 \\<inter> domain c2))\n\ngoal (1 subgoal):\n 1. k-smooth_on (apply_chart c1 ` inv_chart d1 ` T)\n     (apply_chart d2 \\<circ> inv_chart c2 \\<circ>\n      (apply_chart c2 \\<circ> f \\<circ> inv_chart c1))", "by (rule smooth_on_compose2) (auto simp: T_def)"], ["proof (state)\nthis:\n  k-smooth_on ((apply_chart c1 \\<circ> inv_chart d1) ` T)\n   (apply_chart d2 \\<circ> inv_chart c2 \\<circ>\n    (apply_chart c2 \\<circ> f \\<circ> inv_chart c1))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "from this r1 \\<open>open T\\<close> opens(1)"], ["proof (chain)\npicking this:\n  k-smooth_on ((apply_chart c1 \\<circ> inv_chart d1) ` T)\n   (apply_chart d2 \\<circ> inv_chart c2 \\<circ>\n    (apply_chart c2 \\<circ> f \\<circ> inv_chart c1))\n  k-smooth_on (apply_chart d1 ` (domain d1 \\<inter> domain c1))\n   (apply_chart c1 \\<circ> inv_chart d1)\n  open T\n  open (apply_chart c1 ` inv_chart d1 ` T)", "have \"k-smooth_on T\n      ((d2 \\<circ> inv_chart c2) \\<circ> (c2 \\<circ> f \\<circ> inv_chart c1) \\<circ> (c1 \\<circ> inv_chart d1))\""], ["proof (prove)\nusing this:\n  k-smooth_on ((apply_chart c1 \\<circ> inv_chart d1) ` T)\n   (apply_chart d2 \\<circ> inv_chart c2 \\<circ>\n    (apply_chart c2 \\<circ> f \\<circ> inv_chart c1))\n  k-smooth_on (apply_chart d1 ` (domain d1 \\<inter> domain c1))\n   (apply_chart c1 \\<circ> inv_chart d1)\n  open T\n  open (apply_chart c1 ` inv_chart d1 ` T)\n\ngoal (1 subgoal):\n 1. k-smooth_on T\n     (apply_chart d2 \\<circ> inv_chart c2 \\<circ>\n      (apply_chart c2 \\<circ> f \\<circ> inv_chart c1) \\<circ>\n      (apply_chart c1 \\<circ> inv_chart d1))", "unfolding image_comp[symmetric]"], ["proof (prove)\nusing this:\n  k-smooth_on (apply_chart c1 ` inv_chart d1 ` T)\n   (apply_chart d2 \\<circ> inv_chart c2 \\<circ>\n    (apply_chart c2 \\<circ> f \\<circ> inv_chart c1))\n  k-smooth_on (apply_chart d1 ` (domain d1 \\<inter> domain c1))\n   (apply_chart c1 \\<circ> inv_chart d1)\n  open T\n  open (apply_chart c1 ` inv_chart d1 ` T)\n\ngoal (1 subgoal):\n 1. k-smooth_on T\n     (apply_chart d2 \\<circ> inv_chart c2 \\<circ>\n      (apply_chart c2 \\<circ> f \\<circ> inv_chart c1) \\<circ>\n      (apply_chart c1 \\<circ> inv_chart d1))", "by (rule smooth_on_compose2) (force simp: T_def)+"], ["proof (state)\nthis:\n  k-smooth_on T\n   (apply_chart d2 \\<circ> inv_chart c2 \\<circ>\n    (apply_chart c2 \\<circ> f \\<circ> inv_chart c1) \\<circ>\n    (apply_chart c1 \\<circ> inv_chart d1))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "then"], ["proof (chain)\npicking this:\n  k-smooth_on T\n   (apply_chart d2 \\<circ> inv_chart c2 \\<circ>\n    (apply_chart c2 \\<circ> f \\<circ> inv_chart c1) \\<circ>\n    (apply_chart c1 \\<circ> inv_chart d1))", "have \"k-smooth_on T (d2 \\<circ> f \\<circ> inv_chart d1)\""], ["proof (prove)\nusing this:\n  k-smooth_on T\n   (apply_chart d2 \\<circ> inv_chart c2 \\<circ>\n    (apply_chart c2 \\<circ> f \\<circ> inv_chart c1) \\<circ>\n    (apply_chart c1 \\<circ> inv_chart d1))\n\ngoal (1 subgoal):\n 1. k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "using \\<open>open T\\<close>"], ["proof (prove)\nusing this:\n  k-smooth_on T\n   (apply_chart d2 \\<circ> inv_chart c2 \\<circ>\n    (apply_chart c2 \\<circ> f \\<circ> inv_chart c1) \\<circ>\n    (apply_chart c1 \\<circ> inv_chart d1))\n  open T\n\ngoal (1 subgoal):\n 1. k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "by (rule smooth_on_cong) (auto simp: T_def)"], ["proof (state)\nthis:\n  k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "moreover"], ["proof (state)\nthis:\n  k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "have \"y \\<in> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> T", "using x xc1 fc1 y \\<open>c1 \\<in> src.atlas\\<close>"], ["proof (prove)\nusing this:\n  apply_chart d1 x = y\n  x \\<in> domain d1\n  x \\<in> domain c1\n  f ` domain c1 \\<subseteq> domain c2\n  f (inv_chart d1 y) \\<in> domain d2\n  y \\<in> codomain d1\n  c1 \\<in> src.atlas\n\ngoal (1 subgoal):\n 1. y \\<in> T", "by (auto simp: T_def)"], ["proof (state)\nthis:\n  y \\<in> T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<inter>\n               inv_chart d1 -`\n               (src.carrier \\<inter> f -` domain d2) \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "ultimately"], ["proof (chain)\npicking this:\n  k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\n  y \\<in> T", "show \"\\<exists>T. y \\<in> T \\<and> open T \\<and> k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\""], ["proof (prove)\nusing this:\n  k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\n  y \\<in> T\n\ngoal (1 subgoal):\n 1. \\<exists>T.\n       y \\<in> T \\<and>\n       open T \\<and>\n       k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "using \\<open>open T\\<close>"], ["proof (prove)\nusing this:\n  k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\n  y \\<in> T\n  open T\n\ngoal (1 subgoal):\n 1. \\<exists>T.\n       y \\<in> T \\<and>\n       open T \\<and>\n       k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "by metis"], ["proof (state)\nthis:\n  \\<exists>T.\n     y \\<in> T \\<and>\n     open T \\<and>\n     k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diff_between_chartsE:\n  assumes \"d1 \\<in> src.atlas\" \"d2 \\<in> dest.atlas\"\n  assumes \"y \\<in> domain d1\" \"y \\<in> src.carrier\" \"f y \\<in> domain d2\"\n  obtains X where\n    \"k-smooth_on X (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\"\n    \"d1 y \\<in> X\"\n    \"open X\"\n    \"X = codomain d1 \\<inter> inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>k-smooth_on X\n                  (apply_chart d2 \\<circ> f \\<circ> inv_chart d1);\n         apply_chart d1 y \\<in> X; open X;\n         X =\n         codomain d1 \\<inter>\n         inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>k-smooth_on X\n                  (apply_chart d2 \\<circ> f \\<circ> inv_chart d1);\n         apply_chart d1 y \\<in> X; open X;\n         X =\n         codomain d1 \\<inter>\n         inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define X where \"X = (codomain d1 \\<inter> inv_chart d1 -` (src.carrier \\<inter> f -` domain d2))\""], ["proof (state)\nthis:\n  X =\n  codomain d1 \\<inter> inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>k-smooth_on X\n                  (apply_chart d2 \\<circ> f \\<circ> inv_chart d1);\n         apply_chart d1 y \\<in> X; open X;\n         X =\n         codomain d1 \\<inter>\n         inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from diff_chartsD[OF assms(1,2)]"], ["proof (chain)\npicking this:\n  k-smooth_on\n   (codomain d1 \\<inter>\n    inv_chart d1 -` (src.carrier \\<inter> f -` domain d2))\n   (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "have \"k-smooth_on X (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\""], ["proof (prove)\nusing this:\n  k-smooth_on\n   (codomain d1 \\<inter>\n    inv_chart d1 -` (src.carrier \\<inter> f -` domain d2))\n   (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\n\ngoal (1 subgoal):\n 1. k-smooth_on X (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)", "by (simp add: X_def)"], ["proof (state)\nthis:\n  k-smooth_on X (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>k-smooth_on X\n                  (apply_chart d2 \\<circ> f \\<circ> inv_chart d1);\n         apply_chart d1 y \\<in> X; open X;\n         X =\n         codomain d1 \\<inter>\n         inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  k-smooth_on X (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>k-smooth_on X\n                  (apply_chart d2 \\<circ> f \\<circ> inv_chart d1);\n         apply_chart d1 y \\<in> X; open X;\n         X =\n         codomain d1 \\<inter>\n         inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"d1 y \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_chart d1 y \\<in> X", "using assms(3-5)"], ["proof (prove)\nusing this:\n  y \\<in> domain d1\n  y \\<in> src.carrier\n  f y \\<in> domain d2\n\ngoal (1 subgoal):\n 1. apply_chart d1 y \\<in> X", "by (auto simp: X_def)"], ["proof (state)\nthis:\n  apply_chart d1 y \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>k-smooth_on X\n                  (apply_chart d2 \\<circ> f \\<circ> inv_chart d1);\n         apply_chart d1 y \\<in> X; open X;\n         X =\n         codomain d1 \\<inter>\n         inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  apply_chart d1 y \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>k-smooth_on X\n                  (apply_chart d2 \\<circ> f \\<circ> inv_chart d1);\n         apply_chart d1 y \\<in> X; open X;\n         X =\n         codomain d1 \\<inter>\n         inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"open X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open X", "unfolding X_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. open\n     (codomain d1 \\<inter>\n      inv_chart d1 -` (src.carrier \\<inter> f -` domain d2))", "by (auto intro!: open_continuous_vimage' continuous_intros src.open_carrier)"], ["proof (state)\nthis:\n  open X\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>k-smooth_on X\n                  (apply_chart d2 \\<circ> f \\<circ> inv_chart d1);\n         apply_chart d1 y \\<in> X; open X;\n         X =\n         codomain d1 \\<inter>\n         inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  open X\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>k-smooth_on X\n                  (apply_chart d2 \\<circ> f \\<circ> inv_chart d1);\n         apply_chart d1 y \\<in> X; open X;\n         X =\n         codomain d1 \\<inter>\n         inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note X_def"], ["proof (state)\nthis:\n  X =\n  codomain d1 \\<inter> inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>k-smooth_on X\n                  (apply_chart d2 \\<circ> f \\<circ> inv_chart d1);\n         apply_chart d1 y \\<in> X; open X;\n         X =\n         codomain d1 \\<inter>\n         inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  k-smooth_on X (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\n  apply_chart d1 y \\<in> X\n  open X\n  X =\n  codomain d1 \\<inter> inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)", "show ?thesis"], ["proof (prove)\nusing this:\n  k-smooth_on X (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\n  apply_chart d1 y \\<in> X\n  open X\n  X =\n  codomain d1 \\<inter> inv_chart d1 -` (src.carrier \\<inter> f -` domain d2)\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma diff_compose:\n  \"diff k M1 M3 (g \\<circ> f)\"\n  if \"diff k M1 M2 f\" \"diff k M2 M3 g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k M1 M3 (g \\<circ> f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. diff k M1 M3 (g \\<circ> f)", "interpret f: diff k M1 M2 f"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k M1 M2 f", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. diff k M1 M3 (g \\<circ> f)", "interpret g: diff k M2 M3 g"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k M2 M3 g", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. diff k M1 M3 (g \\<circ> f)", "interpret fg: c_manifolds k M1 M3"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_manifolds k M1 M3", "by unfold_locales"], ["proof (state)\ngoal (1 subgoal):\n 1. diff k M1 M3 (g \\<circ> f)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k M1 M3 (g \\<circ> f)", "unfolding fg.diff_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>f.src.carrier.\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "assume \"x \\<in> f.src.carrier\""], ["proof (state)\nthis:\n  x \\<in> f.src.carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "then"], ["proof (chain)\npicking this:\n  x \\<in> f.src.carrier", "obtain c1 c2 where c1: \"c1 \\<in> f.src.atlas\"\n      and c2: \"c2 \\<in> f.dest.atlas\"\n      and fc1: \"f ` domain c1 \\<subseteq> domain c2\"\n      and x: \"x \\<in> domain c1\"\n      and df: \"k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\""], ["proof (prove)\nusing this:\n  x \\<in> f.src.carrier\n\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>c1 \\<in> f.src.atlas; c2 \\<in> f.dest.atlas;\n         f ` domain c1 \\<subseteq> domain c2; x \\<in> domain c1;\n         k-smooth_on (codomain c1)\n          (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using f.diffE"], ["proof (prove)\nusing this:\n  x \\<in> f.src.carrier\n  \\<lbrakk>?x \\<in> f.src.carrier;\n   \\<And>c1 c2.\n      \\<lbrakk>c1 \\<in> f.src.atlas; c2 \\<in> f.dest.atlas;\n       ?x \\<in> domain c1; f ` domain c1 \\<subseteq> domain c2;\n       k-smooth_on (codomain c1)\n        (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>c1 \\<in> f.src.atlas; c2 \\<in> f.dest.atlas;\n         f ` domain c1 \\<subseteq> domain c2; x \\<in> domain c1;\n         k-smooth_on (codomain c1)\n          (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  c1 \\<in> f.src.atlas\n  c2 \\<in> f.dest.atlas\n  f ` domain c1 \\<subseteq> domain c2\n  x \\<in> domain c1\n  k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "have \"f x \\<in> f.dest.carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<in> f.dest.carrier", "using f.defined \\<open>x \\<in> f.src.carrier\\<close>"], ["proof (prove)\nusing this:\n  f ` f.src.carrier \\<subseteq> f.dest.carrier\n  x \\<in> f.src.carrier\n\ngoal (1 subgoal):\n 1. f x \\<in> f.dest.carrier", "by auto"], ["proof (state)\nthis:\n  f x \\<in> f.dest.carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "then"], ["proof (chain)\npicking this:\n  f x \\<in> f.dest.carrier", "obtain c2' c3 where c2': \"c2' \\<in> f.dest.atlas\"\n      and c3: \"c3 \\<in> g.dest.atlas\"\n      and gc2': \"g ` domain c2' \\<subseteq> domain c3\"\n      and fx: \"f x \\<in> domain c2'\"\n      and dg: \"k-smooth_on (codomain c2') (apply_chart c3 \\<circ> g \\<circ> inv_chart c2')\""], ["proof (prove)\nusing this:\n  f x \\<in> f.dest.carrier\n\ngoal (1 subgoal):\n 1. (\\<And>c2' c3.\n        \\<lbrakk>c2' \\<in> f.dest.atlas; c3 \\<in> g.dest.atlas;\n         g ` domain c2' \\<subseteq> domain c3; f x \\<in> domain c2';\n         k-smooth_on (codomain c2')\n          (apply_chart c3 \\<circ> g \\<circ> inv_chart c2')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using g.diffE"], ["proof (prove)\nusing this:\n  f x \\<in> f.dest.carrier\n  \\<lbrakk>?x \\<in> f.dest.carrier;\n   \\<And>c1 c2.\n      \\<lbrakk>c1 \\<in> f.dest.atlas; c2 \\<in> g.dest.atlas;\n       ?x \\<in> domain c1; g ` domain c1 \\<subseteq> domain c2;\n       k-smooth_on (codomain c1)\n        (apply_chart c2 \\<circ> g \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c2' c3.\n        \\<lbrakk>c2' \\<in> f.dest.atlas; c3 \\<in> g.dest.atlas;\n         g ` domain c2' \\<subseteq> domain c3; f x \\<in> domain c2';\n         k-smooth_on (codomain c2')\n          (apply_chart c3 \\<circ> g \\<circ> inv_chart c2')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  c2' \\<in> f.dest.atlas\n  c3 \\<in> g.dest.atlas\n  g ` domain c2' \\<subseteq> domain c3\n  f x \\<in> domain c2'\n  k-smooth_on (codomain c2')\n   (apply_chart c3 \\<circ> g \\<circ> inv_chart c2')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "define D where \"D = (g \\<circ> f) -` domain c3 \\<inter> domain c1\""], ["proof (state)\nthis:\n  D = (g \\<circ> f) -` domain c3 \\<inter> domain c1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "have \"open D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open D", "using f.defined c1"], ["proof (prove)\nusing this:\n  f ` f.src.carrier \\<subseteq> f.dest.carrier\n  c1 \\<in> f.src.atlas\n\ngoal (1 subgoal):\n 1. open D", "by (auto intro!: continuous_intros open_continuous_vimage simp: D_def)"], ["proof (state)\nthis:\n  open D\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "have \"x \\<in> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> D", "using fc1 fx gc2'"], ["proof (prove)\nusing this:\n  f ` domain c1 \\<subseteq> domain c2\n  f x \\<in> domain c2'\n  g ` domain c2' \\<subseteq> domain c3\n\ngoal (1 subgoal):\n 1. x \\<in> D", "by (auto simp: D_def \\<open>x \\<in> domain c1\\<close>)"], ["proof (state)\nthis:\n  x \\<in> D\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "define d1 where \"d1 = restrict_chart D c1\""], ["proof (state)\nthis:\n  d1 = restrict_chart D c1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "have \"d1 \\<in> f.src.atlas\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d1 \\<in> f.src.atlas", "by (auto simp: d1_def intro!: f.src.restrict_chart_in_atlas c1)"], ["proof (state)\nthis:\n  d1 \\<in> f.src.atlas\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "moreover"], ["proof (state)\nthis:\n  d1 \\<in> f.src.atlas\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "have \"c3 \\<in> g.dest.atlas\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c3 \\<in> g.dest.atlas", "by fact"], ["proof (state)\nthis:\n  c3 \\<in> g.dest.atlas\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "moreover"], ["proof (state)\nthis:\n  c3 \\<in> g.dest.atlas\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "have \"x \\<in> domain d1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> domain d1", "by (auto simp: d1_def \\<open>open D\\<close> \\<open>x \\<in> D\\<close> x)"], ["proof (state)\nthis:\n  x \\<in> domain d1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "moreover"], ["proof (state)\nthis:\n  x \\<in> domain d1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "have sub_c3: \"(g \\<circ> f) ` domain d1 \\<subseteq> domain c3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g \\<circ> f) ` domain d1 \\<subseteq> domain c3", "using \\<open>open D\\<close>"], ["proof (prove)\nusing this:\n  open D\n\ngoal (1 subgoal):\n 1. (g \\<circ> f) ` domain d1 \\<subseteq> domain c3", "by (auto simp: d1_def D_def)"], ["proof (state)\nthis:\n  (g \\<circ> f) ` domain d1 \\<subseteq> domain c3\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "moreover"], ["proof (state)\nthis:\n  (g \\<circ> f) ` domain d1 \\<subseteq> domain c3\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "have \"k-smooth_on (codomain d1) (c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (codomain d1)\n     (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "proof (rule smooth_on_open_subsetsI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "assume y: \"y \\<in> codomain d1\""], ["proof (state)\nthis:\n  y \\<in> codomain d1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "then"], ["proof (chain)\npicking this:\n  y \\<in> codomain d1", "obtain iy where y_def: \"y = d1 iy\" and iy: \"iy \\<in> domain d1\""], ["proof (prove)\nusing this:\n  y \\<in> codomain d1\n\ngoal (1 subgoal):\n 1. (\\<And>iy.\n        \\<lbrakk>y = apply_chart d1 iy; iy \\<in> domain d1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  y = apply_chart d1 iy\n  iy \\<in> domain d1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "note iy"], ["proof (state)\nthis:\n  iy \\<in> domain d1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "also"], ["proof (state)\nthis:\n  iy \\<in> domain d1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "note f.src.domain_atlas_subset_carrier[OF \\<open>d1 \\<in> f.src.atlas\\<close>]"], ["proof (state)\nthis:\n  domain d1 \\<subseteq> f.src.carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "finally"], ["proof (chain)\npicking this:\n  iy \\<in> f.src.carrier", "have iS: \"iy \\<in> f.src.carrier\""], ["proof (prove)\nusing this:\n  iy \\<in> f.src.carrier\n\ngoal (1 subgoal):\n 1. iy \\<in> f.src.carrier", "."], ["proof (state)\nthis:\n  iy \\<in> f.src.carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "then"], ["proof (chain)\npicking this:\n  iy \\<in> f.src.carrier", "have \"f iy \\<in> f.dest.carrier\""], ["proof (prove)\nusing this:\n  iy \\<in> f.src.carrier\n\ngoal (1 subgoal):\n 1. f iy \\<in> f.dest.carrier", "using f.defined"], ["proof (prove)\nusing this:\n  iy \\<in> f.src.carrier\n  f ` f.src.carrier \\<subseteq> f.dest.carrier\n\ngoal (1 subgoal):\n 1. f iy \\<in> f.dest.carrier", "by (auto simp: d1_def)"], ["proof (state)\nthis:\n  f iy \\<in> f.dest.carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "with f.dest.atlasE"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x \\<in> f.dest.carrier;\n   \\<And>c.\n      \\<lbrakk>c \\<in> f.dest.atlas; ?x \\<in> domain c\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  f iy \\<in> f.dest.carrier", "obtain d2 where d2: \"d2 \\<in> f.dest.atlas\"\n        and fy: \"f iy \\<in> domain d2\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> f.dest.carrier;\n   \\<And>c.\n      \\<lbrakk>c \\<in> f.dest.atlas; ?x \\<in> domain c\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  f iy \\<in> f.dest.carrier\n\ngoal (1 subgoal):\n 1. (\\<And>d2.\n        \\<lbrakk>d2 \\<in> f.dest.atlas; f iy \\<in> domain d2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  d2 \\<in> f.dest.atlas\n  f iy \\<in> domain d2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "from f.diff_between_chartsE[OF \\<open>d1 \\<in> f.src.atlas\\<close> \\<open>d2 \\<in> f.dest.atlas\\<close> iy iS fy]"], ["proof (chain)\npicking this:\n  (\\<And>X.\n      \\<lbrakk>k-smooth_on X\n                (apply_chart d2 \\<circ> f \\<circ> inv_chart d1);\n       apply_chart d1 iy \\<in> X; open X;\n       X =\n       codomain d1 \\<inter>\n       inv_chart d1 -` (f.src.carrier \\<inter> f -` domain d2)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain T where 1: \"k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\"\n        and T: \"d1 iy \\<in> T\" \"open T\"\n        and T_def: \"T = codomain d1 \\<inter> inv_chart d1 -` (f.src.carrier \\<inter> f -` domain d2)\""], ["proof (prove)\nusing this:\n  (\\<And>X.\n      \\<lbrakk>k-smooth_on X\n                (apply_chart d2 \\<circ> f \\<circ> inv_chart d1);\n       apply_chart d1 iy \\<in> X; open X;\n       X =\n       codomain d1 \\<inter>\n       inv_chart d1 -` (f.src.carrier \\<inter> f -` domain d2)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>T.\n        \\<lbrakk>k-smooth_on T\n                  (apply_chart d2 \\<circ> f \\<circ> inv_chart d1);\n         apply_chart d1 iy \\<in> T; open T;\n         T =\n         codomain d1 \\<inter>\n         inv_chart d1 -` (f.src.carrier \\<inter> f -` domain d2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\n  apply_chart d1 iy \\<in> T\n  open T\n  T =\n  codomain d1 \\<inter>\n  inv_chart d1 -` (f.src.carrier \\<inter> f -` domain d2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "have gf: \"g (f (iy)) \\<in> domain c3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (f iy) \\<in> domain c3", "using sub_c3 iy"], ["proof (prove)\nusing this:\n  (g \\<circ> f) ` domain d1 \\<subseteq> domain c3\n  iy \\<in> domain d1\n\ngoal (1 subgoal):\n 1. g (f iy) \\<in> domain c3", "by auto"], ["proof (state)\nthis:\n  g (f iy) \\<in> domain c3\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "from iS f.defined"], ["proof (chain)\npicking this:\n  iy \\<in> f.src.carrier\n  f ` f.src.carrier \\<subseteq> f.dest.carrier", "have \"f (iy) \\<in> f.dest.carrier\""], ["proof (prove)\nusing this:\n  iy \\<in> f.src.carrier\n  f ` f.src.carrier \\<subseteq> f.dest.carrier\n\ngoal (1 subgoal):\n 1. f iy \\<in> f.dest.carrier", "by auto"], ["proof (state)\nthis:\n  f iy \\<in> f.dest.carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "from g.diff_between_chartsE[OF \\<open>d2 \\<in> f.dest.atlas\\<close> \\<open>c3 \\<in> g.dest.atlas\\<close> fy this gf]"], ["proof (chain)\npicking this:\n  (\\<And>X.\n      \\<lbrakk>k-smooth_on X\n                (apply_chart c3 \\<circ> g \\<circ> inv_chart d2);\n       apply_chart d2 (f iy) \\<in> X; open X;\n       X =\n       codomain d2 \\<inter>\n       inv_chart d2 -` (f.dest.carrier \\<inter> g -` domain c3)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain X where 2: \"k-smooth_on X (apply_chart c3 \\<circ> g \\<circ> inv_chart d2)\"\n        and X: \"apply_chart d2 (f iy) \\<in> X\" \"open X\"\n        and X_def: \"X = codomain d2 \\<inter> inv_chart d2 -` (f.dest.carrier \\<inter> g -` domain c3)\""], ["proof (prove)\nusing this:\n  (\\<And>X.\n      \\<lbrakk>k-smooth_on X\n                (apply_chart c3 \\<circ> g \\<circ> inv_chart d2);\n       apply_chart d2 (f iy) \\<in> X; open X;\n       X =\n       codomain d2 \\<inter>\n       inv_chart d2 -` (f.dest.carrier \\<inter> g -` domain c3)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>k-smooth_on X\n                  (apply_chart c3 \\<circ> g \\<circ> inv_chart d2);\n         apply_chart d2 (f iy) \\<in> X; open X;\n         X =\n         codomain d2 \\<inter>\n         inv_chart d2 -` (f.dest.carrier \\<inter> g -` domain c3)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k-smooth_on X (apply_chart c3 \\<circ> g \\<circ> inv_chart d2)\n  apply_chart d2 (f iy) \\<in> X\n  open X\n  X =\n  codomain d2 \\<inter>\n  inv_chart d2 -` (f.dest.carrier \\<inter> g -` domain c3)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "have \"y \\<in> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> T", "using T"], ["proof (prove)\nusing this:\n  apply_chart d1 iy \\<in> T\n  open T\n\ngoal (1 subgoal):\n 1. y \\<in> T", "by (simp add: y_def)"], ["proof (state)\nthis:\n  y \\<in> T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "moreover"], ["proof (state)\nthis:\n  y \\<in> T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "note \\<open>open T\\<close>"], ["proof (state)\nthis:\n  open T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "moreover"], ["proof (state)\nthis:\n  open T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "have \"k-smooth_on T (apply_chart c3 \\<circ> g \\<circ> inv_chart d2 \\<circ> (apply_chart d2 \\<circ> f \\<circ> inv_chart d1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on T\n     (apply_chart c3 \\<circ> g \\<circ> inv_chart d2 \\<circ>\n      (apply_chart d2 \\<circ> f \\<circ> inv_chart d1))", "using 2 1 \\<open>open T\\<close> \\<open>open X\\<close>"], ["proof (prove)\nusing this:\n  k-smooth_on X (apply_chart c3 \\<circ> g \\<circ> inv_chart d2)\n  k-smooth_on T (apply_chart d2 \\<circ> f \\<circ> inv_chart d1)\n  open T\n  open X\n\ngoal (1 subgoal):\n 1. k-smooth_on T\n     (apply_chart c3 \\<circ> g \\<circ> inv_chart d2 \\<circ>\n      (apply_chart d2 \\<circ> f \\<circ> inv_chart d1))", "by (rule smooth_on_compose) (use sub_c3 f.defined in \\<open>force simp: T_def X_def\\<close>)"], ["proof (state)\nthis:\n  k-smooth_on T\n   (apply_chart c3 \\<circ> g \\<circ> inv_chart d2 \\<circ>\n    (apply_chart d2 \\<circ> f \\<circ> inv_chart d1))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "then"], ["proof (chain)\npicking this:\n  k-smooth_on T\n   (apply_chart c3 \\<circ> g \\<circ> inv_chart d2 \\<circ>\n    (apply_chart d2 \\<circ> f \\<circ> inv_chart d1))", "have \"k-smooth_on T (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)\""], ["proof (prove)\nusing this:\n  k-smooth_on T\n   (apply_chart c3 \\<circ> g \\<circ> inv_chart d2 \\<circ>\n    (apply_chart d2 \\<circ> f \\<circ> inv_chart d1))\n\ngoal (1 subgoal):\n 1. k-smooth_on T\n     (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "using \\<open>open T\\<close>"], ["proof (prove)\nusing this:\n  k-smooth_on T\n   (apply_chart c3 \\<circ> g \\<circ> inv_chart d2 \\<circ>\n    (apply_chart d2 \\<circ> f \\<circ> inv_chart d1))\n  open T\n\ngoal (1 subgoal):\n 1. k-smooth_on T\n     (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "by (rule smooth_on_cong) (auto simp: T_def)"], ["proof (state)\nthis:\n  k-smooth_on T (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> codomain d1 \\<Longrightarrow>\n       \\<exists>T.\n          x \\<in> T \\<and>\n          open T \\<and>\n          k-smooth_on T\n           (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "ultimately"], ["proof (chain)\npicking this:\n  y \\<in> T\n  open T\n  k-smooth_on T (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "show \"\\<exists>T. y \\<in> T \\<and> open T \\<and> k-smooth_on T (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)\""], ["proof (prove)\nusing this:\n  y \\<in> T\n  open T\n  k-smooth_on T (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)\n\ngoal (1 subgoal):\n 1. \\<exists>T.\n       y \\<in> T \\<and>\n       open T \\<and>\n       k-smooth_on T\n        (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "by metis"], ["proof (state)\nthis:\n  \\<exists>T.\n     y \\<in> T \\<and>\n     open T \\<and>\n     k-smooth_on T\n      (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k-smooth_on (codomain d1)\n   (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f.src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>f.src.atlas.\n          \\<exists>c2\\<in>g.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "ultimately"], ["proof (chain)\npicking this:\n  d1 \\<in> f.src.atlas\n  c3 \\<in> g.dest.atlas\n  x \\<in> domain d1\n  (g \\<circ> f) ` domain d1 \\<subseteq> domain c3\n  k-smooth_on (codomain d1)\n   (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)", "show \"\\<exists>c1\\<in>f.src.atlas.\n            \\<exists>c2\\<in>g.dest.atlas.\n               x \\<in> domain c1 \\<and>\n               (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and> k-smooth_on (codomain c1) (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)\""], ["proof (prove)\nusing this:\n  d1 \\<in> f.src.atlas\n  c3 \\<in> g.dest.atlas\n  x \\<in> domain d1\n  (g \\<circ> f) ` domain d1 \\<subseteq> domain c3\n  k-smooth_on (codomain d1)\n   (apply_chart c3 \\<circ> (g \\<circ> f) \\<circ> inv_chart d1)\n\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>f.src.atlas.\n       \\<exists>c2\\<in>g.dest.atlas.\n          x \\<in> domain c1 \\<and>\n          (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n          k-smooth_on (codomain c1)\n           (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)", "by blast"], ["proof (state)\nthis:\n  \\<exists>c1\\<in>f.src.atlas.\n     \\<exists>c2\\<in>g.dest.atlas.\n        x \\<in> domain c1 \\<and>\n        (g \\<circ> f) ` domain c1 \\<subseteq> domain c2 \\<and>\n        k-smooth_on (codomain c1)\n         (apply_chart c2 \\<circ> (g \\<circ> f) \\<circ> inv_chart c1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  diff k M1 M3 (g \\<circ> f)\n\ngoal:\nNo subgoals!", "qed"], ["", "context diff begin"], ["", "lemma diff_submanifold: \"diff k (src.charts_submanifold S) charts2 f\"\n  if \"open S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k (src.charts_submanifold S) charts2 f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. diff k (src.charts_submanifold S) charts2 f", "interpret submanifold charts1 k S"], ["proof (prove)\ngoal (1 subgoal):\n 1. submanifold charts1 k S", "by unfold_locales (auto intro!: that)"], ["proof (state)\ngoal (1 subgoal):\n 1. diff k (src.charts_submanifold S) charts2 f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k (src.charts_submanifold S) charts2 f", "unfolding that src.charts_submanifold_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k (src.charts_submanifold S) charts2 f", "proof unfold_locales"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sub.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>sub.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sub.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>sub.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "assume \"x \\<in> sub.carrier\""], ["proof (state)\nthis:\n  x \\<in> sub.carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sub.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>sub.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "then"], ["proof (chain)\npicking this:\n  x \\<in> sub.carrier", "have \"x \\<in> src.carrier\" \"x \\<in> S\""], ["proof (prove)\nusing this:\n  x \\<in> sub.carrier\n\ngoal (1 subgoal):\n 1. x \\<in> src.carrier &&& x \\<in> S", "using that"], ["proof (prove)\nusing this:\n  x \\<in> sub.carrier\n  open S\n\ngoal (1 subgoal):\n 1. x \\<in> src.carrier &&& x \\<in> S", "by auto"], ["proof (state)\nthis:\n  x \\<in> src.carrier\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sub.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>sub.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "from diffE[OF \\<open>x \\<in> src.carrier\\<close>]"], ["proof (chain)\npicking this:\n  (\\<And>c1 c2.\n      \\<lbrakk>c1 \\<in> src.atlas; c2 \\<in> dest.atlas; x \\<in> domain c1;\n       f ` domain c1 \\<subseteq> domain c2;\n       k-smooth_on (codomain c1)\n        (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain c1 c2 where c1c2:\n      \"c1 \\<in> src.atlas\" \"c2 \\<in> dest.atlas\" \"x \\<in> domain c1\"\n      \"f ` domain c1 \\<subseteq> domain c2\" \"k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\""], ["proof (prove)\nusing this:\n  (\\<And>c1 c2.\n      \\<lbrakk>c1 \\<in> src.atlas; c2 \\<in> dest.atlas; x \\<in> domain c1;\n       f ` domain c1 \\<subseteq> domain c2;\n       k-smooth_on (codomain c1)\n        (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>c1 \\<in> src.atlas; c2 \\<in> dest.atlas; x \\<in> domain c1;\n         f ` domain c1 \\<subseteq> domain c2;\n         k-smooth_on (codomain c1)\n          (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c1 \\<in> src.atlas\n  c2 \\<in> dest.atlas\n  x \\<in> domain c1\n  f ` domain c1 \\<subseteq> domain c2\n  k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sub.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>sub.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "have rc1: \"restrict_chart S c1 \\<in> sub.atlas\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict_chart S c1 \\<in> sub.atlas", "using c1c2(1)"], ["proof (prove)\nusing this:\n  c1 \\<in> src.atlas\n\ngoal (1 subgoal):\n 1. restrict_chart S c1 \\<in> sub.atlas", "by (rule submanifold_atlasI)"], ["proof (state)\nthis:\n  restrict_chart S c1 \\<in> sub.atlas\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sub.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>sub.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "show \"\\<exists>c1\\<in>sub.atlas. \\<exists>c2\\<in>dest.atlas. x \\<in> domain c1 \\<and> f ` domain c1 \\<subseteq> domain c2 \\<and>\n      k-smooth_on (codomain c1) (c2 \\<circ> f \\<circ> inv_chart c1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>sub.atlas.\n       \\<exists>c2\\<in>dest.atlas.\n          x \\<in> domain c1 \\<and>\n          f ` domain c1 \\<subseteq> domain c2 \\<and>\n          k-smooth_on (codomain c1)\n           (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "using rc1"], ["proof (prove)\nusing this:\n  restrict_chart S c1 \\<in> sub.atlas\n\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>sub.atlas.\n       \\<exists>c2\\<in>dest.atlas.\n          x \\<in> domain c1 \\<and>\n          f ` domain c1 \\<subseteq> domain c2 \\<and>\n          k-smooth_on (codomain c1)\n           (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "apply (rule rev_bexI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c2\\<in>dest.atlas.\n       x \\<in> domain (restrict_chart S c1) \\<and>\n       f ` domain (restrict_chart S c1) \\<subseteq> domain c2 \\<and>\n       k-smooth_on (codomain (restrict_chart S c1))\n        (apply_chart c2 \\<circ> f \\<circ> inv_chart (restrict_chart S c1))", "using c1c2(2)"], ["proof (prove)\nusing this:\n  c2 \\<in> dest.atlas\n\ngoal (1 subgoal):\n 1. \\<exists>c2\\<in>dest.atlas.\n       x \\<in> domain (restrict_chart S c1) \\<and>\n       f ` domain (restrict_chart S c1) \\<subseteq> domain c2 \\<and>\n       k-smooth_on (codomain (restrict_chart S c1))\n        (apply_chart c2 \\<circ> f \\<circ> inv_chart (restrict_chart S c1))", "apply (rule rev_bexI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> domain (restrict_chart S c1) \\<and>\n    f ` domain (restrict_chart S c1) \\<subseteq> domain c2 \\<and>\n    k-smooth_on (codomain (restrict_chart S c1))\n     (apply_chart c2 \\<circ> f \\<circ> inv_chart (restrict_chart S c1))", "using c1c2 \\<open>x \\<in> S\\<close> \\<open>open S\\<close>"], ["proof (prove)\nusing this:\n  c1 \\<in> src.atlas\n  c2 \\<in> dest.atlas\n  x \\<in> domain c1\n  f ` domain c1 \\<subseteq> domain c2\n  k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n  x \\<in> S\n  open S\n\ngoal (1 subgoal):\n 1. x \\<in> domain (restrict_chart S c1) \\<and>\n    f ` domain (restrict_chart S c1) \\<subseteq> domain c2 \\<and>\n    k-smooth_on (codomain (restrict_chart S c1))\n     (apply_chart c2 \\<circ> f \\<circ> inv_chart (restrict_chart S c1))", "by (auto simp: smooth_on_subset)"], ["proof (state)\nthis:\n  \\<exists>c1\\<in>sub.atlas.\n     \\<exists>c2\\<in>dest.atlas.\n        x \\<in> domain c1 \\<and>\n        f ` domain c1 \\<subseteq> domain c2 \\<and>\n        k-smooth_on (codomain c1)\n         (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  diff k (src.charts_submanifold S) charts2 f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diff_submanifold2: \"diff k charts1 (dest.charts_submanifold S) f\"\n  if \"open S\" \"f ` src.carrier \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k charts1 (dest.charts_submanifold S) f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. diff k charts1 (dest.charts_submanifold S) f", "interpret submanifold charts2 k S"], ["proof (prove)\ngoal (1 subgoal):\n 1. submanifold charts2 k S", "by unfold_locales (auto intro!: that)"], ["proof (state)\ngoal (1 subgoal):\n 1. diff k charts1 (dest.charts_submanifold S) f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k charts1 (dest.charts_submanifold S) f", "unfolding that src.charts_submanifold_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k charts1 (dest.charts_submanifold S) f", "proof unfold_locales"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>sub.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>sub.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "assume \"x \\<in> src.carrier\""], ["proof (state)\nthis:\n  x \\<in> src.carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>sub.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "from diffE[OF this]"], ["proof (chain)\npicking this:\n  (\\<And>c1 c2.\n      \\<lbrakk>c1 \\<in> src.atlas; c2 \\<in> dest.atlas; x \\<in> domain c1;\n       f ` domain c1 \\<subseteq> domain c2;\n       k-smooth_on (codomain c1)\n        (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain c1 c2 where c1c2:\n      \"c1 \\<in> src.atlas\" \"c2 \\<in> dest.atlas\" \"x \\<in> domain c1\"\n      \"f ` domain c1 \\<subseteq> domain c2\" \"k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\""], ["proof (prove)\nusing this:\n  (\\<And>c1 c2.\n      \\<lbrakk>c1 \\<in> src.atlas; c2 \\<in> dest.atlas; x \\<in> domain c1;\n       f ` domain c1 \\<subseteq> domain c2;\n       k-smooth_on (codomain c1)\n        (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>c1 \\<in> src.atlas; c2 \\<in> dest.atlas; x \\<in> domain c1;\n         f ` domain c1 \\<subseteq> domain c2;\n         k-smooth_on (codomain c1)\n          (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c1 \\<in> src.atlas\n  c2 \\<in> dest.atlas\n  x \\<in> domain c1\n  f ` domain c1 \\<subseteq> domain c2\n  k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>sub.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "have r: \"restrict_chart S c2 \\<in> sub.atlas\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict_chart S c2 \\<in> sub.atlas", "using c1c2(2)"], ["proof (prove)\nusing this:\n  c2 \\<in> dest.atlas\n\ngoal (1 subgoal):\n 1. restrict_chart S c2 \\<in> sub.atlas", "by (rule submanifold_atlasI)"], ["proof (state)\nthis:\n  restrict_chart S c2 \\<in> sub.atlas\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>sub.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "show \"\\<exists>c1\\<in>src.atlas. \\<exists>c2\\<in>sub.atlas. x \\<in> domain c1 \\<and> f ` domain c1 \\<subseteq> domain c2 \\<and>\n      k-smooth_on (codomain c1) (c2 \\<circ> f \\<circ> inv_chart c1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>src.atlas.\n       \\<exists>c2\\<in>sub.atlas.\n          x \\<in> domain c1 \\<and>\n          f ` domain c1 \\<subseteq> domain c2 \\<and>\n          k-smooth_on (codomain c1)\n           (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "using c1c2(1)"], ["proof (prove)\nusing this:\n  c1 \\<in> src.atlas\n\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>src.atlas.\n       \\<exists>c2\\<in>sub.atlas.\n          x \\<in> domain c1 \\<and>\n          f ` domain c1 \\<subseteq> domain c2 \\<and>\n          k-smooth_on (codomain c1)\n           (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "apply (rule rev_bexI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c2\\<in>sub.atlas.\n       x \\<in> domain c1 \\<and>\n       f ` domain c1 \\<subseteq> domain c2 \\<and>\n       k-smooth_on (codomain c1)\n        (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "using r"], ["proof (prove)\nusing this:\n  restrict_chart S c2 \\<in> sub.atlas\n\ngoal (1 subgoal):\n 1. \\<exists>c2\\<in>sub.atlas.\n       x \\<in> domain c1 \\<and>\n       f ` domain c1 \\<subseteq> domain c2 \\<and>\n       k-smooth_on (codomain c1)\n        (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "apply (rule rev_bexI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> domain c1 \\<and>\n    f ` domain c1 \\<subseteq> domain (restrict_chart S c2) \\<and>\n    k-smooth_on (codomain c1)\n     (apply_chart (restrict_chart S c2) \\<circ> f \\<circ> inv_chart c1)", "using c1c2 \\<open>open S\\<close> that(2)"], ["proof (prove)\nusing this:\n  c1 \\<in> src.atlas\n  c2 \\<in> dest.atlas\n  x \\<in> domain c1\n  f ` domain c1 \\<subseteq> domain c2\n  k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n  open S\n  f ` src.carrier \\<subseteq> S\n\ngoal (1 subgoal):\n 1. x \\<in> domain c1 \\<and>\n    f ` domain c1 \\<subseteq> domain (restrict_chart S c2) \\<and>\n    k-smooth_on (codomain c1)\n     (apply_chart (restrict_chart S c2) \\<circ> f \\<circ> inv_chart c1)", "by (auto simp: smooth_on_subset)"], ["proof (state)\nthis:\n  \\<exists>c1\\<in>src.atlas.\n     \\<exists>c2\\<in>sub.atlas.\n        x \\<in> domain c1 \\<and>\n        f ` domain c1 \\<subseteq> domain c2 \\<and>\n        k-smooth_on (codomain c1)\n         (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  diff k charts1 (dest.charts_submanifold S) f\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context c_manifolds begin"], ["", "lemma diff_localI: \"diff k charts1 charts2 f\"\n  if \"\\<And>x. x \\<in> src.carrier \\<Longrightarrow> diff k (src.charts_submanifold (U x)) charts2 f\"\n    \"\\<And>x. x \\<in> src.carrier \\<Longrightarrow> open (U x)\"\n    \"\\<And>x. x \\<in> src.carrier \\<Longrightarrow> x \\<in> (U x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k charts1 charts2 f", "proof unfold_locales"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "assume x: \"x \\<in> src.carrier\""], ["proof (state)\nthis:\n  x \\<in> src.carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "have open_U[simp]: \"open (U x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open (U x)", "by (rule that) fact"], ["proof (state)\nthis:\n  open (U x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "have in_U[simp]: \"x \\<in> U x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> U x", "by (rule that) fact"], ["proof (state)\nthis:\n  x \\<in> U x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "interpret submanifold charts1 k \"U x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submanifold charts1 k (U x)", "using that x"], ["proof (prove)\nusing this:\n  ?x \\<in> src.carrier \\<Longrightarrow>\n  diff k (src.charts_submanifold (U ?x)) charts2 f\n  ?x \\<in> src.carrier \\<Longrightarrow> open (U ?x)\n  ?x \\<in> src.carrier \\<Longrightarrow> ?x \\<in> U ?x\n  x \\<in> src.carrier\n\ngoal (1 subgoal):\n 1. submanifold charts1 k (U x)", "by unfold_locales auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "from x"], ["proof (chain)\npicking this:\n  x \\<in> src.carrier", "interpret l: diff k \"src.charts_submanifold (U x)\" charts2 f"], ["proof (prove)\nusing this:\n  x \\<in> src.carrier\n\ngoal (1 subgoal):\n 1. diff k (src.charts_submanifold (U x)) charts2 f", "by (rule that)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "have \"x \\<in> sub.carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> sub.carrier", "using x"], ["proof (prove)\nusing this:\n  x \\<in> src.carrier\n\ngoal (1 subgoal):\n 1. x \\<in> sub.carrier", "by auto"], ["proof (state)\nthis:\n  x \\<in> sub.carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "from l.diffE[OF this]"], ["proof (chain)\npicking this:\n  (\\<And>c1 c2.\n      \\<lbrakk>c1 \\<in> sub.atlas; c2 \\<in> dest.atlas; x \\<in> domain c1;\n       f ` domain c1 \\<subseteq> domain c2;\n       k-smooth_on (codomain c1)\n        (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain c1 c2 where c1c2: \"c1 \\<in> sub.atlas\"\n    \"c2 \\<in> dest.atlas\" \"x \\<in> domain c1\" \"f ` domain c1 \\<subseteq> domain c2\"\n    \"k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\""], ["proof (prove)\nusing this:\n  (\\<And>c1 c2.\n      \\<lbrakk>c1 \\<in> sub.atlas; c2 \\<in> dest.atlas; x \\<in> domain c1;\n       f ` domain c1 \\<subseteq> domain c2;\n       k-smooth_on (codomain c1)\n        (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>c1 \\<in> sub.atlas; c2 \\<in> dest.atlas; x \\<in> domain c1;\n         f ` domain c1 \\<subseteq> domain c2;\n         k-smooth_on (codomain c1)\n          (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c1 \\<in> sub.atlas\n  c2 \\<in> dest.atlas\n  x \\<in> domain c1\n  f ` domain c1 \\<subseteq> domain c2\n  k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "have \"c1 \\<in> src.atlas\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c1 \\<in> src.atlas", "by (rule submanifold_atlasE[OF c1c2(1)])"], ["proof (state)\nthis:\n  c1 \\<in> src.atlas\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "show \"\\<exists>c1\\<in>src.atlas. \\<exists>c2\\<in>dest.atlas. x \\<in> domain c1 \\<and> f ` domain c1 \\<subseteq> domain c2 \\<and>\n    k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>src.atlas.\n       \\<exists>c2\\<in>dest.atlas.\n          x \\<in> domain c1 \\<and>\n          f ` domain c1 \\<subseteq> domain c2 \\<and>\n          k-smooth_on (codomain c1)\n           (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "by (intro bexI[where x=c1] bexI[where x=c2] conjI \\<open>c1 \\<in> src.atlas\\<close> \\<open>c2 \\<in> dest.atlas\\<close> c1c2)"], ["proof (state)\nthis:\n  \\<exists>c1\\<in>src.atlas.\n     \\<exists>c2\\<in>dest.atlas.\n        x \\<in> domain c1 \\<and>\n        f ` domain c1 \\<subseteq> domain c2 \\<and>\n        k-smooth_on (codomain c1)\n         (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diff_open_coverI: \"diff k charts1 charts2 f\"\n  if diff: \"\\<And>u. u \\<in> U \\<Longrightarrow> diff k (src.charts_submanifold u) charts2 f\"\n    and op: \"\\<And>u. u \\<in> U \\<Longrightarrow> open u\"\n    and cover: \"src.carrier \\<subseteq> \\<Union>U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k charts1 charts2 f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. diff k charts1 charts2 f", "obtain V where V: \"\\<forall>x\\<in>src.carrier. V x \\<in> U \\<and> x \\<in> V x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>V.\n        \\<forall>x\\<in>src.carrier.\n           V x \\<in> U \\<and> x \\<in> V x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply (atomize_elim, rule bchoice)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>src.carrier. \\<exists>y. y \\<in> U \\<and> x \\<in> y", "using cover"], ["proof (prove)\nusing this:\n  src.carrier \\<subseteq> \\<Union> U\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>src.carrier. \\<exists>y. y \\<in> U \\<and> x \\<in> y", "by blast"], ["proof (state)\nthis:\n  \\<forall>x\\<in>src.carrier. V x \\<in> U \\<and> x \\<in> V x\n\ngoal (1 subgoal):\n 1. diff k charts1 charts2 f", "have \"diff k (src.charts_submanifold (V x)) charts2 f\"\n    \"open (V x)\"\n    \"x \\<in> V x\"\n    if \"x \\<in> src.carrier\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k (src.charts_submanifold (V x)) charts2 f &&&\n    open (V x) &&& x \\<in> V x", "using that diff op V"], ["proof (prove)\nusing this:\n  x \\<in> src.carrier\n  ?u \\<in> U \\<Longrightarrow> diff k (src.charts_submanifold ?u) charts2 f\n  ?u \\<in> U \\<Longrightarrow> open ?u\n  \\<forall>x\\<in>src.carrier. V x \\<in> U \\<and> x \\<in> V x\n\ngoal (1 subgoal):\n 1. diff k (src.charts_submanifold (V x)) charts2 f &&&\n    open (V x) &&& x \\<in> V x", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> src.carrier \\<Longrightarrow>\n  diff k (src.charts_submanifold (V ?x)) charts2 f\n  ?x \\<in> src.carrier \\<Longrightarrow> open (V ?x)\n  ?x \\<in> src.carrier \\<Longrightarrow> ?x \\<in> V ?x\n\ngoal (1 subgoal):\n 1. diff k charts1 charts2 f", "then"], ["proof (chain)\npicking this:\n  ?x \\<in> src.carrier \\<Longrightarrow>\n  diff k (src.charts_submanifold (V ?x)) charts2 f\n  ?x \\<in> src.carrier \\<Longrightarrow> open (V ?x)\n  ?x \\<in> src.carrier \\<Longrightarrow> ?x \\<in> V ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<in> src.carrier \\<Longrightarrow>\n  diff k (src.charts_submanifold (V ?x)) charts2 f\n  ?x \\<in> src.carrier \\<Longrightarrow> open (V ?x)\n  ?x \\<in> src.carrier \\<Longrightarrow> ?x \\<in> V ?x\n\ngoal (1 subgoal):\n 1. diff k charts1 charts2 f", "by (rule diff_localI)"], ["proof (state)\nthis:\n  diff k charts1 charts2 f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diff_open_Un: \"diff k charts1 charts2 f\"\n  if \"diff k (src.charts_submanifold U) charts2 f\"\n    \"diff k (src.charts_submanifold V) charts2 f\"\n    and \"open U\" \"open V\" \"src.carrier \\<subseteq> U \\<union> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k charts1 charts2 f", "using diff_open_coverI[of \"{U, V}\" f] that"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>u.\n              u \\<in> {U, V} \\<Longrightarrow>\n              diff k (src.charts_submanifold u) charts2 f;\n   \\<And>u. u \\<in> {U, V} \\<Longrightarrow> open u;\n   src.carrier \\<subseteq> \\<Union> {U, V}\\<rbrakk>\n  \\<Longrightarrow> diff k charts1 charts2 f\n  diff k (src.charts_submanifold U) charts2 f\n  diff k (src.charts_submanifold V) charts2 f\n  open U\n  open V\n  src.carrier \\<subseteq> U \\<union> V\n\ngoal (1 subgoal):\n 1. diff k charts1 charts2 f", "by auto"], ["", "end"], ["", "context c_manifold begin"], ["", "sublocale self: c_manifolds k charts charts"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_manifolds k charts charts", "by unfold_locales"], ["", "lemma diff_id: \"diff k charts charts (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k charts charts (\\<lambda>x. x)", "by (force simp: self.diff_iff elim!: atlasE intro: smooth_on_cong)"], ["", "lemma c_manifold_order_le: \"c_manifold charts l\" if \"l \\<le> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_manifold charts l", "by unfold_locales (use pairwise_compat smooth_compat_le[OF _ \\<open>l \\<le> k\\<close>] in blast)"], ["", "lemma in_atlas_order_le: \"c \\<in> c_manifold.atlas charts l\" if \"l \\<le> k\" \"c \\<in> atlas\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> c_manifold.atlas charts l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<in> c_manifold.atlas charts l", "interpret l: c_manifold charts l"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_manifold charts l", "using \\<open>l \\<le> k\\<close>"], ["proof (prove)\nusing this:\n  l \\<le> k\n\ngoal (1 subgoal):\n 1. c_manifold charts l", "by (rule c_manifold_order_le)"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<in> l.atlas", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> l.atlas", "using that"], ["proof (prove)\nusing this:\n  l \\<le> k\n  c \\<in> atlas\n\ngoal (1 subgoal):\n 1. c \\<in> l.atlas", "by (auto simp: l.atlas_def atlas_def smooth_compat_le[OF _ \\<open>l \\<le> k\\<close>])"], ["proof (state)\nthis:\n  c \\<in> l.atlas\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context c_manifolds begin"], ["", "lemma c_manifolds_order_le: \"c_manifolds l charts1 charts2\" if \"l \\<le> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_manifolds l charts1 charts2", "by unfold_locales\n    (use src.pairwise_compat dest.pairwise_compat smooth_compat_le[OF _ that] in blast)+"], ["", "end"], ["", "context diff begin"], ["", "lemma diff_order_le: \"diff l charts1 charts2 f\" if \"l \\<le> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff l charts1 charts2 f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. diff l charts1 charts2 f", "interpret l: c_manifolds l charts1 charts2"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_manifolds l charts1 charts2", "by (rule c_manifolds_order_le) fact"], ["proof (state)\ngoal (1 subgoal):\n 1. diff l charts1 charts2 f", "show \"diff l charts1 charts2 f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff l charts1 charts2 f", "using diff_axioms"], ["proof (prove)\nusing this:\n  diff k charts1 charts2 f\n\ngoal (1 subgoal):\n 1. diff l charts1 charts2 f", "unfolding l.diff_iff diff_iff"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>src.carrier.\n     \\<exists>c1\\<in>src.atlas.\n        \\<exists>c2\\<in>dest.atlas.\n           x \\<in> domain c1 \\<and>\n           f ` domain c1 \\<subseteq> domain c2 \\<and>\n           k-smooth_on (codomain c1)\n            (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>src.carrier.\n       \\<exists>c1\\<in>l.src.atlas.\n          \\<exists>c2\\<in>l.dest.atlas.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             l-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "by (auto dest!: smooth_on_le[OF _ that] src.in_atlas_order_le[OF that]\n        dest.in_atlas_order_le[OF that] dest!: bspec)"], ["proof (state)\nthis:\n  diff l charts1 charts2 f\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Differentiable functions\\<close>"], ["", "lift_definition chart_eucl::\"('a::euclidean_space, 'a) chart\" is\n  \"(UNIV, UNIV, \\<lambda>x. x, \\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (UNIV, UNIV, \\<lambda>x. x, \\<lambda>x. x)\n    \\<in> {(d, d', f, f').\n           open d \\<and> open d' \\<and> homeomorphism d d' f f'}", "by (auto simp: homeomorphism_def)"], ["", "abbreviation \"charts_eucl \\<equiv> {chart_eucl}\""], ["", "lemma chart_eucl_simps[simp]:\n  \"domain chart_eucl = UNIV\"\n  \"codomain chart_eucl = UNIV\"\n  \"apply_chart chart_eucl = (\\<lambda>x. x)\"\n  \"inv_chart chart_eucl = (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (domain chart_eucl = UNIV &&& codomain chart_eucl = UNIV) &&&\n    apply_chart chart_eucl = (\\<lambda>x. x) &&&\n    inv_chart chart_eucl = (\\<lambda>x. x)", "by (transfer, simp)+"], ["", "locale diff_fun = diff k charts charts_eucl f\n  for k charts and f::\"'a::{t2_space,second_countable_topology} \\<Rightarrow> 'b::euclidean_space\""], ["", "lemma diff_fun_compose:\n  \"diff_fun k M1 (g \\<circ> f)\"\n  if \"diff k M1 M2 f\" \"diff_fun k M2 g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k M1 (g \\<circ> f)", "unfolding diff_fun_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k M1 charts_eucl (g \\<circ> f)", "by (rule diff_compose[OF that[unfolded diff_fun_def]])"], ["", "lemma c1_manifold_atlas_eucl: \"c_manifold charts_eucl k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_manifold charts_eucl k", "by unfold_locales (auto simp: smooth_compat_refl)"], ["", "interpretation manifold_eucl: c_manifold \"charts_eucl\" k"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_manifold charts_eucl k", "by (rule c1_manifold_atlas_eucl)"], ["", "lemma chart_eucl_in_atlas[intro,simp]: \"chart_eucl \\<in> manifold_eucl.atlas k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chart_eucl \\<in> manifold_eucl.atlas k", "using manifold_eucl.charts_subset_atlas"], ["proof (prove)\nusing this:\n  charts_eucl \\<subseteq> manifold_eucl.atlas ?k\n\ngoal (1 subgoal):\n 1. chart_eucl \\<in> manifold_eucl.atlas k", "by auto"], ["", "lemma apply_chart_smooth_on:\n  \"k-smooth_on (domain c) c\" if \"c \\<in> manifold_eucl.atlas k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (domain c) (apply_chart c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k-smooth_on (domain c) (apply_chart c)", "have \"k-smooth_compat c chart_eucl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat c chart_eucl", "using that"], ["proof (prove)\nusing this:\n  c \\<in> manifold_eucl.atlas k\n\ngoal (1 subgoal):\n 1. k-smooth_compat c chart_eucl", "by (auto intro!: manifold_eucl.atlas_is_atlas)"], ["proof (state)\nthis:\n  k-smooth_compat c chart_eucl\n\ngoal (1 subgoal):\n 1. k-smooth_on (domain c) (apply_chart c)", "from smooth_compat_D2[OF this]"], ["proof (chain)\npicking this:\n  k-smooth_on\n   (apply_chart chart_eucl ` (domain c \\<inter> domain chart_eucl))\n   (apply_chart c \\<circ> inv_chart chart_eucl)", "show ?thesis"], ["proof (prove)\nusing this:\n  k-smooth_on\n   (apply_chart chart_eucl ` (domain c \\<inter> domain chart_eucl))\n   (apply_chart c \\<circ> inv_chart chart_eucl)\n\ngoal (1 subgoal):\n 1. k-smooth_on (domain c) (apply_chart c)", "by (auto simp: o_def)"], ["proof (state)\nthis:\n  k-smooth_on (domain c) (apply_chart c)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inv_chart_smooth_on: \"k-smooth_on (codomain c) (inv_chart c)\" if \"c \\<in> manifold_eucl.atlas k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (codomain c) (inv_chart c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k-smooth_on (codomain c) (inv_chart c)", "have \"k-smooth_compat c chart_eucl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_compat c chart_eucl", "using that"], ["proof (prove)\nusing this:\n  c \\<in> manifold_eucl.atlas k\n\ngoal (1 subgoal):\n 1. k-smooth_compat c chart_eucl", "by (auto intro!: manifold_eucl.atlas_is_atlas)"], ["proof (state)\nthis:\n  k-smooth_compat c chart_eucl\n\ngoal (1 subgoal):\n 1. k-smooth_on (codomain c) (inv_chart c)", "from smooth_compat_D1[OF this]"], ["proof (chain)\npicking this:\n  k-smooth_on (apply_chart c ` (domain c \\<inter> domain chart_eucl))\n   (apply_chart chart_eucl \\<circ> inv_chart c)", "show ?thesis"], ["proof (prove)\nusing this:\n  k-smooth_on (apply_chart c ` (domain c \\<inter> domain chart_eucl))\n   (apply_chart chart_eucl \\<circ> inv_chart c)\n\ngoal (1 subgoal):\n 1. k-smooth_on (codomain c) (inv_chart c)", "by (auto simp: o_def image_domain_eq)"], ["proof (state)\nthis:\n  k-smooth_on (codomain c) (inv_chart c)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smooth_on_chart_inv:\n  fixes c::\"('a::euclidean_space, 'a) chart\"\n  assumes \"k-smooth_on X (apply_chart c \\<circ> f)\"\n  assumes \"continuous_on X f\"\n  assumes \"c \\<in> manifold_eucl.atlas k\" \"open X\" \"f ` X \\<subseteq> domain c\"\n  shows \"k-smooth_on X f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on X f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k-smooth_on X f", "have \"k-smooth_on X (inv_chart c \\<circ> (apply_chart c \\<circ> f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on X (inv_chart c \\<circ> (apply_chart c \\<circ> f))", "using assms"], ["proof (prove)\nusing this:\n  k-smooth_on X (apply_chart c \\<circ> f)\n  continuous_on X f\n  c \\<in> manifold_eucl.atlas k\n  open X\n  f ` X \\<subseteq> domain c\n\ngoal (1 subgoal):\n 1. k-smooth_on X (inv_chart c \\<circ> (apply_chart c \\<circ> f))", "by (auto intro!: smooth_on_compose inv_chart_smooth_on)"], ["proof (state)\nthis:\n  k-smooth_on X (inv_chart c \\<circ> (apply_chart c \\<circ> f))\n\ngoal (1 subgoal):\n 1. k-smooth_on X f", "with assms"], ["proof (chain)\npicking this:\n  k-smooth_on X (apply_chart c \\<circ> f)\n  continuous_on X f\n  c \\<in> manifold_eucl.atlas k\n  open X\n  f ` X \\<subseteq> domain c\n  k-smooth_on X (inv_chart c \\<circ> (apply_chart c \\<circ> f))", "show ?thesis"], ["proof (prove)\nusing this:\n  k-smooth_on X (apply_chart c \\<circ> f)\n  continuous_on X f\n  c \\<in> manifold_eucl.atlas k\n  open X\n  f ` X \\<subseteq> domain c\n  k-smooth_on X (inv_chart c \\<circ> (apply_chart c \\<circ> f))\n\ngoal (1 subgoal):\n 1. k-smooth_on X f", "by (force intro!: open_continuous_vimage intro: smooth_on_cong)"], ["proof (state)\nthis:\n  k-smooth_on X f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smooth_on_chart_inv2:\n  fixes c::\"('a::euclidean_space, 'a) chart\"\n  assumes \"k-smooth_on (c ` X) (f o inv_chart c)\"\n  assumes \"c \\<in> manifold_eucl.atlas k\" \"open X\" \"X \\<subseteq> domain c\"\n  shows \"k-smooth_on X f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on X f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k-smooth_on X f", "have \"k-smooth_on X ((f o inv_chart c) \\<circ> apply_chart c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on X (f \\<circ> inv_chart c \\<circ> apply_chart c)", "using assms(1) apply_chart_smooth_on"], ["proof (prove)\nusing this:\n  k-smooth_on (apply_chart c ` X) (f \\<circ> inv_chart c)\n  ?c \\<in> manifold_eucl.atlas ?k \\<Longrightarrow>\n  ?k-smooth_on (domain ?c) (apply_chart ?c)\n\ngoal (1 subgoal):\n 1. k-smooth_on X (f \\<circ> inv_chart c \\<circ> apply_chart c)", "by (rule smooth_on_compose2) (auto simp: assms)"], ["proof (state)\nthis:\n  k-smooth_on X (f \\<circ> inv_chart c \\<circ> apply_chart c)\n\ngoal (1 subgoal):\n 1. k-smooth_on X f", "with assms"], ["proof (chain)\npicking this:\n  k-smooth_on (apply_chart c ` X) (f \\<circ> inv_chart c)\n  c \\<in> manifold_eucl.atlas k\n  open X\n  X \\<subseteq> domain c\n  k-smooth_on X (f \\<circ> inv_chart c \\<circ> apply_chart c)", "show ?thesis"], ["proof (prove)\nusing this:\n  k-smooth_on (apply_chart c ` X) (f \\<circ> inv_chart c)\n  c \\<in> manifold_eucl.atlas k\n  open X\n  X \\<subseteq> domain c\n  k-smooth_on X (f \\<circ> inv_chart c \\<circ> apply_chart c)\n\ngoal (1 subgoal):\n 1. k-smooth_on X f", "by (force intro!: open_continuous_vimage intro: smooth_on_cong)"], ["proof (state)\nthis:\n  k-smooth_on X f\n\ngoal:\nNo subgoals!", "qed"], ["", "context diff_fun begin"], ["", "lemma diff_fun_order_le: \"diff_fun l charts f\" if \"l \\<le> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun l charts f", "using diff_order_le[OF that]"], ["proof (prove)\nusing this:\n  diff l charts charts_eucl f\n\ngoal (1 subgoal):\n 1. diff_fun l charts f", "by (simp add: diff_fun_def)"], ["", "end"], ["", "subsection \\<open>Diffeormorphism\\<close>"], ["", "locale diffeomorphism = diff k charts1 charts2 f + inv: diff k charts2 charts1 f'\n  for k charts1 charts2 f f' +\n  assumes f_inv[simp]:  \"\\<And>x. x \\<in> src.carrier \\<Longrightarrow> f' (f x) = x\"\n      and f'_inv[simp]: \"\\<And>y. y \\<in> dest.carrier \\<Longrightarrow> f (f' y) = y\""], ["", "context c_manifold begin"], ["", "sublocale manifold_eucl: c_manifolds k charts \"{chart_eucl}\"\n  rewrites \"diff k charts {chart_eucl} = diff_fun k charts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_manifolds k charts charts_eucl &&&\n    diff k charts charts_eucl = diff_fun k charts", "by unfold_locales (simp add: diff_fun_def[abs_def])"], ["", "lemma diff_funI:\n  \"diff_fun k charts f\"\n  if \"(\\<And>x. x\\<in>carrier \\<Longrightarrow> \\<exists>c1\\<in>atlas. x \\<in> domain c1 \\<and> (k-smooth_on (codomain c1) (f \\<circ> inv_chart c1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts f", "unfolding manifold_eucl.diff_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>carrier.\n       \\<exists>c1\\<in>atlas.\n          \\<exists>c2\\<in>manifold_eucl.atlas k.\n             x \\<in> domain c1 \\<and>\n             f ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "by (auto dest!: that intro!: bexI[where x=chart_eucl] simp: o_def)"], ["", "end"], ["", "lemma (in diff) diff_cong: \"diff k charts1 charts2 g\" if \"\\<And>x. x \\<in> src.carrier \\<Longrightarrow> f x = g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff k charts1 charts2 g", "unfolding diff_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>src.carrier.\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             g ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> g \\<circ> inv_chart c1)", "proof (rule ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             g ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> g \\<circ> inv_chart c1)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             g ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> g \\<circ> inv_chart c1)", "assume \"x \\<in> src.carrier\""], ["proof (state)\nthis:\n  x \\<in> src.carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             g ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> g \\<circ> inv_chart c1)", "from diff_axioms[unfolded diff_iff, rule_format, OF this]"], ["proof (chain)\npicking this:\n  \\<exists>c1\\<in>src.atlas.\n     \\<exists>c2\\<in>dest.atlas.\n        x \\<in> domain c1 \\<and>\n        f ` domain c1 \\<subseteq> domain c2 \\<and>\n        k-smooth_on (codomain c1)\n         (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "obtain c1::\"('a, 'e) chart\" and c2::\"('b, 'f) chart\" where\n    \"c1\\<in>src.atlas\" \"c2 \\<in> dest.atlas\"\n     \"x \\<in> domain c1\" \"f ` domain c1 \\<subseteq> domain c2\" \"k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\""], ["proof (prove)\nusing this:\n  \\<exists>c1\\<in>src.atlas.\n     \\<exists>c2\\<in>dest.atlas.\n        x \\<in> domain c1 \\<and>\n        f ` domain c1 \\<subseteq> domain c2 \\<and>\n        k-smooth_on (codomain c1)\n         (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>c1 \\<in> src.atlas; c2 \\<in> dest.atlas; x \\<in> domain c1;\n         f ` domain c1 \\<subseteq> domain c2;\n         k-smooth_on (codomain c1)\n          (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c1 \\<in> src.atlas\n  c2 \\<in> dest.atlas\n  x \\<in> domain c1\n  f ` domain c1 \\<subseteq> domain c2\n  k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> src.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>src.atlas.\n          \\<exists>c2\\<in>dest.atlas.\n             x \\<in> domain c1 \\<and>\n             g ` domain c1 \\<subseteq> domain c2 \\<and>\n             k-smooth_on (codomain c1)\n              (apply_chart c2 \\<circ> g \\<circ> inv_chart c1)", "then"], ["proof (chain)\npicking this:\n  c1 \\<in> src.atlas\n  c2 \\<in> dest.atlas\n  x \\<in> domain c1\n  f ` domain c1 \\<subseteq> domain c2\n  k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "show \"\\<exists>c1\\<in>src.atlas. \\<exists>c2\\<in>dest.atlas.\n      x \\<in> domain c1 \\<and> g ` domain c1 \\<subseteq> domain c2 \\<and> k-smooth_on (codomain c1) (apply_chart c2 \\<circ> g \\<circ> inv_chart c1)\""], ["proof (prove)\nusing this:\n  c1 \\<in> src.atlas\n  c2 \\<in> dest.atlas\n  x \\<in> domain c1\n  f ` domain c1 \\<subseteq> domain c2\n  k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>src.atlas.\n       \\<exists>c2\\<in>dest.atlas.\n          x \\<in> domain c1 \\<and>\n          g ` domain c1 \\<subseteq> domain c2 \\<and>\n          k-smooth_on (codomain c1)\n           (apply_chart c2 \\<circ> g \\<circ> inv_chart c1)", "using that"], ["proof (prove)\nusing this:\n  c1 \\<in> src.atlas\n  c2 \\<in> dest.atlas\n  x \\<in> domain c1\n  f ` domain c1 \\<subseteq> domain c2\n  k-smooth_on (codomain c1) (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n  ?x1 \\<in> src.carrier \\<Longrightarrow> f ?x1 = g ?x1\n\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>src.atlas.\n       \\<exists>c2\\<in>dest.atlas.\n          x \\<in> domain c1 \\<and>\n          g ` domain c1 \\<subseteq> domain c2 \\<and>\n          k-smooth_on (codomain c1)\n           (apply_chart c2 \\<circ> g \\<circ> inv_chart c1)", "by (intro bexI[where x=c1] bexI[where x=c2]) (auto simp: intro: smooth_on_cong)"], ["proof (state)\nthis:\n  \\<exists>c1\\<in>src.atlas.\n     \\<exists>c2\\<in>dest.atlas.\n        x \\<in> domain c1 \\<and>\n        g ` domain c1 \\<subseteq> domain c2 \\<and>\n        k-smooth_on (codomain c1)\n         (apply_chart c2 \\<circ> g \\<circ> inv_chart c1)\n\ngoal:\nNo subgoals!", "qed"], ["", "context diff_fun begin"], ["", "lemma diff_fun_cong: \"diff_fun k charts g\" if \"\\<And>x. x \\<in> src.carrier \\<Longrightarrow> f x = g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts g", "using diff_cong[OF that]"], ["proof (prove)\nusing this:\n  (\\<And>x.\n      x \\<in> src.carrier \\<Longrightarrow>\n      x \\<in> src.carrier) \\<Longrightarrow>\n  diff k charts charts_eucl g\n\ngoal (1 subgoal):\n 1. diff_fun k charts g", "by (auto simp: diff_fun_def)"], ["", "lemma diff_funD:\n  \"\\<exists>c1\\<in>src.atlas. x \\<in> domain c1 \\<and> (k-smooth_on (codomain c1) (f \\<circ> inv_chart c1))\"\n  if x: \"x \\<in> src.carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>src.atlas.\n       x \\<in> domain c1 \\<and>\n       k-smooth_on (codomain c1) (f \\<circ> inv_chart c1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>src.atlas.\n       x \\<in> domain c1 \\<and>\n       k-smooth_on (codomain c1) (f \\<circ> inv_chart c1)", "from diff_fun_axioms[unfolded src.manifold_eucl.diff_iff, rule_format, OF x]"], ["proof (chain)\npicking this:\n  \\<exists>c1\\<in>src.atlas.\n     \\<exists>c2\\<in>src.manifold_eucl.dest.atlas.\n        x \\<in> domain c1 \\<and>\n        f ` domain c1 \\<subseteq> domain c2 \\<and>\n        k-smooth_on (codomain c1)\n         (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)", "obtain c1 c2 where a: \"c1 \\<in> src.atlas\" \"c2 \\<in> manifold_eucl.atlas k\" \"x \\<in> domain c1\" \"f ` domain c1 \\<subseteq> domain c2\"\n    and s: \"k-smooth_on (codomain c1) (apply_chart c2 \\<circ> (f \\<circ> inv_chart c1))\""], ["proof (prove)\nusing this:\n  \\<exists>c1\\<in>src.atlas.\n     \\<exists>c2\\<in>src.manifold_eucl.dest.atlas.\n        x \\<in> domain c1 \\<and>\n        f ` domain c1 \\<subseteq> domain c2 \\<and>\n        k-smooth_on (codomain c1)\n         (apply_chart c2 \\<circ> f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>c1 \\<in> src.atlas; c2 \\<in> src.manifold_eucl.dest.atlas;\n         x \\<in> domain c1; f ` domain c1 \\<subseteq> domain c2;\n         k-smooth_on (codomain c1)\n          (apply_chart c2 \\<circ> (f \\<circ> inv_chart c1))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: o_assoc)"], ["proof (state)\nthis:\n  c1 \\<in> src.atlas\n  c2 \\<in> src.manifold_eucl.dest.atlas\n  x \\<in> domain c1\n  f ` domain c1 \\<subseteq> domain c2\n  k-smooth_on (codomain c1)\n   (apply_chart c2 \\<circ> (f \\<circ> inv_chart c1))\n\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>src.atlas.\n       x \\<in> domain c1 \\<and>\n       k-smooth_on (codomain c1) (f \\<circ> inv_chart c1)", "from smooth_on_chart_inv[OF s] a"], ["proof (chain)\npicking this:\n  \\<lbrakk>continuous_on (codomain c1) (f \\<circ> inv_chart c1);\n   c2 \\<in> src.manifold_eucl.dest.atlas; open (codomain c1);\n   (f \\<circ> inv_chart c1) ` codomain c1 \\<subseteq> domain c2\\<rbrakk>\n  \\<Longrightarrow> k-smooth_on (codomain c1) (f \\<circ> inv_chart c1)\n  c1 \\<in> src.atlas\n  c2 \\<in> src.manifold_eucl.dest.atlas\n  x \\<in> domain c1\n  f ` domain c1 \\<subseteq> domain c2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>continuous_on (codomain c1) (f \\<circ> inv_chart c1);\n   c2 \\<in> src.manifold_eucl.dest.atlas; open (codomain c1);\n   (f \\<circ> inv_chart c1) ` codomain c1 \\<subseteq> domain c2\\<rbrakk>\n  \\<Longrightarrow> k-smooth_on (codomain c1) (f \\<circ> inv_chart c1)\n  c1 \\<in> src.atlas\n  c2 \\<in> src.manifold_eucl.dest.atlas\n  x \\<in> domain c1\n  f ` domain c1 \\<subseteq> domain c2\n\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>src.atlas.\n       x \\<in> domain c1 \\<and>\n       k-smooth_on (codomain c1) (f \\<circ> inv_chart c1)", "by (force intro!: bexI[where x=c1] a continuous_intros)"], ["proof (state)\nthis:\n  \\<exists>c1\\<in>src.atlas.\n     x \\<in> domain c1 \\<and>\n     k-smooth_on (codomain c1) (f \\<circ> inv_chart c1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diff_funE:\n  assumes \"x \\<in> src.carrier\"\n  obtains c1 where\n    \"c1\\<in>src.atlas\" \"x \\<in> domain c1\" \"k-smooth_on (codomain c1) (f \\<circ> inv_chart c1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c1.\n        \\<lbrakk>c1 \\<in> src.atlas; x \\<in> domain c1;\n         k-smooth_on (codomain c1) (f \\<circ> inv_chart c1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using diff_funD[OF assms]"], ["proof (prove)\nusing this:\n  \\<exists>c1\\<in>src.atlas.\n     x \\<in> domain c1 \\<and>\n     k-smooth_on (codomain c1) (f \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. (\\<And>c1.\n        \\<lbrakk>c1 \\<in> src.atlas; x \\<in> domain c1;\n         k-smooth_on (codomain c1) (f \\<circ> inv_chart c1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma diff_fun_between_chartsD:\n  assumes \"c \\<in> src.atlas\" \"x \\<in> domain c\"\n  shows \"k-smooth_on (codomain c) (f \\<circ> inv_chart c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (codomain c) (f \\<circ> inv_chart c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k-smooth_on (codomain c) (f \\<circ> inv_chart c)", "have \"x \\<in> src.carrier\" \"f x \\<in> domain chart_eucl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> src.carrier &&& f x \\<in> domain chart_eucl", "using assms"], ["proof (prove)\nusing this:\n  c \\<in> src.atlas\n  x \\<in> domain c\n\ngoal (1 subgoal):\n 1. x \\<in> src.carrier &&& f x \\<in> domain chart_eucl", "by auto"], ["proof (state)\nthis:\n  x \\<in> src.carrier\n  f x \\<in> domain chart_eucl\n\ngoal (1 subgoal):\n 1. k-smooth_on (codomain c) (f \\<circ> inv_chart c)", "from diff_between_chartsE[OF assms(1) chart_eucl_in_atlas assms(2) this]"], ["proof (chain)\npicking this:\n  (\\<And>X.\n      \\<lbrakk>k-smooth_on X\n                (apply_chart chart_eucl \\<circ> f \\<circ> inv_chart c);\n       apply_chart c x \\<in> X; open X;\n       X =\n       codomain c \\<inter>\n       inv_chart c -` (src.carrier \\<inter> f -` domain chart_eucl)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain X where s: \"k-smooth_on X (f \\<circ> inv_chart c)\"\n    and X_def: \"X = codomain c \\<inter> inv_chart c -` (src.carrier \\<inter> f -` UNIV)\""], ["proof (prove)\nusing this:\n  (\\<And>X.\n      \\<lbrakk>k-smooth_on X\n                (apply_chart chart_eucl \\<circ> f \\<circ> inv_chart c);\n       apply_chart c x \\<in> X; open X;\n       X =\n       codomain c \\<inter>\n       inv_chart c -` (src.carrier \\<inter> f -` domain chart_eucl)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>k-smooth_on X (f \\<circ> inv_chart c);\n         X =\n         codomain c \\<inter>\n         inv_chart c -` (src.carrier \\<inter> f -` UNIV)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: o_def)"], ["proof (state)\nthis:\n  k-smooth_on X (f \\<circ> inv_chart c)\n  X = codomain c \\<inter> inv_chart c -` (src.carrier \\<inter> f -` UNIV)\n\ngoal (1 subgoal):\n 1. k-smooth_on (codomain c) (f \\<circ> inv_chart c)", "then"], ["proof (chain)\npicking this:\n  k-smooth_on X (f \\<circ> inv_chart c)\n  X = codomain c \\<inter> inv_chart c -` (src.carrier \\<inter> f -` UNIV)", "have X_def: \"X = codomain c\""], ["proof (prove)\nusing this:\n  k-smooth_on X (f \\<circ> inv_chart c)\n  X = codomain c \\<inter> inv_chart c -` (src.carrier \\<inter> f -` UNIV)\n\ngoal (1 subgoal):\n 1. X = codomain c", "using assms"], ["proof (prove)\nusing this:\n  k-smooth_on X (f \\<circ> inv_chart c)\n  X = codomain c \\<inter> inv_chart c -` (src.carrier \\<inter> f -` UNIV)\n  c \\<in> src.atlas\n  x \\<in> domain c\n\ngoal (1 subgoal):\n 1. X = codomain c", "by (auto simp: X_def)"], ["proof (state)\nthis:\n  X = codomain c\n\ngoal (1 subgoal):\n 1. k-smooth_on (codomain c) (f \\<circ> inv_chart c)", "with s"], ["proof (chain)\npicking this:\n  k-smooth_on X (f \\<circ> inv_chart c)\n  X = codomain c", "show ?thesis"], ["proof (prove)\nusing this:\n  k-smooth_on X (f \\<circ> inv_chart c)\n  X = codomain c\n\ngoal (1 subgoal):\n 1. k-smooth_on (codomain c) (f \\<circ> inv_chart c)", "by auto"], ["proof (state)\nthis:\n  k-smooth_on (codomain c) (f \\<circ> inv_chart c)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diff_fun_submanifold: \"diff_fun k (src.charts_submanifold S) f\"\n  if [simp]: \"open S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k (src.charts_submanifold S) f", "using diff_submanifold"], ["proof (prove)\nusing this:\n  open ?S \\<Longrightarrow> diff k (src.charts_submanifold ?S) charts_eucl f\n\ngoal (1 subgoal):\n 1. diff_fun k (src.charts_submanifold S) f", "unfolding diff_fun_def"], ["proof (prove)\nusing this:\n  open ?S \\<Longrightarrow> diff k (src.charts_submanifold ?S) charts_eucl f\n\ngoal (1 subgoal):\n 1. diff k (src.charts_submanifold S) charts_eucl f", "by simp"], ["", "end"], ["", "context c_manifold begin"], ["", "lemma diff_fun_zero: \"diff_fun k charts 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts 0", "by (rule diff_funI) (auto simp: o_def elim!: carrierE)"], ["", "lemma diff_fun_const: \"diff_fun k charts (\\<lambda>x. c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts (\\<lambda>x. c)", "by (rule diff_funI) (auto simp: o_def elim!: carrierE)"], ["", "lemma diff_fun_add: \"diff_fun k charts (a + b)\" if \"diff_fun k charts a\" \"diff_fun k charts b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts (a + b)", "proof (rule diff_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1) (a + b \\<circ> inv_chart c1)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1) (a + b \\<circ> inv_chart c1)", "assume x: \"x \\<in> carrier\""], ["proof (state)\nthis:\n  x \\<in> carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1) (a + b \\<circ> inv_chart c1)", "interpret a: diff_fun k charts a"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts a", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1) (a + b \\<circ> inv_chart c1)", "interpret b: diff_fun k charts b"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts b", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1) (a + b \\<circ> inv_chart c1)", "from a.diff_funE[OF x]"], ["proof (chain)\npicking this:\n  (\\<And>c1.\n      \\<lbrakk>c1 \\<in> atlas; x \\<in> domain c1;\n       k-smooth_on (codomain c1) (a \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain c where ca: \"c \\<in> atlas\" \"x \\<in> domain c\" \"k-smooth_on (codomain c) (a \\<circ> inv_chart c)\""], ["proof (prove)\nusing this:\n  (\\<And>c1.\n      \\<lbrakk>c1 \\<in> atlas; x \\<in> domain c1;\n       k-smooth_on (codomain c1) (a \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c;\n         k-smooth_on (codomain c) (a \\<circ> inv_chart c)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c \\<in> atlas\n  x \\<in> domain c\n  k-smooth_on (codomain c) (a \\<circ> inv_chart c)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1) (a + b \\<circ> inv_chart c1)", "show \"\\<exists>c1\\<in>atlas. x \\<in> domain c1 \\<and> k-smooth_on (codomain c1) (a + b \\<circ> inv_chart c1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>atlas.\n       x \\<in> domain c1 \\<and>\n       k-smooth_on (codomain c1) (a + b \\<circ> inv_chart c1)", "using ca"], ["proof (prove)\nusing this:\n  c \\<in> atlas\n  x \\<in> domain c\n  k-smooth_on (codomain c) (a \\<circ> inv_chart c)\n\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>atlas.\n       x \\<in> domain c1 \\<and>\n       k-smooth_on (codomain c1) (a + b \\<circ> inv_chart c1)", "by (auto intro!: bexI[where x=c] ca smooth_on_add_fun simp: plus_compose b.diff_fun_between_chartsD)"], ["proof (state)\nthis:\n  \\<exists>c1\\<in>atlas.\n     x \\<in> domain c1 \\<and>\n     k-smooth_on (codomain c1) (a + b \\<circ> inv_chart c1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diff_fun_sum: \"diff_fun k charts (\\<lambda>x. \\<Sum>i\\<in>S. f i x)\" if \"\\<And>i. i \\<in> S \\<Longrightarrow> diff_fun k charts (f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts (\\<lambda>x. \\<Sum>i\\<in>S. f i x)", "using that"], ["proof (prove)\nusing this:\n  ?i1 \\<in> S \\<Longrightarrow> diff_fun k charts (f ?i1)\n\ngoal (1 subgoal):\n 1. diff_fun k charts (\\<lambda>x. \\<Sum>i\\<in>S. f i x)", "apply (induction S rule: infinite_finite_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>i.\n           i \\<in> A \\<Longrightarrow> diff_fun k charts (f i)\\<rbrakk>\n       \\<Longrightarrow> diff_fun k charts\n                          (\\<lambda>x. \\<Sum>i\\<in>A. f i x)\n 2. (\\<And>i.\n        i \\<in> {} \\<Longrightarrow>\n        diff_fun k charts (f i)) \\<Longrightarrow>\n    diff_fun k charts (\\<lambda>x. \\<Sum>i\\<in>{}. f i x)\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            diff_fun k charts (f i)) \\<Longrightarrow>\n        diff_fun k charts (\\<lambda>x. \\<Sum>i\\<in>F. f i x);\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           diff_fun k charts (f i)\\<rbrakk>\n       \\<Longrightarrow> diff_fun k charts\n                          (\\<lambda>xa. \\<Sum>i\\<in>insert x F. f i xa)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite A_;\n     \\<And>i. i \\<in> A_ \\<Longrightarrow> diff_fun k charts (f i)\\<rbrakk>\n    \\<Longrightarrow> diff_fun k charts (\\<lambda>x. \\<Sum>i\\<in>A_. f i x)", "by (simp add: diff_fun_const)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<And>i.\n        i \\<in> {} \\<Longrightarrow>\n        diff_fun k charts (f i)) \\<Longrightarrow>\n    diff_fun k charts (\\<lambda>x. \\<Sum>i\\<in>{}. f i x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            diff_fun k charts (f i)) \\<Longrightarrow>\n        diff_fun k charts (\\<lambda>x. \\<Sum>i\\<in>F. f i x);\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           diff_fun k charts (f i)\\<rbrakk>\n       \\<Longrightarrow> diff_fun k charts\n                          (\\<lambda>xa. \\<Sum>i\\<in>insert x F. f i xa)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i \\<in> {} \\<Longrightarrow>\n        diff_fun k charts (f i)) \\<Longrightarrow>\n    diff_fun k charts (\\<lambda>x. \\<Sum>i\\<in>{}. f i x)", "by (simp add: diff_fun_const)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            diff_fun k charts (f i)) \\<Longrightarrow>\n        diff_fun k charts (\\<lambda>x. \\<Sum>i\\<in>F. f i x);\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           diff_fun k charts (f i)\\<rbrakk>\n       \\<Longrightarrow> diff_fun k charts\n                          (\\<lambda>xa. \\<Sum>i\\<in>insert x F. f i xa)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite F_; x_ \\<notin> F_;\n     (\\<And>i.\n         i \\<in> F_ \\<Longrightarrow>\n         diff_fun k charts (f i)) \\<Longrightarrow>\n     diff_fun k charts (\\<lambda>x. \\<Sum>i\\<in>F_. f i x);\n     \\<And>i.\n        i \\<in> insert x_ F_ \\<Longrightarrow>\n        diff_fun k charts (f i)\\<rbrakk>\n    \\<Longrightarrow> diff_fun k charts\n                       (\\<lambda>xa. \\<Sum>i\\<in>insert x_ F_. f i xa)", "by (simp add: diff_fun_add[unfolded plus_fun_def])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma diff_fun_scaleR: \"diff_fun k charts (\\<lambda>x. a x *\\<^sub>R b x)\"\n    if \"diff_fun k charts a\" \"diff_fun k charts b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts (\\<lambda>x. a x *\\<^sub>R b x)", "proof (rule diff_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1)\n           ((\\<lambda>x. a x *\\<^sub>R b x) \\<circ> inv_chart c1)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1)\n           ((\\<lambda>x. a x *\\<^sub>R b x) \\<circ> inv_chart c1)", "assume x: \"x \\<in> carrier\""], ["proof (state)\nthis:\n  x \\<in> carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1)\n           ((\\<lambda>x. a x *\\<^sub>R b x) \\<circ> inv_chart c1)", "interpret a: diff_fun k charts a"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts a", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1)\n           ((\\<lambda>x. a x *\\<^sub>R b x) \\<circ> inv_chart c1)", "interpret b: diff_fun k charts b"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts b", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1)\n           ((\\<lambda>x. a x *\\<^sub>R b x) \\<circ> inv_chart c1)", "from a.diff_funE[OF x]"], ["proof (chain)\npicking this:\n  (\\<And>c1.\n      \\<lbrakk>c1 \\<in> atlas; x \\<in> domain c1;\n       k-smooth_on (codomain c1) (a \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain c where ca: \"c \\<in> atlas\" \"x \\<in> domain c\" \"k-smooth_on (codomain c) (a \\<circ> inv_chart c)\""], ["proof (prove)\nusing this:\n  (\\<And>c1.\n      \\<lbrakk>c1 \\<in> atlas; x \\<in> domain c1;\n       k-smooth_on (codomain c1) (a \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c;\n         k-smooth_on (codomain c) (a \\<circ> inv_chart c)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c \\<in> atlas\n  x \\<in> domain c\n  k-smooth_on (codomain c) (a \\<circ> inv_chart c)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1)\n           ((\\<lambda>x. a x *\\<^sub>R b x) \\<circ> inv_chart c1)", "have *: \"(\\<lambda>x. a x *\\<^sub>R b x) \\<circ> inv_chart c = (\\<lambda>x. (a o inv_chart c) x *\\<^sub>R (b o inv_chart c) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. a x *\\<^sub>R b x) \\<circ> inv_chart c =\n    (\\<lambda>x.\n        (a \\<circ> inv_chart c) x *\\<^sub>R (b \\<circ> inv_chart c) x)", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. a x *\\<^sub>R b x) \\<circ> inv_chart c =\n  (\\<lambda>x.\n      (a \\<circ> inv_chart c) x *\\<^sub>R (b \\<circ> inv_chart c) x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1)\n           ((\\<lambda>x. a x *\\<^sub>R b x) \\<circ> inv_chart c1)", "show \"\\<exists>c1\\<in>atlas. x \\<in> domain c1 \\<and> k-smooth_on (codomain c1) ((\\<lambda>x. a x *\\<^sub>R b x) \\<circ> inv_chart c1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>atlas.\n       x \\<in> domain c1 \\<and>\n       k-smooth_on (codomain c1)\n        ((\\<lambda>x. a x *\\<^sub>R b x) \\<circ> inv_chart c1)", "using ca"], ["proof (prove)\nusing this:\n  c \\<in> atlas\n  x \\<in> domain c\n  k-smooth_on (codomain c) (a \\<circ> inv_chart c)\n\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>atlas.\n       x \\<in> domain c1 \\<and>\n       k-smooth_on (codomain c1)\n        ((\\<lambda>x. a x *\\<^sub>R b x) \\<circ> inv_chart c1)", "by (auto intro!: bexI[where x=c] smooth_on_scaleR\n        simp: mult_compose b.diff_fun_between_chartsD[unfolded o_def] * o_def)"], ["proof (state)\nthis:\n  \\<exists>c1\\<in>atlas.\n     x \\<in> domain c1 \\<and>\n     k-smooth_on (codomain c1)\n      ((\\<lambda>x. a x *\\<^sub>R b x) \\<circ> inv_chart c1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diff_fun_scaleR_left: \"diff_fun k charts (c *\\<^sub>R b)\"\n  if \"diff_fun k charts b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts (c *\\<^sub>R b)", "by (auto simp: scaleR_fun_def intro!: diff_fun_scaleR that diff_fun_const)"], ["", "lemma diff_fun_times: \"diff_fun k charts (a * b)\" if \"diff_fun k charts a\" \"diff_fun k charts b\"\n  for a b::\"_ \\<Rightarrow> _::real_normed_algebra\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts (a * b)", "proof (rule diff_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1) (a * b \\<circ> inv_chart c1)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1) (a * b \\<circ> inv_chart c1)", "assume x: \"x \\<in> carrier\""], ["proof (state)\nthis:\n  x \\<in> carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1) (a * b \\<circ> inv_chart c1)", "interpret a: diff_fun k charts a"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts a", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1) (a * b \\<circ> inv_chart c1)", "interpret b: diff_fun k charts b"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts b", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1) (a * b \\<circ> inv_chart c1)", "from a.diff_funE[OF x]"], ["proof (chain)\npicking this:\n  (\\<And>c1.\n      \\<lbrakk>c1 \\<in> atlas; x \\<in> domain c1;\n       k-smooth_on (codomain c1) (a \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain c where ca: \"c \\<in> atlas\" \"x \\<in> domain c\" \"k-smooth_on (codomain c) (a \\<circ> inv_chart c)\""], ["proof (prove)\nusing this:\n  (\\<And>c1.\n      \\<lbrakk>c1 \\<in> atlas; x \\<in> domain c1;\n       k-smooth_on (codomain c1) (a \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c;\n         k-smooth_on (codomain c) (a \\<circ> inv_chart c)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c \\<in> atlas\n  x \\<in> domain c\n  k-smooth_on (codomain c) (a \\<circ> inv_chart c)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1) (a * b \\<circ> inv_chart c1)", "show \"\\<exists>c1\\<in>atlas. x \\<in> domain c1 \\<and> k-smooth_on (codomain c1) (a * b \\<circ> inv_chart c1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>atlas.\n       x \\<in> domain c1 \\<and>\n       k-smooth_on (codomain c1) (a * b \\<circ> inv_chart c1)", "using ca"], ["proof (prove)\nusing this:\n  c \\<in> atlas\n  x \\<in> domain c\n  k-smooth_on (codomain c) (a \\<circ> inv_chart c)\n\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>atlas.\n       x \\<in> domain c1 \\<and>\n       k-smooth_on (codomain c1) (a * b \\<circ> inv_chart c1)", "by (auto intro!: bexI[where x=c] ca smooth_on_times_fun simp: mult_compose b.diff_fun_between_chartsD)"], ["proof (state)\nthis:\n  \\<exists>c1\\<in>atlas.\n     x \\<in> domain c1 \\<and>\n     k-smooth_on (codomain c1) (a * b \\<circ> inv_chart c1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diff_fun_divide: \"diff_fun k charts (\\<lambda>x. a x / b x)\"\n  if \"diff_fun k charts a\" \"diff_fun k charts b\"\n    and nz: \"\\<And>x. x \\<in> carrier \\<Longrightarrow> b x \\<noteq> 0\"\n  for a b::\"_ \\<Rightarrow> _::real_normed_field\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts (\\<lambda>x. a x / b x)", "proof (rule diff_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1)\n           ((\\<lambda>x. a x / b x) \\<circ> inv_chart c1)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1)\n           ((\\<lambda>x. a x / b x) \\<circ> inv_chart c1)", "assume x: \"x \\<in> carrier\""], ["proof (state)\nthis:\n  x \\<in> carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1)\n           ((\\<lambda>x. a x / b x) \\<circ> inv_chart c1)", "interpret a: diff_fun k charts a"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts a", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1)\n           ((\\<lambda>x. a x / b x) \\<circ> inv_chart c1)", "interpret b: diff_fun k charts b"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts b", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1)\n           ((\\<lambda>x. a x / b x) \\<circ> inv_chart c1)", "from a.diff_funE[OF x]"], ["proof (chain)\npicking this:\n  (\\<And>c1.\n      \\<lbrakk>c1 \\<in> atlas; x \\<in> domain c1;\n       k-smooth_on (codomain c1) (a \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain c where ca: \"c \\<in> atlas\" \"x \\<in> domain c\" \"k-smooth_on (codomain c) (a \\<circ> inv_chart c)\""], ["proof (prove)\nusing this:\n  (\\<And>c1.\n      \\<lbrakk>c1 \\<in> atlas; x \\<in> domain c1;\n       k-smooth_on (codomain c1) (a \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> atlas; x \\<in> domain c;\n         k-smooth_on (codomain c) (a \\<circ> inv_chart c)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c \\<in> atlas\n  x \\<in> domain c\n  k-smooth_on (codomain c) (a \\<circ> inv_chart c)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>atlas.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1)\n           ((\\<lambda>x. a x / b x) \\<circ> inv_chart c1)", "show \"\\<exists>c1\\<in>atlas. x \\<in> domain c1 \\<and> k-smooth_on (codomain c1) ((\\<lambda>x. a x / b x) \\<circ> inv_chart c1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>atlas.\n       x \\<in> domain c1 \\<and>\n       k-smooth_on (codomain c1)\n        ((\\<lambda>x. a x / b x) \\<circ> inv_chart c1)", "using ca nz"], ["proof (prove)\nusing this:\n  c \\<in> atlas\n  x \\<in> domain c\n  k-smooth_on (codomain c) (a \\<circ> inv_chart c)\n  ?x1 \\<in> carrier \\<Longrightarrow> b ?x1 \\<noteq> (0::'g)\n\ngoal (1 subgoal):\n 1. \\<exists>c1\\<in>atlas.\n       x \\<in> domain c1 \\<and>\n       k-smooth_on (codomain c1)\n        ((\\<lambda>x. a x / b x) \\<circ> inv_chart c1)", "by (auto intro!: bexI[where x=c] ca smooth_on_mult smooth_on_inverse\n        dest: b.diff_fun_between_chartsD\n        simp: mult_compose o_def\n        divide_inverse)"], ["proof (state)\nthis:\n  \\<exists>c1\\<in>atlas.\n     x \\<in> domain c1 \\<and>\n     k-smooth_on (codomain c1)\n      ((\\<lambda>x. a x / b x) \\<circ> inv_chart c1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subspace_Collect_diff_fun:\n  \"subspace (Collect (diff_fun k charts))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subspace (Collect (diff_fun k charts))", "by (auto simp: subspace_def diff_fun_zero diff_fun_add diff_fun_scaleR_left)"], ["", "end"], ["", "lemma manifold_eucl_carrier[simp]: \"manifold_eucl.carrier = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. manifold_eucl.carrier = UNIV", "by (simp add: manifold_eucl.carrier_def)"], ["", "lemma diff_fun_charts_euclD: \"k-smooth_on UNIV g\" if \"diff_fun k charts_eucl g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on UNIV g", "proof (rule smooth_on_open_subsetsI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV \\<Longrightarrow>\n       \\<exists>T. x \\<in> T \\<and> open T \\<and> k-smooth_on T g", "fix x::'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV \\<Longrightarrow>\n       \\<exists>T. x \\<in> T \\<and> open T \\<and> k-smooth_on T g", "interpret diff_fun k charts_eucl g"], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts_eucl g", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV \\<Longrightarrow>\n       \\<exists>T. x \\<in> T \\<and> open T \\<and> k-smooth_on T g", "have \"x \\<in> manifold_eucl.carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> manifold_eucl.carrier", "by simp"], ["proof (state)\nthis:\n  x \\<in> manifold_eucl.carrier\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV \\<Longrightarrow>\n       \\<exists>T. x \\<in> T \\<and> open T \\<and> k-smooth_on T g", "from diff_funE[OF this]"], ["proof (chain)\npicking this:\n  (\\<And>c1.\n      \\<lbrakk>c1 \\<in> manifold_eucl.atlas k; x \\<in> domain c1;\n       k-smooth_on (codomain c1) (g \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain c1\n    where c: \"c1 \\<in> manifold_eucl.atlas k\" \"x \\<in> domain c1\"\n      \"k-smooth_on (codomain c1) (g \\<circ> inv_chart c1)\""], ["proof (prove)\nusing this:\n  (\\<And>c1.\n      \\<lbrakk>c1 \\<in> manifold_eucl.atlas k; x \\<in> domain c1;\n       k-smooth_on (codomain c1) (g \\<circ> inv_chart c1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c1.\n        \\<lbrakk>c1 \\<in> manifold_eucl.atlas k; x \\<in> domain c1;\n         k-smooth_on (codomain c1) (g \\<circ> inv_chart c1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c1 \\<in> manifold_eucl.atlas k\n  x \\<in> domain c1\n  k-smooth_on (codomain c1) (g \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV \\<Longrightarrow>\n       \\<exists>T. x \\<in> T \\<and> open T \\<and> k-smooth_on T g", "have \"k-smooth_on (domain c1) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k-smooth_on (domain c1) g", "apply (rule smooth_on_chart_inv2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. k-smooth_on (apply_chart ?c ` domain c1) (g \\<circ> inv_chart ?c)\n 2. ?c \\<in> manifold_eucl.atlas k\n 3. open (domain c1)\n 4. domain c1 \\<subseteq> domain ?c", "apply (rule smooth_on_subset)"], ["proof (prove)\ngoal (5 subgoals):\n 1. k-smooth_on ?T5 (g \\<circ> inv_chart ?c)\n 2. apply_chart ?c ` domain c1 \\<subseteq> ?T5\n 3. ?c \\<in> manifold_eucl.atlas k\n 4. open (domain c1)\n 5. domain c1 \\<subseteq> domain ?c", "apply (rule c)"], ["proof (prove)\ngoal (4 subgoals):\n 1. apply_chart c1 ` domain c1 \\<subseteq> codomain c1\n 2. c1 \\<in> manifold_eucl.atlas k\n 3. open (domain c1)\n 4. domain c1 \\<subseteq> domain c1", "using c"], ["proof (prove)\nusing this:\n  c1 \\<in> manifold_eucl.atlas k\n  x \\<in> domain c1\n  k-smooth_on (codomain c1) (g \\<circ> inv_chart c1)\n\ngoal (4 subgoals):\n 1. apply_chart c1 ` domain c1 \\<subseteq> codomain c1\n 2. c1 \\<in> manifold_eucl.atlas k\n 3. open (domain c1)\n 4. domain c1 \\<subseteq> domain c1", "by auto"], ["proof (state)\nthis:\n  k-smooth_on (domain c1) g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV \\<Longrightarrow>\n       \\<exists>T. x \\<in> T \\<and> open T \\<and> k-smooth_on T g", "then"], ["proof (chain)\npicking this:\n  k-smooth_on (domain c1) g", "show \"\\<exists>T. x \\<in> T \\<and> open T \\<and> k-smooth_on T g\""], ["proof (prove)\nusing this:\n  k-smooth_on (domain c1) g\n\ngoal (1 subgoal):\n 1. \\<exists>T. x \\<in> T \\<and> open T \\<and> k-smooth_on T g", "using c"], ["proof (prove)\nusing this:\n  k-smooth_on (domain c1) g\n  c1 \\<in> manifold_eucl.atlas k\n  x \\<in> domain c1\n  k-smooth_on (codomain c1) (g \\<circ> inv_chart c1)\n\ngoal (1 subgoal):\n 1. \\<exists>T. x \\<in> T \\<and> open T \\<and> k-smooth_on T g", "by auto"], ["proof (state)\nthis:\n  \\<exists>T. x \\<in> T \\<and> open T \\<and> k-smooth_on T g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diff_fun_charts_euclI: \"diff_fun k charts_eucl g\" if \"k-smooth_on UNIV g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff_fun k charts_eucl g", "apply (rule manifold_eucl.diff_funI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> manifold_eucl.carrier \\<Longrightarrow>\n       \\<exists>c1\\<in>manifold_eucl.atlas k.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1) (g \\<circ> inv_chart c1)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>c1\\<in>manifold_eucl.atlas k.\n          x \\<in> domain c1 \\<and>\n          k-smooth_on (codomain c1) (g \\<circ> inv_chart c1)", "apply (rule bexI[where x=chart_eucl])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> domain chart_eucl \\<and>\n       k-smooth_on (codomain chart_eucl) (g \\<circ> inv_chart chart_eucl)\n 2. \\<And>x. chart_eucl \\<in> manifold_eucl.atlas k", "using that"], ["proof (prove)\nusing this:\n  k-smooth_on UNIV g\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> domain chart_eucl \\<and>\n       k-smooth_on (codomain chart_eucl) (g \\<circ> inv_chart chart_eucl)\n 2. \\<And>x. chart_eucl \\<in> manifold_eucl.atlas k", "by (auto simp: o_def)"], ["", "end"]]}