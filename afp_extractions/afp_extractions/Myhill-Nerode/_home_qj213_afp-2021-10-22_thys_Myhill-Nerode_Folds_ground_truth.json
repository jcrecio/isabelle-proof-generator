{"file_name": "/home/qj213/afp-2021-10-22/thys/Myhill-Nerode/Folds.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Myhill-Nerode", "problem_names": ["lemma folds_plus_simp [simp]:\n  fixes rs::\"('a rexp) set\"\n  assumes a: \"finite rs\"\n  shows \"lang (\\<Uplus>rs) = \\<Union> (lang ` rs)\""], "translations": [["", "lemma folds_plus_simp [simp]:\n  fixes rs::\"('a rexp) set\"\n  assumes a: \"finite rs\"\n  shows \"lang (\\<Uplus>rs) = \\<Union> (lang ` rs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lang (\\<Uplus>rs) = \\<Union> (lang ` rs)", "unfolding folds_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lang (SOME x. fold_graph Plus Zero rs x) = \\<Union> (lang ` rs)", "apply(rule set_eqI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> lang (SOME x. fold_graph Plus Zero rs x)) =\n       (x \\<in> \\<Union> (lang ` rs))", "apply(rule someI2_ex)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. \\<exists>a. fold_graph Plus Zero rs a\n 2. \\<And>x xa.\n       fold_graph Plus Zero rs xa \\<Longrightarrow>\n       (x \\<in> lang xa) = (x \\<in> \\<Union> (lang ` rs))", "apply(rule_tac finite_imp_fold_graph[OF a])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       fold_graph Plus Zero rs xa \\<Longrightarrow>\n       (x \\<in> lang xa) = (x \\<in> \\<Union> (lang ` rs))", "apply(erule fold_graph.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa. (x \\<in> lang Zero) = (x \\<in> \\<Union> (lang ` {}))\n 2. \\<And>x xa xb A y.\n       \\<lbrakk>xb \\<notin> A; fold_graph Plus Zero A y;\n        (x \\<in> lang y) = (x \\<in> \\<Union> (lang ` A))\\<rbrakk>\n       \\<Longrightarrow> (x \\<in> lang (Plus xb y)) =\n                         (x \\<in> \\<Union> (lang ` insert xb A))", "apply(auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}