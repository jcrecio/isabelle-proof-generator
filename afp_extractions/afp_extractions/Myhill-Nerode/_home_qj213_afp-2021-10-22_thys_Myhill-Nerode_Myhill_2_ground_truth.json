{"file_name": "/home/qj213/afp-2021-10-22/thys/Myhill-Nerode/Myhill_2.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Myhill-Nerode", "problem_names": ["lemma [simp]:\n  shows \"(\\<approx>A) `` {x} = (\\<approx>A) `` {y} \\<longleftrightarrow> x \\<approx>A y\"", "lemma refined_intro:\n  assumes \"\\<And>x y z. \\<lbrakk>x =tag= y; x @ z \\<in> A\\<rbrakk> \\<Longrightarrow> y @ z \\<in> A\"\n  shows \"=tag= \\<subseteq> \\<approx>A\"", "lemma finite_eq_tag_rel:\n  assumes rng_fnt: \"finite (range tag)\"\n  shows \"finite (UNIV // =tag=)\"", "lemma refined_partition_finite:\n  assumes fnt: \"finite (UNIV // R1)\"\n  and refined: \"R1 \\<subseteq> R2\"\n  and eq1: \"equiv UNIV R1\" and eq2: \"equiv UNIV R2\"\n  shows \"finite (UNIV // R2)\"", "lemma tag_finite_imageD:\n  assumes rng_fnt: \"finite (range tag)\" \n  and     refined: \"=tag=  \\<subseteq> \\<approx>A\"\n  shows \"finite (UNIV // \\<approx>A)\"", "lemma quot_zero_eq:\n  shows \"UNIV // \\<approx>{} = {UNIV}\"", "lemma quot_zero_finiteI [intro]:\n  shows \"finite (UNIV // \\<approx>{})\"", "lemma quot_one_subset:\n  shows \"UNIV // \\<approx>{[]} \\<subseteq> {{[]}, UNIV - {[]}}\"", "lemma quot_one_finiteI [intro]:\n  shows \"finite (UNIV // \\<approx>{[]})\"", "lemma quot_atom_subset:\n  \"UNIV // (\\<approx>{[c]}) \\<subseteq> {{[]},{[c]}, UNIV - {[], [c]}}\"", "lemma quot_atom_finiteI [intro]:\n  shows \"finite (UNIV // \\<approx>{[c]})\"", "lemma quot_plus_finiteI [intro]:\n  assumes finite1: \"finite (UNIV // \\<approx>A)\"\n  and     finite2: \"finite (UNIV // \\<approx>B)\"\n  shows \"finite (UNIV // \\<approx>(A \\<union> B))\"", "lemma conc_partitions_elim:\n  assumes \"x \\<in> A \\<cdot> B\"\n  shows \"\\<exists>(u, v) \\<in> Partitions x. u \\<in> A \\<and> v \\<in> B\"", "lemma conc_partitions_intro:\n  assumes \"(u, v) \\<in> Partitions x \\<and> u \\<in> A \\<and>  v \\<in> B\"\n  shows \"x \\<in> A \\<cdot> B\"", "lemma equiv_class_member:\n  assumes \"x \\<in> A\"\n  and \"\\<approx>A `` {x} = \\<approx>A `` {y}\" \n  shows \"y \\<in> A\"", "lemma tag_Times_injI:\n  assumes a: \"tag_Times A B x = tag_Times A B y\"\n  and     c: \"x @ z \\<in> A \\<cdot> B\"\n  shows \"y @ z \\<in> A \\<cdot> B\"", "lemma quot_conc_finiteI [intro]:\n  assumes fin1: \"finite (UNIV // \\<approx>A)\" \n  and     fin2: \"finite (UNIV // \\<approx>B)\" \n  shows \"finite (UNIV // \\<approx>(A \\<cdot> B))\"", "lemma star_partitions_elim:\n  assumes \"x @ z \\<in> A\\<star>\" \"x \\<noteq> []\"\n  shows \"\\<exists>(u, v) \\<in> Partitions (x @ z). strict_prefix u x \\<and> u \\<in> A\\<star> \\<and> v \\<in> A\\<star>\"", "lemma finite_set_has_max2: \n  \"\\<lbrakk>finite A; A \\<noteq> {}\\<rbrakk> \\<Longrightarrow> \\<exists> max \\<in> A. \\<forall> a \\<in> A. length a \\<le> length max\"", "lemma finite_strict_prefix_set: \n  shows \"finite {xa. strict_prefix xa (x::'a list)}\"", "lemma append_eq_cases:\n  assumes a: \"x @ y = m @ n\" \"m \\<noteq> []\"  \n  shows \"prefix x m \\<or> strict_prefix m x\"", "lemma star_spartitions_elim2:\n  assumes a: \"x @ z \\<in> A\\<star>\" \n  and     b: \"x \\<noteq> []\"\n  shows \"\\<exists>(u, v) \\<in> Partitions x. \\<exists> (u', v') \\<in> Partitions z. strict_prefix u x \\<and> u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>\"", "lemma tag_Star_non_empty_injI:\n  assumes a: \"tag_Star A x = tag_Star A y\"\n  and     c: \"x @ z \\<in> A\\<star>\"\n  and     d: \"x \\<noteq> []\"\n  shows \"y @ z \\<in> A\\<star>\"", "lemma tag_Star_empty_injI:\n  assumes a: \"tag_Star A x = tag_Star A y\"\n  and     c: \"x @ z \\<in> A\\<star>\"\n  and     d: \"x = []\"\n  shows \"y @ z \\<in> A\\<star>\"", "lemma quot_star_finiteI [intro]:\n  assumes finite1: \"finite (UNIV // \\<approx>A)\"\n  shows \"finite (UNIV // \\<approx>(A\\<star>))\"", "lemma Myhill_Nerode2:\n  fixes r::\"'a rexp\"\n  shows \"finite (UNIV // \\<approx>(lang r))\""], "translations": [["", "lemma [simp]:\n  shows \"(\\<approx>A) `` {x} = (\\<approx>A) `` {y} \\<longleftrightarrow> x \\<approx>A y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<approx>A `` {x} = \\<approx>A `` {y}) = x \\<approx>A y", "unfolding str_eq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ({(x, y). \\<forall>z. (x @ z \\<in> A) = (y @ z \\<in> A)} `` {x} =\n     {(x, y). \\<forall>z. (x @ z \\<in> A) = (y @ z \\<in> A)} `` {y}) =\n    ((x, y) \\<in> {(x, y). \\<forall>z. (x @ z \\<in> A) = (y @ z \\<in> A)})", "by auto"], ["", "lemma refined_intro:\n  assumes \"\\<And>x y z. \\<lbrakk>x =tag= y; x @ z \\<in> A\\<rbrakk> \\<Longrightarrow> y @ z \\<in> A\"\n  shows \"=tag= \\<subseteq> \\<approx>A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. =tag= \\<subseteq> \\<approx>A", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x =tag= ?y; ?x @ ?z \\<in> A\\<rbrakk>\n  \\<Longrightarrow> ?y @ ?z \\<in> A\n\ngoal (1 subgoal):\n 1. =tag= \\<subseteq> \\<approx>A", "unfolding str_eq_def tag_eq_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x, ?y) \\<in> {(x, y). tag x = tag y}; ?x @ ?z \\<in> A\\<rbrakk>\n  \\<Longrightarrow> ?y @ ?z \\<in> A\n\ngoal (1 subgoal):\n 1. {(x, y). tag x = tag y}\n    \\<subseteq> {(x, y). \\<forall>z. (x @ z \\<in> A) = (y @ z \\<in> A)}", "apply(clarify, simp (no_asm_use))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b z.\n       \\<lbrakk>\\<And>x y z.\n                   \\<lbrakk>tag x = tag y; x @ z \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> y @ z \\<in> A;\n        tag a = tag b;\n        \\<And>x y z.\n           \\<lbrakk>tag x = tag y; x @ z \\<in> A\\<rbrakk>\n           \\<Longrightarrow> y @ z \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (a @ z \\<in> A) = (b @ z \\<in> A)", "by metis"], ["", "lemma finite_eq_tag_rel:\n  assumes rng_fnt: \"finite (range tag)\"\n  shows \"finite (UNIV // =tag=)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (UNIV // =tag=)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (UNIV // =tag=)", "let \"?f\" =  \"\\<lambda>X. tag ` X\" and ?A = \"(UNIV // =tag=)\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite (UNIV // =tag=)", "have \"finite (?f ` ?A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ((`) tag ` UNIV // =tag=)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite ((`) tag ` UNIV // =tag=)", "have \"range ?f \\<subseteq> (Pow (range tag))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range ((`) tag) \\<subseteq> Pow (range tag)", "unfolding Pow_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. range ((`) tag) \\<subseteq> {B. B \\<subseteq> range tag}", "by auto"], ["proof (state)\nthis:\n  range ((`) tag) \\<subseteq> Pow (range tag)\n\ngoal (1 subgoal):\n 1. finite ((`) tag ` UNIV // =tag=)", "moreover"], ["proof (state)\nthis:\n  range ((`) tag) \\<subseteq> Pow (range tag)\n\ngoal (1 subgoal):\n 1. finite ((`) tag ` UNIV // =tag=)", "have \"finite (Pow (range tag))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Pow (range tag))", "using rng_fnt"], ["proof (prove)\nusing this:\n  finite (range tag)\n\ngoal (1 subgoal):\n 1. finite (Pow (range tag))", "by simp"], ["proof (state)\nthis:\n  finite (Pow (range tag))\n\ngoal (1 subgoal):\n 1. finite ((`) tag ` UNIV // =tag=)", "ultimately"], ["proof (chain)\npicking this:\n  range ((`) tag) \\<subseteq> Pow (range tag)\n  finite (Pow (range tag))", "have \"finite (range ?f)\""], ["proof (prove)\nusing this:\n  range ((`) tag) \\<subseteq> Pow (range tag)\n  finite (Pow (range tag))\n\ngoal (1 subgoal):\n 1. finite (range ((`) tag))", "unfolding image_def"], ["proof (prove)\nusing this:\n  {y. \\<exists>x\\<in>UNIV. y = {y. \\<exists>x\\<in>x. y = tag x}}\n  \\<subseteq> Pow {y. \\<exists>x\\<in>UNIV. y = tag x}\n  finite (Pow {y. \\<exists>x\\<in>UNIV. y = tag x})\n\ngoal (1 subgoal):\n 1. finite {y. \\<exists>x\\<in>UNIV. y = {y. \\<exists>x\\<in>x. y = tag x}}", "by (blast intro: finite_subset)"], ["proof (state)\nthis:\n  finite (range ((`) tag))\n\ngoal (1 subgoal):\n 1. finite ((`) tag ` UNIV // =tag=)", "moreover"], ["proof (state)\nthis:\n  finite (range ((`) tag))\n\ngoal (1 subgoal):\n 1. finite ((`) tag ` UNIV // =tag=)", "have \"?f ` ?A \\<subseteq> range ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (`) tag ` UNIV // =tag= \\<subseteq> range ((`) tag)", "by auto"], ["proof (state)\nthis:\n  (`) tag ` UNIV // =tag= \\<subseteq> range ((`) tag)\n\ngoal (1 subgoal):\n 1. finite ((`) tag ` UNIV // =tag=)", "ultimately"], ["proof (chain)\npicking this:\n  finite (range ((`) tag))\n  (`) tag ` UNIV // =tag= \\<subseteq> range ((`) tag)", "show \"finite (?f ` ?A)\""], ["proof (prove)\nusing this:\n  finite (range ((`) tag))\n  (`) tag ` UNIV // =tag= \\<subseteq> range ((`) tag)\n\ngoal (1 subgoal):\n 1. finite ((`) tag ` UNIV // =tag=)", "by (rule rev_finite_subset)"], ["proof (state)\nthis:\n  finite ((`) tag ` UNIV // =tag=)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite ((`) tag ` UNIV // =tag=)\n\ngoal (1 subgoal):\n 1. finite (UNIV // =tag=)", "moreover"], ["proof (state)\nthis:\n  finite ((`) tag ` UNIV // =tag=)\n\ngoal (1 subgoal):\n 1. finite (UNIV // =tag=)", "have \"inj_on ?f ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on ((`) tag) (UNIV // =tag=)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on ((`) tag) (UNIV // =tag=)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on ((`) tag) (UNIV // =tag=)", "fix X Y"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on ((`) tag) (UNIV // =tag=)", "assume X_in: \"X \\<in> ?A\"\n        and  Y_in: \"Y \\<in> ?A\"\n        and  tag_eq: \"?f X = ?f Y\""], ["proof (state)\nthis:\n  X \\<in> UNIV // =tag=\n  Y \\<in> UNIV // =tag=\n  tag ` X = tag ` Y\n\ngoal (1 subgoal):\n 1. inj_on ((`) tag) (UNIV // =tag=)", "then"], ["proof (chain)\npicking this:\n  X \\<in> UNIV // =tag=\n  Y \\<in> UNIV // =tag=\n  tag ` X = tag ` Y", "obtain x y \n        where \"x \\<in> X\" \"y \\<in> Y\" \"tag x = tag y\""], ["proof (prove)\nusing this:\n  X \\<in> UNIV // =tag=\n  Y \\<in> UNIV // =tag=\n  tag ` X = tag ` Y\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<in> X; y \\<in> Y; tag x = tag y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding quotient_def Image_def image_def tag_eq_def"], ["proof (prove)\nusing this:\n  X \\<in> \\<Union>\n           {y. \\<exists>x\\<in>UNIV.\n                  y =\n                  {{y. \\<exists>x\\<in>{x}.\n                          (x, y) \\<in> {(x, y). tag x = tag y}}}}\n  Y \\<in> \\<Union>\n           {y. \\<exists>x\\<in>UNIV.\n                  y =\n                  {{y. \\<exists>x\\<in>{x}.\n                          (x, y) \\<in> {(x, y). tag x = tag y}}}}\n  {y. \\<exists>x\\<in>X. y = tag x} = {y. \\<exists>x\\<in>Y. y = tag x}\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<in> X; y \\<in> Y; tag x = tag y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp) (blast)"], ["proof (state)\nthis:\n  x \\<in> X\n  y \\<in> Y\n  tag x = tag y\n\ngoal (1 subgoal):\n 1. inj_on ((`) tag) (UNIV // =tag=)", "with X_in Y_in"], ["proof (chain)\npicking this:\n  X \\<in> UNIV // =tag=\n  Y \\<in> UNIV // =tag=\n  x \\<in> X\n  y \\<in> Y\n  tag x = tag y", "have \"X = Y\""], ["proof (prove)\nusing this:\n  X \\<in> UNIV // =tag=\n  Y \\<in> UNIV // =tag=\n  x \\<in> X\n  y \\<in> Y\n  tag x = tag y\n\ngoal (1 subgoal):\n 1. X = Y", "unfolding quotient_def tag_eq_def"], ["proof (prove)\nusing this:\n  X \\<in> (\\<Union>x. {{(x, y). tag x = tag y} `` {x}})\n  Y \\<in> (\\<Union>x. {{(x, y). tag x = tag y} `` {x}})\n  x \\<in> X\n  y \\<in> Y\n  tag x = tag y\n\ngoal (1 subgoal):\n 1. X = Y", "by auto"], ["proof (state)\nthis:\n  X = Y\n\ngoal (1 subgoal):\n 1. inj_on ((`) tag) (UNIV // =tag=)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?X2 \\<in> UNIV // =tag=; ?Y2 \\<in> UNIV // =tag=;\n   tag ` ?X2 = tag ` ?Y2\\<rbrakk>\n  \\<Longrightarrow> ?X2 = ?Y2\n\ngoal (1 subgoal):\n 1. inj_on ((`) tag) (UNIV // =tag=)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?X2 \\<in> UNIV // =tag=; ?Y2 \\<in> UNIV // =tag=;\n   tag ` ?X2 = tag ` ?Y2\\<rbrakk>\n  \\<Longrightarrow> ?X2 = ?Y2", "show \"inj_on ?f ?A\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?X2 \\<in> UNIV // =tag=; ?Y2 \\<in> UNIV // =tag=;\n   tag ` ?X2 = tag ` ?Y2\\<rbrakk>\n  \\<Longrightarrow> ?X2 = ?Y2\n\ngoal (1 subgoal):\n 1. inj_on ((`) tag) (UNIV // =tag=)", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?X2 \\<in> UNIV // =tag=; ?Y2 \\<in> UNIV // =tag=;\n   tag ` ?X2 = tag ` ?Y2\\<rbrakk>\n  \\<Longrightarrow> ?X2 = ?Y2\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV // =tag=.\n       \\<forall>y\\<in>UNIV // =tag=.\n          tag ` x = tag ` y \\<longrightarrow> x = y", "by auto"], ["proof (state)\nthis:\n  inj_on ((`) tag) (UNIV // =tag=)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on ((`) tag) (UNIV // =tag=)\n\ngoal (1 subgoal):\n 1. finite (UNIV // =tag=)", "ultimately"], ["proof (chain)\npicking this:\n  finite ((`) tag ` UNIV // =tag=)\n  inj_on ((`) tag) (UNIV // =tag=)", "show \"finite (UNIV // =tag=)\""], ["proof (prove)\nusing this:\n  finite ((`) tag ` UNIV // =tag=)\n  inj_on ((`) tag) (UNIV // =tag=)\n\ngoal (1 subgoal):\n 1. finite (UNIV // =tag=)", "by (rule finite_imageD)"], ["proof (state)\nthis:\n  finite (UNIV // =tag=)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma refined_partition_finite:\n  assumes fnt: \"finite (UNIV // R1)\"\n  and refined: \"R1 \\<subseteq> R2\"\n  and eq1: \"equiv UNIV R1\" and eq2: \"equiv UNIV R2\"\n  shows \"finite (UNIV // R2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (UNIV // R2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (UNIV // R2)", "let ?f = \"\\<lambda>X. {R1 `` {x} | x. x \\<in> X}\" \n    and ?A = \"UNIV // R2\" and ?B = \"UNIV // R1\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite (UNIV // R2)", "have \"?f ` ?A \\<subseteq> Pow ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) ` UNIV // R2\n    \\<subseteq> Pow (UNIV // R1)", "unfolding image_def Pow_def quotient_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>\\<Union> {y. \\<exists>x\\<in>UNIV. y = {R2 `` {x}}}.\n           y = {R1 `` {xa} |xa. xa \\<in> x}}\n    \\<subseteq> {B. B \\<subseteq> \\<Union>\n                                   {y. \\<exists>x\\<in>UNIV.\n    y = {R1 `` {x}}}}", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) ` UNIV // R2\n  \\<subseteq> Pow (UNIV // R1)\n\ngoal (1 subgoal):\n 1. finite (UNIV // R2)", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) ` UNIV // R2\n  \\<subseteq> Pow (UNIV // R1)\n\ngoal (1 subgoal):\n 1. finite (UNIV // R2)", "have \"finite (Pow ?B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Pow (UNIV // R1))", "using fnt"], ["proof (prove)\nusing this:\n  finite (UNIV // R1)\n\ngoal (1 subgoal):\n 1. finite (Pow (UNIV // R1))", "by simp"], ["proof (state)\nthis:\n  finite (Pow (UNIV // R1))\n\ngoal (1 subgoal):\n 1. finite (UNIV // R2)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) ` UNIV // R2\n  \\<subseteq> Pow (UNIV // R1)\n  finite (Pow (UNIV // R1))", "have \"finite (?f ` ?A)\""], ["proof (prove)\nusing this:\n  (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) ` UNIV // R2\n  \\<subseteq> Pow (UNIV // R1)\n  finite (Pow (UNIV // R1))\n\ngoal (1 subgoal):\n 1. finite ((\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) ` UNIV // R2)", "by (rule finite_subset)"], ["proof (state)\nthis:\n  finite ((\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) ` UNIV // R2)\n\ngoal (1 subgoal):\n 1. finite (UNIV // R2)", "moreover"], ["proof (state)\nthis:\n  finite ((\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) ` UNIV // R2)\n\ngoal (1 subgoal):\n 1. finite (UNIV // R2)", "have \"inj_on ?f ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)", "fix X Y"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)", "assume X_in: \"X \\<in> ?A\" and Y_in: \"Y \\<in> ?A\" and eq_f: \"?f X = ?f Y\""], ["proof (state)\nthis:\n  X \\<in> UNIV // R2\n  Y \\<in> UNIV // R2\n  {R1 `` {x} |x. x \\<in> X} = {R1 `` {x} |x. x \\<in> Y}\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)", "from quotientE [OF X_in]"], ["proof (chain)\npicking this:\n  (\\<And>x.\n      \\<lbrakk>X = R2 `` {x}; x \\<in> UNIV\\<rbrakk>\n      \\<Longrightarrow> ?P) \\<Longrightarrow>\n  ?P", "obtain x where \"X = R2 `` {x}\""], ["proof (prove)\nusing this:\n  (\\<And>x.\n      \\<lbrakk>X = R2 `` {x}; x \\<in> UNIV\\<rbrakk>\n      \\<Longrightarrow> ?P) \\<Longrightarrow>\n  ?P\n\ngoal (1 subgoal):\n 1. (\\<And>x. X = R2 `` {x} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  X = R2 `` {x}\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)", "with equiv_class_self[OF eq2]"], ["proof (chain)\npicking this:\n  ?a \\<in> UNIV \\<Longrightarrow> ?a \\<in> R2 `` {?a}\n  X = R2 `` {x}", "have x_in: \"x \\<in> X\""], ["proof (prove)\nusing this:\n  ?a \\<in> UNIV \\<Longrightarrow> ?a \\<in> R2 `` {?a}\n  X = R2 `` {x}\n\ngoal (1 subgoal):\n 1. x \\<in> X", "by simp"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)", "then"], ["proof (chain)\npicking this:\n  x \\<in> X", "have \"R1 ``{x} \\<in> ?f X\""], ["proof (prove)\nusing this:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. R1 `` {x} \\<in> {R1 `` {x} |x. x \\<in> X}", "by auto"], ["proof (state)\nthis:\n  R1 `` {x} \\<in> {R1 `` {x} |x. x \\<in> X}\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)", "with eq_f"], ["proof (chain)\npicking this:\n  {R1 `` {x} |x. x \\<in> X} = {R1 `` {x} |x. x \\<in> Y}\n  R1 `` {x} \\<in> {R1 `` {x} |x. x \\<in> X}", "have \"R1 `` {x} \\<in> ?f Y\""], ["proof (prove)\nusing this:\n  {R1 `` {x} |x. x \\<in> X} = {R1 `` {x} |x. x \\<in> Y}\n  R1 `` {x} \\<in> {R1 `` {x} |x. x \\<in> X}\n\ngoal (1 subgoal):\n 1. R1 `` {x} \\<in> {R1 `` {x} |x. x \\<in> Y}", "by simp"], ["proof (state)\nthis:\n  R1 `` {x} \\<in> {R1 `` {x} |x. x \\<in> Y}\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)", "then"], ["proof (chain)\npicking this:\n  R1 `` {x} \\<in> {R1 `` {x} |x. x \\<in> Y}", "obtain y \n        where y_in: \"y \\<in> Y\" and eq_r1_xy: \"R1 `` {x} = R1 `` {y}\""], ["proof (prove)\nusing this:\n  R1 `` {x} \\<in> {R1 `` {x} |x. x \\<in> Y}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> Y; R1 `` {x} = R1 `` {y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> Y\n  R1 `` {x} = R1 `` {y}\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)", "with eq_equiv_class[OF _ eq1]"], ["proof (chain)\npicking this:\n  \\<lbrakk>R1 `` {?a} = R1 `` {?b}; ?b \\<in> UNIV\\<rbrakk>\n  \\<Longrightarrow> (?a, ?b) \\<in> R1\n  y \\<in> Y\n  R1 `` {x} = R1 `` {y}", "have \"(x, y) \\<in> R1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>R1 `` {?a} = R1 `` {?b}; ?b \\<in> UNIV\\<rbrakk>\n  \\<Longrightarrow> (?a, ?b) \\<in> R1\n  y \\<in> Y\n  R1 `` {x} = R1 `` {y}\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> R1", "by blast"], ["proof (state)\nthis:\n  (x, y) \\<in> R1\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)", "with refined"], ["proof (chain)\npicking this:\n  R1 \\<subseteq> R2\n  (x, y) \\<in> R1", "have \"(x, y) \\<in> R2\""], ["proof (prove)\nusing this:\n  R1 \\<subseteq> R2\n  (x, y) \\<in> R1\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> R2", "by auto"], ["proof (state)\nthis:\n  (x, y) \\<in> R2\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)", "with quotient_eqI [OF eq2 X_in Y_in x_in y_in]"], ["proof (chain)\npicking this:\n  (x, y) \\<in> R2 \\<Longrightarrow> X = Y\n  (x, y) \\<in> R2", "have \"X = Y\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> R2 \\<Longrightarrow> X = Y\n  (x, y) \\<in> R2\n\ngoal (1 subgoal):\n 1. X = Y", "."], ["proof (state)\nthis:\n  X = Y\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?X2 \\<in> UNIV // R2; ?Y2 \\<in> UNIV // R2;\n   {R1 `` {x} |x. x \\<in> ?X2} = {R1 `` {x} |x. x \\<in> ?Y2}\\<rbrakk>\n  \\<Longrightarrow> ?X2 = ?Y2\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?X2 \\<in> UNIV // R2; ?Y2 \\<in> UNIV // R2;\n   {R1 `` {x} |x. x \\<in> ?X2} = {R1 `` {x} |x. x \\<in> ?Y2}\\<rbrakk>\n  \\<Longrightarrow> ?X2 = ?Y2", "show \"inj_on ?f ?A\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?X2 \\<in> UNIV // R2; ?Y2 \\<in> UNIV // R2;\n   {R1 `` {x} |x. x \\<in> ?X2} = {R1 `` {x} |x. x \\<in> ?Y2}\\<rbrakk>\n  \\<Longrightarrow> ?X2 = ?Y2\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?X2 \\<in> UNIV // R2; ?Y2 \\<in> UNIV // R2;\n   {R1 `` {x} |x. x \\<in> ?X2} = {R1 `` {x} |x. x \\<in> ?Y2}\\<rbrakk>\n  \\<Longrightarrow> ?X2 = ?Y2\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV // R2.\n       \\<forall>y\\<in>UNIV // R2.\n          {R1 `` {xa} |xa. xa \\<in> x} =\n          {R1 `` {x} |x. x \\<in> y} \\<longrightarrow>\n          x = y", "by blast"], ["proof (state)\nthis:\n  inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)\n\ngoal (1 subgoal):\n 1. finite (UNIV // R2)", "ultimately"], ["proof (chain)\npicking this:\n  finite ((\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) ` UNIV // R2)\n  inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)", "show \"finite (UNIV // R2)\""], ["proof (prove)\nusing this:\n  finite ((\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) ` UNIV // R2)\n  inj_on (\\<lambda>X. {R1 `` {x} |x. x \\<in> X}) (UNIV // R2)\n\ngoal (1 subgoal):\n 1. finite (UNIV // R2)", "by (rule finite_imageD)"], ["proof (state)\nthis:\n  finite (UNIV // R2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tag_finite_imageD:\n  assumes rng_fnt: \"finite (range tag)\" \n  and     refined: \"=tag=  \\<subseteq> \\<approx>A\"\n  shows \"finite (UNIV // \\<approx>A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (UNIV // \\<approx>A)", "proof (rule_tac refined_partition_finite [of \"=tag=\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. finite (UNIV // =tag=)\n 2. =tag= \\<subseteq> \\<approx>A\n 3. equiv UNIV =tag=\n 4. equiv UNIV (\\<approx>A)", "show \"finite (UNIV // =tag=)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (UNIV // =tag=)", "by (rule finite_eq_tag_rel[OF rng_fnt])"], ["proof (state)\nthis:\n  finite (UNIV // =tag=)\n\ngoal (3 subgoals):\n 1. =tag= \\<subseteq> \\<approx>A\n 2. equiv UNIV =tag=\n 3. equiv UNIV (\\<approx>A)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. =tag= \\<subseteq> \\<approx>A\n 2. equiv UNIV =tag=\n 3. equiv UNIV (\\<approx>A)", "show \"=tag= \\<subseteq> \\<approx>A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. =tag= \\<subseteq> \\<approx>A", "using refined"], ["proof (prove)\nusing this:\n  =tag= \\<subseteq> \\<approx>A\n\ngoal (1 subgoal):\n 1. =tag= \\<subseteq> \\<approx>A", "."], ["proof (state)\nthis:\n  =tag= \\<subseteq> \\<approx>A\n\ngoal (2 subgoals):\n 1. equiv UNIV =tag=\n 2. equiv UNIV (\\<approx>A)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. equiv UNIV =tag=\n 2. equiv UNIV (\\<approx>A)", "show \"equiv UNIV =tag=\"\n  and  \"equiv UNIV (\\<approx>A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv UNIV =tag= &&& equiv UNIV (\\<approx>A)", "unfolding equiv_def str_eq_def tag_eq_def refl_on_def sym_def trans_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ({(x, y). tag x = tag y} \\<subseteq> UNIV \\<times> UNIV \\<and>\n     (\\<forall>x\\<in>UNIV. (x, x) \\<in> {(x, y). tag x = tag y})) \\<and>\n    (\\<forall>x y.\n        (x, y) \\<in> {(x, y). tag x = tag y} \\<longrightarrow>\n        (y, x) \\<in> {(x, y). tag x = tag y}) \\<and>\n    (\\<forall>x y z.\n        (x, y) \\<in> {(x, y). tag x = tag y} \\<longrightarrow>\n        (y, z) \\<in> {(x, y). tag x = tag y} \\<longrightarrow>\n        (x, z) \\<in> {(x, y). tag x = tag y}) &&&\n    ({(x, y). \\<forall>z. (x @ z \\<in> A) = (y @ z \\<in> A)}\n     \\<subseteq> UNIV \\<times> UNIV \\<and>\n     (\\<forall>x\\<in>UNIV.\n         (x, x)\n         \\<in> {(x, y).\n                \\<forall>z. (x @ z \\<in> A) = (y @ z \\<in> A)})) \\<and>\n    (\\<forall>x y.\n        (x, y)\n        \\<in> {(x, y).\n               \\<forall>z.\n                  (x @ z \\<in> A) = (y @ z \\<in> A)} \\<longrightarrow>\n        (y, x)\n        \\<in> {(x, y).\n               \\<forall>z. (x @ z \\<in> A) = (y @ z \\<in> A)}) \\<and>\n    (\\<forall>x y z.\n        (x, y)\n        \\<in> {(x, y).\n               \\<forall>z.\n                  (x @ z \\<in> A) = (y @ z \\<in> A)} \\<longrightarrow>\n        (y, z)\n        \\<in> {(x, y).\n               \\<forall>z.\n                  (x @ z \\<in> A) = (y @ z \\<in> A)} \\<longrightarrow>\n        (x, z)\n        \\<in> {(x, y). \\<forall>z. (x @ z \\<in> A) = (y @ z \\<in> A)})", "by auto"], ["proof (state)\nthis:\n  equiv UNIV =tag=\n  equiv UNIV (\\<approx>A)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Base cases: @{const Zero}, @{const One} and @{const Atom}\\<close>"], ["", "lemma quot_zero_eq:\n  shows \"UNIV // \\<approx>{} = {UNIV}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV // \\<approx>{} = {UNIV}", "unfolding quotient_def Image_def str_eq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>x.\n        {{y. \\<exists>x\\<in>{x}.\n                (x, y)\n                \\<in> {(x, y).\n                       \\<forall>z. (x @ z \\<in> {}) = (y @ z \\<in> {})}}}) =\n    {UNIV}", "by auto"], ["", "lemma quot_zero_finiteI [intro]:\n  shows \"finite (UNIV // \\<approx>{})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (UNIV // \\<approx>{})", "unfolding quot_zero_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {UNIV}", "by simp"], ["", "lemma quot_one_subset:\n  shows \"UNIV // \\<approx>{[]} \\<subseteq> {{[]}, UNIV - {[]}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV // \\<approx>{[]} \\<subseteq> {{[]}, UNIV - {[]}}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[]} \\<Longrightarrow>\n       x \\<in> {{[]}, UNIV - {[]}}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[]} \\<Longrightarrow>\n       x \\<in> {{[]}, UNIV - {[]}}", "assume \"x \\<in> UNIV // \\<approx>{[]}\""], ["proof (state)\nthis:\n  x \\<in> UNIV // \\<approx>{[]}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[]} \\<Longrightarrow>\n       x \\<in> {{[]}, UNIV - {[]}}", "then"], ["proof (chain)\npicking this:\n  x \\<in> UNIV // \\<approx>{[]}", "obtain y where h: \"x = {z. y \\<approx>{[]} z}\""], ["proof (prove)\nusing this:\n  x \\<in> UNIV // \\<approx>{[]}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        x = {z. y \\<approx>{[]} z} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding quotient_def Image_def"], ["proof (prove)\nusing this:\n  x \\<in> (\\<Union>x. {{y. \\<exists>x\\<in>{x}. x \\<approx>{[]} y}})\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        x = {z. y \\<approx>{[]} z} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x = {z. y \\<approx>{[]} z}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[]} \\<Longrightarrow>\n       x \\<in> {{[]}, UNIV - {[]}}", "{"], ["proof (state)\nthis:\n  x = {z. y \\<approx>{[]} z}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[]} \\<Longrightarrow>\n       x \\<in> {{[]}, UNIV - {[]}}", "assume \"y = []\""], ["proof (state)\nthis:\n  y = []\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[]} \\<Longrightarrow>\n       x \\<in> {{[]}, UNIV - {[]}}", "with h"], ["proof (chain)\npicking this:\n  x = {z. y \\<approx>{[]} z}\n  y = []", "have \"x = {[]}\""], ["proof (prove)\nusing this:\n  x = {z. y \\<approx>{[]} z}\n  y = []\n\ngoal (1 subgoal):\n 1. x = {[]}", "by (auto simp: str_eq_def)"], ["proof (state)\nthis:\n  x = {[]}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[]} \\<Longrightarrow>\n       x \\<in> {{[]}, UNIV - {[]}}", "then"], ["proof (chain)\npicking this:\n  x = {[]}", "have \"x \\<in> {{[]}, UNIV - {[]}}\""], ["proof (prove)\nusing this:\n  x = {[]}\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, UNIV - {[]}}", "by simp"], ["proof (state)\nthis:\n  x \\<in> {{[]}, UNIV - {[]}}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[]} \\<Longrightarrow>\n       x \\<in> {{[]}, UNIV - {[]}}", "}"], ["proof (state)\nthis:\n  y = [] \\<Longrightarrow> x \\<in> {{[]}, UNIV - {[]}}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[]} \\<Longrightarrow>\n       x \\<in> {{[]}, UNIV - {[]}}", "moreover"], ["proof (state)\nthis:\n  y = [] \\<Longrightarrow> x \\<in> {{[]}, UNIV - {[]}}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[]} \\<Longrightarrow>\n       x \\<in> {{[]}, UNIV - {[]}}", "{"], ["proof (state)\nthis:\n  y = [] \\<Longrightarrow> x \\<in> {{[]}, UNIV - {[]}}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[]} \\<Longrightarrow>\n       x \\<in> {{[]}, UNIV - {[]}}", "assume \"y \\<noteq> []\""], ["proof (state)\nthis:\n  y \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[]} \\<Longrightarrow>\n       x \\<in> {{[]}, UNIV - {[]}}", "with h"], ["proof (chain)\npicking this:\n  x = {z. y \\<approx>{[]} z}\n  y \\<noteq> []", "have \"x = UNIV - {[]}\""], ["proof (prove)\nusing this:\n  x = {z. y \\<approx>{[]} z}\n  y \\<noteq> []\n\ngoal (1 subgoal):\n 1. x = UNIV - {[]}", "by (auto simp: str_eq_def)"], ["proof (state)\nthis:\n  x = UNIV - {[]}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[]} \\<Longrightarrow>\n       x \\<in> {{[]}, UNIV - {[]}}", "then"], ["proof (chain)\npicking this:\n  x = UNIV - {[]}", "have \"x \\<in> {{[]}, UNIV - {[]}}\""], ["proof (prove)\nusing this:\n  x = UNIV - {[]}\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, UNIV - {[]}}", "by simp"], ["proof (state)\nthis:\n  x \\<in> {{[]}, UNIV - {[]}}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[]} \\<Longrightarrow>\n       x \\<in> {{[]}, UNIV - {[]}}", "}"], ["proof (state)\nthis:\n  y \\<noteq> [] \\<Longrightarrow> x \\<in> {{[]}, UNIV - {[]}}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[]} \\<Longrightarrow>\n       x \\<in> {{[]}, UNIV - {[]}}", "ultimately"], ["proof (chain)\npicking this:\n  y = [] \\<Longrightarrow> x \\<in> {{[]}, UNIV - {[]}}\n  y \\<noteq> [] \\<Longrightarrow> x \\<in> {{[]}, UNIV - {[]}}", "show \"x \\<in> {{[]}, UNIV - {[]}}\""], ["proof (prove)\nusing this:\n  y = [] \\<Longrightarrow> x \\<in> {{[]}, UNIV - {[]}}\n  y \\<noteq> [] \\<Longrightarrow> x \\<in> {{[]}, UNIV - {[]}}\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, UNIV - {[]}}", "by blast"], ["proof (state)\nthis:\n  x \\<in> {{[]}, UNIV - {[]}}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quot_one_finiteI [intro]:\n  shows \"finite (UNIV // \\<approx>{[]})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (UNIV // \\<approx>{[]})", "by (rule finite_subset[OF quot_one_subset]) (simp)"], ["", "lemma quot_atom_subset:\n  \"UNIV // (\\<approx>{[c]}) \\<subseteq> {{[]},{[c]}, UNIV - {[], [c]}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV // \\<approx>{[c]} \\<subseteq> {{[]}, {[c]}, UNIV - {[], [c]}}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[c]} \\<Longrightarrow>\n       x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[c]} \\<Longrightarrow>\n       x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "assume \"x \\<in> UNIV // \\<approx>{[c]}\""], ["proof (state)\nthis:\n  x \\<in> UNIV // \\<approx>{[c]}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[c]} \\<Longrightarrow>\n       x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "then"], ["proof (chain)\npicking this:\n  x \\<in> UNIV // \\<approx>{[c]}", "obtain y where h: \"x = {z. (y, z) \\<in> \\<approx>{[c]}}\""], ["proof (prove)\nusing this:\n  x \\<in> UNIV // \\<approx>{[c]}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        x = {z. y \\<approx>{[c]} z} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding quotient_def Image_def"], ["proof (prove)\nusing this:\n  x \\<in> (\\<Union>x. {{y. \\<exists>x\\<in>{x}. x \\<approx>{[c]} y}})\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        x = {z. y \\<approx>{[c]} z} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x = {z. y \\<approx>{[c]} z}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV // \\<approx>{[c]} \\<Longrightarrow>\n       x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "show \"x \\<in> {{[]},{[c]}, UNIV - {[], [c]}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "assume \"y = []\""], ["proof (state)\nthis:\n  y = []\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "hence \"x = {[]}\""], ["proof (prove)\nusing this:\n  y = []\n\ngoal (1 subgoal):\n 1. x = {[]}", "using h"], ["proof (prove)\nusing this:\n  y = []\n  x = {z. y \\<approx>{[c]} z}\n\ngoal (1 subgoal):\n 1. x = {[]}", "by (auto simp: str_eq_def)"], ["proof (state)\nthis:\n  x = {[]}\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "}"], ["proof (state)\nthis:\n  y = [] \\<Longrightarrow> x = {[]}\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "moreover"], ["proof (state)\nthis:\n  y = [] \\<Longrightarrow> x = {[]}\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "{"], ["proof (state)\nthis:\n  y = [] \\<Longrightarrow> x = {[]}\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "assume \"y = [c]\""], ["proof (state)\nthis:\n  y = [c]\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "hence \"x = {[c]}\""], ["proof (prove)\nusing this:\n  y = [c]\n\ngoal (1 subgoal):\n 1. x = {[c]}", "using h"], ["proof (prove)\nusing this:\n  y = [c]\n  x = {z. y \\<approx>{[c]} z}\n\ngoal (1 subgoal):\n 1. x = {[c]}", "by (auto dest!: spec[where x = \"[]\"] simp: str_eq_def)"], ["proof (state)\nthis:\n  x = {[c]}\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "}"], ["proof (state)\nthis:\n  y = [c] \\<Longrightarrow> x = {[c]}\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "moreover"], ["proof (state)\nthis:\n  y = [c] \\<Longrightarrow> x = {[c]}\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "{"], ["proof (state)\nthis:\n  y = [c] \\<Longrightarrow> x = {[c]}\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "assume \"y \\<noteq> []\" and \"y \\<noteq> [c]\""], ["proof (state)\nthis:\n  y \\<noteq> []\n  y \\<noteq> [c]\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "hence \"\\<forall> z. (y @ z) \\<noteq> [c]\""], ["proof (prove)\nusing this:\n  y \\<noteq> []\n  y \\<noteq> [c]\n\ngoal (1 subgoal):\n 1. \\<forall>z. y @ z \\<noteq> [c]", "by (case_tac y, auto)"], ["proof (state)\nthis:\n  \\<forall>z. y @ z \\<noteq> [c]\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "moreover"], ["proof (state)\nthis:\n  \\<forall>z. y @ z \\<noteq> [c]\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "have \"\\<And> p. (p \\<noteq> [] \\<and> p \\<noteq> [c]) = (\\<forall> q. p @ q \\<noteq> [c])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       (p \\<noteq> [] \\<and> p \\<noteq> [c]) =\n       (\\<forall>q. p @ q \\<noteq> [c])", "by (case_tac p, auto)"], ["proof (state)\nthis:\n  (?p \\<noteq> [] \\<and> ?p \\<noteq> [c]) =\n  (\\<forall>q. ?p @ q \\<noteq> [c])\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>z. y @ z \\<noteq> [c]\n  (?p \\<noteq> [] \\<and> ?p \\<noteq> [c]) =\n  (\\<forall>q. ?p @ q \\<noteq> [c])", "have \"x = UNIV - {[],[c]}\""], ["proof (prove)\nusing this:\n  \\<forall>z. y @ z \\<noteq> [c]\n  (?p \\<noteq> [] \\<and> ?p \\<noteq> [c]) =\n  (\\<forall>q. ?p @ q \\<noteq> [c])\n\ngoal (1 subgoal):\n 1. x = UNIV - {[], [c]}", "using h"], ["proof (prove)\nusing this:\n  \\<forall>z. y @ z \\<noteq> [c]\n  (?p \\<noteq> [] \\<and> ?p \\<noteq> [c]) =\n  (\\<forall>q. ?p @ q \\<noteq> [c])\n  x = {z. y \\<approx>{[c]} z}\n\ngoal (1 subgoal):\n 1. x = UNIV - {[], [c]}", "by (auto simp add: str_eq_def)"], ["proof (state)\nthis:\n  x = UNIV - {[], [c]}\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "}"], ["proof (state)\nthis:\n  \\<lbrakk>y \\<noteq> []; y \\<noteq> [c]\\<rbrakk>\n  \\<Longrightarrow> x = UNIV - {[], [c]}\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "ultimately"], ["proof (chain)\npicking this:\n  y = [] \\<Longrightarrow> x = {[]}\n  y = [c] \\<Longrightarrow> x = {[c]}\n  \\<lbrakk>y \\<noteq> []; y \\<noteq> [c]\\<rbrakk>\n  \\<Longrightarrow> x = UNIV - {[], [c]}", "show ?thesis"], ["proof (prove)\nusing this:\n  y = [] \\<Longrightarrow> x = {[]}\n  y = [c] \\<Longrightarrow> x = {[c]}\n  \\<lbrakk>y \\<noteq> []; y \\<noteq> [c]\\<rbrakk>\n  \\<Longrightarrow> x = UNIV - {[], [c]}\n\ngoal (1 subgoal):\n 1. x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}", "by blast"], ["proof (state)\nthis:\n  x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> {{[]}, {[c]}, UNIV - {[], [c]}}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quot_atom_finiteI [intro]:\n  shows \"finite (UNIV // \\<approx>{[c]})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (UNIV // \\<approx>{[c]})", "by (rule finite_subset[OF quot_atom_subset]) (simp)"], ["", "subsection \\<open>Case for @{const Plus}\\<close>"], ["", "definition \n  tag_Plus :: \"'a lang \\<Rightarrow> 'a lang \\<Rightarrow> 'a list \\<Rightarrow> ('a lang \\<times> 'a lang)\"\nwhere\n  \"tag_Plus A B \\<equiv> \\<lambda>x. (\\<approx>A `` {x}, \\<approx>B `` {x})\""], ["", "lemma quot_plus_finiteI [intro]:\n  assumes finite1: \"finite (UNIV // \\<approx>A)\"\n  and     finite2: \"finite (UNIV // \\<approx>B)\"\n  shows \"finite (UNIV // \\<approx>(A \\<union> B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (UNIV // \\<approx>(A \\<union> B))", "proof (rule_tac tag = \"tag_Plus A B\" in tag_finite_imageD)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (range (tag_Plus A B))\n 2. =tag_Plus A B= \\<subseteq> \\<approx>(A \\<union> B)", "have \"finite ((UNIV // \\<approx>A) \\<times> (UNIV // \\<approx>B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (UNIV // \\<approx>A \\<times> UNIV // \\<approx>B)", "using finite1 finite2"], ["proof (prove)\nusing this:\n  finite (UNIV // \\<approx>A)\n  finite (UNIV // \\<approx>B)\n\ngoal (1 subgoal):\n 1. finite (UNIV // \\<approx>A \\<times> UNIV // \\<approx>B)", "by auto"], ["proof (state)\nthis:\n  finite (UNIV // \\<approx>A \\<times> UNIV // \\<approx>B)\n\ngoal (2 subgoals):\n 1. finite (range (tag_Plus A B))\n 2. =tag_Plus A B= \\<subseteq> \\<approx>(A \\<union> B)", "then"], ["proof (chain)\npicking this:\n  finite (UNIV // \\<approx>A \\<times> UNIV // \\<approx>B)", "show \"finite (range (tag_Plus A B))\""], ["proof (prove)\nusing this:\n  finite (UNIV // \\<approx>A \\<times> UNIV // \\<approx>B)\n\ngoal (1 subgoal):\n 1. finite (range (tag_Plus A B))", "unfolding tag_Plus_def quotient_def"], ["proof (prove)\nusing this:\n  finite\n   ((\\<Union>x. {\\<approx>A `` {x}}) \\<times>\n    (\\<Union>x. {\\<approx>B `` {x}}))\n\ngoal (1 subgoal):\n 1. finite (range (\\<lambda>x. (\\<approx>A `` {x}, \\<approx>B `` {x})))", "by (rule rev_finite_subset) (auto)"], ["proof (state)\nthis:\n  finite (range (tag_Plus A B))\n\ngoal (1 subgoal):\n 1. =tag_Plus A B= \\<subseteq> \\<approx>(A \\<union> B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. =tag_Plus A B= \\<subseteq> \\<approx>(A \\<union> B)", "show \"=tag_Plus A B= \\<subseteq> \\<approx>(A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. =tag_Plus A B= \\<subseteq> \\<approx>(A \\<union> B)", "unfolding tag_eq_def tag_Plus_def str_eq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(x, y).\n     ({(x, y). \\<forall>z. (x @ z \\<in> A) = (y @ z \\<in> A)} `` {x},\n      {(x, y). \\<forall>z. (x @ z \\<in> B) = (y @ z \\<in> B)} `` {x}) =\n     ({(x, y). \\<forall>z. (x @ z \\<in> A) = (y @ z \\<in> A)} `` {y},\n      {(x, y). \\<forall>z. (x @ z \\<in> B) = (y @ z \\<in> B)} `` {y})}\n    \\<subseteq> {(x, y).\n                 \\<forall>z.\n                    (x @ z \\<in> A \\<union> B) = (y @ z \\<in> A \\<union> B)}", "by auto"], ["proof (state)\nthis:\n  =tag_Plus A B= \\<subseteq> \\<approx>(A \\<union> B)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Case for \\<open>Times\\<close>\\<close>"], ["", "definition\n  \"Partitions x \\<equiv> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = x}\""], ["", "lemma conc_partitions_elim:\n  assumes \"x \\<in> A \\<cdot> B\"\n  shows \"\\<exists>(u, v) \\<in> Partitions x. u \\<in> A \\<and> v \\<in> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions x. u \\<in> A \\<and> v \\<in> B", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> A \\<cdot> B\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions x. u \\<in> A \\<and> v \\<in> B", "unfolding conc_def Partitions_def"], ["proof (prove)\nusing this:\n  x \\<in> {xs @ ys |xs ys. xs \\<in> A \\<and> ys \\<in> B}\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>{(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = x}.\n       u \\<in> A \\<and> v \\<in> B", "by auto"], ["", "lemma conc_partitions_intro:\n  assumes \"(u, v) \\<in> Partitions x \\<and> u \\<in> A \\<and>  v \\<in> B\"\n  shows \"x \\<in> A \\<cdot> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> A \\<cdot> B", "using assms"], ["proof (prove)\nusing this:\n  (u, v) \\<in> Partitions x \\<and> u \\<in> A \\<and> v \\<in> B\n\ngoal (1 subgoal):\n 1. x \\<in> A \\<cdot> B", "unfolding conc_def Partitions_def"], ["proof (prove)\nusing this:\n  (u, v) \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = x} \\<and>\n  u \\<in> A \\<and> v \\<in> B\n\ngoal (1 subgoal):\n 1. x \\<in> {xs @ ys |xs ys. xs \\<in> A \\<and> ys \\<in> B}", "by auto"], ["", "lemma equiv_class_member:\n  assumes \"x \\<in> A\"\n  and \"\\<approx>A `` {x} = \\<approx>A `` {y}\" \n  shows \"y \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> A", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> A\n  \\<approx>A `` {x} = \\<approx>A `` {y}\n\ngoal (1 subgoal):\n 1. y \\<in> A", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A; x \\<approx>A y\\<rbrakk> \\<Longrightarrow> y \\<in> A", "apply(simp add: str_eq_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A;\n     \\<forall>z. (x @ z \\<in> A) = (y @ z \\<in> A)\\<rbrakk>\n    \\<Longrightarrow> y \\<in> A", "apply(metis append_Nil2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition \n  tag_Times :: \"'a lang \\<Rightarrow> 'a lang \\<Rightarrow> 'a list \\<Rightarrow> 'a lang \\<times> 'a lang set\"\nwhere\n  \"tag_Times A B \\<equiv> \\<lambda>x. (\\<approx>A `` {x}, {(\\<approx>B `` {x\\<^sub>s}) | x\\<^sub>p x\\<^sub>s. x\\<^sub>p \\<in> A \\<and> (x\\<^sub>p, x\\<^sub>s) \\<in> Partitions x})\""], ["", "lemma tag_Times_injI:\n  assumes a: \"tag_Times A B x = tag_Times A B y\"\n  and     c: \"x @ z \\<in> A \\<cdot> B\"\n  shows \"y @ z \\<in> A \\<cdot> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "from c"], ["proof (chain)\npicking this:\n  x @ z \\<in> A \\<cdot> B", "obtain u v where \n    h1: \"(u, v) \\<in> Partitions (x @ z)\" and\n    h2: \"u \\<in> A\" and\n    h3: \"v \\<in> B\""], ["proof (prove)\nusing this:\n  x @ z \\<in> A \\<cdot> B\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>(u, v) \\<in> Partitions (x @ z); u \\<in> A;\n         v \\<in> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: conc_partitions_elim)"], ["proof (state)\nthis:\n  (u, v) \\<in> Partitions (x @ z)\n  u \\<in> A\n  v \\<in> B\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "from h1"], ["proof (chain)\npicking this:\n  (u, v) \\<in> Partitions (x @ z)", "have \"x @ z = u @ v\""], ["proof (prove)\nusing this:\n  (u, v) \\<in> Partitions (x @ z)\n\ngoal (1 subgoal):\n 1. x @ z = u @ v", "unfolding Partitions_def"], ["proof (prove)\nusing this:\n  (u, v) \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = x @ z}\n\ngoal (1 subgoal):\n 1. x @ z = u @ v", "by simp"], ["proof (state)\nthis:\n  x @ z = u @ v\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "then"], ["proof (chain)\npicking this:\n  x @ z = u @ v", "obtain us \n    where \"(x = u @ us \\<and> us @ z = v) \\<or> (x @ us = u \\<and> z = us @ v)\""], ["proof (prove)\nusing this:\n  x @ z = u @ v\n\ngoal (1 subgoal):\n 1. (\\<And>us.\n        x = u @ us \\<and> us @ z = v \\<or>\n        x @ us = u \\<and> z = us @ v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: append_eq_append_conv2)"], ["proof (state)\nthis:\n  x = u @ us \\<and> us @ z = v \\<or> x @ us = u \\<and> z = us @ v\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "moreover"], ["proof (state)\nthis:\n  x = u @ us \\<and> us @ z = v \\<or> x @ us = u \\<and> z = us @ v\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "{"], ["proof (state)\nthis:\n  x = u @ us \\<and> us @ z = v \\<or> x @ us = u \\<and> z = us @ v\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "assume eq: \"x = u @ us\" \"us @ z = v\""], ["proof (state)\nthis:\n  x = u @ us\n  us @ z = v\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "have \"(\\<approx>B `` {us}) \\<in> snd (tag_Times A B x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<approx>B `` {us} \\<in> snd (tag_Times A B x)", "unfolding Partitions_def tag_Times_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<approx>B `` {us}\n    \\<in> snd (\\<approx>A `` {x},\n               {uu_.\n                \\<exists>x\\<^sub>p x\\<^sub>s.\n                   uu_ = \\<approx>B `` {x\\<^sub>s} \\<and>\n                   x\\<^sub>p \\<in> A \\<and>\n                   (x\\<^sub>p, x\\<^sub>s)\n                   \\<in> {(x\\<^sub>p, x\\<^sub>s).\n                          x\\<^sub>p @ x\\<^sub>s = x}})", "using h2 eq"], ["proof (prove)\nusing this:\n  u \\<in> A\n  x = u @ us\n  us @ z = v\n\ngoal (1 subgoal):\n 1. \\<approx>B `` {us}\n    \\<in> snd (\\<approx>A `` {x},\n               {uu_.\n                \\<exists>x\\<^sub>p x\\<^sub>s.\n                   uu_ = \\<approx>B `` {x\\<^sub>s} \\<and>\n                   x\\<^sub>p \\<in> A \\<and>\n                   (x\\<^sub>p, x\\<^sub>s)\n                   \\<in> {(x\\<^sub>p, x\\<^sub>s).\n                          x\\<^sub>p @ x\\<^sub>s = x}})", "by (auto simp add: str_eq_def)"], ["proof (state)\nthis:\n  \\<approx>B `` {us} \\<in> snd (tag_Times A B x)\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "then"], ["proof (chain)\npicking this:\n  \\<approx>B `` {us} \\<in> snd (tag_Times A B x)", "have \"(\\<approx>B `` {us}) \\<in> snd (tag_Times A B y)\""], ["proof (prove)\nusing this:\n  \\<approx>B `` {us} \\<in> snd (tag_Times A B x)\n\ngoal (1 subgoal):\n 1. \\<approx>B `` {us} \\<in> snd (tag_Times A B y)", "using a"], ["proof (prove)\nusing this:\n  \\<approx>B `` {us} \\<in> snd (tag_Times A B x)\n  tag_Times A B x = tag_Times A B y\n\ngoal (1 subgoal):\n 1. \\<approx>B `` {us} \\<in> snd (tag_Times A B y)", "by simp"], ["proof (state)\nthis:\n  \\<approx>B `` {us} \\<in> snd (tag_Times A B y)\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "then"], ["proof (chain)\npicking this:\n  \\<approx>B `` {us} \\<in> snd (tag_Times A B y)", "obtain u' us' where\n      q1: \"u' \\<in> A\" and\n      q2: \"\\<approx>B `` {us} = \\<approx>B `` {us'}\" and\n      q3: \"(u', us') \\<in> Partitions y\""], ["proof (prove)\nusing this:\n  \\<approx>B `` {us} \\<in> snd (tag_Times A B y)\n\ngoal (1 subgoal):\n 1. (\\<And>u' us'.\n        \\<lbrakk>u' \\<in> A; \\<approx>B `` {us} = \\<approx>B `` {us'};\n         (u', us') \\<in> Partitions y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding tag_Times_def"], ["proof (prove)\nusing this:\n  \\<approx>B `` {us}\n  \\<in> snd (\\<approx>A `` {y},\n             {uu_.\n              \\<exists>x\\<^sub>p x\\<^sub>s.\n                 uu_ = \\<approx>B `` {x\\<^sub>s} \\<and>\n                 x\\<^sub>p \\<in> A \\<and>\n                 (x\\<^sub>p, x\\<^sub>s) \\<in> Partitions y})\n\ngoal (1 subgoal):\n 1. (\\<And>u' us'.\n        \\<lbrakk>u' \\<in> A; \\<approx>B `` {us} = \\<approx>B `` {us'};\n         (u', us') \\<in> Partitions y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u' \\<in> A\n  \\<approx>B `` {us} = \\<approx>B `` {us'}\n  (u', us') \\<in> Partitions y\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "from q2 h3 eq"], ["proof (chain)\npicking this:\n  \\<approx>B `` {us} = \\<approx>B `` {us'}\n  v \\<in> B\n  x = u @ us\n  us @ z = v", "have \"us' @ z \\<in> B\""], ["proof (prove)\nusing this:\n  \\<approx>B `` {us} = \\<approx>B `` {us'}\n  v \\<in> B\n  x = u @ us\n  us @ z = v\n\ngoal (1 subgoal):\n 1. us' @ z \\<in> B", "unfolding Image_def str_eq_def"], ["proof (prove)\nusing this:\n  {y. \\<exists>x\\<in>{us}.\n         (x, y)\n         \\<in> {(x, y). \\<forall>z. (x @ z \\<in> B) = (y @ z \\<in> B)}} =\n  {y. \\<exists>x\\<in>{us'}.\n         (x, y)\n         \\<in> {(x, y). \\<forall>z. (x @ z \\<in> B) = (y @ z \\<in> B)}}\n  v \\<in> B\n  x = u @ us\n  us @ z = v\n\ngoal (1 subgoal):\n 1. us' @ z \\<in> B", "by auto"], ["proof (state)\nthis:\n  us' @ z \\<in> B\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "then"], ["proof (chain)\npicking this:\n  us' @ z \\<in> B", "have \"y @ z \\<in> A \\<cdot> B\""], ["proof (prove)\nusing this:\n  us' @ z \\<in> B\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "using q1 q3"], ["proof (prove)\nusing this:\n  us' @ z \\<in> B\n  u' \\<in> A\n  (u', us') \\<in> Partitions y\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "unfolding Partitions_def"], ["proof (prove)\nusing this:\n  us' @ z \\<in> B\n  u' \\<in> A\n  (u', us') \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = y}\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "by auto"], ["proof (state)\nthis:\n  y @ z \\<in> A \\<cdot> B\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "}"], ["proof (state)\nthis:\n  \\<lbrakk>x = u @ us; us @ z = v\\<rbrakk>\n  \\<Longrightarrow> y @ z \\<in> A \\<cdot> B\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>x = u @ us; us @ z = v\\<rbrakk>\n  \\<Longrightarrow> y @ z \\<in> A \\<cdot> B\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "{"], ["proof (state)\nthis:\n  \\<lbrakk>x = u @ us; us @ z = v\\<rbrakk>\n  \\<Longrightarrow> y @ z \\<in> A \\<cdot> B\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "assume eq: \"x @ us = u\" \"z = us @ v\""], ["proof (state)\nthis:\n  x @ us = u\n  z = us @ v\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "have \"(\\<approx>A `` {x}) = fst (tag_Times A B x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<approx>A `` {x} = fst (tag_Times A B x)", "by (simp add: tag_Times_def)"], ["proof (state)\nthis:\n  \\<approx>A `` {x} = fst (tag_Times A B x)\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "then"], ["proof (chain)\npicking this:\n  \\<approx>A `` {x} = fst (tag_Times A B x)", "have \"(\\<approx>A `` {x}) = fst (tag_Times A B y)\""], ["proof (prove)\nusing this:\n  \\<approx>A `` {x} = fst (tag_Times A B x)\n\ngoal (1 subgoal):\n 1. \\<approx>A `` {x} = fst (tag_Times A B y)", "using a"], ["proof (prove)\nusing this:\n  \\<approx>A `` {x} = fst (tag_Times A B x)\n  tag_Times A B x = tag_Times A B y\n\ngoal (1 subgoal):\n 1. \\<approx>A `` {x} = fst (tag_Times A B y)", "by simp"], ["proof (state)\nthis:\n  \\<approx>A `` {x} = fst (tag_Times A B y)\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "then"], ["proof (chain)\npicking this:\n  \\<approx>A `` {x} = fst (tag_Times A B y)", "have \"\\<approx>A `` {x} = \\<approx>A `` {y}\""], ["proof (prove)\nusing this:\n  \\<approx>A `` {x} = fst (tag_Times A B y)\n\ngoal (1 subgoal):\n 1. \\<approx>A `` {x} = \\<approx>A `` {y}", "by (simp add: tag_Times_def)"], ["proof (state)\nthis:\n  \\<approx>A `` {x} = \\<approx>A `` {y}\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "moreover"], ["proof (state)\nthis:\n  \\<approx>A `` {x} = \\<approx>A `` {y}\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "have \"x @ us \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x @ us \\<in> A", "using h2 eq"], ["proof (prove)\nusing this:\n  u \\<in> A\n  x @ us = u\n  z = us @ v\n\ngoal (1 subgoal):\n 1. x @ us \\<in> A", "by simp"], ["proof (state)\nthis:\n  x @ us \\<in> A\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "ultimately"], ["proof (chain)\npicking this:\n  \\<approx>A `` {x} = \\<approx>A `` {y}\n  x @ us \\<in> A", "have \"y @ us \\<in> A\""], ["proof (prove)\nusing this:\n  \\<approx>A `` {x} = \\<approx>A `` {y}\n  x @ us \\<in> A\n\ngoal (1 subgoal):\n 1. y @ us \\<in> A", "using equiv_class_member"], ["proof (prove)\nusing this:\n  \\<approx>A `` {x} = \\<approx>A `` {y}\n  x @ us \\<in> A\n  \\<lbrakk>?x \\<in> ?A; \\<approx>?A `` {?x} = \\<approx>?A `` {?y}\\<rbrakk>\n  \\<Longrightarrow> ?y \\<in> ?A\n\ngoal (1 subgoal):\n 1. y @ us \\<in> A", "unfolding Image_def str_eq_def"], ["proof (prove)\nusing this:\n  {y. \\<exists>x\\<in>{x}.\n         (x, y)\n         \\<in> {(x, y). \\<forall>z. (x @ z \\<in> A) = (y @ z \\<in> A)}} =\n  {ya.\n   \\<exists>x\\<in>{y}.\n      (x, ya) \\<in> {(x, y). \\<forall>z. (x @ z \\<in> A) = (y @ z \\<in> A)}}\n  x @ us \\<in> A\n  \\<lbrakk>?x \\<in> ?A;\n   {y. \\<exists>x\\<in>{?x}.\n          (x, y)\n          \\<in> {(x, y). \\<forall>z. (x @ z \\<in> ?A) = (y @ z \\<in> ?A)}} =\n   {y. \\<exists>x\\<in>{?y}.\n          (x, y)\n          \\<in> {(x, y).\n                 \\<forall>z. (x @ z \\<in> ?A) = (y @ z \\<in> ?A)}}\\<rbrakk>\n  \\<Longrightarrow> ?y \\<in> ?A\n\ngoal (1 subgoal):\n 1. y @ us \\<in> A", "by blast"], ["proof (state)\nthis:\n  y @ us \\<in> A\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "then"], ["proof (chain)\npicking this:\n  y @ us \\<in> A", "have \"(y @ us) @ v \\<in> A \\<cdot> B\""], ["proof (prove)\nusing this:\n  y @ us \\<in> A\n\ngoal (1 subgoal):\n 1. (y @ us) @ v \\<in> A \\<cdot> B", "using h3"], ["proof (prove)\nusing this:\n  y @ us \\<in> A\n  v \\<in> B\n\ngoal (1 subgoal):\n 1. (y @ us) @ v \\<in> A \\<cdot> B", "unfolding conc_def"], ["proof (prove)\nusing this:\n  y @ us \\<in> A\n  v \\<in> B\n\ngoal (1 subgoal):\n 1. (y @ us) @ v \\<in> {xs @ ys |xs ys. xs \\<in> A \\<and> ys \\<in> B}", "by blast"], ["proof (state)\nthis:\n  (y @ us) @ v \\<in> A \\<cdot> B\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "then"], ["proof (chain)\npicking this:\n  (y @ us) @ v \\<in> A \\<cdot> B", "have \"y @ z \\<in> A \\<cdot> B\""], ["proof (prove)\nusing this:\n  (y @ us) @ v \\<in> A \\<cdot> B\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "using eq"], ["proof (prove)\nusing this:\n  (y @ us) @ v \\<in> A \\<cdot> B\n  x @ us = u\n  z = us @ v\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "by simp"], ["proof (state)\nthis:\n  y @ z \\<in> A \\<cdot> B\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "}"], ["proof (state)\nthis:\n  \\<lbrakk>x @ us = u; z = us @ v\\<rbrakk>\n  \\<Longrightarrow> y @ z \\<in> A \\<cdot> B\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "ultimately"], ["proof (chain)\npicking this:\n  x = u @ us \\<and> us @ z = v \\<or> x @ us = u \\<and> z = us @ v\n  \\<lbrakk>x = u @ us; us @ z = v\\<rbrakk>\n  \\<Longrightarrow> y @ z \\<in> A \\<cdot> B\n  \\<lbrakk>x @ us = u; z = us @ v\\<rbrakk>\n  \\<Longrightarrow> y @ z \\<in> A \\<cdot> B", "show \"y @ z \\<in> A \\<cdot> B\""], ["proof (prove)\nusing this:\n  x = u @ us \\<and> us @ z = v \\<or> x @ us = u \\<and> z = us @ v\n  \\<lbrakk>x = u @ us; us @ z = v\\<rbrakk>\n  \\<Longrightarrow> y @ z \\<in> A \\<cdot> B\n  \\<lbrakk>x @ us = u; z = us @ v\\<rbrakk>\n  \\<Longrightarrow> y @ z \\<in> A \\<cdot> B\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A \\<cdot> B", "by blast"], ["proof (state)\nthis:\n  y @ z \\<in> A \\<cdot> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quot_conc_finiteI [intro]:\n  assumes fin1: \"finite (UNIV // \\<approx>A)\" \n  and     fin2: \"finite (UNIV // \\<approx>B)\" \n  shows \"finite (UNIV // \\<approx>(A \\<cdot> B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (UNIV // \\<approx>A \\<cdot> B)", "proof (rule_tac tag = \"tag_Times A B\" in tag_finite_imageD)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (range (tag_Times A B))\n 2. =tag_Times A B= \\<subseteq> \\<approx>A \\<cdot> B", "have \"\\<And>x y z. \\<lbrakk>tag_Times A B x = tag_Times A B y; x @ z \\<in> A \\<cdot> B\\<rbrakk> \\<Longrightarrow> y @ z \\<in> A \\<cdot> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>tag_Times A B x = tag_Times A B y;\n        x @ z \\<in> A \\<cdot> B\\<rbrakk>\n       \\<Longrightarrow> y @ z \\<in> A \\<cdot> B", "by (rule tag_Times_injI)\n       (auto simp add: tag_Times_def tag_eq_def)"], ["proof (state)\nthis:\n  \\<lbrakk>tag_Times A B ?x = tag_Times A B ?y;\n   ?x @ ?z \\<in> A \\<cdot> B\\<rbrakk>\n  \\<Longrightarrow> ?y @ ?z \\<in> A \\<cdot> B\n\ngoal (2 subgoals):\n 1. finite (range (tag_Times A B))\n 2. =tag_Times A B= \\<subseteq> \\<approx>A \\<cdot> B", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>tag_Times A B ?x = tag_Times A B ?y;\n   ?x @ ?z \\<in> A \\<cdot> B\\<rbrakk>\n  \\<Longrightarrow> ?y @ ?z \\<in> A \\<cdot> B", "show \"=tag_Times A B= \\<subseteq> \\<approx>(A \\<cdot> B)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>tag_Times A B ?x = tag_Times A B ?y;\n   ?x @ ?z \\<in> A \\<cdot> B\\<rbrakk>\n  \\<Longrightarrow> ?y @ ?z \\<in> A \\<cdot> B\n\ngoal (1 subgoal):\n 1. =tag_Times A B= \\<subseteq> \\<approx>A \\<cdot> B", "by (rule refined_intro)\n       (auto simp add: tag_eq_def)"], ["proof (state)\nthis:\n  =tag_Times A B= \\<subseteq> \\<approx>A \\<cdot> B\n\ngoal (1 subgoal):\n 1. finite (range (tag_Times A B))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (range (tag_Times A B))", "have *: \"finite ((UNIV // \\<approx>A) \\<times> (Pow (UNIV // \\<approx>B)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (UNIV // \\<approx>A \\<times> Pow (UNIV // \\<approx>B))", "using fin1 fin2"], ["proof (prove)\nusing this:\n  finite (UNIV // \\<approx>A)\n  finite (UNIV // \\<approx>B)\n\ngoal (1 subgoal):\n 1. finite (UNIV // \\<approx>A \\<times> Pow (UNIV // \\<approx>B))", "by auto"], ["proof (state)\nthis:\n  finite (UNIV // \\<approx>A \\<times> Pow (UNIV // \\<approx>B))\n\ngoal (1 subgoal):\n 1. finite (range (tag_Times A B))", "show \"finite (range (tag_Times A B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range (tag_Times A B))", "unfolding tag_Times_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     (range\n       (\\<lambda>x.\n           (\\<approx>A `` {x},\n            {uu_.\n             \\<exists>x\\<^sub>p x\\<^sub>s.\n                uu_ = \\<approx>B `` {x\\<^sub>s} \\<and>\n                x\\<^sub>p \\<in> A \\<and>\n                (x\\<^sub>p, x\\<^sub>s) \\<in> Partitions x})))", "apply(rule finite_subset[OF _ *])"], ["proof (prove)\ngoal (1 subgoal):\n 1. range\n     (\\<lambda>x.\n         (\\<approx>A `` {x},\n          {uu_.\n           \\<exists>x\\<^sub>p x\\<^sub>s.\n              uu_ = \\<approx>B `` {x\\<^sub>s} \\<and>\n              x\\<^sub>p \\<in> A \\<and>\n              (x\\<^sub>p, x\\<^sub>s) \\<in> Partitions x}))\n    \\<subseteq> UNIV // \\<approx>A \\<times> Pow (UNIV // \\<approx>B)", "unfolding quotient_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. range\n     (\\<lambda>x.\n         (\\<approx>A `` {x},\n          {uu_.\n           \\<exists>x\\<^sub>p x\\<^sub>s.\n              uu_ = \\<approx>B `` {x\\<^sub>s} \\<and>\n              x\\<^sub>p \\<in> A \\<and>\n              (x\\<^sub>p, x\\<^sub>s) \\<in> Partitions x}))\n    \\<subseteq> (\\<Union>x. {\\<approx>A `` {x}}) \\<times>\n                Pow (\\<Union>x. {\\<approx>B `` {x}})", "by auto"], ["proof (state)\nthis:\n  finite (range (tag_Times A B))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Case for @{const \"Star\"}\\<close>"], ["", "lemma star_partitions_elim:\n  assumes \"x @ z \\<in> A\\<star>\" \"x \\<noteq> []\"\n  shows \"\\<exists>(u, v) \\<in> Partitions (x @ z). strict_prefix u x \\<and> u \\<in> A\\<star> \\<and> v \\<in> A\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions (x @ z).\n       strict_prefix u x \\<and> u \\<in> A\\<star> \\<and> v \\<in> A\\<star>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions (x @ z).\n       strict_prefix u x \\<and> u \\<in> A\\<star> \\<and> v \\<in> A\\<star>", "have \"([], x @ z) \\<in> Partitions (x @ z)\" \"strict_prefix [] x\" \"[] \\<in> A\\<star>\" \"x @ z \\<in> A\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (([], x @ z) \\<in> Partitions (x @ z) &&& strict_prefix [] x) &&&\n    [] \\<in> A\\<star> &&& x @ z \\<in> A\\<star>", "using assms"], ["proof (prove)\nusing this:\n  x @ z \\<in> A\\<star>\n  x \\<noteq> []\n\ngoal (1 subgoal):\n 1. (([], x @ z) \\<in> Partitions (x @ z) &&& strict_prefix [] x) &&&\n    [] \\<in> A\\<star> &&& x @ z \\<in> A\\<star>", "by (auto simp add: Partitions_def strict_prefix_def)"], ["proof (state)\nthis:\n  ([], x @ z) \\<in> Partitions (x @ z)\n  strict_prefix [] x\n  [] \\<in> A\\<star>\n  x @ z \\<in> A\\<star>\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions (x @ z).\n       strict_prefix u x \\<and> u \\<in> A\\<star> \\<and> v \\<in> A\\<star>", "then"], ["proof (chain)\npicking this:\n  ([], x @ z) \\<in> Partitions (x @ z)\n  strict_prefix [] x\n  [] \\<in> A\\<star>\n  x @ z \\<in> A\\<star>", "show \"\\<exists>(u, v) \\<in> Partitions (x @ z). strict_prefix u x \\<and> u \\<in> A\\<star> \\<and> v \\<in> A\\<star>\""], ["proof (prove)\nusing this:\n  ([], x @ z) \\<in> Partitions (x @ z)\n  strict_prefix [] x\n  [] \\<in> A\\<star>\n  x @ z \\<in> A\\<star>\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions (x @ z).\n       strict_prefix u x \\<and> u \\<in> A\\<star> \\<and> v \\<in> A\\<star>", "by blast"], ["proof (state)\nthis:\n  \\<exists>(u, v)\\<in>Partitions (x @ z).\n     strict_prefix u x \\<and> u \\<in> A\\<star> \\<and> v \\<in> A\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_set_has_max2: \n  \"\\<lbrakk>finite A; A \\<noteq> {}\\<rbrakk> \\<Longrightarrow> \\<exists> max \\<in> A. \\<forall> a \\<in> A. length a \\<le> length max\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>max\\<in>A.\n                         \\<forall>a\\<in>A. length a \\<le> length max", "apply(induct rule:finite.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. {} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>max\\<in>{}. \\<forall>a\\<in>{}. length a \\<le> length max\n 2. \\<And>A a.\n       \\<lbrakk>finite A;\n        A \\<noteq> {} \\<Longrightarrow>\n        \\<exists>max\\<in>A. \\<forall>a\\<in>A. length a \\<le> length max;\n        insert a A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>max\\<in>insert a A.\n                            \\<forall>a\\<in>insert a A.\n                               length a \\<le> length max", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        A \\<noteq> {} \\<Longrightarrow>\n        \\<exists>max\\<in>A. \\<forall>a\\<in>A. length a \\<le> length max;\n        insert a A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>max\\<in>insert a A.\n                            \\<forall>a\\<in>insert a A.\n                               length a \\<le> length max", "by (metis (no_types) all_not_in_conv insert_iff linorder_le_cases order_trans)"], ["", "lemma finite_strict_prefix_set: \n  shows \"finite {xa. strict_prefix xa (x::'a list)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {xa. strict_prefix xa x}", "apply (induct x rule:rev_induct, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       finite {xa. strict_prefix xa xs} \\<Longrightarrow>\n       finite {xa. strict_prefix xa (xs @ [x])}", "apply (subgoal_tac \"{xa. strict_prefix xa (xs @ [x])} = {xa. strict_prefix xa xs} \\<union> {xs}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xs.\n       \\<lbrakk>finite {xa. strict_prefix xa xs};\n        {xa. strict_prefix xa (xs @ [x])} =\n        {xa. strict_prefix xa xs} \\<union> {xs}\\<rbrakk>\n       \\<Longrightarrow> finite {xa. strict_prefix xa (xs @ [x])}\n 2. \\<And>x xs.\n       finite {xa. strict_prefix xa xs} \\<Longrightarrow>\n       {xa. strict_prefix xa (xs @ [x])} =\n       {xa. strict_prefix xa xs} \\<union> {xs}", "by (auto simp:strict_prefix_def)"], ["", "lemma append_eq_cases:\n  assumes a: \"x @ y = m @ n\" \"m \\<noteq> []\"  \n  shows \"prefix x m \\<or> strict_prefix m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix x m \\<or> strict_prefix m x", "unfolding prefix_def strict_prefix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>zs. m = x @ zs) \\<or>\n    (\\<exists>zs. x = m @ zs) \\<and> m \\<noteq> x", "using a"], ["proof (prove)\nusing this:\n  x @ y = m @ n\n  m \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<exists>zs. m = x @ zs) \\<or>\n    (\\<exists>zs. x = m @ zs) \\<and> m \\<noteq> x", "by (auto simp add: append_eq_append_conv2)"], ["", "lemma star_spartitions_elim2:\n  assumes a: \"x @ z \\<in> A\\<star>\" \n  and     b: \"x \\<noteq> []\"\n  shows \"\\<exists>(u, v) \\<in> Partitions x. \\<exists> (u', v') \\<in> Partitions z. strict_prefix u x \\<and> u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions x.\n       \\<exists>(u', v')\\<in>Partitions z.\n          strict_prefix u x \\<and>\n          u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions x.\n       \\<exists>(u', v')\\<in>Partitions z.\n          strict_prefix u x \\<and>\n          u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>", "define S where \"S = {u | u v. (u, v) \\<in> Partitions x \\<and> strict_prefix u x \\<and> u \\<in> A\\<star> \\<and> v @ z \\<in> A\\<star>}\""], ["proof (state)\nthis:\n  S =\n  {uu_.\n   \\<exists>u v.\n      uu_ = u \\<and>\n      (u, v) \\<in> Partitions x \\<and>\n      strict_prefix u x \\<and> u \\<in> A\\<star> \\<and> v @ z \\<in> A\\<star>}\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions x.\n       \\<exists>(u', v')\\<in>Partitions z.\n          strict_prefix u x \\<and>\n          u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>", "have \"finite {u. strict_prefix u x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {u. strict_prefix u x}", "by (rule finite_strict_prefix_set)"], ["proof (state)\nthis:\n  finite {u. strict_prefix u x}\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions x.\n       \\<exists>(u', v')\\<in>Partitions z.\n          strict_prefix u x \\<and>\n          u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>", "then"], ["proof (chain)\npicking this:\n  finite {u. strict_prefix u x}", "have \"finite S\""], ["proof (prove)\nusing this:\n  finite {u. strict_prefix u x}\n\ngoal (1 subgoal):\n 1. finite S", "unfolding S_def"], ["proof (prove)\nusing this:\n  finite {u. strict_prefix u x}\n\ngoal (1 subgoal):\n 1. finite\n     {uu_.\n      \\<exists>u v.\n         uu_ = u \\<and>\n         (u, v) \\<in> Partitions x \\<and>\n         strict_prefix u x \\<and>\n         u \\<in> A\\<star> \\<and> v @ z \\<in> A\\<star>}", "by (rule rev_finite_subset) (auto)"], ["proof (state)\nthis:\n  finite S\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions x.\n       \\<exists>(u', v')\\<in>Partitions z.\n          strict_prefix u x \\<and>\n          u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>", "moreover"], ["proof (state)\nthis:\n  finite S\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions x.\n       \\<exists>(u', v')\\<in>Partitions z.\n          strict_prefix u x \\<and>\n          u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>", "have \"S \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<noteq> {}", "using a b"], ["proof (prove)\nusing this:\n  x @ z \\<in> A\\<star>\n  x \\<noteq> []\n\ngoal (1 subgoal):\n 1. S \\<noteq> {}", "unfolding S_def Partitions_def"], ["proof (prove)\nusing this:\n  x @ z \\<in> A\\<star>\n  x \\<noteq> []\n\ngoal (1 subgoal):\n 1. {uu_.\n     \\<exists>u v.\n        uu_ = u \\<and>\n        (u, v)\n        \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = x} \\<and>\n        strict_prefix u x \\<and>\n        u \\<in> A\\<star> \\<and> v @ z \\<in> A\\<star>} \\<noteq>\n    {}", "by (auto simp: strict_prefix_def)"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions x.\n       \\<exists>(u', v')\\<in>Partitions z.\n          strict_prefix u x \\<and>\n          u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>", "ultimately"], ["proof (chain)\npicking this:\n  finite S\n  S \\<noteq> {}", "have \"\\<exists> u_max \\<in> S. \\<forall> u \\<in> S. length u \\<le> length u_max\""], ["proof (prove)\nusing this:\n  finite S\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>u_max\\<in>S. \\<forall>u\\<in>S. length u \\<le> length u_max", "using finite_set_has_max2"], ["proof (prove)\nusing this:\n  finite S\n  S \\<noteq> {}\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>max\\<in>?A.\n                       \\<forall>a\\<in>?A. length a \\<le> length max\n\ngoal (1 subgoal):\n 1. \\<exists>u_max\\<in>S. \\<forall>u\\<in>S. length u \\<le> length u_max", "by blast"], ["proof (state)\nthis:\n  \\<exists>u_max\\<in>S. \\<forall>u\\<in>S. length u \\<le> length u_max\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions x.\n       \\<exists>(u', v')\\<in>Partitions z.\n          strict_prefix u x \\<and>\n          u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>", "then"], ["proof (chain)\npicking this:\n  \\<exists>u_max\\<in>S. \\<forall>u\\<in>S. length u \\<le> length u_max", "obtain u_max v \n    where h0: \"(u_max, v) \\<in> Partitions x\"\n    and h1: \"strict_prefix u_max x\" \n    and h2: \"u_max \\<in> A\\<star>\" \n    and h3: \"v @ z \\<in> A\\<star>\"  \n    and h4: \"\\<forall> u v. (u, v) \\<in> Partitions x \\<and> strict_prefix u x \\<and> u \\<in> A\\<star> \\<and> v @ z \\<in> A\\<star> \\<longrightarrow> length u \\<le> length u_max\""], ["proof (prove)\nusing this:\n  \\<exists>u_max\\<in>S. \\<forall>u\\<in>S. length u \\<le> length u_max\n\ngoal (1 subgoal):\n 1. (\\<And>u_max v.\n        \\<lbrakk>(u_max, v) \\<in> Partitions x; strict_prefix u_max x;\n         u_max \\<in> A\\<star>; v @ z \\<in> A\\<star>;\n         \\<forall>u v.\n            (u, v) \\<in> Partitions x \\<and>\n            strict_prefix u x \\<and>\n            u \\<in> A\\<star> \\<and> v @ z \\<in> A\\<star> \\<longrightarrow>\n            length u \\<le> length u_max\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding S_def Partitions_def"], ["proof (prove)\nusing this:\n  \\<exists>u_max\n           \\<in>{uu_.\n                 \\<exists>u v.\n                    uu_ = u \\<and>\n                    (u, v)\n                    \\<in> {(x\\<^sub>p, x\\<^sub>s).\n                           x\\<^sub>p @ x\\<^sub>s = x} \\<and>\n                    strict_prefix u x \\<and>\n                    u \\<in> A\\<star> \\<and> v @ z \\<in> A\\<star>}.\n     \\<forall>u\\<in>{uu_.\n                     \\<exists>u v.\n                        uu_ = u \\<and>\n                        (u, v)\n                        \\<in> {(x\\<^sub>p, x\\<^sub>s).\n                               x\\<^sub>p @ x\\<^sub>s = x} \\<and>\n                        strict_prefix u x \\<and>\n                        u \\<in> A\\<star> \\<and> v @ z \\<in> A\\<star>}.\n        length u \\<le> length u_max\n\ngoal (1 subgoal):\n 1. (\\<And>u_max v.\n        \\<lbrakk>(u_max, v)\n                 \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = x};\n         strict_prefix u_max x; u_max \\<in> A\\<star>; v @ z \\<in> A\\<star>;\n         \\<forall>u v.\n            (u, v)\n            \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = x} \\<and>\n            strict_prefix u x \\<and>\n            u \\<in> A\\<star> \\<and> v @ z \\<in> A\\<star> \\<longrightarrow>\n            length u \\<le> length u_max\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (u_max, v) \\<in> Partitions x\n  strict_prefix u_max x\n  u_max \\<in> A\\<star>\n  v @ z \\<in> A\\<star>\n  \\<forall>u v.\n     (u, v) \\<in> Partitions x \\<and>\n     strict_prefix u x \\<and>\n     u \\<in> A\\<star> \\<and> v @ z \\<in> A\\<star> \\<longrightarrow>\n     length u \\<le> length u_max\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions x.\n       \\<exists>(u', v')\\<in>Partitions z.\n          strict_prefix u x \\<and>\n          u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>", "have q: \"v \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<noteq> []", "using h0 h1 b"], ["proof (prove)\nusing this:\n  (u_max, v) \\<in> Partitions x\n  strict_prefix u_max x\n  x \\<noteq> []\n\ngoal (1 subgoal):\n 1. v \\<noteq> []", "unfolding Partitions_def"], ["proof (prove)\nusing this:\n  (u_max, v) \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = x}\n  strict_prefix u_max x\n  x \\<noteq> []\n\ngoal (1 subgoal):\n 1. v \\<noteq> []", "by auto"], ["proof (state)\nthis:\n  v \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions x.\n       \\<exists>(u', v')\\<in>Partitions z.\n          strict_prefix u x \\<and>\n          u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>", "from h3"], ["proof (chain)\npicking this:\n  v @ z \\<in> A\\<star>", "obtain a b\n    where i1: \"(a, b) \\<in> Partitions (v @ z)\"\n    and   i2: \"a \\<in> A\"\n    and   i3: \"b \\<in> A\\<star>\"\n    and   i4: \"a \\<noteq> []\""], ["proof (prove)\nusing this:\n  v @ z \\<in> A\\<star>\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>(a, b) \\<in> Partitions (v @ z); a \\<in> A;\n         b \\<in> A\\<star>; a \\<noteq> []\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Partitions_def"], ["proof (prove)\nusing this:\n  v @ z \\<in> A\\<star>\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>(a, b)\n                 \\<in> {(x\\<^sub>p, x\\<^sub>s).\n                        x\\<^sub>p @ x\\<^sub>s = v @ z};\n         a \\<in> A; b \\<in> A\\<star>; a \\<noteq> []\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using q"], ["proof (prove)\nusing this:\n  v @ z \\<in> A\\<star>\n  v \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>(a, b)\n                 \\<in> {(x\\<^sub>p, x\\<^sub>s).\n                        x\\<^sub>p @ x\\<^sub>s = v @ z};\n         a \\<in> A; b \\<in> A\\<star>; a \\<noteq> []\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: star_decom)"], ["proof (state)\nthis:\n  (a, b) \\<in> Partitions (v @ z)\n  a \\<in> A\n  b \\<in> A\\<star>\n  a \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions x.\n       \\<exists>(u', v')\\<in>Partitions z.\n          strict_prefix u x \\<and>\n          u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>", "have \"prefix v a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix v a", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> prefix v a \\<Longrightarrow> False", "assume a: \"\\<not>(prefix v a)\""], ["proof (state)\nthis:\n  \\<not> prefix v a\n\ngoal (1 subgoal):\n 1. \\<not> prefix v a \\<Longrightarrow> False", "from i1"], ["proof (chain)\npicking this:\n  (a, b) \\<in> Partitions (v @ z)", "have i1': \"a @ b = v @ z\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> Partitions (v @ z)\n\ngoal (1 subgoal):\n 1. a @ b = v @ z", "unfolding Partitions_def"], ["proof (prove)\nusing this:\n  (a, b) \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = v @ z}\n\ngoal (1 subgoal):\n 1. a @ b = v @ z", "by simp"], ["proof (state)\nthis:\n  a @ b = v @ z\n\ngoal (1 subgoal):\n 1. \\<not> prefix v a \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  a @ b = v @ z", "have \"prefix a v \\<or> strict_prefix v a\""], ["proof (prove)\nusing this:\n  a @ b = v @ z\n\ngoal (1 subgoal):\n 1. prefix a v \\<or> strict_prefix v a", "using append_eq_cases q"], ["proof (prove)\nusing this:\n  a @ b = v @ z\n  \\<lbrakk>?x @ ?y = ?m @ ?n; ?m \\<noteq> []\\<rbrakk>\n  \\<Longrightarrow> prefix ?x ?m \\<or> strict_prefix ?m ?x\n  v \\<noteq> []\n\ngoal (1 subgoal):\n 1. prefix a v \\<or> strict_prefix v a", "by blast"], ["proof (state)\nthis:\n  prefix a v \\<or> strict_prefix v a\n\ngoal (1 subgoal):\n 1. \\<not> prefix v a \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  prefix a v \\<or> strict_prefix v a", "have q: \"strict_prefix a v\""], ["proof (prove)\nusing this:\n  prefix a v \\<or> strict_prefix v a\n\ngoal (1 subgoal):\n 1. strict_prefix a v", "using a"], ["proof (prove)\nusing this:\n  prefix a v \\<or> strict_prefix v a\n  \\<not> prefix v a\n\ngoal (1 subgoal):\n 1. strict_prefix a v", "unfolding strict_prefix_def prefix_def"], ["proof (prove)\nusing this:\n  (\\<exists>zs. v = a @ zs) \\<or>\n  (\\<exists>zs. a = v @ zs) \\<and> v \\<noteq> a\n  \\<nexists>zs. a = v @ zs\n\ngoal (1 subgoal):\n 1. (\\<exists>zs. v = a @ zs) \\<and> a \\<noteq> v", "by auto"], ["proof (state)\nthis:\n  strict_prefix a v\n\ngoal (1 subgoal):\n 1. \\<not> prefix v a \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  strict_prefix a v", "obtain as where eq: \"a @ as = v\""], ["proof (prove)\nusing this:\n  strict_prefix a v\n\ngoal (1 subgoal):\n 1. (\\<And>as. a @ as = v \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "unfolding strict_prefix_def prefix_def"], ["proof (prove)\nusing this:\n  (\\<exists>zs. v = a @ zs) \\<and> a \\<noteq> v\n\ngoal (1 subgoal):\n 1. (\\<And>as. a @ as = v \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  a @ as = v\n\ngoal (1 subgoal):\n 1. \\<not> prefix v a \\<Longrightarrow> False", "have \"(u_max @ a, as) \\<in> Partitions x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u_max @ a, as) \\<in> Partitions x", "using eq h0"], ["proof (prove)\nusing this:\n  a @ as = v\n  (u_max, v) \\<in> Partitions x\n\ngoal (1 subgoal):\n 1. (u_max @ a, as) \\<in> Partitions x", "unfolding Partitions_def"], ["proof (prove)\nusing this:\n  a @ as = v\n  (u_max, v) \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = x}\n\ngoal (1 subgoal):\n 1. (u_max @ a, as)\n    \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = x}", "by auto"], ["proof (state)\nthis:\n  (u_max @ a, as) \\<in> Partitions x\n\ngoal (1 subgoal):\n 1. \\<not> prefix v a \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (u_max @ a, as) \\<in> Partitions x\n\ngoal (1 subgoal):\n 1. \\<not> prefix v a \\<Longrightarrow> False", "have \"strict_prefix (u_max @ a) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_prefix (u_max @ a) x", "using h0 eq q"], ["proof (prove)\nusing this:\n  (u_max, v) \\<in> Partitions x\n  a @ as = v\n  strict_prefix a v\n\ngoal (1 subgoal):\n 1. strict_prefix (u_max @ a) x", "unfolding Partitions_def prefix_def strict_prefix_def"], ["proof (prove)\nusing this:\n  (u_max, v) \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = x}\n  a @ as = v\n  (\\<exists>zs. v = a @ zs) \\<and> a \\<noteq> v\n\ngoal (1 subgoal):\n 1. (\\<exists>zs. x = (u_max @ a) @ zs) \\<and> u_max @ a \\<noteq> x", "by auto"], ["proof (state)\nthis:\n  strict_prefix (u_max @ a) x\n\ngoal (1 subgoal):\n 1. \\<not> prefix v a \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  strict_prefix (u_max @ a) x\n\ngoal (1 subgoal):\n 1. \\<not> prefix v a \\<Longrightarrow> False", "have \"u_max @ a \\<in> A\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u_max @ a \\<in> A\\<star>", "using i2 h2"], ["proof (prove)\nusing this:\n  a \\<in> A\n  u_max \\<in> A\\<star>\n\ngoal (1 subgoal):\n 1. u_max @ a \\<in> A\\<star>", "by simp"], ["proof (state)\nthis:\n  u_max @ a \\<in> A\\<star>\n\ngoal (1 subgoal):\n 1. \\<not> prefix v a \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  u_max @ a \\<in> A\\<star>\n\ngoal (1 subgoal):\n 1. \\<not> prefix v a \\<Longrightarrow> False", "have \"as @ z \\<in> A\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. as @ z \\<in> A\\<star>", "using i1' i2 i3 eq"], ["proof (prove)\nusing this:\n  a @ b = v @ z\n  a \\<in> A\n  b \\<in> A\\<star>\n  a @ as = v\n\ngoal (1 subgoal):\n 1. as @ z \\<in> A\\<star>", "by auto"], ["proof (state)\nthis:\n  as @ z \\<in> A\\<star>\n\ngoal (1 subgoal):\n 1. \\<not> prefix v a \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  (u_max @ a, as) \\<in> Partitions x\n  strict_prefix (u_max @ a) x\n  u_max @ a \\<in> A\\<star>\n  as @ z \\<in> A\\<star>", "have \"length (u_max @ a) \\<le> length u_max\""], ["proof (prove)\nusing this:\n  (u_max @ a, as) \\<in> Partitions x\n  strict_prefix (u_max @ a) x\n  u_max @ a \\<in> A\\<star>\n  as @ z \\<in> A\\<star>\n\ngoal (1 subgoal):\n 1. length (u_max @ a) \\<le> length u_max", "using h4"], ["proof (prove)\nusing this:\n  (u_max @ a, as) \\<in> Partitions x\n  strict_prefix (u_max @ a) x\n  u_max @ a \\<in> A\\<star>\n  as @ z \\<in> A\\<star>\n  \\<forall>u v.\n     (u, v) \\<in> Partitions x \\<and>\n     strict_prefix u x \\<and>\n     u \\<in> A\\<star> \\<and> v @ z \\<in> A\\<star> \\<longrightarrow>\n     length u \\<le> length u_max\n\ngoal (1 subgoal):\n 1. length (u_max @ a) \\<le> length u_max", "by blast"], ["proof (state)\nthis:\n  length (u_max @ a) \\<le> length u_max\n\ngoal (1 subgoal):\n 1. \\<not> prefix v a \\<Longrightarrow> False", "with i4"], ["proof (chain)\npicking this:\n  a \\<noteq> []\n  length (u_max @ a) \\<le> length u_max", "show \"False\""], ["proof (prove)\nusing this:\n  a \\<noteq> []\n  length (u_max @ a) \\<le> length u_max\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prefix v a\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions x.\n       \\<exists>(u', v')\\<in>Partitions z.\n          strict_prefix u x \\<and>\n          u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>", "with i1"], ["proof (chain)\npicking this:\n  (a, b) \\<in> Partitions (v @ z)\n  prefix v a", "obtain za zb\n    where k1: \"v @ za = a\"\n    and   k2: \"(za, zb) \\<in> Partitions z\" \n    and   k4: \"zb = b\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> Partitions (v @ z)\n  prefix v a\n\ngoal (1 subgoal):\n 1. (\\<And>za zb.\n        \\<lbrakk>v @ za = a; (za, zb) \\<in> Partitions z; zb = b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Partitions_def prefix_def"], ["proof (prove)\nusing this:\n  (a, b) \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = v @ z}\n  \\<exists>zs. a = v @ zs\n\ngoal (1 subgoal):\n 1. (\\<And>za zb.\n        \\<lbrakk>v @ za = a;\n         (za, zb) \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = z};\n         zb = b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: append_eq_append_conv2)"], ["proof (state)\nthis:\n  v @ za = a\n  (za, zb) \\<in> Partitions z\n  zb = b\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions x.\n       \\<exists>(u', v')\\<in>Partitions z.\n          strict_prefix u x \\<and>\n          u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>", "show \"\\<exists> (u, v) \\<in> Partitions x. \\<exists> (u', v') \\<in> Partitions z. strict_prefix u x \\<and> u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions x.\n       \\<exists>(u', v')\\<in>Partitions z.\n          strict_prefix u x \\<and>\n          u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>", "using h0 h1 h2 i2 i3 k1 k2 k4"], ["proof (prove)\nusing this:\n  (u_max, v) \\<in> Partitions x\n  strict_prefix u_max x\n  u_max \\<in> A\\<star>\n  a \\<in> A\n  b \\<in> A\\<star>\n  v @ za = a\n  (za, zb) \\<in> Partitions z\n  zb = b\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>Partitions x.\n       \\<exists>(u', v')\\<in>Partitions z.\n          strict_prefix u x \\<and>\n          u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>", "unfolding Partitions_def"], ["proof (prove)\nusing this:\n  (u_max, v) \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = x}\n  strict_prefix u_max x\n  u_max \\<in> A\\<star>\n  a \\<in> A\n  b \\<in> A\\<star>\n  v @ za = a\n  (za, zb) \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = z}\n  zb = b\n\ngoal (1 subgoal):\n 1. \\<exists>(u, v)\\<in>{(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = x}.\n       \\<exists>(u', v')\n                \\<in>{(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = z}.\n          strict_prefix u x \\<and>\n          u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>", "by blast"], ["proof (state)\nthis:\n  \\<exists>(u, v)\\<in>Partitions x.\n     \\<exists>(u', v')\\<in>Partitions z.\n        strict_prefix u x \\<and>\n        u \\<in> A\\<star> \\<and> v @ u' \\<in> A \\<and> v' \\<in> A\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \n  tag_Star :: \"'a lang \\<Rightarrow> 'a list \\<Rightarrow> ('a lang) set\"\nwhere\n  \"tag_Star A \\<equiv> \\<lambda>x. {\\<approx>A `` {v} | u v. strict_prefix u x \\<and> u \\<in> A\\<star> \\<and> (u, v) \\<in> Partitions x}\""], ["", "lemma tag_Star_non_empty_injI:\n  assumes a: \"tag_Star A x = tag_Star A y\"\n  and     c: \"x @ z \\<in> A\\<star>\"\n  and     d: \"x \\<noteq> []\"\n  shows \"y @ z \\<in> A\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y @ z \\<in> A\\<star>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y @ z \\<in> A\\<star>", "obtain u v u' v' \n    where a1: \"(u,  v) \\<in> Partitions x\" \"(u', v')\\<in> Partitions z\"\n    and   a2: \"strict_prefix u x\"\n    and   a3: \"u \\<in> A\\<star>\"\n    and   a4: \"v @ u' \\<in> A\" \n    and   a5: \"v' \\<in> A\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u v u' v'.\n        \\<lbrakk>(u, v) \\<in> Partitions x; (u', v') \\<in> Partitions z;\n         strict_prefix u x; u \\<in> A\\<star>; v @ u' \\<in> A;\n         v' \\<in> A\\<star>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using c d"], ["proof (prove)\nusing this:\n  x @ z \\<in> A\\<star>\n  x \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>u v u' v'.\n        \\<lbrakk>(u, v) \\<in> Partitions x; (u', v') \\<in> Partitions z;\n         strict_prefix u x; u \\<in> A\\<star>; v @ u' \\<in> A;\n         v' \\<in> A\\<star>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: star_spartitions_elim2)"], ["proof (state)\nthis:\n  (u, v) \\<in> Partitions x\n  (u', v') \\<in> Partitions z\n  strict_prefix u x\n  u \\<in> A\\<star>\n  v @ u' \\<in> A\n  v' \\<in> A\\<star>\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A\\<star>", "have \"(\\<approx>A) `` {v} \\<in> tag_Star A x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<approx>A `` {v} \\<in> tag_Star A x", "apply(simp add: tag_Star_def Partitions_def str_eq_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u va.\n       {y. \\<forall>z. (v @ z \\<in> A) = (y @ z \\<in> A)} =\n       {y. \\<forall>z. (va @ z \\<in> A) = (y @ z \\<in> A)} \\<and>\n       strict_prefix u x \\<and> u \\<in> A\\<star> \\<and> u @ va = x", "using a1 a2 a3"], ["proof (prove)\nusing this:\n  (u, v) \\<in> Partitions x\n  (u', v') \\<in> Partitions z\n  strict_prefix u x\n  u \\<in> A\\<star>\n\ngoal (1 subgoal):\n 1. \\<exists>u va.\n       {y. \\<forall>z. (v @ z \\<in> A) = (y @ z \\<in> A)} =\n       {y. \\<forall>z. (va @ z \\<in> A) = (y @ z \\<in> A)} \\<and>\n       strict_prefix u x \\<and> u \\<in> A\\<star> \\<and> u @ va = x", "by (auto simp add: Partitions_def)"], ["proof (state)\nthis:\n  \\<approx>A `` {v} \\<in> tag_Star A x\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A\\<star>", "then"], ["proof (chain)\npicking this:\n  \\<approx>A `` {v} \\<in> tag_Star A x", "have \"(\\<approx>A) `` {v} \\<in> tag_Star A y\""], ["proof (prove)\nusing this:\n  \\<approx>A `` {v} \\<in> tag_Star A x\n\ngoal (1 subgoal):\n 1. \\<approx>A `` {v} \\<in> tag_Star A y", "using a"], ["proof (prove)\nusing this:\n  \\<approx>A `` {v} \\<in> tag_Star A x\n  tag_Star A x = tag_Star A y\n\ngoal (1 subgoal):\n 1. \\<approx>A `` {v} \\<in> tag_Star A y", "by simp"], ["proof (state)\nthis:\n  \\<approx>A `` {v} \\<in> tag_Star A y\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A\\<star>", "then"], ["proof (chain)\npicking this:\n  \\<approx>A `` {v} \\<in> tag_Star A y", "obtain u1 v1 \n    where b1: \"v \\<approx>A v1\"\n    and   b3: \"u1 \\<in> A\\<star>\"\n    and   b4: \"(u1, v1) \\<in> Partitions y\""], ["proof (prove)\nusing this:\n  \\<approx>A `` {v} \\<in> tag_Star A y\n\ngoal (1 subgoal):\n 1. (\\<And>v1 u1.\n        \\<lbrakk>v \\<approx>A v1; u1 \\<in> A\\<star>;\n         (u1, v1) \\<in> Partitions y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding tag_Star_def"], ["proof (prove)\nusing this:\n  \\<approx>A `` {v}\n  \\<in> {uu_.\n         \\<exists>u v.\n            uu_ = \\<approx>A `` {v} \\<and>\n            strict_prefix u y \\<and>\n            u \\<in> A\\<star> \\<and> (u, v) \\<in> Partitions y}\n\ngoal (1 subgoal):\n 1. (\\<And>v1 u1.\n        \\<lbrakk>v \\<approx>A v1; u1 \\<in> A\\<star>;\n         (u1, v1) \\<in> Partitions y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  v \\<approx>A v1\n  u1 \\<in> A\\<star>\n  (u1, v1) \\<in> Partitions y\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A\\<star>", "have c: \"v1 @ u' \\<in> A\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v1 @ u' \\<in> A\\<star>", "using b1 a4"], ["proof (prove)\nusing this:\n  v \\<approx>A v1\n  v @ u' \\<in> A\n\ngoal (1 subgoal):\n 1. v1 @ u' \\<in> A\\<star>", "unfolding str_eq_def"], ["proof (prove)\nusing this:\n  (v, v1) \\<in> {(x, y). \\<forall>z. (x @ z \\<in> A) = (y @ z \\<in> A)}\n  v @ u' \\<in> A\n\ngoal (1 subgoal):\n 1. v1 @ u' \\<in> A\\<star>", "by simp"], ["proof (state)\nthis:\n  v1 @ u' \\<in> A\\<star>\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A\\<star>", "have \"u1 @ (v1 @ u') @ v' \\<in> A\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u1 @ (v1 @ u') @ v' \\<in> A\\<star>", "using b3 c a5"], ["proof (prove)\nusing this:\n  u1 \\<in> A\\<star>\n  v1 @ u' \\<in> A\\<star>\n  v' \\<in> A\\<star>\n\ngoal (1 subgoal):\n 1. u1 @ (v1 @ u') @ v' \\<in> A\\<star>", "by (simp only: append_in_starI)"], ["proof (state)\nthis:\n  u1 @ (v1 @ u') @ v' \\<in> A\\<star>\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A\\<star>", "then"], ["proof (chain)\npicking this:\n  u1 @ (v1 @ u') @ v' \\<in> A\\<star>", "show \"y @ z \\<in> A\\<star>\""], ["proof (prove)\nusing this:\n  u1 @ (v1 @ u') @ v' \\<in> A\\<star>\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A\\<star>", "using b4 a1"], ["proof (prove)\nusing this:\n  u1 @ (v1 @ u') @ v' \\<in> A\\<star>\n  (u1, v1) \\<in> Partitions y\n  (u, v) \\<in> Partitions x\n  (u', v') \\<in> Partitions z\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A\\<star>", "unfolding Partitions_def"], ["proof (prove)\nusing this:\n  u1 @ (v1 @ u') @ v' \\<in> A\\<star>\n  (u1, v1) \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = y}\n  (u, v) \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = x}\n  (u', v') \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = z}\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A\\<star>", "by auto"], ["proof (state)\nthis:\n  y @ z \\<in> A\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tag_Star_empty_injI:\n  assumes a: \"tag_Star A x = tag_Star A y\"\n  and     c: \"x @ z \\<in> A\\<star>\"\n  and     d: \"x = []\"\n  shows \"y @ z \\<in> A\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y @ z \\<in> A\\<star>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y @ z \\<in> A\\<star>", "from a"], ["proof (chain)\npicking this:\n  tag_Star A x = tag_Star A y", "have \"{} = tag_Star A y\""], ["proof (prove)\nusing this:\n  tag_Star A x = tag_Star A y\n\ngoal (1 subgoal):\n 1. {} = tag_Star A y", "unfolding tag_Star_def"], ["proof (prove)\nusing this:\n  {uu_.\n   \\<exists>u v.\n      uu_ = \\<approx>A `` {v} \\<and>\n      strict_prefix u x \\<and>\n      u \\<in> A\\<star> \\<and> (u, v) \\<in> Partitions x} =\n  {uu_.\n   \\<exists>u v.\n      uu_ = \\<approx>A `` {v} \\<and>\n      strict_prefix u y \\<and>\n      u \\<in> A\\<star> \\<and> (u, v) \\<in> Partitions y}\n\ngoal (1 subgoal):\n 1. {} =\n    {uu_.\n     \\<exists>u v.\n        uu_ = \\<approx>A `` {v} \\<and>\n        strict_prefix u y \\<and>\n        u \\<in> A\\<star> \\<and> (u, v) \\<in> Partitions y}", "using d"], ["proof (prove)\nusing this:\n  {uu_.\n   \\<exists>u v.\n      uu_ = \\<approx>A `` {v} \\<and>\n      strict_prefix u x \\<and>\n      u \\<in> A\\<star> \\<and> (u, v) \\<in> Partitions x} =\n  {uu_.\n   \\<exists>u v.\n      uu_ = \\<approx>A `` {v} \\<and>\n      strict_prefix u y \\<and>\n      u \\<in> A\\<star> \\<and> (u, v) \\<in> Partitions y}\n  x = []\n\ngoal (1 subgoal):\n 1. {} =\n    {uu_.\n     \\<exists>u v.\n        uu_ = \\<approx>A `` {v} \\<and>\n        strict_prefix u y \\<and>\n        u \\<in> A\\<star> \\<and> (u, v) \\<in> Partitions y}", "by auto"], ["proof (state)\nthis:\n  {} = tag_Star A y\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A\\<star>", "then"], ["proof (chain)\npicking this:\n  {} = tag_Star A y", "have \"y = []\""], ["proof (prove)\nusing this:\n  {} = tag_Star A y\n\ngoal (1 subgoal):\n 1. y = []", "unfolding tag_Star_def Partitions_def strict_prefix_def prefix_def"], ["proof (prove)\nusing this:\n  {} =\n  {uu_.\n   \\<exists>u v.\n      uu_ = \\<approx>A `` {v} \\<and>\n      ((\\<exists>zs. y = u @ zs) \\<and> u \\<noteq> y) \\<and>\n      u \\<in> A\\<star> \\<and>\n      (u, v) \\<in> {(x\\<^sub>p, x\\<^sub>s). x\\<^sub>p @ x\\<^sub>s = y}}\n\ngoal (1 subgoal):\n 1. y = []", "by (auto) (metis Nil_in_star append_self_conv2)"], ["proof (state)\nthis:\n  y = []\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A\\<star>", "then"], ["proof (chain)\npicking this:\n  y = []", "show \"y @ z \\<in> A\\<star>\""], ["proof (prove)\nusing this:\n  y = []\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A\\<star>", "using c d"], ["proof (prove)\nusing this:\n  y = []\n  x @ z \\<in> A\\<star>\n  x = []\n\ngoal (1 subgoal):\n 1. y @ z \\<in> A\\<star>", "by simp"], ["proof (state)\nthis:\n  y @ z \\<in> A\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quot_star_finiteI [intro]:\n  assumes finite1: \"finite (UNIV // \\<approx>A)\"\n  shows \"finite (UNIV // \\<approx>(A\\<star>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (UNIV // \\<approx>A\\<star>)", "proof (rule_tac tag = \"tag_Star A\" in tag_finite_imageD)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (range (tag_Star A))\n 2. =tag_Star A= \\<subseteq> \\<approx>A\\<star>", "have \"\\<And>x y z. \\<lbrakk>tag_Star A x = tag_Star A y; x @ z \\<in> A\\<star>\\<rbrakk> \\<Longrightarrow> y @ z \\<in> A\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>tag_Star A x = tag_Star A y; x @ z \\<in> A\\<star>\\<rbrakk>\n       \\<Longrightarrow> y @ z \\<in> A\\<star>", "by (case_tac \"x = []\") (blast intro: tag_Star_empty_injI tag_Star_non_empty_injI)+"], ["proof (state)\nthis:\n  \\<lbrakk>tag_Star A ?x = tag_Star A ?y; ?x @ ?z \\<in> A\\<star>\\<rbrakk>\n  \\<Longrightarrow> ?y @ ?z \\<in> A\\<star>\n\ngoal (2 subgoals):\n 1. finite (range (tag_Star A))\n 2. =tag_Star A= \\<subseteq> \\<approx>A\\<star>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>tag_Star A ?x = tag_Star A ?y; ?x @ ?z \\<in> A\\<star>\\<rbrakk>\n  \\<Longrightarrow> ?y @ ?z \\<in> A\\<star>", "show \"=(tag_Star A)= \\<subseteq> \\<approx>(A\\<star>)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>tag_Star A ?x = tag_Star A ?y; ?x @ ?z \\<in> A\\<star>\\<rbrakk>\n  \\<Longrightarrow> ?y @ ?z \\<in> A\\<star>\n\ngoal (1 subgoal):\n 1. =tag_Star A= \\<subseteq> \\<approx>A\\<star>", "by (rule refined_intro) (auto simp add: tag_eq_def)"], ["proof (state)\nthis:\n  =tag_Star A= \\<subseteq> \\<approx>A\\<star>\n\ngoal (1 subgoal):\n 1. finite (range (tag_Star A))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (range (tag_Star A))", "have *: \"finite (Pow (UNIV // \\<approx>A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Pow (UNIV // \\<approx>A))", "using finite1"], ["proof (prove)\nusing this:\n  finite (UNIV // \\<approx>A)\n\ngoal (1 subgoal):\n 1. finite (Pow (UNIV // \\<approx>A))", "by auto"], ["proof (state)\nthis:\n  finite (Pow (UNIV // \\<approx>A))\n\ngoal (1 subgoal):\n 1. finite (range (tag_Star A))", "show \"finite (range (tag_Star A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range (tag_Star A))", "unfolding tag_Star_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     (range\n       (\\<lambda>x.\n           {uu_.\n            \\<exists>u v.\n               uu_ = \\<approx>A `` {v} \\<and>\n               strict_prefix u x \\<and>\n               u \\<in> A\\<star> \\<and> (u, v) \\<in> Partitions x}))", "by (rule finite_subset[OF _ *])\n       (auto simp add: quotient_def)"], ["proof (state)\nthis:\n  finite (range (tag_Star A))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The conclusion of the second direction\\<close>"], ["", "lemma Myhill_Nerode2:\n  fixes r::\"'a rexp\"\n  shows \"finite (UNIV // \\<approx>(lang r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (UNIV // \\<approx>lang r)", "by (induct r) (auto)"], ["", "end"]]}