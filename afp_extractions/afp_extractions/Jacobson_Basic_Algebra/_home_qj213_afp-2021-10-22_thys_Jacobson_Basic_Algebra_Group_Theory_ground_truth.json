{"file_name": "/home/qj213/afp-2021-10-22/thys/Jacobson_Basic_Algebra/Group_Theory.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jacobson_Basic_Algebra", "problem_names": ["lemma sub [intro, simp]:\n  \"a \\<in> N \\<Longrightarrow> a \\<in> M\"", "theorem submonoid_transitive:\n  assumes \"submonoid K N composition unit\"\n    and \"submonoid N M composition unit\"\n  shows \"submonoid K M composition unit\"", "lemma transformation_closed [intro, simp]:\n  \"\\<lbrakk> \\<alpha> \\<in> M; x \\<in> S \\<rbrakk> \\<Longrightarrow> \\<alpha> x \\<in> S\"", "lemma transformation_undefined [intro, simp]:\n  \"\\<lbrakk> \\<alpha> \\<in> M; x \\<notin> S \\<rbrakk> \\<Longrightarrow> \\<alpha> x = undefined\"", "lemma invertibleI [intro]:\n  \"\\<lbrakk> u \\<cdot> v = \\<one>; v \\<cdot> u = \\<one>; u \\<in> M; v \\<in> M \\<rbrakk> \\<Longrightarrow> invertible u\"", "lemma invertibleE [elim]:\n  \"\\<lbrakk> invertible u; \\<And>v. \\<lbrakk> u \\<cdot> v = \\<one> \\<and> v \\<cdot> u = \\<one>; v \\<in> M \\<rbrakk> \\<Longrightarrow> P; u \\<in> M \\<rbrakk> \\<Longrightarrow> P\"", "theorem inverse_unique:\n  \"\\<lbrakk> u \\<cdot> v' = \\<one>; v \\<cdot> u = \\<one>; u \\<in> M;  v \\<in> M; v' \\<in> M \\<rbrakk> \\<Longrightarrow> v = v'\"", "theorem inverse_equality:\n  \"\\<lbrakk> u \\<cdot> v = \\<one>; v \\<cdot> u = \\<one>; u \\<in> M; v \\<in> M \\<rbrakk> \\<Longrightarrow> inverse u = v\"", "lemma invertible_inverse_closed [intro, simp]:\n  \"\\<lbrakk> invertible u; u \\<in> M \\<rbrakk> \\<Longrightarrow> inverse u \\<in> M\"", "lemma inverse_undefined [intro, simp]:\n  \"u \\<notin> M \\<Longrightarrow> inverse u = undefined\"", "lemma invertible_left_inverse [simp]:\n  \"\\<lbrakk> invertible u; u \\<in> M \\<rbrakk> \\<Longrightarrow> inverse u \\<cdot> u = \\<one>\"", "lemma invertible_right_inverse [simp]:\n  \"\\<lbrakk> invertible u; u \\<in> M \\<rbrakk> \\<Longrightarrow> u \\<cdot> inverse u = \\<one>\"", "lemma invertible_left_cancel [simp]:\n  \"\\<lbrakk> invertible x; x \\<in> M; y \\<in> M; z \\<in> M \\<rbrakk> \\<Longrightarrow> x \\<cdot> y = x \\<cdot> z \\<longleftrightarrow> y = z\"", "lemma invertible_right_cancel [simp]:\n  \"\\<lbrakk> invertible x; x \\<in> M; y \\<in> M; z \\<in> M \\<rbrakk> \\<Longrightarrow> y \\<cdot> x = z \\<cdot> x \\<longleftrightarrow> y = z\"", "lemma inverse_unit [simp]: \"inverse \\<one> = \\<one>\"", "theorem invertible_inverse_invertible [intro, simp]:\n  \"\\<lbrakk> invertible u; u \\<in> M \\<rbrakk> \\<Longrightarrow> invertible (inverse u)\"", "theorem invertible_inverse_inverse [simp]:\n  \"\\<lbrakk> invertible u; u \\<in> M \\<rbrakk> \\<Longrightarrow> inverse (inverse u) = u\"", "lemma submonoid_invertible [intro, simp]:\n  \"\\<lbrakk> sub.invertible u; u \\<in> N \\<rbrakk> \\<Longrightarrow> invertible u\"", "lemma submonoid_inverse_closed [intro, simp]:\n  \"\\<lbrakk> sub.invertible u; u \\<in> N \\<rbrakk> \\<Longrightarrow> inverse u \\<in> N\"", "lemma subgroup_inverse_equality [simp]:\n  \"u \\<in> G \\<Longrightarrow> inverse u = sub.inverse u\"", "lemma subgroup_inverse_iff [simp]:\n  \"\\<lbrakk> invertible x; x \\<in> M \\<rbrakk> \\<Longrightarrow> inverse x \\<in> G \\<longleftrightarrow> x \\<in> G\"", "lemma subgroup_transitive [trans]:\n  assumes \"subgroup K H composition unit\"\n    and \"subgroup H G composition unit\"\n  shows \"subgroup K G composition unit\"", "theorem subgroupI:\n  fixes G\n  assumes subset [THEN subsetD, intro]: \"G \\<subseteq> M\"\n    and [intro]: \"\\<one> \\<in> G\"\n    and [intro]: \"\\<And>g h. \\<lbrakk> g \\<in> G; h \\<in> G \\<rbrakk> \\<Longrightarrow> g \\<cdot> h \\<in> G\"\n    and [intro]: \"\\<And>g. g \\<in> G \\<Longrightarrow> invertible g\"\n    and [intro]: \"\\<And>g. g \\<in> G \\<Longrightarrow> inverse g \\<in> G\"\n  shows \"subgroup G M (\\<cdot>) \\<one>\"", "lemma mem_UnitsI:\n  \"\\<lbrakk> invertible u; u \\<in> M \\<rbrakk> \\<Longrightarrow> u \\<in> Units\"", "lemma mem_UnitsD:\n  \"\\<lbrakk> u \\<in> Units \\<rbrakk> \\<Longrightarrow> invertible u \\<and> u \\<in> M\"", "theorem group_of_Units [intro, simp]:\n  \"group Units (\\<cdot>) \\<one>\"", "lemma composition_invertible [simp, intro]:\n  \"\\<lbrakk> invertible x; invertible y; x \\<in> M; y \\<in> M \\<rbrakk> \\<Longrightarrow> invertible (x \\<cdot> y)\"", "lemma unit_invertible:\n  \"invertible \\<one>\"", "lemma invertible_right_inverse2:\n  \"\\<lbrakk> invertible u; u \\<in> M; v \\<in> M \\<rbrakk> \\<Longrightarrow> u \\<cdot> (inverse u \\<cdot> v) = v\"", "lemma invertible_left_inverse2:\n  \"\\<lbrakk> invertible u; u \\<in> M; v \\<in> M \\<rbrakk> \\<Longrightarrow> inverse u \\<cdot> (u \\<cdot> v) = v\"", "lemma inverse_composition_commute:\n  assumes [simp]: \"invertible x\" \"invertible y\" \"x \\<in> M\" \"y \\<in> M\"\n  shows \"inverse (x \\<cdot> y) = inverse y \\<cdot> inverse x\"", "theorem invertible_is_bijective:\n  assumes dom: \"\\<alpha> \\<in> S \\<rightarrow>\\<^sub>E S\"\n  shows \"invertible \\<alpha> \\<longleftrightarrow> bij_betw \\<alpha> S S\"", "theorem Units_bijective:\n  \"Units = {\\<alpha> \\<in> S \\<rightarrow>\\<^sub>E S. bij_betw \\<alpha> S S}\"", "lemma Units_bij_betwI [intro, simp]:\n  \"\\<alpha> \\<in> Units \\<Longrightarrow> bij_betw \\<alpha> S S\"", "lemma Units_bij_betwD [dest, simp]:\n  \"\\<lbrakk> \\<alpha> \\<in> S \\<rightarrow>\\<^sub>E S; bij_betw \\<alpha> S S \\<rbrakk> \\<Longrightarrow> \\<alpha> \\<in> Units\"", "lemma transformation_group_closed [intro, simp]:\n  \"\\<lbrakk> \\<alpha> \\<in> G; x \\<in> S \\<rbrakk> \\<Longrightarrow> \\<alpha> x \\<in> S\"", "lemma transformation_group_undefined [intro, simp]:\n  \"\\<lbrakk> \\<alpha> \\<in> G; x \\<notin> S \\<rbrakk> \\<Longrightarrow> \\<alpha> x = undefined\"", "theorem inverse_monoid_isomorphism:\n  \"monoid_isomorphism (restrict (inv_into M \\<eta>) M') M' (\\<cdot>') \\<one>' M (\\<cdot>) \\<one>\"", "theorem isomorphic_as_monoids_symmetric:\n  \"(M, composition, unit) \\<cong>\\<^sub>M (M', composition', unit') \\<Longrightarrow> (M', composition', unit') \\<cong>\\<^sub>M (M, composition, unit)\"", "lemma translation_map [intro, simp]:\n  \"a \\<in> M \\<Longrightarrow> (a)\\<^sub>L \\<in> M \\<rightarrow>\\<^sub>E M\"", "lemma Translations_maps [intro, simp]:\n  \"translation ` M \\<subseteq> M \\<rightarrow>\\<^sub>E M\"", "lemma translation_apply:\n  \"\\<lbrakk> a \\<in> M; b \\<in> M \\<rbrakk> \\<Longrightarrow> (a)\\<^sub>L b = a \\<cdot> b\"", "lemma translation_exist:\n  \"f \\<in> translation ` M \\<Longrightarrow> \\<exists>a \\<in> M. f = (a)\\<^sub>L\"", "lemmas Translations_E [elim] = translation_exist [THEN bexE]", "theorem translation_unit_eq [simp]:\n  \"identity M = (\\<one>)\\<^sub>L\"", "theorem translation_composition_eq [simp]:\n  assumes [simp]: \"a \\<in> M\" \"b \\<in> M\"\n  shows \"compose M (a)\\<^sub>L (b)\\<^sub>L = (a \\<cdot> b)\\<^sub>L\"", "theorem Translations_transformation_monoid:\n  \"transformation_monoid (translation ` M) M\"", "theorem translation_isomorphism [intro]:\n  \"monoid_isomorphism translation M (\\<cdot>) \\<one> (translation ` M) (compose M) (identity M)\"", "theorem cayley_monoid:\n  \"\\<exists>M' composition' unit'. transformation_monoid M' M \\<and> (M, (\\<cdot>), \\<one>) \\<cong>\\<^sub>M (M', composition', unit')\"", "theorem translation_invertible [intro, simp]:\n  assumes [simp]: \"a \\<in> G\"\n  shows \"transformation.sub.invertible (a)\\<^sub>L\"", "theorem translation_bijective [intro, simp]:\n  \"a \\<in> G \\<Longrightarrow> bij_betw (a)\\<^sub>L G G\"", "theorem Translations_transformation_group:\n  \"transformation_group (translation ` G) G\"", "theorem cayley_group:\n  \"\\<exists>G' composition' unit'. transformation_group G' G \\<and> (G, (\\<cdot>), \\<one>) \\<cong>\\<^sub>M (G', composition', unit')\"", "lemma translation_map [intro, simp]:\n  \"a \\<in> G \\<Longrightarrow> (a)\\<^sub>R \\<in> G \\<rightarrow>\\<^sub>E G\"", "lemma Translation_maps [intro, simp]:\n  \"Translations \\<subseteq> G \\<rightarrow>\\<^sub>E G\"", "lemma translation_apply:\n  \"\\<lbrakk> a \\<in> G; b \\<in> G \\<rbrakk> \\<Longrightarrow> (a)\\<^sub>R b = b \\<cdot> a\"", "lemma translation_exist:\n  \"f \\<in> Translations \\<Longrightarrow> \\<exists>a \\<in> G. f = (a)\\<^sub>R\"", "lemmas Translations_E [elim] = translation_exist [THEN bexE]", "lemma translation_unit_eq [simp]:\n  \"identity G = (\\<one>)\\<^sub>R\"", "lemma translation_composition_eq [simp]:\n  assumes [simp]: \"a \\<in> G\" \"b \\<in> G\"\n  shows \"compose G (a)\\<^sub>R (b)\\<^sub>R = (b \\<cdot> a)\\<^sub>R\"", "lemma Translations_transformation_monoid:\n  \"transformation_monoid Translations G\"", "lemma translation_invertible [intro, simp]:\n  assumes [simp]: \"a \\<in> G\"\n  shows \"transformation.sub.invertible (a)\\<^sub>R\"", "lemma translation_bijective [intro, simp]:\n  \"a \\<in> G \\<Longrightarrow> bij_betw (a)\\<^sub>R G G\"", "theorem Translations_transformation_group:\n  \"transformation_group Translations G\"", "lemma translation_inverse_eq [simp]:\n  assumes [simp]: \"a \\<in> G\"\n  shows \"transformation.sub.inverse (a)\\<^sub>R = (inverse a)\\<^sub>R\"", "theorem translation_inverse_monoid_isomorphism [intro]:\n  \"monoid_isomorphism (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) G (\\<cdot>) \\<one> Translations (compose G) (identity G)\"\n  (is \"monoid_isomorphism ?inv _ _ _ _ _ _\")", "lemma Orbit_Relation_memI [intro]:\n  \"\\<lbrakk> \\<exists>\\<alpha> \\<in> G. y = \\<alpha> x; x \\<in> S \\<rbrakk> \\<Longrightarrow> (x, y) \\<in> Orbit_Relation\"", "lemma Orbit_Relation_memE [elim]:\n  \"\\<lbrakk> (x, y) \\<in> Orbit_Relation; \\<And>\\<alpha>. \\<lbrakk> \\<alpha> \\<in> G; x \\<in> S; y = \\<alpha> x \\<rbrakk> \\<Longrightarrow> Q \\<rbrakk> \\<Longrightarrow> Q\"", "theorem orbit_equality:\n  \"x \\<in> S \\<Longrightarrow> orbit.Class x = {\\<alpha> x | \\<alpha>. \\<alpha> \\<in> G}\"", "theorem image_subgroup:\n  assumes \"subgroup G M (\\<cdot>) \\<one>\"\n  shows \"subgroup (\\<eta> ` G) M' (\\<cdot>') \\<one>'\"", "lemma Right_Coset_memI [intro]:\n  \"h \\<in> H \\<Longrightarrow> h \\<cdot> x \\<in> H |\\<cdot> x\"", "lemma Right_Coset_memE [elim]:\n  \"\\<lbrakk> a \\<in> H |\\<cdot> x; \\<And>h. \\<lbrakk> h \\<in> H; a = h \\<cdot> x \\<rbrakk> \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\"", "lemma Left_Coset_memI [intro]:\n  \"h \\<in> H \\<Longrightarrow> x \\<cdot> h \\<in> x \\<cdot>| H\"", "lemma Left_Coset_memE [elim]:\n  \"\\<lbrakk> a \\<in> x \\<cdot>| H; \\<And>h. \\<lbrakk> h \\<in> H; a = x \\<cdot> h \\<rbrakk> \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\"", "theorem left_translations_of_subgroup_are_transformation_group [intro]:\n  \"transformation_group (left.translation ` H) G\"", "theorem Right_Coset_is_orbit:\n  \"x \\<in> G \\<Longrightarrow> H |\\<cdot> x = orbit.Class x\"", "theorem Right_Coset_Union:\n  \"(\\<Union>x\\<in>G. H |\\<cdot> x) = G\"", "theorem Right_Coset_bij:\n  assumes G [simp]: \"x \\<in> G\" \"y \\<in> G\"\n  shows \"bij_betw (inverse x \\<cdot> y)\\<^sub>R (H |\\<cdot> x) (H |\\<cdot> y)\"", "theorem Right_Cosets_cardinality:\n  \"\\<lbrakk> x \\<in> G; y \\<in> G \\<rbrakk> \\<Longrightarrow> card (H |\\<cdot> x) = card (H |\\<cdot> y)\"", "theorem Right_Coset_unit:\n  \"H |\\<cdot> \\<one> = H\"", "theorem Right_Coset_cardinality:\n  \"x \\<in> G \\<Longrightarrow> card (H |\\<cdot> x) = card H\"", "theorem lagrange:\n  \"finite G \\<Longrightarrow> card G = card H * index\"", "lemma image_of_inverse [intro, simp]:\n  \"x \\<in> G \\<Longrightarrow> x \\<in> inverse ` G\"", "lemma inverse_subgroupI:\n  assumes sub: \"subgroup H G (\\<cdot>) \\<one>\"\n  shows \"subgroup (inverse ` H) G (\\<cdot>) \\<one>\"", "lemma inverse_subgroupD:\n  assumes sub: \"subgroup (inverse ` H) G (\\<cdot>) \\<one>\"\n    and inv: \"H \\<subseteq> Units\"\n  shows \"subgroup H G (\\<cdot>) \\<one>\"", "theorem right_translations_of_subgroup_are_transformation_group [intro]:\n  \"transformation_group (translation ` H) G\"", "theorem Left_Coset_is_orbit:\n  \"x \\<in> G \\<Longrightarrow> x \\<cdot>| H = orbit.Class x\"", "theorem Class_cong:\n  \"\\<lbrakk> Class a = Class a'; Class b = Class b'; a \\<in> M; a' \\<in> M; b \\<in> M; b' \\<in> M \\<rbrakk> \\<Longrightarrow> Class (a \\<cdot> b) = Class (a' \\<cdot> b')\"", "theorem Class_commutes_with_composition:\n  \"\\<lbrakk> a \\<in> M; b \\<in> M \\<rbrakk> \\<Longrightarrow> Class a [\\<cdot>] Class b = Class (a \\<cdot> b)\"", "theorem quotient_composition_closed [intro, simp]:\n  \"\\<lbrakk> A \\<in> M / E; B \\<in> M / E \\<rbrakk> \\<Longrightarrow> A [\\<cdot>] B \\<in> M / E\"", "theorem Class_right_inverse:\n  \"a \\<in> G \\<Longrightarrow> Class a [\\<cdot>] Class (inverse a) = Class \\<one>\"", "theorem Class_left_inverse:\n  \"a \\<in> G \\<Longrightarrow> Class (inverse a) [\\<cdot>] Class a = Class \\<one>\"", "theorem Class_invertible:\n  \"a \\<in> G \\<Longrightarrow> quotient.invertible (Class a)\"", "theorem Class_commutes_with_inverse:\n  \"a \\<in> G \\<Longrightarrow> quotient.inverse (Class a) = Class (inverse a)\"", "theorem Left_equals_Right_coset_implies_normality:\n  assumes [simp]: \"\\<And>g. g \\<in> G \\<Longrightarrow> g \\<cdot>| H = H |\\<cdot> g\"\n  shows \"normal_subgroup H G (\\<cdot>) \\<one>\"", "theorem Right_Coset_Class_unit:\n  assumes g: \"g \\<in> G\" shows \"Normal |\\<cdot> g = Class g\"", "theorem Left_Coset_Class_unit:\n  assumes g: \"g \\<in> G\" shows \"g \\<cdot>| Normal = Class g\"", "theorem Class_unit_is_normal:\n  \"normal_subgroup Normal G (\\<cdot>) \\<one>\"", "theorem Left_equals_Right_coset:\n  \"g \\<in> G \\<Longrightarrow> g \\<cdot>| K = K |\\<cdot> g\"", "lemma CongruenceI: \"\\<lbrakk> a = b \\<cdot> k; a \\<in> G; b \\<in> G; k \\<in> K \\<rbrakk> \\<Longrightarrow> (a, b) \\<in> Congruence\"", "lemma CongruenceD: \"(a, b) \\<in> Congruence \\<Longrightarrow> \\<exists>k\\<in>K. a = b \\<cdot> k\"", "theorem Class_unit_normal_subgroup: \"Class \\<one> = K\"", "theorem Class_is_Left_Coset:\n  \"g \\<in> G \\<Longrightarrow> Class g = g \\<cdot>| K\"", "lemma Left_CosetE: \"\\<lbrakk> A \\<in> G // K; \\<And>a. a \\<in> G \\<Longrightarrow> P (a \\<cdot>| K) \\<rbrakk> \\<Longrightarrow> P A\"", "theorem factor_composition [simp]:\n  \"\\<lbrakk> g \\<in> G; h \\<in> G \\<rbrakk> \\<Longrightarrow> (g \\<cdot>| K) [\\<cdot>] (h \\<cdot>| K) = g \\<cdot> h \\<cdot>| K\"", "theorem factor_unit:\n  \"K = \\<one> \\<cdot>| K\"", "theorem factor_inverse [simp]:\n  \"g \\<in> G \\<Longrightarrow> quotient.inverse (g \\<cdot>| K) = (inverse g \\<cdot>| K)\"", "theorem invertible_image_lemma:\n  assumes \"invertible a\" \"a \\<in> M\"\n  shows \"\\<eta> a \\<cdot>' \\<eta> (inverse a) = \\<one>'\" and \"\\<eta> (inverse a) \\<cdot>' \\<eta> a = \\<one>'\"", "theorem invertible_target_invertible [intro, simp]:\n  \"\\<lbrakk> invertible a; a \\<in> M \\<rbrakk> \\<Longrightarrow> invertible' (\\<eta> a)\"", "theorem invertible_commutes_with_inverse:\n  \"\\<lbrakk> invertible a; a \\<in> M \\<rbrakk> \\<Longrightarrow> \\<eta> (inverse a) = inverse' (\\<eta> a)\"", "lemma Ker_equality:\n  \"Ker = {a | a. a \\<in> G \\<and> \\<eta> a = \\<one>'}\"", "lemma Ker_closed [intro, simp]:\n  \"a \\<in> Ker \\<Longrightarrow> a \\<in> G\"", "lemma Ker_image [intro]: (* loops as a simprule *)\n  \"a \\<in> Ker \\<Longrightarrow> \\<eta> a = \\<one>'\"", "lemma Ker_memI [intro]: (* loops as a simprule *)\n  \"\\<lbrakk> \\<eta> a = \\<one>'; a \\<in> G \\<rbrakk> \\<Longrightarrow> a \\<in> Ker\"", "theorem injective_iff_kernel_unit:\n  \"inj_on \\<eta> G \\<longleftrightarrow> Ker = {\\<one>}\"", "theorem left_coset_equality:\n  assumes eq: \"a \\<cdot>| L = b \\<cdot>| L\" and [simp]: \"a \\<in> G\" and b: \"b \\<in> G\"\n  shows \"\\<eta> a = \\<eta> b\"", "lemma induced_closed [intro, simp]:\n  assumes [simp]: \"A \\<in> G // L\" shows \"induced A \\<in> G'\"", "lemma induced_undefined [intro, simp]:\n  \"A \\<notin> G // L \\<Longrightarrow> induced A = undefined\"", "theorem induced_left_coset_closed [intro, simp]:\n  \"a \\<in> G \\<Longrightarrow> induced (a \\<cdot>| L) \\<in> G'\"", "theorem induced_left_coset_equality [simp]:\n  assumes [simp]: \"a \\<in> G\" shows \"induced (a \\<cdot>| L) = \\<eta> a\"", "theorem induced_Left_Coset_commutes_with_composition [simp]:\n  \"\\<lbrakk> a \\<in> G; b \\<in> G \\<rbrakk> \\<Longrightarrow> induced ((a \\<cdot>| L) [\\<cdot>] (b \\<cdot>| L)) = induced (a \\<cdot>| L) \\<cdot>' induced (b \\<cdot>| L)\"", "theorem induced_group_homomorphism:\n  \"group_homomorphism induced (G // L) ([\\<cdot>]) (contained.Class \\<one>) G' (\\<cdot>') \\<one>'\"", "theorem factorization_lemma: \"a \\<in> G \\<Longrightarrow> compose G induced contained.Class a = \\<eta> a\"", "theorem factorization [simp]: \"compose G induced contained.Class = \\<eta>\"", "theorem uniqueness:\n  assumes map: \"\\<beta> \\<in> G // L \\<rightarrow>\\<^sub>E G'\"\n    and factorization: \"compose G \\<beta> contained.Class = \\<eta>\"\n  shows \"\\<beta> = induced\"", "theorem induced_image:\n  \"induced ` (G // L) = \\<eta> ` G\"", "theorem induced_kernel:\n  \"induced.Ker = Ker / L.Congruence\"", "theorem induced_inj_on:\n  \"inj_on induced (G // L) \\<longleftrightarrow> L = Ker\"", "lemma inverse_group_isomorphism:\n  \"group_isomorphism (restrict (inv_into G \\<eta>) G') G' (\\<cdot>') \\<one>' G (\\<cdot>) \\<one>\"", "lemma isomorphic_as_groups_symmetric:\n  \"(G, composition, unit) \\<cong>\\<^sub>G (G', composition', unit') \\<Longrightarrow> (G', composition', unit') \\<cong>\\<^sub>G (G, composition, unit)\"", "theorem image_isomorphic_to_factor_group:\n  \"\\<exists>K composition unit. normal_subgroup K G (\\<cdot>) \\<one> \\<and> (\\<eta> ` G, (\\<cdot>'), \\<one>') \\<cong>\\<^sub>G (G // K, composition, unit)\""], "translations": [["", "lemma sub [intro, simp]:\n  \"a \\<in> N \\<Longrightarrow> a \\<in> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> N \\<Longrightarrow> a \\<in> M", "using subset"], ["proof (prove)\nusing this:\n  N \\<subseteq> M\n\ngoal (1 subgoal):\n 1. a \\<in> N \\<Longrightarrow> a \\<in> M", "by blast"], ["", "text \\<open>p 29, ll 32--33\\<close>"], ["", "sublocale sub: monoid N \"(\\<cdot>)\" \\<one>"], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid N (\\<cdot>) \\<one>", "by unfold_locales (auto simp: sub_composition_closed sub_unit_closed)"], ["", "end"], ["", "(* submonoid *)"], ["", "text \\<open>p 29, ll 33--34\\<close>"], ["", "theorem submonoid_transitive:\n  assumes \"submonoid K N composition unit\"\n    and \"submonoid N M composition unit\"\n  shows \"submonoid K M composition unit\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submonoid K M composition unit", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. submonoid K M composition unit", "interpret K: submonoid K N composition unit"], ["proof (prove)\ngoal (1 subgoal):\n 1. submonoid K N composition unit", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. submonoid K M composition unit", "interpret M: submonoid N M composition unit"], ["proof (prove)\ngoal (1 subgoal):\n 1. submonoid N M composition unit", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. submonoid K M composition unit", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. submonoid K M composition unit", "by unfold_locales auto"], ["proof (state)\nthis:\n  submonoid K M composition unit\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>p 28, l 23\\<close>"], ["", "locale transformations =\n  fixes S :: \"'a set\""], ["", "(*  assumes non_vacuous: \"S \\<noteq> {}\" *) (* Jacobson requires this but we don't need it, strange. *)"], ["", "text \\<open>Monoid of all transformations\\<close>"], ["", "text \\<open>p 28, ll 23--24\\<close>"], ["", "sublocale transformations \\<subseteq> monoid \"S \\<rightarrow>\\<^sub>E S\" \"compose S\" \"identity S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid (S \\<rightarrow>\\<^sub>E S) (compose S) (identity S)", "by unfold_locales (auto simp: PiE_def compose_eq compose_assoc Id_compose compose_Id)"], ["", "text \\<open>@{term N} is a monoid of transformations of the set @{term S}.\\<close>"], ["", "text \\<open>p 29, ll 34--36\\<close>"], ["", "locale transformation_monoid =\n  transformations S + submonoid M \"S \\<rightarrow>\\<^sub>E S\" \"compose S\" \"identity S\" for M and S\nbegin"], ["", "text \\<open>p 29, ll 34--36\\<close>"], ["", "lemma transformation_closed [intro, simp]:\n  \"\\<lbrakk> \\<alpha> \\<in> M; x \\<in> S \\<rbrakk> \\<Longrightarrow> \\<alpha> x \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<alpha> \\<in> M; x \\<in> S\\<rbrakk>\n    \\<Longrightarrow> \\<alpha> x \\<in> S", "by (metis PiE_iff sub)"], ["", "text \\<open>p 29, ll 34--36\\<close>"], ["", "lemma transformation_undefined [intro, simp]:\n  \"\\<lbrakk> \\<alpha> \\<in> M; x \\<notin> S \\<rbrakk> \\<Longrightarrow> \\<alpha> x = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<alpha> \\<in> M; x \\<notin> S\\<rbrakk>\n    \\<Longrightarrow> \\<alpha> x = undefined", "by (metis PiE_arb sub)"], ["", "end"], ["", "(* transformation_monoid *)"], ["", "subsection \\<open>Groups of Transformations and Abstract Groups\\<close>"], ["", "context monoid begin"], ["", "text \\<open>Invertible elements\\<close>"], ["", "text \\<open>p 31, ll 3--5\\<close>"], ["", "definition invertible where \"u \\<in> M \\<Longrightarrow> invertible u \\<longleftrightarrow> (\\<exists>v \\<in> M. u \\<cdot> v = \\<one> \\<and> v \\<cdot> u = \\<one>)\""], ["", "text \\<open>p 31, ll 3--5\\<close>"], ["", "lemma invertibleI [intro]:\n  \"\\<lbrakk> u \\<cdot> v = \\<one>; v \\<cdot> u = \\<one>; u \\<in> M; v \\<in> M \\<rbrakk> \\<Longrightarrow> invertible u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<cdot> v = \\<one>; v \\<cdot> u = \\<one>; u \\<in> M;\n     v \\<in> M\\<rbrakk>\n    \\<Longrightarrow> invertible u", "unfolding invertible_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<cdot> v = \\<one>; v \\<cdot> u = \\<one>; u \\<in> M;\n     v \\<in> M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>v\\<in>M.\n                         u \\<cdot> v = \\<one> \\<and> v \\<cdot> u = \\<one>", "by fast"], ["", "text \\<open>p 31, ll 3--5\\<close>"], ["", "lemma invertibleE [elim]:\n  \"\\<lbrakk> invertible u; \\<And>v. \\<lbrakk> u \\<cdot> v = \\<one> \\<and> v \\<cdot> u = \\<one>; v \\<in> M \\<rbrakk> \\<Longrightarrow> P; u \\<in> M \\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible u;\n     \\<And>v.\n        \\<lbrakk>u \\<cdot> v = \\<one> \\<and> v \\<cdot> u = \\<one>;\n         v \\<in> M\\<rbrakk>\n        \\<Longrightarrow> P;\n     u \\<in> M\\<rbrakk>\n    \\<Longrightarrow> P", "unfolding invertible_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>v\\<in>M.\n                u \\<cdot> v = \\<one> \\<and> v \\<cdot> u = \\<one>;\n     \\<And>v.\n        \\<lbrakk>u \\<cdot> v = \\<one> \\<and> v \\<cdot> u = \\<one>;\n         v \\<in> M\\<rbrakk>\n        \\<Longrightarrow> P;\n     u \\<in> M\\<rbrakk>\n    \\<Longrightarrow> P", "by fast"], ["", "text \\<open>p 31, ll 6--7\\<close>"], ["", "theorem inverse_unique:\n  \"\\<lbrakk> u \\<cdot> v' = \\<one>; v \\<cdot> u = \\<one>; u \\<in> M;  v \\<in> M; v' \\<in> M \\<rbrakk> \\<Longrightarrow> v = v'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<cdot> v' = \\<one>; v \\<cdot> u = \\<one>; u \\<in> M;\n     v \\<in> M; v' \\<in> M\\<rbrakk>\n    \\<Longrightarrow> v = v'", "by (metis associative left_unit right_unit)"], ["", "text \\<open>p 31, l 7\\<close>"], ["", "definition inverse where \"inverse = (\\<lambda>u \\<in> M. THE v. v \\<in> M \\<and> u \\<cdot> v = \\<one> \\<and> v \\<cdot> u = \\<one>)\""], ["", "text \\<open>p 31, l 7\\<close>"], ["", "theorem inverse_equality:\n  \"\\<lbrakk> u \\<cdot> v = \\<one>; v \\<cdot> u = \\<one>; u \\<in> M; v \\<in> M \\<rbrakk> \\<Longrightarrow> inverse u = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<cdot> v = \\<one>; v \\<cdot> u = \\<one>; u \\<in> M;\n     v \\<in> M\\<rbrakk>\n    \\<Longrightarrow> inverse u = v", "unfolding inverse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<cdot> v = \\<one>; v \\<cdot> u = \\<one>; u \\<in> M;\n     v \\<in> M\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>u\\<in>M.\n                          THE v.\n                             v \\<in> M \\<and>\n                             u \\<cdot> v = \\<one> \\<and>\n                             v \\<cdot> u = \\<one>)\n                       u =\n                      v", "using inverse_unique"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<cdot> ?v' = \\<one>; ?v \\<cdot> ?u = \\<one>; ?u \\<in> M;\n   ?v \\<in> M; ?v' \\<in> M\\<rbrakk>\n  \\<Longrightarrow> ?v = ?v'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<cdot> v = \\<one>; v \\<cdot> u = \\<one>; u \\<in> M;\n     v \\<in> M\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>u\\<in>M.\n                          THE v.\n                             v \\<in> M \\<and>\n                             u \\<cdot> v = \\<one> \\<and>\n                             v \\<cdot> u = \\<one>)\n                       u =\n                      v", "by simp blast"], ["", "text \\<open>p 31, l 7\\<close>"], ["", "lemma invertible_inverse_closed [intro, simp]:\n  \"\\<lbrakk> invertible u; u \\<in> M \\<rbrakk> \\<Longrightarrow> inverse u \\<in> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible u; u \\<in> M\\<rbrakk>\n    \\<Longrightarrow> inverse u \\<in> M", "using inverse_equality"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<cdot> ?v = \\<one>; ?v \\<cdot> ?u = \\<one>; ?u \\<in> M;\n   ?v \\<in> M\\<rbrakk>\n  \\<Longrightarrow> inverse ?u = ?v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible u; u \\<in> M\\<rbrakk>\n    \\<Longrightarrow> inverse u \\<in> M", "by auto"], ["", "text \\<open>p 31, l 7\\<close>"], ["", "lemma inverse_undefined [intro, simp]:\n  \"u \\<notin> M \\<Longrightarrow> inverse u = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<notin> M \\<Longrightarrow> inverse u = undefined", "by (simp add: inverse_def)"], ["", "text \\<open>p 31, l 7\\<close>"], ["", "lemma invertible_left_inverse [simp]:\n  \"\\<lbrakk> invertible u; u \\<in> M \\<rbrakk> \\<Longrightarrow> inverse u \\<cdot> u = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible u; u \\<in> M\\<rbrakk>\n    \\<Longrightarrow> inverse u \\<cdot> u = \\<one>", "using inverse_equality"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<cdot> ?v = \\<one>; ?v \\<cdot> ?u = \\<one>; ?u \\<in> M;\n   ?v \\<in> M\\<rbrakk>\n  \\<Longrightarrow> inverse ?u = ?v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible u; u \\<in> M\\<rbrakk>\n    \\<Longrightarrow> inverse u \\<cdot> u = \\<one>", "by auto"], ["", "text \\<open>p 31, l 7\\<close>"], ["", "lemma invertible_right_inverse [simp]:\n  \"\\<lbrakk> invertible u; u \\<in> M \\<rbrakk> \\<Longrightarrow> u \\<cdot> inverse u = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible u; u \\<in> M\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> inverse u = \\<one>", "using inverse_equality"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<cdot> ?v = \\<one>; ?v \\<cdot> ?u = \\<one>; ?u \\<in> M;\n   ?v \\<in> M\\<rbrakk>\n  \\<Longrightarrow> inverse ?u = ?v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible u; u \\<in> M\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> inverse u = \\<one>", "by auto"], ["", "text \\<open>p 31, l 7\\<close>"], ["", "lemma invertible_left_cancel [simp]:\n  \"\\<lbrakk> invertible x; x \\<in> M; y \\<in> M; z \\<in> M \\<rbrakk> \\<Longrightarrow> x \\<cdot> y = x \\<cdot> z \\<longleftrightarrow> y = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible x; x \\<in> M; y \\<in> M; z \\<in> M\\<rbrakk>\n    \\<Longrightarrow> (x \\<cdot> y = x \\<cdot> z) = (y = z)", "by (metis associative invertible_def left_unit)"], ["", "text \\<open>p 31, l 7\\<close>"], ["", "lemma invertible_right_cancel [simp]:\n  \"\\<lbrakk> invertible x; x \\<in> M; y \\<in> M; z \\<in> M \\<rbrakk> \\<Longrightarrow> y \\<cdot> x = z \\<cdot> x \\<longleftrightarrow> y = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible x; x \\<in> M; y \\<in> M; z \\<in> M\\<rbrakk>\n    \\<Longrightarrow> (y \\<cdot> x = z \\<cdot> x) = (y = z)", "by (metis associative invertible_def right_unit)"], ["", "text \\<open>p 31, l 7\\<close>"], ["", "lemma inverse_unit [simp]: \"inverse \\<one> = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse \\<one> = \\<one>", "using inverse_equality"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<cdot> ?v = \\<one>; ?v \\<cdot> ?u = \\<one>; ?u \\<in> M;\n   ?v \\<in> M\\<rbrakk>\n  \\<Longrightarrow> inverse ?u = ?v\n\ngoal (1 subgoal):\n 1. inverse \\<one> = \\<one>", "by blast"], ["", "text \\<open>p 31, ll 7--8\\<close>"], ["", "theorem invertible_inverse_invertible [intro, simp]:\n  \"\\<lbrakk> invertible u; u \\<in> M \\<rbrakk> \\<Longrightarrow> invertible (inverse u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible u; u \\<in> M\\<rbrakk>\n    \\<Longrightarrow> invertible (inverse u)", "using invertible_left_inverse invertible_right_inverse"], ["proof (prove)\nusing this:\n  \\<lbrakk>invertible ?u; ?u \\<in> M\\<rbrakk>\n  \\<Longrightarrow> inverse ?u \\<cdot> ?u = \\<one>\n  \\<lbrakk>invertible ?u; ?u \\<in> M\\<rbrakk>\n  \\<Longrightarrow> ?u \\<cdot> inverse ?u = \\<one>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible u; u \\<in> M\\<rbrakk>\n    \\<Longrightarrow> invertible (inverse u)", "by blast"], ["", "text \\<open>p 31, l 8\\<close>"], ["", "theorem invertible_inverse_inverse [simp]:\n  \"\\<lbrakk> invertible u; u \\<in> M \\<rbrakk> \\<Longrightarrow> inverse (inverse u) = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible u; u \\<in> M\\<rbrakk>\n    \\<Longrightarrow> inverse (inverse u) = u", "by (simp add: inverse_equality)"], ["", "end"], ["", "(* monoid *)"], ["", "context submonoid begin"], ["", "text \\<open>Reasoning about @{term invertible} and @{term inverse} in submonoids.\\<close>"], ["", "text \\<open>p 31, l 7\\<close>"], ["", "lemma submonoid_invertible [intro, simp]:\n  \"\\<lbrakk> sub.invertible u; u \\<in> N \\<rbrakk> \\<Longrightarrow> invertible u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sub.invertible u; u \\<in> N\\<rbrakk>\n    \\<Longrightarrow> invertible u", "using invertibleI"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<cdot> ?v = \\<one>; ?v \\<cdot> ?u = \\<one>; ?u \\<in> M;\n   ?v \\<in> M\\<rbrakk>\n  \\<Longrightarrow> invertible ?u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>sub.invertible u; u \\<in> N\\<rbrakk>\n    \\<Longrightarrow> invertible u", "by blast"], ["", "text \\<open>p 31, l 7\\<close>"], ["", "lemma submonoid_inverse_closed [intro, simp]:\n  \"\\<lbrakk> sub.invertible u; u \\<in> N \\<rbrakk> \\<Longrightarrow> inverse u \\<in> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sub.invertible u; u \\<in> N\\<rbrakk>\n    \\<Longrightarrow> inverse u \\<in> N", "using inverse_equality"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<cdot> ?v = \\<one>; ?v \\<cdot> ?u = \\<one>; ?u \\<in> M;\n   ?v \\<in> M\\<rbrakk>\n  \\<Longrightarrow> inverse ?u = ?v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>sub.invertible u; u \\<in> N\\<rbrakk>\n    \\<Longrightarrow> inverse u \\<in> N", "by auto"], ["", "end"], ["", "(* submonoid *)"], ["", "text \\<open>Def 1.2\\<close>"], ["", "text \\<open>p 31, ll 9--10\\<close>"], ["", "locale group =\n  monoid G \"(\\<cdot>)\" \\<one> for G and composition (infixl \"\\<cdot>\" 70) and unit (\"\\<one>\") +\n  assumes invertible [simp, intro]: \"u \\<in> G \\<Longrightarrow> invertible u\""], ["", "text \\<open>p 31, ll 11--12\\<close>"], ["", "locale subgroup = submonoid G M \"(\\<cdot>)\" \\<one> + sub: group G \"(\\<cdot>)\" \\<one>\n  for G and M and composition (infixl \"\\<cdot>\" 70) and unit (\"\\<one>\")\nbegin"], ["", "text \\<open>Reasoning about @{term invertible} and @{term inverse} in subgroups.\\<close>"], ["", "text \\<open>p 31, ll 11--12\\<close>"], ["", "lemma subgroup_inverse_equality [simp]:\n  \"u \\<in> G \\<Longrightarrow> inverse u = sub.inverse u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> G \\<Longrightarrow> inverse u = sub.inverse u", "by (simp add: inverse_equality)"], ["", "text \\<open>p 31, ll 11--12\\<close>"], ["", "lemma subgroup_inverse_iff [simp]:\n  \"\\<lbrakk> invertible x; x \\<in> M \\<rbrakk> \\<Longrightarrow> inverse x \\<in> G \\<longleftrightarrow> x \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible x; x \\<in> M\\<rbrakk>\n    \\<Longrightarrow> (inverse x \\<in> G) = (x \\<in> G)", "using invertible_inverse_inverse sub.invertible_inverse_closed"], ["proof (prove)\nusing this:\n  \\<lbrakk>invertible ?u; ?u \\<in> M\\<rbrakk>\n  \\<Longrightarrow> inverse (inverse ?u) = ?u\n  \\<lbrakk>sub.invertible ?u; ?u \\<in> G\\<rbrakk>\n  \\<Longrightarrow> sub.inverse ?u \\<in> G\n\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible x; x \\<in> M\\<rbrakk>\n    \\<Longrightarrow> (inverse x \\<in> G) = (x \\<in> G)", "by fastforce"], ["", "end"], ["", "(* subgroup *)"], ["", "text \\<open>p 31, ll 11--12\\<close>"], ["", "lemma subgroup_transitive [trans]:\n  assumes \"subgroup K H composition unit\"\n    and \"subgroup H G composition unit\"\n  shows \"subgroup K G composition unit\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup K G composition unit", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup K G composition unit", "interpret K: subgroup K H composition unit"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup K H composition unit", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup K G composition unit", "interpret H: subgroup H G composition unit"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G composition unit", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup K G composition unit", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup K G composition unit", "by unfold_locales auto"], ["proof (state)\nthis:\n  subgroup K G composition unit\n\ngoal:\nNo subgoals!", "qed"], ["", "context monoid begin"], ["", "text \\<open>Jacobson states both directions, but the other one is trivial.\\<close>"], ["", "text \\<open>p 31, ll 12--15\\<close>"], ["", "theorem subgroupI:\n  fixes G\n  assumes subset [THEN subsetD, intro]: \"G \\<subseteq> M\"\n    and [intro]: \"\\<one> \\<in> G\"\n    and [intro]: \"\\<And>g h. \\<lbrakk> g \\<in> G; h \\<in> G \\<rbrakk> \\<Longrightarrow> g \\<cdot> h \\<in> G\"\n    and [intro]: \"\\<And>g. g \\<in> G \\<Longrightarrow> invertible g\"\n    and [intro]: \"\\<And>g. g \\<in> G \\<Longrightarrow> inverse g \\<in> G\"\n  shows \"subgroup G M (\\<cdot>) \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup G M (\\<cdot>) \\<one>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup G M (\\<cdot>) \\<one>", "interpret sub: monoid G \"(\\<cdot>)\" \\<one>"], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid G (\\<cdot>) \\<one>", "by unfold_locales auto"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup G M (\\<cdot>) \\<one>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup G M (\\<cdot>) \\<one>", "proof unfold_locales"], ["proof (state)\ngoal (4 subgoals):\n 1. G \\<subseteq> M\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> G; b \\<in> G\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> b \\<in> G\n 3. \\<one> \\<in> G\n 4. \\<And>u. u \\<in> G \\<Longrightarrow> sub.invertible u", "fix u"], ["proof (state)\ngoal (4 subgoals):\n 1. G \\<subseteq> M\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> G; b \\<in> G\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> b \\<in> G\n 3. \\<one> \\<in> G\n 4. \\<And>u. u \\<in> G \\<Longrightarrow> sub.invertible u", "assume [intro]: \"u \\<in> G\""], ["proof (state)\nthis:\n  u \\<in> G\n\ngoal (4 subgoals):\n 1. G \\<subseteq> M\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> G; b \\<in> G\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> b \\<in> G\n 3. \\<one> \\<in> G\n 4. \\<And>u. u \\<in> G \\<Longrightarrow> sub.invertible u", "show \"sub.invertible u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sub.invertible u", "using invertible_left_inverse invertible_right_inverse"], ["proof (prove)\nusing this:\n  \\<lbrakk>invertible ?u; ?u \\<in> M\\<rbrakk>\n  \\<Longrightarrow> inverse ?u \\<cdot> ?u = \\<one>\n  \\<lbrakk>invertible ?u; ?u \\<in> M\\<rbrakk>\n  \\<Longrightarrow> ?u \\<cdot> inverse ?u = \\<one>\n\ngoal (1 subgoal):\n 1. sub.invertible u", "by blast"], ["proof (state)\nthis:\n  sub.invertible u\n\ngoal (3 subgoals):\n 1. G \\<subseteq> M\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> G; b \\<in> G\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> b \\<in> G\n 3. \\<one> \\<in> G", "qed auto"], ["proof (state)\nthis:\n  subgroup G M (\\<cdot>) \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>p 31, l 16\\<close>"], ["", "definition \"Units = {u \\<in> M. invertible u}\""], ["", "text \\<open>p 31, l 16\\<close>"], ["", "lemma mem_UnitsI:\n  \"\\<lbrakk> invertible u; u \\<in> M \\<rbrakk> \\<Longrightarrow> u \\<in> Units\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible u; u \\<in> M\\<rbrakk>\n    \\<Longrightarrow> u \\<in> Units", "unfolding Units_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible u; u \\<in> M\\<rbrakk>\n    \\<Longrightarrow> u \\<in> {u \\<in> M. invertible u}", "by clarify"], ["", "text \\<open>p 31, l 16\\<close>"], ["", "lemma mem_UnitsD:\n  \"\\<lbrakk> u \\<in> Units \\<rbrakk> \\<Longrightarrow> invertible u \\<and> u \\<in> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> Units \\<Longrightarrow> invertible u \\<and> u \\<in> M", "unfolding Units_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> {u \\<in> M. invertible u} \\<Longrightarrow>\n    invertible u \\<and> u \\<in> M", "by clarify"], ["", "text \\<open>p 31, ll 16--21\\<close>"], ["", "interpretation units: subgroup Units M"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup Units M (\\<cdot>) \\<one>", "proof (rule subgroupI)"], ["proof (state)\ngoal (5 subgoals):\n 1. Units \\<subseteq> M\n 2. \\<one> \\<in> Units\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Units; h \\<in> Units\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Units\n 4. \\<And>g. g \\<in> Units \\<Longrightarrow> invertible g\n 5. \\<And>g. g \\<in> Units \\<Longrightarrow> inverse g \\<in> Units", "fix u1 u2"], ["proof (state)\ngoal (5 subgoals):\n 1. Units \\<subseteq> M\n 2. \\<one> \\<in> Units\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Units; h \\<in> Units\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Units\n 4. \\<And>g. g \\<in> Units \\<Longrightarrow> invertible g\n 5. \\<And>g. g \\<in> Units \\<Longrightarrow> inverse g \\<in> Units", "assume Units [THEN mem_UnitsD, simp]: \"u1 \\<in> Units\" \"u2 \\<in> Units\""], ["proof (state)\nthis:\n  invertible u1 \\<and> u1 \\<in> M\n  invertible u2 \\<and> u2 \\<in> M\n\ngoal (5 subgoals):\n 1. Units \\<subseteq> M\n 2. \\<one> \\<in> Units\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Units; h \\<in> Units\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Units\n 4. \\<And>g. g \\<in> Units \\<Longrightarrow> invertible g\n 5. \\<And>g. g \\<in> Units \\<Longrightarrow> inverse g \\<in> Units", "have \"(u1 \\<cdot> u2) \\<cdot> (inverse u2 \\<cdot> inverse u1) = (u1 \\<cdot> (u2 \\<cdot> inverse u2)) \\<cdot> inverse u1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u1 \\<cdot> u2 \\<cdot> (inverse u2 \\<cdot> inverse u1) =\n    u1 \\<cdot> (u2 \\<cdot> inverse u2) \\<cdot> inverse u1", "by (simp add: associative del: invertible_left_inverse invertible_right_inverse)"], ["proof (state)\nthis:\n  u1 \\<cdot> u2 \\<cdot> (inverse u2 \\<cdot> inverse u1) =\n  u1 \\<cdot> (u2 \\<cdot> inverse u2) \\<cdot> inverse u1\n\ngoal (5 subgoals):\n 1. Units \\<subseteq> M\n 2. \\<one> \\<in> Units\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Units; h \\<in> Units\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Units\n 4. \\<And>g. g \\<in> Units \\<Longrightarrow> invertible g\n 5. \\<And>g. g \\<in> Units \\<Longrightarrow> inverse g \\<in> Units", "also"], ["proof (state)\nthis:\n  u1 \\<cdot> u2 \\<cdot> (inverse u2 \\<cdot> inverse u1) =\n  u1 \\<cdot> (u2 \\<cdot> inverse u2) \\<cdot> inverse u1\n\ngoal (5 subgoals):\n 1. Units \\<subseteq> M\n 2. \\<one> \\<in> Units\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Units; h \\<in> Units\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Units\n 4. \\<And>g. g \\<in> Units \\<Longrightarrow> invertible g\n 5. \\<And>g. g \\<in> Units \\<Longrightarrow> inverse g \\<in> Units", "have \"\\<dots> = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u1 \\<cdot> (u2 \\<cdot> inverse u2) \\<cdot> inverse u1 = \\<one>", "by simp"], ["proof (state)\nthis:\n  u1 \\<cdot> (u2 \\<cdot> inverse u2) \\<cdot> inverse u1 = \\<one>\n\ngoal (5 subgoals):\n 1. Units \\<subseteq> M\n 2. \\<one> \\<in> Units\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Units; h \\<in> Units\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Units\n 4. \\<And>g. g \\<in> Units \\<Longrightarrow> invertible g\n 5. \\<And>g. g \\<in> Units \\<Longrightarrow> inverse g \\<in> Units", "finally"], ["proof (chain)\npicking this:\n  u1 \\<cdot> u2 \\<cdot> (inverse u2 \\<cdot> inverse u1) = \\<one>", "have inv1: \"(u1 \\<cdot> u2) \\<cdot> (inverse u2 \\<cdot> inverse u1) = \\<one>\""], ["proof (prove)\nusing this:\n  u1 \\<cdot> u2 \\<cdot> (inverse u2 \\<cdot> inverse u1) = \\<one>\n\ngoal (1 subgoal):\n 1. u1 \\<cdot> u2 \\<cdot> (inverse u2 \\<cdot> inverse u1) = \\<one>", "by simp  \\<comment> \\<open>ll 16--18\\<close>"], ["proof (state)\nthis:\n  u1 \\<cdot> u2 \\<cdot> (inverse u2 \\<cdot> inverse u1) = \\<one>\n\ngoal (5 subgoals):\n 1. Units \\<subseteq> M\n 2. \\<one> \\<in> Units\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Units; h \\<in> Units\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Units\n 4. \\<And>g. g \\<in> Units \\<Longrightarrow> invertible g\n 5. \\<And>g. g \\<in> Units \\<Longrightarrow> inverse g \\<in> Units", "have \"(inverse u2 \\<cdot> inverse u1) \\<cdot> (u1 \\<cdot> u2) = (inverse u2 \\<cdot> (inverse u1 \\<cdot> u1)) \\<cdot> u2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse u2 \\<cdot> inverse u1 \\<cdot> (u1 \\<cdot> u2) =\n    inverse u2 \\<cdot> (inverse u1 \\<cdot> u1) \\<cdot> u2", "by (simp add: associative del: invertible_left_inverse invertible_right_inverse)"], ["proof (state)\nthis:\n  inverse u2 \\<cdot> inverse u1 \\<cdot> (u1 \\<cdot> u2) =\n  inverse u2 \\<cdot> (inverse u1 \\<cdot> u1) \\<cdot> u2\n\ngoal (5 subgoals):\n 1. Units \\<subseteq> M\n 2. \\<one> \\<in> Units\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Units; h \\<in> Units\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Units\n 4. \\<And>g. g \\<in> Units \\<Longrightarrow> invertible g\n 5. \\<And>g. g \\<in> Units \\<Longrightarrow> inverse g \\<in> Units", "also"], ["proof (state)\nthis:\n  inverse u2 \\<cdot> inverse u1 \\<cdot> (u1 \\<cdot> u2) =\n  inverse u2 \\<cdot> (inverse u1 \\<cdot> u1) \\<cdot> u2\n\ngoal (5 subgoals):\n 1. Units \\<subseteq> M\n 2. \\<one> \\<in> Units\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Units; h \\<in> Units\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Units\n 4. \\<And>g. g \\<in> Units \\<Longrightarrow> invertible g\n 5. \\<And>g. g \\<in> Units \\<Longrightarrow> inverse g \\<in> Units", "have \"\\<dots> = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse u2 \\<cdot> (inverse u1 \\<cdot> u1) \\<cdot> u2 = \\<one>", "by simp"], ["proof (state)\nthis:\n  inverse u2 \\<cdot> (inverse u1 \\<cdot> u1) \\<cdot> u2 = \\<one>\n\ngoal (5 subgoals):\n 1. Units \\<subseteq> M\n 2. \\<one> \\<in> Units\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Units; h \\<in> Units\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Units\n 4. \\<And>g. g \\<in> Units \\<Longrightarrow> invertible g\n 5. \\<And>g. g \\<in> Units \\<Longrightarrow> inverse g \\<in> Units", "finally"], ["proof (chain)\npicking this:\n  inverse u2 \\<cdot> inverse u1 \\<cdot> (u1 \\<cdot> u2) = \\<one>", "have inv2: \"(inverse u2 \\<cdot> inverse u1) \\<cdot> (u1 \\<cdot> u2) = \\<one>\""], ["proof (prove)\nusing this:\n  inverse u2 \\<cdot> inverse u1 \\<cdot> (u1 \\<cdot> u2) = \\<one>\n\ngoal (1 subgoal):\n 1. inverse u2 \\<cdot> inverse u1 \\<cdot> (u1 \\<cdot> u2) = \\<one>", "by simp  \\<comment> \\<open>l 9, ?and similarly?\\<close>"], ["proof (state)\nthis:\n  inverse u2 \\<cdot> inverse u1 \\<cdot> (u1 \\<cdot> u2) = \\<one>\n\ngoal (5 subgoals):\n 1. Units \\<subseteq> M\n 2. \\<one> \\<in> Units\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Units; h \\<in> Units\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Units\n 4. \\<And>g. g \\<in> Units \\<Longrightarrow> invertible g\n 5. \\<And>g. g \\<in> Units \\<Longrightarrow> inverse g \\<in> Units", "show \"u1 \\<cdot> u2 \\<in> Units\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u1 \\<cdot> u2 \\<in> Units", "using inv1 inv2 invertibleI mem_UnitsI"], ["proof (prove)\nusing this:\n  u1 \\<cdot> u2 \\<cdot> (inverse u2 \\<cdot> inverse u1) = \\<one>\n  inverse u2 \\<cdot> inverse u1 \\<cdot> (u1 \\<cdot> u2) = \\<one>\n  \\<lbrakk>?u \\<cdot> ?v = \\<one>; ?v \\<cdot> ?u = \\<one>; ?u \\<in> M;\n   ?v \\<in> M\\<rbrakk>\n  \\<Longrightarrow> invertible ?u\n  \\<lbrakk>invertible ?u; ?u \\<in> M\\<rbrakk>\n  \\<Longrightarrow> ?u \\<in> Units\n\ngoal (1 subgoal):\n 1. u1 \\<cdot> u2 \\<in> Units", "by auto"], ["proof (state)\nthis:\n  u1 \\<cdot> u2 \\<in> Units\n\ngoal (4 subgoals):\n 1. Units \\<subseteq> M\n 2. \\<one> \\<in> Units\n 3. \\<And>g. g \\<in> Units \\<Longrightarrow> invertible g\n 4. \\<And>g. g \\<in> Units \\<Longrightarrow> inverse g \\<in> Units", "qed (auto simp: Units_def)"], ["", "text \\<open>p 31, ll 21--22\\<close>"], ["", "theorem group_of_Units [intro, simp]:\n  \"group Units (\\<cdot>) \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group Units (\\<cdot>) \\<one>", ".."], ["", "text \\<open>p 31, l 19\\<close>"], ["", "lemma composition_invertible [simp, intro]:\n  \"\\<lbrakk> invertible x; invertible y; x \\<in> M; y \\<in> M \\<rbrakk> \\<Longrightarrow> invertible (x \\<cdot> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible x; invertible y; x \\<in> M; y \\<in> M\\<rbrakk>\n    \\<Longrightarrow> invertible (x \\<cdot> y)", "using mem_UnitsD mem_UnitsI"], ["proof (prove)\nusing this:\n  ?u \\<in> Units \\<Longrightarrow> invertible ?u \\<and> ?u \\<in> M\n  \\<lbrakk>invertible ?u; ?u \\<in> M\\<rbrakk>\n  \\<Longrightarrow> ?u \\<in> Units\n\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible x; invertible y; x \\<in> M; y \\<in> M\\<rbrakk>\n    \\<Longrightarrow> invertible (x \\<cdot> y)", "by blast"], ["", "text \\<open>p 31, l 20\\<close>"], ["", "lemma unit_invertible:\n  \"invertible \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible \\<one>", "by fast"], ["", "text \\<open>Useful simplification rules\\<close>"], ["", "text \\<open>p 31, l 22\\<close>"], ["", "lemma invertible_right_inverse2:\n  \"\\<lbrakk> invertible u; u \\<in> M; v \\<in> M \\<rbrakk> \\<Longrightarrow> u \\<cdot> (inverse u \\<cdot> v) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible u; u \\<in> M; v \\<in> M\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> (inverse u \\<cdot> v) = v", "by (simp add: associative [THEN sym])"], ["", "text \\<open>p 31, l 22\\<close>"], ["", "lemma invertible_left_inverse2:\n  \"\\<lbrakk> invertible u; u \\<in> M; v \\<in> M \\<rbrakk> \\<Longrightarrow> inverse u \\<cdot> (u \\<cdot> v) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible u; u \\<in> M; v \\<in> M\\<rbrakk>\n    \\<Longrightarrow> inverse u \\<cdot> (u \\<cdot> v) = v", "by (simp add: associative [THEN sym])"], ["", "text \\<open>p 31, l 22\\<close>"], ["", "lemma inverse_composition_commute:\n  assumes [simp]: \"invertible x\" \"invertible y\" \"x \\<in> M\" \"y \\<in> M\"\n  shows \"inverse (x \\<cdot> y) = inverse y \\<cdot> inverse x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse (x \\<cdot> y) = inverse y \\<cdot> inverse x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inverse (x \\<cdot> y) = inverse y \\<cdot> inverse x", "have \"inverse (x \\<cdot> y) \\<cdot> (x \\<cdot> y) = (inverse y \\<cdot> inverse x) \\<cdot> (x \\<cdot> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse (x \\<cdot> y) \\<cdot> (x \\<cdot> y) =\n    inverse y \\<cdot> inverse x \\<cdot> (x \\<cdot> y)", "by (simp add: invertible_left_inverse2 associative)"], ["proof (state)\nthis:\n  inverse (x \\<cdot> y) \\<cdot> (x \\<cdot> y) =\n  inverse y \\<cdot> inverse x \\<cdot> (x \\<cdot> y)\n\ngoal (1 subgoal):\n 1. inverse (x \\<cdot> y) = inverse y \\<cdot> inverse x", "then"], ["proof (chain)\npicking this:\n  inverse (x \\<cdot> y) \\<cdot> (x \\<cdot> y) =\n  inverse y \\<cdot> inverse x \\<cdot> (x \\<cdot> y)", "show ?thesis"], ["proof (prove)\nusing this:\n  inverse (x \\<cdot> y) \\<cdot> (x \\<cdot> y) =\n  inverse y \\<cdot> inverse x \\<cdot> (x \\<cdot> y)\n\ngoal (1 subgoal):\n 1. inverse (x \\<cdot> y) = inverse y \\<cdot> inverse x", "by (simp del: invertible_left_inverse)"], ["proof (state)\nthis:\n  inverse (x \\<cdot> y) = inverse y \\<cdot> inverse x\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* monoid *)"], ["", "text \\<open>p 31, l 24\\<close>"], ["", "context transformations begin"], ["", "text \\<open>p 31, ll 25--26\\<close>"], ["", "theorem invertible_is_bijective:\n  assumes dom: \"\\<alpha> \\<in> S \\<rightarrow>\\<^sub>E S\"\n  shows \"invertible \\<alpha> \\<longleftrightarrow> bij_betw \\<alpha> S S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible \\<alpha> = bij_betw \\<alpha> S S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. invertible \\<alpha> = bij_betw \\<alpha> S S", "from dom"], ["proof (chain)\npicking this:\n  \\<alpha> \\<in> S \\<rightarrow>\\<^sub>E S", "interpret map \\<alpha> S S"], ["proof (prove)\nusing this:\n  \\<alpha> \\<in> S \\<rightarrow>\\<^sub>E S\n\ngoal (1 subgoal):\n 1. map \\<alpha> S S", "by unfold_locales"], ["proof (state)\ngoal (1 subgoal):\n 1. invertible \\<alpha> = bij_betw \\<alpha> S S", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible \\<alpha> = bij_betw \\<alpha> S S", "by (auto simp add: bij_betw_iff_has_inverse invertible_def)"], ["proof (state)\nthis:\n  invertible \\<alpha> = bij_betw \\<alpha> S S\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>p 31, ll 26--27\\<close>"], ["", "theorem Units_bijective:\n  \"Units = {\\<alpha> \\<in> S \\<rightarrow>\\<^sub>E S. bij_betw \\<alpha> S S}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Units =\n    {\\<alpha> \\<in> S \\<rightarrow>\\<^sub>E S. bij_betw \\<alpha> S S}", "unfolding Units_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {u \\<in> S \\<rightarrow>\\<^sub>E S. invertible u} =\n    {\\<alpha> \\<in> S \\<rightarrow>\\<^sub>E S. bij_betw \\<alpha> S S}", "by (auto simp add: invertible_is_bijective)"], ["", "text \\<open>p 31, ll 26--27\\<close>"], ["", "lemma Units_bij_betwI [intro, simp]:\n  \"\\<alpha> \\<in> Units \\<Longrightarrow> bij_betw \\<alpha> S S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<alpha> \\<in> Units \\<Longrightarrow> bij_betw \\<alpha> S S", "by (simp add: Units_bijective)"], ["", "text \\<open>p 31, ll 26--27\\<close>"], ["", "lemma Units_bij_betwD [dest, simp]:\n  \"\\<lbrakk> \\<alpha> \\<in> S \\<rightarrow>\\<^sub>E S; bij_betw \\<alpha> S S \\<rbrakk> \\<Longrightarrow> \\<alpha> \\<in> Units\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<alpha> \\<in> S \\<rightarrow>\\<^sub>E S;\n     bij_betw \\<alpha> S S\\<rbrakk>\n    \\<Longrightarrow> \\<alpha> \\<in> Units", "unfolding Units_bijective"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<alpha> \\<in> S \\<rightarrow>\\<^sub>E S;\n     bij_betw \\<alpha> S S\\<rbrakk>\n    \\<Longrightarrow> \\<alpha>\n                      \\<in> {\\<alpha> \\<in> S \\<rightarrow>\\<^sub>E S.\n                             bij_betw \\<alpha> S S}", "by simp"], ["", "text \\<open>p 31, ll 28--29\\<close>"], ["", "abbreviation \"Sym \\<equiv> Units\""], ["", "text \\<open>p 31, ll 26--28\\<close>"], ["", "sublocale symmetric: group \"Sym\" \"compose S\" \"identity S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group Sym (compose S) (identity S)", "by (fact group_of_Units)"], ["", "end"], ["", "(* transformations *)"], ["", "text \\<open>p 32, ll 18--19\\<close>"], ["", "locale transformation_group =\n  transformations S + symmetric: subgroup G Sym \"compose S\" \"identity S\" for G and S\nbegin"], ["", "text \\<open>p 32, ll 18--19\\<close>"], ["", "lemma transformation_group_closed [intro, simp]:\n  \"\\<lbrakk> \\<alpha> \\<in> G; x \\<in> S \\<rbrakk> \\<Longrightarrow> \\<alpha> x \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<alpha> \\<in> G; x \\<in> S\\<rbrakk>\n    \\<Longrightarrow> \\<alpha> x \\<in> S", "using bij_betwE"], ["proof (prove)\nusing this:\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<alpha> \\<in> G; x \\<in> S\\<rbrakk>\n    \\<Longrightarrow> \\<alpha> x \\<in> S", "by blast"], ["", "text \\<open>p 32, ll 18--19\\<close>"], ["", "lemma transformation_group_undefined [intro, simp]:\n  \"\\<lbrakk> \\<alpha> \\<in> G; x \\<notin> S \\<rbrakk> \\<Longrightarrow> \\<alpha> x = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<alpha> \\<in> G; x \\<notin> S\\<rbrakk>\n    \\<Longrightarrow> \\<alpha> x = undefined", "by (metis compose_def symmetric.sub.right_unit restrict_apply)"], ["", "end"], ["", "(* transformation_group *)"], ["", "subsection \\<open>Isomorphisms.  Cayley's Theorem\\<close>"], ["", "text \\<open>Def 1.3\\<close>"], ["", "text \\<open>p 37, ll 7--11\\<close>"], ["", "locale monoid_isomorphism =\n  bijective_map \\<eta> M M' +  source: monoid M \"(\\<cdot>)\" \\<one> + target: monoid M' \"(\\<cdot>')\" \"\\<one>'\"\n  for \\<eta> and M and composition (infixl \"\\<cdot>\" 70) and unit (\"\\<one>\")\n    and M' and composition' (infixl \"\\<cdot>''\" 70) and unit' (\"\\<one>''\") +\n  assumes commutes_with_composition: \"\\<lbrakk> x \\<in> M; y \\<in> M \\<rbrakk> \\<Longrightarrow> \\<eta> x \\<cdot>' \\<eta> y = \\<eta> (x \\<cdot> y)\"\n    and commutes_with_unit: \"\\<eta> \\<one> = \\<one>'\""], ["", "text \\<open>p 37, l 10\\<close>"], ["", "definition isomorphic_as_monoids (infixl \"\\<cong>\\<^sub>M\" 50)\n  where \"\\<M> \\<cong>\\<^sub>M \\<M>' \\<longleftrightarrow> (let (M, composition, unit) = \\<M>; (M', composition', unit') = \\<M>' in\n  (\\<exists>\\<eta>. monoid_isomorphism \\<eta> M composition unit M' composition' unit'))\""], ["", "text \\<open>p 37, ll 11--12\\<close>"], ["", "locale monoid_isomorphism' =\n  bijective_map \\<eta> M M' +  source: monoid M \"(\\<cdot>)\" \\<one> + target: monoid M' \"(\\<cdot>')\" \"\\<one>'\"\n  for \\<eta> and M and composition (infixl \"\\<cdot>\" 70) and unit (\"\\<one>\")\n    and M' and composition' (infixl \"\\<cdot>''\" 70) and unit' (\"\\<one>''\") +\n  assumes commutes_with_composition: \"\\<lbrakk> x \\<in> M; y \\<in> M \\<rbrakk> \\<Longrightarrow> \\<eta> x \\<cdot>' \\<eta> y = \\<eta> (x \\<cdot> y)\""], ["", "text \\<open>p 37, ll 11--12\\<close>"], ["", "sublocale monoid_isomorphism \\<subseteq> monoid_isomorphism'"], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid_isomorphism' \\<eta> M (\\<cdot>) \\<one> M' (\\<cdot>') \\<one>'", "by unfold_locales (simp add: commutes_with_composition)"], ["", "text \\<open>Both definitions are equivalent.\\<close>"], ["", "text \\<open>p 37, ll 12--15\\<close>"], ["", "sublocale monoid_isomorphism' \\<subseteq> monoid_isomorphism"], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid_isomorphism \\<eta> M (\\<cdot>) \\<one> M' (\\<cdot>') \\<one>'", "proof unfold_locales"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> M; y \\<in> M\\<rbrakk>\n       \\<Longrightarrow> \\<eta> x \\<cdot>' \\<eta> y = \\<eta> (x \\<cdot> y)\n 2. \\<eta> \\<one> = \\<one>'", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> M; y \\<in> M\\<rbrakk>\n       \\<Longrightarrow> \\<eta> x \\<cdot>' \\<eta> y = \\<eta> (x \\<cdot> y)\n 2. \\<eta> \\<one> = \\<one>'", "fix y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> M; y \\<in> M\\<rbrakk>\n       \\<Longrightarrow> \\<eta> x \\<cdot>' \\<eta> y = \\<eta> (x \\<cdot> y)\n 2. \\<eta> \\<one> = \\<one>'", "assume \"y \\<in> M'\""], ["proof (state)\nthis:\n  y \\<in> M'\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> M; y \\<in> M\\<rbrakk>\n       \\<Longrightarrow> \\<eta> x \\<cdot>' \\<eta> y = \\<eta> (x \\<cdot> y)\n 2. \\<eta> \\<one> = \\<one>'", "then"], ["proof (chain)\npicking this:\n  y \\<in> M'", "obtain x where \"\\<eta> x = y\" \"x \\<in> M\""], ["proof (prove)\nusing this:\n  y \\<in> M'\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>\\<eta> x = y; x \\<in> M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis image_iff surjective)"], ["proof (state)\nthis:\n  \\<eta> x = y\n  x \\<in> M\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> M; y \\<in> M\\<rbrakk>\n       \\<Longrightarrow> \\<eta> x \\<cdot>' \\<eta> y = \\<eta> (x \\<cdot> y)\n 2. \\<eta> \\<one> = \\<one>'", "then"], ["proof (chain)\npicking this:\n  \\<eta> x = y\n  x \\<in> M", "have \"y \\<cdot>' \\<eta> \\<one> = y\""], ["proof (prove)\nusing this:\n  \\<eta> x = y\n  x \\<in> M\n\ngoal (1 subgoal):\n 1. y \\<cdot>' \\<eta> \\<one> = y", "using commutes_with_composition"], ["proof (prove)\nusing this:\n  \\<eta> x = y\n  x \\<in> M\n  \\<lbrakk>?x \\<in> M; ?y \\<in> M\\<rbrakk>\n  \\<Longrightarrow> \\<eta> ?x \\<cdot>' \\<eta> ?y = \\<eta> (?x \\<cdot> ?y)\n\ngoal (1 subgoal):\n 1. y \\<cdot>' \\<eta> \\<one> = y", "by auto"], ["proof (state)\nthis:\n  y \\<cdot>' \\<eta> \\<one> = y\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> M; y \\<in> M\\<rbrakk>\n       \\<Longrightarrow> \\<eta> x \\<cdot>' \\<eta> y = \\<eta> (x \\<cdot> y)\n 2. \\<eta> \\<one> = \\<one>'", "}"], ["proof (state)\nthis:\n  ?y2 \\<in> M' \\<Longrightarrow> ?y2 \\<cdot>' \\<eta> \\<one> = ?y2\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> M; y \\<in> M\\<rbrakk>\n       \\<Longrightarrow> \\<eta> x \\<cdot>' \\<eta> y = \\<eta> (x \\<cdot> y)\n 2. \\<eta> \\<one> = \\<one>'", "then"], ["proof (chain)\npicking this:\n  ?y2 \\<in> M' \\<Longrightarrow> ?y2 \\<cdot>' \\<eta> \\<one> = ?y2", "show \"\\<eta> \\<one> = \\<one>'\""], ["proof (prove)\nusing this:\n  ?y2 \\<in> M' \\<Longrightarrow> ?y2 \\<cdot>' \\<eta> \\<one> = ?y2\n\ngoal (1 subgoal):\n 1. \\<eta> \\<one> = \\<one>'", "by fastforce"], ["proof (state)\nthis:\n  \\<eta> \\<one> = \\<one>'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> M; y \\<in> M\\<rbrakk>\n       \\<Longrightarrow> \\<eta> x \\<cdot>' \\<eta> y = \\<eta> (x \\<cdot> y)", "qed (simp add: commutes_with_composition)"], ["", "context monoid_isomorphism begin"], ["", "text \\<open>p 37, ll 30--33\\<close>"], ["", "theorem inverse_monoid_isomorphism:\n  \"monoid_isomorphism (restrict (inv_into M \\<eta>) M') M' (\\<cdot>') \\<one>' M (\\<cdot>) \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid_isomorphism (restrict (inv_into M \\<eta>) M') M' (\\<cdot>')\n     \\<one>' M (\\<cdot>) \\<one>", "using commutes_with_composition commutes_with_unit surjective"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> M; ?y \\<in> M\\<rbrakk>\n  \\<Longrightarrow> \\<eta> ?x \\<cdot>' \\<eta> ?y = \\<eta> (?x \\<cdot> ?y)\n  \\<eta> \\<one> = \\<one>'\n  \\<eta> ` M = M'\n\ngoal (1 subgoal):\n 1. monoid_isomorphism (restrict (inv_into M \\<eta>) M') M' (\\<cdot>')\n     \\<one>' M (\\<cdot>) \\<one>", "by unfold_locales auto"], ["", "end"], ["", "(* monoid_isomorphism *)"], ["", "text \\<open>We only need that @{term \\<eta>} is symmetric.\\<close>"], ["", "text \\<open>p 37, ll 28--29\\<close>"], ["", "theorem isomorphic_as_monoids_symmetric:\n  \"(M, composition, unit) \\<cong>\\<^sub>M (M', composition', unit') \\<Longrightarrow> (M', composition', unit') \\<cong>\\<^sub>M (M, composition, unit)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (M, composition, unit) \\<cong>\\<^sub>M\n    (M', composition', unit') \\<Longrightarrow>\n    (M', composition', unit') \\<cong>\\<^sub>M (M, composition, unit)", "by (simp add: isomorphic_as_monoids_def) (meson monoid_isomorphism.inverse_monoid_isomorphism)"], ["", "text \\<open>p 38, l 4\\<close>"], ["", "locale left_translations_of_monoid = monoid begin"], ["", "(*\n  We take the liberty of omitting \"left_\" from the name of the translation operation.  The derived\n  transformation monoid and group won't be qualified with \"left\" either.  This avoids qualifications\n  such as \"left.left_...\".  In contexts where left and right translations are used simultaneously,\n  notably subgroup_of_group, qualifiers are needed.\n*)"], ["", "text \\<open>p 38, ll 5--7\\<close>"], ["", "definition translation (\"'(_')\\<^sub>L\") where \"translation = (\\<lambda>a \\<in> M. \\<lambda>x \\<in> M. a \\<cdot> x)\""], ["", "text \\<open>p 38, ll 5--7\\<close>"], ["", "lemma translation_map [intro, simp]:\n  \"a \\<in> M \\<Longrightarrow> (a)\\<^sub>L \\<in> M \\<rightarrow>\\<^sub>E M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> M \\<Longrightarrow> (a)\\<^sub>L \\<in> M \\<rightarrow>\\<^sub>E M", "unfolding translation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> M \\<Longrightarrow>\n    (\\<lambda>a\\<in>M. restrict ((\\<cdot>) a) M) a\n    \\<in> M \\<rightarrow>\\<^sub>E M", "by simp"], ["", "text \\<open>p 38, ll 5--7\\<close>"], ["", "lemma Translations_maps [intro, simp]:\n  \"translation ` M \\<subseteq> M \\<rightarrow>\\<^sub>E M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. translation ` M \\<subseteq> M \\<rightarrow>\\<^sub>E M", "by (simp add: image_subsetI)"], ["", "text \\<open>p 38, ll 5--7\\<close>"], ["", "lemma translation_apply:\n  \"\\<lbrakk> a \\<in> M; b \\<in> M \\<rbrakk> \\<Longrightarrow> (a)\\<^sub>L b = a \\<cdot> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> M; b \\<in> M\\<rbrakk>\n    \\<Longrightarrow> (a)\\<^sub>L b = a \\<cdot> b", "unfolding translation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> M; b \\<in> M\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>a\\<in>M. restrict ((\\<cdot>) a) M) a b =\n                      a \\<cdot> b", "by auto"], ["", "text \\<open>p 38, ll 5--7\\<close>"], ["", "lemma translation_exist:\n  \"f \\<in> translation ` M \\<Longrightarrow> \\<exists>a \\<in> M. f = (a)\\<^sub>L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> translation ` M \\<Longrightarrow>\n    \\<exists>a\\<in>M. f = (a)\\<^sub>L", "by auto"], ["", "text \\<open>p 38, ll 5--7\\<close>"], ["", "lemmas Translations_E [elim] = translation_exist [THEN bexE]"], ["", "text \\<open>p 38, l 10\\<close>"], ["", "theorem translation_unit_eq [simp]:\n  \"identity M = (\\<one>)\\<^sub>L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. identity M = (\\<one>)\\<^sub>L", "unfolding translation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. identity M = (\\<lambda>a\\<in>M. restrict ((\\<cdot>) a) M) \\<one>", "by auto"], ["", "text \\<open>p 38, ll 10--11\\<close>"], ["", "theorem translation_composition_eq [simp]:\n  assumes [simp]: \"a \\<in> M\" \"b \\<in> M\"\n  shows \"compose M (a)\\<^sub>L (b)\\<^sub>L = (a \\<cdot> b)\\<^sub>L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compose M (a)\\<^sub>L (b)\\<^sub>L = (a \\<cdot> b)\\<^sub>L", "unfolding translation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. compose M ((\\<lambda>a\\<in>M. restrict ((\\<cdot>) a) M) a)\n     ((\\<lambda>a\\<in>M. restrict ((\\<cdot>) a) M) b) =\n    (\\<lambda>a\\<in>M. restrict ((\\<cdot>) a) M) (a \\<cdot> b)", "by rule (simp add: associative compose_def)"], ["", "(* Activate @{locale monoid} to simplify subsequent proof. *)"], ["", "text \\<open>p 38, ll 7--9\\<close>"], ["", "sublocale transformation: transformations M"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "text \\<open>p 38, ll 7--9\\<close>"], ["", "theorem Translations_transformation_monoid:\n  \"transformation_monoid (translation ` M) M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation_monoid (translation ` M) M", "by unfold_locales auto"], ["", "text \\<open>p 38, ll 7--9\\<close>"], ["", "sublocale transformation: transformation_monoid \"translation ` M\" M"], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation_monoid (translation ` M) M", "by (fact Translations_transformation_monoid)"], ["", "text \\<open>p 38, l 12\\<close>"], ["", "sublocale map translation M \"translation ` M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map translation M (translation ` M)", "by unfold_locales (simp add: translation_def)"], ["", "text \\<open>p 38, ll 12--16\\<close>"], ["", "theorem translation_isomorphism [intro]:\n  \"monoid_isomorphism translation M (\\<cdot>) \\<one> (translation ` M) (compose M) (identity M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid_isomorphism translation M (\\<cdot>) \\<one> (translation ` M)\n     (compose M) (identity M)", "proof unfold_locales"], ["proof (state)\ngoal (3 subgoals):\n 1. bij_betw translation M (translation ` M)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> M; y \\<in> M\\<rbrakk>\n       \\<Longrightarrow> compose M (x)\\<^sub>L (y)\\<^sub>L =\n                         (x \\<cdot> y)\\<^sub>L\n 3. (\\<one>)\\<^sub>L = identity M", "have \"inj_on translation M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on translation M", "proof (rule inj_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> M; y \\<in> M; (x)\\<^sub>L = (y)\\<^sub>L\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> M; y \\<in> M; (x)\\<^sub>L = (y)\\<^sub>L\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume [simp]: \"a \\<in> M\" \"b \\<in> M\" \"(a)\\<^sub>L = (b)\\<^sub>L\""], ["proof (state)\nthis:\n  a \\<in> M\n  b \\<in> M\n  (a)\\<^sub>L = (b)\\<^sub>L\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> M; y \\<in> M; (x)\\<^sub>L = (y)\\<^sub>L\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"(a)\\<^sub>L \\<one> = (b)\\<^sub>L \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a)\\<^sub>L \\<one> = (b)\\<^sub>L \\<one>", "by simp"], ["proof (state)\nthis:\n  (a)\\<^sub>L \\<one> = (b)\\<^sub>L \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> M; y \\<in> M; (x)\\<^sub>L = (y)\\<^sub>L\\<rbrakk>\n       \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  (a)\\<^sub>L \\<one> = (b)\\<^sub>L \\<one>", "show \"a = b\""], ["proof (prove)\nusing this:\n  (a)\\<^sub>L \\<one> = (b)\\<^sub>L \\<one>\n\ngoal (1 subgoal):\n 1. a = b", "by (simp add: translation_def)"], ["proof (state)\nthis:\n  a = b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on translation M\n\ngoal (3 subgoals):\n 1. bij_betw translation M (translation ` M)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> M; y \\<in> M\\<rbrakk>\n       \\<Longrightarrow> compose M (x)\\<^sub>L (y)\\<^sub>L =\n                         (x \\<cdot> y)\\<^sub>L\n 3. (\\<one>)\\<^sub>L = identity M", "then"], ["proof (chain)\npicking this:\n  inj_on translation M", "show \"bij_betw translation M (translation ` M)\""], ["proof (prove)\nusing this:\n  inj_on translation M\n\ngoal (1 subgoal):\n 1. bij_betw translation M (translation ` M)", "by (simp add: inj_on_imp_bij_betw)"], ["proof (state)\nthis:\n  bij_betw translation M (translation ` M)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> M; y \\<in> M\\<rbrakk>\n       \\<Longrightarrow> compose M (x)\\<^sub>L (y)\\<^sub>L =\n                         (x \\<cdot> y)\\<^sub>L\n 2. (\\<one>)\\<^sub>L = identity M", "qed simp_all"], ["", "text \\<open>p 38, ll 12--16\\<close>"], ["", "sublocale monoid_isomorphism translation M \"(\\<cdot>)\" \\<one> \"translation ` M\" \"compose M\" \"identity M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid_isomorphism translation M (\\<cdot>) \\<one> (translation ` M)\n     (compose M) (identity M)", ".."], ["", "end"], ["", "(* left_translations_of_monoid *)"], ["", "context monoid begin"], ["", "text \\<open>p 38, ll 1--2\\<close>"], ["", "interpretation left_translations_of_monoid"], ["proof (prove)\ngoal (1 subgoal):\n 1. left_translations_of_monoid M (\\<cdot>) \\<one>", ".."], ["", "text \\<open>p 38, ll 1--2\\<close>"], ["", "theorem cayley_monoid:\n  \"\\<exists>M' composition' unit'. transformation_monoid M' M \\<and> (M, (\\<cdot>), \\<one>) \\<cong>\\<^sub>M (M', composition', unit')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>M' composition' unit'.\n       transformation_monoid M' M \\<and>\n       (M, (\\<cdot>), \\<one>) \\<cong>\\<^sub>M (M', composition', unit')", "by (simp add: isomorphic_as_monoids_def) (fast intro: Translations_transformation_monoid)"], ["", "end"], ["", "(* monoid *)"], ["", "text \\<open>p 38, l 17\\<close>"], ["", "locale left_translations_of_group = group begin"], ["", "text \\<open>p 38, ll 17--18\\<close>"], ["", "sublocale left_translations_of_monoid where M = G"], ["proof (prove)\ngoal (1 subgoal):\n 1. left_translations_of_monoid G (\\<cdot>) \\<one>", ".."], ["", "text \\<open>p 38, ll 17--18\\<close>"], ["", "notation translation (\"'(_')\\<^sub>L\")"], ["", "text \\<open>\n  The group of left translations is a subgroup of the symmetric group,\n  hence @{term transformation.sub.invertible}.\n\\<close>"], ["", "text \\<open>p 38, ll 20--22\\<close>"], ["", "theorem translation_invertible [intro, simp]:\n  assumes [simp]: \"a \\<in> G\"\n  shows \"transformation.sub.invertible (a)\\<^sub>L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation.sub.invertible (a)\\<^sub>L", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. compose G (a)\\<^sub>L ?v = identity G\n 2. compose G ?v (a)\\<^sub>L = identity G\n 3. (a)\\<^sub>L \\<in> translation ` G\n 4. ?v \\<in> translation ` G", "show \"compose G (a)\\<^sub>L (inverse a)\\<^sub>L = identity G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compose G (a)\\<^sub>L (inverse a)\\<^sub>L = identity G", "by simp"], ["proof (state)\nthis:\n  compose G (a)\\<^sub>L (inverse a)\\<^sub>L = identity G\n\ngoal (3 subgoals):\n 1. compose G (inverse a)\\<^sub>L (a)\\<^sub>L = identity G\n 2. (a)\\<^sub>L \\<in> translation ` G\n 3. (inverse a)\\<^sub>L \\<in> translation ` G", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. compose G (inverse a)\\<^sub>L (a)\\<^sub>L = identity G\n 2. (a)\\<^sub>L \\<in> translation ` G\n 3. (inverse a)\\<^sub>L \\<in> translation ` G", "show \"compose G (inverse a)\\<^sub>L (a)\\<^sub>L = identity G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compose G (inverse a)\\<^sub>L (a)\\<^sub>L = identity G", "by simp"], ["proof (state)\nthis:\n  compose G (inverse a)\\<^sub>L (a)\\<^sub>L = identity G\n\ngoal (2 subgoals):\n 1. (a)\\<^sub>L \\<in> translation ` G\n 2. (inverse a)\\<^sub>L \\<in> translation ` G", "qed auto"], ["", "text \\<open>p 38, ll 19--20\\<close>"], ["", "theorem translation_bijective [intro, simp]:\n  \"a \\<in> G \\<Longrightarrow> bij_betw (a)\\<^sub>L G G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> G \\<Longrightarrow> bij_betw (a)\\<^sub>L G G", "by (blast intro: transformation.invertible_is_bijective [THEN iffD1])"], ["", "text \\<open>p 38, ll 18--20\\<close>"], ["", "theorem Translations_transformation_group:\n  \"transformation_group (translation ` G) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation_group (translation ` G) G", "proof unfold_locales"], ["proof (state)\ngoal (4 subgoals):\n 1. translation ` G \\<subseteq> transformation.Sym\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> translation ` G; b \\<in> translation ` G\\<rbrakk>\n       \\<Longrightarrow> compose G a b \\<in> translation ` G\n 3. identity G \\<in> translation ` G\n 4. \\<And>u.\n       u \\<in> translation ` G \\<Longrightarrow>\n       transformation.sub.invertible u", "show \"(translation ` G) \\<subseteq> transformation.Sym\""], ["proof (prove)\ngoal (1 subgoal):\n 1. translation ` G \\<subseteq> transformation.Sym", "unfolding transformation.Units_bijective"], ["proof (prove)\ngoal (1 subgoal):\n 1. translation ` G\n    \\<subseteq> {\\<alpha> \\<in> G \\<rightarrow>\\<^sub>E G.\n                 bij_betw \\<alpha> G G}", "by auto"], ["proof (state)\nthis:\n  translation ` G \\<subseteq> transformation.Sym\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> translation ` G; b \\<in> translation ` G\\<rbrakk>\n       \\<Longrightarrow> compose G a b \\<in> translation ` G\n 2. identity G \\<in> translation ` G\n 3. \\<And>u.\n       u \\<in> translation ` G \\<Longrightarrow>\n       transformation.sub.invertible u", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> translation ` G; b \\<in> translation ` G\\<rbrakk>\n       \\<Longrightarrow> compose G a b \\<in> translation ` G\n 2. identity G \\<in> translation ` G\n 3. \\<And>u.\n       u \\<in> translation ` G \\<Longrightarrow>\n       transformation.sub.invertible u", "fix \\<alpha>"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> translation ` G; b \\<in> translation ` G\\<rbrakk>\n       \\<Longrightarrow> compose G a b \\<in> translation ` G\n 2. identity G \\<in> translation ` G\n 3. \\<And>u.\n       u \\<in> translation ` G \\<Longrightarrow>\n       transformation.sub.invertible u", "assume \\<alpha>: \"\\<alpha> \\<in> translation ` G\""], ["proof (state)\nthis:\n  \\<alpha> \\<in> translation ` G\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> translation ` G; b \\<in> translation ` G\\<rbrakk>\n       \\<Longrightarrow> compose G a b \\<in> translation ` G\n 2. identity G \\<in> translation ` G\n 3. \\<And>u.\n       u \\<in> translation ` G \\<Longrightarrow>\n       transformation.sub.invertible u", "then"], ["proof (chain)\npicking this:\n  \\<alpha> \\<in> translation ` G", "obtain a where a: \"a \\<in> G\" and eq: \"\\<alpha> = (a)\\<^sub>L\""], ["proof (prove)\nusing this:\n  \\<alpha> \\<in> translation ` G\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> G; \\<alpha> = (a)\\<^sub>L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  a \\<in> G\n  \\<alpha> = (a)\\<^sub>L\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> translation ` G; b \\<in> translation ` G\\<rbrakk>\n       \\<Longrightarrow> compose G a b \\<in> translation ` G\n 2. identity G \\<in> translation ` G\n 3. \\<And>u.\n       u \\<in> translation ` G \\<Longrightarrow>\n       transformation.sub.invertible u", "with translation_invertible"], ["proof (chain)\npicking this:\n  ?a \\<in> G \\<Longrightarrow> transformation.sub.invertible (?a)\\<^sub>L\n  a \\<in> G\n  \\<alpha> = (a)\\<^sub>L", "show \"transformation.sub.invertible \\<alpha>\""], ["proof (prove)\nusing this:\n  ?a \\<in> G \\<Longrightarrow> transformation.sub.invertible (?a)\\<^sub>L\n  a \\<in> G\n  \\<alpha> = (a)\\<^sub>L\n\ngoal (1 subgoal):\n 1. transformation.sub.invertible \\<alpha>", "by simp"], ["proof (state)\nthis:\n  transformation.sub.invertible \\<alpha>\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> translation ` G; b \\<in> translation ` G\\<rbrakk>\n       \\<Longrightarrow> compose G a b \\<in> translation ` G\n 2. identity G \\<in> translation ` G", "qed auto"], ["", "text \\<open>p 38, ll 18--20\\<close>"], ["", "sublocale transformation: transformation_group \"translation ` G\" G"], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation_group (translation ` G) G", "by (fact Translations_transformation_group)"], ["", "end"], ["", "(* left_translations_of_group *)"], ["", "context group begin"], ["", "text \\<open>p 38, ll 2--3\\<close>"], ["", "interpretation left_translations_of_group"], ["proof (prove)\ngoal (1 subgoal):\n 1. left_translations_of_group G (\\<cdot>) \\<one>", ".."], ["", "text \\<open>p 38, ll 2--3\\<close>"], ["", "theorem cayley_group:\n  \"\\<exists>G' composition' unit'. transformation_group G' G \\<and> (G, (\\<cdot>), \\<one>) \\<cong>\\<^sub>M (G', composition', unit')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>G' composition' unit'.\n       transformation_group G' G \\<and>\n       (G, (\\<cdot>), \\<one>) \\<cong>\\<^sub>M (G', composition', unit')", "by (simp add: isomorphic_as_monoids_def) (fast intro: Translations_transformation_group)"], ["", "end"], ["", "(* group *)"], ["", "text \\<open>Exercise 3\\<close>"], ["", "text \\<open>p 39, ll 9--10\\<close>"], ["", "locale right_translations_of_group = group begin"], ["", "text \\<open>p 39, ll 9--10\\<close>"], ["", "definition translation (\"'(_')\\<^sub>R\") where \"translation = (\\<lambda>a \\<in> G. \\<lambda>x \\<in> G. x \\<cdot> a)\""], ["", "text \\<open>p 39, ll 9--10\\<close>"], ["", "abbreviation \"Translations \\<equiv> translation ` G\""], ["", "text \\<open>The isomorphism that will be established is a map different from @{term translation}.\\<close>"], ["", "text \\<open>p 39, ll 9--10\\<close>"], ["", "interpretation aux: map translation G Translations"], ["proof (prove)\ngoal (1 subgoal):\n 1. map translation G Translations", "by unfold_locales (simp add: translation_def)"], ["", "text \\<open>p 39, ll 9--10\\<close>"], ["", "lemma translation_map [intro, simp]:\n  \"a \\<in> G \\<Longrightarrow> (a)\\<^sub>R \\<in> G \\<rightarrow>\\<^sub>E G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> G \\<Longrightarrow> (a)\\<^sub>R \\<in> G \\<rightarrow>\\<^sub>E G", "unfolding translation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> G \\<Longrightarrow>\n    (\\<lambda>a\\<in>G. \\<lambda>x\\<in>G. x \\<cdot> a) a\n    \\<in> G \\<rightarrow>\\<^sub>E G", "by simp"], ["", "text \\<open>p 39, ll 9--10\\<close>"], ["", "lemma Translation_maps [intro, simp]:\n  \"Translations \\<subseteq> G \\<rightarrow>\\<^sub>E G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Translations \\<subseteq> G \\<rightarrow>\\<^sub>E G", "by (simp add: image_subsetI)"], ["", "text \\<open>p 39, ll 9--10\\<close>"], ["", "lemma translation_apply:\n  \"\\<lbrakk> a \\<in> G; b \\<in> G \\<rbrakk> \\<Longrightarrow> (a)\\<^sub>R b = b \\<cdot> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> G; b \\<in> G\\<rbrakk>\n    \\<Longrightarrow> (a)\\<^sub>R b = b \\<cdot> a", "unfolding translation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> G; b \\<in> G\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>a\\<in>G. \\<lambda>x\\<in>G. x \\<cdot> a) a\n                       b =\n                      b \\<cdot> a", "by auto"], ["", "text \\<open>p 39, ll 9--10\\<close>"], ["", "lemma translation_exist:\n  \"f \\<in> Translations \\<Longrightarrow> \\<exists>a \\<in> G. f = (a)\\<^sub>R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Translations \\<Longrightarrow> \\<exists>a\\<in>G. f = (a)\\<^sub>R", "by auto"], ["", "text \\<open>p 39, ll 9--10\\<close>"], ["", "lemmas Translations_E [elim] = translation_exist [THEN bexE]"], ["", "text \\<open>p 39, ll 9--10\\<close>"], ["", "lemma translation_unit_eq [simp]:\n  \"identity G = (\\<one>)\\<^sub>R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. identity G = (\\<one>)\\<^sub>R", "unfolding translation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. identity G = (\\<lambda>a\\<in>G. \\<lambda>x\\<in>G. x \\<cdot> a) \\<one>", "by auto"], ["", "text \\<open>p 39, ll 10--11\\<close>"], ["", "lemma translation_composition_eq [simp]:\n  assumes [simp]: \"a \\<in> G\" \"b \\<in> G\"\n  shows \"compose G (a)\\<^sub>R (b)\\<^sub>R = (b \\<cdot> a)\\<^sub>R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compose G (a)\\<^sub>R (b)\\<^sub>R = (b \\<cdot> a)\\<^sub>R", "unfolding translation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. compose G ((\\<lambda>a\\<in>G. \\<lambda>x\\<in>G. x \\<cdot> a) a)\n     ((\\<lambda>a\\<in>G. \\<lambda>x\\<in>G. x \\<cdot> a) b) =\n    (\\<lambda>a\\<in>G. \\<lambda>x\\<in>G. x \\<cdot> a) (b \\<cdot> a)", "by rule (simp add: associative compose_def)"], ["", "text \\<open>p 39, ll 10--11\\<close>"], ["", "sublocale transformation: transformations G"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "text \\<open>p 39, ll 10--11\\<close>"], ["", "lemma Translations_transformation_monoid:\n  \"transformation_monoid Translations G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation_monoid Translations G", "by unfold_locales auto"], ["", "text \\<open>p 39, ll 10--11\\<close>"], ["", "sublocale transformation: transformation_monoid Translations G"], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation_monoid Translations G", "by (fact Translations_transformation_monoid)"], ["", "text \\<open>p 39, ll 10--11\\<close>"], ["", "lemma translation_invertible [intro, simp]:\n  assumes [simp]: \"a \\<in> G\"\n  shows \"transformation.sub.invertible (a)\\<^sub>R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation.sub.invertible (a)\\<^sub>R", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. compose G (a)\\<^sub>R ?v = identity G\n 2. compose G ?v (a)\\<^sub>R = identity G\n 3. (a)\\<^sub>R \\<in> Translations\n 4. ?v \\<in> Translations", "show \"compose G (a)\\<^sub>R (inverse a)\\<^sub>R = identity G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compose G (a)\\<^sub>R (inverse a)\\<^sub>R = identity G", "by simp"], ["proof (state)\nthis:\n  compose G (a)\\<^sub>R (inverse a)\\<^sub>R = identity G\n\ngoal (3 subgoals):\n 1. compose G (inverse a)\\<^sub>R (a)\\<^sub>R = identity G\n 2. (a)\\<^sub>R \\<in> Translations\n 3. (inverse a)\\<^sub>R \\<in> Translations", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. compose G (inverse a)\\<^sub>R (a)\\<^sub>R = identity G\n 2. (a)\\<^sub>R \\<in> Translations\n 3. (inverse a)\\<^sub>R \\<in> Translations", "show \"compose G (inverse a)\\<^sub>R (a)\\<^sub>R = identity G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compose G (inverse a)\\<^sub>R (a)\\<^sub>R = identity G", "by simp"], ["proof (state)\nthis:\n  compose G (inverse a)\\<^sub>R (a)\\<^sub>R = identity G\n\ngoal (2 subgoals):\n 1. (a)\\<^sub>R \\<in> Translations\n 2. (inverse a)\\<^sub>R \\<in> Translations", "qed auto"], ["", "text \\<open>p 39, ll 10--11\\<close>"], ["", "lemma translation_bijective [intro, simp]:\n  \"a \\<in> G \\<Longrightarrow> bij_betw (a)\\<^sub>R G G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> G \\<Longrightarrow> bij_betw (a)\\<^sub>R G G", "by (blast intro: transformation.invertible_is_bijective [THEN iffD1])"], ["", "text \\<open>p 39, ll 10--11\\<close>"], ["", "theorem Translations_transformation_group:\n  \"transformation_group Translations G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation_group Translations G", "proof unfold_locales"], ["proof (state)\ngoal (4 subgoals):\n 1. Translations \\<subseteq> transformation.Sym\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> Translations; b \\<in> Translations\\<rbrakk>\n       \\<Longrightarrow> compose G a b \\<in> Translations\n 3. identity G \\<in> Translations\n 4. \\<And>u.\n       u \\<in> Translations \\<Longrightarrow>\n       transformation.sub.invertible u", "show \"Translations \\<subseteq> transformation.Sym\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Translations \\<subseteq> transformation.Sym", "unfolding transformation.Units_bijective"], ["proof (prove)\ngoal (1 subgoal):\n 1. Translations\n    \\<subseteq> {\\<alpha> \\<in> G \\<rightarrow>\\<^sub>E G.\n                 bij_betw \\<alpha> G G}", "by auto"], ["proof (state)\nthis:\n  Translations \\<subseteq> transformation.Sym\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> Translations; b \\<in> Translations\\<rbrakk>\n       \\<Longrightarrow> compose G a b \\<in> Translations\n 2. identity G \\<in> Translations\n 3. \\<And>u.\n       u \\<in> Translations \\<Longrightarrow>\n       transformation.sub.invertible u", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> Translations; b \\<in> Translations\\<rbrakk>\n       \\<Longrightarrow> compose G a b \\<in> Translations\n 2. identity G \\<in> Translations\n 3. \\<And>u.\n       u \\<in> Translations \\<Longrightarrow>\n       transformation.sub.invertible u", "fix \\<alpha>"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> Translations; b \\<in> Translations\\<rbrakk>\n       \\<Longrightarrow> compose G a b \\<in> Translations\n 2. identity G \\<in> Translations\n 3. \\<And>u.\n       u \\<in> Translations \\<Longrightarrow>\n       transformation.sub.invertible u", "assume \\<alpha>: \"\\<alpha> \\<in> Translations\""], ["proof (state)\nthis:\n  \\<alpha> \\<in> Translations\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> Translations; b \\<in> Translations\\<rbrakk>\n       \\<Longrightarrow> compose G a b \\<in> Translations\n 2. identity G \\<in> Translations\n 3. \\<And>u.\n       u \\<in> Translations \\<Longrightarrow>\n       transformation.sub.invertible u", "then"], ["proof (chain)\npicking this:\n  \\<alpha> \\<in> Translations", "obtain a where a: \"a \\<in> G\" and eq: \"\\<alpha> = (a)\\<^sub>R\""], ["proof (prove)\nusing this:\n  \\<alpha> \\<in> Translations\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> G; \\<alpha> = (a)\\<^sub>R\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  a \\<in> G\n  \\<alpha> = (a)\\<^sub>R\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> Translations; b \\<in> Translations\\<rbrakk>\n       \\<Longrightarrow> compose G a b \\<in> Translations\n 2. identity G \\<in> Translations\n 3. \\<And>u.\n       u \\<in> Translations \\<Longrightarrow>\n       transformation.sub.invertible u", "with translation_invertible"], ["proof (chain)\npicking this:\n  ?a \\<in> G \\<Longrightarrow> transformation.sub.invertible (?a)\\<^sub>R\n  a \\<in> G\n  \\<alpha> = (a)\\<^sub>R", "show \"transformation.sub.invertible \\<alpha>\""], ["proof (prove)\nusing this:\n  ?a \\<in> G \\<Longrightarrow> transformation.sub.invertible (?a)\\<^sub>R\n  a \\<in> G\n  \\<alpha> = (a)\\<^sub>R\n\ngoal (1 subgoal):\n 1. transformation.sub.invertible \\<alpha>", "by simp"], ["proof (state)\nthis:\n  transformation.sub.invertible \\<alpha>\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> Translations; b \\<in> Translations\\<rbrakk>\n       \\<Longrightarrow> compose G a b \\<in> Translations\n 2. identity G \\<in> Translations", "qed auto"], ["", "text \\<open>p 39, ll 10--11\\<close>"], ["", "sublocale transformation: transformation_group Translations G"], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation_group Translations G", "by (rule Translations_transformation_group)"], ["", "text \\<open>p 39, ll 10--11\\<close>"], ["", "lemma translation_inverse_eq [simp]:\n  assumes [simp]: \"a \\<in> G\"\n  shows \"transformation.sub.inverse (a)\\<^sub>R = (inverse a)\\<^sub>R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation.sub.inverse (a)\\<^sub>R = (inverse a)\\<^sub>R", "proof (rule transformation.sub.inverse_equality)"], ["proof (state)\ngoal (4 subgoals):\n 1. compose G (a)\\<^sub>R (inverse a)\\<^sub>R = identity G\n 2. compose G (inverse a)\\<^sub>R (a)\\<^sub>R = identity G\n 3. (a)\\<^sub>R \\<in> Translations\n 4. (inverse a)\\<^sub>R \\<in> Translations", "show \"compose G (a)\\<^sub>R (inverse a)\\<^sub>R = identity G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compose G (a)\\<^sub>R (inverse a)\\<^sub>R = identity G", "by simp"], ["proof (state)\nthis:\n  compose G (a)\\<^sub>R (inverse a)\\<^sub>R = identity G\n\ngoal (3 subgoals):\n 1. compose G (inverse a)\\<^sub>R (a)\\<^sub>R = identity G\n 2. (a)\\<^sub>R \\<in> Translations\n 3. (inverse a)\\<^sub>R \\<in> Translations", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. compose G (inverse a)\\<^sub>R (a)\\<^sub>R = identity G\n 2. (a)\\<^sub>R \\<in> Translations\n 3. (inverse a)\\<^sub>R \\<in> Translations", "show \"compose G (inverse a)\\<^sub>R (a)\\<^sub>R = identity G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compose G (inverse a)\\<^sub>R (a)\\<^sub>R = identity G", "by simp"], ["proof (state)\nthis:\n  compose G (inverse a)\\<^sub>R (a)\\<^sub>R = identity G\n\ngoal (2 subgoals):\n 1. (a)\\<^sub>R \\<in> Translations\n 2. (inverse a)\\<^sub>R \\<in> Translations", "qed auto"], ["", "text \\<open>p 39, ll 10--11\\<close>"], ["", "theorem translation_inverse_monoid_isomorphism [intro]:\n  \"monoid_isomorphism (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) G (\\<cdot>) \\<one> Translations (compose G) (identity G)\"\n  (is \"monoid_isomorphism ?inv _ _ _ _ _ _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid_isomorphism\n     (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) G\n     (\\<cdot>) \\<one> Translations (compose G) (identity G)", "proof unfold_locales"], ["proof (state)\ngoal (4 subgoals):\n 1. (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n    \\<in> G \\<rightarrow>\\<^sub>E Translations\n 2. bij_betw\n     (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) G\n     Translations\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> G; y \\<in> G\\<rbrakk>\n       \\<Longrightarrow> compose G\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            x)\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            y) =\n                         (\\<lambda>a\\<in>G.\n                             transformation.symmetric.inverse (a)\\<^sub>R)\n                          (x \\<cdot> y)\n 4. (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n     \\<one> =\n    identity G", "show \"?inv \\<in> G \\<rightarrow>\\<^sub>E Translations\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n    \\<in> G \\<rightarrow>\\<^sub>E Translations", "by (simp del: translation_unit_eq)"], ["proof (state)\nthis:\n  (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n  \\<in> G \\<rightarrow>\\<^sub>E Translations\n\ngoal (3 subgoals):\n 1. bij_betw\n     (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) G\n     Translations\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> G; y \\<in> G\\<rbrakk>\n       \\<Longrightarrow> compose G\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            x)\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            y) =\n                         (\\<lambda>a\\<in>G.\n                             transformation.symmetric.inverse (a)\\<^sub>R)\n                          (x \\<cdot> y)\n 3. (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n     \\<one> =\n    identity G", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. bij_betw\n     (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) G\n     Translations\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> G; y \\<in> G\\<rbrakk>\n       \\<Longrightarrow> compose G\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            x)\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            y) =\n                         (\\<lambda>a\\<in>G.\n                             transformation.symmetric.inverse (a)\\<^sub>R)\n                          (x \\<cdot> y)\n 3. (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n     \\<one> =\n    identity G", "note bij_betw_compose [trans]"], ["proof (state)\nthis:\n  \\<lbrakk>bij_betw ?f ?A ?B; bij_betw ?g ?B ?C\\<rbrakk>\n  \\<Longrightarrow> bij_betw (compose ?A ?g ?f) ?A ?C\n\ngoal (3 subgoals):\n 1. bij_betw\n     (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) G\n     Translations\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> G; y \\<in> G\\<rbrakk>\n       \\<Longrightarrow> compose G\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            x)\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            y) =\n                         (\\<lambda>a\\<in>G.\n                             transformation.symmetric.inverse (a)\\<^sub>R)\n                          (x \\<cdot> y)\n 3. (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n     \\<one> =\n    identity G", "have \"bij_betw inverse G G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw inverse G G", "by (rule bij_betwI [where g = inverse]) auto"], ["proof (state)\nthis:\n  bij_betw inverse G G\n\ngoal (3 subgoals):\n 1. bij_betw\n     (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) G\n     Translations\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> G; y \\<in> G\\<rbrakk>\n       \\<Longrightarrow> compose G\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            x)\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            y) =\n                         (\\<lambda>a\\<in>G.\n                             transformation.symmetric.inverse (a)\\<^sub>R)\n                          (x \\<cdot> y)\n 3. (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n     \\<one> =\n    identity G", "also"], ["proof (state)\nthis:\n  bij_betw inverse G G\n\ngoal (3 subgoals):\n 1. bij_betw\n     (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) G\n     Translations\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> G; y \\<in> G\\<rbrakk>\n       \\<Longrightarrow> compose G\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            x)\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            y) =\n                         (\\<lambda>a\\<in>G.\n                             transformation.symmetric.inverse (a)\\<^sub>R)\n                          (x \\<cdot> y)\n 3. (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n     \\<one> =\n    identity G", "have \"bij_betw translation G Translations\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw translation G Translations", "by (rule bij_betwI [where g = \"\\<lambda>\\<alpha>\\<in>Translations. \\<alpha> \\<one>\"]) (auto simp: translation_apply)"], ["proof (state)\nthis:\n  bij_betw translation G Translations\n\ngoal (3 subgoals):\n 1. bij_betw\n     (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) G\n     Translations\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> G; y \\<in> G\\<rbrakk>\n       \\<Longrightarrow> compose G\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            x)\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            y) =\n                         (\\<lambda>a\\<in>G.\n                             transformation.symmetric.inverse (a)\\<^sub>R)\n                          (x \\<cdot> y)\n 3. (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n     \\<one> =\n    identity G", "finally"], ["proof (chain)\npicking this:\n  bij_betw (compose G translation inverse) G Translations", "show \"bij_betw ?inv G Translations\""], ["proof (prove)\nusing this:\n  bij_betw (compose G translation inverse) G Translations\n\ngoal (1 subgoal):\n 1. bij_betw\n     (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) G\n     Translations", "by (simp cong: bij_betw_cong add: compose_eq del: translation_unit_eq)"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n   G Translations\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> G; y \\<in> G\\<rbrakk>\n       \\<Longrightarrow> compose G\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            x)\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            y) =\n                         (\\<lambda>a\\<in>G.\n                             transformation.symmetric.inverse (a)\\<^sub>R)\n                          (x \\<cdot> y)\n 2. (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n     \\<one> =\n    identity G", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> G; y \\<in> G\\<rbrakk>\n       \\<Longrightarrow> compose G\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            x)\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            y) =\n                         (\\<lambda>a\\<in>G.\n                             transformation.symmetric.inverse (a)\\<^sub>R)\n                          (x \\<cdot> y)\n 2. (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n     \\<one> =\n    identity G", "fix x and y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> G; y \\<in> G\\<rbrakk>\n       \\<Longrightarrow> compose G\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            x)\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            y) =\n                         (\\<lambda>a\\<in>G.\n                             transformation.symmetric.inverse (a)\\<^sub>R)\n                          (x \\<cdot> y)\n 2. (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n     \\<one> =\n    identity G", "assume [simp]: \"x \\<in> G\" \"y \\<in> G\""], ["proof (state)\nthis:\n  x \\<in> G\n  y \\<in> G\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> G; y \\<in> G\\<rbrakk>\n       \\<Longrightarrow> compose G\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            x)\n                          ((\\<lambda>a\\<in>G.\n                               transformation.symmetric.inverse (a)\\<^sub>R)\n                            y) =\n                         (\\<lambda>a\\<in>G.\n                             transformation.symmetric.inverse (a)\\<^sub>R)\n                          (x \\<cdot> y)\n 2. (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n     \\<one> =\n    identity G", "show \"compose G (?inv x) (?inv y) = (?inv (x \\<cdot> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compose G\n     ((\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) x)\n     ((\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) y) =\n    (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n     (x \\<cdot> y)", "by (simp add: inverse_composition_commute del: translation_unit_eq)"], ["proof (state)\nthis:\n  compose G\n   ((\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) x)\n   ((\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) y) =\n  (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n   (x \\<cdot> y)\n\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n     \\<one> =\n    identity G", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n     \\<one> =\n    identity G", "show \"?inv \\<one> = identity G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R)\n     \\<one> =\n    identity G", "by (simp del: translation_unit_eq) simp"], ["proof (state)\nthis:\n  (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) \\<one> =\n  identity G\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>p 39, ll 10--11\\<close>"], ["", "sublocale monoid_isomorphism\n  \"\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R\" G \"(\\<cdot>)\" \\<one> Translations \"compose G\" \"identity G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid_isomorphism\n     (\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) G\n     (\\<cdot>) \\<one> Translations (compose G) (identity G)", ".."], ["", "end"], ["", "(* right_translations_of_group *)"], ["", "subsection \\<open>Generalized Associativity.  Commutativity\\<close>"], ["", "text \\<open>p 40, l 27; p 41, ll 1--2\\<close>"], ["", "locale commutative_monoid = monoid +\n  assumes commutative: \"\\<lbrakk> x \\<in> M; y \\<in> M \\<rbrakk> \\<Longrightarrow> x \\<cdot> y = y \\<cdot> x\""], ["", "text \\<open>p 41, l 2\\<close>"], ["", "locale abelian_group = group + commutative_monoid G \"(\\<cdot>)\" \\<one>"], ["", "subsection \\<open>Orbits.  Cosets of a Subgroup\\<close>"], ["", "context transformation_group begin"], ["", "text \\<open>p 51, ll 18--20\\<close>"], ["", "definition Orbit_Relation\n  where \"Orbit_Relation = {(x, y). x \\<in> S \\<and> y \\<in> S \\<and> (\\<exists>\\<alpha> \\<in> G. y = \\<alpha> x)}\""], ["", "text \\<open>p 51, ll 18--20\\<close>"], ["", "lemma Orbit_Relation_memI [intro]:\n  \"\\<lbrakk> \\<exists>\\<alpha> \\<in> G. y = \\<alpha> x; x \\<in> S \\<rbrakk> \\<Longrightarrow> (x, y) \\<in> Orbit_Relation\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>\\<alpha>\\<in>G. y = \\<alpha> x; x \\<in> S\\<rbrakk>\n    \\<Longrightarrow> (x, y) \\<in> Orbit_Relation", "unfolding Orbit_Relation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>\\<alpha>\\<in>G. y = \\<alpha> x; x \\<in> S\\<rbrakk>\n    \\<Longrightarrow> (x, y)\n                      \\<in> {(x, y).\n                             x \\<in> S \\<and>\n                             y \\<in> S \\<and>\n                             (\\<exists>\\<alpha>\\<in>G. y = \\<alpha> x)}", "by auto"], ["", "text \\<open>p 51, ll 18--20\\<close>"], ["", "lemma Orbit_Relation_memE [elim]:\n  \"\\<lbrakk> (x, y) \\<in> Orbit_Relation; \\<And>\\<alpha>. \\<lbrakk> \\<alpha> \\<in> G; x \\<in> S; y = \\<alpha> x \\<rbrakk> \\<Longrightarrow> Q \\<rbrakk> \\<Longrightarrow> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x, y) \\<in> Orbit_Relation;\n     \\<And>\\<alpha>.\n        \\<lbrakk>\\<alpha> \\<in> G; x \\<in> S; y = \\<alpha> x\\<rbrakk>\n        \\<Longrightarrow> Q\\<rbrakk>\n    \\<Longrightarrow> Q", "unfolding Orbit_Relation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x, y)\n             \\<in> {(x, y).\n                    x \\<in> S \\<and>\n                    y \\<in> S \\<and>\n                    (\\<exists>\\<alpha>\\<in>G. y = \\<alpha> x)};\n     \\<And>\\<alpha>.\n        \\<lbrakk>\\<alpha> \\<in> G; x \\<in> S; y = \\<alpha> x\\<rbrakk>\n        \\<Longrightarrow> Q\\<rbrakk>\n    \\<Longrightarrow> Q", "by auto"], ["", "text \\<open>p 51, ll 20--23, 26--27\\<close>"], ["", "sublocale orbit: equivalence S Orbit_Relation"], ["proof (prove)\ngoal (1 subgoal):\n 1. equivalence S Orbit_Relation", "proof (unfold_locales, auto simp: Orbit_Relation_def)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow> \\<exists>\\<alpha>\\<in>G. a = \\<alpha> a\n 2. \\<And>a \\<alpha>.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>'\\<in>G.\n                            a = \\<alpha>' (\\<alpha> a)\n 3. \\<And>a \\<alpha> \\<alpha>'.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G; \\<alpha>' \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>''\\<in>G.\n                            \\<alpha> (\\<alpha>' a) = \\<alpha>'' a", "fix x"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow> \\<exists>\\<alpha>\\<in>G. a = \\<alpha> a\n 2. \\<And>a \\<alpha>.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>'\\<in>G.\n                            a = \\<alpha>' (\\<alpha> a)\n 3. \\<And>a \\<alpha> \\<alpha>'.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G; \\<alpha>' \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>''\\<in>G.\n                            \\<alpha> (\\<alpha>' a) = \\<alpha>'' a", "assume x: \"x \\<in> S\""], ["proof (state)\nthis:\n  x \\<in> S\n\ngoal (3 subgoals):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow> \\<exists>\\<alpha>\\<in>G. a = \\<alpha> a\n 2. \\<And>a \\<alpha>.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>'\\<in>G.\n                            a = \\<alpha>' (\\<alpha> a)\n 3. \\<And>a \\<alpha> \\<alpha>'.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G; \\<alpha>' \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>''\\<in>G.\n                            \\<alpha> (\\<alpha>' a) = \\<alpha>'' a", "then"], ["proof (chain)\npicking this:\n  x \\<in> S", "have id: \"x = identity S x\""], ["proof (prove)\nusing this:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. x = identity S x", "by simp"], ["proof (state)\nthis:\n  x = identity S x\n\ngoal (3 subgoals):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow> \\<exists>\\<alpha>\\<in>G. a = \\<alpha> a\n 2. \\<And>a \\<alpha>.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>'\\<in>G.\n                            a = \\<alpha>' (\\<alpha> a)\n 3. \\<And>a \\<alpha> \\<alpha>'.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G; \\<alpha>' \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>''\\<in>G.\n                            \\<alpha> (\\<alpha>' a) = \\<alpha>'' a", "with x"], ["proof (chain)\npicking this:\n  x \\<in> S\n  x = identity S x", "show \"\\<exists>\\<alpha> \\<in> G. x = \\<alpha> x\""], ["proof (prove)\nusing this:\n  x \\<in> S\n  x = identity S x\n\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>\\<in>G. x = \\<alpha> x", "by fast"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>\\<in>G. x = \\<alpha> x\n\ngoal (2 subgoals):\n 1. \\<And>a \\<alpha>.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>'\\<in>G.\n                            a = \\<alpha>' (\\<alpha> a)\n 2. \\<And>a \\<alpha> \\<alpha>'.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G; \\<alpha>' \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>''\\<in>G.\n                            \\<alpha> (\\<alpha>' a) = \\<alpha>'' a", "fix \\<alpha>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a \\<alpha>.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>'\\<in>G.\n                            a = \\<alpha>' (\\<alpha> a)\n 2. \\<And>a \\<alpha> \\<alpha>'.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G; \\<alpha>' \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>''\\<in>G.\n                            \\<alpha> (\\<alpha>' a) = \\<alpha>'' a", "assume \\<alpha>: \"\\<alpha> \\<in> G\""], ["proof (state)\nthis:\n  \\<alpha> \\<in> G\n\ngoal (2 subgoals):\n 1. \\<And>a \\<alpha>.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>'\\<in>G.\n                            a = \\<alpha>' (\\<alpha> a)\n 2. \\<And>a \\<alpha> \\<alpha>'.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G; \\<alpha>' \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>''\\<in>G.\n                            \\<alpha> (\\<alpha>' a) = \\<alpha>'' a", "with x id"], ["proof (chain)\npicking this:\n  x \\<in> S\n  x = identity S x\n  \\<alpha> \\<in> G", "have y: \"x = compose S (symmetric.inverse \\<alpha>) \\<alpha> x\""], ["proof (prove)\nusing this:\n  x \\<in> S\n  x = identity S x\n  \\<alpha> \\<in> G\n\ngoal (1 subgoal):\n 1. x = compose S (symmetric.inverse \\<alpha>) \\<alpha> x", "by auto"], ["proof (state)\nthis:\n  x = compose S (symmetric.inverse \\<alpha>) \\<alpha> x\n\ngoal (2 subgoals):\n 1. \\<And>a \\<alpha>.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>'\\<in>G.\n                            a = \\<alpha>' (\\<alpha> a)\n 2. \\<And>a \\<alpha> \\<alpha>'.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G; \\<alpha>' \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>''\\<in>G.\n                            \\<alpha> (\\<alpha>' a) = \\<alpha>'' a", "with x \\<alpha>"], ["proof (chain)\npicking this:\n  x \\<in> S\n  \\<alpha> \\<in> G\n  x = compose S (symmetric.inverse \\<alpha>) \\<alpha> x", "show \"\\<exists>\\<alpha>' \\<in> G. x = \\<alpha>' (\\<alpha> x)\""], ["proof (prove)\nusing this:\n  x \\<in> S\n  \\<alpha> \\<in> G\n  x = compose S (symmetric.inverse \\<alpha>) \\<alpha> x\n\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>'\\<in>G. x = \\<alpha>' (\\<alpha> x)", "by (metis compose_eq symmetric.sub.invertible symmetric.submonoid_inverse_closed)"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>'\\<in>G. x = \\<alpha>' (\\<alpha> x)\n\ngoal (1 subgoal):\n 1. \\<And>a \\<alpha> \\<alpha>'.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G; \\<alpha>' \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>''\\<in>G.\n                            \\<alpha> (\\<alpha>' a) = \\<alpha>'' a", "fix \\<beta>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a \\<alpha> \\<alpha>'.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G; \\<alpha>' \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>''\\<in>G.\n                            \\<alpha> (\\<alpha>' a) = \\<alpha>'' a", "assume \\<beta>: \"\\<beta> \\<in> G\""], ["proof (state)\nthis:\n  \\<beta> \\<in> G\n\ngoal (1 subgoal):\n 1. \\<And>a \\<alpha> \\<alpha>'.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G; \\<alpha>' \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>''\\<in>G.\n                            \\<alpha> (\\<alpha>' a) = \\<alpha>'' a", "with x"], ["proof (chain)\npicking this:\n  x \\<in> S\n  \\<beta> \\<in> G", "have \"\\<beta> (\\<alpha> x) = compose S \\<beta> \\<alpha> x\""], ["proof (prove)\nusing this:\n  x \\<in> S\n  \\<beta> \\<in> G\n\ngoal (1 subgoal):\n 1. \\<beta> (\\<alpha> x) = compose S \\<beta> \\<alpha> x", "by (simp add: compose_eq)"], ["proof (state)\nthis:\n  \\<beta> (\\<alpha> x) = compose S \\<beta> \\<alpha> x\n\ngoal (1 subgoal):\n 1. \\<And>a \\<alpha> \\<alpha>'.\n       \\<lbrakk>a \\<in> S; \\<alpha> \\<in> G; \\<alpha>' \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>''\\<in>G.\n                            \\<alpha> (\\<alpha>' a) = \\<alpha>'' a", "with \\<alpha> \\<beta>"], ["proof (chain)\npicking this:\n  \\<alpha> \\<in> G\n  \\<beta> \\<in> G\n  \\<beta> (\\<alpha> x) = compose S \\<beta> \\<alpha> x", "show \"\\<exists>\\<gamma> \\<in> G. \\<beta> (\\<alpha> x) = \\<gamma> x\""], ["proof (prove)\nusing this:\n  \\<alpha> \\<in> G\n  \\<beta> \\<in> G\n  \\<beta> (\\<alpha> x) = compose S \\<beta> \\<alpha> x\n\ngoal (1 subgoal):\n 1. \\<exists>\\<gamma>\\<in>G. \\<beta> (\\<alpha> x) = \\<gamma> x", "by fast"], ["proof (state)\nthis:\n  \\<exists>\\<gamma>\\<in>G. \\<beta> (\\<alpha> x) = \\<gamma> x\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>p 51, ll 23--24\\<close>"], ["", "theorem orbit_equality:\n  \"x \\<in> S \\<Longrightarrow> orbit.Class x = {\\<alpha> x | \\<alpha>. \\<alpha> \\<in> G}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> S \\<Longrightarrow>\n    orbit.Class x = {\\<alpha> x |\\<alpha>. \\<alpha> \\<in> G}", "by (simp add: orbit.Class_def) (blast intro: orbit.symmetric dest: orbit.symmetric)"], ["", "end"], ["", "(* transformation_group *)"], ["", "context monoid_isomorphism begin"], ["", "text \\<open>p 52, ll 16--17\\<close>"], ["", "theorem image_subgroup:\n  assumes \"subgroup G M (\\<cdot>) \\<one>\"\n  shows \"subgroup (\\<eta> ` G) M' (\\<cdot>') \\<one>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (\\<eta> ` G) M' (\\<cdot>') \\<one>'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup (\\<eta> ` G) M' (\\<cdot>') \\<one>'", "interpret subgroup G M \"(\\<cdot>)\" \\<one>"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup G M (\\<cdot>) \\<one>", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup (\\<eta> ` G) M' (\\<cdot>') \\<one>'", "interpret image: monoid \"\\<eta> ` G\" \"(\\<cdot>')\" \"\\<one>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid (\\<eta> ` G) (\\<cdot>') \\<one>'", "by unfold_locales (auto simp add: commutes_with_composition commutes_with_unit [symmetric])"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup (\\<eta> ` G) M' (\\<cdot>') \\<one>'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (\\<eta> ` G) M' (\\<cdot>') \\<one>'", "proof (unfold_locales, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G \\<Longrightarrow> image.invertible (\\<eta> x)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G \\<Longrightarrow> image.invertible (\\<eta> x)", "assume x: \"x \\<in> G\""], ["proof (state)\nthis:\n  x \\<in> G\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G \\<Longrightarrow> image.invertible (\\<eta> x)", "show \"image.invertible (\\<eta> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image.invertible (\\<eta> x)", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<eta> x \\<cdot>' ?v = \\<one>'\n 2. ?v \\<cdot>' \\<eta> x = \\<one>'\n 3. \\<eta> x \\<in> \\<eta> ` G\n 4. ?v \\<in> \\<eta> ` G", "show \"\\<eta> (sub.inverse x) \\<in> \\<eta> ` G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<eta> (sub.inverse x) \\<in> \\<eta> ` G", "using x"], ["proof (prove)\nusing this:\n  x \\<in> G\n\ngoal (1 subgoal):\n 1. \\<eta> (sub.inverse x) \\<in> \\<eta> ` G", "by simp"], ["proof (state)\nthis:\n  \\<eta> (sub.inverse x) \\<in> \\<eta> ` G\n\ngoal (3 subgoals):\n 1. \\<eta> x \\<cdot>' \\<eta> (sub.inverse x) = \\<one>'\n 2. \\<eta> (sub.inverse x) \\<cdot>' \\<eta> x = \\<one>'\n 3. \\<eta> x \\<in> \\<eta> ` G", "qed (auto simp: x commutes_with_composition commutes_with_unit)"], ["proof (state)\nthis:\n  image.invertible (\\<eta> x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subgroup (\\<eta> ` G) M' (\\<cdot>') \\<one>'\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* monoid_isomorphism *)"], ["", "text \\<open>\n  Technical device to achieve Jacobson's notation for @{text Right_Coset} and @{text Left_Coset}.  The\n  definitions are pulled out of @{text subgroup_of_group} to a context where @{text H} is not a parameter.\n\\<close>"], ["", "text \\<open>p 52, l 20\\<close>"], ["", "locale coset_notation = fixes composition (infixl \"\\<cdot>\" 70)  begin"], ["", "text \\<open>Equation 23\\<close>"], ["", "text \\<open>p 52, l 20\\<close>"], ["", "definition Right_Coset (infixl \"|\\<cdot>\" 70) where \"H |\\<cdot> x = {h \\<cdot> x | h. h \\<in> H}\""], ["", "text \\<open>p 53, ll 8--9\\<close>"], ["", "definition Left_Coset (infixl \"\\<cdot>|\" 70) where \"x \\<cdot>| H = {x \\<cdot> h | h. h \\<in> H}\""], ["", "text \\<open>p 52, l 20\\<close>"], ["", "lemma Right_Coset_memI [intro]:\n  \"h \\<in> H \\<Longrightarrow> h \\<cdot> x \\<in> H |\\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<in> H \\<Longrightarrow> h \\<cdot> x \\<in> H |\\<cdot> x", "unfolding Right_Coset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<in> H \\<Longrightarrow>\n    h \\<cdot> x \\<in> {h \\<cdot> x |h. h \\<in> H}", "by blast"], ["", "text \\<open>p 52, l 20\\<close>"], ["", "lemma Right_Coset_memE [elim]:\n  \"\\<lbrakk> a \\<in> H |\\<cdot> x; \\<And>h. \\<lbrakk> h \\<in> H; a = h \\<cdot> x \\<rbrakk> \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> H |\\<cdot> x;\n     \\<And>h.\n        \\<lbrakk>h \\<in> H; a = h \\<cdot> x\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "unfolding Right_Coset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> {h \\<cdot> x |h. h \\<in> H};\n     \\<And>h.\n        \\<lbrakk>h \\<in> H; a = h \\<cdot> x\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by blast"], ["", "text \\<open>p 53, ll 8--9\\<close>"], ["", "lemma Left_Coset_memI [intro]:\n  \"h \\<in> H \\<Longrightarrow> x \\<cdot> h \\<in> x \\<cdot>| H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<in> H \\<Longrightarrow> x \\<cdot> h \\<in> x \\<cdot>| H", "unfolding Left_Coset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<in> H \\<Longrightarrow>\n    x \\<cdot> h \\<in> {x \\<cdot> h |h. h \\<in> H}", "by blast"], ["", "text \\<open>p 53, ll 8--9\\<close>"], ["", "lemma Left_Coset_memE [elim]:\n  \"\\<lbrakk> a \\<in> x \\<cdot>| H; \\<And>h. \\<lbrakk> h \\<in> H; a = x \\<cdot> h \\<rbrakk> \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> x \\<cdot>| H;\n     \\<And>h.\n        \\<lbrakk>h \\<in> H; a = x \\<cdot> h\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "unfolding Left_Coset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> {x \\<cdot> h |h. h \\<in> H};\n     \\<And>h.\n        \\<lbrakk>h \\<in> H; a = x \\<cdot> h\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by blast"], ["", "end"], ["", "(* coset_notation *)"], ["", "text \\<open>p 52, l 12\\<close>"], ["", "locale subgroup_of_group = subgroup H G \"(\\<cdot>)\" \\<one> + coset_notation \"(\\<cdot>)\" + group G \"(\\<cdot>)\" \\<one>\n  for H and G and composition (infixl \"\\<cdot>\" 70) and unit (\"\\<one>\")\nbegin"], ["", "text \\<open>p 52, ll 12--14\\<close>"], ["", "interpretation left: left_translations_of_group"], ["proof (prove)\ngoal (1 subgoal):\n 1. left_translations_of_group G (\\<cdot>) \\<one>", ".."], ["", "interpretation right: right_translations_of_group"], ["proof (prove)\ngoal (1 subgoal):\n 1. right_translations_of_group G (\\<cdot>) \\<one>", ".."], ["", "text \\<open>\n  @{term \"left.translation ` H\"} denotes Jacobson's @{text \"H\\<^sub>L(G)\"} and\n  @{term \"left.translation ` G\"} denotes Jacobson's @{text \"G\\<^sub>L\"}.\n\\<close>"], ["", "text \\<open>p 52, ll 16--18\\<close>"], ["", "theorem left_translations_of_subgroup_are_transformation_group [intro]:\n  \"transformation_group (left.translation ` H) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation_group (left.translation ` H) G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. transformation_group (left.translation ` H) G", "have \"subgroup (left.translation ` H) (left.translation ` G) (compose G) (identity G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (left.translation ` H) (left.translation ` G) (compose G)\n     (identity G)", "by (rule left.image_subgroup) unfold_locales"], ["proof (state)\nthis:\n  subgroup (left.translation ` H) (left.translation ` G) (compose G)\n   (identity G)\n\ngoal (1 subgoal):\n 1. transformation_group (left.translation ` H) G", "also"], ["proof (state)\nthis:\n  subgroup (left.translation ` H) (left.translation ` G) (compose G)\n   (identity G)\n\ngoal (1 subgoal):\n 1. transformation_group (left.translation ` H) G", "have \"subgroup (left.translation ` G) left.transformation.Sym (compose G) (identity G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (left.translation ` G) left.transformation.Sym (compose G)\n     (identity G)", ".."], ["proof (state)\nthis:\n  subgroup (left.translation ` G) left.transformation.Sym (compose G)\n   (identity G)\n\ngoal (1 subgoal):\n 1. transformation_group (left.translation ` H) G", "finally"], ["proof (chain)\npicking this:\n  subgroup (left.translation ` H) left.transformation.Sym (compose G)\n   (identity G)", "interpret right_coset: subgroup \"left.translation ` H\" left.transformation.Sym \"compose G\" \"identity G\""], ["proof (prove)\nusing this:\n  subgroup (left.translation ` H) left.transformation.Sym (compose G)\n   (identity G)\n\ngoal (1 subgoal):\n 1. subgroup (left.translation ` H) left.transformation.Sym (compose G)\n     (identity G)", "."], ["proof (state)\ngoal (1 subgoal):\n 1. transformation_group (left.translation ` H) G", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation_group (left.translation ` H) G", ".."], ["proof (state)\nthis:\n  transformation_group (left.translation ` H) G\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>p 52, l 18\\<close>"], ["", "interpretation transformation_group \"left.translation ` H\" G"], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation_group (left.translation ` H) G", ".."], ["", "text \\<open>p 52, ll 19--20\\<close>"], ["", "theorem Right_Coset_is_orbit:\n  \"x \\<in> G \\<Longrightarrow> H |\\<cdot> x = orbit.Class x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> G \\<Longrightarrow> H |\\<cdot> x = orbit.Class x", "using left.translation_apply"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> G; ?b \\<in> G\\<rbrakk>\n  \\<Longrightarrow> left.translation ?a ?b = ?a \\<cdot> ?b\n\ngoal (1 subgoal):\n 1. x \\<in> G \\<Longrightarrow> H |\\<cdot> x = orbit.Class x", "by (auto simp: orbit_equality Right_Coset_def) (metis imageI sub)"], ["", "text \\<open>p 52, ll 24--25\\<close>"], ["", "theorem Right_Coset_Union:\n  \"(\\<Union>x\\<in>G. H |\\<cdot> x) = G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> ((|\\<cdot>) H ` G) = G", "by (simp add: Right_Coset_is_orbit)"], ["", "text \\<open>p 52, l 26\\<close>"], ["", "theorem Right_Coset_bij:\n  assumes G [simp]: \"x \\<in> G\" \"y \\<in> G\"\n  shows \"bij_betw (inverse x \\<cdot> y)\\<^sub>R (H |\\<cdot> x) (H |\\<cdot> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (inverse x \\<cdot> y)\\<^sub>R (H |\\<cdot> x) (H |\\<cdot> y)", "proof (rule bij_betw_imageI)"], ["proof (state)\ngoal (2 subgoals):\n 1. inj_on (inverse x \\<cdot> y)\\<^sub>R (H |\\<cdot> x)\n 2. (inverse x \\<cdot> y)\\<^sub>R ` (H |\\<cdot> x) = H |\\<cdot> y", "show \"inj_on (inverse x \\<cdot> y)\\<^sub>R (H |\\<cdot> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (inverse x \\<cdot> y)\\<^sub>R (H |\\<cdot> x)", "by (fastforce intro: inj_onI simp add: Right_Coset_is_orbit right.translation_apply orbit.block_closed)"], ["proof (state)\nthis:\n  inj_on (inverse x \\<cdot> y)\\<^sub>R (H |\\<cdot> x)\n\ngoal (1 subgoal):\n 1. (inverse x \\<cdot> y)\\<^sub>R ` (H |\\<cdot> x) = H |\\<cdot> y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (inverse x \\<cdot> y)\\<^sub>R ` (H |\\<cdot> x) = H |\\<cdot> y", "show \"(inverse x \\<cdot> y)\\<^sub>R ` (H |\\<cdot> x) = H |\\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (inverse x \\<cdot> y)\\<^sub>R ` (H |\\<cdot> x) = H |\\<cdot> y", "by (force simp add: right.translation_apply associative invertible_right_inverse2)"], ["proof (state)\nthis:\n  (inverse x \\<cdot> y)\\<^sub>R ` (H |\\<cdot> x) = H |\\<cdot> y\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>p 52, ll 25--26\\<close>"], ["", "theorem Right_Cosets_cardinality:\n  \"\\<lbrakk> x \\<in> G; y \\<in> G \\<rbrakk> \\<Longrightarrow> card (H |\\<cdot> x) = card (H |\\<cdot> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> G; y \\<in> G\\<rbrakk>\n    \\<Longrightarrow> card (H |\\<cdot> x) = card (H |\\<cdot> y)", "by (fast intro: bij_betw_same_card Right_Coset_bij)"], ["", "text \\<open>p 52, l 27\\<close>"], ["", "theorem Right_Coset_unit:\n  \"H |\\<cdot> \\<one> = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H |\\<cdot> \\<one> = H", "by (force simp add: Right_Coset_def)"], ["", "text \\<open>p 52, l 27\\<close>"], ["", "theorem Right_Coset_cardinality:\n  \"x \\<in> G \\<Longrightarrow> card (H |\\<cdot> x) = card H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> G \\<Longrightarrow> card (H |\\<cdot> x) = card H", "using Right_Coset_unit Right_Cosets_cardinality unit_closed"], ["proof (prove)\nusing this:\n  H |\\<cdot> \\<one> = H\n  \\<lbrakk>?x \\<in> G; ?y \\<in> G\\<rbrakk>\n  \\<Longrightarrow> card (H |\\<cdot> ?x) = card (H |\\<cdot> ?y)\n  \\<one> \\<in> G\n\ngoal (1 subgoal):\n 1. x \\<in> G \\<Longrightarrow> card (H |\\<cdot> x) = card H", "by presburger"], ["", "text \\<open>p 52, ll 31--32\\<close>"], ["", "definition \"index = card orbit.Partition\""], ["", "text \\<open>Theorem 1.5\\<close>"], ["", "text \\<open>p 52, ll 33--35; p 53, ll 1--2\\<close>"], ["", "theorem lagrange:\n  \"finite G \\<Longrightarrow> card G = card H * index\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite G \\<Longrightarrow> card G = card H * index", "unfolding index_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite G \\<Longrightarrow> card G = card H * card orbit.Partition", "apply (subst card_partition)"], ["proof (prove)\ngoal (5 subgoals):\n 1. finite G \\<Longrightarrow> finite orbit.Partition\n 2. finite G \\<Longrightarrow> finite (\\<Union> orbit.Partition)\n 3. \\<And>c.\n       \\<lbrakk>finite G; c \\<in> orbit.Partition\\<rbrakk>\n       \\<Longrightarrow> card c = card H\n 4. \\<And>c1 c2.\n       \\<lbrakk>finite G; c1 \\<in> orbit.Partition;\n        c2 \\<in> orbit.Partition; c1 \\<noteq> c2\\<rbrakk>\n       \\<Longrightarrow> c1 \\<inter> c2 = {}\n 5. finite G \\<Longrightarrow> card G = card (\\<Union> orbit.Partition)", "apply (auto simp: finite_UnionD orbit.complete orbit.disjoint)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c.\n       \\<lbrakk>finite G; c \\<in> orbit.Partition\\<rbrakk>\n       \\<Longrightarrow> card c = card H", "apply (metis Right_Coset_cardinality Right_Coset_is_orbit orbit.Block_self orbit.element_exists)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "(* subgroup_of_group *)"], ["", "text \\<open>Left cosets\\<close>"], ["", "context subgroup begin"], ["", "text \\<open>p 31, ll 11--12\\<close>"], ["", "lemma image_of_inverse [intro, simp]:\n  \"x \\<in> G \\<Longrightarrow> x \\<in> inverse ` G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> G \\<Longrightarrow> x \\<in> inverse ` G", "by (metis image_eqI sub.invertible sub.invertible_inverse_closed sub.invertible_inverse_inverse subgroup_inverse_equality)"], ["", "end"], ["", "(* subgroup *)"], ["", "context group begin"], ["", "(* Does Jacobson show this somewhere? *)"], ["", "text \\<open>p 53, ll 6--7\\<close>"], ["", "lemma inverse_subgroupI:\n  assumes sub: \"subgroup H G (\\<cdot>) \\<one>\"\n  shows \"subgroup (inverse ` H) G (\\<cdot>) \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (inverse ` H) G (\\<cdot>) \\<one>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup (inverse ` H) G (\\<cdot>) \\<one>", "from sub"], ["proof (chain)\npicking this:\n  subgroup H G (\\<cdot>) \\<one>", "interpret subgroup H G \"(\\<cdot>)\" \\<one>"], ["proof (prove)\nusing this:\n  subgroup H G (\\<cdot>) \\<one>\n\ngoal (1 subgoal):\n 1. subgroup H G (\\<cdot>) \\<one>", "."], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup (inverse ` H) G (\\<cdot>) \\<one>", "interpret inv: monoid \"inverse ` H\" \"(\\<cdot>)\" \\<one>"], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid (inverse ` H) (\\<cdot>) \\<one>", "by unfold_locales (auto simp del: subgroup_inverse_equality)"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup (inverse ` H) G (\\<cdot>) \\<one>", "interpret inv: group \"inverse ` H\" \"(\\<cdot>)\" \\<one>"], ["proof (prove)\ngoal (1 subgoal):\n 1. group (inverse ` H) (\\<cdot>) \\<one>", "by unfold_locales (force simp del: subgroup_inverse_equality)"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup (inverse ` H) G (\\<cdot>) \\<one>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (inverse ` H) G (\\<cdot>) \\<one>", "by unfold_locales (auto simp del: subgroup_inverse_equality)"], ["proof (state)\nthis:\n  subgroup (inverse ` H) G (\\<cdot>) \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>p 53, ll 6--7\\<close>"], ["", "lemma inverse_subgroupD:\n  assumes sub: \"subgroup (inverse ` H) G (\\<cdot>) \\<one>\"\n    and inv: \"H \\<subseteq> Units\"\n  shows \"subgroup H G (\\<cdot>) \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G (\\<cdot>) \\<one>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup H G (\\<cdot>) \\<one>", "from sub"], ["proof (chain)\npicking this:\n  subgroup (inverse ` H) G (\\<cdot>) \\<one>", "have \"subgroup (inverse ` inverse ` H) G (\\<cdot>) \\<one>\""], ["proof (prove)\nusing this:\n  subgroup (inverse ` H) G (\\<cdot>) \\<one>\n\ngoal (1 subgoal):\n 1. subgroup (inverse ` inverse ` H) G (\\<cdot>) \\<one>", "by (rule inverse_subgroupI)"], ["proof (state)\nthis:\n  subgroup (inverse ` inverse ` H) G (\\<cdot>) \\<one>\n\ngoal (1 subgoal):\n 1. subgroup H G (\\<cdot>) \\<one>", "moreover"], ["proof (state)\nthis:\n  subgroup (inverse ` inverse ` H) G (\\<cdot>) \\<one>\n\ngoal (1 subgoal):\n 1. subgroup H G (\\<cdot>) \\<one>", "from inv [THEN subsetD, simplified Units_def]"], ["proof (chain)\npicking this:\n  ?c \\<in> H \\<Longrightarrow> ?c \\<in> {u \\<in> G. invertible u}", "have \"inverse ` inverse ` H = H\""], ["proof (prove)\nusing this:\n  ?c \\<in> H \\<Longrightarrow> ?c \\<in> {u \\<in> G. invertible u}\n\ngoal (1 subgoal):\n 1. inverse ` inverse ` H = H", "by (simp cong: image_cong add: image_comp)"], ["proof (state)\nthis:\n  inverse ` inverse ` H = H\n\ngoal (1 subgoal):\n 1. subgroup H G (\\<cdot>) \\<one>", "ultimately"], ["proof (chain)\npicking this:\n  subgroup (inverse ` inverse ` H) G (\\<cdot>) \\<one>\n  inverse ` inverse ` H = H", "show ?thesis"], ["proof (prove)\nusing this:\n  subgroup (inverse ` inverse ` H) G (\\<cdot>) \\<one>\n  inverse ` inverse ` H = H\n\ngoal (1 subgoal):\n 1. subgroup H G (\\<cdot>) \\<one>", "by simp"], ["proof (state)\nthis:\n  subgroup H G (\\<cdot>) \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* group *)"], ["", "context subgroup_of_group begin"], ["", "text \\<open>p 53, l 6\\<close>"], ["", "interpretation right_translations_of_group"], ["proof (prove)\ngoal (1 subgoal):\n 1. right_translations_of_group G (\\<cdot>) \\<one>", ".."], ["", "text \\<open>\n  @{term \"translation ` H\"} denotes Jacobson's @{text \"H\\<^sub>R(G)\"} and\n  @{term \"Translations\"} denotes Jacobson's @{text \"G\\<^sub>R\"}.\n\\<close>"], ["", "text \\<open>p 53, ll 6--7\\<close>"], ["", "theorem right_translations_of_subgroup_are_transformation_group [intro]:\n  \"transformation_group (translation ` H) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation_group (translation ` H) G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. transformation_group (translation ` H) G", "have \"subgroup ((\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) ` H) Translations (compose G) (identity G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup\n     ((\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) ` H)\n     Translations (compose G) (identity G)", "by (rule image_subgroup) unfold_locales"], ["proof (state)\nthis:\n  subgroup\n   ((\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) ` H)\n   Translations (compose G) (identity G)\n\ngoal (1 subgoal):\n 1. transformation_group (translation ` H) G", "also"], ["proof (state)\nthis:\n  subgroup\n   ((\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) ` H)\n   Translations (compose G) (identity G)\n\ngoal (1 subgoal):\n 1. transformation_group (translation ` H) G", "have \"subgroup Translations transformation.Sym (compose G) (identity G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup Translations transformation.Sym (compose G) (identity G)", ".."], ["proof (state)\nthis:\n  subgroup Translations transformation.Sym (compose G) (identity G)\n\ngoal (1 subgoal):\n 1. transformation_group (translation ` H) G", "finally"], ["proof (chain)\npicking this:\n  subgroup\n   ((\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) ` H)\n   transformation.Sym (compose G) (identity G)", "interpret left_coset: subgroup \"translation ` H\" transformation.Sym \"compose G\" \"identity G\""], ["proof (prove)\nusing this:\n  subgroup\n   ((\\<lambda>a\\<in>G. transformation.symmetric.inverse (a)\\<^sub>R) ` H)\n   transformation.Sym (compose G) (identity G)\n\ngoal (1 subgoal):\n 1. subgroup (translation ` H) transformation.Sym (compose G) (identity G)", "by (auto intro: transformation.symmetric.inverse_subgroupD cong: image_cong\n      simp: image_image transformation.symmetric.Units_def simp del: translation_unit_eq)"], ["proof (state)\ngoal (1 subgoal):\n 1. transformation_group (translation ` H) G", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation_group (translation ` H) G", ".."], ["proof (state)\nthis:\n  transformation_group (translation ` H) G\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>p 53, ll 6--7\\<close>"], ["", "interpretation transformation_group \"translation ` H\" G"], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation_group (translation ` H) G", ".."], ["", "text \\<open>Equation 23 for left cosets\\<close>"], ["", "text \\<open>p 53, ll 7--8\\<close>"], ["", "theorem Left_Coset_is_orbit:\n  \"x \\<in> G \\<Longrightarrow> x \\<cdot>| H = orbit.Class x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> G \\<Longrightarrow> x \\<cdot>| H = orbit.Class x", "using translation_apply"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> G; ?b \\<in> G\\<rbrakk>\n  \\<Longrightarrow> (?a)\\<^sub>R ?b = ?b \\<cdot> ?a\n\ngoal (1 subgoal):\n 1. x \\<in> G \\<Longrightarrow> x \\<cdot>| H = orbit.Class x", "by (auto simp: orbit_equality Left_Coset_def) (metis imageI sub)"], ["", "end"], ["", "(* subgroup_of_group *)"], ["", "subsection \\<open>Congruences.  Quotient Monoids and Groups\\<close>"], ["", "text \\<open>Def 1.4\\<close>"], ["", "text \\<open>p 54, ll 19--22\\<close>"], ["", "locale monoid_congruence = monoid + equivalence where S = M +\n  assumes cong: \"\\<lbrakk> (a, a') \\<in> E; (b, b') \\<in> E \\<rbrakk> \\<Longrightarrow> (a \\<cdot> b, a' \\<cdot> b') \\<in> E\"\nbegin"], ["", "text \\<open>p 54, ll 26--28\\<close>"], ["", "theorem Class_cong:\n  \"\\<lbrakk> Class a = Class a'; Class b = Class b'; a \\<in> M; a' \\<in> M; b \\<in> M; b' \\<in> M \\<rbrakk> \\<Longrightarrow> Class (a \\<cdot> b) = Class (a' \\<cdot> b')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Class a = Class a'; Class b = Class b'; a \\<in> M; a' \\<in> M;\n     b \\<in> M; b' \\<in> M\\<rbrakk>\n    \\<Longrightarrow> Class (a \\<cdot> b) = Class (a' \\<cdot> b')", "by (simp add: Class_equivalence cong)"], ["", "text \\<open>p 54, ll 28--30\\<close>"], ["", "definition quotient_composition (infixl \"[\\<cdot>]\" 70)\n  where \"quotient_composition = (\\<lambda>A \\<in> M / E. \\<lambda>B \\<in> M / E. THE C. \\<exists>a \\<in> A. \\<exists>b \\<in> B. C = Class (a \\<cdot> b))\""], ["", "text \\<open>p 54, ll 28--30\\<close>"], ["", "theorem Class_commutes_with_composition:\n  \"\\<lbrakk> a \\<in> M; b \\<in> M \\<rbrakk> \\<Longrightarrow> Class a [\\<cdot>] Class b = Class (a \\<cdot> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> M; b \\<in> M\\<rbrakk>\n    \\<Longrightarrow> Class a [\\<cdot>] Class b = Class (a \\<cdot> b)", "by (auto simp: quotient_composition_def intro: Class_cong [OF Class_eq Class_eq] del: equalityI)"], ["", "text \\<open>p 54, ll 30--31\\<close>"], ["", "theorem quotient_composition_closed [intro, simp]:\n  \"\\<lbrakk> A \\<in> M / E; B \\<in> M / E \\<rbrakk> \\<Longrightarrow> A [\\<cdot>] B \\<in> M / E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> Partition; B \\<in> Partition\\<rbrakk>\n    \\<Longrightarrow> A [\\<cdot>] B \\<in> Partition", "by (erule quotient_ClassE)+ (simp add: Class_commutes_with_composition)"], ["", "text \\<open>p 54, l 32; p 55, ll 1--3\\<close>"], ["", "sublocale quotient: monoid \"M / E\" \"([\\<cdot>])\" \"Class \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid Partition ([\\<cdot>]) (Class \\<one>)", "by unfold_locales (auto simp: Class_commutes_with_composition associative elim!: quotient_ClassE)"], ["", "end"], ["", "(* monoid_congruence *)"], ["", "text \\<open>p 55, ll 16--17\\<close>"], ["", "locale group_congruence = group + monoid_congruence where M = G begin"], ["", "text \\<open>p 55, ll 16--17\\<close>"], ["", "notation quotient_composition (infixl \"[\\<cdot>]\" 70)"], ["", "text \\<open>p 55, l 18\\<close>"], ["", "theorem Class_right_inverse:\n  \"a \\<in> G \\<Longrightarrow> Class a [\\<cdot>] Class (inverse a) = Class \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> G \\<Longrightarrow>\n    Class a [\\<cdot>] Class (inverse a) = Class \\<one>", "by (simp add: Class_commutes_with_composition)"], ["", "text \\<open>p 55, l 18\\<close>"], ["", "theorem Class_left_inverse:\n  \"a \\<in> G \\<Longrightarrow> Class (inverse a) [\\<cdot>] Class a = Class \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> G \\<Longrightarrow>\n    Class (inverse a) [\\<cdot>] Class a = Class \\<one>", "by (simp add: Class_commutes_with_composition)"], ["", "text \\<open>p 55, l 18\\<close>"], ["", "theorem Class_invertible:\n  \"a \\<in> G \\<Longrightarrow> quotient.invertible (Class a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> G \\<Longrightarrow> quotient.invertible (Class a)", "by (blast intro!: Class_right_inverse Class_left_inverse)+"], ["", "text \\<open>p 55, l 18\\<close>"], ["", "theorem Class_commutes_with_inverse:\n  \"a \\<in> G \\<Longrightarrow> quotient.inverse (Class a) = Class (inverse a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> G \\<Longrightarrow>\n    quotient.inverse (Class a) = Class (inverse a)", "by (rule quotient.inverse_equality) (auto simp: Class_right_inverse Class_left_inverse)"], ["", "text \\<open>p 55, l 17\\<close>"], ["", "sublocale quotient: group \"G / E\" \"([\\<cdot>])\" \"Class \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group Partition ([\\<cdot>]) (Class \\<one>)", "by unfold_locales (metis Block_self Class_invertible element_exists)"], ["", "end"], ["", "(* group_congruence *)"], ["", "text \\<open>Def 1.5\\<close>"], ["", "text \\<open>p 55, ll 22--25\\<close>"], ["", "locale normal_subgroup =\n  subgroup_of_group K G \"(\\<cdot>)\" \\<one> for K and G and composition (infixl \"\\<cdot>\" 70) and unit (\"\\<one>\") +\n  assumes normal: \"\\<lbrakk> g \\<in> G; k \\<in> K \\<rbrakk> \\<Longrightarrow> inverse g \\<cdot> k \\<cdot> g \\<in> K\""], ["", "text \\<open>Lemmas from the proof of Thm 1.6\\<close>"], ["", "context subgroup_of_group begin"], ["", "text \\<open>We use @{term H} for @{term K}.\\<close>"], ["", "text \\<open>p 56, ll 14--16\\<close>"], ["", "theorem Left_equals_Right_coset_implies_normality:\n  assumes [simp]: \"\\<And>g. g \\<in> G \\<Longrightarrow> g \\<cdot>| H = H |\\<cdot> g\"\n  shows \"normal_subgroup H G (\\<cdot>) \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. normal_subgroup H G (\\<cdot>) \\<one>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g k.\n       \\<lbrakk>g \\<in> G; k \\<in> H\\<rbrakk>\n       \\<Longrightarrow> inverse g \\<cdot> k \\<cdot> g \\<in> H", "fix g k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g k.\n       \\<lbrakk>g \\<in> G; k \\<in> H\\<rbrakk>\n       \\<Longrightarrow> inverse g \\<cdot> k \\<cdot> g \\<in> H", "assume [simp]: \"g \\<in> G\" \"k \\<in> H\""], ["proof (state)\nthis:\n  g \\<in> G\n  k \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>g k.\n       \\<lbrakk>g \\<in> G; k \\<in> H\\<rbrakk>\n       \\<Longrightarrow> inverse g \\<cdot> k \\<cdot> g \\<in> H", "have \"k \\<cdot> g \\<in> g \\<cdot>| H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<cdot> g \\<in> g \\<cdot>| H", "by auto"], ["proof (state)\nthis:\n  k \\<cdot> g \\<in> g \\<cdot>| H\n\ngoal (1 subgoal):\n 1. \\<And>g k.\n       \\<lbrakk>g \\<in> G; k \\<in> H\\<rbrakk>\n       \\<Longrightarrow> inverse g \\<cdot> k \\<cdot> g \\<in> H", "then"], ["proof (chain)\npicking this:\n  k \\<cdot> g \\<in> g \\<cdot>| H", "obtain k' where \"k \\<cdot> g = g \\<cdot> k'\" and \"k' \\<in> H\""], ["proof (prove)\nusing this:\n  k \\<cdot> g \\<in> g \\<cdot>| H\n\ngoal (1 subgoal):\n 1. (\\<And>k'.\n        \\<lbrakk>k \\<cdot> g = g \\<cdot> k'; k' \\<in> H\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  k \\<cdot> g = g \\<cdot> k'\n  k' \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>g k.\n       \\<lbrakk>g \\<in> G; k \\<in> H\\<rbrakk>\n       \\<Longrightarrow> inverse g \\<cdot> k \\<cdot> g \\<in> H", "then"], ["proof (chain)\npicking this:\n  k \\<cdot> g = g \\<cdot> k'\n  k' \\<in> H", "show \"inverse g \\<cdot> k \\<cdot> g \\<in> H\""], ["proof (prove)\nusing this:\n  k \\<cdot> g = g \\<cdot> k'\n  k' \\<in> H\n\ngoal (1 subgoal):\n 1. inverse g \\<cdot> k \\<cdot> g \\<in> H", "by (simp add: associative invertible_left_inverse2)"], ["proof (state)\nthis:\n  inverse g \\<cdot> k \\<cdot> g \\<in> H\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* subgroup_of_group *)"], ["", "text \\<open>Thm 1.6, first part\\<close>"], ["", "context group_congruence begin"], ["", "text \\<open>Jacobson's $K$\\<close>"], ["", "text \\<open>p 56, l 29\\<close>"], ["", "definition \"Normal = Class \\<one>\""], ["", "text \\<open>p 56, ll 3--6\\<close>"], ["", "interpretation subgroup \"Normal\" G \"(\\<cdot>)\" \\<one>"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup Normal G (\\<cdot>) \\<one>", "unfolding Normal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (Class \\<one>) G (\\<cdot>) \\<one>", "proof (rule subgroupI)"], ["proof (state)\ngoal (5 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Class \\<one>; h \\<in> Class \\<one>\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Class \\<one>\n 4. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 5. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "fix k1 and k2"], ["proof (state)\ngoal (5 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Class \\<one>; h \\<in> Class \\<one>\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Class \\<one>\n 4. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 5. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "assume K: \"k1 \\<in> Class \\<one>\" \"k2 \\<in> Class \\<one>\""], ["proof (state)\nthis:\n  k1 \\<in> Class \\<one>\n  k2 \\<in> Class \\<one>\n\ngoal (5 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Class \\<one>; h \\<in> Class \\<one>\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Class \\<one>\n 4. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 5. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "then"], ["proof (chain)\npicking this:\n  k1 \\<in> Class \\<one>\n  k2 \\<in> Class \\<one>", "have \"k1 \\<cdot> k2 \\<in> Class (k1 \\<cdot> k2)\""], ["proof (prove)\nusing this:\n  k1 \\<in> Class \\<one>\n  k2 \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. k1 \\<cdot> k2 \\<in> Class (k1 \\<cdot> k2)", "by blast"], ["proof (state)\nthis:\n  k1 \\<cdot> k2 \\<in> Class (k1 \\<cdot> k2)\n\ngoal (5 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Class \\<one>; h \\<in> Class \\<one>\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Class \\<one>\n 4. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 5. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "also"], ["proof (state)\nthis:\n  k1 \\<cdot> k2 \\<in> Class (k1 \\<cdot> k2)\n\ngoal (5 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Class \\<one>; h \\<in> Class \\<one>\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Class \\<one>\n 4. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 5. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "have \"\\<dots> = Class k1 [\\<cdot>] Class k2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Class (k1 \\<cdot> k2) = Class k1 [\\<cdot>] Class k2", "using K"], ["proof (prove)\nusing this:\n  k1 \\<in> Class \\<one>\n  k2 \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. Class (k1 \\<cdot> k2) = Class k1 [\\<cdot>] Class k2", "by (auto simp add: Class_commutes_with_composition Class_closed)"], ["proof (state)\nthis:\n  Class (k1 \\<cdot> k2) = Class k1 [\\<cdot>] Class k2\n\ngoal (5 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Class \\<one>; h \\<in> Class \\<one>\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Class \\<one>\n 4. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 5. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "also"], ["proof (state)\nthis:\n  Class (k1 \\<cdot> k2) = Class k1 [\\<cdot>] Class k2\n\ngoal (5 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Class \\<one>; h \\<in> Class \\<one>\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Class \\<one>\n 4. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 5. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "have \"\\<dots> = Class \\<one> [\\<cdot>] Class \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Class k1 [\\<cdot>] Class k2 = Class \\<one> [\\<cdot>] Class \\<one>", "using K"], ["proof (prove)\nusing this:\n  k1 \\<in> Class \\<one>\n  k2 \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. Class k1 [\\<cdot>] Class k2 = Class \\<one> [\\<cdot>] Class \\<one>", "by (metis ClassD Class_eq unit_closed)"], ["proof (state)\nthis:\n  Class k1 [\\<cdot>] Class k2 = Class \\<one> [\\<cdot>] Class \\<one>\n\ngoal (5 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Class \\<one>; h \\<in> Class \\<one>\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Class \\<one>\n 4. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 5. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "also"], ["proof (state)\nthis:\n  Class k1 [\\<cdot>] Class k2 = Class \\<one> [\\<cdot>] Class \\<one>\n\ngoal (5 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Class \\<one>; h \\<in> Class \\<one>\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Class \\<one>\n 4. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 5. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "have \"\\<dots> = Class \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Class \\<one> [\\<cdot>] Class \\<one> = Class \\<one>", "by simp"], ["proof (state)\nthis:\n  Class \\<one> [\\<cdot>] Class \\<one> = Class \\<one>\n\ngoal (5 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> Class \\<one>; h \\<in> Class \\<one>\\<rbrakk>\n       \\<Longrightarrow> g \\<cdot> h \\<in> Class \\<one>\n 4. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 5. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "finally"], ["proof (chain)\npicking this:\n  k1 \\<cdot> k2 \\<in> Class \\<one>", "show \"k1 \\<cdot> k2 \\<in> Class \\<one>\""], ["proof (prove)\nusing this:\n  k1 \\<cdot> k2 \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. k1 \\<cdot> k2 \\<in> Class \\<one>", "."], ["proof (state)\nthis:\n  k1 \\<cdot> k2 \\<in> Class \\<one>\n\ngoal (4 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 4. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 4. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "fix k"], ["proof (state)\ngoal (4 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 4. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "assume K: \"k \\<in> Class \\<one>\""], ["proof (state)\nthis:\n  k \\<in> Class \\<one>\n\ngoal (4 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 4. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "then"], ["proof (chain)\npicking this:\n  k \\<in> Class \\<one>", "have \"inverse k \\<in> Class (inverse k)\""], ["proof (prove)\nusing this:\n  k \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. inverse k \\<in> Class (inverse k)", "by blast"], ["proof (state)\nthis:\n  inverse k \\<in> Class (inverse k)\n\ngoal (4 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 4. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "also"], ["proof (state)\nthis:\n  inverse k \\<in> Class (inverse k)\n\ngoal (4 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 4. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "have \"\\<dots> = quotient.inverse (Class k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Class (inverse k) = quotient.inverse (Class k)", "using Class_commutes_with_inverse K"], ["proof (prove)\nusing this:\n  ?a \\<in> G \\<Longrightarrow>\n  quotient.inverse (Class ?a) = Class (inverse ?a)\n  k \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. Class (inverse k) = quotient.inverse (Class k)", "by blast"], ["proof (state)\nthis:\n  Class (inverse k) = quotient.inverse (Class k)\n\ngoal (4 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 4. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "also"], ["proof (state)\nthis:\n  Class (inverse k) = quotient.inverse (Class k)\n\ngoal (4 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 4. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "have \"\\<dots> = quotient.inverse (Class \\<one>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. quotient.inverse (Class k) = quotient.inverse (Class \\<one>)", "using Block_self K"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> ?A; ?A \\<in> Partition\\<rbrakk>\n  \\<Longrightarrow> Class ?a = ?A\n  k \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. quotient.inverse (Class k) = quotient.inverse (Class \\<one>)", "by auto"], ["proof (state)\nthis:\n  quotient.inverse (Class k) = quotient.inverse (Class \\<one>)\n\ngoal (4 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 4. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "also"], ["proof (state)\nthis:\n  quotient.inverse (Class k) = quotient.inverse (Class \\<one>)\n\ngoal (4 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 4. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "have \"\\<dots> = Class \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. quotient.inverse (Class \\<one>) = Class \\<one>", "using quotient.inverse_unit"], ["proof (prove)\nusing this:\n  quotient.inverse (Class \\<one>) = Class \\<one>\n\ngoal (1 subgoal):\n 1. quotient.inverse (Class \\<one>) = Class \\<one>", "by blast"], ["proof (state)\nthis:\n  quotient.inverse (Class \\<one>) = Class \\<one>\n\ngoal (4 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g\n 4. \\<And>g.\n       g \\<in> Class \\<one> \\<Longrightarrow> inverse g \\<in> Class \\<one>", "finally"], ["proof (chain)\npicking this:\n  inverse k \\<in> Class \\<one>", "show \"inverse k \\<in> Class \\<one>\""], ["proof (prove)\nusing this:\n  inverse k \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. inverse k \\<in> Class \\<one>", "."], ["proof (state)\nthis:\n  inverse k \\<in> Class \\<one>\n\ngoal (3 subgoals):\n 1. Class \\<one> \\<subseteq> G\n 2. \\<one> \\<in> Class \\<one>\n 3. \\<And>g. g \\<in> Class \\<one> \\<Longrightarrow> invertible g", "qed auto"], ["", "text \\<open>Coset notation\\<close>"], ["", "text \\<open>p 56, ll 5--6\\<close>"], ["", "interpretation subgroup_of_group \"Normal\" G \"(\\<cdot>)\" \\<one>"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup_of_group Normal G (\\<cdot>) \\<one>", ".."], ["", "text \\<open>Equation 25 for right cosets\\<close>"], ["", "text \\<open>p 55, ll 29--30; p 56, ll 6--11\\<close>"], ["", "theorem Right_Coset_Class_unit:\n  assumes g: \"g \\<in> G\" shows \"Normal |\\<cdot> g = Class g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Normal |\\<cdot> g = Class g", "unfolding Normal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Class \\<one> |\\<cdot> g = Class g", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> Class \\<one> |\\<cdot> g", "fix a  \\<comment> \\<open>ll 6--8\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> Class \\<one> |\\<cdot> g", "assume a: \"a \\<in> Class g\""], ["proof (state)\nthis:\n  a \\<in> Class g\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> Class \\<one> |\\<cdot> g", "from a g"], ["proof (chain)\npicking this:\n  a \\<in> Class g\n  g \\<in> G", "have \"a \\<cdot> inverse g \\<in> Class (a \\<cdot> inverse g)\""], ["proof (prove)\nusing this:\n  a \\<in> Class g\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. a \\<cdot> inverse g \\<in> Class (a \\<cdot> inverse g)", "by blast"], ["proof (state)\nthis:\n  a \\<cdot> inverse g \\<in> Class (a \\<cdot> inverse g)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> Class \\<one> |\\<cdot> g", "also"], ["proof (state)\nthis:\n  a \\<cdot> inverse g \\<in> Class (a \\<cdot> inverse g)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> Class \\<one> |\\<cdot> g", "from a g"], ["proof (chain)\npicking this:\n  a \\<in> Class g\n  g \\<in> G", "have \"\\<dots> = Class a [\\<cdot>] Class (inverse g)\""], ["proof (prove)\nusing this:\n  a \\<in> Class g\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. Class (a \\<cdot> inverse g) = Class a [\\<cdot>] Class (inverse g)", "by (simp add: Class_commutes_with_composition block_closed)"], ["proof (state)\nthis:\n  Class (a \\<cdot> inverse g) = Class a [\\<cdot>] Class (inverse g)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> Class \\<one> |\\<cdot> g", "also"], ["proof (state)\nthis:\n  Class (a \\<cdot> inverse g) = Class a [\\<cdot>] Class (inverse g)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> Class \\<one> |\\<cdot> g", "from a g"], ["proof (chain)\npicking this:\n  a \\<in> Class g\n  g \\<in> G", "have \"\\<dots> = Class g [\\<cdot>] quotient.inverse (Class g)\""], ["proof (prove)\nusing this:\n  a \\<in> Class g\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. Class a [\\<cdot>] Class (inverse g) =\n    Class g [\\<cdot>] quotient.inverse (Class g)", "using Block_self Class_commutes_with_inverse"], ["proof (prove)\nusing this:\n  a \\<in> Class g\n  g \\<in> G\n  \\<lbrakk>?a \\<in> ?A; ?A \\<in> Partition\\<rbrakk>\n  \\<Longrightarrow> Class ?a = ?A\n  ?a \\<in> G \\<Longrightarrow>\n  quotient.inverse (Class ?a) = Class (inverse ?a)\n\ngoal (1 subgoal):\n 1. Class a [\\<cdot>] Class (inverse g) =\n    Class g [\\<cdot>] quotient.inverse (Class g)", "by auto"], ["proof (state)\nthis:\n  Class a [\\<cdot>] Class (inverse g) =\n  Class g [\\<cdot>] quotient.inverse (Class g)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> Class \\<one> |\\<cdot> g", "also"], ["proof (state)\nthis:\n  Class a [\\<cdot>] Class (inverse g) =\n  Class g [\\<cdot>] quotient.inverse (Class g)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> Class \\<one> |\\<cdot> g", "from g"], ["proof (chain)\npicking this:\n  g \\<in> G", "have \"\\<dots> = Class \\<one>\""], ["proof (prove)\nusing this:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. Class g [\\<cdot>] quotient.inverse (Class g) = Class \\<one>", "by simp"], ["proof (state)\nthis:\n  Class g [\\<cdot>] quotient.inverse (Class g) = Class \\<one>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> Class \\<one> |\\<cdot> g", "finally"], ["proof (chain)\npicking this:\n  a \\<cdot> inverse g \\<in> Class \\<one>", "show \"a \\<in> Class \\<one> |\\<cdot> g\""], ["proof (prove)\nusing this:\n  a \\<cdot> inverse g \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. a \\<in> Class \\<one> |\\<cdot> g", "unfolding Right_Coset_def"], ["proof (prove)\nusing this:\n  a \\<cdot> inverse g \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. a \\<in> {h \\<cdot> g |h. h \\<in> Class \\<one>}", "by simp (metis Class_closed a associative g inverse_equality invertible invertible_def right_unit)"], ["proof (state)\nthis:\n  a \\<in> Class \\<one> |\\<cdot> g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g", "fix a  \\<comment> \\<open>ll 8--9\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g", "assume a: \"a \\<in> Class \\<one> |\\<cdot> g\""], ["proof (state)\nthis:\n  a \\<in> Class \\<one> |\\<cdot> g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g", "then"], ["proof (chain)\npicking this:\n  a \\<in> Class \\<one> |\\<cdot> g", "obtain k where eq: \"a = k \\<cdot> g\" and k: \"k \\<in> Class \\<one>\""], ["proof (prove)\nusing this:\n  a \\<in> Class \\<one> |\\<cdot> g\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>a = k \\<cdot> g; k \\<in> Class \\<one>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a = k \\<cdot> g\n  k \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g", "with g"], ["proof (chain)\npicking this:\n  g \\<in> G\n  a = k \\<cdot> g\n  k \\<in> Class \\<one>", "have \"Class a = Class k [\\<cdot>] Class g\""], ["proof (prove)\nusing this:\n  g \\<in> G\n  a = k \\<cdot> g\n  k \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. Class a = Class k [\\<cdot>] Class g", "using Class_commutes_with_composition"], ["proof (prove)\nusing this:\n  g \\<in> G\n  a = k \\<cdot> g\n  k \\<in> Class \\<one>\n  \\<lbrakk>?a \\<in> G; ?b \\<in> G\\<rbrakk>\n  \\<Longrightarrow> Class ?a [\\<cdot>] Class ?b = Class (?a \\<cdot> ?b)\n\ngoal (1 subgoal):\n 1. Class a = Class k [\\<cdot>] Class g", "by auto"], ["proof (state)\nthis:\n  Class a = Class k [\\<cdot>] Class g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g", "also"], ["proof (state)\nthis:\n  Class a = Class k [\\<cdot>] Class g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g", "from k"], ["proof (chain)\npicking this:\n  k \\<in> Class \\<one>", "have \"\\<dots> = Class \\<one> [\\<cdot>] Class g\""], ["proof (prove)\nusing this:\n  k \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. Class k [\\<cdot>] Class g = Class \\<one> [\\<cdot>] Class g", "using Block_self"], ["proof (prove)\nusing this:\n  k \\<in> Class \\<one>\n  \\<lbrakk>?a \\<in> ?A; ?A \\<in> Partition\\<rbrakk>\n  \\<Longrightarrow> Class ?a = ?A\n\ngoal (1 subgoal):\n 1. Class k [\\<cdot>] Class g = Class \\<one> [\\<cdot>] Class g", "by auto"], ["proof (state)\nthis:\n  Class k [\\<cdot>] Class g = Class \\<one> [\\<cdot>] Class g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g", "also"], ["proof (state)\nthis:\n  Class k [\\<cdot>] Class g = Class \\<one> [\\<cdot>] Class g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g", "from g"], ["proof (chain)\npicking this:\n  g \\<in> G", "have \"\\<dots> = Class g\""], ["proof (prove)\nusing this:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. Class \\<one> [\\<cdot>] Class g = Class g", "by simp"], ["proof (state)\nthis:\n  Class \\<one> [\\<cdot>] Class g = Class g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Class \\<one> |\\<cdot> g \\<Longrightarrow> x \\<in> Class g", "finally"], ["proof (chain)\npicking this:\n  Class a = Class g", "show \"a \\<in> Class g\""], ["proof (prove)\nusing this:\n  Class a = Class g\n\ngoal (1 subgoal):\n 1. a \\<in> Class g", "using g eq k composition_closed quotient.unit_closed"], ["proof (prove)\nusing this:\n  Class a = Class g\n  g \\<in> G\n  a = k \\<cdot> g\n  k \\<in> Class \\<one>\n  \\<lbrakk>?a \\<in> G; ?b \\<in> G\\<rbrakk>\n  \\<Longrightarrow> ?a \\<cdot> ?b \\<in> G\n  Class \\<one> \\<in> Partition\n\ngoal (1 subgoal):\n 1. a \\<in> Class g", "by blast"], ["proof (state)\nthis:\n  a \\<in> Class g\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Equation 25 for left cosets\\<close>"], ["", "text \\<open>p 55, ll 29--30; p 56, ll 6--11\\<close>"], ["", "theorem Left_Coset_Class_unit:\n  assumes g: \"g \\<in> G\" shows \"g \\<cdot>| Normal = Class g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<cdot>| Normal = Class g", "unfolding Normal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<cdot>| Class \\<one> = Class g", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> g \\<cdot>| Class \\<one>", "fix a  \\<comment> \\<open>ll 6--8\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> g \\<cdot>| Class \\<one>", "assume a: \"a \\<in> Class g\""], ["proof (state)\nthis:\n  a \\<in> Class g\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> g \\<cdot>| Class \\<one>", "from a g"], ["proof (chain)\npicking this:\n  a \\<in> Class g\n  g \\<in> G", "have \"inverse g \\<cdot> a \\<in> Class (inverse g \\<cdot> a)\""], ["proof (prove)\nusing this:\n  a \\<in> Class g\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. inverse g \\<cdot> a \\<in> Class (inverse g \\<cdot> a)", "by blast"], ["proof (state)\nthis:\n  inverse g \\<cdot> a \\<in> Class (inverse g \\<cdot> a)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> g \\<cdot>| Class \\<one>", "also"], ["proof (state)\nthis:\n  inverse g \\<cdot> a \\<in> Class (inverse g \\<cdot> a)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> g \\<cdot>| Class \\<one>", "from a g"], ["proof (chain)\npicking this:\n  a \\<in> Class g\n  g \\<in> G", "have \"\\<dots> = Class (inverse g) [\\<cdot>] Class a\""], ["proof (prove)\nusing this:\n  a \\<in> Class g\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. Class (inverse g \\<cdot> a) = Class (inverse g) [\\<cdot>] Class a", "by (simp add: Class_commutes_with_composition block_closed)"], ["proof (state)\nthis:\n  Class (inverse g \\<cdot> a) = Class (inverse g) [\\<cdot>] Class a\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> g \\<cdot>| Class \\<one>", "also"], ["proof (state)\nthis:\n  Class (inverse g \\<cdot> a) = Class (inverse g) [\\<cdot>] Class a\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> g \\<cdot>| Class \\<one>", "from a g"], ["proof (chain)\npicking this:\n  a \\<in> Class g\n  g \\<in> G", "have \"\\<dots> = quotient.inverse (Class g) [\\<cdot>] Class g\""], ["proof (prove)\nusing this:\n  a \\<in> Class g\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. Class (inverse g) [\\<cdot>] Class a =\n    quotient.inverse (Class g) [\\<cdot>] Class g", "using Block_self Class_commutes_with_inverse"], ["proof (prove)\nusing this:\n  a \\<in> Class g\n  g \\<in> G\n  \\<lbrakk>?a \\<in> ?A; ?A \\<in> Partition\\<rbrakk>\n  \\<Longrightarrow> Class ?a = ?A\n  ?a \\<in> G \\<Longrightarrow>\n  quotient.inverse (Class ?a) = Class (inverse ?a)\n\ngoal (1 subgoal):\n 1. Class (inverse g) [\\<cdot>] Class a =\n    quotient.inverse (Class g) [\\<cdot>] Class g", "by auto"], ["proof (state)\nthis:\n  Class (inverse g) [\\<cdot>] Class a =\n  quotient.inverse (Class g) [\\<cdot>] Class g\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> g \\<cdot>| Class \\<one>", "also"], ["proof (state)\nthis:\n  Class (inverse g) [\\<cdot>] Class a =\n  quotient.inverse (Class g) [\\<cdot>] Class g\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> g \\<cdot>| Class \\<one>", "from g"], ["proof (chain)\npicking this:\n  g \\<in> G", "have \"\\<dots> = Class \\<one>\""], ["proof (prove)\nusing this:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. quotient.inverse (Class g) [\\<cdot>] Class g = Class \\<one>", "by simp"], ["proof (state)\nthis:\n  quotient.inverse (Class g) [\\<cdot>] Class g = Class \\<one>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g\n 2. \\<And>x.\n       x \\<in> Class g \\<Longrightarrow> x \\<in> g \\<cdot>| Class \\<one>", "finally"], ["proof (chain)\npicking this:\n  inverse g \\<cdot> a \\<in> Class \\<one>", "show \"a \\<in> g \\<cdot>| Class \\<one>\""], ["proof (prove)\nusing this:\n  inverse g \\<cdot> a \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. a \\<in> g \\<cdot>| Class \\<one>", "unfolding Left_Coset_def"], ["proof (prove)\nusing this:\n  inverse g \\<cdot> a \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. a \\<in> {g \\<cdot> h |h. h \\<in> Class \\<one>}", "by simp (metis Class_closed a associative g inverse_equality invertible invertible_def right_unit)"], ["proof (state)\nthis:\n  a \\<in> g \\<cdot>| Class \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g", "fix a  \\<comment> \\<open>ll 8--9, ``the same thing holds''\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g", "assume a: \"a \\<in> g \\<cdot>| Class \\<one>\""], ["proof (state)\nthis:\n  a \\<in> g \\<cdot>| Class \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g", "then"], ["proof (chain)\npicking this:\n  a \\<in> g \\<cdot>| Class \\<one>", "obtain k where eq: \"a = g \\<cdot> k\" and k: \"k \\<in> Class \\<one>\""], ["proof (prove)\nusing this:\n  a \\<in> g \\<cdot>| Class \\<one>\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>a = g \\<cdot> k; k \\<in> Class \\<one>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a = g \\<cdot> k\n  k \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g", "with g"], ["proof (chain)\npicking this:\n  g \\<in> G\n  a = g \\<cdot> k\n  k \\<in> Class \\<one>", "have \"Class a = Class g [\\<cdot>] Class k\""], ["proof (prove)\nusing this:\n  g \\<in> G\n  a = g \\<cdot> k\n  k \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. Class a = Class g [\\<cdot>] Class k", "using Class_commutes_with_composition"], ["proof (prove)\nusing this:\n  g \\<in> G\n  a = g \\<cdot> k\n  k \\<in> Class \\<one>\n  \\<lbrakk>?a \\<in> G; ?b \\<in> G\\<rbrakk>\n  \\<Longrightarrow> Class ?a [\\<cdot>] Class ?b = Class (?a \\<cdot> ?b)\n\ngoal (1 subgoal):\n 1. Class a = Class g [\\<cdot>] Class k", "by auto"], ["proof (state)\nthis:\n  Class a = Class g [\\<cdot>] Class k\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g", "also"], ["proof (state)\nthis:\n  Class a = Class g [\\<cdot>] Class k\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g", "from k"], ["proof (chain)\npicking this:\n  k \\<in> Class \\<one>", "have \"\\<dots> = Class g [\\<cdot>] Class \\<one>\""], ["proof (prove)\nusing this:\n  k \\<in> Class \\<one>\n\ngoal (1 subgoal):\n 1. Class g [\\<cdot>] Class k = Class g [\\<cdot>] Class \\<one>", "using Block_self"], ["proof (prove)\nusing this:\n  k \\<in> Class \\<one>\n  \\<lbrakk>?a \\<in> ?A; ?A \\<in> Partition\\<rbrakk>\n  \\<Longrightarrow> Class ?a = ?A\n\ngoal (1 subgoal):\n 1. Class g [\\<cdot>] Class k = Class g [\\<cdot>] Class \\<one>", "by auto"], ["proof (state)\nthis:\n  Class g [\\<cdot>] Class k = Class g [\\<cdot>] Class \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g", "also"], ["proof (state)\nthis:\n  Class g [\\<cdot>] Class k = Class g [\\<cdot>] Class \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g", "from g"], ["proof (chain)\npicking this:\n  g \\<in> G", "have \"\\<dots> = Class g\""], ["proof (prove)\nusing this:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. Class g [\\<cdot>] Class \\<one> = Class g", "by simp"], ["proof (state)\nthis:\n  Class g [\\<cdot>] Class \\<one> = Class g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g \\<cdot>| Class \\<one> \\<Longrightarrow> x \\<in> Class g", "finally"], ["proof (chain)\npicking this:\n  Class a = Class g", "show \"a \\<in> Class g\""], ["proof (prove)\nusing this:\n  Class a = Class g\n\ngoal (1 subgoal):\n 1. a \\<in> Class g", "using g eq k composition_closed quotient.unit_closed"], ["proof (prove)\nusing this:\n  Class a = Class g\n  g \\<in> G\n  a = g \\<cdot> k\n  k \\<in> Class \\<one>\n  \\<lbrakk>?a \\<in> G; ?b \\<in> G\\<rbrakk>\n  \\<Longrightarrow> ?a \\<cdot> ?b \\<in> G\n  Class \\<one> \\<in> Partition\n\ngoal (1 subgoal):\n 1. a \\<in> Class g", "by blast"], ["proof (state)\nthis:\n  a \\<in> Class g\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Thm 1.6, statement of first part\\<close>"], ["", "text \\<open>p 55, ll 28--29; p 56, ll 12--16\\<close>"], ["", "theorem Class_unit_is_normal:\n  \"normal_subgroup Normal G (\\<cdot>) \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. normal_subgroup Normal G (\\<cdot>) \\<one>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. normal_subgroup Normal G (\\<cdot>) \\<one>", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. normal_subgroup Normal G (\\<cdot>) \\<one>", "fix g"], ["proof (state)\ngoal (1 subgoal):\n 1. normal_subgroup Normal G (\\<cdot>) \\<one>", "assume \"g \\<in> G\""], ["proof (state)\nthis:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. normal_subgroup Normal G (\\<cdot>) \\<one>", "then"], ["proof (chain)\npicking this:\n  g \\<in> G", "have \"g \\<cdot>| Normal = Normal |\\<cdot> g\""], ["proof (prove)\nusing this:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. g \\<cdot>| Normal = Normal |\\<cdot> g", "by (simp add: Right_Coset_Class_unit Left_Coset_Class_unit)"], ["proof (state)\nthis:\n  g \\<cdot>| Normal = Normal |\\<cdot> g\n\ngoal (1 subgoal):\n 1. normal_subgroup Normal G (\\<cdot>) \\<one>", "}"], ["proof (state)\nthis:\n  ?g2 \\<in> G \\<Longrightarrow> ?g2 \\<cdot>| Normal = Normal |\\<cdot> ?g2\n\ngoal (1 subgoal):\n 1. normal_subgroup Normal G (\\<cdot>) \\<one>", "then"], ["proof (chain)\npicking this:\n  ?g2 \\<in> G \\<Longrightarrow> ?g2 \\<cdot>| Normal = Normal |\\<cdot> ?g2", "show ?thesis"], ["proof (prove)\nusing this:\n  ?g2 \\<in> G \\<Longrightarrow> ?g2 \\<cdot>| Normal = Normal |\\<cdot> ?g2\n\ngoal (1 subgoal):\n 1. normal_subgroup Normal G (\\<cdot>) \\<one>", "by (rule Left_equals_Right_coset_implies_normality)"], ["proof (state)\nthis:\n  normal_subgroup Normal G (\\<cdot>) \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale normal: normal_subgroup Normal G \"(\\<cdot>)\" \\<one>"], ["proof (prove)\ngoal (1 subgoal):\n 1. normal_subgroup Normal G (\\<cdot>) \\<one>", "by (fact Class_unit_is_normal)"], ["", "end"], ["", "(* group_congruence *)"], ["", "context normal_subgroup begin"], ["", "text \\<open>p 56, ll 16--19\\<close>"], ["", "theorem Left_equals_Right_coset:\n  \"g \\<in> G \\<Longrightarrow> g \\<cdot>| K = K |\\<cdot> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> G \\<Longrightarrow> g \\<cdot>| K = K |\\<cdot> g", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<in> G \\<Longrightarrow> g \\<cdot>| K \\<subseteq> K |\\<cdot> g\n 2. g \\<in> G \\<Longrightarrow> K |\\<cdot> g \\<subseteq> g \\<cdot>| K", "assume [simp]: \"g \\<in> G\""], ["proof (state)\nthis:\n  g \\<in> G\n\ngoal (2 subgoals):\n 1. g \\<in> G \\<Longrightarrow> g \\<cdot>| K \\<subseteq> K |\\<cdot> g\n 2. g \\<in> G \\<Longrightarrow> K |\\<cdot> g \\<subseteq> g \\<cdot>| K", "show \"K |\\<cdot> g \\<subseteq> g \\<cdot>| K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K |\\<cdot> g \\<subseteq> g \\<cdot>| K", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> K |\\<cdot> g \\<Longrightarrow> x \\<in> g \\<cdot>| K", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> K |\\<cdot> g \\<Longrightarrow> x \\<in> g \\<cdot>| K", "assume x: \"x \\<in> K |\\<cdot> g\""], ["proof (state)\nthis:\n  x \\<in> K |\\<cdot> g\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> K |\\<cdot> g \\<Longrightarrow> x \\<in> g \\<cdot>| K", "then"], ["proof (chain)\npicking this:\n  x \\<in> K |\\<cdot> g", "obtain k where \"x = k \\<cdot> g\" and [simp]: \"k \\<in> K\""], ["proof (prove)\nusing this:\n  x \\<in> K |\\<cdot> g\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>x = k \\<cdot> g; k \\<in> K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: Right_Coset_def)"], ["proof (state)\nthis:\n  x = k \\<cdot> g\n  k \\<in> K\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> K |\\<cdot> g \\<Longrightarrow> x \\<in> g \\<cdot>| K", "then"], ["proof (chain)\npicking this:\n  x = k \\<cdot> g\n  k \\<in> K", "have \"x = g \\<cdot> (inverse g \\<cdot> k \\<cdot> g)\""], ["proof (prove)\nusing this:\n  x = k \\<cdot> g\n  k \\<in> K\n\ngoal (1 subgoal):\n 1. x = g \\<cdot> (inverse g \\<cdot> k \\<cdot> g)", "by (simp add: associative invertible_right_inverse2)"], ["proof (state)\nthis:\n  x = g \\<cdot> (inverse g \\<cdot> k \\<cdot> g)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> K |\\<cdot> g \\<Longrightarrow> x \\<in> g \\<cdot>| K", "also"], ["proof (state)\nthis:\n  x = g \\<cdot> (inverse g \\<cdot> k \\<cdot> g)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> K |\\<cdot> g \\<Longrightarrow> x \\<in> g \\<cdot>| K", "from normal"], ["proof (chain)\npicking this:\n  \\<lbrakk>?g \\<in> G; ?k \\<in> K\\<rbrakk>\n  \\<Longrightarrow> inverse ?g \\<cdot> ?k \\<cdot> ?g \\<in> K", "have \"\\<dots> \\<in> g \\<cdot>| K\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?g \\<in> G; ?k \\<in> K\\<rbrakk>\n  \\<Longrightarrow> inverse ?g \\<cdot> ?k \\<cdot> ?g \\<in> K\n\ngoal (1 subgoal):\n 1. g \\<cdot> (inverse g \\<cdot> k \\<cdot> g) \\<in> g \\<cdot>| K", "by (auto simp add: Left_Coset_def)"], ["proof (state)\nthis:\n  g \\<cdot> (inverse g \\<cdot> k \\<cdot> g) \\<in> g \\<cdot>| K\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> K |\\<cdot> g \\<Longrightarrow> x \\<in> g \\<cdot>| K", "finally"], ["proof (chain)\npicking this:\n  x \\<in> g \\<cdot>| K", "show \"x \\<in> g \\<cdot>| K\""], ["proof (prove)\nusing this:\n  x \\<in> g \\<cdot>| K\n\ngoal (1 subgoal):\n 1. x \\<in> g \\<cdot>| K", "."], ["proof (state)\nthis:\n  x \\<in> g \\<cdot>| K\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  K |\\<cdot> g \\<subseteq> g \\<cdot>| K\n\ngoal (1 subgoal):\n 1. g \\<in> G \\<Longrightarrow> g \\<cdot>| K \\<subseteq> K |\\<cdot> g", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<in> G \\<Longrightarrow> g \\<cdot>| K \\<subseteq> K |\\<cdot> g", "assume [simp]: \"g \\<in> G\""], ["proof (state)\nthis:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. g \\<in> G \\<Longrightarrow> g \\<cdot>| K \\<subseteq> K |\\<cdot> g", "show \"g \\<cdot>| K \\<subseteq> K |\\<cdot> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<cdot>| K \\<subseteq> K |\\<cdot> g", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> g \\<cdot>| K \\<Longrightarrow> x \\<in> K |\\<cdot> g", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> g \\<cdot>| K \\<Longrightarrow> x \\<in> K |\\<cdot> g", "assume x: \"x \\<in> g \\<cdot>| K\""], ["proof (state)\nthis:\n  x \\<in> g \\<cdot>| K\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> g \\<cdot>| K \\<Longrightarrow> x \\<in> K |\\<cdot> g", "then"], ["proof (chain)\npicking this:\n  x \\<in> g \\<cdot>| K", "obtain k where \"x = g \\<cdot> k\" and [simp]: \"k \\<in> K\""], ["proof (prove)\nusing this:\n  x \\<in> g \\<cdot>| K\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>x = g \\<cdot> k; k \\<in> K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: Left_Coset_def)"], ["proof (state)\nthis:\n  x = g \\<cdot> k\n  k \\<in> K\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> g \\<cdot>| K \\<Longrightarrow> x \\<in> K |\\<cdot> g", "then"], ["proof (chain)\npicking this:\n  x = g \\<cdot> k\n  k \\<in> K", "have \"x = (inverse (inverse g) \\<cdot> k \\<cdot> inverse g) \\<cdot> g\""], ["proof (prove)\nusing this:\n  x = g \\<cdot> k\n  k \\<in> K\n\ngoal (1 subgoal):\n 1. x = inverse (inverse g) \\<cdot> k \\<cdot> inverse g \\<cdot> g", "by (simp add: associative del: invertible_right_inverse)"], ["proof (state)\nthis:\n  x = inverse (inverse g) \\<cdot> k \\<cdot> inverse g \\<cdot> g\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> g \\<cdot>| K \\<Longrightarrow> x \\<in> K |\\<cdot> g", "also"], ["proof (state)\nthis:\n  x = inverse (inverse g) \\<cdot> k \\<cdot> inverse g \\<cdot> g\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> g \\<cdot>| K \\<Longrightarrow> x \\<in> K |\\<cdot> g", "from normal [where g = \"inverse g\"]"], ["proof (chain)\npicking this:\n  \\<lbrakk>inverse g \\<in> G; ?k \\<in> K\\<rbrakk>\n  \\<Longrightarrow> inverse (inverse g) \\<cdot> ?k \\<cdot> inverse g \\<in> K", "have \"\\<dots> \\<in> K |\\<cdot> g\""], ["proof (prove)\nusing this:\n  \\<lbrakk>inverse g \\<in> G; ?k \\<in> K\\<rbrakk>\n  \\<Longrightarrow> inverse (inverse g) \\<cdot> ?k \\<cdot> inverse g \\<in> K\n\ngoal (1 subgoal):\n 1. inverse (inverse g) \\<cdot> k \\<cdot> inverse g \\<cdot> g\n    \\<in> K |\\<cdot> g", "by (auto simp add: Right_Coset_def)"], ["proof (state)\nthis:\n  inverse (inverse g) \\<cdot> k \\<cdot> inverse g \\<cdot> g\n  \\<in> K |\\<cdot> g\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> g \\<cdot>| K \\<Longrightarrow> x \\<in> K |\\<cdot> g", "finally"], ["proof (chain)\npicking this:\n  x \\<in> K |\\<cdot> g", "show \"x \\<in> K |\\<cdot> g\""], ["proof (prove)\nusing this:\n  x \\<in> K |\\<cdot> g\n\ngoal (1 subgoal):\n 1. x \\<in> K |\\<cdot> g", "."], ["proof (state)\nthis:\n  x \\<in> K |\\<cdot> g\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g \\<cdot>| K \\<subseteq> K |\\<cdot> g\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Thm 1.6, second part\\<close>"], ["", "text \\<open>p 55, ll 31--32; p 56, ll 20--21\\<close>"], ["", "definition \"Congruence = {(a, b). a \\<in> G \\<and> b \\<in> G \\<and> inverse a \\<cdot> b \\<in> K}\""], ["", "text \\<open>p 56, ll 21--22\\<close>"], ["", "interpretation right_translations_of_group"], ["proof (prove)\ngoal (1 subgoal):\n 1. right_translations_of_group G (\\<cdot>) \\<one>", ".."], ["", "text \\<open>p 56, ll 21--22\\<close>"], ["", "interpretation transformation_group \"translation ` K\" G rewrites \"Orbit_Relation = Congruence\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation_group (translation ` K) G &&&\n    transformation_group.Orbit_Relation (translation ` K) G = Congruence", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. transformation_group (translation ` K) G\n 2. transformation_group.Orbit_Relation (translation ` K) G = Congruence", "interpret transformation_group \"translation ` K\" G"], ["proof (prove)\ngoal (1 subgoal):\n 1. transformation_group (translation ` K) G", ".."], ["proof (state)\ngoal (2 subgoals):\n 1. transformation_group (translation ` K) G\n 2. Orbit_Relation = Congruence", "show \"Orbit_Relation = Congruence\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Orbit_Relation = Congruence", "unfolding Orbit_Relation_def Congruence_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(x, y).\n     x \\<in> G \\<and>\n     y \\<in> G \\<and>\n     (\\<exists>\\<alpha>\\<in>translation ` K. y = \\<alpha> x)} =\n    {(a, b). a \\<in> G \\<and> b \\<in> G \\<and> inverse a \\<cdot> b \\<in> K}", "by (force simp: invertible_left_inverse2 invertible_right_inverse2 translation_apply simp del: restrict_apply)"], ["proof (state)\nthis:\n  Orbit_Relation = Congruence\n\ngoal (1 subgoal):\n 1. transformation_group (translation ` K) G", "qed rule"], ["", "text \\<open>p 56, ll 20--21\\<close>"], ["", "lemma CongruenceI: \"\\<lbrakk> a = b \\<cdot> k; a \\<in> G; b \\<in> G; k \\<in> K \\<rbrakk> \\<Longrightarrow> (a, b) \\<in> Congruence\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = b \\<cdot> k; a \\<in> G; b \\<in> G; k \\<in> K\\<rbrakk>\n    \\<Longrightarrow> (a, b) \\<in> Congruence", "by (clarsimp simp: Congruence_def associative inverse_composition_commute)"], ["", "text \\<open>p 56, ll 20--21\\<close>"], ["", "lemma CongruenceD: \"(a, b) \\<in> Congruence \\<Longrightarrow> \\<exists>k\\<in>K. a = b \\<cdot> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> Congruence \\<Longrightarrow>\n    \\<exists>k\\<in>K. a = b \\<cdot> k", "by (drule orbit.symmetric) (force simp: Congruence_def invertible_right_inverse2)"], ["", "text \\<open>\n  ``We showed in the last section that the relation we are considering is an equivalence relation in\n  @{term G} for any subgroup @{term K} of @{term G}.  We now proceed to show that normality of @{term K}\n  ensures that [...] $a \\equiv b \\pmod{K}$ is a congruence.''\n\\<close>"], ["", "text \\<open>p 55, ll 30--32; p 56, ll 1, 22--28\\<close>"], ["", "sublocale group_congruence where E = Congruence rewrites \"Normal = K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_congruence G (\\<cdot>) \\<one> Congruence &&&\n    group_congruence.Normal G \\<one> Congruence = K", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. group_congruence G (\\<cdot>) \\<one> Congruence\n 2. group_congruence.Normal G \\<one> Congruence = K", "show \"group_congruence G (\\<cdot>) \\<one> Congruence\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_congruence G (\\<cdot>) \\<one> Congruence", "proof unfold_locales"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a' b b'.\n       \\<lbrakk>(a, a') \\<in> Congruence; (b, b') \\<in> Congruence\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot> b, a' \\<cdot> b') \\<in> Congruence", "note CongruenceI [intro] CongruenceD [dest]"], ["proof (state)\nthis:\n  \\<lbrakk>?a = ?b \\<cdot> ?k; ?a \\<in> G; ?b \\<in> G; ?k \\<in> K\\<rbrakk>\n  \\<Longrightarrow> (?a, ?b) \\<in> Congruence\n  (?a, ?b) \\<in> Congruence \\<Longrightarrow>\n  \\<exists>k\\<in>K. ?a = ?b \\<cdot> k\n\ngoal (1 subgoal):\n 1. \\<And>a a' b b'.\n       \\<lbrakk>(a, a') \\<in> Congruence; (b, b') \\<in> Congruence\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot> b, a' \\<cdot> b') \\<in> Congruence", "fix a g b h"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a' b b'.\n       \\<lbrakk>(a, a') \\<in> Congruence; (b, b') \\<in> Congruence\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot> b, a' \\<cdot> b') \\<in> Congruence", "assume 1: \"(a, g) \\<in> Congruence\" and 2: \"(b, h) \\<in> Congruence\""], ["proof (state)\nthis:\n  (a, g) \\<in> Congruence\n  (b, h) \\<in> Congruence\n\ngoal (1 subgoal):\n 1. \\<And>a a' b b'.\n       \\<lbrakk>(a, a') \\<in> Congruence; (b, b') \\<in> Congruence\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot> b, a' \\<cdot> b') \\<in> Congruence", "then"], ["proof (chain)\npicking this:\n  (a, g) \\<in> Congruence\n  (b, h) \\<in> Congruence", "have G: \"a \\<in> G\" \"g \\<in> G\" \"b \\<in> G\" \"h \\<in> G\""], ["proof (prove)\nusing this:\n  (a, g) \\<in> Congruence\n  (b, h) \\<in> Congruence\n\ngoal (1 subgoal):\n 1. (a \\<in> G &&& g \\<in> G) &&& b \\<in> G &&& h \\<in> G", "unfolding Congruence_def"], ["proof (prove)\nusing this:\n  (a, g)\n  \\<in> {(a, b).\n         a \\<in> G \\<and> b \\<in> G \\<and> inverse a \\<cdot> b \\<in> K}\n  (b, h)\n  \\<in> {(a, b).\n         a \\<in> G \\<and> b \\<in> G \\<and> inverse a \\<cdot> b \\<in> K}\n\ngoal (1 subgoal):\n 1. (a \\<in> G &&& g \\<in> G) &&& b \\<in> G &&& h \\<in> G", "by clarify+"], ["proof (state)\nthis:\n  a \\<in> G\n  g \\<in> G\n  b \\<in> G\n  h \\<in> G\n\ngoal (1 subgoal):\n 1. \\<And>a a' b b'.\n       \\<lbrakk>(a, a') \\<in> Congruence; (b, b') \\<in> Congruence\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot> b, a' \\<cdot> b') \\<in> Congruence", "from 1"], ["proof (chain)\npicking this:\n  (a, g) \\<in> Congruence", "obtain k1 where a: \"a = g \\<cdot> k1\" and k1: \"k1 \\<in> K\""], ["proof (prove)\nusing this:\n  (a, g) \\<in> Congruence\n\ngoal (1 subgoal):\n 1. (\\<And>k1.\n        \\<lbrakk>a = g \\<cdot> k1; k1 \\<in> K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a = g \\<cdot> k1\n  k1 \\<in> K\n\ngoal (1 subgoal):\n 1. \\<And>a a' b b'.\n       \\<lbrakk>(a, a') \\<in> Congruence; (b, b') \\<in> Congruence\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot> b, a' \\<cdot> b') \\<in> Congruence", "from 2"], ["proof (chain)\npicking this:\n  (b, h) \\<in> Congruence", "obtain k2 where b: \"b = h \\<cdot> k2\" and k2: \"k2 \\<in> K\""], ["proof (prove)\nusing this:\n  (b, h) \\<in> Congruence\n\ngoal (1 subgoal):\n 1. (\\<And>k2.\n        \\<lbrakk>b = h \\<cdot> k2; k2 \\<in> K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  b = h \\<cdot> k2\n  k2 \\<in> K\n\ngoal (1 subgoal):\n 1. \\<And>a a' b b'.\n       \\<lbrakk>(a, a') \\<in> Congruence; (b, b') \\<in> Congruence\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot> b, a' \\<cdot> b') \\<in> Congruence", "from G Left_equals_Right_coset"], ["proof (chain)\npicking this:\n  a \\<in> G\n  g \\<in> G\n  b \\<in> G\n  h \\<in> G\n  ?g \\<in> G \\<Longrightarrow> ?g \\<cdot>| K = K |\\<cdot> ?g", "have \"K |\\<cdot> h = h \\<cdot>| K\""], ["proof (prove)\nusing this:\n  a \\<in> G\n  g \\<in> G\n  b \\<in> G\n  h \\<in> G\n  ?g \\<in> G \\<Longrightarrow> ?g \\<cdot>| K = K |\\<cdot> ?g\n\ngoal (1 subgoal):\n 1. K |\\<cdot> h = h \\<cdot>| K", "by blast"], ["proof (state)\nthis:\n  K |\\<cdot> h = h \\<cdot>| K\n\ngoal (1 subgoal):\n 1. \\<And>a a' b b'.\n       \\<lbrakk>(a, a') \\<in> Congruence; (b, b') \\<in> Congruence\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot> b, a' \\<cdot> b') \\<in> Congruence", "with k1"], ["proof (chain)\npicking this:\n  k1 \\<in> K\n  K |\\<cdot> h = h \\<cdot>| K", "obtain k3 where c: \"k1 \\<cdot> h = h \\<cdot> k3\" and k3: \"k3 \\<in> K\""], ["proof (prove)\nusing this:\n  k1 \\<in> K\n  K |\\<cdot> h = h \\<cdot>| K\n\ngoal (1 subgoal):\n 1. (\\<And>k3.\n        \\<lbrakk>k1 \\<cdot> h = h \\<cdot> k3; k3 \\<in> K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Left_Coset_def Right_Coset_def"], ["proof (prove)\nusing this:\n  k1 \\<in> K\n  {ha \\<cdot> h |ha. ha \\<in> K} = {h \\<cdot> ha |ha. ha \\<in> K}\n\ngoal (1 subgoal):\n 1. (\\<And>k3.\n        \\<lbrakk>k1 \\<cdot> h = h \\<cdot> k3; k3 \\<in> K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  k1 \\<cdot> h = h \\<cdot> k3\n  k3 \\<in> K\n\ngoal (1 subgoal):\n 1. \\<And>a a' b b'.\n       \\<lbrakk>(a, a') \\<in> Congruence; (b, b') \\<in> Congruence\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot> b, a' \\<cdot> b') \\<in> Congruence", "from G k1 k2 a b"], ["proof (chain)\npicking this:\n  a \\<in> G\n  g \\<in> G\n  b \\<in> G\n  h \\<in> G\n  k1 \\<in> K\n  k2 \\<in> K\n  a = g \\<cdot> k1\n  b = h \\<cdot> k2", "have \"a \\<cdot> b = g \\<cdot> k1 \\<cdot> h \\<cdot> k2\""], ["proof (prove)\nusing this:\n  a \\<in> G\n  g \\<in> G\n  b \\<in> G\n  h \\<in> G\n  k1 \\<in> K\n  k2 \\<in> K\n  a = g \\<cdot> k1\n  b = h \\<cdot> k2\n\ngoal (1 subgoal):\n 1. a \\<cdot> b = g \\<cdot> k1 \\<cdot> h \\<cdot> k2", "by (simp add: associative)"], ["proof (state)\nthis:\n  a \\<cdot> b = g \\<cdot> k1 \\<cdot> h \\<cdot> k2\n\ngoal (1 subgoal):\n 1. \\<And>a a' b b'.\n       \\<lbrakk>(a, a') \\<in> Congruence; (b, b') \\<in> Congruence\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot> b, a' \\<cdot> b') \\<in> Congruence", "also"], ["proof (state)\nthis:\n  a \\<cdot> b = g \\<cdot> k1 \\<cdot> h \\<cdot> k2\n\ngoal (1 subgoal):\n 1. \\<And>a a' b b'.\n       \\<lbrakk>(a, a') \\<in> Congruence; (b, b') \\<in> Congruence\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot> b, a' \\<cdot> b') \\<in> Congruence", "from G k1 k3 c"], ["proof (chain)\npicking this:\n  a \\<in> G\n  g \\<in> G\n  b \\<in> G\n  h \\<in> G\n  k1 \\<in> K\n  k3 \\<in> K\n  k1 \\<cdot> h = h \\<cdot> k3", "have \"\\<dots> = g \\<cdot> h \\<cdot> k3 \\<cdot> k2\""], ["proof (prove)\nusing this:\n  a \\<in> G\n  g \\<in> G\n  b \\<in> G\n  h \\<in> G\n  k1 \\<in> K\n  k3 \\<in> K\n  k1 \\<cdot> h = h \\<cdot> k3\n\ngoal (1 subgoal):\n 1. g \\<cdot> k1 \\<cdot> h \\<cdot> k2 = g \\<cdot> h \\<cdot> k3 \\<cdot> k2", "by (simp add: associative)"], ["proof (state)\nthis:\n  g \\<cdot> k1 \\<cdot> h \\<cdot> k2 = g \\<cdot> h \\<cdot> k3 \\<cdot> k2\n\ngoal (1 subgoal):\n 1. \\<And>a a' b b'.\n       \\<lbrakk>(a, a') \\<in> Congruence; (b, b') \\<in> Congruence\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot> b, a' \\<cdot> b') \\<in> Congruence", "also"], ["proof (state)\nthis:\n  g \\<cdot> k1 \\<cdot> h \\<cdot> k2 = g \\<cdot> h \\<cdot> k3 \\<cdot> k2\n\ngoal (1 subgoal):\n 1. \\<And>a a' b b'.\n       \\<lbrakk>(a, a') \\<in> Congruence; (b, b') \\<in> Congruence\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot> b, a' \\<cdot> b') \\<in> Congruence", "have \"\\<dots> = (g \\<cdot> h) \\<cdot> (k3 \\<cdot> k2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<cdot> h \\<cdot> k3 \\<cdot> k2 = g \\<cdot> h \\<cdot> (k3 \\<cdot> k2)", "using G k2 k3"], ["proof (prove)\nusing this:\n  a \\<in> G\n  g \\<in> G\n  b \\<in> G\n  h \\<in> G\n  k2 \\<in> K\n  k3 \\<in> K\n\ngoal (1 subgoal):\n 1. g \\<cdot> h \\<cdot> k3 \\<cdot> k2 = g \\<cdot> h \\<cdot> (k3 \\<cdot> k2)", "by (simp add: associative)"], ["proof (state)\nthis:\n  g \\<cdot> h \\<cdot> k3 \\<cdot> k2 = g \\<cdot> h \\<cdot> (k3 \\<cdot> k2)\n\ngoal (1 subgoal):\n 1. \\<And>a a' b b'.\n       \\<lbrakk>(a, a') \\<in> Congruence; (b, b') \\<in> Congruence\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot> b, a' \\<cdot> b') \\<in> Congruence", "finally"], ["proof (chain)\npicking this:\n  a \\<cdot> b = g \\<cdot> h \\<cdot> (k3 \\<cdot> k2)", "show \"(a \\<cdot> b, g \\<cdot> h) \\<in> Congruence\""], ["proof (prove)\nusing this:\n  a \\<cdot> b = g \\<cdot> h \\<cdot> (k3 \\<cdot> k2)\n\ngoal (1 subgoal):\n 1. (a \\<cdot> b, g \\<cdot> h) \\<in> Congruence", "using G k2 k3"], ["proof (prove)\nusing this:\n  a \\<cdot> b = g \\<cdot> h \\<cdot> (k3 \\<cdot> k2)\n  a \\<in> G\n  g \\<in> G\n  b \\<in> G\n  h \\<in> G\n  k2 \\<in> K\n  k3 \\<in> K\n\ngoal (1 subgoal):\n 1. (a \\<cdot> b, g \\<cdot> h) \\<in> Congruence", "by blast"], ["proof (state)\nthis:\n  (a \\<cdot> b, g \\<cdot> h) \\<in> Congruence\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  group_congruence G (\\<cdot>) \\<one> Congruence\n\ngoal (1 subgoal):\n 1. group_congruence.Normal G \\<one> Congruence = K", "then"], ["proof (chain)\npicking this:\n  group_congruence G (\\<cdot>) \\<one> Congruence", "interpret group_congruence where E = Congruence"], ["proof (prove)\nusing this:\n  group_congruence G (\\<cdot>) \\<one> Congruence\n\ngoal (1 subgoal):\n 1. group_congruence G (\\<cdot>) \\<one> Congruence", "."], ["proof (state)\ngoal (1 subgoal):\n 1. Normal = K", "show \"Normal = K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Normal = K", "unfolding Normal_def orbit.Class_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>G. {b \\<in> G. (b, a) \\<in> Congruence}) \\<one> = K", "unfolding Congruence_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>G.\n        {b \\<in> G.\n         (b, a)\n         \\<in> {(a, b).\n                a \\<in> G \\<and>\n                b \\<in> G \\<and> inverse a \\<cdot> b \\<in> K}})\n     \\<one> =\n    K", "using invertible_inverse_inverse submonoid_inverse_closed"], ["proof (prove)\nusing this:\n  \\<lbrakk>invertible ?u; ?u \\<in> G\\<rbrakk>\n  \\<Longrightarrow> inverse (inverse ?u) = ?u\n  \\<lbrakk>sub.invertible ?u; ?u \\<in> K\\<rbrakk>\n  \\<Longrightarrow> inverse ?u \\<in> K\n\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>G.\n        {b \\<in> G.\n         (b, a)\n         \\<in> {(a, b).\n                a \\<in> G \\<and>\n                b \\<in> G \\<and> inverse a \\<cdot> b \\<in> K}})\n     \\<one> =\n    K", "by fastforce"], ["proof (state)\nthis:\n  Normal = K\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* normal_subgroup *)  (* deletes translations and orbits, recovers Class for congruence class *)"], ["", "context group begin"], ["", "text \\<open>Pulled out of @{locale normal_subgroup} to achieve standard notation.\\<close>"], ["", "text \\<open>p 56, ll 31--32\\<close>"], ["", "abbreviation Factor_Group (infixl \"'/'/\" 75)\n  where \"S // K \\<equiv> S / (normal_subgroup.Congruence K G (\\<cdot>) \\<one>)\""], ["", "end"], ["", "(* group *)"], ["", "context normal_subgroup begin"], ["", "text \\<open>p 56, ll 28--29\\<close>"], ["", "theorem Class_unit_normal_subgroup: \"Class \\<one> = K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Class \\<one> = K", "unfolding Class_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>G. {b \\<in> G. (b, a) \\<in> Congruence}) \\<one> = K", "unfolding Congruence_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>G.\n        {b \\<in> G.\n         (b, a)\n         \\<in> {(a, b).\n                a \\<in> G \\<and>\n                b \\<in> G \\<and> inverse a \\<cdot> b \\<in> K}})\n     \\<one> =\n    K", "using invertible_inverse_inverse submonoid_inverse_closed"], ["proof (prove)\nusing this:\n  \\<lbrakk>invertible ?u; ?u \\<in> G\\<rbrakk>\n  \\<Longrightarrow> inverse (inverse ?u) = ?u\n  \\<lbrakk>sub.invertible ?u; ?u \\<in> K\\<rbrakk>\n  \\<Longrightarrow> inverse ?u \\<in> K\n\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>G.\n        {b \\<in> G.\n         (b, a)\n         \\<in> {(a, b).\n                a \\<in> G \\<and>\n                b \\<in> G \\<and> inverse a \\<cdot> b \\<in> K}})\n     \\<one> =\n    K", "by fastforce"], ["", "text \\<open>p 56, ll 1--2; p 56, l 29\\<close>"], ["", "theorem Class_is_Left_Coset:\n  \"g \\<in> G \\<Longrightarrow> Class g = g \\<cdot>| K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> G \\<Longrightarrow> Class g = g \\<cdot>| K", "using Left_Coset_Class_unit Class_unit_normal_subgroup"], ["proof (prove)\nusing this:\n  ?g \\<in> G \\<Longrightarrow> ?g \\<cdot>| K = Class ?g\n  Class \\<one> = K\n\ngoal (1 subgoal):\n 1. g \\<in> G \\<Longrightarrow> Class g = g \\<cdot>| K", "by simp"], ["", "text \\<open>p 56, l 29\\<close>"], ["", "lemma Left_CosetE: \"\\<lbrakk> A \\<in> G // K; \\<And>a. a \\<in> G \\<Longrightarrow> P (a \\<cdot>| K) \\<rbrakk> \\<Longrightarrow> P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> Partition;\n     \\<And>a. a \\<in> G \\<Longrightarrow> P (a \\<cdot>| K)\\<rbrakk>\n    \\<Longrightarrow> P A", "by (metis Class_is_Left_Coset quotient_ClassE)"], ["", "text \\<open>Equation 26\\<close>"], ["", "text \\<open>p 56, ll 32--34\\<close>"], ["", "theorem factor_composition [simp]:\n  \"\\<lbrakk> g \\<in> G; h \\<in> G \\<rbrakk> \\<Longrightarrow> (g \\<cdot>| K) [\\<cdot>] (h \\<cdot>| K) = g \\<cdot> h \\<cdot>| K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> G; h \\<in> G\\<rbrakk>\n    \\<Longrightarrow> g \\<cdot>| K [\\<cdot>] (h \\<cdot>| K) =\n                      g \\<cdot> h \\<cdot>| K", "using Class_commutes_with_composition Class_is_Left_Coset"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> G; ?b \\<in> G\\<rbrakk>\n  \\<Longrightarrow> Class ?a [\\<cdot>] Class ?b = Class (?a \\<cdot> ?b)\n  ?g \\<in> G \\<Longrightarrow> Class ?g = ?g \\<cdot>| K\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> G; h \\<in> G\\<rbrakk>\n    \\<Longrightarrow> g \\<cdot>| K [\\<cdot>] (h \\<cdot>| K) =\n                      g \\<cdot> h \\<cdot>| K", "by auto"], ["", "text \\<open>p 56, l 35\\<close>"], ["", "theorem factor_unit:\n  \"K = \\<one> \\<cdot>| K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K = \\<one> \\<cdot>| K", "using Class_is_Left_Coset Class_unit_normal_subgroup"], ["proof (prove)\nusing this:\n  ?g \\<in> G \\<Longrightarrow> Class ?g = ?g \\<cdot>| K\n  Class \\<one> = K\n\ngoal (1 subgoal):\n 1. K = \\<one> \\<cdot>| K", "by blast"], ["", "text \\<open>p 56, l 35\\<close>"], ["", "theorem factor_inverse [simp]:\n  \"g \\<in> G \\<Longrightarrow> quotient.inverse (g \\<cdot>| K) = (inverse g \\<cdot>| K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> G \\<Longrightarrow>\n    quotient.inverse (g \\<cdot>| K) = inverse g \\<cdot>| K", "using Class_commutes_with_inverse Class_is_Left_Coset"], ["proof (prove)\nusing this:\n  ?a \\<in> G \\<Longrightarrow>\n  quotient.inverse (Class ?a) = Class (inverse ?a)\n  ?g \\<in> G \\<Longrightarrow> Class ?g = ?g \\<cdot>| K\n\ngoal (1 subgoal):\n 1. g \\<in> G \\<Longrightarrow>\n    quotient.inverse (g \\<cdot>| K) = inverse g \\<cdot>| K", "by auto"], ["", "end"], ["", "(* normal_subgroup *)"], ["", "text \\<open>p 57, ll 4--5\\<close>"], ["", "locale subgroup_of_abelian_group = subgroup_of_group H G \"(\\<cdot>)\" \\<one> + abelian_group G \"(\\<cdot>)\" \\<one>\n  for H and G and composition (infixl \"\\<cdot>\" 70) and unit (\"\\<one>\")"], ["", "text \\<open>p 57, ll 4--5\\<close>"], ["", "sublocale subgroup_of_abelian_group \\<subseteq> normal_subgroup H G \"(\\<cdot>)\" \\<one>"], ["proof (prove)\ngoal (1 subgoal):\n 1. normal_subgroup H G (\\<cdot>) \\<one>", "using commutative invertible_right_inverse2"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> G; ?y \\<in> G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<cdot> ?y = ?y \\<cdot> ?x\n  \\<lbrakk>invertible ?u; ?u \\<in> G; ?v \\<in> G\\<rbrakk>\n  \\<Longrightarrow> ?u \\<cdot> (inverse ?u \\<cdot> ?v) = ?v\n\ngoal (1 subgoal):\n 1. normal_subgroup H G (\\<cdot>) \\<one>", "by unfold_locales auto"], ["", "subsection \\<open>Homomorphims\\<close>"], ["", "text \\<open>Def 1.6\\<close>"], ["", "text \\<open>p 58, l 33; p 59, ll 1--2\\<close>"], ["", "locale monoid_homomorphism =\n  map \\<eta> M M'+  source: monoid M \"(\\<cdot>)\" \\<one> + target: monoid M' \"(\\<cdot>')\" \"\\<one>'\"\n  for \\<eta> and M and composition (infixl \"\\<cdot>\" 70) and unit (\"\\<one>\")\n    and M' and composition' (infixl \"\\<cdot>''\" 70) and unit' (\"\\<one>''\") +\n  assumes commutes_with_composition: \"\\<lbrakk> x \\<in> M; y \\<in> M \\<rbrakk> \\<Longrightarrow> \\<eta> (x \\<cdot> y) = \\<eta> x \\<cdot>' \\<eta> y\"\n    and commutes_with_unit: \"\\<eta> \\<one> = \\<one>'\"\nbegin"], ["", "text \\<open>Jacobson notes that @{thm [source] commutes_with_unit} is not necessary for groups, but doesn't make use of that later.\\<close>"], ["", "text \\<open>p 58, l 33; p 59, ll 1--2\\<close>"], ["", "notation source.invertible (\"invertible _\" [100] 100)"], ["", "notation source.inverse (\"inverse _\" [100] 100)"], ["", "notation target.invertible (\"invertible'' _\" [100] 100)"], ["", "notation target.inverse (\"inverse'' _\" [100] 100)"], ["", "end"], ["", "(* monoid_homomorphism *)"], ["", "text \\<open>p 59, ll 29--30\\<close>"], ["", "locale monoid_epimorphism = monoid_homomorphism + surjective_map \\<eta> M M'"], ["", "text \\<open>p 59, l 30\\<close>"], ["", "locale monoid_monomorphism = monoid_homomorphism + injective_map \\<eta> M M'"], ["", "text \\<open>p 59, ll 30--31\\<close>"], ["", "sublocale monoid_isomorphism \\<subseteq> monoid_epimorphism"], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid_epimorphism \\<eta> M (\\<cdot>) \\<one> M' (\\<cdot>') \\<one>'", "by unfold_locales (auto simp: commutes_with_composition commutes_with_unit)"], ["", "text \\<open>p 59, ll 30--31\\<close>"], ["", "sublocale monoid_isomorphism \\<subseteq> monoid_monomorphism"], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid_monomorphism \\<eta> M (\\<cdot>) \\<one> M' (\\<cdot>') \\<one>'", "by unfold_locales (auto simp: commutes_with_composition commutes_with_unit)"], ["", "context monoid_homomorphism begin"], ["", "text \\<open>p 59, ll 33--34\\<close>"], ["", "theorem invertible_image_lemma:\n  assumes \"invertible a\" \"a \\<in> M\"\n  shows \"\\<eta> a \\<cdot>' \\<eta> (inverse a) = \\<one>'\" and \"\\<eta> (inverse a) \\<cdot>' \\<eta> a = \\<one>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<eta> a \\<cdot>' \\<eta> (inverse a) = \\<one>' &&&\n    \\<eta> (inverse a) \\<cdot>' \\<eta> a = \\<one>'", "using assms commutes_with_composition commutes_with_unit source.inverse_equality"], ["proof (prove)\nusing this:\n  invertible a\n  a \\<in> M\n  \\<lbrakk>?x \\<in> M; ?y \\<in> M\\<rbrakk>\n  \\<Longrightarrow> \\<eta> (?x \\<cdot> ?y) = \\<eta> ?x \\<cdot>' \\<eta> ?y\n  \\<eta> \\<one> = \\<one>'\n  \\<lbrakk>?u \\<cdot> ?v = \\<one>; ?v \\<cdot> ?u = \\<one>; ?u \\<in> M;\n   ?v \\<in> M\\<rbrakk>\n  \\<Longrightarrow> inverse ?u = ?v\n\ngoal (1 subgoal):\n 1. \\<eta> a \\<cdot>' \\<eta> (inverse a) = \\<one>' &&&\n    \\<eta> (inverse a) \\<cdot>' \\<eta> a = \\<one>'", "by auto (metis source.invertible_inverse_closed source.invertible_left_inverse)"], ["", "text \\<open>p 59, l 34; p 60, l 1\\<close>"], ["", "theorem invertible_target_invertible [intro, simp]:\n  \"\\<lbrakk> invertible a; a \\<in> M \\<rbrakk> \\<Longrightarrow> invertible' (\\<eta> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible a; a \\<in> M\\<rbrakk>\n    \\<Longrightarrow> invertible' \\<eta> a", "using invertible_image_lemma"], ["proof (prove)\nusing this:\n  \\<lbrakk>invertible ?a; ?a \\<in> M\\<rbrakk>\n  \\<Longrightarrow> \\<eta> ?a \\<cdot>' \\<eta> (inverse ?a) = \\<one>'\n  \\<lbrakk>invertible ?a; ?a \\<in> M\\<rbrakk>\n  \\<Longrightarrow> \\<eta> (inverse ?a) \\<cdot>' \\<eta> ?a = \\<one>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible a; a \\<in> M\\<rbrakk>\n    \\<Longrightarrow> invertible' \\<eta> a", "by blast"], ["", "text \\<open>p 60, l 1\\<close>"], ["", "theorem invertible_commutes_with_inverse:\n  \"\\<lbrakk> invertible a; a \\<in> M \\<rbrakk> \\<Longrightarrow> \\<eta> (inverse a) = inverse' (\\<eta> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible a; a \\<in> M\\<rbrakk>\n    \\<Longrightarrow> \\<eta> (inverse a) = inverse' \\<eta> a", "using invertible_image_lemma target.inverse_equality"], ["proof (prove)\nusing this:\n  \\<lbrakk>invertible ?a; ?a \\<in> M\\<rbrakk>\n  \\<Longrightarrow> \\<eta> ?a \\<cdot>' \\<eta> (inverse ?a) = \\<one>'\n  \\<lbrakk>invertible ?a; ?a \\<in> M\\<rbrakk>\n  \\<Longrightarrow> \\<eta> (inverse ?a) \\<cdot>' \\<eta> ?a = \\<one>'\n  \\<lbrakk>?u \\<cdot>' ?v = \\<one>'; ?v \\<cdot>' ?u = \\<one>'; ?u \\<in> M';\n   ?v \\<in> M'\\<rbrakk>\n  \\<Longrightarrow> inverse' ?u = ?v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>invertible a; a \\<in> M\\<rbrakk>\n    \\<Longrightarrow> \\<eta> (inverse a) = inverse' \\<eta> a", "by fastforce"], ["", "end"], ["", "(* monoid_homomorphism *)"], ["", "text \\<open>p 60, ll 32--34; p 61, l 1\\<close>"], ["", "sublocale monoid_congruence \\<subseteq> natural: monoid_homomorphism Class M \"(\\<cdot>)\" \\<one> \"M / E\" \"([\\<cdot>])\" \"Class \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid_homomorphism Class M (\\<cdot>) \\<one> Partition ([\\<cdot>])\n     (Class \\<one>)", "by unfold_locales (auto simp: PiE_I Class_commutes_with_composition)"], ["", "text \\<open>Fundamental Theorem of Homomorphisms of Monoids\\<close>"], ["", "text \\<open>p 61, ll 5, 14--16\\<close>"], ["", "sublocale monoid_homomorphism \\<subseteq> image: submonoid \"\\<eta> ` M\" M' \"(\\<cdot>')\" \"\\<one>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submonoid (\\<eta> ` M) M' (\\<cdot>') \\<one>'", "by unfold_locales (auto simp: commutes_with_composition [symmetric] commutes_with_unit [symmetric])"], ["", "text \\<open>p 61, l 4\\<close>"], ["", "locale monoid_homomorphism_fundamental = monoid_homomorphism begin"], ["", "text \\<open>p 61, ll 17--18\\<close>"], ["", "sublocale fiber_relation \\<eta> M M'"], ["proof (prove)\ngoal (1 subgoal):\n 1. fiber_relation \\<eta> M M'", ".."], ["", "notation Fiber_Relation (\"E'(_')\")"], ["", "text \\<open>p 61, ll 6--7, 18--20\\<close>"], ["", "sublocale monoid_congruence where E = \"E(\\<eta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid_congruence M (\\<cdot>) \\<one> E(\\<eta>)", "using Class_eq"], ["proof (prove)\nusing this:\n  (?a, ?b) \\<in> E(\\<eta>) \\<Longrightarrow> Class ?a = Class ?b\n\ngoal (1 subgoal):\n 1. monoid_congruence M (\\<cdot>) \\<one> E(\\<eta>)", "by unfold_locales (rule Class_equivalence [THEN iffD1],\n    auto simp: left_closed right_closed commutes_with_composition Fiber_equality)"], ["", "text \\<open>p 61, ll 7--9\\<close>"], ["", "text \\<open>\n  @{term induced} denotes Jacobson's $\\bar{\\eta}$.  We have the commutativity of the diagram, where\n  @{term induced} is unique: @{thm [display] factorization} @{thm [display] uniqueness}.\n\\<close>"], ["", "text \\<open>p 61, l 20\\<close>"], ["", "notation quotient_composition (infixl \"[\\<cdot>]\" 70)"], ["", "text \\<open>p 61, ll 7--8, 22--25\\<close>"], ["", "sublocale induced: monoid_homomorphism induced \"M / E(\\<eta>)\" \"([\\<cdot>])\" \"Class \\<one>\" \"M'\" \"(\\<cdot>')\" \"\\<one>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid_homomorphism induced Partition ([\\<cdot>]) (Class \\<one>) M'\n     (\\<cdot>') \\<one>'", "apply unfold_locales"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Partition; y \\<in> Partition\\<rbrakk>\n       \\<Longrightarrow> induced (x [\\<cdot>] y) =\n                         induced x \\<cdot>' induced y\n 2. induced (Class \\<one>) = \\<one>'", "apply (auto simp: commutes_with_unit)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Partition; y \\<in> Partition\\<rbrakk>\n       \\<Longrightarrow> induced (x [\\<cdot>] y) =\n                         induced x \\<cdot>' induced y", "apply (fastforce simp: commutes_with_composition commutes_with_unit Class_commutes_with_composition)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>p 61, ll 9, 26\\<close>"], ["", "sublocale natural: monoid_epimorphism Class M \"(\\<cdot>)\" \\<one> \"M / E(\\<eta>)\" \"([\\<cdot>])\" \"Class \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid_epimorphism Class M (\\<cdot>) \\<one> Partition ([\\<cdot>])\n     (Class \\<one>)", ".."], ["", "text \\<open>p 61, ll 9, 26--27\\<close>"], ["", "sublocale induced: monoid_monomorphism induced \"M / E(\\<eta>)\" \"([\\<cdot>])\" \"Class \\<one>\" \"M'\" \"(\\<cdot>')\" \"\\<one>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid_monomorphism induced Partition ([\\<cdot>]) (Class \\<one>) M'\n     (\\<cdot>') \\<one>'", ".."], ["", "end"], ["", "(* monoid_homomorphism_fundamental *)"], ["", "text \\<open>p 62, ll 12--13\\<close>"], ["", "locale group_homomorphism =\n  monoid_homomorphism \\<eta> G \"(\\<cdot>)\" \\<one> G' \"(\\<cdot>')\" \"\\<one>'\" +\n  source: group G \"(\\<cdot>)\" \\<one> + target: group G' \"(\\<cdot>')\" \"\\<one>'\"\n  for \\<eta> and G and composition (infixl \"\\<cdot>\" 70) and unit (\"\\<one>\")\n    and G' and composition' (infixl \"\\<cdot>''\" 70) and unit' (\"\\<one>''\")\nbegin"], ["", "text \\<open>p 62, l 13\\<close>"], ["", "sublocale image: subgroup \"\\<eta> ` G\" G' \"(\\<cdot>')\" \"\\<one>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (\\<eta> ` G) G' (\\<cdot>') \\<one>'", "using invertible_image_lemma"], ["proof (prove)\nusing this:\n  \\<lbrakk>invertible ?a; ?a \\<in> G\\<rbrakk>\n  \\<Longrightarrow> \\<eta> ?a \\<cdot>' \\<eta> (inverse ?a) = \\<one>'\n  \\<lbrakk>invertible ?a; ?a \\<in> G\\<rbrakk>\n  \\<Longrightarrow> \\<eta> (inverse ?a) \\<cdot>' \\<eta> ?a = \\<one>'\n\ngoal (1 subgoal):\n 1. subgroup (\\<eta> ` G) G' (\\<cdot>') \\<one>'", "by unfold_locales auto"], ["", "text \\<open>p 62, ll 13--14\\<close>"], ["", "definition \"Ker = \\<eta> -` {\\<one>'} \\<inter> G\""], ["", "text \\<open>p 62, ll 13--14\\<close>"], ["", "lemma Ker_equality:\n  \"Ker = {a | a. a \\<in> G \\<and> \\<eta> a = \\<one>'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ker = {a |a. a \\<in> G \\<and> \\<eta> a = \\<one>'}", "unfolding Ker_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<eta> -` {\\<one>'} \\<inter> G =\n    {a |a. a \\<in> G \\<and> \\<eta> a = \\<one>'}", "by auto"], ["", "text \\<open>p 62, ll 13--14\\<close>"], ["", "lemma Ker_closed [intro, simp]:\n  \"a \\<in> Ker \\<Longrightarrow> a \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> Ker \\<Longrightarrow> a \\<in> G", "unfolding Ker_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> \\<eta> -` {\\<one>'} \\<inter> G \\<Longrightarrow> a \\<in> G", "by simp"], ["", "text \\<open>p 62, ll 13--14\\<close>"], ["", "lemma Ker_image [intro]: (* loops as a simprule *)\n  \"a \\<in> Ker \\<Longrightarrow> \\<eta> a = \\<one>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> Ker \\<Longrightarrow> \\<eta> a = \\<one>'", "unfolding Ker_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> \\<eta> -` {\\<one>'} \\<inter> G \\<Longrightarrow>\n    \\<eta> a = \\<one>'", "by simp"], ["", "text \\<open>p 62, ll 13--14\\<close>"], ["", "lemma Ker_memI [intro]: (* loops as a simprule *)\n  \"\\<lbrakk> \\<eta> a = \\<one>'; a \\<in> G \\<rbrakk> \\<Longrightarrow> a \\<in> Ker\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<eta> a = \\<one>'; a \\<in> G\\<rbrakk>\n    \\<Longrightarrow> a \\<in> Ker", "unfolding Ker_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<eta> a = \\<one>'; a \\<in> G\\<rbrakk>\n    \\<Longrightarrow> a \\<in> \\<eta> -` {\\<one>'} \\<inter> G", "by simp"], ["", "text \\<open>p 62, ll 15--16\\<close>"], ["", "sublocale kernel: normal_subgroup Ker G"], ["proof (prove)\ngoal (1 subgoal):\n 1. normal_subgroup Ker G (\\<cdot>) \\<one>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. normal_subgroup Ker G (\\<cdot>) \\<one>", "interpret kernel: submonoid Ker G"], ["proof (prove)\ngoal (1 subgoal):\n 1. submonoid Ker G (\\<cdot>) \\<one>", "unfolding Ker_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. submonoid (\\<eta> -` {\\<one>'} \\<inter> G) G (\\<cdot>) \\<one>", "by unfold_locales (auto simp: commutes_with_composition commutes_with_unit)"], ["proof (state)\ngoal (1 subgoal):\n 1. normal_subgroup Ker G (\\<cdot>) \\<one>", "interpret kernel: subgroup Ker G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup Ker G (\\<cdot>) \\<one>", "by unfold_locales (force intro: source.invertible_right_inverse simp: Ker_image invertible_commutes_with_inverse)"], ["proof (state)\ngoal (1 subgoal):\n 1. normal_subgroup Ker G (\\<cdot>) \\<one>", "show \"normal_subgroup Ker G (\\<cdot>) \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. normal_subgroup Ker G (\\<cdot>) \\<one>", "apply unfold_locales"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g k.\n       \\<lbrakk>g \\<in> G; k \\<in> Ker\\<rbrakk>\n       \\<Longrightarrow> inverse g \\<cdot> k \\<cdot> g \\<in> Ker", "unfolding Ker_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g k.\n       \\<lbrakk>g \\<in> G; k \\<in> \\<eta> -` {\\<one>'} \\<inter> G\\<rbrakk>\n       \\<Longrightarrow> inverse g \\<cdot> k \\<cdot> g\n                         \\<in> \\<eta> -` {\\<one>'} \\<inter> G", "by (auto simp: commutes_with_composition invertible_image_lemma(2))"], ["proof (state)\nthis:\n  normal_subgroup Ker G (\\<cdot>) \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>p 62, ll 17--20\\<close>"], ["", "theorem injective_iff_kernel_unit:\n  \"inj_on \\<eta> G \\<longleftrightarrow> Ker = {\\<one>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on \\<eta> G = (Ker = {\\<one>})", "proof (rule Not_eq_iff [THEN iffD1, OF iffI])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<not> inj_on \\<eta> G \\<Longrightarrow> Ker \\<noteq> {\\<one>}\n 2. Ker \\<noteq> {\\<one>} \\<Longrightarrow> \\<not> inj_on \\<eta> G", "assume \"Ker \\<noteq> {\\<one>}\""], ["proof (state)\nthis:\n  Ker \\<noteq> {\\<one>}\n\ngoal (2 subgoals):\n 1. \\<not> inj_on \\<eta> G \\<Longrightarrow> Ker \\<noteq> {\\<one>}\n 2. Ker \\<noteq> {\\<one>} \\<Longrightarrow> \\<not> inj_on \\<eta> G", "then"], ["proof (chain)\npicking this:\n  Ker \\<noteq> {\\<one>}", "obtain b where b: \"b \\<in> Ker\" \"b \\<noteq> \\<one>\""], ["proof (prove)\nusing this:\n  Ker \\<noteq> {\\<one>}\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in> Ker; b \\<noteq> \\<one>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  b \\<in> Ker\n  b \\<noteq> \\<one>\n\ngoal (2 subgoals):\n 1. \\<not> inj_on \\<eta> G \\<Longrightarrow> Ker \\<noteq> {\\<one>}\n 2. Ker \\<noteq> {\\<one>} \\<Longrightarrow> \\<not> inj_on \\<eta> G", "then"], ["proof (chain)\npicking this:\n  b \\<in> Ker\n  b \\<noteq> \\<one>", "have \"\\<eta> b = \\<eta> \\<one>\""], ["proof (prove)\nusing this:\n  b \\<in> Ker\n  b \\<noteq> \\<one>\n\ngoal (1 subgoal):\n 1. \\<eta> b = \\<eta> \\<one>", "by (simp add: Ker_image)"], ["proof (state)\nthis:\n  \\<eta> b = \\<eta> \\<one>\n\ngoal (2 subgoals):\n 1. \\<not> inj_on \\<eta> G \\<Longrightarrow> Ker \\<noteq> {\\<one>}\n 2. Ker \\<noteq> {\\<one>} \\<Longrightarrow> \\<not> inj_on \\<eta> G", "with b"], ["proof (chain)\npicking this:\n  b \\<in> Ker\n  b \\<noteq> \\<one>\n  \\<eta> b = \\<eta> \\<one>", "show \"\\<not> inj_on \\<eta> G\""], ["proof (prove)\nusing this:\n  b \\<in> Ker\n  b \\<noteq> \\<one>\n  \\<eta> b = \\<eta> \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> inj_on \\<eta> G", "by (meson inj_onD kernel.sub source.unit_closed)"], ["proof (state)\nthis:\n  \\<not> inj_on \\<eta> G\n\ngoal (1 subgoal):\n 1. \\<not> inj_on \\<eta> G \\<Longrightarrow> Ker \\<noteq> {\\<one>}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> inj_on \\<eta> G \\<Longrightarrow> Ker \\<noteq> {\\<one>}", "assume \"\\<not> inj_on \\<eta> G\""], ["proof (state)\nthis:\n  \\<not> inj_on \\<eta> G\n\ngoal (1 subgoal):\n 1. \\<not> inj_on \\<eta> G \\<Longrightarrow> Ker \\<noteq> {\\<one>}", "then"], ["proof (chain)\npicking this:\n  \\<not> inj_on \\<eta> G", "obtain a b where \"a \\<noteq> b\" and ab: \"a \\<in> G\" \"b \\<in> G\" \"\\<eta> a = \\<eta> b\""], ["proof (prove)\nusing this:\n  \\<not> inj_on \\<eta> G\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a \\<noteq> b; a \\<in> G; b \\<in> G;\n         \\<eta> a = \\<eta> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson inj_onI)"], ["proof (state)\nthis:\n  a \\<noteq> b\n  a \\<in> G\n  b \\<in> G\n  \\<eta> a = \\<eta> b\n\ngoal (1 subgoal):\n 1. \\<not> inj_on \\<eta> G \\<Longrightarrow> Ker \\<noteq> {\\<one>}", "then"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> G\n  b \\<in> G\n  \\<eta> a = \\<eta> b", "have \"inverse a \\<cdot> b \\<noteq> \\<one>\" \"\\<eta> (inverse a \\<cdot> b) = \\<one>'\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> G\n  b \\<in> G\n  \\<eta> a = \\<eta> b\n\ngoal (1 subgoal):\n 1. inverse a \\<cdot> b \\<noteq> \\<one> &&&\n    \\<eta> (inverse a \\<cdot> b) = \\<one>'", "using ab source.invertible_right_inverse2"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> G\n  b \\<in> G\n  \\<eta> a = \\<eta> b\n  a \\<in> G\n  b \\<in> G\n  \\<eta> a = \\<eta> b\n  \\<lbrakk>invertible ?u; ?u \\<in> G; ?v \\<in> G\\<rbrakk>\n  \\<Longrightarrow> ?u \\<cdot> (inverse ?u \\<cdot> ?v) = ?v\n\ngoal (1 subgoal):\n 1. inverse a \\<cdot> b \\<noteq> \\<one> &&&\n    \\<eta> (inverse a \\<cdot> b) = \\<one>'", "by force (metis ab commutes_with_composition invertible_image_lemma(2) source.invertible source.invertible_inverse_closed)"], ["proof (state)\nthis:\n  inverse a \\<cdot> b \\<noteq> \\<one>\n  \\<eta> (inverse a \\<cdot> b) = \\<one>'\n\ngoal (1 subgoal):\n 1. \\<not> inj_on \\<eta> G \\<Longrightarrow> Ker \\<noteq> {\\<one>}", "then"], ["proof (chain)\npicking this:\n  inverse a \\<cdot> b \\<noteq> \\<one>\n  \\<eta> (inverse a \\<cdot> b) = \\<one>'", "have \"inverse a \\<cdot> b \\<in> Ker\""], ["proof (prove)\nusing this:\n  inverse a \\<cdot> b \\<noteq> \\<one>\n  \\<eta> (inverse a \\<cdot> b) = \\<one>'\n\ngoal (1 subgoal):\n 1. inverse a \\<cdot> b \\<in> Ker", "using Ker_memI ab"], ["proof (prove)\nusing this:\n  inverse a \\<cdot> b \\<noteq> \\<one>\n  \\<eta> (inverse a \\<cdot> b) = \\<one>'\n  \\<lbrakk>\\<eta> ?a = \\<one>'; ?a \\<in> G\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> Ker\n  a \\<in> G\n  b \\<in> G\n  \\<eta> a = \\<eta> b\n\ngoal (1 subgoal):\n 1. inverse a \\<cdot> b \\<in> Ker", "by blast"], ["proof (state)\nthis:\n  inverse a \\<cdot> b \\<in> Ker\n\ngoal (1 subgoal):\n 1. \\<not> inj_on \\<eta> G \\<Longrightarrow> Ker \\<noteq> {\\<one>}", "then"], ["proof (chain)\npicking this:\n  inverse a \\<cdot> b \\<in> Ker", "show \"Ker \\<noteq> {\\<one>}\""], ["proof (prove)\nusing this:\n  inverse a \\<cdot> b \\<in> Ker\n\ngoal (1 subgoal):\n 1. Ker \\<noteq> {\\<one>}", "using \\<open>inverse a \\<cdot> b \\<noteq> \\<one>\\<close>"], ["proof (prove)\nusing this:\n  inverse a \\<cdot> b \\<in> Ker\n  inverse a \\<cdot> b \\<noteq> \\<one>\n\ngoal (1 subgoal):\n 1. Ker \\<noteq> {\\<one>}", "by blast"], ["proof (state)\nthis:\n  Ker \\<noteq> {\\<one>}\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* group_homomorphism *)"], ["", "text \\<open>p 62, l 24\\<close>"], ["", "locale group_epimorphism = group_homomorphism + monoid_epimorphism \\<eta> G \"(\\<cdot>)\" \\<one> G' \"(\\<cdot>')\" \"\\<one>'\""], ["", "text \\<open>p 62, l 21\\<close>"], ["", "locale normal_subgroup_in_kernel =\n  group_homomorphism + contained: normal_subgroup L G \"(\\<cdot>)\" \\<one> for L +\n  assumes subset: \"L \\<subseteq> Ker\"\nbegin"], ["", "text \\<open>p 62, l 21\\<close>"], ["", "notation contained.quotient_composition (infixl \"[\\<cdot>]\" 70)"], ["", "text \\<open>\"homomorphism onto @{term \"G // L\"}\"\\<close>"], ["", "text \\<open>p 62, ll 23--24\\<close>"], ["", "sublocale natural: group_epimorphism contained.Class G \"(\\<cdot>)\" \\<one> \"G // L\" \"([\\<cdot>])\" \"contained.Class \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_epimorphism contained.Class G (\\<cdot>) \\<one> contained.Partition\n     ([\\<cdot>]) (contained.Class \\<one>)", ".."], ["", "text \\<open>p 62, ll 25--26\\<close>"], ["", "theorem left_coset_equality:\n  assumes eq: \"a \\<cdot>| L = b \\<cdot>| L\" and [simp]: \"a \\<in> G\" and b: \"b \\<in> G\"\n  shows \"\\<eta> a = \\<eta> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<eta> a = \\<eta> b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<eta> a = \\<eta> b", "obtain l where l: \"b = a \\<cdot> l\" \"l \\<in> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>b = a \\<cdot> l; l \\<in> L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis b contained.Class_is_Left_Coset contained.Class_self eq kernel.Left_Coset_memE)"], ["proof (state)\nthis:\n  b = a \\<cdot> l\n  l \\<in> L\n\ngoal (1 subgoal):\n 1. \\<eta> a = \\<eta> b", "then"], ["proof (chain)\npicking this:\n  b = a \\<cdot> l\n  l \\<in> L", "have \"\\<eta> a = \\<eta> a \\<cdot>' \\<eta> l\""], ["proof (prove)\nusing this:\n  b = a \\<cdot> l\n  l \\<in> L\n\ngoal (1 subgoal):\n 1. \\<eta> a = \\<eta> a \\<cdot>' \\<eta> l", "using Ker_image monoid_homomorphism.commutes_with_composition subset"], ["proof (prove)\nusing this:\n  b = a \\<cdot> l\n  l \\<in> L\n  ?a \\<in> Ker \\<Longrightarrow> \\<eta> ?a = \\<one>'\n  \\<lbrakk>monoid_homomorphism ?\\<eta> ?M ?composition ?unit ?M'\n            ?composition' ?unit';\n   ?x \\<in> ?M; ?y \\<in> ?M\\<rbrakk>\n  \\<Longrightarrow> ?\\<eta> (?composition ?x ?y) =\n                    ?composition' (?\\<eta> ?x) (?\\<eta> ?y)\n  L \\<subseteq> Ker\n\ngoal (1 subgoal):\n 1. \\<eta> a = \\<eta> a \\<cdot>' \\<eta> l", "by auto"], ["proof (state)\nthis:\n  \\<eta> a = \\<eta> a \\<cdot>' \\<eta> l\n\ngoal (1 subgoal):\n 1. \\<eta> a = \\<eta> b", "also"], ["proof (state)\nthis:\n  \\<eta> a = \\<eta> a \\<cdot>' \\<eta> l\n\ngoal (1 subgoal):\n 1. \\<eta> a = \\<eta> b", "have \"\\<dots> = \\<eta> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<eta> a \\<cdot>' \\<eta> l = \\<eta> b", "by (simp add: commutes_with_composition l)"], ["proof (state)\nthis:\n  \\<eta> a \\<cdot>' \\<eta> l = \\<eta> b\n\ngoal (1 subgoal):\n 1. \\<eta> a = \\<eta> b", "finally"], ["proof (chain)\npicking this:\n  \\<eta> a = \\<eta> b", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<eta> a = \\<eta> b\n\ngoal (1 subgoal):\n 1. \\<eta> a = \\<eta> b", "."], ["proof (state)\nthis:\n  \\<eta> a = \\<eta> b\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>$\\bar{\\eta}$\\<close>"], ["", "text \\<open>p 62, ll 26--27\\<close>"], ["", "definition \"induced = (\\<lambda>A \\<in> G // L. THE b. \\<exists>a \\<in> G. a \\<cdot>| L = A \\<and> b = \\<eta> a)\""], ["", "text \\<open>p 62, ll 26--27\\<close>"], ["", "lemma induced_closed [intro, simp]:\n  assumes [simp]: \"A \\<in> G // L\" shows \"induced A \\<in> G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced A \\<in> G'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. induced A \\<in> G'", "obtain a where a: \"a \\<in> G\" \"a \\<cdot>| L = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> G; a \\<cdot>| L = A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using contained.Class_is_Left_Coset contained.Partition_def assms"], ["proof (prove)\nusing this:\n  ?g \\<in> G \\<Longrightarrow> contained.Class ?g = ?g \\<cdot>| L\n  contained.Partition = contained.Class ` G\n  A \\<in> contained.Partition\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> G; a \\<cdot>| L = A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in> G\n  a \\<cdot>| L = A\n\ngoal (1 subgoal):\n 1. induced A \\<in> G'", "have \"(THE b. \\<exists>a \\<in> G. a \\<cdot>| L = A \\<and> b = \\<eta> a) \\<in> G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE b. \\<exists>a\\<in>G. a \\<cdot>| L = A \\<and> b = \\<eta> a) \\<in> G'", "apply (rule theI2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<exists>a\\<in>G. a \\<cdot>| L = A \\<and> ?a = \\<eta> a\n 2. \\<And>x.\n       \\<exists>a\\<in>G.\n          a \\<cdot>| L = A \\<and> x = \\<eta> a \\<Longrightarrow>\n       x = ?a\n 3. \\<And>x.\n       \\<exists>a\\<in>G.\n          a \\<cdot>| L = A \\<and> x = \\<eta> a \\<Longrightarrow>\n       x \\<in> G'", "using a"], ["proof (prove)\nusing this:\n  a \\<in> G\n  a \\<cdot>| L = A\n\ngoal (3 subgoals):\n 1. \\<exists>a\\<in>G. a \\<cdot>| L = A \\<and> ?a = \\<eta> a\n 2. \\<And>x.\n       \\<exists>a\\<in>G.\n          a \\<cdot>| L = A \\<and> x = \\<eta> a \\<Longrightarrow>\n       x = ?a\n 3. \\<And>x.\n       \\<exists>a\\<in>G.\n          a \\<cdot>| L = A \\<and> x = \\<eta> a \\<Longrightarrow>\n       x \\<in> G'", "by (auto intro: left_coset_equality)"], ["proof (state)\nthis:\n  (THE b. \\<exists>a\\<in>G. a \\<cdot>| L = A \\<and> b = \\<eta> a) \\<in> G'\n\ngoal (1 subgoal):\n 1. induced A \\<in> G'", "then"], ["proof (chain)\npicking this:\n  (THE b. \\<exists>a\\<in>G. a \\<cdot>| L = A \\<and> b = \\<eta> a) \\<in> G'", "show ?thesis"], ["proof (prove)\nusing this:\n  (THE b. \\<exists>a\\<in>G. a \\<cdot>| L = A \\<and> b = \\<eta> a) \\<in> G'\n\ngoal (1 subgoal):\n 1. induced A \\<in> G'", "unfolding induced_def"], ["proof (prove)\nusing this:\n  (THE b. \\<exists>a\\<in>G. a \\<cdot>| L = A \\<and> b = \\<eta> a) \\<in> G'\n\ngoal (1 subgoal):\n 1. (\\<lambda>A\\<in>contained.Partition.\n        THE b. \\<exists>a\\<in>G. a \\<cdot>| L = A \\<and> b = \\<eta> a)\n     A\n    \\<in> G'", "by simp"], ["proof (state)\nthis:\n  induced A \\<in> G'\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>p 62, ll 26--27\\<close>"], ["", "lemma induced_undefined [intro, simp]:\n  \"A \\<notin> G // L \\<Longrightarrow> induced A = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<notin> contained.Partition \\<Longrightarrow> induced A = undefined", "unfolding induced_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<notin> contained.Partition \\<Longrightarrow>\n    (\\<lambda>A\\<in>contained.Partition.\n        THE b. \\<exists>a\\<in>G. a \\<cdot>| L = A \\<and> b = \\<eta> a)\n     A =\n    undefined", "by simp"], ["", "text \\<open>p 62, ll 26--27\\<close>"], ["", "theorem induced_left_coset_closed [intro, simp]:\n  \"a \\<in> G \\<Longrightarrow> induced (a \\<cdot>| L) \\<in> G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> G \\<Longrightarrow> induced (a \\<cdot>| L) \\<in> G'", "using contained.Class_is_Left_Coset contained.Class_in_Partition"], ["proof (prove)\nusing this:\n  ?g \\<in> G \\<Longrightarrow> contained.Class ?g = ?g \\<cdot>| L\n  ?a \\<in> G \\<Longrightarrow> contained.Class ?a \\<in> contained.Partition\n\ngoal (1 subgoal):\n 1. a \\<in> G \\<Longrightarrow> induced (a \\<cdot>| L) \\<in> G'", "by auto"], ["", "text \\<open>p 62, ll 26--27\\<close>"], ["", "theorem induced_left_coset_equality [simp]:\n  assumes [simp]: \"a \\<in> G\" shows \"induced (a \\<cdot>| L) = \\<eta> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced (a \\<cdot>| L) = \\<eta> a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. induced (a \\<cdot>| L) = \\<eta> a", "have \"(THE b. \\<exists>a' \\<in> G. a' \\<cdot>| L = a \\<cdot>| L \\<and> b = \\<eta> a') = \\<eta> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE b.\n        \\<exists>a'\\<in>G.\n           a' \\<cdot>| L = a \\<cdot>| L \\<and> b = \\<eta> a') =\n    \\<eta> a", "by (rule the_equality) (auto intro: left_coset_equality)"], ["proof (state)\nthis:\n  (THE b.\n      \\<exists>a'\\<in>G.\n         a' \\<cdot>| L = a \\<cdot>| L \\<and> b = \\<eta> a') =\n  \\<eta> a\n\ngoal (1 subgoal):\n 1. induced (a \\<cdot>| L) = \\<eta> a", "then"], ["proof (chain)\npicking this:\n  (THE b.\n      \\<exists>a'\\<in>G.\n         a' \\<cdot>| L = a \\<cdot>| L \\<and> b = \\<eta> a') =\n  \\<eta> a", "show ?thesis"], ["proof (prove)\nusing this:\n  (THE b.\n      \\<exists>a'\\<in>G.\n         a' \\<cdot>| L = a \\<cdot>| L \\<and> b = \\<eta> a') =\n  \\<eta> a\n\ngoal (1 subgoal):\n 1. induced (a \\<cdot>| L) = \\<eta> a", "unfolding induced_def"], ["proof (prove)\nusing this:\n  (THE b.\n      \\<exists>a'\\<in>G.\n         a' \\<cdot>| L = a \\<cdot>| L \\<and> b = \\<eta> a') =\n  \\<eta> a\n\ngoal (1 subgoal):\n 1. (\\<lambda>A\\<in>contained.Partition.\n        THE b. \\<exists>a\\<in>G. a \\<cdot>| L = A \\<and> b = \\<eta> a)\n     (a \\<cdot>| L) =\n    \\<eta> a", "using contained.Class_is_Left_Coset contained.Class_in_Partition"], ["proof (prove)\nusing this:\n  (THE b.\n      \\<exists>a'\\<in>G.\n         a' \\<cdot>| L = a \\<cdot>| L \\<and> b = \\<eta> a') =\n  \\<eta> a\n  ?g \\<in> G \\<Longrightarrow> contained.Class ?g = ?g \\<cdot>| L\n  ?a \\<in> G \\<Longrightarrow> contained.Class ?a \\<in> contained.Partition\n\ngoal (1 subgoal):\n 1. (\\<lambda>A\\<in>contained.Partition.\n        THE b. \\<exists>a\\<in>G. a \\<cdot>| L = A \\<and> b = \\<eta> a)\n     (a \\<cdot>| L) =\n    \\<eta> a", "by auto"], ["proof (state)\nthis:\n  induced (a \\<cdot>| L) = \\<eta> a\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>p 62, l 27\\<close>"], ["", "theorem induced_Left_Coset_commutes_with_composition [simp]:\n  \"\\<lbrakk> a \\<in> G; b \\<in> G \\<rbrakk> \\<Longrightarrow> induced ((a \\<cdot>| L) [\\<cdot>] (b \\<cdot>| L)) = induced (a \\<cdot>| L) \\<cdot>' induced (b \\<cdot>| L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> G; b \\<in> G\\<rbrakk>\n    \\<Longrightarrow> induced (a \\<cdot>| L [\\<cdot>] (b \\<cdot>| L)) =\n                      induced (a \\<cdot>| L) \\<cdot>' induced (b \\<cdot>| L)", "by (simp add: commutes_with_composition)"], ["", "text \\<open>p 62, ll 27--28\\<close>"], ["", "theorem induced_group_homomorphism:\n  \"group_homomorphism induced (G // L) ([\\<cdot>]) (contained.Class \\<one>) G' (\\<cdot>') \\<one>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_homomorphism induced contained.Partition ([\\<cdot>])\n     (contained.Class \\<one>) G' (\\<cdot>') \\<one>'", "apply unfold_locales"], ["proof (prove)\ngoal (3 subgoals):\n 1. induced \\<in> contained.Partition \\<rightarrow>\\<^sub>E G'\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> contained.Partition;\n        y \\<in> contained.Partition\\<rbrakk>\n       \\<Longrightarrow> induced (x [\\<cdot>] y) =\n                         induced x \\<cdot>' induced y\n 3. induced (contained.Class \\<one>) = \\<one>'", "apply (auto elim!: contained.Left_CosetE simp: commutes_with_composition commutes_with_unit)"], ["proof (prove)\ngoal (1 subgoal):\n 1. induced (contained.Class \\<one>) = \\<one>'", "using contained.factor_unit induced_left_coset_equality"], ["proof (prove)\nusing this:\n  L = \\<one> \\<cdot>| L\n  ?a \\<in> G \\<Longrightarrow> induced (?a \\<cdot>| L) = \\<eta> ?a\n\ngoal (1 subgoal):\n 1. induced (contained.Class \\<one>) = \\<one>'", "apply (fastforce simp: contained.Class_unit_normal_subgroup)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>p 62, l 28\\<close>"], ["", "sublocale induced: group_homomorphism induced \"G // L\" \"([\\<cdot>])\" \"contained.Class \\<one>\" G' \"(\\<cdot>')\" \"\\<one>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_homomorphism induced contained.Partition ([\\<cdot>])\n     (contained.Class \\<one>) G' (\\<cdot>') \\<one>'", "by (fact induced_group_homomorphism)"], ["", "text \\<open>p 62, ll 28--29\\<close>"], ["", "theorem factorization_lemma: \"a \\<in> G \\<Longrightarrow> compose G induced contained.Class a = \\<eta> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> G \\<Longrightarrow>\n    compose G induced contained.Class a = \\<eta> a", "unfolding compose_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> G \\<Longrightarrow>\n    (\\<lambda>x\\<in>G. induced (contained.Class x)) a = \\<eta> a", "by (simp add: contained.Class_is_Left_Coset)"], ["", "text \\<open>p 62, ll 29--30\\<close>"], ["", "theorem factorization [simp]: \"compose G induced contained.Class = \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compose G induced contained.Class = \\<eta>", "by rule (simp add: compose_def contained.Class_is_Left_Coset map_undefined)"], ["", "text \\<open>\n  Jacobson does not state the uniqueness of @{term induced} explicitly but he uses it later,\n  for rings, on p 107.\n\\<close>"], ["", "text \\<open>p 62, l 30\\<close>"], ["", "theorem uniqueness:\n  assumes map: \"\\<beta> \\<in> G // L \\<rightarrow>\\<^sub>E G'\"\n    and factorization: \"compose G \\<beta> contained.Class = \\<eta>\"\n  shows \"\\<beta> = induced\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<beta> = induced", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. \\<beta> x = induced x", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. \\<beta> x = induced x", "show \"\\<beta> A = induced A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<beta> A = induced A", "proof (cases \"A \\<in> G // L\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A \\<in> contained.Partition \\<Longrightarrow> \\<beta> A = induced A\n 2. A \\<notin> contained.Partition \\<Longrightarrow> \\<beta> A = induced A", "case True"], ["proof (state)\nthis:\n  A \\<in> contained.Partition\n\ngoal (2 subgoals):\n 1. A \\<in> contained.Partition \\<Longrightarrow> \\<beta> A = induced A\n 2. A \\<notin> contained.Partition \\<Longrightarrow> \\<beta> A = induced A", "then"], ["proof (chain)\npicking this:\n  A \\<in> contained.Partition", "obtain a where [simp]: \"A = contained.Class a\" \"a \\<in> G\""], ["proof (prove)\nusing this:\n  A \\<in> contained.Partition\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>A = contained.Class a; a \\<in> G\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  A = contained.Class a\n  a \\<in> G\n\ngoal (2 subgoals):\n 1. A \\<in> contained.Partition \\<Longrightarrow> \\<beta> A = induced A\n 2. A \\<notin> contained.Partition \\<Longrightarrow> \\<beta> A = induced A", "then"], ["proof (chain)\npicking this:\n  A = contained.Class a\n  a \\<in> G", "have \"\\<beta> (contained.Class a) = \\<eta> a\""], ["proof (prove)\nusing this:\n  A = contained.Class a\n  a \\<in> G\n\ngoal (1 subgoal):\n 1. \\<beta> (contained.Class a) = \\<eta> a", "by (metis compose_eq factorization)"], ["proof (state)\nthis:\n  \\<beta> (contained.Class a) = \\<eta> a\n\ngoal (2 subgoals):\n 1. A \\<in> contained.Partition \\<Longrightarrow> \\<beta> A = induced A\n 2. A \\<notin> contained.Partition \\<Longrightarrow> \\<beta> A = induced A", "also"], ["proof (state)\nthis:\n  \\<beta> (contained.Class a) = \\<eta> a\n\ngoal (2 subgoals):\n 1. A \\<in> contained.Partition \\<Longrightarrow> \\<beta> A = induced A\n 2. A \\<notin> contained.Partition \\<Longrightarrow> \\<beta> A = induced A", "have \"\\<dots> = induced (contained.Class a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<eta> a = induced (contained.Class a)", "by (simp add: contained.Class_is_Left_Coset)"], ["proof (state)\nthis:\n  \\<eta> a = induced (contained.Class a)\n\ngoal (2 subgoals):\n 1. A \\<in> contained.Partition \\<Longrightarrow> \\<beta> A = induced A\n 2. A \\<notin> contained.Partition \\<Longrightarrow> \\<beta> A = induced A", "finally"], ["proof (chain)\npicking this:\n  \\<beta> (contained.Class a) = induced (contained.Class a)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<beta> (contained.Class a) = induced (contained.Class a)\n\ngoal (1 subgoal):\n 1. \\<beta> A = induced A", "by simp"], ["proof (state)\nthis:\n  \\<beta> A = induced A\n\ngoal (1 subgoal):\n 1. A \\<notin> contained.Partition \\<Longrightarrow> \\<beta> A = induced A", "qed (simp add: induced_def PiE_arb [OF map])"], ["proof (state)\nthis:\n  \\<beta> A = induced A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>p 62, l 31\\<close>"], ["", "theorem induced_image:\n  \"induced ` (G // L) = \\<eta> ` G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced ` contained.Partition = \\<eta> ` G", "by (metis factorization contained.natural.surjective surj_compose)"], ["", "text \\<open>p 62, l 33\\<close>"], ["", "interpretation L: normal_subgroup L Ker"], ["proof (prove)\ngoal (1 subgoal):\n 1. normal_subgroup L Ker (\\<cdot>) \\<one>", "by unfold_locales (auto simp: subset, metis kernel.sub kernel.subgroup_inverse_equality contained.normal)"], ["", "text \\<open>p 62, ll 31--33\\<close>"], ["", "theorem induced_kernel:\n  \"induced.Ker = Ker / L.Congruence\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced.Ker = L.Partition", "(* Ker // L is apparently not the right thing *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. induced.Ker = L.Partition", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. induced.Ker = L.Partition", "have \"induced.Ker = { a \\<cdot>| L | a. a \\<in> G \\<and> a \\<in> Ker }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced.Ker = {a \\<cdot>| L |a. a \\<in> G \\<and> a \\<in> Ker}", "unfolding induced.Ker_equality"], ["proof (prove)\ngoal (1 subgoal):\n 1. {a |a. a \\<in> contained.Partition \\<and> induced a = \\<one>'} =\n    {a \\<cdot>| L |a. a \\<in> G \\<and> a \\<in> Ker}", "by simp (metis (hide_lams) contained.Class_is_Left_Coset Ker_image Ker_memI\n        induced_left_coset_equality contained.Class_in_Partition contained.representant_exists)"], ["proof (state)\nthis:\n  induced.Ker = {a \\<cdot>| L |a. a \\<in> G \\<and> a \\<in> Ker}\n\ngoal (1 subgoal):\n 1. induced.Ker = L.Partition", "also"], ["proof (state)\nthis:\n  induced.Ker = {a \\<cdot>| L |a. a \\<in> G \\<and> a \\<in> Ker}\n\ngoal (1 subgoal):\n 1. induced.Ker = L.Partition", "have \"\\<dots> = Ker / L.Congruence\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a \\<cdot>| L |a. a \\<in> G \\<and> a \\<in> Ker} = L.Partition", "using L.Class_is_Left_Coset L.Class_in_Partition"], ["proof (prove)\nusing this:\n  ?g \\<in> Ker \\<Longrightarrow> L.Class ?g = ?g \\<cdot>| L\n  ?a \\<in> Ker \\<Longrightarrow> L.Class ?a \\<in> L.Partition\n\ngoal (1 subgoal):\n 1. {a \\<cdot>| L |a. a \\<in> G \\<and> a \\<in> Ker} = L.Partition", "by auto (metis L.Class_is_Left_Coset L.representant_exists kernel.sub)"], ["proof (state)\nthis:\n  {a \\<cdot>| L |a. a \\<in> G \\<and> a \\<in> Ker} = L.Partition\n\ngoal (1 subgoal):\n 1. induced.Ker = L.Partition", "finally"], ["proof (chain)\npicking this:\n  induced.Ker = L.Partition", "show ?thesis"], ["proof (prove)\nusing this:\n  induced.Ker = L.Partition\n\ngoal (1 subgoal):\n 1. induced.Ker = L.Partition", "."], ["proof (state)\nthis:\n  induced.Ker = L.Partition\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>p 62, ll 34--35\\<close>"], ["", "theorem induced_inj_on:\n  \"inj_on induced (G // L) \\<longleftrightarrow> L = Ker\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on induced contained.Partition = (L = Ker)", "apply (simp add: induced.injective_iff_kernel_unit induced_kernel contained.Class_unit_normal_subgroup)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (L.Partition = {L}) = (L = Ker)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. L.Partition = {L} \\<Longrightarrow> L = Ker\n 2. L = Ker \\<Longrightarrow> L.Partition = {L}", "using L.block_exists"], ["proof (prove)\nusing this:\n  ?a \\<in> Ker \\<Longrightarrow>\n  \\<exists>A. ?a \\<in> A \\<and> A \\<in> L.Partition\n\ngoal (2 subgoals):\n 1. L.Partition = {L} \\<Longrightarrow> L = Ker\n 2. L = Ker \\<Longrightarrow> L.Partition = {L}", "apply auto [1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. L = Ker \\<Longrightarrow> L.Partition = {L}", "using L.Block_self L.Class_unit_normal_subgroup L.quotient.unit_closed L.representant_exists"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> ?A; ?A \\<in> L.Partition\\<rbrakk>\n  \\<Longrightarrow> L.Class ?a = ?A\n  L.Class \\<one> = L\n  L.Class \\<one> \\<in> L.Partition\n  ?A \\<in> L.Partition \\<Longrightarrow>\n  \\<exists>a\\<in>Ker. a \\<in> ?A \\<and> ?A = L.Class a\n\ngoal (1 subgoal):\n 1. L = Ker \\<Longrightarrow> L.Partition = {L}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "(* normal_subgroup_in_kernel *)"], ["", "text \\<open>Fundamental Theorem of Homomorphisms of Groups\\<close>"], ["", "text \\<open>p 63, l 1\\<close>"], ["", "locale group_homomorphism_fundamental = group_homomorphism begin"], ["", "text \\<open>p 63, l 1\\<close>"], ["", "notation kernel.quotient_composition (infixl \"[\\<cdot>]\" 70)"], ["", "text \\<open>p 63, l 1\\<close>"], ["", "sublocale normal_subgroup_in_kernel where L = Ker"], ["proof (prove)\ngoal (1 subgoal):\n 1. normal_subgroup_in_kernel \\<eta> G (\\<cdot>) \\<one> G' (\\<cdot>')\n     \\<one>' Ker", "by unfold_locales rule"], ["", "text \\<open>p 62, ll 36--37; p 63, l 1\\<close>"], ["", "text \\<open>\n  @{term induced} denotes Jacobson's $\\bar{\\eta}$.  We have the commutativity of the diagram, where\n  @{term induced} is unique: @{thm [display] factorization} @{thm [display] uniqueness}\n\\<close>"], ["", "end"], ["", "(* group_homomorphism_fundamental *)"], ["", "text \\<open>p 63, l 5\\<close>"], ["", "locale group_isomorphism = group_homomorphism + bijective_map \\<eta> G G' begin"], ["", "text \\<open>p 63, l 5\\<close>"], ["", "sublocale monoid_isomorphism \\<eta> G \"(\\<cdot>)\" \\<one> G' \"(\\<cdot>')\" \"\\<one>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monoid_isomorphism \\<eta> G (\\<cdot>) \\<one> G' (\\<cdot>') \\<one>'", "by unfold_locales (auto simp: commutes_with_composition)"], ["", "text \\<open>p 63, l 6\\<close>"], ["", "lemma inverse_group_isomorphism:\n  \"group_isomorphism (restrict (inv_into G \\<eta>) G') G' (\\<cdot>') \\<one>' G (\\<cdot>) \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_isomorphism (restrict (inv_into G \\<eta>) G') G' (\\<cdot>')\n     \\<one>' G (\\<cdot>) \\<one>", "using commutes_with_composition commutes_with_unit surjective"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> G; ?y \\<in> G\\<rbrakk>\n  \\<Longrightarrow> \\<eta> ?x \\<cdot>' \\<eta> ?y = \\<eta> (?x \\<cdot> ?y)\n  \\<eta> \\<one> = \\<one>'\n  \\<eta> ` G = G'\n\ngoal (1 subgoal):\n 1. group_isomorphism (restrict (inv_into G \\<eta>) G') G' (\\<cdot>')\n     \\<one>' G (\\<cdot>) \\<one>", "by unfold_locales auto"], ["", "end"], ["", "(* group_isomorphism *)"], ["", "text \\<open>p 63, l 6\\<close>"], ["", "definition isomorphic_as_groups (infixl \"\\<cong>\\<^sub>G\" 50)\n  where \"\\<G> \\<cong>\\<^sub>G \\<G>' \\<longleftrightarrow> (let (G, composition, unit) = \\<G>; (G', composition', unit') = \\<G>' in\n  (\\<exists>\\<eta>. group_isomorphism \\<eta> G composition unit G' composition' unit'))\""], ["", "text \\<open>p 63, l 6\\<close>"], ["", "lemma isomorphic_as_groups_symmetric:\n  \"(G, composition, unit) \\<cong>\\<^sub>G (G', composition', unit') \\<Longrightarrow> (G', composition', unit') \\<cong>\\<^sub>G (G, composition, unit)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (G, composition, unit) \\<cong>\\<^sub>G\n    (G', composition', unit') \\<Longrightarrow>\n    (G', composition', unit') \\<cong>\\<^sub>G (G, composition, unit)", "by (simp add: isomorphic_as_groups_def) (meson group_isomorphism.inverse_group_isomorphism)"], ["", "text \\<open>p 63, l 1\\<close>"], ["", "sublocale group_isomorphism \\<subseteq> group_epimorphism"], ["proof (prove)\ngoal (1 subgoal):\n 1. group_epimorphism \\<eta> G (\\<cdot>) \\<one> G' (\\<cdot>') \\<one>'", ".."], ["", "text \\<open>p 63, l 1\\<close>"], ["", "locale group_epimorphism_fundamental = group_homomorphism_fundamental + group_epimorphism begin"], ["", "text \\<open>p 63, ll 1--2\\<close>"], ["", "interpretation image: group_homomorphism induced \"G // Ker\" \"([\\<cdot>])\" \"kernel.Class \\<one>\" \"(\\<eta> ` G)\" \"(\\<cdot>')\" \"\\<one>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_homomorphism induced kernel.Partition ([\\<cdot>])\n     (kernel.Class \\<one>) (\\<eta> ` G) (\\<cdot>') \\<one>'", "by (simp add: surjective group_homomorphism_fundamental.intro induced_group_homomorphism)"], ["", "text \\<open>p 63, ll 1--2\\<close>"], ["", "sublocale image: group_isomorphism induced \"G // Ker\" \"([\\<cdot>])\" \"kernel.Class \\<one>\" \"(\\<eta> ` G)\" \"(\\<cdot>')\" \"\\<one>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_isomorphism induced kernel.Partition ([\\<cdot>])\n     (kernel.Class \\<one>) (\\<eta> ` G) (\\<cdot>') \\<one>'", "using induced_group_homomorphism"], ["proof (prove)\nusing this:\n  group_homomorphism induced kernel.Partition ([\\<cdot>])\n   (kernel.Class \\<one>) G' (\\<cdot>') \\<one>'\n\ngoal (1 subgoal):\n 1. group_isomorphism induced kernel.Partition ([\\<cdot>])\n     (kernel.Class \\<one>) (\\<eta> ` G) (\\<cdot>') \\<one>'", "by unfold_locales (auto simp: bij_betw_def induced_image induced_inj_on induced.commutes_with_composition)"], ["", "end"], ["", "(* group_epimorphism_fundamental *)"], ["", "context group_homomorphism begin"], ["", "text \\<open>p 63, ll 5--7\\<close>"], ["", "theorem image_isomorphic_to_factor_group:\n  \"\\<exists>K composition unit. normal_subgroup K G (\\<cdot>) \\<one> \\<and> (\\<eta> ` G, (\\<cdot>'), \\<one>') \\<cong>\\<^sub>G (G // K, composition, unit)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>K composition unit.\n       normal_subgroup K G (\\<cdot>) \\<one> \\<and>\n       (\\<eta> ` G, (\\<cdot>'), \\<one>') \\<cong>\\<^sub>G\n       (G // K, composition, unit)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>K composition unit.\n       normal_subgroup K G (\\<cdot>) \\<one> \\<and>\n       (\\<eta> ` G, (\\<cdot>'), \\<one>') \\<cong>\\<^sub>G\n       (G // K, composition, unit)", "interpret image: group_epimorphism_fundamental where G' = \"\\<eta> ` G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_epimorphism_fundamental \\<eta> G (\\<cdot>) \\<one> (\\<eta> ` G)\n     (\\<cdot>') \\<one>'", "by unfold_locales (auto simp: commutes_with_composition)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>K composition unit.\n       normal_subgroup K G (\\<cdot>) \\<one> \\<and>\n       (\\<eta> ` G, (\\<cdot>'), \\<one>') \\<cong>\\<^sub>G\n       (G // K, composition, unit)", "have \"group_isomorphism image.induced (G // Ker) ([\\<cdot>]) (kernel.Class \\<one>) (\\<eta> ` G) (\\<cdot>') \\<one>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_isomorphism image.induced kernel.Partition ([\\<cdot>])\n     (kernel.Class \\<one>) (\\<eta> ` G) (\\<cdot>') \\<one>'", ".."], ["proof (state)\nthis:\n  group_isomorphism image.induced kernel.Partition ([\\<cdot>])\n   (kernel.Class \\<one>) (\\<eta> ` G) (\\<cdot>') \\<one>'\n\ngoal (1 subgoal):\n 1. \\<exists>K composition unit.\n       normal_subgroup K G (\\<cdot>) \\<one> \\<and>\n       (\\<eta> ` G, (\\<cdot>'), \\<one>') \\<cong>\\<^sub>G\n       (G // K, composition, unit)", "then"], ["proof (chain)\npicking this:\n  group_isomorphism image.induced kernel.Partition ([\\<cdot>])\n   (kernel.Class \\<one>) (\\<eta> ` G) (\\<cdot>') \\<one>'", "have \"(\\<eta> ` G, (\\<cdot>'), \\<one>') \\<cong>\\<^sub>G (G // Ker, ([\\<cdot>]), kernel.Class \\<one>)\""], ["proof (prove)\nusing this:\n  group_isomorphism image.induced kernel.Partition ([\\<cdot>])\n   (kernel.Class \\<one>) (\\<eta> ` G) (\\<cdot>') \\<one>'\n\ngoal (1 subgoal):\n 1. (\\<eta> ` G, (\\<cdot>'), \\<one>') \\<cong>\\<^sub>G\n    (kernel.Partition, ([\\<cdot>]), kernel.Class \\<one>)", "by (simp add: isomorphic_as_groups_def) (meson group_isomorphism.inverse_group_isomorphism)"], ["proof (state)\nthis:\n  (\\<eta> ` G, (\\<cdot>'), \\<one>') \\<cong>\\<^sub>G\n  (kernel.Partition, ([\\<cdot>]), kernel.Class \\<one>)\n\ngoal (1 subgoal):\n 1. \\<exists>K composition unit.\n       normal_subgroup K G (\\<cdot>) \\<one> \\<and>\n       (\\<eta> ` G, (\\<cdot>'), \\<one>') \\<cong>\\<^sub>G\n       (G // K, composition, unit)", "moreover"], ["proof (state)\nthis:\n  (\\<eta> ` G, (\\<cdot>'), \\<one>') \\<cong>\\<^sub>G\n  (kernel.Partition, ([\\<cdot>]), kernel.Class \\<one>)\n\ngoal (1 subgoal):\n 1. \\<exists>K composition unit.\n       normal_subgroup K G (\\<cdot>) \\<one> \\<and>\n       (\\<eta> ` G, (\\<cdot>'), \\<one>') \\<cong>\\<^sub>G\n       (G // K, composition, unit)", "have \"normal_subgroup Ker G (\\<cdot>) \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. normal_subgroup image.Ker G (\\<cdot>) \\<one>", ".."], ["proof (state)\nthis:\n  normal_subgroup image.Ker G (\\<cdot>) \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>K composition unit.\n       normal_subgroup K G (\\<cdot>) \\<one> \\<and>\n       (\\<eta> ` G, (\\<cdot>'), \\<one>') \\<cong>\\<^sub>G\n       (G // K, composition, unit)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<eta> ` G, (\\<cdot>'), \\<one>') \\<cong>\\<^sub>G\n  (kernel.Partition, ([\\<cdot>]), kernel.Class \\<one>)\n  normal_subgroup image.Ker G (\\<cdot>) \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<eta> ` G, (\\<cdot>'), \\<one>') \\<cong>\\<^sub>G\n  (kernel.Partition, ([\\<cdot>]), kernel.Class \\<one>)\n  normal_subgroup image.Ker G (\\<cdot>) \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>K composition unit.\n       normal_subgroup K G (\\<cdot>) \\<one> \\<and>\n       (\\<eta> ` G, (\\<cdot>'), \\<one>') \\<cong>\\<^sub>G\n       (G // K, composition, unit)", "by blast"], ["proof (state)\nthis:\n  \\<exists>K composition unit.\n     normal_subgroup K G (\\<cdot>) \\<one> \\<and>\n     (\\<eta> ` G, (\\<cdot>'), \\<one>') \\<cong>\\<^sub>G\n     (G // K, composition, unit)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* group_homomorphism *)"], ["", "end"]]}