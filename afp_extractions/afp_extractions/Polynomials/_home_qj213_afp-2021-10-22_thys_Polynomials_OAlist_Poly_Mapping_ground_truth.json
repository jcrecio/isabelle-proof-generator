{"file_name": "/home/qj213/afp-2021-10-22/thys/Polynomials/OAlist_Poly_Mapping.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Polynomials", "problem_names": ["lemma comparator_lexicographic:\n  fixes f::\"'a \\<Rightarrow> 'b\" and g::\"'a \\<Rightarrow> 'c\"\n  assumes \"comparator c1\" and \"comparator c2\" and \"\\<And>x y. f x = f y \\<Longrightarrow> g x = g y \\<Longrightarrow> x = y\"\n  shows \"comparator (\\<lambda>x y. case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y) | val \\<Rightarrow> val)\"\n          (is \"comparator ?c3\")", "lemma full_componentE:\n  assumes \"snd (rep_nat_term x) = i\"\n  obtains y where \"rep_nat_term y = (t, i)\"", "lemma nat_term_compI:\n  assumes \"\\<And>u v. snd (rep_nat_term u) = snd (rep_nat_term v) \\<Longrightarrow> fst (rep_nat_term u) = 0 \\<Longrightarrow> cmp u v \\<noteq> Gt\"\n    and \"\\<And>u v. fst (rep_nat_term u) = fst (rep_nat_term v) \\<Longrightarrow> snd (rep_nat_term u) < snd (rep_nat_term v) \\<Longrightarrow> cmp u v = Lt\"\n    and \"\\<And>t u v. cmp u v = Lt \\<Longrightarrow> cmp (splus t u) (splus t v) = Lt\"\n    and \"\\<And>u v a b. fst (rep_nat_term u) = fst (rep_nat_term a) \\<Longrightarrow> fst (rep_nat_term v) = fst (rep_nat_term b) \\<Longrightarrow>\n                  snd (rep_nat_term u) = snd (rep_nat_term v) \\<Longrightarrow> snd (rep_nat_term a) = snd (rep_nat_term b) \\<Longrightarrow>\n                  cmp a b = Lt \\<Longrightarrow> cmp u v = Lt\"\n  shows \"nat_term_comp cmp\"", "lemma nat_term_compD1:\n  assumes \"nat_term_comp cmp\" and \"snd (rep_nat_term u) = snd (rep_nat_term v)\" and \"fst (rep_nat_term u) = 0\"\n  shows \"cmp u v \\<noteq> Gt\"", "lemma nat_term_compD2:\n  assumes \"nat_term_comp cmp\" and \"fst (rep_nat_term u) = fst (rep_nat_term v)\" and \"snd (rep_nat_term u) < snd (rep_nat_term v)\"\n  shows \"cmp u v = Lt\"", "lemma nat_term_compD3:\n  assumes \"nat_term_comp cmp\" and \"cmp u v = Lt\"\n  shows \"cmp (splus t u) (splus t v) = Lt\"", "lemma nat_term_compD4:\n  assumes \"nat_term_comp cmp\" and \"fst (rep_nat_term u) = fst (rep_nat_term a)\"\n    and \"fst (rep_nat_term v) = fst (rep_nat_term b)\" and \"snd (rep_nat_term u) = snd (rep_nat_term v)\"\n    and \"snd (rep_nat_term a) = snd (rep_nat_term b)\" and \"cmp a b = Lt\"\n  shows \"cmp u v = Lt\"", "lemma nat_term_compD1':\n  assumes \"comparator cmp\" and \"nat_term_comp cmp\" and \"snd (rep_nat_term u) \\<le> snd (rep_nat_term v)\"\n    and \"fst (rep_nat_term u) = 0\"\n  shows \"cmp u v \\<noteq> Gt\"", "lemma nat_term_compD4':\n  assumes \"comparator cmp\" and \"nat_term_comp cmp\" and \"fst (rep_nat_term u) = fst (rep_nat_term a)\"\n    and \"fst (rep_nat_term v) = fst (rep_nat_term b)\" and \"snd (rep_nat_term u) = snd (rep_nat_term v)\"\n    and \"snd (rep_nat_term a) = snd (rep_nat_term b)\"\n  shows \"cmp u v = cmp a b\"", "lemma nat_term_compD4'':\n  assumes \"comparator cmp\" and \"nat_term_comp cmp\" and \"fst (rep_nat_term u) = fst (rep_nat_term a)\"\n    and \"fst (rep_nat_term v) = fst (rep_nat_term b)\" and \"snd (rep_nat_term u) \\<le> snd (rep_nat_term v)\"\n    and \"snd (rep_nat_term a) = snd (rep_nat_term b)\" and \"cmp a b \\<noteq> Gt\"\n  shows \"cmp u v \\<noteq> Gt\"", "lemma comparator_lex_comp_aux: \"comparator (lex_comp_aux::'a::nat_term comparator)\"", "lemma nat_term_comp_lex_comp_aux: \"nat_term_comp (lex_comp_aux::'a::nat_term comparator)\"", "lemma nat_term_compare_Abs_nat_term_order_id:\n  assumes \"comparator cmp\" and \"nat_term_comp cmp\"\n  shows \"nat_term_compare (Abs_nat_term_order cmp) = cmp\"", "lemma comparator_nat_term_compare: \"comparator (nat_term_compare to)\"", "lemma nat_term_comp_nat_term_compare: \"nat_term_comp (nat_term_compare to)\"", "lemma nat_term_compare_splus: \"nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v\"", "lemma nat_term_compare_conv: \"nat_term_compare to = key_compare (key_order_of_nat_term_order to)\"", "lemma comparator_nat_term_compare_inv: \"comparator (nat_term_compare_inv to)\"", "lemma nat_term_compare_inv_conv: \"nat_term_compare_inv to = key_compare (key_order_of_nat_term_order_inv to)\"", "lemma nat_term_compare_inv_alt [code_unfold]: \"nat_term_compare_inv to x y = nat_term_compare to y x\"", "lemma le_of_nat_term_order [code]: \"le_of_nat_term_order to x y = (nat_term_compare to x y \\<noteq> Gt)\"", "lemma lt_of_nat_term_order [code]: \"lt_of_nat_term_order to x y = (nat_term_compare to x y = Lt)\"", "lemma le_of_nat_term_order_alt:\n  \"le_of_nat_term_order to = (\\<lambda>u v. ko.le (key_order_of_nat_term_order_inv to) v u)\"", "lemma lt_of_nat_term_order_alt:\n  \"lt_of_nat_term_order to = (\\<lambda>u v. ko.lt (key_order_of_nat_term_order_inv to) v u)\"", "lemma linorder_le_of_nat_term_order: \"class.linorder (le_of_nat_term_order to) (lt_of_nat_term_order to)\"", "lemma le_of_nat_term_order_zero_min: \"le_of_nat_term_order to 0 (t::'a::nat_pp_term)\"", "lemma le_of_nat_term_order_plus_monotone:\n  assumes \"le_of_nat_term_order to s (t::'a::nat_pp_term)\"\n  shows \"le_of_nat_term_order to (u + s) (u + t)\"", "lemma ko_ntm_le: \"ko_ntm.le to = (\\<lambda>x y. le_of_nat_term_order to y x)\"", "lemma compute_min_key_val_ko_ntm [code]:\n  \"min_key_val_ko_ntm ko (xs, ox) =\n      (if ko = ox then hd else min_list_param (\\<lambda>x y. (le_of_nat_term_order ko) (fst y) (fst x))) xs\"", "lemma oalist_ntm_eq_iff: \"xs = ys \\<longleftrightarrow> list_of_oalist_ntm xs = list_of_oalist_ntm ys\"", "lemma oalist_ntm_eqI: \"list_of_oalist_ntm xs = list_of_oalist_ntm ys \\<Longrightarrow> xs = ys\"", "lemma oalist_inv_list_of_oalist_ntm: \"ko_ntm.oalist_inv (list_of_oalist_ntm xs)\"", "lemma list_of_oalist_OAlist_ntm: \"list_of_oalist_ntm (OAlist_ntm xs) = sort_oalist_ko_ntm xs\"", "lemma OAlist_list_of_oalist_ntm [simp, code abstype]: \"OAlist_ntm (list_of_oalist_ntm xs) = xs\"", "lemma [code abstract]: \"list_of_oalist_ntm (oalist_of_list_ntm xs) = sort_oalist_ko_ntm xs\"", "lemmas OAlist_lookup_ntm_single = oa_ntm.lookup_oalist_of_list_single[folded oalist_of_list_ntm_def]"], "translations": [["", "lemma comparator_lexicographic:\n  fixes f::\"'a \\<Rightarrow> 'b\" and g::\"'a \\<Rightarrow> 'c\"\n  assumes \"comparator c1\" and \"comparator c2\" and \"\\<And>x y. f x = f y \\<Longrightarrow> g x = g y \\<Longrightarrow> x = y\"\n  shows \"comparator (\\<lambda>x y. case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y) | val \\<Rightarrow> val)\"\n          (is \"comparator ?c3\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator\n     (\\<lambda>x y.\n         case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. comparator\n     (\\<lambda>x y.\n         case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt)", "from assms(1)"], ["proof (chain)\npicking this:\n  comparator c1", "interpret c1: comparator c1"], ["proof (prove)\nusing this:\n  comparator c1\n\ngoal (1 subgoal):\n 1. comparator c1", "."], ["proof (state)\ngoal (1 subgoal):\n 1. comparator\n     (\\<lambda>x y.\n         case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt)", "from assms(2)"], ["proof (chain)\npicking this:\n  comparator c2", "interpret c2: comparator c2"], ["proof (prove)\nusing this:\n  comparator c2\n\ngoal (1 subgoal):\n 1. comparator c2", "."], ["proof (state)\ngoal (1 subgoal):\n 1. comparator\n     (\\<lambda>x y.\n         case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator\n     (\\<lambda>x y.\n         case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       invert_order\n        (case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n       (case c1 (f y) (f x) of Eq \\<Rightarrow> c2 (g y) (g x)\n        | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt)\n 2. \\<And>x y.\n       (case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n        | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n       Eq \\<Longrightarrow>\n       x = y\n 3. \\<And>x y z.\n       \\<lbrakk>(case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n                 | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                Lt;\n        (case c1 (f y) (f z) of Eq \\<Rightarrow> c2 (g y) (g z)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n        Lt\\<rbrakk>\n       \\<Longrightarrow> (case c1 (f x) (f z) of\n                          Eq \\<Rightarrow> c2 (g x) (g z)\n                          | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                         Lt", "fix x y :: 'a"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       invert_order\n        (case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n       (case c1 (f y) (f x) of Eq \\<Rightarrow> c2 (g y) (g x)\n        | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt)\n 2. \\<And>x y.\n       (case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n        | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n       Eq \\<Longrightarrow>\n       x = y\n 3. \\<And>x y z.\n       \\<lbrakk>(case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n                 | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                Lt;\n        (case c1 (f y) (f z) of Eq \\<Rightarrow> c2 (g y) (g z)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n        Lt\\<rbrakk>\n       \\<Longrightarrow> (case c1 (f x) (f z) of\n                          Eq \\<Rightarrow> c2 (g x) (g z)\n                          | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                         Lt", "show \"invert_order (?c3 x y) = ?c3 y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invert_order\n     (case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n      | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    (case c1 (f y) (f x) of Eq \\<Rightarrow> c2 (g y) (g x)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt)", "by (simp add: c1.eq c2.eq split: order.split,\n          metis invert_order.simps(1) invert_order.simps(2) c1.sym c2.sym order.distinct(5))"], ["proof (state)\nthis:\n  invert_order\n   (case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n    | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n  (case c1 (f y) (f x) of Eq \\<Rightarrow> c2 (g y) (g x)\n   | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n        | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n       Eq \\<Longrightarrow>\n       x = y\n 2. \\<And>x y z.\n       \\<lbrakk>(case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n                 | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                Lt;\n        (case c1 (f y) (f z) of Eq \\<Rightarrow> c2 (g y) (g z)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n        Lt\\<rbrakk>\n       \\<Longrightarrow> (case c1 (f x) (f z) of\n                          Eq \\<Rightarrow> c2 (g x) (g z)\n                          | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                         Lt", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n        | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n       Eq \\<Longrightarrow>\n       x = y\n 2. \\<And>x y z.\n       \\<lbrakk>(case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n                 | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                Lt;\n        (case c1 (f y) (f z) of Eq \\<Rightarrow> c2 (g y) (g z)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n        Lt\\<rbrakk>\n       \\<Longrightarrow> (case c1 (f x) (f z) of\n                          Eq \\<Rightarrow> c2 (g x) (g z)\n                          | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                         Lt", "fix x y :: 'a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n        | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n       Eq \\<Longrightarrow>\n       x = y\n 2. \\<And>x y z.\n       \\<lbrakk>(case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n                 | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                Lt;\n        (case c1 (f y) (f z) of Eq \\<Rightarrow> c2 (g y) (g z)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n        Lt\\<rbrakk>\n       \\<Longrightarrow> (case c1 (f x) (f z) of\n                          Eq \\<Rightarrow> c2 (g x) (g z)\n                          | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                         Lt", "assume \"?c3 x y = Eq\""], ["proof (state)\nthis:\n  (case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n   | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n  Eq\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n        | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n       Eq \\<Longrightarrow>\n       x = y\n 2. \\<And>x y z.\n       \\<lbrakk>(case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n                 | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                Lt;\n        (case c1 (f y) (f z) of Eq \\<Rightarrow> c2 (g y) (g z)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n        Lt\\<rbrakk>\n       \\<Longrightarrow> (case c1 (f x) (f z) of\n                          Eq \\<Rightarrow> c2 (g x) (g z)\n                          | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                         Lt", "hence \"f x = f y\" and \"g x = g y\""], ["proof (prove)\nusing this:\n  (case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n   | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n  Eq\n\ngoal (1 subgoal):\n 1. f x = f y &&& g x = g y", "by (simp_all add: c1.eq c2.eq split: order.splits if_split_asm)"], ["proof (state)\nthis:\n  f x = f y\n  g x = g y\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n        | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n       Eq \\<Longrightarrow>\n       x = y\n 2. \\<And>x y z.\n       \\<lbrakk>(case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n                 | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                Lt;\n        (case c1 (f y) (f z) of Eq \\<Rightarrow> c2 (g y) (g z)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n        Lt\\<rbrakk>\n       \\<Longrightarrow> (case c1 (f x) (f z) of\n                          Eq \\<Rightarrow> c2 (g x) (g z)\n                          | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                         Lt", "thus \"x = y\""], ["proof (prove)\nusing this:\n  f x = f y\n  g x = g y\n\ngoal (1 subgoal):\n 1. x = y", "by (rule assms(3))"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n                 | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                Lt;\n        (case c1 (f y) (f z) of Eq \\<Rightarrow> c2 (g y) (g z)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n        Lt\\<rbrakk>\n       \\<Longrightarrow> (case c1 (f x) (f z) of\n                          Eq \\<Rightarrow> c2 (g x) (g z)\n                          | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                         Lt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n                 | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                Lt;\n        (case c1 (f y) (f z) of Eq \\<Rightarrow> c2 (g y) (g z)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n        Lt\\<rbrakk>\n       \\<Longrightarrow> (case c1 (f x) (f z) of\n                          Eq \\<Rightarrow> c2 (g x) (g z)\n                          | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                         Lt", "fix x y z :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n                 | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                Lt;\n        (case c1 (f y) (f z) of Eq \\<Rightarrow> c2 (g y) (g z)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n        Lt\\<rbrakk>\n       \\<Longrightarrow> (case c1 (f x) (f z) of\n                          Eq \\<Rightarrow> c2 (g x) (g z)\n                          | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                         Lt", "assume \"?c3 x y = Lt\""], ["proof (state)\nthis:\n  (case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n   | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n  Lt\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n                 | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                Lt;\n        (case c1 (f y) (f z) of Eq \\<Rightarrow> c2 (g y) (g z)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n        Lt\\<rbrakk>\n       \\<Longrightarrow> (case c1 (f x) (f z) of\n                          Eq \\<Rightarrow> c2 (g x) (g z)\n                          | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                         Lt", "hence d1: \"c1 (f x) (f y) = Lt \\<or> (c1 (f x) (f y) = Eq \\<and> c2 (g x) (g y) = Lt)\""], ["proof (prove)\nusing this:\n  (case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n   | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n  Lt\n\ngoal (1 subgoal):\n 1. c1 (f x) (f y) = Lt \\<or> c1 (f x) (f y) = Eq \\<and> c2 (g x) (g y) = Lt", "by (simp split: order.splits)"], ["proof (state)\nthis:\n  c1 (f x) (f y) = Lt \\<or> c1 (f x) (f y) = Eq \\<and> c2 (g x) (g y) = Lt\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n                 | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                Lt;\n        (case c1 (f y) (f z) of Eq \\<Rightarrow> c2 (g y) (g z)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n        Lt\\<rbrakk>\n       \\<Longrightarrow> (case c1 (f x) (f z) of\n                          Eq \\<Rightarrow> c2 (g x) (g z)\n                          | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                         Lt", "assume \"?c3 y z = Lt\""], ["proof (state)\nthis:\n  (case c1 (f y) (f z) of Eq \\<Rightarrow> c2 (g y) (g z)\n   | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n  Lt\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n                 | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                Lt;\n        (case c1 (f y) (f z) of Eq \\<Rightarrow> c2 (g y) (g z)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n        Lt\\<rbrakk>\n       \\<Longrightarrow> (case c1 (f x) (f z) of\n                          Eq \\<Rightarrow> c2 (g x) (g z)\n                          | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                         Lt", "hence d2: \"c1 (f y) (f z) = Lt \\<or> (c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt)\""], ["proof (prove)\nusing this:\n  (case c1 (f y) (f z) of Eq \\<Rightarrow> c2 (g y) (g z)\n   | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n  Lt\n\ngoal (1 subgoal):\n 1. c1 (f y) (f z) = Lt \\<or> c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt", "by (simp split: order.splits)"], ["proof (state)\nthis:\n  c1 (f y) (f z) = Lt \\<or> c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n                 | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                Lt;\n        (case c1 (f y) (f z) of Eq \\<Rightarrow> c2 (g y) (g z)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n        Lt\\<rbrakk>\n       \\<Longrightarrow> (case c1 (f x) (f z) of\n                          Eq \\<Rightarrow> c2 (g x) (g z)\n                          | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n                         Lt", "from d1"], ["proof (chain)\npicking this:\n  c1 (f x) (f y) = Lt \\<or> c1 (f x) (f y) = Eq \\<and> c2 (g x) (g y) = Lt", "show \"?c3 x z = Lt\""], ["proof (prove)\nusing this:\n  c1 (f x) (f y) = Lt \\<or> c1 (f x) (f y) = Eq \\<and> c2 (g x) (g y) = Lt\n\ngoal (1 subgoal):\n 1. (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. c1 (f x) (f y) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt\n 2. c1 (f x) (f y) = Eq \\<and> c2 (g x) (g y) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "assume 1: \"c1 (f x) (f y) = Lt\""], ["proof (state)\nthis:\n  c1 (f x) (f y) = Lt\n\ngoal (2 subgoals):\n 1. c1 (f x) (f y) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt\n 2. c1 (f x) (f y) = Eq \\<and> c2 (g x) (g y) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "from d2"], ["proof (chain)\npicking this:\n  c1 (f y) (f z) = Lt \\<or> c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt", "show ?thesis"], ["proof (prove)\nusing this:\n  c1 (f y) (f z) = Lt \\<or> c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt\n\ngoal (1 subgoal):\n 1. (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. c1 (f y) (f z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt\n 2. c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "assume \"c1 (f y) (f z) = Lt\""], ["proof (state)\nthis:\n  c1 (f y) (f z) = Lt\n\ngoal (2 subgoals):\n 1. c1 (f y) (f z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt\n 2. c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "with 1"], ["proof (chain)\npicking this:\n  c1 (f x) (f y) = Lt\n  c1 (f y) (f z) = Lt", "have \"c1 (f x) (f z) = Lt\""], ["proof (prove)\nusing this:\n  c1 (f x) (f y) = Lt\n  c1 (f y) (f z) = Lt\n\ngoal (1 subgoal):\n 1. c1 (f x) (f z) = Lt", "by (rule c1.trans)"], ["proof (state)\nthis:\n  c1 (f x) (f z) = Lt\n\ngoal (2 subgoals):\n 1. c1 (f y) (f z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt\n 2. c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "thus ?thesis"], ["proof (prove)\nusing this:\n  c1 (f x) (f z) = Lt\n\ngoal (1 subgoal):\n 1. (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "by simp"], ["proof (state)\nthis:\n  (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n   | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n  Lt\n\ngoal (1 subgoal):\n 1. c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "assume \"c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt\""], ["proof (state)\nthis:\n  c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt\n\ngoal (1 subgoal):\n 1. c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "hence \"f z = f y\" and \"c2 (g y) (g z) = Lt\""], ["proof (prove)\nusing this:\n  c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt\n\ngoal (1 subgoal):\n 1. f z = f y &&& c2 (g y) (g z) = Lt", "by (simp_all add: c1.eq)"], ["proof (state)\nthis:\n  f z = f y\n  c2 (g y) (g z) = Lt\n\ngoal (1 subgoal):\n 1. c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "with 1"], ["proof (chain)\npicking this:\n  c1 (f x) (f y) = Lt\n  f z = f y\n  c2 (g y) (g z) = Lt", "show ?thesis"], ["proof (prove)\nusing this:\n  c1 (f x) (f y) = Lt\n  f z = f y\n  c2 (g y) (g z) = Lt\n\ngoal (1 subgoal):\n 1. (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "by simp"], ["proof (state)\nthis:\n  (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n   | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n  Lt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n   | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n  Lt\n\ngoal (1 subgoal):\n 1. c1 (f x) (f y) = Eq \\<and> c2 (g x) (g y) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c1 (f x) (f y) = Eq \\<and> c2 (g x) (g y) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "assume \"c1 (f x) (f y) = Eq \\<and> c2 (g x) (g y) = Lt\""], ["proof (state)\nthis:\n  c1 (f x) (f y) = Eq \\<and> c2 (g x) (g y) = Lt\n\ngoal (1 subgoal):\n 1. c1 (f x) (f y) = Eq \\<and> c2 (g x) (g y) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "hence 1: \"f x = f y\" and 2: \"c2 (g x) (g y) = Lt\""], ["proof (prove)\nusing this:\n  c1 (f x) (f y) = Eq \\<and> c2 (g x) (g y) = Lt\n\ngoal (1 subgoal):\n 1. f x = f y &&& c2 (g x) (g y) = Lt", "by (simp_all add: c1.eq)"], ["proof (state)\nthis:\n  f x = f y\n  c2 (g x) (g y) = Lt\n\ngoal (1 subgoal):\n 1. c1 (f x) (f y) = Eq \\<and> c2 (g x) (g y) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "from d2"], ["proof (chain)\npicking this:\n  c1 (f y) (f z) = Lt \\<or> c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt", "show ?thesis"], ["proof (prove)\nusing this:\n  c1 (f y) (f z) = Lt \\<or> c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt\n\ngoal (1 subgoal):\n 1. (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. c1 (f y) (f z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt\n 2. c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "assume \"c1 (f y) (f z) = Lt\""], ["proof (state)\nthis:\n  c1 (f y) (f z) = Lt\n\ngoal (2 subgoals):\n 1. c1 (f y) (f z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt\n 2. c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "thus ?thesis"], ["proof (prove)\nusing this:\n  c1 (f y) (f z) = Lt\n\ngoal (1 subgoal):\n 1. (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "by (simp add: 1)"], ["proof (state)\nthis:\n  (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n   | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n  Lt\n\ngoal (1 subgoal):\n 1. c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "assume \"c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt\""], ["proof (state)\nthis:\n  c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt\n\ngoal (1 subgoal):\n 1. c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "hence 3: \"f y = f z\" and \"c2 (g y) (g z) = Lt\""], ["proof (prove)\nusing this:\n  c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt\n\ngoal (1 subgoal):\n 1. f y = f z &&& c2 (g y) (g z) = Lt", "by (simp_all add: c1.eq)"], ["proof (state)\nthis:\n  f y = f z\n  c2 (g y) (g z) = Lt\n\ngoal (1 subgoal):\n 1. c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "from 2 this(2)"], ["proof (chain)\npicking this:\n  c2 (g x) (g y) = Lt\n  c2 (g y) (g z) = Lt", "have \"c2 (g x) (g z) = Lt\""], ["proof (prove)\nusing this:\n  c2 (g x) (g y) = Lt\n  c2 (g y) (g z) = Lt\n\ngoal (1 subgoal):\n 1. c2 (g x) (g z) = Lt", "by (rule c2.trans)"], ["proof (state)\nthis:\n  c2 (g x) (g z) = Lt\n\ngoal (1 subgoal):\n 1. c1 (f y) (f z) = Eq \\<and> c2 (g y) (g z) = Lt \\<Longrightarrow>\n    (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "thus ?thesis"], ["proof (prove)\nusing this:\n  c2 (g x) (g z) = Lt\n\ngoal (1 subgoal):\n 1. (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n     | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n    Lt", "by (simp add: 1 3)"], ["proof (state)\nthis:\n  (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n   | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n  Lt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n   | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n  Lt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (case c1 (f x) (f z) of Eq \\<Rightarrow> c2 (g x) (g z)\n   | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt) =\n  Lt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  comparator\n   (\\<lambda>x y.\n       case c1 (f x) (f y) of Eq \\<Rightarrow> c2 (g x) (g y)\n       | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt)\n\ngoal:\nNo subgoals!", "qed"], ["", "class nat_term =\n  fixes rep_nat_term :: \"'a \\<Rightarrow> ((nat, nat) pp \\<times> nat)\"\n    and splus :: \"'a \\<Rightarrow> 'a \\<Rightarrow> 'a\"\n  assumes rep_nat_term_inj: \"rep_nat_term x = rep_nat_term y \\<Longrightarrow> x = y\"\n    and full_component: \"snd (rep_nat_term x) = i \\<Longrightarrow> (\\<exists>y. rep_nat_term y = (t, i))\"\n    and splus_term: \"rep_nat_term (splus x y) = pprod.splus (fst (rep_nat_term x)) (rep_nat_term y)\"\nbegin"], ["", "definition \"lex_comp_aux = (\\<lambda>x y. case comp_of_ord lex_pp (fst (rep_nat_term x)) (fst (rep_nat_term y)) of\n                                      Eq \\<Rightarrow> comparator_of (snd (rep_nat_term x)) (snd (rep_nat_term y)) | val \\<Rightarrow> val)\""], ["", "lemma full_componentE:\n  assumes \"snd (rep_nat_term x) = i\"\n  obtains y where \"rep_nat_term y = (t, i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        rep_nat_term y = (t, i) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        rep_nat_term y = (t, i) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  snd (rep_nat_term x) = i", "have \"\\<exists>y. rep_nat_term y = (t, i)\""], ["proof (prove)\nusing this:\n  snd (rep_nat_term x) = i\n\ngoal (1 subgoal):\n 1. \\<exists>y. rep_nat_term y = (t, i)", "by (rule full_component)"], ["proof (state)\nthis:\n  \\<exists>y. rep_nat_term y = (t, i)\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        rep_nat_term y = (t, i) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>y. rep_nat_term y = (t, i)", "obtain y where \"rep_nat_term y = (t, i)\""], ["proof (prove)\nusing this:\n  \\<exists>y. rep_nat_term y = (t, i)\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        rep_nat_term y = (t, i) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  rep_nat_term y = (t, i)\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        rep_nat_term y = (t, i) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  rep_nat_term y = (t, i)\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "class nat_pp_term = nat_term + zero + plus +\n  assumes rep_nat_term_zero: \"rep_nat_term 0 = (0, 0)\"\n    and splus_pp_term: \"splus = (+)\""], ["", "definition nat_term_comp :: \"'a::nat_term comparator \\<Rightarrow> bool\"\n  where \"nat_term_comp cmp \\<longleftrightarrow>\n              (\\<forall>u v. snd (rep_nat_term u) = snd (rep_nat_term v) \\<longrightarrow> fst (rep_nat_term u) = 0 \\<longrightarrow> cmp u v \\<noteq> Gt) \\<and>\n              (\\<forall>u v. fst (rep_nat_term u) = fst (rep_nat_term v) \\<longrightarrow> snd (rep_nat_term u) < snd (rep_nat_term v) \\<longrightarrow> cmp u v = Lt) \\<and>\n              (\\<forall>t u v. cmp u v = Lt \\<longrightarrow> cmp (splus t u) (splus t v) = Lt) \\<and>\n              (\\<forall>u v a b. fst (rep_nat_term u) = fst (rep_nat_term a) \\<longrightarrow> fst (rep_nat_term v) = fst (rep_nat_term b) \\<longrightarrow>\n                  snd (rep_nat_term u) = snd (rep_nat_term v) \\<longrightarrow> snd (rep_nat_term a) = snd (rep_nat_term b) \\<longrightarrow>\n                  cmp a b = Lt \\<longrightarrow> cmp u v = Lt)\""], ["", "lemma nat_term_compI:\n  assumes \"\\<And>u v. snd (rep_nat_term u) = snd (rep_nat_term v) \\<Longrightarrow> fst (rep_nat_term u) = 0 \\<Longrightarrow> cmp u v \\<noteq> Gt\"\n    and \"\\<And>u v. fst (rep_nat_term u) = fst (rep_nat_term v) \\<Longrightarrow> snd (rep_nat_term u) < snd (rep_nat_term v) \\<Longrightarrow> cmp u v = Lt\"\n    and \"\\<And>t u v. cmp u v = Lt \\<Longrightarrow> cmp (splus t u) (splus t v) = Lt\"\n    and \"\\<And>u v a b. fst (rep_nat_term u) = fst (rep_nat_term a) \\<Longrightarrow> fst (rep_nat_term v) = fst (rep_nat_term b) \\<Longrightarrow>\n                  snd (rep_nat_term u) = snd (rep_nat_term v) \\<Longrightarrow> snd (rep_nat_term a) = snd (rep_nat_term b) \\<Longrightarrow>\n                  cmp a b = Lt \\<Longrightarrow> cmp u v = Lt\"\n  shows \"nat_term_comp cmp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_term_comp cmp", "unfolding nat_term_comp_def fst_conv snd_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>u v.\n        snd (rep_nat_term u) = snd (rep_nat_term v) \\<longrightarrow>\n        fst (rep_nat_term u) = 0 \\<longrightarrow>\n        cmp u v \\<noteq> Gt) \\<and>\n    (\\<forall>u v.\n        fst (rep_nat_term u) = fst (rep_nat_term v) \\<longrightarrow>\n        snd (rep_nat_term u) < snd (rep_nat_term v) \\<longrightarrow>\n        cmp u v = Lt) \\<and>\n    (\\<forall>t u v.\n        cmp u v = Lt \\<longrightarrow>\n        cmp (splus t u) (splus t v) = Lt) \\<and>\n    (\\<forall>u v a b.\n        fst (rep_nat_term u) = fst (rep_nat_term a) \\<longrightarrow>\n        fst (rep_nat_term v) = fst (rep_nat_term b) \\<longrightarrow>\n        snd (rep_nat_term u) = snd (rep_nat_term v) \\<longrightarrow>\n        snd (rep_nat_term a) = snd (rep_nat_term b) \\<longrightarrow>\n        cmp a b = Lt \\<longrightarrow> cmp u v = Lt)", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>snd (rep_nat_term ?u) = snd (rep_nat_term ?v);\n   fst (rep_nat_term ?u) = 0\\<rbrakk>\n  \\<Longrightarrow> cmp ?u ?v \\<noteq> Gt\n  \\<lbrakk>fst (rep_nat_term ?u) = fst (rep_nat_term ?v);\n   snd (rep_nat_term ?u) < snd (rep_nat_term ?v)\\<rbrakk>\n  \\<Longrightarrow> cmp ?u ?v = Lt\n  cmp ?u ?v = Lt \\<Longrightarrow> cmp (splus ?t ?u) (splus ?t ?v) = Lt\n  \\<lbrakk>fst (rep_nat_term ?u) = fst (rep_nat_term ?a);\n   fst (rep_nat_term ?v) = fst (rep_nat_term ?b);\n   snd (rep_nat_term ?u) = snd (rep_nat_term ?v);\n   snd (rep_nat_term ?a) = snd (rep_nat_term ?b); cmp ?a ?b = Lt\\<rbrakk>\n  \\<Longrightarrow> cmp ?u ?v = Lt\n\ngoal (1 subgoal):\n 1. (\\<forall>u v.\n        snd (rep_nat_term u) = snd (rep_nat_term v) \\<longrightarrow>\n        fst (rep_nat_term u) = 0 \\<longrightarrow>\n        cmp u v \\<noteq> Gt) \\<and>\n    (\\<forall>u v.\n        fst (rep_nat_term u) = fst (rep_nat_term v) \\<longrightarrow>\n        snd (rep_nat_term u) < snd (rep_nat_term v) \\<longrightarrow>\n        cmp u v = Lt) \\<and>\n    (\\<forall>t u v.\n        cmp u v = Lt \\<longrightarrow>\n        cmp (splus t u) (splus t v) = Lt) \\<and>\n    (\\<forall>u v a b.\n        fst (rep_nat_term u) = fst (rep_nat_term a) \\<longrightarrow>\n        fst (rep_nat_term v) = fst (rep_nat_term b) \\<longrightarrow>\n        snd (rep_nat_term u) = snd (rep_nat_term v) \\<longrightarrow>\n        snd (rep_nat_term a) = snd (rep_nat_term b) \\<longrightarrow>\n        cmp a b = Lt \\<longrightarrow> cmp u v = Lt)", "by blast"], ["", "lemma nat_term_compD1:\n  assumes \"nat_term_comp cmp\" and \"snd (rep_nat_term u) = snd (rep_nat_term v)\" and \"fst (rep_nat_term u) = 0\"\n  shows \"cmp u v \\<noteq> Gt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmp u v \\<noteq> Gt", "using assms"], ["proof (prove)\nusing this:\n  nat_term_comp cmp\n  snd (rep_nat_term u) = snd (rep_nat_term v)\n  fst (rep_nat_term u) = 0\n\ngoal (1 subgoal):\n 1. cmp u v \\<noteq> Gt", "unfolding nat_term_comp_def fst_conv"], ["proof (prove)\nusing this:\n  (\\<forall>u v.\n      snd (rep_nat_term u) = snd (rep_nat_term v) \\<longrightarrow>\n      fst (rep_nat_term u) = 0 \\<longrightarrow> cmp u v \\<noteq> Gt) \\<and>\n  (\\<forall>u v.\n      fst (rep_nat_term u) = fst (rep_nat_term v) \\<longrightarrow>\n      snd (rep_nat_term u) < snd (rep_nat_term v) \\<longrightarrow>\n      cmp u v = Lt) \\<and>\n  (\\<forall>t u v.\n      cmp u v = Lt \\<longrightarrow>\n      cmp (splus t u) (splus t v) = Lt) \\<and>\n  (\\<forall>u v a b.\n      fst (rep_nat_term u) = fst (rep_nat_term a) \\<longrightarrow>\n      fst (rep_nat_term v) = fst (rep_nat_term b) \\<longrightarrow>\n      snd (rep_nat_term u) = snd (rep_nat_term v) \\<longrightarrow>\n      snd (rep_nat_term a) = snd (rep_nat_term b) \\<longrightarrow>\n      cmp a b = Lt \\<longrightarrow> cmp u v = Lt)\n  snd (rep_nat_term u) = snd (rep_nat_term v)\n  fst (rep_nat_term u) = 0\n\ngoal (1 subgoal):\n 1. cmp u v \\<noteq> Gt", "by blast"], ["", "lemma nat_term_compD2:\n  assumes \"nat_term_comp cmp\" and \"fst (rep_nat_term u) = fst (rep_nat_term v)\" and \"snd (rep_nat_term u) < snd (rep_nat_term v)\"\n  shows \"cmp u v = Lt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmp u v = Lt", "using assms"], ["proof (prove)\nusing this:\n  nat_term_comp cmp\n  fst (rep_nat_term u) = fst (rep_nat_term v)\n  snd (rep_nat_term u) < snd (rep_nat_term v)\n\ngoal (1 subgoal):\n 1. cmp u v = Lt", "unfolding nat_term_comp_def fst_conv snd_conv"], ["proof (prove)\nusing this:\n  (\\<forall>u v.\n      snd (rep_nat_term u) = snd (rep_nat_term v) \\<longrightarrow>\n      fst (rep_nat_term u) = 0 \\<longrightarrow> cmp u v \\<noteq> Gt) \\<and>\n  (\\<forall>u v.\n      fst (rep_nat_term u) = fst (rep_nat_term v) \\<longrightarrow>\n      snd (rep_nat_term u) < snd (rep_nat_term v) \\<longrightarrow>\n      cmp u v = Lt) \\<and>\n  (\\<forall>t u v.\n      cmp u v = Lt \\<longrightarrow>\n      cmp (splus t u) (splus t v) = Lt) \\<and>\n  (\\<forall>u v a b.\n      fst (rep_nat_term u) = fst (rep_nat_term a) \\<longrightarrow>\n      fst (rep_nat_term v) = fst (rep_nat_term b) \\<longrightarrow>\n      snd (rep_nat_term u) = snd (rep_nat_term v) \\<longrightarrow>\n      snd (rep_nat_term a) = snd (rep_nat_term b) \\<longrightarrow>\n      cmp a b = Lt \\<longrightarrow> cmp u v = Lt)\n  fst (rep_nat_term u) = fst (rep_nat_term v)\n  snd (rep_nat_term u) < snd (rep_nat_term v)\n\ngoal (1 subgoal):\n 1. cmp u v = Lt", "by blast"], ["", "lemma nat_term_compD3:\n  assumes \"nat_term_comp cmp\" and \"cmp u v = Lt\"\n  shows \"cmp (splus t u) (splus t v) = Lt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmp (splus t u) (splus t v) = Lt", "using assms"], ["proof (prove)\nusing this:\n  nat_term_comp cmp\n  cmp u v = Lt\n\ngoal (1 subgoal):\n 1. cmp (splus t u) (splus t v) = Lt", "unfolding nat_term_comp_def snd_conv"], ["proof (prove)\nusing this:\n  (\\<forall>u v.\n      snd (rep_nat_term u) = snd (rep_nat_term v) \\<longrightarrow>\n      fst (rep_nat_term u) = 0 \\<longrightarrow> cmp u v \\<noteq> Gt) \\<and>\n  (\\<forall>u v.\n      fst (rep_nat_term u) = fst (rep_nat_term v) \\<longrightarrow>\n      snd (rep_nat_term u) < snd (rep_nat_term v) \\<longrightarrow>\n      cmp u v = Lt) \\<and>\n  (\\<forall>t u v.\n      cmp u v = Lt \\<longrightarrow>\n      cmp (splus t u) (splus t v) = Lt) \\<and>\n  (\\<forall>u v a b.\n      fst (rep_nat_term u) = fst (rep_nat_term a) \\<longrightarrow>\n      fst (rep_nat_term v) = fst (rep_nat_term b) \\<longrightarrow>\n      snd (rep_nat_term u) = snd (rep_nat_term v) \\<longrightarrow>\n      snd (rep_nat_term a) = snd (rep_nat_term b) \\<longrightarrow>\n      cmp a b = Lt \\<longrightarrow> cmp u v = Lt)\n  cmp u v = Lt\n\ngoal (1 subgoal):\n 1. cmp (splus t u) (splus t v) = Lt", "by blast"], ["", "lemma nat_term_compD4:\n  assumes \"nat_term_comp cmp\" and \"fst (rep_nat_term u) = fst (rep_nat_term a)\"\n    and \"fst (rep_nat_term v) = fst (rep_nat_term b)\" and \"snd (rep_nat_term u) = snd (rep_nat_term v)\"\n    and \"snd (rep_nat_term a) = snd (rep_nat_term b)\" and \"cmp a b = Lt\"\n  shows \"cmp u v = Lt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmp u v = Lt", "using assms"], ["proof (prove)\nusing this:\n  nat_term_comp cmp\n  fst (rep_nat_term u) = fst (rep_nat_term a)\n  fst (rep_nat_term v) = fst (rep_nat_term b)\n  snd (rep_nat_term u) = snd (rep_nat_term v)\n  snd (rep_nat_term a) = snd (rep_nat_term b)\n  cmp a b = Lt\n\ngoal (1 subgoal):\n 1. cmp u v = Lt", "unfolding nat_term_comp_def snd_conv"], ["proof (prove)\nusing this:\n  (\\<forall>u v.\n      snd (rep_nat_term u) = snd (rep_nat_term v) \\<longrightarrow>\n      fst (rep_nat_term u) = 0 \\<longrightarrow> cmp u v \\<noteq> Gt) \\<and>\n  (\\<forall>u v.\n      fst (rep_nat_term u) = fst (rep_nat_term v) \\<longrightarrow>\n      snd (rep_nat_term u) < snd (rep_nat_term v) \\<longrightarrow>\n      cmp u v = Lt) \\<and>\n  (\\<forall>t u v.\n      cmp u v = Lt \\<longrightarrow>\n      cmp (splus t u) (splus t v) = Lt) \\<and>\n  (\\<forall>u v a b.\n      fst (rep_nat_term u) = fst (rep_nat_term a) \\<longrightarrow>\n      fst (rep_nat_term v) = fst (rep_nat_term b) \\<longrightarrow>\n      snd (rep_nat_term u) = snd (rep_nat_term v) \\<longrightarrow>\n      snd (rep_nat_term a) = snd (rep_nat_term b) \\<longrightarrow>\n      cmp a b = Lt \\<longrightarrow> cmp u v = Lt)\n  fst (rep_nat_term u) = fst (rep_nat_term a)\n  fst (rep_nat_term v) = fst (rep_nat_term b)\n  snd (rep_nat_term u) = snd (rep_nat_term v)\n  snd (rep_nat_term a) = snd (rep_nat_term b)\n  cmp a b = Lt\n\ngoal (1 subgoal):\n 1. cmp u v = Lt", "by blast"], ["", "lemma nat_term_compD1':\n  assumes \"comparator cmp\" and \"nat_term_comp cmp\" and \"snd (rep_nat_term u) \\<le> snd (rep_nat_term v)\"\n    and \"fst (rep_nat_term u) = 0\"\n  shows \"cmp u v \\<noteq> Gt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmp u v \\<noteq> Gt", "proof (cases \"snd (rep_nat_term u) = snd (rep_nat_term v)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. snd (rep_nat_term u) = snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt\n 2. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "case True"], ["proof (state)\nthis:\n  snd (rep_nat_term u) = snd (rep_nat_term v)\n\ngoal (2 subgoals):\n 1. snd (rep_nat_term u) = snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt\n 2. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "with assms(2)"], ["proof (chain)\npicking this:\n  nat_term_comp cmp\n  snd (rep_nat_term u) = snd (rep_nat_term v)", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_term_comp cmp\n  snd (rep_nat_term u) = snd (rep_nat_term v)\n\ngoal (1 subgoal):\n 1. cmp u v \\<noteq> Gt", "using assms(4)"], ["proof (prove)\nusing this:\n  nat_term_comp cmp\n  snd (rep_nat_term u) = snd (rep_nat_term v)\n  fst (rep_nat_term u) = 0\n\ngoal (1 subgoal):\n 1. cmp u v \\<noteq> Gt", "by (rule nat_term_compD1)"], ["proof (state)\nthis:\n  cmp u v \\<noteq> Gt\n\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "from assms(1)"], ["proof (chain)\npicking this:\n  comparator cmp", "interpret cmp: comparator cmp"], ["proof (prove)\nusing this:\n  comparator cmp\n\ngoal (1 subgoal):\n 1. comparator cmp", "."], ["proof (state)\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "case False"], ["proof (state)\nthis:\n  snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v)\n\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "with assms(3)"], ["proof (chain)\npicking this:\n  snd (rep_nat_term u) \\<le> snd (rep_nat_term v)\n  snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v)", "have a: \"snd (rep_nat_term u) < snd (rep_nat_term v)\""], ["proof (prove)\nusing this:\n  snd (rep_nat_term u) \\<le> snd (rep_nat_term v)\n  snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v)\n\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) < snd (rep_nat_term v)", "by simp"], ["proof (state)\nthis:\n  snd (rep_nat_term u) < snd (rep_nat_term v)\n\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "from refl"], ["proof (chain)\npicking this:\n  ?t = ?t", "obtain w::'a where eq: \"rep_nat_term w = (0, snd (rep_nat_term v))\""], ["proof (prove)\nusing this:\n  ?t = ?t\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        rep_nat_term w = (0, snd (rep_nat_term v)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule full_componentE)"], ["proof (state)\nthis:\n  rep_nat_term w = (0, snd (rep_nat_term v))\n\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "have \"cmp u w = Lt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmp u w = Lt", "by (rule nat_term_compD2, fact assms(2), simp_all add: eq assms(4) a)"], ["proof (state)\nthis:\n  cmp u w = Lt\n\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "moreover"], ["proof (state)\nthis:\n  cmp u w = Lt\n\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "have \"cmp w v \\<noteq> Gt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmp w v \\<noteq> Gt", "by (rule nat_term_compD1, fact assms(2), simp_all add: eq)"], ["proof (state)\nthis:\n  cmp w v \\<noteq> Gt\n\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "ultimately"], ["proof (chain)\npicking this:\n  cmp u w = Lt\n  cmp w v \\<noteq> Gt", "show \"cmp u v \\<noteq> Gt\""], ["proof (prove)\nusing this:\n  cmp u w = Lt\n  cmp w v \\<noteq> Gt\n\ngoal (1 subgoal):\n 1. cmp u v \\<noteq> Gt", "by (simp add: cmp.nGt_le_conv cmp.Lt_lt_conv)"], ["proof (state)\nthis:\n  cmp u v \\<noteq> Gt\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_term_compD4':\n  assumes \"comparator cmp\" and \"nat_term_comp cmp\" and \"fst (rep_nat_term u) = fst (rep_nat_term a)\"\n    and \"fst (rep_nat_term v) = fst (rep_nat_term b)\" and \"snd (rep_nat_term u) = snd (rep_nat_term v)\"\n    and \"snd (rep_nat_term a) = snd (rep_nat_term b)\"\n  shows \"cmp u v = cmp a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmp u v = cmp a b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cmp u v = cmp a b", "from assms(1)"], ["proof (chain)\npicking this:\n  comparator cmp", "interpret cmp: comparator cmp"], ["proof (prove)\nusing this:\n  comparator cmp\n\ngoal (1 subgoal):\n 1. comparator cmp", "."], ["proof (state)\ngoal (1 subgoal):\n 1. cmp u v = cmp a b", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmp u v = cmp a b", "proof (cases \"cmp a b\")"], ["proof (state)\ngoal (3 subgoals):\n 1. cmp a b = Eq \\<Longrightarrow> cmp u v = cmp a b\n 2. cmp a b = Lt \\<Longrightarrow> cmp u v = cmp a b\n 3. cmp a b = Gt \\<Longrightarrow> cmp u v = cmp a b", "case Eq"], ["proof (state)\nthis:\n  cmp a b = Eq\n\ngoal (3 subgoals):\n 1. cmp a b = Eq \\<Longrightarrow> cmp u v = cmp a b\n 2. cmp a b = Lt \\<Longrightarrow> cmp u v = cmp a b\n 3. cmp a b = Gt \\<Longrightarrow> cmp u v = cmp a b", "hence \"fst (rep_nat_term u) = fst (rep_nat_term v)\""], ["proof (prove)\nusing this:\n  cmp a b = Eq\n\ngoal (1 subgoal):\n 1. fst (rep_nat_term u) = fst (rep_nat_term v)", "by (simp add: cmp.eq assms(3, 4))"], ["proof (state)\nthis:\n  fst (rep_nat_term u) = fst (rep_nat_term v)\n\ngoal (3 subgoals):\n 1. cmp a b = Eq \\<Longrightarrow> cmp u v = cmp a b\n 2. cmp a b = Lt \\<Longrightarrow> cmp u v = cmp a b\n 3. cmp a b = Gt \\<Longrightarrow> cmp u v = cmp a b", "hence \"rep_nat_term u = rep_nat_term v\""], ["proof (prove)\nusing this:\n  fst (rep_nat_term u) = fst (rep_nat_term v)\n\ngoal (1 subgoal):\n 1. rep_nat_term u = rep_nat_term v", "using assms(5)"], ["proof (prove)\nusing this:\n  fst (rep_nat_term u) = fst (rep_nat_term v)\n  snd (rep_nat_term u) = snd (rep_nat_term v)\n\ngoal (1 subgoal):\n 1. rep_nat_term u = rep_nat_term v", "by (rule prod_eqI)"], ["proof (state)\nthis:\n  rep_nat_term u = rep_nat_term v\n\ngoal (3 subgoals):\n 1. cmp a b = Eq \\<Longrightarrow> cmp u v = cmp a b\n 2. cmp a b = Lt \\<Longrightarrow> cmp u v = cmp a b\n 3. cmp a b = Gt \\<Longrightarrow> cmp u v = cmp a b", "hence \"u = v\""], ["proof (prove)\nusing this:\n  rep_nat_term u = rep_nat_term v\n\ngoal (1 subgoal):\n 1. u = v", "by (rule rep_nat_term_inj)"], ["proof (state)\nthis:\n  u = v\n\ngoal (3 subgoals):\n 1. cmp a b = Eq \\<Longrightarrow> cmp u v = cmp a b\n 2. cmp a b = Lt \\<Longrightarrow> cmp u v = cmp a b\n 3. cmp a b = Gt \\<Longrightarrow> cmp u v = cmp a b", "thus ?thesis"], ["proof (prove)\nusing this:\n  u = v\n\ngoal (1 subgoal):\n 1. cmp u v = cmp a b", "by (simp add: Eq)"], ["proof (state)\nthis:\n  cmp u v = cmp a b\n\ngoal (2 subgoals):\n 1. cmp a b = Lt \\<Longrightarrow> cmp u v = cmp a b\n 2. cmp a b = Gt \\<Longrightarrow> cmp u v = cmp a b", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. cmp a b = Lt \\<Longrightarrow> cmp u v = cmp a b\n 2. cmp a b = Gt \\<Longrightarrow> cmp u v = cmp a b", "case Lt"], ["proof (state)\nthis:\n  cmp a b = Lt\n\ngoal (2 subgoals):\n 1. cmp a b = Lt \\<Longrightarrow> cmp u v = cmp a b\n 2. cmp a b = Gt \\<Longrightarrow> cmp u v = cmp a b", "with assms(2, 3, 4, 5, 6)"], ["proof (chain)\npicking this:\n  nat_term_comp cmp\n  fst (rep_nat_term u) = fst (rep_nat_term a)\n  fst (rep_nat_term v) = fst (rep_nat_term b)\n  snd (rep_nat_term u) = snd (rep_nat_term v)\n  snd (rep_nat_term a) = snd (rep_nat_term b)\n  cmp a b = Lt", "have \"cmp u v = Lt\""], ["proof (prove)\nusing this:\n  nat_term_comp cmp\n  fst (rep_nat_term u) = fst (rep_nat_term a)\n  fst (rep_nat_term v) = fst (rep_nat_term b)\n  snd (rep_nat_term u) = snd (rep_nat_term v)\n  snd (rep_nat_term a) = snd (rep_nat_term b)\n  cmp a b = Lt\n\ngoal (1 subgoal):\n 1. cmp u v = Lt", "by (rule nat_term_compD4)"], ["proof (state)\nthis:\n  cmp u v = Lt\n\ngoal (2 subgoals):\n 1. cmp a b = Lt \\<Longrightarrow> cmp u v = cmp a b\n 2. cmp a b = Gt \\<Longrightarrow> cmp u v = cmp a b", "thus ?thesis"], ["proof (prove)\nusing this:\n  cmp u v = Lt\n\ngoal (1 subgoal):\n 1. cmp u v = cmp a b", "by (simp add: Lt)"], ["proof (state)\nthis:\n  cmp u v = cmp a b\n\ngoal (1 subgoal):\n 1. cmp a b = Gt \\<Longrightarrow> cmp u v = cmp a b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. cmp a b = Gt \\<Longrightarrow> cmp u v = cmp a b", "case Gt"], ["proof (state)\nthis:\n  cmp a b = Gt\n\ngoal (1 subgoal):\n 1. cmp a b = Gt \\<Longrightarrow> cmp u v = cmp a b", "hence \"cmp b a = Lt\""], ["proof (prove)\nusing this:\n  cmp a b = Gt\n\ngoal (1 subgoal):\n 1. cmp b a = Lt", "by (simp only: cmp.Gt_lt_conv cmp.Lt_lt_conv)"], ["proof (state)\nthis:\n  cmp b a = Lt\n\ngoal (1 subgoal):\n 1. cmp a b = Gt \\<Longrightarrow> cmp u v = cmp a b", "with assms(2, 4, 3) assms(5, 6)[symmetric]"], ["proof (chain)\npicking this:\n  nat_term_comp cmp\n  fst (rep_nat_term v) = fst (rep_nat_term b)\n  fst (rep_nat_term u) = fst (rep_nat_term a)\n  snd (rep_nat_term v) = snd (rep_nat_term u)\n  snd (rep_nat_term b) = snd (rep_nat_term a)\n  cmp b a = Lt", "have \"cmp v u = Lt\""], ["proof (prove)\nusing this:\n  nat_term_comp cmp\n  fst (rep_nat_term v) = fst (rep_nat_term b)\n  fst (rep_nat_term u) = fst (rep_nat_term a)\n  snd (rep_nat_term v) = snd (rep_nat_term u)\n  snd (rep_nat_term b) = snd (rep_nat_term a)\n  cmp b a = Lt\n\ngoal (1 subgoal):\n 1. cmp v u = Lt", "by (rule nat_term_compD4)"], ["proof (state)\nthis:\n  cmp v u = Lt\n\ngoal (1 subgoal):\n 1. cmp a b = Gt \\<Longrightarrow> cmp u v = cmp a b", "hence \"cmp u v = Gt\""], ["proof (prove)\nusing this:\n  cmp v u = Lt\n\ngoal (1 subgoal):\n 1. cmp u v = Gt", "by (simp only: cmp.Gt_lt_conv cmp.Lt_lt_conv)"], ["proof (state)\nthis:\n  cmp u v = Gt\n\ngoal (1 subgoal):\n 1. cmp a b = Gt \\<Longrightarrow> cmp u v = cmp a b", "thus ?thesis"], ["proof (prove)\nusing this:\n  cmp u v = Gt\n\ngoal (1 subgoal):\n 1. cmp u v = cmp a b", "by (simp add: Gt)"], ["proof (state)\nthis:\n  cmp u v = cmp a b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cmp u v = cmp a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_term_compD4'':\n  assumes \"comparator cmp\" and \"nat_term_comp cmp\" and \"fst (rep_nat_term u) = fst (rep_nat_term a)\"\n    and \"fst (rep_nat_term v) = fst (rep_nat_term b)\" and \"snd (rep_nat_term u) \\<le> snd (rep_nat_term v)\"\n    and \"snd (rep_nat_term a) = snd (rep_nat_term b)\" and \"cmp a b \\<noteq> Gt\"\n  shows \"cmp u v \\<noteq> Gt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmp u v \\<noteq> Gt", "proof (cases \"snd (rep_nat_term u) = snd (rep_nat_term v)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. snd (rep_nat_term u) = snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt\n 2. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "case True"], ["proof (state)\nthis:\n  snd (rep_nat_term u) = snd (rep_nat_term v)\n\ngoal (2 subgoals):\n 1. snd (rep_nat_term u) = snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt\n 2. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "with assms(1, 2, 3, 4)"], ["proof (chain)\npicking this:\n  comparator cmp\n  nat_term_comp cmp\n  fst (rep_nat_term u) = fst (rep_nat_term a)\n  fst (rep_nat_term v) = fst (rep_nat_term b)\n  snd (rep_nat_term u) = snd (rep_nat_term v)", "have \"cmp u v = cmp a b\""], ["proof (prove)\nusing this:\n  comparator cmp\n  nat_term_comp cmp\n  fst (rep_nat_term u) = fst (rep_nat_term a)\n  fst (rep_nat_term v) = fst (rep_nat_term b)\n  snd (rep_nat_term u) = snd (rep_nat_term v)\n\ngoal (1 subgoal):\n 1. cmp u v = cmp a b", "using assms(6)"], ["proof (prove)\nusing this:\n  comparator cmp\n  nat_term_comp cmp\n  fst (rep_nat_term u) = fst (rep_nat_term a)\n  fst (rep_nat_term v) = fst (rep_nat_term b)\n  snd (rep_nat_term u) = snd (rep_nat_term v)\n  snd (rep_nat_term a) = snd (rep_nat_term b)\n\ngoal (1 subgoal):\n 1. cmp u v = cmp a b", "by (rule nat_term_compD4')"], ["proof (state)\nthis:\n  cmp u v = cmp a b\n\ngoal (2 subgoals):\n 1. snd (rep_nat_term u) = snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt\n 2. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "thus ?thesis"], ["proof (prove)\nusing this:\n  cmp u v = cmp a b\n\ngoal (1 subgoal):\n 1. cmp u v \\<noteq> Gt", "using assms(7)"], ["proof (prove)\nusing this:\n  cmp u v = cmp a b\n  cmp a b \\<noteq> Gt\n\ngoal (1 subgoal):\n 1. cmp u v \\<noteq> Gt", "by simp"], ["proof (state)\nthis:\n  cmp u v \\<noteq> Gt\n\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "case False"], ["proof (state)\nthis:\n  snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v)\n\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "from assms(1)"], ["proof (chain)\npicking this:\n  comparator cmp", "interpret cmp: comparator cmp"], ["proof (prove)\nusing this:\n  comparator cmp\n\ngoal (1 subgoal):\n 1. comparator cmp", "."], ["proof (state)\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "from refl"], ["proof (chain)\npicking this:\n  ?t = ?t", "obtain w::'a where w: \"rep_nat_term w = (fst (rep_nat_term u), snd (rep_nat_term v))\""], ["proof (prove)\nusing this:\n  ?t = ?t\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        rep_nat_term w =\n        (fst (rep_nat_term u), snd (rep_nat_term v)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule full_componentE)"], ["proof (state)\nthis:\n  rep_nat_term w = (fst (rep_nat_term u), snd (rep_nat_term v))\n\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "have 1: \"fst (rep_nat_term w) = fst (rep_nat_term a)\" and 2: \"snd (rep_nat_term w) = snd (rep_nat_term v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (rep_nat_term w) = fst (rep_nat_term a) &&&\n    snd (rep_nat_term w) = snd (rep_nat_term v)", "by (simp_all add: w assms(3))"], ["proof (state)\nthis:\n  fst (rep_nat_term w) = fst (rep_nat_term a)\n  snd (rep_nat_term w) = snd (rep_nat_term v)\n\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "from False assms(5)"], ["proof (chain)\npicking this:\n  snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v)\n  snd (rep_nat_term u) \\<le> snd (rep_nat_term v)", "have *: \"snd (rep_nat_term u) < snd (rep_nat_term v)\""], ["proof (prove)\nusing this:\n  snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v)\n  snd (rep_nat_term u) \\<le> snd (rep_nat_term v)\n\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) < snd (rep_nat_term v)", "by simp"], ["proof (state)\nthis:\n  snd (rep_nat_term u) < snd (rep_nat_term v)\n\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "have \"cmp u w = Lt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmp u w = Lt", "by (rule nat_term_compD2, fact assms(2), simp_all add: * w)"], ["proof (state)\nthis:\n  cmp u w = Lt\n\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "moreover"], ["proof (state)\nthis:\n  cmp u w = Lt\n\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "from assms(1, 2) 1 assms(4) 2 assms(6)"], ["proof (chain)\npicking this:\n  comparator cmp\n  nat_term_comp cmp\n  fst (rep_nat_term w) = fst (rep_nat_term a)\n  fst (rep_nat_term v) = fst (rep_nat_term b)\n  snd (rep_nat_term w) = snd (rep_nat_term v)\n  snd (rep_nat_term a) = snd (rep_nat_term b)", "have \"cmp w v = cmp a b\""], ["proof (prove)\nusing this:\n  comparator cmp\n  nat_term_comp cmp\n  fst (rep_nat_term w) = fst (rep_nat_term a)\n  fst (rep_nat_term v) = fst (rep_nat_term b)\n  snd (rep_nat_term w) = snd (rep_nat_term v)\n  snd (rep_nat_term a) = snd (rep_nat_term b)\n\ngoal (1 subgoal):\n 1. cmp w v = cmp a b", "by (rule nat_term_compD4')"], ["proof (state)\nthis:\n  cmp w v = cmp a b\n\ngoal (1 subgoal):\n 1. snd (rep_nat_term u) \\<noteq> snd (rep_nat_term v) \\<Longrightarrow>\n    cmp u v \\<noteq> Gt", "ultimately"], ["proof (chain)\npicking this:\n  cmp u w = Lt\n  cmp w v = cmp a b", "show ?thesis"], ["proof (prove)\nusing this:\n  cmp u w = Lt\n  cmp w v = cmp a b\n\ngoal (1 subgoal):\n 1. cmp u v \\<noteq> Gt", "using assms(7)"], ["proof (prove)\nusing this:\n  cmp u w = Lt\n  cmp w v = cmp a b\n  cmp a b \\<noteq> Gt\n\ngoal (1 subgoal):\n 1. cmp u v \\<noteq> Gt", "by (metis cmp.nGt_le_conv cmp.nLt_le_conv cmp.trans)"], ["proof (state)\nthis:\n  cmp u v \\<noteq> Gt\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma comparator_lex_comp_aux: \"comparator (lex_comp_aux::'a::nat_term comparator)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator lex_comp_aux", "unfolding lex_comp_aux_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator\n     (\\<lambda>x y.\n         case comp_of_ord lex_pp (fst (rep_nat_term x))\n               (fst (rep_nat_term y)) of\n         Eq \\<Rightarrow>\n           comparator_of (snd (rep_nat_term x)) (snd (rep_nat_term y))\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt)", "proof (rule comparator_composition)"], ["proof (state)\ngoal (2 subgoals):\n 1. comparator\n     (\\<lambda>a aa.\n         case comp_of_ord lex_pp (fst a) (fst aa) of\n         Eq \\<Rightarrow> comparator_of (snd a) (snd aa)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt)\n 2. inj rep_nat_term", "from lex_pp_antisym"], ["proof (chain)\npicking this:\n  \\<lbrakk>lex_pp ?s ?t; lex_pp ?t ?s\\<rbrakk> \\<Longrightarrow> ?s = ?t", "have as: \"antisymp lex_pp\""], ["proof (prove)\nusing this:\n  \\<lbrakk>lex_pp ?s ?t; lex_pp ?t ?s\\<rbrakk> \\<Longrightarrow> ?s = ?t\n\ngoal (1 subgoal):\n 1. antisymp lex_pp", "by (rule antisympI)"], ["proof (state)\nthis:\n  antisymp lex_pp\n\ngoal (2 subgoals):\n 1. comparator\n     (\\<lambda>a aa.\n         case comp_of_ord lex_pp (fst a) (fst aa) of\n         Eq \\<Rightarrow> comparator_of (snd a) (snd aa)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt)\n 2. inj rep_nat_term", "have \"comparator (comp_of_ord (lex_pp::(nat, nat) pp \\<Rightarrow> _))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator (comp_of_ord lex_pp)", "unfolding comp_of_ord_eq_comp_of_ords[OF as]"], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator (comp_of_ords lex_pp (strict lex_pp))", "by (rule comp_of_ords, unfold_locales,\n        auto simp: lex_pp_refl intro: lex_pp_trans lex_pp_lin' elim!: lex_pp_antisym)"], ["proof (state)\nthis:\n  comparator (comp_of_ord lex_pp)\n\ngoal (2 subgoals):\n 1. comparator\n     (\\<lambda>a aa.\n         case comp_of_ord lex_pp (fst a) (fst aa) of\n         Eq \\<Rightarrow> comparator_of (snd a) (snd aa)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt)\n 2. inj rep_nat_term", "thus \"comparator (\\<lambda>x y::((nat, nat) pp \\<times> nat). case comp_of_ord lex_pp (fst x) (fst y) of\n                                          Eq \\<Rightarrow> comparator_of (snd x) (snd y) | val \\<Rightarrow> val)\""], ["proof (prove)\nusing this:\n  comparator (comp_of_ord lex_pp)\n\ngoal (1 subgoal):\n 1. comparator\n     (\\<lambda>x y.\n         case comp_of_ord lex_pp (fst x) (fst y) of\n         Eq \\<Rightarrow> comparator_of (snd x) (snd y)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt)", "using comparator_of prod_eqI"], ["proof (prove)\nusing this:\n  comparator (comp_of_ord lex_pp)\n  comparator comparator_of\n  \\<lbrakk>fst ?p = fst ?q; snd ?p = snd ?q\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q\n\ngoal (1 subgoal):\n 1. comparator\n     (\\<lambda>x y.\n         case comp_of_ord lex_pp (fst x) (fst y) of\n         Eq \\<Rightarrow> comparator_of (snd x) (snd y)\n         | Lt \\<Rightarrow> Lt | Gt \\<Rightarrow> Gt)", "by (rule comparator_lexicographic)"], ["proof (state)\nthis:\n  comparator\n   (\\<lambda>x y.\n       case comp_of_ord lex_pp (fst x) (fst y) of\n       Eq \\<Rightarrow> comparator_of (snd x) (snd y) | Lt \\<Rightarrow> Lt\n       | Gt \\<Rightarrow> Gt)\n\ngoal (1 subgoal):\n 1. inj rep_nat_term", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. inj rep_nat_term", "from rep_nat_term_inj"], ["proof (chain)\npicking this:\n  rep_nat_term ?x = rep_nat_term ?y \\<Longrightarrow> ?x = ?y", "show \"inj rep_nat_term\""], ["proof (prove)\nusing this:\n  rep_nat_term ?x = rep_nat_term ?y \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. inj rep_nat_term", "by (rule injI)"], ["proof (state)\nthis:\n  inj rep_nat_term\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_term_comp_lex_comp_aux: \"nat_term_comp (lex_comp_aux::'a::nat_term comparator)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_term_comp lex_comp_aux", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_term_comp lex_comp_aux", "from lex_pp_antisym"], ["proof (chain)\npicking this:\n  \\<lbrakk>lex_pp ?s ?t; lex_pp ?t ?s\\<rbrakk> \\<Longrightarrow> ?s = ?t", "have as: \"antisymp lex_pp\""], ["proof (prove)\nusing this:\n  \\<lbrakk>lex_pp ?s ?t; lex_pp ?t ?s\\<rbrakk> \\<Longrightarrow> ?s = ?t\n\ngoal (1 subgoal):\n 1. antisymp lex_pp", "by (rule antisympI)"], ["proof (state)\nthis:\n  antisymp lex_pp\n\ngoal (1 subgoal):\n 1. nat_term_comp lex_comp_aux", "interpret lex: comparator \"comp_of_ord (lex_pp::(nat, nat) pp \\<Rightarrow> _)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator (comp_of_ord lex_pp)", "unfolding comp_of_ord_eq_comp_of_ords[OF as]"], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator (comp_of_ords lex_pp (strict lex_pp))", "by (rule comp_of_ords, unfold_locales,\n        auto simp: lex_pp_refl intro: lex_pp_trans lex_pp_lin' elim!: lex_pp_antisym)"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_term_comp lex_comp_aux", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_term_comp lex_comp_aux", "proof (rule nat_term_compI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>u v.\n       \\<lbrakk>snd (rep_nat_term u) = snd (rep_nat_term v);\n        fst (rep_nat_term u) = 0\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v \\<noteq> Gt\n 2. \\<And>u v.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term v);\n        snd (rep_nat_term u) < snd (rep_nat_term v)\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt\n 3. \\<And>t u v.\n       lex_comp_aux u v = Lt \\<Longrightarrow>\n       lex_comp_aux (splus t u) (splus t v) = Lt\n 4. \\<And>u v a b.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term a);\n        fst (rep_nat_term v) = fst (rep_nat_term b);\n        snd (rep_nat_term u) = snd (rep_nat_term v);\n        snd (rep_nat_term a) = snd (rep_nat_term b);\n        lex_comp_aux a b = Lt\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt", "fix u v :: 'a"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>u v.\n       \\<lbrakk>snd (rep_nat_term u) = snd (rep_nat_term v);\n        fst (rep_nat_term u) = 0\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v \\<noteq> Gt\n 2. \\<And>u v.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term v);\n        snd (rep_nat_term u) < snd (rep_nat_term v)\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt\n 3. \\<And>t u v.\n       lex_comp_aux u v = Lt \\<Longrightarrow>\n       lex_comp_aux (splus t u) (splus t v) = Lt\n 4. \\<And>u v a b.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term a);\n        fst (rep_nat_term v) = fst (rep_nat_term b);\n        snd (rep_nat_term u) = snd (rep_nat_term v);\n        snd (rep_nat_term a) = snd (rep_nat_term b);\n        lex_comp_aux a b = Lt\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt", "assume 1: \"snd (rep_nat_term u) = snd (rep_nat_term v)\" and 2: \"fst (rep_nat_term u) = 0\""], ["proof (state)\nthis:\n  snd (rep_nat_term u) = snd (rep_nat_term v)\n  fst (rep_nat_term u) = 0\n\ngoal (4 subgoals):\n 1. \\<And>u v.\n       \\<lbrakk>snd (rep_nat_term u) = snd (rep_nat_term v);\n        fst (rep_nat_term u) = 0\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v \\<noteq> Gt\n 2. \\<And>u v.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term v);\n        snd (rep_nat_term u) < snd (rep_nat_term v)\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt\n 3. \\<And>t u v.\n       lex_comp_aux u v = Lt \\<Longrightarrow>\n       lex_comp_aux (splus t u) (splus t v) = Lt\n 4. \\<And>u v a b.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term a);\n        fst (rep_nat_term v) = fst (rep_nat_term b);\n        snd (rep_nat_term u) = snd (rep_nat_term v);\n        snd (rep_nat_term a) = snd (rep_nat_term b);\n        lex_comp_aux a b = Lt\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt", "show \"lex_comp_aux u v \\<noteq> Gt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lex_comp_aux u v \\<noteq> Gt", "by (simp add: lex_comp_aux_def 1 2 split: order.split, simp add: comp_of_ord_def lex_pp_zero_min)"], ["proof (state)\nthis:\n  lex_comp_aux u v \\<noteq> Gt\n\ngoal (3 subgoals):\n 1. \\<And>u v.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term v);\n        snd (rep_nat_term u) < snd (rep_nat_term v)\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt\n 2. \\<And>t u v.\n       lex_comp_aux u v = Lt \\<Longrightarrow>\n       lex_comp_aux (splus t u) (splus t v) = Lt\n 3. \\<And>u v a b.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term a);\n        fst (rep_nat_term v) = fst (rep_nat_term b);\n        snd (rep_nat_term u) = snd (rep_nat_term v);\n        snd (rep_nat_term a) = snd (rep_nat_term b);\n        lex_comp_aux a b = Lt\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>u v.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term v);\n        snd (rep_nat_term u) < snd (rep_nat_term v)\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt\n 2. \\<And>t u v.\n       lex_comp_aux u v = Lt \\<Longrightarrow>\n       lex_comp_aux (splus t u) (splus t v) = Lt\n 3. \\<And>u v a b.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term a);\n        fst (rep_nat_term v) = fst (rep_nat_term b);\n        snd (rep_nat_term u) = snd (rep_nat_term v);\n        snd (rep_nat_term a) = snd (rep_nat_term b);\n        lex_comp_aux a b = Lt\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt", "fix u v :: 'a"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>u v.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term v);\n        snd (rep_nat_term u) < snd (rep_nat_term v)\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt\n 2. \\<And>t u v.\n       lex_comp_aux u v = Lt \\<Longrightarrow>\n       lex_comp_aux (splus t u) (splus t v) = Lt\n 3. \\<And>u v a b.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term a);\n        fst (rep_nat_term v) = fst (rep_nat_term b);\n        snd (rep_nat_term u) = snd (rep_nat_term v);\n        snd (rep_nat_term a) = snd (rep_nat_term b);\n        lex_comp_aux a b = Lt\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt", "assume 1: \"fst (rep_nat_term u) = fst (rep_nat_term v)\" and 2: \"snd (rep_nat_term u) < snd (rep_nat_term v)\""], ["proof (state)\nthis:\n  fst (rep_nat_term u) = fst (rep_nat_term v)\n  snd (rep_nat_term u) < snd (rep_nat_term v)\n\ngoal (3 subgoals):\n 1. \\<And>u v.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term v);\n        snd (rep_nat_term u) < snd (rep_nat_term v)\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt\n 2. \\<And>t u v.\n       lex_comp_aux u v = Lt \\<Longrightarrow>\n       lex_comp_aux (splus t u) (splus t v) = Lt\n 3. \\<And>u v a b.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term a);\n        fst (rep_nat_term v) = fst (rep_nat_term b);\n        snd (rep_nat_term u) = snd (rep_nat_term v);\n        snd (rep_nat_term a) = snd (rep_nat_term b);\n        lex_comp_aux a b = Lt\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt", "show \"lex_comp_aux u v = Lt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lex_comp_aux u v = Lt", "by (simp add: lex_comp_aux_def 1 split: order.split, simp add: comparator_of_def 2)"], ["proof (state)\nthis:\n  lex_comp_aux u v = Lt\n\ngoal (2 subgoals):\n 1. \\<And>t u v.\n       lex_comp_aux u v = Lt \\<Longrightarrow>\n       lex_comp_aux (splus t u) (splus t v) = Lt\n 2. \\<And>u v a b.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term a);\n        fst (rep_nat_term v) = fst (rep_nat_term b);\n        snd (rep_nat_term u) = snd (rep_nat_term v);\n        snd (rep_nat_term a) = snd (rep_nat_term b);\n        lex_comp_aux a b = Lt\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t u v.\n       lex_comp_aux u v = Lt \\<Longrightarrow>\n       lex_comp_aux (splus t u) (splus t v) = Lt\n 2. \\<And>u v a b.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term a);\n        fst (rep_nat_term v) = fst (rep_nat_term b);\n        snd (rep_nat_term u) = snd (rep_nat_term v);\n        snd (rep_nat_term a) = snd (rep_nat_term b);\n        lex_comp_aux a b = Lt\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt", "fix t u v :: 'a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t u v.\n       lex_comp_aux u v = Lt \\<Longrightarrow>\n       lex_comp_aux (splus t u) (splus t v) = Lt\n 2. \\<And>u v a b.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term a);\n        fst (rep_nat_term v) = fst (rep_nat_term b);\n        snd (rep_nat_term u) = snd (rep_nat_term v);\n        snd (rep_nat_term a) = snd (rep_nat_term b);\n        lex_comp_aux a b = Lt\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt", "show \"lex_comp_aux u v = Lt \\<Longrightarrow> lex_comp_aux (splus t u) (splus t v) = Lt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lex_comp_aux u v = Lt \\<Longrightarrow>\n    lex_comp_aux (splus t u) (splus t v) = Lt", "by (auto simp: lex_comp_aux_def splus_term pprod.splus_def comp_of_ord_def lex_pp_refl\n          split: order.splits if_splits intro: lex_pp_plus_monotone')"], ["proof (state)\nthis:\n  lex_comp_aux u v = Lt \\<Longrightarrow>\n  lex_comp_aux (splus t u) (splus t v) = Lt\n\ngoal (1 subgoal):\n 1. \\<And>u v a b.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term a);\n        fst (rep_nat_term v) = fst (rep_nat_term b);\n        snd (rep_nat_term u) = snd (rep_nat_term v);\n        snd (rep_nat_term a) = snd (rep_nat_term b);\n        lex_comp_aux a b = Lt\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v a b.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term a);\n        fst (rep_nat_term v) = fst (rep_nat_term b);\n        snd (rep_nat_term u) = snd (rep_nat_term v);\n        snd (rep_nat_term a) = snd (rep_nat_term b);\n        lex_comp_aux a b = Lt\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt", "fix u v a b :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v a b.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term a);\n        fst (rep_nat_term v) = fst (rep_nat_term b);\n        snd (rep_nat_term u) = snd (rep_nat_term v);\n        snd (rep_nat_term a) = snd (rep_nat_term b);\n        lex_comp_aux a b = Lt\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt", "assume \"fst (rep_nat_term u) = fst (rep_nat_term a)\" and \"fst (rep_nat_term v) = fst (rep_nat_term b)\"\n      and \"snd (rep_nat_term a) = snd (rep_nat_term b)\" and \"lex_comp_aux a b = Lt\""], ["proof (state)\nthis:\n  fst (rep_nat_term u) = fst (rep_nat_term a)\n  fst (rep_nat_term v) = fst (rep_nat_term b)\n  snd (rep_nat_term a) = snd (rep_nat_term b)\n  lex_comp_aux a b = Lt\n\ngoal (1 subgoal):\n 1. \\<And>u v a b.\n       \\<lbrakk>fst (rep_nat_term u) = fst (rep_nat_term a);\n        fst (rep_nat_term v) = fst (rep_nat_term b);\n        snd (rep_nat_term u) = snd (rep_nat_term v);\n        snd (rep_nat_term a) = snd (rep_nat_term b);\n        lex_comp_aux a b = Lt\\<rbrakk>\n       \\<Longrightarrow> lex_comp_aux u v = Lt", "thus \"lex_comp_aux u v = Lt\""], ["proof (prove)\nusing this:\n  fst (rep_nat_term u) = fst (rep_nat_term a)\n  fst (rep_nat_term v) = fst (rep_nat_term b)\n  snd (rep_nat_term a) = snd (rep_nat_term b)\n  lex_comp_aux a b = Lt\n\ngoal (1 subgoal):\n 1. lex_comp_aux u v = Lt", "by (simp add: lex_comp_aux_def split: order.splits)"], ["proof (state)\nthis:\n  lex_comp_aux u v = Lt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat_term_comp lex_comp_aux\n\ngoal:\nNo subgoals!", "qed"], ["", "typedef (overloaded) 'a nat_term_order =\n  \"{cmp::'a::nat_term comparator. comparator cmp \\<and> nat_term_comp cmp}\"\n  morphisms nat_term_compare Abs_nat_term_order"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> {cmp. comparator cmp \\<and> nat_term_comp cmp}", "proof (rule, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. comparator ?x \\<and> nat_term_comp ?x", "from comparator_lex_comp_aux nat_term_comp_lex_comp_aux"], ["proof (chain)\npicking this:\n  comparator lex_comp_aux\n  nat_term_comp lex_comp_aux", "show \"comparator lex_comp_aux \\<and> nat_term_comp lex_comp_aux\""], ["proof (prove)\nusing this:\n  comparator lex_comp_aux\n  nat_term_comp lex_comp_aux\n\ngoal (1 subgoal):\n 1. comparator lex_comp_aux \\<and> nat_term_comp lex_comp_aux", ".."], ["proof (state)\nthis:\n  comparator lex_comp_aux \\<and> nat_term_comp lex_comp_aux\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_term_compare_Abs_nat_term_order_id:\n  assumes \"comparator cmp\" and \"nat_term_comp cmp\"\n  shows \"nat_term_compare (Abs_nat_term_order cmp) = cmp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_term_compare (Abs_nat_term_order cmp) = cmp", "by (rule Abs_nat_term_order_inverse, simp add: assms)"], ["", "instantiation nat_term_order :: (type) equal\nbegin"], ["", "definition equal_nat_term_order :: \"'a nat_term_order \\<Rightarrow> 'a nat_term_order \\<Rightarrow> bool\" where \"equal_nat_term_order = (=)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a nat_term_order, equal_class)", "by (standard, simp add: equal_nat_term_order_def)"], ["", "end"], ["", "definition nat_term_compare_inv :: \"'a nat_term_order \\<Rightarrow> 'a::nat_term comparator\"\n  where \"nat_term_compare_inv to = (\\<lambda>x y. nat_term_compare to y x)\""], ["", "definition key_order_of_nat_term_order :: \"'a nat_term_order \\<Rightarrow> 'a::nat_term key_order\"\n  where key_order_of_nat_term_order_def [code del]:\n    \"key_order_of_nat_term_order to = Abs_key_order (nat_term_compare to)\""], ["", "definition key_order_of_nat_term_order_inv :: \"'a nat_term_order \\<Rightarrow> 'a::nat_term key_order\"\n  where key_order_of_nat_term_order_inv_def [code del]:\n    \"key_order_of_nat_term_order_inv to = Abs_key_order (nat_term_compare_inv to)\""], ["", "definition le_of_nat_term_order :: \"'a nat_term_order \\<Rightarrow> 'a \\<Rightarrow> 'a::nat_term \\<Rightarrow> bool\"\n  where \"le_of_nat_term_order to = le_of_key_order (key_order_of_nat_term_order to)\""], ["", "definition lt_of_nat_term_order :: \"'a nat_term_order \\<Rightarrow> 'a \\<Rightarrow> 'a::nat_term \\<Rightarrow> bool\"\n  where \"lt_of_nat_term_order to = lt_of_key_order (key_order_of_nat_term_order to)\""], ["", "definition nat_term_order_of_le :: \"'a::{linorder,nat_term} nat_term_order\"\n  where \"nat_term_order_of_le = Abs_nat_term_order (comparator_of)\""], ["", "lemma comparator_nat_term_compare: \"comparator (nat_term_compare to)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator (nat_term_compare to)", "using nat_term_compare"], ["proof (prove)\nusing this:\n  nat_term_compare ?x \\<in> {cmp. comparator cmp \\<and> nat_term_comp cmp}\n\ngoal (1 subgoal):\n 1. comparator (nat_term_compare to)", "by blast"], ["", "lemma nat_term_comp_nat_term_compare: \"nat_term_comp (nat_term_compare to)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_term_comp (nat_term_compare to)", "using nat_term_compare"], ["proof (prove)\nusing this:\n  nat_term_compare ?x \\<in> {cmp. comparator cmp \\<and> nat_term_comp cmp}\n\ngoal (1 subgoal):\n 1. nat_term_comp (nat_term_compare to)", "by blast"], ["", "lemma nat_term_compare_splus: \"nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "from comparator_nat_term_compare"], ["proof (chain)\npicking this:\n  comparator (nat_term_compare ?to)", "interpret cmp: comparator \"nat_term_compare to\""], ["proof (prove)\nusing this:\n  comparator (nat_term_compare ?to)\n\ngoal (1 subgoal):\n 1. comparator (nat_term_compare to)", "."], ["proof (state)\ngoal (1 subgoal):\n 1. nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "proof (cases \"nat_term_compare to u v\")"], ["proof (state)\ngoal (3 subgoals):\n 1. nat_term_compare to u v = Eq \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v\n 2. nat_term_compare to u v = Lt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v\n 3. nat_term_compare to u v = Gt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "case Eq"], ["proof (state)\nthis:\n  nat_term_compare to u v = Eq\n\ngoal (3 subgoals):\n 1. nat_term_compare to u v = Eq \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v\n 2. nat_term_compare to u v = Lt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v\n 3. nat_term_compare to u v = Gt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "hence \"splus t u = splus t v\""], ["proof (prove)\nusing this:\n  nat_term_compare to u v = Eq\n\ngoal (1 subgoal):\n 1. splus t u = splus t v", "by (simp add: cmp.eq)"], ["proof (state)\nthis:\n  splus t u = splus t v\n\ngoal (3 subgoals):\n 1. nat_term_compare to u v = Eq \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v\n 2. nat_term_compare to u v = Lt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v\n 3. nat_term_compare to u v = Gt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "thus ?thesis"], ["proof (prove)\nusing this:\n  splus t u = splus t v\n\ngoal (1 subgoal):\n 1. nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "by (simp add: cmp.eq Eq)"], ["proof (state)\nthis:\n  nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v\n\ngoal (2 subgoals):\n 1. nat_term_compare to u v = Lt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v\n 2. nat_term_compare to u v = Gt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. nat_term_compare to u v = Lt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v\n 2. nat_term_compare to u v = Gt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "case Lt"], ["proof (state)\nthis:\n  nat_term_compare to u v = Lt\n\ngoal (2 subgoals):\n 1. nat_term_compare to u v = Lt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v\n 2. nat_term_compare to u v = Gt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "moreover"], ["proof (state)\nthis:\n  nat_term_compare to u v = Lt\n\ngoal (2 subgoals):\n 1. nat_term_compare to u v = Lt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v\n 2. nat_term_compare to u v = Gt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "from nat_term_comp_nat_term_compare this"], ["proof (chain)\npicking this:\n  nat_term_comp (nat_term_compare ?to)\n  nat_term_compare to u v = Lt", "have \"nat_term_compare to (splus t u) (splus t v) = Lt\""], ["proof (prove)\nusing this:\n  nat_term_comp (nat_term_compare ?to)\n  nat_term_compare to u v = Lt\n\ngoal (1 subgoal):\n 1. nat_term_compare to (splus t u) (splus t v) = Lt", "by (rule nat_term_compD3)"], ["proof (state)\nthis:\n  nat_term_compare to (splus t u) (splus t v) = Lt\n\ngoal (2 subgoals):\n 1. nat_term_compare to u v = Lt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v\n 2. nat_term_compare to u v = Gt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "ultimately"], ["proof (chain)\npicking this:\n  nat_term_compare to u v = Lt\n  nat_term_compare to (splus t u) (splus t v) = Lt", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_term_compare to u v = Lt\n  nat_term_compare to (splus t u) (splus t v) = Lt\n\ngoal (1 subgoal):\n 1. nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "by simp"], ["proof (state)\nthis:\n  nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v\n\ngoal (1 subgoal):\n 1. nat_term_compare to u v = Gt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_term_compare to u v = Gt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "case Gt"], ["proof (state)\nthis:\n  nat_term_compare to u v = Gt\n\ngoal (1 subgoal):\n 1. nat_term_compare to u v = Gt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "hence \"nat_term_compare to v u = Lt\""], ["proof (prove)\nusing this:\n  nat_term_compare to u v = Gt\n\ngoal (1 subgoal):\n 1. nat_term_compare to v u = Lt", "using cmp.Gt_lt_conv cmp.Lt_lt_conv"], ["proof (prove)\nusing this:\n  nat_term_compare to u v = Gt\n  (nat_term_compare to ?x ?y = Gt) = cmp.lt ?y ?x\n  (nat_term_compare to ?x ?y = Lt) = cmp.lt ?x ?y\n\ngoal (1 subgoal):\n 1. nat_term_compare to v u = Lt", "by auto"], ["proof (state)\nthis:\n  nat_term_compare to v u = Lt\n\ngoal (1 subgoal):\n 1. nat_term_compare to u v = Gt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "with nat_term_comp_nat_term_compare"], ["proof (chain)\npicking this:\n  nat_term_comp (nat_term_compare ?to)\n  nat_term_compare to v u = Lt", "have \"nat_term_compare to (splus t v) (splus t u) = Lt\""], ["proof (prove)\nusing this:\n  nat_term_comp (nat_term_compare ?to)\n  nat_term_compare to v u = Lt\n\ngoal (1 subgoal):\n 1. nat_term_compare to (splus t v) (splus t u) = Lt", "by (rule nat_term_compD3)"], ["proof (state)\nthis:\n  nat_term_compare to (splus t v) (splus t u) = Lt\n\ngoal (1 subgoal):\n 1. nat_term_compare to u v = Gt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "hence \"nat_term_compare to (splus t u) (splus t v) = Gt\""], ["proof (prove)\nusing this:\n  nat_term_compare to (splus t v) (splus t u) = Lt\n\ngoal (1 subgoal):\n 1. nat_term_compare to (splus t u) (splus t v) = Gt", "using cmp.Gt_lt_conv cmp.Lt_lt_conv"], ["proof (prove)\nusing this:\n  nat_term_compare to (splus t v) (splus t u) = Lt\n  (nat_term_compare to ?x ?y = Gt) = cmp.lt ?y ?x\n  (nat_term_compare to ?x ?y = Lt) = cmp.lt ?x ?y\n\ngoal (1 subgoal):\n 1. nat_term_compare to (splus t u) (splus t v) = Gt", "by auto"], ["proof (state)\nthis:\n  nat_term_compare to (splus t u) (splus t v) = Gt\n\ngoal (1 subgoal):\n 1. nat_term_compare to u v = Gt \\<Longrightarrow>\n    nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "with Gt"], ["proof (chain)\npicking this:\n  nat_term_compare to u v = Gt\n  nat_term_compare to (splus t u) (splus t v) = Gt", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_term_compare to u v = Gt\n  nat_term_compare to (splus t u) (splus t v) = Gt\n\ngoal (1 subgoal):\n 1. nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v", "by simp"], ["proof (state)\nthis:\n  nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat_term_compare to (splus t u) (splus t v) = nat_term_compare to u v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_term_compare_conv: \"nat_term_compare to = key_compare (key_order_of_nat_term_order to)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_term_compare to = key_compare (key_order_of_nat_term_order to)", "unfolding key_order_of_nat_term_order_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_term_compare to = key_compare (Abs_key_order (nat_term_compare to))", "by (rule sym, rule Abs_key_order_inverse, simp add: comparator_nat_term_compare)"], ["", "lemma comparator_nat_term_compare_inv: \"comparator (nat_term_compare_inv to)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator (nat_term_compare_inv to)", "unfolding nat_term_compare_inv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator (\\<lambda>x y. nat_term_compare to y x)", "using comparator_nat_term_compare"], ["proof (prove)\nusing this:\n  comparator (nat_term_compare ?to)\n\ngoal (1 subgoal):\n 1. comparator (\\<lambda>x y. nat_term_compare to y x)", "by (rule comparator_converse)"], ["", "lemma nat_term_compare_inv_conv: \"nat_term_compare_inv to = key_compare (key_order_of_nat_term_order_inv to)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_term_compare_inv to =\n    key_compare (key_order_of_nat_term_order_inv to)", "unfolding key_order_of_nat_term_order_inv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_term_compare_inv to =\n    key_compare (Abs_key_order (nat_term_compare_inv to))", "by (rule sym, rule Abs_key_order_inverse, simp add: comparator_nat_term_compare_inv)"], ["", "lemma nat_term_compare_inv_alt [code_unfold]: \"nat_term_compare_inv to x y = nat_term_compare to y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_term_compare_inv to x y = nat_term_compare to y x", "by (simp only: nat_term_compare_inv_def)"], ["", "lemma le_of_nat_term_order [code]: \"le_of_nat_term_order to x y = (nat_term_compare to x y \\<noteq> Gt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_of_nat_term_order to x y = (nat_term_compare to x y \\<noteq> Gt)", "by (simp add: le_of_key_order_alt le_of_nat_term_order_def nat_term_compare_conv)"], ["", "lemma lt_of_nat_term_order [code]: \"lt_of_nat_term_order to x y = (nat_term_compare to x y = Lt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lt_of_nat_term_order to x y = (nat_term_compare to x y = Lt)", "by (simp add: lt_of_key_order_alt lt_of_nat_term_order_def nat_term_compare_conv)"], ["", "lemma le_of_nat_term_order_alt:\n  \"le_of_nat_term_order to = (\\<lambda>u v. ko.le (key_order_of_nat_term_order_inv to) v u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_of_nat_term_order to =\n    (\\<lambda>u v. ko.le (key_order_of_nat_term_order_inv to) v u)", "by (intro ext, simp add: le_of_comp_def nat_term_compare_inv_conv[symmetric] le_of_nat_term_order_def\n      le_of_key_order_def nat_term_compare_conv[symmetric] nat_term_compare_inv_alt)"], ["", "lemma lt_of_nat_term_order_alt:\n  \"lt_of_nat_term_order to = (\\<lambda>u v. ko.lt (key_order_of_nat_term_order_inv to) v u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lt_of_nat_term_order to =\n    (\\<lambda>u v. ko.lt (key_order_of_nat_term_order_inv to) v u)", "by (intro ext, simp add: lt_of_comp_def nat_term_compare_inv_conv[symmetric] lt_of_nat_term_order_def\n      lt_of_key_order_def nat_term_compare_conv[symmetric] nat_term_compare_inv_alt)"], ["", "lemma linorder_le_of_nat_term_order: \"class.linorder (le_of_nat_term_order to) (lt_of_nat_term_order to)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.linorder (le_of_nat_term_order to) (lt_of_nat_term_order to)", "unfolding le_of_nat_term_order_alt lt_of_nat_term_order_alt"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.linorder\n     (\\<lambda>u v. ko.le (key_order_of_nat_term_order_inv to) v u)\n     (\\<lambda>u v. ko.lt (key_order_of_nat_term_order_inv to) v u)", "using ko.linorder"], ["proof (prove)\nusing this:\n  class.linorder (ko.le ?ko) (ko.lt ?ko)\n\ngoal (1 subgoal):\n 1. class.linorder\n     (\\<lambda>u v. ko.le (key_order_of_nat_term_order_inv to) v u)\n     (\\<lambda>u v. ko.lt (key_order_of_nat_term_order_inv to) v u)", "by (rule linorder.dual_linorder)"], ["", "lemma le_of_nat_term_order_zero_min: \"le_of_nat_term_order to 0 (t::'a::nat_pp_term)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_of_nat_term_order to (0::'a) t", "unfolding le_of_nat_term_order"], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_term_compare to (0::'a) t \\<noteq> Gt", "by (rule nat_term_compD1', fact comparator_nat_term_compare, fact nat_term_comp_nat_term_compare, simp_all add: rep_nat_term_zero)"], ["", "lemma le_of_nat_term_order_plus_monotone:\n  assumes \"le_of_nat_term_order to s (t::'a::nat_pp_term)\"\n  shows \"le_of_nat_term_order to (u + s) (u + t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_of_nat_term_order to (u + s) (u + t)", "using assms"], ["proof (prove)\nusing this:\n  le_of_nat_term_order to s t\n\ngoal (1 subgoal):\n 1. le_of_nat_term_order to (u + s) (u + t)", "by (simp add: le_of_nat_term_order splus_pp_term[symmetric] nat_term_compare_splus)"], ["", "global_interpretation ko_ntm: comparator \"nat_term_compare_inv ko\"\n  defines lookup_pair_ko_ntm = ko_ntm.lookup_pair\n  and update_by_pair_ko_ntm = ko_ntm.update_by_pair\n  and update_by_fun_pair_ko_ntm = ko_ntm.update_by_fun_pair\n  and update_by_fun_gr_pair_ko_ntm = ko_ntm.update_by_fun_gr_pair\n  and map2_val_pair_ko_ntm = ko_ntm.map2_val_pair\n  and lex_ord_pair_ko_ntm = ko_ntm.lex_ord_pair\n  and prod_ord_pair_ko_ntm = ko_ntm.prod_ord_pair\n  and sort_oalist_ko_ntm' = ko_ntm.sort_oalist"], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator (nat_term_compare_inv ko)", "by (fact comparator_nat_term_compare_inv)"], ["", "lemma ko_ntm_le: \"ko_ntm.le to = (\\<lambda>x y. le_of_nat_term_order to y x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ko_ntm.le to = (\\<lambda>x y. le_of_nat_term_order to y x)", "by (intro ext, simp add: le_of_comp_def le_of_nat_term_order nat_term_compare_inv_def split: order.split)"], ["", "global_interpretation ko_ntm: oalist_raw key_order_of_nat_term_order_inv\n  rewrites \"comparator.lookup_pair (key_compare (key_order_of_nat_term_order_inv ko)) = lookup_pair_ko_ntm ko\"\n  and \"comparator.update_by_pair (key_compare (key_order_of_nat_term_order_inv ko)) = update_by_pair_ko_ntm ko\"\n  and \"comparator.update_by_fun_pair (key_compare (key_order_of_nat_term_order_inv ko)) = update_by_fun_pair_ko_ntm ko\"\n  and \"comparator.update_by_fun_gr_pair (key_compare (key_order_of_nat_term_order_inv ko)) = update_by_fun_gr_pair_ko_ntm ko\"\n  and \"comparator.map2_val_pair (key_compare (key_order_of_nat_term_order_inv ko)) = map2_val_pair_ko_ntm ko\"\n  and \"comparator.lex_ord_pair (key_compare (key_order_of_nat_term_order_inv ko)) = lex_ord_pair_ko_ntm ko\"\n  and \"comparator.prod_ord_pair (key_compare (key_order_of_nat_term_order_inv ko)) = prod_ord_pair_ko_ntm ko\"\n  and \"comparator.sort_oalist (key_compare (key_order_of_nat_term_order_inv ko)) = sort_oalist_ko_ntm' ko\"\n  defines sort_oalist_aux_ko_ntm = ko_ntm.sort_oalist_aux\n  and lookup_ko_ntm = ko_ntm.lookup_raw\n  and sorted_domain_ko_ntm = ko_ntm.sorted_domain_raw\n  and tl_ko_ntm = ko_ntm.tl_raw\n  and min_key_val_ko_ntm = ko_ntm.min_key_val_raw\n  and update_by_ko_ntm = ko_ntm.update_by_raw\n  and update_by_fun_ko_ntm = ko_ntm.update_by_fun_raw\n  and update_by_fun_gr_ko_ntm = ko_ntm.update_by_fun_gr_raw\n  and map2_val_ko_ntm = ko_ntm.map2_val_raw\n  and lex_ord_ko_ntm = ko_ntm.lex_ord_raw\n  and prod_ord_ko_ntm = ko_ntm.prod_ord_raw\n  and oalist_eq_ko_ntm = ko_ntm.oalist_eq_raw\n  and sort_oalist_ko_ntm = ko_ntm.sort_oalist_raw"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((comparator.lookup_pair\n       (key_compare (key_order_of_nat_term_order_inv ko)) =\n      lookup_pair_ko_ntm ko &&&\n      comparator.update_by_pair\n       (key_compare (key_order_of_nat_term_order_inv ko)) =\n      update_by_pair_ko_ntm ko) &&&\n     comparator.update_by_fun_pair\n      (key_compare (key_order_of_nat_term_order_inv ko)) =\n     update_by_fun_pair_ko_ntm ko &&&\n     comparator.update_by_fun_gr_pair\n      (key_compare (key_order_of_nat_term_order_inv ko)) =\n     update_by_fun_gr_pair_ko_ntm ko) &&&\n    (comparator.map2_val_pair\n      (key_compare (key_order_of_nat_term_order_inv ko)) =\n     map2_val_pair_ko_ntm ko &&&\n     comparator.lex_ord_pair\n      (key_compare (key_order_of_nat_term_order_inv ko)) =\n     lex_ord_pair_ko_ntm ko) &&&\n    comparator.prod_ord_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    prod_ord_pair_ko_ntm ko &&&\n    comparator.sort_oalist\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    sort_oalist_ko_ntm' ko", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator.lookup_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    lookup_pair_ko_ntm ko", "by (simp only: lookup_pair_ko_ntm_def nat_term_compare_inv_conv)"], ["proof (prove)\ngoal (7 subgoals):\n 1. comparator.update_by_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    update_by_pair_ko_ntm ko\n 2. comparator.update_by_fun_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    update_by_fun_pair_ko_ntm ko\n 3. comparator.update_by_fun_gr_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    update_by_fun_gr_pair_ko_ntm ko\n 4. comparator.map2_val_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    map2_val_pair_ko_ntm ko\n 5. comparator.lex_ord_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    lex_ord_pair_ko_ntm ko\n 6. comparator.prod_ord_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    prod_ord_pair_ko_ntm ko\n 7. comparator.sort_oalist\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    sort_oalist_ko_ntm' ko", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator.update_by_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    update_by_pair_ko_ntm ko", "by (simp only: update_by_pair_ko_ntm_def nat_term_compare_inv_conv)"], ["proof (prove)\ngoal (6 subgoals):\n 1. comparator.update_by_fun_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    update_by_fun_pair_ko_ntm ko\n 2. comparator.update_by_fun_gr_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    update_by_fun_gr_pair_ko_ntm ko\n 3. comparator.map2_val_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    map2_val_pair_ko_ntm ko\n 4. comparator.lex_ord_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    lex_ord_pair_ko_ntm ko\n 5. comparator.prod_ord_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    prod_ord_pair_ko_ntm ko\n 6. comparator.sort_oalist\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    sort_oalist_ko_ntm' ko", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator.update_by_fun_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    update_by_fun_pair_ko_ntm ko", "by (simp only: update_by_fun_pair_ko_ntm_def nat_term_compare_inv_conv)"], ["proof (prove)\ngoal (5 subgoals):\n 1. comparator.update_by_fun_gr_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    update_by_fun_gr_pair_ko_ntm ko\n 2. comparator.map2_val_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    map2_val_pair_ko_ntm ko\n 3. comparator.lex_ord_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    lex_ord_pair_ko_ntm ko\n 4. comparator.prod_ord_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    prod_ord_pair_ko_ntm ko\n 5. comparator.sort_oalist\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    sort_oalist_ko_ntm' ko", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator.update_by_fun_gr_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    update_by_fun_gr_pair_ko_ntm ko", "by (simp only: update_by_fun_gr_pair_ko_ntm_def nat_term_compare_inv_conv)"], ["proof (prove)\ngoal (4 subgoals):\n 1. comparator.map2_val_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    map2_val_pair_ko_ntm ko\n 2. comparator.lex_ord_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    lex_ord_pair_ko_ntm ko\n 3. comparator.prod_ord_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    prod_ord_pair_ko_ntm ko\n 4. comparator.sort_oalist\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    sort_oalist_ko_ntm' ko", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator.map2_val_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    map2_val_pair_ko_ntm ko", "by (simp only: map2_val_pair_ko_ntm_def nat_term_compare_inv_conv)"], ["proof (prove)\ngoal (3 subgoals):\n 1. comparator.lex_ord_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    lex_ord_pair_ko_ntm ko\n 2. comparator.prod_ord_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    prod_ord_pair_ko_ntm ko\n 3. comparator.sort_oalist\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    sort_oalist_ko_ntm' ko", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator.lex_ord_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    lex_ord_pair_ko_ntm ko", "by (simp only: lex_ord_pair_ko_ntm_def nat_term_compare_inv_conv)"], ["proof (prove)\ngoal (2 subgoals):\n 1. comparator.prod_ord_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    prod_ord_pair_ko_ntm ko\n 2. comparator.sort_oalist\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    sort_oalist_ko_ntm' ko", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator.prod_ord_pair\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    prod_ord_pair_ko_ntm ko", "by (simp only: prod_ord_pair_ko_ntm_def nat_term_compare_inv_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator.sort_oalist\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    sort_oalist_ko_ntm' ko", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. comparator.sort_oalist\n     (key_compare (key_order_of_nat_term_order_inv ko)) =\n    sort_oalist_ko_ntm' ko", "by (simp only: sort_oalist_ko_ntm'_def nat_term_compare_inv_conv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma compute_min_key_val_ko_ntm [code]:\n  \"min_key_val_ko_ntm ko (xs, ox) =\n      (if ko = ox then hd else min_list_param (\\<lambda>x y. (le_of_nat_term_order ko) (fst y) (fst x))) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min_key_val_ko_ntm ko (xs, ox) =\n    (if ko = ox then hd\n     else min_list_param\n           (\\<lambda>x y. le_of_nat_term_order ko (fst y) (fst x)))\n     xs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. min_key_val_ko_ntm ko (xs, ox) =\n    (if ko = ox then hd\n     else min_list_param\n           (\\<lambda>x y. le_of_nat_term_order ko (fst y) (fst x)))\n     xs", "have \"ko.le (key_order_of_nat_term_order_inv ko) = (\\<lambda>x y. le_of_nat_term_order ko y x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ko.le (key_order_of_nat_term_order_inv ko) =\n    (\\<lambda>x y. le_of_nat_term_order ko y x)", "by (metis ko.nGt_le_conv le_of_nat_term_order nat_term_compare_inv_conv nat_term_compare_inv_def)"], ["proof (state)\nthis:\n  ko.le (key_order_of_nat_term_order_inv ko) =\n  (\\<lambda>x y. le_of_nat_term_order ko y x)\n\ngoal (1 subgoal):\n 1. min_key_val_ko_ntm ko (xs, ox) =\n    (if ko = ox then hd\n     else min_list_param\n           (\\<lambda>x y. le_of_nat_term_order ko (fst y) (fst x)))\n     xs", "thus ?thesis"], ["proof (prove)\nusing this:\n  ko.le (key_order_of_nat_term_order_inv ko) =\n  (\\<lambda>x y. le_of_nat_term_order ko y x)\n\ngoal (1 subgoal):\n 1. min_key_val_ko_ntm ko (xs, ox) =\n    (if ko = ox then hd\n     else min_list_param\n           (\\<lambda>x y. le_of_nat_term_order ko (fst y) (fst x)))\n     xs", "by (simp only: min_key_val_ko_ntm_def oalist_raw.min_key_val_raw.simps)"], ["proof (state)\nthis:\n  min_key_val_ko_ntm ko (xs, ox) =\n  (if ko = ox then hd\n   else min_list_param\n         (\\<lambda>x y. le_of_nat_term_order ko (fst y) (fst x)))\n   xs\n\ngoal:\nNo subgoals!", "qed"], ["", "typedef (overloaded) ('a, 'b) oalist_ntm =\n    \"{xs::('a, 'b::zero, 'a::nat_term nat_term_order) oalist_raw. ko_ntm.oalist_inv xs}\"\n  morphisms list_of_oalist_ntm Abs_oalist_ntm"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> Collect ko_ntm.oalist_inv", "by (auto simp: ko_ntm.oalist_inv_def intro: ko.oalist_inv_raw_Nil)"], ["", "lemma oalist_ntm_eq_iff: \"xs = ys \\<longleftrightarrow> list_of_oalist_ntm xs = list_of_oalist_ntm ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs = ys) = (list_of_oalist_ntm xs = list_of_oalist_ntm ys)", "by (simp add: list_of_oalist_ntm_inject)"], ["", "lemma oalist_ntm_eqI: \"list_of_oalist_ntm xs = list_of_oalist_ntm ys \\<Longrightarrow> xs = ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_of_oalist_ntm xs = list_of_oalist_ntm ys \\<Longrightarrow> xs = ys", "by (simp add: oalist_ntm_eq_iff)"], ["", "text \\<open>Formal, totalized constructor for @{typ \"('a, 'b) oalist_ntm\"}:\\<close>"], ["", "definition OAlist_ntm :: \"('a \\<times> 'b) list \\<times> 'a nat_term_order \\<Rightarrow> ('a::nat_term, 'b::zero) oalist_ntm\"\n  where \"OAlist_ntm xs = Abs_oalist_ntm (sort_oalist_ko_ntm xs)\""], ["", "definition \"oalist_of_list_ntm = OAlist_ntm\""], ["", "lemma oalist_inv_list_of_oalist_ntm: \"ko_ntm.oalist_inv (list_of_oalist_ntm xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ko_ntm.oalist_inv (list_of_oalist_ntm xs)", "using list_of_oalist_ntm[of xs]"], ["proof (prove)\nusing this:\n  list_of_oalist_ntm xs \\<in> Collect ko_ntm.oalist_inv\n\ngoal (1 subgoal):\n 1. ko_ntm.oalist_inv (list_of_oalist_ntm xs)", "by simp"], ["", "lemma list_of_oalist_OAlist_ntm: \"list_of_oalist_ntm (OAlist_ntm xs) = sort_oalist_ko_ntm xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_of_oalist_ntm (OAlist_ntm xs) = sort_oalist_ko_ntm xs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. list_of_oalist_ntm (OAlist_ntm xs) = sort_oalist_ko_ntm xs", "obtain xs' ox where xs: \"xs = (xs', ox)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xs' ox.\n        xs = (xs', ox) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  xs = (xs', ox)\n\ngoal (1 subgoal):\n 1. list_of_oalist_ntm (OAlist_ntm xs) = sort_oalist_ko_ntm xs", "have \"ko_ntm.oalist_inv (sort_oalist_ko_ntm' ox xs', ox)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ko_ntm.oalist_inv (sort_oalist_ko_ntm' ox xs', ox)", "using ko_ntm.oalist_inv_sort_oalist_raw"], ["proof (prove)\nusing this:\n  ko_ntm.oalist_inv (sort_oalist_ko_ntm ?xs)\n\ngoal (1 subgoal):\n 1. ko_ntm.oalist_inv (sort_oalist_ko_ntm' ox xs', ox)", "by fastforce"], ["proof (state)\nthis:\n  ko_ntm.oalist_inv (sort_oalist_ko_ntm' ox xs', ox)\n\ngoal (1 subgoal):\n 1. list_of_oalist_ntm (OAlist_ntm xs) = sort_oalist_ko_ntm xs", "thus ?thesis"], ["proof (prove)\nusing this:\n  ko_ntm.oalist_inv (sort_oalist_ko_ntm' ox xs', ox)\n\ngoal (1 subgoal):\n 1. list_of_oalist_ntm (OAlist_ntm xs) = sort_oalist_ko_ntm xs", "by (simp add: xs OAlist_ntm_def Abs_oalist_ntm_inverse)"], ["proof (state)\nthis:\n  list_of_oalist_ntm (OAlist_ntm xs) = sort_oalist_ko_ntm xs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma OAlist_list_of_oalist_ntm [simp, code abstype]: \"OAlist_ntm (list_of_oalist_ntm xs) = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OAlist_ntm (list_of_oalist_ntm xs) = xs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. OAlist_ntm (list_of_oalist_ntm xs) = xs", "obtain xs' ox where xs: \"list_of_oalist_ntm xs = (xs', ox)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xs' ox.\n        list_of_oalist_ntm xs = (xs', ox) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  list_of_oalist_ntm xs = (xs', ox)\n\ngoal (1 subgoal):\n 1. OAlist_ntm (list_of_oalist_ntm xs) = xs", "have \"ko_ntm.oalist_inv_raw ox xs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ko_ntm.oalist_inv_raw ox xs'", "by (simp add: xs[symmetric] ko_ntm.oalist_inv_alt[symmetric] nat_term_compare_inv_conv oalist_inv_list_of_oalist_ntm)"], ["proof (state)\nthis:\n  ko_ntm.oalist_inv_raw ox xs'\n\ngoal (1 subgoal):\n 1. OAlist_ntm (list_of_oalist_ntm xs) = xs", "thus ?thesis"], ["proof (prove)\nusing this:\n  ko_ntm.oalist_inv_raw ox xs'\n\ngoal (1 subgoal):\n 1. OAlist_ntm (list_of_oalist_ntm xs) = xs", "by (simp add: xs OAlist_ntm_def ko_ntm.sort_oalist_id, simp add: list_of_oalist_ntm_inverse xs[symmetric])"], ["proof (state)\nthis:\n  OAlist_ntm (list_of_oalist_ntm xs) = xs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma [code abstract]: \"list_of_oalist_ntm (oalist_of_list_ntm xs) = sort_oalist_ko_ntm xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_of_oalist_ntm (oalist_of_list_ntm xs) = sort_oalist_ko_ntm xs", "by (simp add: list_of_oalist_OAlist_ntm oalist_of_list_ntm_def)"], ["", "global_interpretation oa_ntm: oalist_abstract key_order_of_nat_term_order_inv list_of_oalist_ntm OAlist_ntm\n  defines OAlist_lookup_ntm = oa_ntm.lookup\n  and OAlist_sorted_domain_ntm = oa_ntm.sorted_domain\n  and OAlist_empty_ntm = oa_ntm.empty\n  and OAlist_reorder_ntm = oa_ntm.reorder\n  and OAlist_tl_ntm = oa_ntm.tl\n  and OAlist_hd_ntm = oa_ntm.hd\n  and OAlist_except_min_ntm = oa_ntm.except_min\n  and OAlist_min_key_val_ntm = oa_ntm.min_key_val\n  and OAlist_insert_ntm = oa_ntm.insert\n  and OAlist_update_by_fun_ntm = oa_ntm.update_by_fun\n  and OAlist_update_by_fun_gr_ntm = oa_ntm.update_by_fun_gr\n  and OAlist_filter_ntm = oa_ntm.filter\n  and OAlist_map2_val_neutr_ntm = oa_ntm.map2_val_neutr\n  and OAlist_eq_ntm = oa_ntm.oalist_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. oalist_abstract key_order_of_nat_term_order_inv list_of_oalist_ntm\n     OAlist_ntm", "apply unfold_locales"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x. ko_ntm.oalist_inv (list_of_oalist_ntm x)\n 2. \\<And>xs.\n       list_of_oalist_ntm (OAlist_ntm xs) =\n       oalist_raw.sort_oalist_raw key_order_of_nat_term_order_inv xs\n 3. \\<And>x. OAlist_ntm (list_of_oalist_ntm x) = x", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. ko_ntm.oalist_inv (list_of_oalist_ntm x_)", "by (fact oalist_inv_list_of_oalist_ntm)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xs.\n       list_of_oalist_ntm (OAlist_ntm xs) =\n       oalist_raw.sort_oalist_raw key_order_of_nat_term_order_inv xs\n 2. \\<And>x. OAlist_ntm (list_of_oalist_ntm x) = x", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. list_of_oalist_ntm (OAlist_ntm xs_) =\n    oalist_raw.sort_oalist_raw key_order_of_nat_term_order_inv xs_", "by (simp only: list_of_oalist_OAlist_ntm sort_oalist_ko_ntm_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. OAlist_ntm (list_of_oalist_ntm x) = x", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. OAlist_ntm (list_of_oalist_ntm x_) = x_", "by (fact OAlist_list_of_oalist_ntm)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "global_interpretation oa_ntm: oalist_abstract3 key_order_of_nat_term_order_inv\n    \"list_of_oalist_ntm::('a, 'b) oalist_ntm \\<Rightarrow> ('a, 'b::zero, 'a::nat_term nat_term_order) oalist_raw\" OAlist_ntm\n    \"list_of_oalist_ntm::('a, 'c) oalist_ntm \\<Rightarrow> ('a, 'c::zero, 'a nat_term_order) oalist_raw\" OAlist_ntm\n    \"list_of_oalist_ntm::('a, 'd) oalist_ntm \\<Rightarrow> ('a, 'd::zero, 'a nat_term_order) oalist_raw\" OAlist_ntm\n  defines OAlist_map_val_ntm = oa_ntm.map_val\n  and OAlist_map2_val_ntm = oa_ntm.map2_val\n  and OAlist_map2_val_rneutr_ntm = oa_ntm.map2_val_rneutr\n  and OAlist_lex_ord_ntm = oa_ntm.lex_ord\n  and OAlist_prod_ord_ntm = oa_ntm.prod_ord"], ["proof (prove)\ngoal (1 subgoal):\n 1. oalist_abstract3 key_order_of_nat_term_order_inv list_of_oalist_ntm\n     OAlist_ntm list_of_oalist_ntm OAlist_ntm list_of_oalist_ntm OAlist_ntm", ".."], ["", "lemmas OAlist_lookup_ntm_single = oa_ntm.lookup_oalist_of_list_single[folded oalist_of_list_ntm_def]"], ["", "end"], ["", "(* theory *)"]]}