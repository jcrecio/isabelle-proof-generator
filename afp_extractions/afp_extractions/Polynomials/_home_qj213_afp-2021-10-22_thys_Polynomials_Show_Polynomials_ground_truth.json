{"file_name": "/home/qj213/afp-2021-10-22/thys/Polynomials/Show_Polynomials.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Polynomials", "problem_names": ["lemma shows_prec_monom_append [show_law_simps]:\n  \"shows_prec d (m :: 'a monom) (r @ s) = shows_prec d m r @ s\""], "translations": [["", "lemma shows_prec_monom_append [show_law_simps]:\n  \"shows_prec d (m :: 'a monom) (r @ s) = shows_prec d m r @ s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. shows_prec d m (r @ s) = shows_prec d m r @ s", "proof (transfer fixing: d r s)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       m \\<in> Collect monom_inv \\<Longrightarrow>\n       shows_monom_list m (r @ s) = shows_monom_list m r @ s", "fix m :: \"'a monom_list\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       m \\<in> Collect monom_inv \\<Longrightarrow>\n       shows_monom_list m (r @ s) = shows_monom_list m r @ s", "show \"shows_monom_list m (r @ s) = shows_monom_list m r @ s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. shows_monom_list m (r @ s) = shows_monom_list m r @ s", "by (induct m arbitrary: r s rule: shows_monom_list.induct, auto simp: show_law_simps)"], ["proof (state)\nthis:\n  shows_monom_list m (r @ s) = shows_monom_list m r @ s\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"shows_list (ts :: 'a monom list) = showsp_list shows_prec 0 ts\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a monom, show_class)", "by (standard, auto simp: show_law_simps shows_list_monom_def)"], ["", "end"], ["", "fun shows_poly :: \"('v :: {show,linorder},'a :: {one,show})poly \\<Rightarrow> string \\<Rightarrow> string\" where \n  \"shows_poly [] = shows_string ''0''\"\n| \"shows_poly ((m,c) # p) = ((if c = 1 then shows m else if m = 1 then shows c else shows c +@+ \n     shows_string ''*'' +@+ shows m) +@+ (if p = [] then shows_string [] else shows_string '' + '' +@+ shows_poly p))\""], ["", "end"]]}