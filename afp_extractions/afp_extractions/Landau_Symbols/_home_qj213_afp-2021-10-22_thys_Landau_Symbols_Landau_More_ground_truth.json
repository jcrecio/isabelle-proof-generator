{"file_name": "/home/qj213/afp-2021-10-22/thys/Landau_Symbols/Landau_More.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Landau_Symbols", "problem_names": ["lemma bigo_const_inverse [simp]:\n  assumes \"filterlim f at_top F\" \"F \\<noteq> bot\"\n  shows \"(\\<lambda>_. c) \\<in> O[F](\\<lambda>x. inverse (f x) :: real) \\<longleftrightarrow> c = 0\"", "lemma smallo_const_inverse [simp]:\n  \"filterlim f at_top F \\<Longrightarrow> F \\<noteq> bot \\<Longrightarrow> (\\<lambda>_. c :: real) \\<in> o[F](\\<lambda>x. inverse (f x)) \\<longleftrightarrow> c = 0\"", "lemma const_in_smallo_const [simp]: \"(\\<lambda>_. b) \\<in> o(\\<lambda>_ :: _ :: linorder. c) \\<longleftrightarrow> b = 0\" (is \"?lhs \\<longleftrightarrow> ?rhs\")", "lemma smallomega_1_conv_filterlim: \"f \\<in> \\<omega>[F](\\<lambda>_. 1) \\<longleftrightarrow> filterlim f at_infinity F\"", "lemma bigtheta_powr_1 [landau_simp]: \n  \"eventually (\\<lambda>x. (f x :: real) \\<ge> 0) F \\<Longrightarrow> (\\<lambda>x. f x powr 1) \\<in> \\<Theta>[F](f)\"", "lemma bigtheta_powr_0 [landau_simp]: \n  \"eventually (\\<lambda>x. (f x :: real) \\<noteq> 0) F \\<Longrightarrow> (\\<lambda>x. f x powr 0) \\<in> \\<Theta>[F](\\<lambda>_. 1)\"", "lemma bigtheta_powr_nonzero [landau_simp]: \n  \"eventually (\\<lambda>x. (f x :: real) \\<noteq> 0) F \\<Longrightarrow> (\\<lambda>x. if f x = 0 then g x else h x) \\<in> \\<Theta>[F](h)\"", "lemma bigtheta_powr_nonzero' [landau_simp]: \n  \"eventually (\\<lambda>x. (f x :: real) \\<noteq> 0) F \\<Longrightarrow> (\\<lambda>x. if f x \\<noteq> 0 then g x else h x) \\<in> \\<Theta>[F](g)\"", "lemma bigtheta_powr_nonneg [landau_simp]: \n  \"eventually (\\<lambda>x. (f x :: real) \\<ge> 0) F \\<Longrightarrow> (\\<lambda>x. if f x \\<ge> 0 then g x else h x) \\<in> \\<Theta>[F](g)\"", "lemma bigtheta_powr_nonneg' [landau_simp]: \n  \"eventually (\\<lambda>x. (f x :: real) \\<ge> 0) F \\<Longrightarrow> (\\<lambda>x. if f x < 0 then g x else h x) \\<in> \\<Theta>[F](h)\"", "lemma bigo_powr_iff:\n  assumes \"0 < p\" \"eventually (\\<lambda>x. f x \\<ge> 0) F\" \"eventually (\\<lambda>x. g x \\<ge> 0) F\"\n  shows \"(\\<lambda>x. (f x :: real) powr p) \\<in> O[F](\\<lambda>x. g x powr p) \\<longleftrightarrow> f \\<in> O[F](g)\" (is \"?lhs \\<longleftrightarrow> ?rhs\")", "lemma inverse_powr [simp]:\n  assumes \"(x::real) \\<ge> 0\"\n  shows   \"inverse x powr y = inverse (x powr y)\"", "lemma bigo_neg_powr_iff:\n  assumes \"p < 0\" \"eventually (\\<lambda>x. f x \\<ge> 0) F\" \"eventually (\\<lambda>x. g x \\<ge> 0) F\"\n                  \"eventually (\\<lambda>x. f x \\<noteq> 0) F\" \"eventually (\\<lambda>x. g x \\<noteq> 0) F\"\n  shows \"(\\<lambda>x. (f x :: real) powr p) \\<in> O[F](\\<lambda>x. g x powr p) \\<longleftrightarrow> g \\<in> O[F](f)\" (is \"?lhs \\<longleftrightarrow> ?rhs\")", "lemma smallo_powr_iff:\n  assumes \"0 < p\" \"eventually (\\<lambda>x. f x \\<ge> 0) F\" \"eventually (\\<lambda>x. g x \\<ge> 0) F\"\n  shows \"(\\<lambda>x. (f x :: real) powr p) \\<in> o[F](\\<lambda>x. g x powr p) \\<longleftrightarrow> f \\<in> o[F](g)\" (is \"?lhs \\<longleftrightarrow> ?rhs\")", "lemma smallo_neg_powr_iff:\n  assumes \"p < 0\" \"eventually (\\<lambda>x. f x \\<ge> 0) F\" \"eventually (\\<lambda>x. g x \\<ge> 0) F\"\n                  \"eventually (\\<lambda>x. f x \\<noteq> 0) F\" \"eventually (\\<lambda>x. g x \\<noteq> 0) F\"\n  shows \"(\\<lambda>x. (f x :: real) powr p) \\<in> o[F](\\<lambda>x. g x powr p) \\<longleftrightarrow> g \\<in> o[F](f)\" (is \"?lhs \\<longleftrightarrow> ?rhs\")", "lemma const_smallo_powr:\n  assumes \"filterlim f at_top F\" \"F \\<noteq> bot\"\n  shows \"(\\<lambda>_. c :: real) \\<in> o[F](\\<lambda>x. f x powr p) \\<longleftrightarrow> p > 0 \\<or> c = 0\"", "lemma bigo_const_powr:\n  assumes \"filterlim f at_top F\" \"F \\<noteq> bot\"\n  shows \"(\\<lambda>_. c :: real) \\<in> O[F](\\<lambda>x. f x powr p) \\<longleftrightarrow> p \\<ge> 0 \\<or> c = 0\"", "lemma filterlim_powr_at_top:\n  \"(b::real) > 1 \\<Longrightarrow> filterlim (\\<lambda>x. b powr x) at_top at_top\"", "lemma power_smallo_exponential:\n  fixes b :: real\n  assumes b: \"b > 1\"\n  shows \"(\\<lambda>x. x powr n) \\<in> o(\\<lambda>x. b powr x)\"", "lemma powr_fast_growth_tendsto:\n  assumes gf: \"g \\<in> O[F](f)\"\n  and n: \"n \\<ge> 0\"\n  and k: \"k > 1\"\n  and f: \"filterlim f at_top F\"\n  and g: \"eventually (\\<lambda>x. g x \\<ge> 0) F\"\n  shows \"(\\<lambda>x. g x powr n) \\<in> o[F](\\<lambda>x. k powr f x :: real)\"", "lemma bigo_abs_powr_iff [simp]:\n  \"0 < p \\<Longrightarrow> (\\<lambda>x. \\<bar>f x :: real\\<bar> powr p) \\<in> O[F](\\<lambda>x. \\<bar>g x\\<bar> powr p) \\<longleftrightarrow> f \\<in> O[F](g)\"", "lemma smallo_abs_powr_iff [simp]:\n  \"0 < p \\<Longrightarrow> (\\<lambda>x. \\<bar>f x :: real\\<bar> powr p) \\<in> o[F](\\<lambda>x. \\<bar>g x\\<bar> powr p) \\<longleftrightarrow> f \\<in> o[F](g)\"", "lemma const_smallo_inverse_powr:\n  assumes \"filterlim f at_top at_top\"\n  shows \"(\\<lambda>_ :: _ :: linorder. c :: real) \\<in> o(\\<lambda>x. inverse (f x powr p)) \\<longleftrightarrow> (p \\<ge> 0 \\<longrightarrow> c = 0)\"", "lemma bigo_const_inverse_powr:\n  assumes \"filterlim f at_top at_top\"\n  shows \"(\\<lambda>_ :: _ :: linorder. c :: real) \\<in> O(\\<lambda>x. inverse (f x powr p)) \\<longleftrightarrow> c = 0 \\<or> p \\<le> 0\""], "translations": [["", "lemma bigo_const_inverse [simp]:\n  assumes \"filterlim f at_top F\" \"F \\<noteq> bot\"\n  shows \"(\\<lambda>_. c) \\<in> O[F](\\<lambda>x. inverse (f x) :: real) \\<longleftrightarrow> c = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O[F](\\<lambda>x. inverse (f x))) = (c = 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O[F](\\<lambda>x. inverse (f x))) = (c = 0)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O[F](\\<lambda>x. inverse (f x))) = (c = 0)", "assume A: \"(\\<lambda>_. 1) \\<in> O[F](\\<lambda>x. inverse (f x))\""], ["proof (state)\nthis:\n  (\\<lambda>_. 1) \\<in> O[F](\\<lambda>x. inverse (f x))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O[F](\\<lambda>x. inverse (f x))) = (c = 0)", "from assms"], ["proof (chain)\npicking this:\n  filterlim f at_top F\n  F \\<noteq> bot", "have \"(\\<lambda>_. 1) \\<in> o[F](f)\""], ["proof (prove)\nusing this:\n  filterlim f at_top F\n  F \\<noteq> bot\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. 1) \\<in> o[F](f)", "by (simp add: eventually_nonzero_simps smallomega_iff_smallo filterlim_at_top_iff_smallomega)"], ["proof (state)\nthis:\n  (\\<lambda>_. 1) \\<in> o[F](f)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O[F](\\<lambda>x. inverse (f x))) = (c = 0)", "also"], ["proof (state)\nthis:\n  (\\<lambda>_. 1) \\<in> o[F](f)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O[F](\\<lambda>x. inverse (f x))) = (c = 0)", "from assms A"], ["proof (chain)\npicking this:\n  filterlim f at_top F\n  F \\<noteq> bot\n  (\\<lambda>_. 1) \\<in> O[F](\\<lambda>x. inverse (f x))", "have \"f \\<in> O[F](\\<lambda>_. 1)\""], ["proof (prove)\nusing this:\n  filterlim f at_top F\n  F \\<noteq> bot\n  (\\<lambda>_. 1) \\<in> O[F](\\<lambda>x. inverse (f x))\n\ngoal (1 subgoal):\n 1. f \\<in> O[F](\\<lambda>_. 1)", "by (simp add: eventually_nonzero_simps landau_divide_simps)"], ["proof (state)\nthis:\n  f \\<in> O[F](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O[F](\\<lambda>x. inverse (f x))) = (c = 0)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>_. 1) \\<in> o[F](\\<lambda>_. 1)", "have False"], ["proof (prove)\nusing this:\n  (\\<lambda>_. 1) \\<in> o[F](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  (\\<lambda>_. 1) \\<in> o[F](\\<lambda>_. 1)\n  filterlim f at_top F\n  F \\<noteq> bot\n\ngoal (1 subgoal):\n 1. False", "by (simp add: landau_o.small_refl_iff)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O[F](\\<lambda>x. inverse (f x))) = (c = 0)", "}"], ["proof (state)\nthis:\n  (\\<lambda>_. 1) \\<in> O[F](\\<lambda>x. inverse (f x)) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O[F](\\<lambda>x. inverse (f x))) = (c = 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>_. 1) \\<in> O[F](\\<lambda>x. inverse (f x)) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O[F](\\<lambda>x. inverse (f x))) = (c = 0)", "by (cases \"c = 0\") auto"], ["proof (state)\nthis:\n  ((\\<lambda>_. c) \\<in> O[F](\\<lambda>x. inverse (f x))) = (c = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smallo_const_inverse [simp]:\n  \"filterlim f at_top F \\<Longrightarrow> F \\<noteq> bot \\<Longrightarrow> (\\<lambda>_. c :: real) \\<in> o[F](\\<lambda>x. inverse (f x)) \\<longleftrightarrow> c = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>filterlim f at_top F; F \\<noteq> bot\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>_. c)\n                       \\<in> o[F](\\<lambda>x. inverse (f x))) =\n                      (c = 0)", "by (auto dest: landau_o.small_imp_big)"], ["", "lemma const_in_smallo_const [simp]: \"(\\<lambda>_. b) \\<in> o(\\<lambda>_ :: _ :: linorder. c) \\<longleftrightarrow> b = 0\" (is \"?lhs \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. b) \\<in> o(\\<lambda>_. c)) = (b = (0::'b))", "by (cases \"b = 0\"; cases \"c = 0\") (simp_all add: landau_o.small_refl_iff)"], ["", "lemma smallomega_1_conv_filterlim: \"f \\<in> \\<omega>[F](\\<lambda>_. 1) \\<longleftrightarrow> filterlim f at_infinity F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in> \\<omega>[F](\\<lambda>_. 1::'b)) = filterlim f at_infinity F", "by (auto intro: smallomegaI_filterlim_at_infinity dest: smallomegaD_filterlim_at_infinity)"], ["", "lemma bigtheta_powr_1 [landau_simp]: \n  \"eventually (\\<lambda>x. (f x :: real) \\<ge> 0) F \\<Longrightarrow> (\\<lambda>x. f x powr 1) \\<in> \\<Theta>[F](f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. 0 \\<le> f x \\<Longrightarrow>\n    (\\<lambda>x. f x powr 1) \\<in> \\<Theta>[F](f)", "by (intro bigthetaI_cong) (auto elim!: eventually_mono)"], ["", "lemma bigtheta_powr_0 [landau_simp]: \n  \"eventually (\\<lambda>x. (f x :: real) \\<noteq> 0) F \\<Longrightarrow> (\\<lambda>x. f x powr 0) \\<in> \\<Theta>[F](\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. f x \\<noteq> 0 \\<Longrightarrow>\n    (\\<lambda>x. f x powr 0) \\<in> \\<Theta>[F](\\<lambda>_. 1)", "by (intro bigthetaI_cong) (auto elim!: eventually_mono)"], ["", "lemma bigtheta_powr_nonzero [landau_simp]: \n  \"eventually (\\<lambda>x. (f x :: real) \\<noteq> 0) F \\<Longrightarrow> (\\<lambda>x. if f x = 0 then g x else h x) \\<in> \\<Theta>[F](h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. f x \\<noteq> 0 \\<Longrightarrow>\n    (\\<lambda>x. if f x = 0 then g x else h x) \\<in> \\<Theta>[F](h)", "by (intro bigthetaI_cong) (auto elim!: eventually_mono)"], ["", "lemma bigtheta_powr_nonzero' [landau_simp]: \n  \"eventually (\\<lambda>x. (f x :: real) \\<noteq> 0) F \\<Longrightarrow> (\\<lambda>x. if f x \\<noteq> 0 then g x else h x) \\<in> \\<Theta>[F](g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. f x \\<noteq> 0 \\<Longrightarrow>\n    (\\<lambda>x. if f x \\<noteq> 0 then g x else h x) \\<in> \\<Theta>[F](g)", "by (intro bigthetaI_cong) (auto elim!: eventually_mono)"], ["", "lemma bigtheta_powr_nonneg [landau_simp]: \n  \"eventually (\\<lambda>x. (f x :: real) \\<ge> 0) F \\<Longrightarrow> (\\<lambda>x. if f x \\<ge> 0 then g x else h x) \\<in> \\<Theta>[F](g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. 0 \\<le> f x \\<Longrightarrow>\n    (\\<lambda>x. if 0 \\<le> f x then g x else h x) \\<in> \\<Theta>[F](g)", "by (intro bigthetaI_cong) (auto elim!: eventually_mono)"], ["", "lemma bigtheta_powr_nonneg' [landau_simp]: \n  \"eventually (\\<lambda>x. (f x :: real) \\<ge> 0) F \\<Longrightarrow> (\\<lambda>x. if f x < 0 then g x else h x) \\<in> \\<Theta>[F](h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. 0 \\<le> f x \\<Longrightarrow>\n    (\\<lambda>x. if f x < 0 then g x else h x) \\<in> \\<Theta>[F](h)", "by (intro bigthetaI_cong) (auto elim!: eventually_mono)"], ["", "lemma bigo_powr_iff:\n  assumes \"0 < p\" \"eventually (\\<lambda>x. f x \\<ge> 0) F\" \"eventually (\\<lambda>x. g x \\<ge> 0) F\"\n  shows \"(\\<lambda>x. (f x :: real) powr p) \\<in> O[F](\\<lambda>x. g x powr p) \\<longleftrightarrow> f \\<in> O[F](g)\" (is \"?lhs \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)) =\n    (f \\<in> O[F](g))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. f x powr p)\n    \\<in> O[F](\\<lambda>x. g x powr p) \\<Longrightarrow>\n    f \\<in> O[F](g)\n 2. f \\<in> O[F](g) \\<Longrightarrow>\n    (\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)", "assume ?lhs"], ["proof (state)\nthis:\n  (\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. f x powr p)\n    \\<in> O[F](\\<lambda>x. g x powr p) \\<Longrightarrow>\n    f \\<in> O[F](g)\n 2. f \\<in> O[F](g) \\<Longrightarrow>\n    (\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)", "with assms bigo_powr[OF this, of \"inverse p\"]"], ["proof (chain)\npicking this:\n  0 < p\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  0 \\<le> inverse p \\<Longrightarrow>\n  (\\<lambda>x. \\<bar>f x powr p\\<bar> powr inverse p)\n  \\<in> O[F](\\<lambda>x. \\<bar>g x powr p\\<bar> powr inverse p)\n  (\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)", "show ?rhs"], ["proof (prove)\nusing this:\n  0 < p\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  0 \\<le> inverse p \\<Longrightarrow>\n  (\\<lambda>x. \\<bar>f x powr p\\<bar> powr inverse p)\n  \\<in> O[F](\\<lambda>x. \\<bar>g x powr p\\<bar> powr inverse p)\n  (\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)\n\ngoal (1 subgoal):\n 1. f \\<in> O[F](g)", "by (simp add: powr_powr landau_simps)"], ["proof (state)\nthis:\n  f \\<in> O[F](g)\n\ngoal (1 subgoal):\n 1. f \\<in> O[F](g) \\<Longrightarrow>\n    (\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)", "qed (insert assms, simp_all add: bigo_powr_nonneg)"], ["", "lemma inverse_powr [simp]:\n  assumes \"(x::real) \\<ge> 0\"\n  shows   \"inverse x powr y = inverse (x powr y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse x powr y = inverse (x powr y)", "proof (cases \"x > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)\n 2. \\<not> 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)", "assume x: \"x > 0\""], ["proof (state)\nthis:\n  0 < x\n\ngoal (2 subgoals):\n 1. 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)\n 2. \\<not> 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)", "from x"], ["proof (chain)\npicking this:\n  0 < x", "have \"inverse x powr y = exp (y * ln (inverse x))\""], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. inverse x powr y = exp (y * ln (inverse x))", "by (simp add: powr_def)"], ["proof (state)\nthis:\n  inverse x powr y = exp (y * ln (inverse x))\n\ngoal (2 subgoals):\n 1. 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)\n 2. \\<not> 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)", "also"], ["proof (state)\nthis:\n  inverse x powr y = exp (y * ln (inverse x))\n\ngoal (2 subgoals):\n 1. 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)\n 2. \\<not> 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)", "have \"ln (inverse x) = -ln x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (inverse x) = - ln x", "by (simp add: x ln_inverse)"], ["proof (state)\nthis:\n  ln (inverse x) = - ln x\n\ngoal (2 subgoals):\n 1. 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)\n 2. \\<not> 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)", "also"], ["proof (state)\nthis:\n  ln (inverse x) = - ln x\n\ngoal (2 subgoals):\n 1. 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)\n 2. \\<not> 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)", "have \"exp (y * -ln x) = inverse (exp (y * ln x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (y * - ln x) = inverse (exp (y * ln x))", "by (simp add: exp_minus)"], ["proof (state)\nthis:\n  exp (y * - ln x) = inverse (exp (y * ln x))\n\ngoal (2 subgoals):\n 1. 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)\n 2. \\<not> 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)", "also"], ["proof (state)\nthis:\n  exp (y * - ln x) = inverse (exp (y * ln x))\n\ngoal (2 subgoals):\n 1. 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)\n 2. \\<not> 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)", "from x"], ["proof (chain)\npicking this:\n  0 < x", "have \"exp (y * ln x) = x powr y\""], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. exp (y * ln x) = x powr y", "by (simp add: powr_def)"], ["proof (state)\nthis:\n  exp (y * ln x) = x powr y\n\ngoal (2 subgoals):\n 1. 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)\n 2. \\<not> 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)", "finally"], ["proof (chain)\npicking this:\n  inverse x powr y = inverse (x powr y)", "show ?thesis"], ["proof (prove)\nusing this:\n  inverse x powr y = inverse (x powr y)\n\ngoal (1 subgoal):\n 1. inverse x powr y = inverse (x powr y)", "."], ["proof (state)\nthis:\n  inverse x powr y = inverse (x powr y)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < x \\<Longrightarrow> inverse x powr y = inverse (x powr y)", "qed (insert assms, simp)"], ["", "lemma bigo_neg_powr_iff:\n  assumes \"p < 0\" \"eventually (\\<lambda>x. f x \\<ge> 0) F\" \"eventually (\\<lambda>x. g x \\<ge> 0) F\"\n                  \"eventually (\\<lambda>x. f x \\<noteq> 0) F\" \"eventually (\\<lambda>x. g x \\<noteq> 0) F\"\n  shows \"(\\<lambda>x. (f x :: real) powr p) \\<in> O[F](\\<lambda>x. g x powr p) \\<longleftrightarrow> g \\<in> O[F](f)\" (is \"?lhs \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)) =\n    (g \\<in> O[F](f))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)) =\n    (g \\<in> O[F](f))", "have \"(\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p) \\<longleftrightarrow>\n          (\\<lambda>x. (inverse (f x)) powr -p) \\<in> O[F](\\<lambda>x. (inverse (g x)) powr -p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)) =\n    ((\\<lambda>x. inverse (f x) powr - p)\n     \\<in> O[F](\\<lambda>x. inverse (g x) powr - p))", "using assms"], ["proof (prove)\nusing this:\n  p < 0\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  \\<forall>\\<^sub>F x in F. f x \\<noteq> 0\n  \\<forall>\\<^sub>F x in F. g x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)) =\n    ((\\<lambda>x. inverse (f x) powr - p)\n     \\<in> O[F](\\<lambda>x. inverse (g x) powr - p))", "by (intro landau_o.big.cong_ex) (auto simp: powr_minus elim: eventually_mono)"], ["proof (state)\nthis:\n  ((\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)) =\n  ((\\<lambda>x. inverse (f x) powr - p)\n   \\<in> O[F](\\<lambda>x. inverse (g x) powr - p))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)) =\n    (g \\<in> O[F](f))", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)) =\n  ((\\<lambda>x. inverse (f x) powr - p)\n   \\<in> O[F](\\<lambda>x. inverse (g x) powr - p))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)) =\n    (g \\<in> O[F](f))", "from assms"], ["proof (chain)\npicking this:\n  p < 0\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  \\<forall>\\<^sub>F x in F. f x \\<noteq> 0\n  \\<forall>\\<^sub>F x in F. g x \\<noteq> 0", "have \"\\<dots> \\<longleftrightarrow> ((\\<lambda>x. inverse (f x)) \\<in> O[F](\\<lambda>x. inverse (g x)))\""], ["proof (prove)\nusing this:\n  p < 0\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  \\<forall>\\<^sub>F x in F. f x \\<noteq> 0\n  \\<forall>\\<^sub>F x in F. g x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. inverse (f x) powr - p)\n     \\<in> O[F](\\<lambda>x. inverse (g x) powr - p)) =\n    ((\\<lambda>x. inverse (f x)) \\<in> O[F](\\<lambda>x. inverse (g x)))", "by (subst bigo_powr_iff) simp_all"], ["proof (state)\nthis:\n  ((\\<lambda>x. inverse (f x) powr - p)\n   \\<in> O[F](\\<lambda>x. inverse (g x) powr - p)) =\n  ((\\<lambda>x. inverse (f x)) \\<in> O[F](\\<lambda>x. inverse (g x)))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)) =\n    (g \\<in> O[F](f))", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. inverse (f x) powr - p)\n   \\<in> O[F](\\<lambda>x. inverse (g x) powr - p)) =\n  ((\\<lambda>x. inverse (f x)) \\<in> O[F](\\<lambda>x. inverse (g x)))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)) =\n    (g \\<in> O[F](f))", "from assms"], ["proof (chain)\npicking this:\n  p < 0\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  \\<forall>\\<^sub>F x in F. f x \\<noteq> 0\n  \\<forall>\\<^sub>F x in F. g x \\<noteq> 0", "have \"\\<dots> \\<longleftrightarrow> g \\<in> O[F](f)\""], ["proof (prove)\nusing this:\n  p < 0\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  \\<forall>\\<^sub>F x in F. f x \\<noteq> 0\n  \\<forall>\\<^sub>F x in F. g x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. inverse (f x)) \\<in> O[F](\\<lambda>x. inverse (g x))) =\n    (g \\<in> O[F](f))", "by (simp add: landau_o.big.inverse_cancel)"], ["proof (state)\nthis:\n  ((\\<lambda>x. inverse (f x)) \\<in> O[F](\\<lambda>x. inverse (g x))) =\n  (g \\<in> O[F](f))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)) =\n    (g \\<in> O[F](f))", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)) =\n  (g \\<in> O[F](f))", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)) =\n  (g \\<in> O[F](f))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)) =\n    (g \\<in> O[F](f))", "."], ["proof (state)\nthis:\n  ((\\<lambda>x. f x powr p) \\<in> O[F](\\<lambda>x. g x powr p)) =\n  (g \\<in> O[F](f))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smallo_powr_iff:\n  assumes \"0 < p\" \"eventually (\\<lambda>x. f x \\<ge> 0) F\" \"eventually (\\<lambda>x. g x \\<ge> 0) F\"\n  shows \"(\\<lambda>x. (f x :: real) powr p) \\<in> o[F](\\<lambda>x. g x powr p) \\<longleftrightarrow> f \\<in> o[F](g)\" (is \"?lhs \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)) =\n    (f \\<in> o[F](g))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. f x powr p)\n    \\<in> o[F](\\<lambda>x. g x powr p) \\<Longrightarrow>\n    f \\<in> o[F](g)\n 2. f \\<in> o[F](g) \\<Longrightarrow>\n    (\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)", "assume ?lhs"], ["proof (state)\nthis:\n  (\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. f x powr p)\n    \\<in> o[F](\\<lambda>x. g x powr p) \\<Longrightarrow>\n    f \\<in> o[F](g)\n 2. f \\<in> o[F](g) \\<Longrightarrow>\n    (\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)", "with assms smallo_powr[OF this, of \"inverse p\"]"], ["proof (chain)\npicking this:\n  0 < p\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  0 < inverse p \\<Longrightarrow>\n  (\\<lambda>x. \\<bar>f x powr p\\<bar> powr inverse p)\n  \\<in> o[F](\\<lambda>x. \\<bar>g x powr p\\<bar> powr inverse p)\n  (\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)", "show ?rhs"], ["proof (prove)\nusing this:\n  0 < p\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  0 < inverse p \\<Longrightarrow>\n  (\\<lambda>x. \\<bar>f x powr p\\<bar> powr inverse p)\n  \\<in> o[F](\\<lambda>x. \\<bar>g x powr p\\<bar> powr inverse p)\n  (\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)\n\ngoal (1 subgoal):\n 1. f \\<in> o[F](g)", "by (simp add: powr_powr landau_simps)"], ["proof (state)\nthis:\n  f \\<in> o[F](g)\n\ngoal (1 subgoal):\n 1. f \\<in> o[F](g) \\<Longrightarrow>\n    (\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)", "qed (insert assms, simp_all add: smallo_powr_nonneg)"], ["", "lemma smallo_neg_powr_iff:\n  assumes \"p < 0\" \"eventually (\\<lambda>x. f x \\<ge> 0) F\" \"eventually (\\<lambda>x. g x \\<ge> 0) F\"\n                  \"eventually (\\<lambda>x. f x \\<noteq> 0) F\" \"eventually (\\<lambda>x. g x \\<noteq> 0) F\"\n  shows \"(\\<lambda>x. (f x :: real) powr p) \\<in> o[F](\\<lambda>x. g x powr p) \\<longleftrightarrow> g \\<in> o[F](f)\" (is \"?lhs \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)) =\n    (g \\<in> o[F](f))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)) =\n    (g \\<in> o[F](f))", "have \"(\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p) \\<longleftrightarrow>\n          (\\<lambda>x. (inverse (f x)) powr -p) \\<in> o[F](\\<lambda>x. (inverse (g x)) powr -p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)) =\n    ((\\<lambda>x. inverse (f x) powr - p)\n     \\<in> o[F](\\<lambda>x. inverse (g x) powr - p))", "using assms"], ["proof (prove)\nusing this:\n  p < 0\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  \\<forall>\\<^sub>F x in F. f x \\<noteq> 0\n  \\<forall>\\<^sub>F x in F. g x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)) =\n    ((\\<lambda>x. inverse (f x) powr - p)\n     \\<in> o[F](\\<lambda>x. inverse (g x) powr - p))", "by (intro landau_o.small.cong_ex) (auto simp: powr_minus elim: eventually_mono)"], ["proof (state)\nthis:\n  ((\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)) =\n  ((\\<lambda>x. inverse (f x) powr - p)\n   \\<in> o[F](\\<lambda>x. inverse (g x) powr - p))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)) =\n    (g \\<in> o[F](f))", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)) =\n  ((\\<lambda>x. inverse (f x) powr - p)\n   \\<in> o[F](\\<lambda>x. inverse (g x) powr - p))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)) =\n    (g \\<in> o[F](f))", "from assms"], ["proof (chain)\npicking this:\n  p < 0\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  \\<forall>\\<^sub>F x in F. f x \\<noteq> 0\n  \\<forall>\\<^sub>F x in F. g x \\<noteq> 0", "have \"\\<dots> \\<longleftrightarrow> ((\\<lambda>x. inverse (f x)) \\<in> o[F](\\<lambda>x. inverse (g x)))\""], ["proof (prove)\nusing this:\n  p < 0\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  \\<forall>\\<^sub>F x in F. f x \\<noteq> 0\n  \\<forall>\\<^sub>F x in F. g x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. inverse (f x) powr - p)\n     \\<in> o[F](\\<lambda>x. inverse (g x) powr - p)) =\n    ((\\<lambda>x. inverse (f x)) \\<in> o[F](\\<lambda>x. inverse (g x)))", "by (subst smallo_powr_iff) simp_all"], ["proof (state)\nthis:\n  ((\\<lambda>x. inverse (f x) powr - p)\n   \\<in> o[F](\\<lambda>x. inverse (g x) powr - p)) =\n  ((\\<lambda>x. inverse (f x)) \\<in> o[F](\\<lambda>x. inverse (g x)))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)) =\n    (g \\<in> o[F](f))", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. inverse (f x) powr - p)\n   \\<in> o[F](\\<lambda>x. inverse (g x) powr - p)) =\n  ((\\<lambda>x. inverse (f x)) \\<in> o[F](\\<lambda>x. inverse (g x)))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)) =\n    (g \\<in> o[F](f))", "from assms"], ["proof (chain)\npicking this:\n  p < 0\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  \\<forall>\\<^sub>F x in F. f x \\<noteq> 0\n  \\<forall>\\<^sub>F x in F. g x \\<noteq> 0", "have \"\\<dots> \\<longleftrightarrow> g \\<in> o[F](f)\""], ["proof (prove)\nusing this:\n  p < 0\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  \\<forall>\\<^sub>F x in F. f x \\<noteq> 0\n  \\<forall>\\<^sub>F x in F. g x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. inverse (f x)) \\<in> o[F](\\<lambda>x. inverse (g x))) =\n    (g \\<in> o[F](f))", "by (simp add: landau_o.small.inverse_cancel)"], ["proof (state)\nthis:\n  ((\\<lambda>x. inverse (f x)) \\<in> o[F](\\<lambda>x. inverse (g x))) =\n  (g \\<in> o[F](f))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)) =\n    (g \\<in> o[F](f))", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)) =\n  (g \\<in> o[F](f))", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)) =\n  (g \\<in> o[F](f))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)) =\n    (g \\<in> o[F](f))", "."], ["proof (state)\nthis:\n  ((\\<lambda>x. f x powr p) \\<in> o[F](\\<lambda>x. g x powr p)) =\n  (g \\<in> o[F](f))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma const_smallo_powr:\n  assumes \"filterlim f at_top F\" \"F \\<noteq> bot\"\n  shows \"(\\<lambda>_. c :: real) \\<in> o[F](\\<lambda>x. f x powr p) \\<longleftrightarrow> p > 0 \\<or> c = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> o[F](\\<lambda>x. f x powr p)) =\n    (0 < p \\<or> c = 0)", "by (rule linorder_cases[of p 0]; cases \"c = 0\")\n     (insert assms smallo_powr_iff[of p \"\\<lambda>_. 1\" F f] smallo_neg_powr_iff[of p f F \"\\<lambda>_. 1\"],\n      auto simp: landau_simps eventually_nonzero_simps smallo_1_iff[of F f] not_less \n           dest: landau_o.small_asymmetric simp: eventually_False landau_o.small_refl_iff)"], ["", "lemma bigo_const_powr:\n  assumes \"filterlim f at_top F\" \"F \\<noteq> bot\"\n  shows \"(\\<lambda>_. c :: real) \\<in> O[F](\\<lambda>x. f x powr p) \\<longleftrightarrow> p \\<ge> 0 \\<or> c = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O[F](\\<lambda>x. f x powr p)) =\n    (0 \\<le> p \\<or> c = 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O[F](\\<lambda>x. f x powr p)) =\n    (0 \\<le> p \\<or> c = 0)", "from assms"], ["proof (chain)\npicking this:\n  filterlim f at_top F\n  F \\<noteq> bot", "have A: \"(\\<lambda>_. 1) \\<in> o[F](f)\""], ["proof (prove)\nusing this:\n  filterlim f at_top F\n  F \\<noteq> bot\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. 1) \\<in> o[F](f)", "by (simp add: filterlim_at_top_iff_smallomega smallomega_iff_smallo landau_o.small_imp_big)"], ["proof (state)\nthis:\n  (\\<lambda>_. 1) \\<in> o[F](f)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O[F](\\<lambda>x. f x powr p)) =\n    (0 \\<le> p \\<or> c = 0)", "hence B: \"(\\<lambda>_. 1) \\<in> O[F](f)\" \"f \\<notin> O[F](\\<lambda>_. 1)\""], ["proof (prove)\nusing this:\n  (\\<lambda>_. 1) \\<in> o[F](f)\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. 1) \\<in> O[F](f) &&& f \\<notin> O[F](\\<lambda>_. 1)", "using assms"], ["proof (prove)\nusing this:\n  (\\<lambda>_. 1) \\<in> o[F](f)\n  filterlim f at_top F\n  F \\<noteq> bot\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. 1) \\<in> O[F](f) &&& f \\<notin> O[F](\\<lambda>_. 1)", "by (auto simp: landau_o.small_imp_big dest: landau_o.small_big_asymmetric)"], ["proof (state)\nthis:\n  (\\<lambda>_. 1) \\<in> O[F](f)\n  f \\<notin> O[F](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O[F](\\<lambda>x. f x powr p)) =\n    (0 \\<le> p \\<or> c = 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O[F](\\<lambda>x. f x powr p)) =\n    (0 \\<le> p \\<or> c = 0)", "by (rule linorder_cases[of p 0]; cases \"c = 0\")\n       (insert insert assms A B bigo_powr_iff[of p \"\\<lambda>_. 1\" F f] bigo_neg_powr_iff[of p \"\\<lambda>_. 1\" F f],\n        auto simp: landau_simps eventually_nonzero_simps not_less dest: landau_o.small_asymmetric)"], ["proof (state)\nthis:\n  ((\\<lambda>_. c) \\<in> O[F](\\<lambda>x. f x powr p)) =\n  (0 \\<le> p \\<or> c = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma filterlim_powr_at_top:\n  \"(b::real) > 1 \\<Longrightarrow> filterlim (\\<lambda>x. b powr x) at_top at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < b \\<Longrightarrow> filterlim ((powr) b) at_top at_top", "unfolding powr_def mult.commute[of _ \"ln b\"]"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < b \\<Longrightarrow>\n    LIM x at_top. if b = 0 then 0 else exp (ln b * x) :> at_top", "by (auto intro!: filterlim_compose[OF exp_at_top] \n        filterlim_tendsto_pos_mult_at_top filterlim_ident)"], ["", "lemma power_smallo_exponential:\n  fixes b :: real\n  assumes b: \"b > 1\"\n  shows \"(\\<lambda>x. x powr n) \\<in> o(\\<lambda>x. b powr x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x powr n) \\<in> o((powr) b)", "proof (rule smalloI_tendsto)"], ["proof (state)\ngoal (2 subgoals):\n 1. ((\\<lambda>x. x powr n / b powr x) \\<longlongrightarrow> 0) at_top\n 2. \\<forall>\\<^sub>F x in at_top. b powr x \\<noteq> 0", "from assms"], ["proof (chain)\npicking this:\n  1 < b", "have \"filterlim (\\<lambda>x. x * ln b - n * ln x) at_top at_top\""], ["proof (prove)\nusing this:\n  1 < b\n\ngoal (1 subgoal):\n 1. LIM x at_top. x * ln b - n * ln x :> at_top", "using [[simproc add: simplify_landau_sum]]"], ["proof (prove)\nusing this:\n  1 < b\n\ngoal (1 subgoal):\n 1. LIM x at_top. x * ln b - n * ln x :> at_top", "by (simp add: filterlim_at_top_iff_smallomega eventually_nonzero_simps)"], ["proof (state)\nthis:\n  LIM x at_top. x * ln b - n * ln x :> at_top\n\ngoal (2 subgoals):\n 1. ((\\<lambda>x. x powr n / b powr x) \\<longlongrightarrow> 0) at_top\n 2. \\<forall>\\<^sub>F x in at_top. b powr x \\<noteq> 0", "hence \"((\\<lambda>x. exp (-(x * ln b - n * ln x))) \\<longlongrightarrow> 0) at_top\" (is ?A)"], ["proof (prove)\nusing this:\n  LIM x at_top. x * ln b - n * ln x :> at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. exp (- (x * ln b - n * ln x))) \\<longlongrightarrow> 0)\n     at_top", "by (intro filterlim_compose[OF exp_at_bot] \n              filterlim_compose[OF filterlim_uminus_at_bot_at_top])"], ["proof (state)\nthis:\n  ((\\<lambda>x. exp (- (x * ln b - n * ln x))) \\<longlongrightarrow> 0)\n   at_top\n\ngoal (2 subgoals):\n 1. ((\\<lambda>x. x powr n / b powr x) \\<longlongrightarrow> 0) at_top\n 2. \\<forall>\\<^sub>F x in at_top. b powr x \\<noteq> 0", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. exp (- (x * ln b - n * ln x))) \\<longlongrightarrow> 0)\n   at_top\n\ngoal (2 subgoals):\n 1. ((\\<lambda>x. x powr n / b powr x) \\<longlongrightarrow> 0) at_top\n 2. \\<forall>\\<^sub>F x in at_top. b powr x \\<noteq> 0", "have \"?A \\<longleftrightarrow> ((\\<lambda>x. x powr n / b powr x) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. exp (- (x * ln b - n * ln x))) \\<longlongrightarrow> 0)\n     at_top =\n    ((\\<lambda>x. x powr n / b powr x) \\<longlongrightarrow> 0) at_top", "using b eventually_gt_at_top[of 0]"], ["proof (prove)\nusing this:\n  1 < b\n  eventually ((<) (0::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. exp (- (x * ln b - n * ln x))) \\<longlongrightarrow> 0)\n     at_top =\n    ((\\<lambda>x. x powr n / b powr x) \\<longlongrightarrow> 0) at_top", "by (intro tendsto_cong) \n       (auto simp: exp_diff powr_def field_simps exp_of_nat_mult elim: eventually_mono)"], ["proof (state)\nthis:\n  ((\\<lambda>x. exp (- (x * ln b - n * ln x))) \\<longlongrightarrow> 0)\n   at_top =\n  ((\\<lambda>x. x powr n / b powr x) \\<longlongrightarrow> 0) at_top\n\ngoal (2 subgoals):\n 1. ((\\<lambda>x. x powr n / b powr x) \\<longlongrightarrow> 0) at_top\n 2. \\<forall>\\<^sub>F x in at_top. b powr x \\<noteq> 0", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. x powr n / b powr x) \\<longlongrightarrow> 0) at_top", "show \"((\\<lambda>x. x powr n / b powr x) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. x powr n / b powr x) \\<longlongrightarrow> 0) at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. x powr n / b powr x) \\<longlongrightarrow> 0) at_top", "."], ["proof (state)\nthis:\n  ((\\<lambda>x. x powr n / b powr x) \\<longlongrightarrow> 0) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. b powr x \\<noteq> 0", "qed (insert assms, simp_all add: eventually_nonzero_simps)"], ["", "lemma powr_fast_growth_tendsto:\n  assumes gf: \"g \\<in> O[F](f)\"\n  and n: \"n \\<ge> 0\"\n  and k: \"k > 1\"\n  and f: \"filterlim f at_top F\"\n  and g: \"eventually (\\<lambda>x. g x \\<ge> 0) F\"\n  shows \"(\\<lambda>x. g x powr n) \\<in> o[F](\\<lambda>x. k powr f x :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. g x powr n) \\<in> o[F](\\<lambda>x. k powr f x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. g x powr n) \\<in> o[F](\\<lambda>x. k powr f x)", "from f"], ["proof (chain)\npicking this:\n  filterlim f at_top F", "have f': \"eventually (\\<lambda>x. f x \\<ge> 0) F\""], ["proof (prove)\nusing this:\n  filterlim f at_top F\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. 0 \\<le> f x", "by (simp add: eventually_nonzero_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. g x powr n) \\<in> o[F](\\<lambda>x. k powr f x)", "from gf"], ["proof (chain)\npicking this:\n  g \\<in> O[F](f)", "obtain c where c: \"c > 0\" \"eventually (\\<lambda>x. norm (g x) \\<le> c * norm (f x)) F\""], ["proof (prove)\nusing this:\n  g \\<in> O[F](f)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>0 < c;\n         \\<forall>\\<^sub>F x in F. norm (g x) \\<le> c * norm (f x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim landau_o.bigE)"], ["proof (state)\nthis:\n  0 < c\n  \\<forall>\\<^sub>F x in F. norm (g x) \\<le> c * norm (f x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. g x powr n) \\<in> o[F](\\<lambda>x. k powr f x)", "from c(2) g f'"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in F. norm (g x) \\<le> c * norm (f x)\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x", "have \"eventually (\\<lambda>x. g x \\<le> c * f x) F\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in F. norm (g x) \\<le> c * norm (f x)\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. g x \\<le> c * f x", "by eventually_elim simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in F. g x \\<le> c * f x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. g x powr n) \\<in> o[F](\\<lambda>x. k powr f x)", "from c(2) g f'"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in F. norm (g x) \\<le> c * norm (f x)\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x", "have \"eventually (\\<lambda>x. norm (g x powr n) \\<le> norm (c powr n * f x powr n)) F\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in F. norm (g x) \\<le> c * norm (f x)\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n  \\<forall>\\<^sub>F x in F. 0 \\<le> f x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F.\n       norm (g x powr n) \\<le> norm (c powr n * f x powr n)", "by eventually_elim (insert n c(1), auto simp: powr_mult [symmetric] intro!: powr_mono2)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in F.\n     norm (g x powr n) \\<le> norm (c powr n * f x powr n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. g x powr n) \\<in> o[F](\\<lambda>x. k powr f x)", "from landau_o.big_mono[OF this] c(1)"], ["proof (chain)\npicking this:\n  (\\<lambda>x. g x powr n) \\<in> O[F](\\<lambda>x. c powr n * f x powr n)\n  0 < c", "have \"(\\<lambda>x. g x powr n) \\<in> O[F](\\<lambda>x. f x powr n)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. g x powr n) \\<in> O[F](\\<lambda>x. c powr n * f x powr n)\n  0 < c\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. g x powr n) \\<in> O[F](\\<lambda>x. f x powr n)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. g x powr n) \\<in> O[F](\\<lambda>x. f x powr n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. g x powr n) \\<in> o[F](\\<lambda>x. k powr f x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. g x powr n) \\<in> O[F](\\<lambda>x. f x powr n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. g x powr n) \\<in> o[F](\\<lambda>x. k powr f x)", "from power_smallo_exponential f"], ["proof (chain)\npicking this:\n  1 < ?b \\<Longrightarrow> (\\<lambda>x. x powr ?n) \\<in> o((powr) ?b)\n  filterlim f at_top F", "have \"(\\<lambda>x. f x powr n) \\<in> o[F](\\<lambda>x. k powr f x)\""], ["proof (prove)\nusing this:\n  1 < ?b \\<Longrightarrow> (\\<lambda>x. x powr ?n) \\<in> o((powr) ?b)\n  filterlim f at_top F\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x powr n) \\<in> o[F](\\<lambda>x. k powr f x)", "by (rule landau_o.small.compose) fact+"], ["proof (state)\nthis:\n  (\\<lambda>x. f x powr n) \\<in> o[F](\\<lambda>x. k powr f x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. g x powr n) \\<in> o[F](\\<lambda>x. k powr f x)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. g x powr n) \\<in> o[F](\\<lambda>x. k powr f x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. g x powr n) \\<in> o[F](\\<lambda>x. k powr f x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. g x powr n) \\<in> o[F](\\<lambda>x. k powr f x)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. g x powr n) \\<in> o[F](\\<lambda>x. k powr f x)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* lemma bigo_const_inverse [simp]:\n  \"filterlim f at_top at_top \\<Longrightarrow> (\\<lambda>_ :: _ :: linorder. c) \\<in> O(\\<lambda>x. inverse (f x)) \\<longleftrightarrow> c = 0\"\n  for f :: \"_ \\<Rightarrow> real\"\nby simp\n\nlemma smallo_const_inverse [simp]:\n  \"filterlim f at_top at_top \\<Longrightarrow> (\\<lambda>_ :: _ :: linorder. c) \\<in> o(\\<lambda>x. inverse (f x)) \\<longleftrightarrow> c = 0\"\n  for f :: \"_ \\<Rightarrow> real\"\nby(simp)\n *)"], ["", "lemma bigo_abs_powr_iff [simp]:\n  \"0 < p \\<Longrightarrow> (\\<lambda>x. \\<bar>f x :: real\\<bar> powr p) \\<in> O[F](\\<lambda>x. \\<bar>g x\\<bar> powr p) \\<longleftrightarrow> f \\<in> O[F](g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < p \\<Longrightarrow>\n    ((\\<lambda>x. \\<bar>f x\\<bar> powr p)\n     \\<in> O[F](\\<lambda>x. \\<bar>g x\\<bar> powr p)) =\n    (f \\<in> O[F](g))", "by(subst bigo_powr_iff; simp)"], ["", "lemma smallo_abs_powr_iff [simp]:\n  \"0 < p \\<Longrightarrow> (\\<lambda>x. \\<bar>f x :: real\\<bar> powr p) \\<in> o[F](\\<lambda>x. \\<bar>g x\\<bar> powr p) \\<longleftrightarrow> f \\<in> o[F](g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < p \\<Longrightarrow>\n    ((\\<lambda>x. \\<bar>f x\\<bar> powr p)\n     \\<in> o[F](\\<lambda>x. \\<bar>g x\\<bar> powr p)) =\n    (f \\<in> o[F](g))", "by(subst smallo_powr_iff; simp)"], ["", "lemma const_smallo_inverse_powr:\n  assumes \"filterlim f at_top at_top\"\n  shows \"(\\<lambda>_ :: _ :: linorder. c :: real) \\<in> o(\\<lambda>x. inverse (f x powr p)) \\<longleftrightarrow> (p \\<ge> 0 \\<longrightarrow> c = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "proof(cases p \"0 :: real\" rule: linorder_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "case p: greater"], ["proof (state)\nthis:\n  0 < p\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "have \"(\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p)) \\<longleftrightarrow> (\\<lambda>_. \\<bar>c\\<bar>) \\<in> o(\\<lambda>x. inverse (f x powr p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    ((\\<lambda>_. \\<bar>c\\<bar>) \\<in> o(\\<lambda>x. inverse (f x powr p)))", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n  ((\\<lambda>_. \\<bar>c\\<bar>) \\<in> o(\\<lambda>x. inverse (f x powr p)))\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n  ((\\<lambda>_. \\<bar>c\\<bar>) \\<in> o(\\<lambda>x. inverse (f x powr p)))\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "have \"\\<bar>c\\<bar> = \\<bar>(\\<bar>c\\<bar> powr (inverse p))\\<bar> powr p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>c\\<bar> = \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p", "using p"], ["proof (prove)\nusing this:\n  0 < p\n\ngoal (1 subgoal):\n 1. \\<bar>c\\<bar> = \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p", "by(simp add: powr_powr)"], ["proof (state)\nthis:\n  \\<bar>c\\<bar> = \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "also"], ["proof (state)\nthis:\n  \\<bar>c\\<bar> = \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "{"], ["proof (state)\nthis:\n  \\<bar>c\\<bar> = \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "have \"eventually (\\<lambda>x. f x \\<ge> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 0 \\<le> f x", "using assms"], ["proof (prove)\nusing this:\n  filterlim f at_top at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 0 \\<le> f x", "by(simp add: filterlim_at_top)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 0 \\<le> f x\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top. 0 \\<le> f x", "have \"o(\\<lambda>x. inverse (f x powr p)) = o(\\<lambda>x. \\<bar>inverse (f x)\\<bar> powr p)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. 0 \\<le> f x\n\ngoal (1 subgoal):\n 1. o(\\<lambda>x. inverse (f x powr p)) =\n    o(\\<lambda>x. \\<bar>inverse (f x)\\<bar> powr p)", "by(intro landau_o.small.cong)(auto elim!: eventually_rev_mp)"], ["proof (state)\nthis:\n  o(\\<lambda>x. inverse (f x powr p)) =\n  o(\\<lambda>x. \\<bar>inverse (f x)\\<bar> powr p)\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "also"], ["proof (state)\nthis:\n  o(\\<lambda>x. inverse (f x powr p)) =\n  o(\\<lambda>x. \\<bar>inverse (f x)\\<bar> powr p)\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "have \"(\\<lambda>_. \\<bar>(\\<bar>c\\<bar> powr inverse p)\\<bar> powr p) \\<in> \\<dots> \\<longleftrightarrow> (\\<lambda>_. \\<bar>c\\<bar> powr (inverse p)) \\<in> o(\\<lambda>x. inverse (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p)\n     \\<in> o(\\<lambda>x. \\<bar>inverse (f x)\\<bar> powr p)) =\n    ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n     \\<in> o(\\<lambda>x. inverse (f x)))", "using p"], ["proof (prove)\nusing this:\n  0 < p\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p)\n     \\<in> o(\\<lambda>x. \\<bar>inverse (f x)\\<bar> powr p)) =\n    ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n     \\<in> o(\\<lambda>x. inverse (f x)))", "by(rule smallo_abs_powr_iff)"], ["proof (state)\nthis:\n  ((\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p)\n   \\<in> o(\\<lambda>x. \\<bar>inverse (f x)\\<bar> powr p)) =\n  ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n   \\<in> o(\\<lambda>x. inverse (f x)))\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p)\n   \\<in> o(\\<lambda>x. \\<bar>inverse (f x)\\<bar> powr p)) =\n  ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n   \\<in> o(\\<lambda>x. inverse (f x)))\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "note calculation"], ["proof (state)\nthis:\n  ((\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p)\n   \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n  ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n   \\<in> o(\\<lambda>x. inverse (f x)))\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "}"], ["proof (state)\nthis:\n  ((\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p)\n   \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n  ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n   \\<in> o(\\<lambda>x. inverse (f x)))\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p)\n   \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n  ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n   \\<in> o(\\<lambda>x. inverse (f x)))\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "have \"(\\<lambda>_. \\<bar>c\\<bar> powr (inverse p)) \\<in> o(\\<lambda>x. inverse (f x)) \\<longleftrightarrow> c = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n     \\<in> o(\\<lambda>x. inverse (f x))) =\n    (c = 0)", "using assms"], ["proof (prove)\nusing this:\n  filterlim f at_top at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n     \\<in> o(\\<lambda>x. inverse (f x))) =\n    (c = 0)", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n   \\<in> o(\\<lambda>x. inverse (f x))) =\n  (c = 0)\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) = (c = 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) = (c = 0)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "using p"], ["proof (prove)\nusing this:\n  ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) = (c = 0)\n  0 < p\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n  (0 \\<le> p \\<longrightarrow> c = 0)\n\ngoal (2 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "case equal"], ["proof (state)\nthis:\n  p = 0\n\ngoal (2 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "from assms"], ["proof (chain)\npicking this:\n  filterlim f at_top at_top", "have \"eventually (\\<lambda>x. f x \\<ge> 1) at_top\""], ["proof (prove)\nusing this:\n  filterlim f at_top at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 1 \\<le> f x", "using assms"], ["proof (prove)\nusing this:\n  filterlim f at_top at_top\n  filterlim f at_top at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 1 \\<le> f x", "by(simp add: filterlim_at_top)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 1 \\<le> f x\n\ngoal (2 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top. 1 \\<le> f x", "have \"o(\\<lambda>x. inverse (f x powr p)) = o(\\<lambda>x. 1)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. 1 \\<le> f x\n\ngoal (1 subgoal):\n 1. o(\\<lambda>x. inverse (f x powr p)) = o(\\<lambda>x. 1)", "by(intro landau_o.small.cong)(auto simp add: equal elim!: eventually_rev_mp)"], ["proof (state)\nthis:\n  o(\\<lambda>x. inverse (f x powr p)) = o(\\<lambda>x. 1)\n\ngoal (2 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "then"], ["proof (chain)\npicking this:\n  o(\\<lambda>x. inverse (f x powr p)) = o(\\<lambda>x. 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  o(\\<lambda>x. inverse (f x powr p)) = o(\\<lambda>x. 1)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "using equal"], ["proof (prove)\nusing this:\n  o(\\<lambda>x. inverse (f x powr p)) = o(\\<lambda>x. 1)\n  p = 0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n  (0 \\<le> p \\<longrightarrow> c = 0)\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "case less"], ["proof (state)\nthis:\n  p < 0\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "from assms"], ["proof (chain)\npicking this:\n  filterlim f at_top at_top", "have nonneg: \"\\<forall>\\<^sub>F x in at_top. 0 \\<le> f x\""], ["proof (prove)\nusing this:\n  filterlim f at_top at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 0 \\<le> f x", "by(simp add: filterlim_at_top)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 0 \\<le> f x\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "with assms"], ["proof (chain)\npicking this:\n  filterlim f at_top at_top\n  \\<forall>\\<^sub>F x in at_top. 0 \\<le> f x", "have \"\\<forall>\\<^sub>F x in at_top. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> / d \\<le> \\<bar>f x\\<bar>\" (is \"\\<forall>\\<^sub>F x in _. ?c \\<le> _\") if \"d > 0\" for d"], ["proof (prove)\nusing this:\n  filterlim f at_top at_top\n  \\<forall>\\<^sub>F x in at_top. 0 \\<le> f x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> / d \\<le> \\<bar>f x\\<bar>", "by(fastforce dest!: spec[where x=\"?c\"] simp add: filterlim_at_top elim: eventually_rev_mp)"], ["proof (state)\nthis:\n  0 < ?d \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> / ?d \\<le> \\<bar>f x\\<bar>\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "then"], ["proof (chain)\npicking this:\n  0 < ?d \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> / ?d \\<le> \\<bar>f x\\<bar>", "have \"(\\<lambda>_. \\<bar>c\\<bar> powr (1 / - p)) \\<in> o(f)\""], ["proof (prove)\nusing this:\n  0 < ?d \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> / ?d \\<le> \\<bar>f x\\<bar>\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. \\<bar>c\\<bar> powr (1 / - p)) \\<in> o(f)", "by(intro landau_o.smallI)(simp add: field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>_. \\<bar>c\\<bar> powr (1 / - p)) \\<in> o(f)\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>_. \\<bar>c\\<bar> powr (1 / - p)) \\<in> o(f)", "have \"(\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p) \\<in> o(\\<lambda>x. \\<bar>f x\\<bar> powr - p)\""], ["proof (prove)\nusing this:\n  (\\<lambda>_. \\<bar>c\\<bar> powr (1 / - p)) \\<in> o(f)\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p)\n    \\<in> o(\\<lambda>x. \\<bar>f x\\<bar> powr - p)", "using less"], ["proof (prove)\nusing this:\n  (\\<lambda>_. \\<bar>c\\<bar> powr (1 / - p)) \\<in> o(f)\n  p < 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p)\n    \\<in> o(\\<lambda>x. \\<bar>f x\\<bar> powr - p)", "by(subst smallo_powr_iff) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p)\n  \\<in> o(\\<lambda>x. \\<bar>f x\\<bar> powr - p)\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "also"], ["proof (state)\nthis:\n  (\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p)\n  \\<in> o(\\<lambda>x. \\<bar>f x\\<bar> powr - p)\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "have \"(\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p) = (\\<lambda>_. \\<bar>c\\<bar>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p) =\n    (\\<lambda>_. \\<bar>c\\<bar>)", "using less"], ["proof (prove)\nusing this:\n  p < 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p) =\n    (\\<lambda>_. \\<bar>c\\<bar>)", "by(simp add: powr_powr)"], ["proof (state)\nthis:\n  (\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p) =\n  (\\<lambda>_. \\<bar>c\\<bar>)\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "also"], ["proof (state)\nthis:\n  (\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p) =\n  (\\<lambda>_. \\<bar>c\\<bar>)\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "have \"o(\\<lambda>x. \\<bar>f x\\<bar> powr - p) = o(\\<lambda>x. f x powr - p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. o(\\<lambda>x. \\<bar>f x\\<bar> powr - p) = o(\\<lambda>x. f x powr - p)", "using nonneg"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. 0 \\<le> f x\n\ngoal (1 subgoal):\n 1. o(\\<lambda>x. \\<bar>f x\\<bar> powr - p) = o(\\<lambda>x. f x powr - p)", "by(auto intro!: landau_o.small.cong elim: eventually_rev_mp)"], ["proof (state)\nthis:\n  o(\\<lambda>x. \\<bar>f x\\<bar> powr - p) = o(\\<lambda>x. f x powr - p)\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>_. \\<bar>c\\<bar>) \\<in> o(\\<lambda>x. f x powr - p)", "have \"(\\<lambda>_. c) \\<in> o(\\<lambda>x. f x powr - p)\""], ["proof (prove)\nusing this:\n  (\\<lambda>_. \\<bar>c\\<bar>) \\<in> o(\\<lambda>x. f x powr - p)\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. c) \\<in> o(\\<lambda>x. f x powr - p)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>_. c) \\<in> o(\\<lambda>x. f x powr - p)\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "with less"], ["proof (chain)\npicking this:\n  p < 0\n  (\\<lambda>_. c) \\<in> o(\\<lambda>x. f x powr - p)", "show ?thesis"], ["proof (prove)\nusing this:\n  p < 0\n  (\\<lambda>_. c) \\<in> o(\\<lambda>x. f x powr - p)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n    (0 \\<le> p \\<longrightarrow> c = 0)", "by(simp add: powr_minus[symmetric])"], ["proof (state)\nthis:\n  ((\\<lambda>_. c) \\<in> o(\\<lambda>x. inverse (f x powr p))) =\n  (0 \\<le> p \\<longrightarrow> c = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bigo_const_inverse_powr:\n  assumes \"filterlim f at_top at_top\"\n  shows \"(\\<lambda>_ :: _ :: linorder. c :: real) \\<in> O(\\<lambda>x. inverse (f x powr p)) \\<longleftrightarrow> c = 0 \\<or> p \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "proof(cases p \"0 :: real\" rule: linorder_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "case p_pos: greater"], ["proof (state)\nthis:\n  0 < p\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "have \"(\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p)) \\<longleftrightarrow> (\\<lambda>_. \\<bar>c\\<bar>) \\<in> O(\\<lambda>x. inverse (f x powr p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    ((\\<lambda>_. \\<bar>c\\<bar>) \\<in> O(\\<lambda>x. inverse (f x powr p)))", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n  ((\\<lambda>_. \\<bar>c\\<bar>) \\<in> O(\\<lambda>x. inverse (f x powr p)))\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n  ((\\<lambda>_. \\<bar>c\\<bar>) \\<in> O(\\<lambda>x. inverse (f x powr p)))\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "have \"\\<bar>c\\<bar> = \\<bar>(\\<bar>c\\<bar> powr inverse p)\\<bar> powr p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>c\\<bar> = \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p", "using p_pos"], ["proof (prove)\nusing this:\n  0 < p\n\ngoal (1 subgoal):\n 1. \\<bar>c\\<bar> = \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p", "by(simp add: powr_powr)"], ["proof (state)\nthis:\n  \\<bar>c\\<bar> = \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "also"], ["proof (state)\nthis:\n  \\<bar>c\\<bar> = \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "{"], ["proof (state)\nthis:\n  \\<bar>c\\<bar> = \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "have \"eventually (\\<lambda>x. f x \\<ge> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 0 \\<le> f x", "using assms"], ["proof (prove)\nusing this:\n  filterlim f at_top at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 0 \\<le> f x", "by(simp add: filterlim_at_top)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 0 \\<le> f x\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top. 0 \\<le> f x", "have \"O(\\<lambda>x. inverse (f x powr p)) = O(\\<lambda>x. \\<bar>inverse (f x)\\<bar> powr p)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. 0 \\<le> f x\n\ngoal (1 subgoal):\n 1. O(\\<lambda>x. inverse (f x powr p)) =\n    O(\\<lambda>x. \\<bar>inverse (f x)\\<bar> powr p)", "by(intro landau_o.big.cong)(auto elim!: eventually_rev_mp)"], ["proof (state)\nthis:\n  O(\\<lambda>x. inverse (f x powr p)) =\n  O(\\<lambda>x. \\<bar>inverse (f x)\\<bar> powr p)\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "also"], ["proof (state)\nthis:\n  O(\\<lambda>x. inverse (f x powr p)) =\n  O(\\<lambda>x. \\<bar>inverse (f x)\\<bar> powr p)\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "have \"(\\<lambda>_. \\<bar>(\\<bar>c\\<bar> powr inverse p)\\<bar> powr p) \\<in> \\<dots> \\<longleftrightarrow> \n                 (\\<lambda>_. \\<bar>c\\<bar> powr (inverse p)) \\<in> O(\\<lambda>x. inverse (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p)\n     \\<in> O(\\<lambda>x. \\<bar>inverse (f x)\\<bar> powr p)) =\n    ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n     \\<in> O(\\<lambda>x. inverse (f x)))", "using p_pos"], ["proof (prove)\nusing this:\n  0 < p\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p)\n     \\<in> O(\\<lambda>x. \\<bar>inverse (f x)\\<bar> powr p)) =\n    ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n     \\<in> O(\\<lambda>x. inverse (f x)))", "by (rule bigo_abs_powr_iff)"], ["proof (state)\nthis:\n  ((\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p)\n   \\<in> O(\\<lambda>x. \\<bar>inverse (f x)\\<bar> powr p)) =\n  ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n   \\<in> O(\\<lambda>x. inverse (f x)))\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p)\n   \\<in> O(\\<lambda>x. \\<bar>inverse (f x)\\<bar> powr p)) =\n  ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n   \\<in> O(\\<lambda>x. inverse (f x)))\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "note calculation"], ["proof (state)\nthis:\n  ((\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p)\n   \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n  ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n   \\<in> O(\\<lambda>x. inverse (f x)))\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "}"], ["proof (state)\nthis:\n  ((\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p)\n   \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n  ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n   \\<in> O(\\<lambda>x. inverse (f x)))\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr inverse p\\<bar> powr p)\n   \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n  ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n   \\<in> O(\\<lambda>x. inverse (f x)))\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "have \"(\\<lambda>_. \\<bar>c\\<bar> powr (inverse p)) \\<in> O(\\<lambda>x. inverse (f x)) \\<longleftrightarrow> c = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n     \\<in> O(\\<lambda>x. inverse (f x))) =\n    (c = 0)", "using assms"], ["proof (prove)\nusing this:\n  filterlim f at_top at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n     \\<in> O(\\<lambda>x. inverse (f x))) =\n    (c = 0)", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>_. \\<bar>c\\<bar> powr inverse p)\n   \\<in> O(\\<lambda>x. inverse (f x))) =\n  (c = 0)\n\ngoal (3 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 3. 0 < p \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) = (c = 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) = (c = 0)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "using p_pos"], ["proof (prove)\nusing this:\n  ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) = (c = 0)\n  0 < p\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n  (c = 0 \\<or> p \\<le> 0)\n\ngoal (2 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "case equal"], ["proof (state)\nthis:\n  p = 0\n\ngoal (2 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "from assms"], ["proof (chain)\npicking this:\n  filterlim f at_top at_top", "have \"eventually (\\<lambda>x. f x \\<ge> 1) at_top\""], ["proof (prove)\nusing this:\n  filterlim f at_top at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 1 \\<le> f x", "using assms"], ["proof (prove)\nusing this:\n  filterlim f at_top at_top\n  filterlim f at_top at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 1 \\<le> f x", "by(simp add: filterlim_at_top)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 1 \\<le> f x\n\ngoal (2 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top. 1 \\<le> f x", "have \"O(\\<lambda>x. inverse (f x powr p)) = O(\\<lambda>x. 1)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. 1 \\<le> f x\n\ngoal (1 subgoal):\n 1. O(\\<lambda>x. inverse (f x powr p)) = O(\\<lambda>x. 1)", "by(intro landau_o.big.cong) (auto simp add: equal elim!: eventually_rev_mp)"], ["proof (state)\nthis:\n  O(\\<lambda>x. inverse (f x powr p)) = O(\\<lambda>x. 1)\n\ngoal (2 subgoals):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)\n 2. p = 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "then"], ["proof (chain)\npicking this:\n  O(\\<lambda>x. inverse (f x powr p)) = O(\\<lambda>x. 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  O(\\<lambda>x. inverse (f x powr p)) = O(\\<lambda>x. 1)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "using equal"], ["proof (prove)\nusing this:\n  O(\\<lambda>x. inverse (f x powr p)) = O(\\<lambda>x. 1)\n  p = 0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n  (c = 0 \\<or> p \\<le> 0)\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "case less"], ["proof (state)\nthis:\n  p < 0\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "from assms"], ["proof (chain)\npicking this:\n  filterlim f at_top at_top", "have *: \"\\<forall>\\<^sub>F x in at_top. 1 \\<le> f x\""], ["proof (prove)\nusing this:\n  filterlim f at_top at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 1 \\<le> f x", "by(simp add: filterlim_at_top)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 1 \\<le> f x\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top. 1 \\<le> f x", "have \"(\\<lambda>_. \\<bar>c\\<bar> powr (1 / - p)) \\<in> O(f)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. 1 \\<le> f x\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. \\<bar>c\\<bar> powr (1 / - p)) \\<in> O(f)", "by(intro bigoI[where c=\"\\<bar>c\\<bar> powr (1 / - p)\"])\n      (auto intro: order_trans[OF _ mult_left_mono, rotated] elim!: eventually_rev_mp[OF _ always_eventually])"], ["proof (state)\nthis:\n  (\\<lambda>_. \\<bar>c\\<bar> powr (1 / - p)) \\<in> O(f)\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>_. \\<bar>c\\<bar> powr (1 / - p)) \\<in> O(f)", "have \"(\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p) \\<in> O(\\<lambda>x. \\<bar>f x\\<bar> powr - p)\""], ["proof (prove)\nusing this:\n  (\\<lambda>_. \\<bar>c\\<bar> powr (1 / - p)) \\<in> O(f)\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p)\n    \\<in> O(\\<lambda>x. \\<bar>f x\\<bar> powr - p)", "using less"], ["proof (prove)\nusing this:\n  (\\<lambda>_. \\<bar>c\\<bar> powr (1 / - p)) \\<in> O(f)\n  p < 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p)\n    \\<in> O(\\<lambda>x. \\<bar>f x\\<bar> powr - p)", "by (subst bigo_powr_iff) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p)\n  \\<in> O(\\<lambda>x. \\<bar>f x\\<bar> powr - p)\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "also"], ["proof (state)\nthis:\n  (\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p)\n  \\<in> O(\\<lambda>x. \\<bar>f x\\<bar> powr - p)\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "have \"(\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p) = (\\<lambda>_. \\<bar>c\\<bar>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p) =\n    (\\<lambda>_. \\<bar>c\\<bar>)", "using less"], ["proof (prove)\nusing this:\n  p < 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p) =\n    (\\<lambda>_. \\<bar>c\\<bar>)", "by(simp add: powr_powr)"], ["proof (state)\nthis:\n  (\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p) =\n  (\\<lambda>_. \\<bar>c\\<bar>)\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "also"], ["proof (state)\nthis:\n  (\\<lambda>_. \\<bar>\\<bar>c\\<bar> powr (1 / - p)\\<bar> powr - p) =\n  (\\<lambda>_. \\<bar>c\\<bar>)\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "have \"O(\\<lambda>x. \\<bar>f x\\<bar> powr - p) = O(\\<lambda>x. f x powr - p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. O(\\<lambda>x. \\<bar>f x\\<bar> powr - p) = O(\\<lambda>x. f x powr - p)", "using *"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. 1 \\<le> f x\n\ngoal (1 subgoal):\n 1. O(\\<lambda>x. \\<bar>f x\\<bar> powr - p) = O(\\<lambda>x. f x powr - p)", "by (auto intro!: landau_o.big.cong elim: eventually_rev_mp)"], ["proof (state)\nthis:\n  O(\\<lambda>x. \\<bar>f x\\<bar> powr - p) = O(\\<lambda>x. f x powr - p)\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>_. \\<bar>c\\<bar>) \\<in> O(\\<lambda>x. f x powr - p)", "have \"(\\<lambda>_. c) \\<in> O(\\<lambda>x. f x powr - p)\""], ["proof (prove)\nusing this:\n  (\\<lambda>_. \\<bar>c\\<bar>) \\<in> O(\\<lambda>x. f x powr - p)\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. c) \\<in> O(\\<lambda>x. f x powr - p)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>_. c) \\<in> O(\\<lambda>x. f x powr - p)\n\ngoal (1 subgoal):\n 1. p < 0 \\<Longrightarrow>\n    ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>_. c) \\<in> O(\\<lambda>x. f x powr - p)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "using less"], ["proof (prove)\nusing this:\n  (\\<lambda>_. c) \\<in> O(\\<lambda>x. f x powr - p)\n  p < 0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n    (c = 0 \\<or> p \\<le> 0)", "by (simp add: powr_minus[symmetric])"], ["proof (state)\nthis:\n  ((\\<lambda>_. c) \\<in> O(\\<lambda>x. inverse (f x powr p))) =\n  (c = 0 \\<or> p \\<le> 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}