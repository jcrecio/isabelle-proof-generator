{"file_name": "/home/qj213/afp-2021-10-22/thys/Zeta_Function/Zeta_Library.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Zeta_Function", "problem_names": ["lemma at_within_altdef:\n  \"at x within A = (INF S\\<in>{S. open S \\<and> x \\<in> S}. principal (S \\<inter> (A - {x})))\"", "lemma tendsto_at_left_realI_sequentially:\n  fixes f :: \"real \\<Rightarrow> 'b::first_countable_topology\"\n  assumes *: \"\\<And>X. filterlim X (at_left c) sequentially \\<Longrightarrow> (\\<lambda>n. f (X n)) \\<longlonglongrightarrow> y\"\n  shows \"(f \\<longlongrightarrow> y) (at_left c)\"", "lemma\n  shows at_right_PInf [simp]: \"at_right (\\<infinity> :: ereal) = bot\"\n    and at_left_MInf [simp]: \"at_left (-\\<infinity> :: ereal) = bot\"", "lemma tendsto_at_left_erealI_sequentially:\n  fixes f :: \"ereal \\<Rightarrow> 'b::first_countable_topology\"\n  assumes *: \"\\<And>X. filterlim X (at_left c) sequentially \\<Longrightarrow> (\\<lambda>n. f (X n)) \\<longlonglongrightarrow> y\"\n  shows \"(f \\<longlongrightarrow> y) (at_left c)\"", "lemma tendsto_at_right_realI_sequentially:\n  fixes f :: \"real \\<Rightarrow> 'b::first_countable_topology\"\n  assumes *: \"\\<And>X. filterlim X (at_right c) sequentially \\<Longrightarrow> (\\<lambda>n. f (X n)) \\<longlonglongrightarrow> y\"\n  shows \"(f \\<longlongrightarrow> y) (at_right c)\"", "lemma tendsto_at_right_erealI_sequentially:\n  fixes f :: \"ereal \\<Rightarrow> 'b::first_countable_topology\"\n  assumes *: \"\\<And>X. filterlim X (at_right c) sequentially \\<Longrightarrow> (\\<lambda>n. f (X n)) \\<longlonglongrightarrow> y\"\n  shows \"(f \\<longlongrightarrow> y) (at_right c)\"", "lemma continuous_on_imp_set_integrable_cbox:\n  fixes h :: \"'a :: euclidean_space \\<Rightarrow> 'b :: euclidean_space\"\n  assumes \"continuous_on (cbox a b) h\"\n  shows   \"set_integrable lborel (cbox a b) h\"", "lemma set_nn_integral_cong:\n  assumes \"M = M'\" \"A = B\" \"\\<And>x. x \\<in> space M \\<inter> A \\<Longrightarrow> f x = g x\"\n  shows   \"set_nn_integral M A f = set_nn_integral M' B g\"", "lemma set_integrable_bound:\n  fixes f :: \"'a \\<Rightarrow> 'b::{banach, second_countable_topology}\"\n    and g :: \"'a \\<Rightarrow> 'c::{banach, second_countable_topology}\"\n  assumes \"set_integrable M A f\" \"set_borel_measurable M A g\"\n  assumes \"AE x in M. x \\<in> A \\<longrightarrow> norm (g x) \\<le> norm (f x)\"\n  shows   \"set_integrable M A g\"", "lemma nn_integral_has_integral_lebesgue:\n  fixes f :: \"'a::euclidean_space \\<Rightarrow> real\"\n  assumes nonneg: \"\\<And>x. x \\<in> \\<Omega> \\<Longrightarrow> 0 \\<le> f x\" and I: \"(f has_integral I) \\<Omega>\"\n  shows \"integral\\<^sup>N lborel (\\<lambda>x. indicator \\<Omega> x * f x) = I\"", "lemma has_absolute_integral_change_of_variables_1':\n  fixes f :: \"real \\<Rightarrow> real\" and g :: \"real \\<Rightarrow> real\"\n  assumes S: \"S \\<in> sets lebesgue\"\n    and der_g: \"\\<And>x. x \\<in> S \\<Longrightarrow> (g has_field_derivative g' x) (at x within S)\"\n    and inj: \"inj_on g S\"\n  shows \"(\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f(g x)) absolutely_integrable_on S \\<and>\n           integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f(g x)) = b\n     \\<longleftrightarrow> f absolutely_integrable_on (g ` S) \\<and> integral (g ` S) f = b\"", "lemma set_nn_integral_lborel_eq_integral:\n  fixes f::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes \"set_borel_measurable borel A f\"\n  assumes \"\\<And>x. x \\<in> A \\<Longrightarrow> 0 \\<le> f x\" \"(\\<integral>\\<^sup>+x\\<in>A. f x \\<partial>lborel) < \\<infinity>\"\n  shows \"(\\<integral>\\<^sup>+x\\<in>A. f x \\<partial>lborel) = integral A f\"", "lemma nn_integral_has_integral_lebesgue':\n  fixes f :: \"'a::euclidean_space \\<Rightarrow> real\"\n  assumes nonneg: \"\\<And>x. x \\<in> \\<Omega> \\<Longrightarrow> 0 \\<le> f x\" and I: \"(f has_integral I) \\<Omega>\"\n  shows \"integral\\<^sup>N lborel (\\<lambda>x. ennreal (f x) * indicator \\<Omega> x) = ennreal I\"", "lemma uniform_limit_set_lebesgue_integral:\n  fixes f :: \"'a \\<Rightarrow> 'b :: euclidean_space \\<Rightarrow> 'c :: {banach, second_countable_topology}\"\n  assumes \"set_integrable lborel X' g\"\n  assumes [measurable]: \"X' \\<in> sets borel\"\n  assumes [measurable]: \"\\<And>y. y \\<in> Y \\<Longrightarrow> set_borel_measurable borel X' (f y)\"\n  assumes \"\\<And>y. y \\<in> Y \\<Longrightarrow> (AE t\\<in>X' in lborel. norm (f y t) \\<le> g t)\"\n  assumes \"eventually (\\<lambda>x. X x \\<in> sets borel \\<and> X x \\<subseteq> X') F\"\n  assumes \"filterlim (\\<lambda>x. set_lebesgue_integral lborel (X x) g)\n             (nhds (set_lebesgue_integral lborel X' g)) F\"\n  shows \"uniform_limit Y\n           (\\<lambda>x y. set_lebesgue_integral lborel (X x) (f y))\n           (\\<lambda>y. set_lebesgue_integral lborel X' (f y)) F\"", "lemma integral_dominated_convergence_at_right:\n  fixes s :: \"real \\<Rightarrow> 'a \\<Rightarrow> 'b::{banach, second_countable_topology}\" and w :: \"'a \\<Rightarrow> real\"\n    and f :: \"'a \\<Rightarrow> 'b\" and M and c :: real\n  assumes \"f \\<in> borel_measurable M\" \"\\<And>t. s t \\<in> borel_measurable M\" \"integrable M w\"\n  assumes lim: \"AE x in M. ((\\<lambda>i. s i x) \\<longlongrightarrow> f x) (at_right c)\"\n  assumes bound: \"\\<forall>\\<^sub>F i in at_right c. AE x in M. norm (s i x) \\<le> w x\"\n  shows \"((\\<lambda>t. integral\\<^sup>L M (s t)) \\<longlongrightarrow> integral\\<^sup>L M f) (at_right c)\"", "lemma integral_dominated_convergence_at_left:\n  fixes s :: \"real \\<Rightarrow> 'a \\<Rightarrow> 'b::{banach, second_countable_topology}\" and w :: \"'a \\<Rightarrow> real\"\n    and f :: \"'a \\<Rightarrow> 'b\" and M and c :: real\n  assumes \"f \\<in> borel_measurable M\" \"\\<And>t. s t \\<in> borel_measurable M\" \"integrable M w\"\n  assumes lim: \"AE x in M. ((\\<lambda>i. s i x) \\<longlongrightarrow> f x) (at_left c)\"\n  assumes bound: \"\\<forall>\\<^sub>F i in at_left c. AE x in M. norm (s i x) \\<le> w x\"\n  shows \"((\\<lambda>t. integral\\<^sup>L M (s t)) \\<longlongrightarrow> integral\\<^sup>L M f) (at_left c)\"", "lemma uniform_limit_interval_integral_right:\n  fixes f :: \"'a \\<Rightarrow> real \\<Rightarrow> 'c :: {banach, second_countable_topology}\"\n  assumes \"interval_lebesgue_integrable lborel a b g\"\n  assumes [measurable]: \"\\<And>y. y \\<in> Y \\<Longrightarrow> set_borel_measurable borel (einterval a b) (f y)\"\n  assumes \"\\<And>y. y \\<in> Y \\<Longrightarrow> (AE t\\<in>einterval a b in lborel. norm (f y t) \\<le> g t)\"\n  assumes \"a < b\"\n  shows   \"uniform_limit Y (\\<lambda>b' y. LBINT t=a..b'. f y t) (\\<lambda>y. LBINT t=a..b. f y t) (at_left b)\"", "lemma uniform_limit_interval_integral_left:\n  fixes f :: \"'a \\<Rightarrow> real \\<Rightarrow> 'c :: {banach, second_countable_topology}\"\n  assumes \"interval_lebesgue_integrable lborel a b g\"\n  assumes [measurable]: \"\\<And>y. y \\<in> Y \\<Longrightarrow> set_borel_measurable borel (einterval a b) (f y)\"\n  assumes \"\\<And>y. y \\<in> Y \\<Longrightarrow> (AE t\\<in>einterval a b in lborel. norm (f y t) \\<le> g t)\"\n  assumes \"a < b\"\n  shows   \"uniform_limit Y (\\<lambda>a' y. LBINT t=a'..b. f y t) (\\<lambda>y. LBINT t=a..b. f y t) (at_right a)\"", "lemma uniform_limit_interval_integral_sequentially:\n  fixes f :: \"'a \\<Rightarrow> real \\<Rightarrow> 'c :: {banach, second_countable_topology}\"\n  assumes \"interval_lebesgue_integrable lborel a b g\"\n  assumes [measurable]: \"\\<And>y. y \\<in> Y \\<Longrightarrow> set_borel_measurable borel (einterval a b) (f y)\"\n  assumes \"\\<And>y. y \\<in> Y \\<Longrightarrow> (AE t\\<in>einterval a b in lborel. norm (f y t) \\<le> g t)\"\n  assumes a': \"filterlim a' (at_right a) sequentially\"\n  assumes b': \"filterlim b' (at_left b) sequentially\"\n  assumes \"a < b\"\n  shows   \"uniform_limit Y (\\<lambda>n y. LBINT t=a' n..b' n. f y t)\n             (\\<lambda>y. LBINT t=a..b. f y t) sequentially\"", "lemma interval_lebesgue_integrable_combine:\n  assumes \"interval_lebesgue_integrable lborel A B f\"\n  assumes \"interval_lebesgue_integrable lborel B C f\"\n  assumes \"set_borel_measurable borel (einterval A C) f\"\n  assumes \"A \\<le> B\" \"B \\<le> C\"\n  shows   \"interval_lebesgue_integrable lborel A C f\"", "lemma interval_lebesgue_integrable_bigo_right:\n  fixes A B :: real\n  fixes f :: \"real \\<Rightarrow> real\"\n  assumes \"f \\<in> O[at_left B](g)\"\n  assumes cont: \"continuous_on {A..<B} f\"\n  assumes meas: \"set_borel_measurable borel {A<..<B} f\"\n  assumes \"interval_lebesgue_integrable lborel A B g\"\n  assumes \"A < B\"\n  shows   \"interval_lebesgue_integrable lborel A B f\"", "lemma interval_lebesgue_integrable_bigo_left:\n  fixes A B :: real\n  fixes f :: \"real \\<Rightarrow> real\"\n  assumes \"f \\<in> O[at_right A](g)\"\n  assumes cont: \"continuous_on {A<..B} f\"\n  assumes meas: \"set_borel_measurable borel {A<..<B} f\"\n  assumes \"interval_lebesgue_integrable lborel A B g\"\n  assumes \"A < B\"\n  shows   \"interval_lebesgue_integrable lborel A B f\"", "lemma summable_comparison_test_bigo:\n  fixes f :: \"nat \\<Rightarrow> real\"\n  assumes \"summable (\\<lambda>n. norm (g n))\" \"f \\<in> O(g)\"\n  shows   \"summable f\"", "lemma fps_expansion_cong:\n  assumes \"eventually (\\<lambda>x. g x = h x) (nhds x)\"\n  shows   \"fps_expansion g x = fps_expansion h x\"", "lemma fps_expansion_eq_zero_iff:\n  assumes \"g holomorphic_on ball z r\" \"r > 0\"\n  shows   \"fps_expansion g z = 0 \\<longleftrightarrow> (\\<forall>z\\<in>ball z r. g z = 0)\"", "lemma fds_nth_higher_deriv:\n  \"fds_nth ((fds_deriv ^^ k) F) = (\\<lambda>n. (-1) ^ k * of_real (ln n) ^ k * fds_nth F n)\"", "lemma binomial_n_n_minus_one [simp]: \"n > 0 \\<Longrightarrow> n choose (n - Suc 0) = n\"", "lemma has_field_derivative_complex_powr_right:\n  \"w \\<noteq> 0 \\<Longrightarrow> ((\\<lambda>z. w powr z) has_field_derivative Ln w * w powr z) (at z within A)\"", "lemmas has_field_derivative_complex_powr_right' =\n  has_field_derivative_complex_powr_right[THEN DERIV_chain2]"], "translations": [["", "lemma at_within_altdef:\n  \"at x within A = (INF S\\<in>{S. open S \\<and> x \\<in> S}. principal (S \\<inter> (A - {x})))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at x within A =\n    (INF S\\<in>{S. open S \\<and> x \\<in> S}.\n        principal (S \\<inter> (A - {x})))", "unfolding at_within_def nhds_def inf_principal [symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. inf (Inf (principal ` {S. open S \\<and> x \\<in> S}))\n     (principal (A - {x})) =\n    (INF S\\<in>{S. open S \\<and> x \\<in> S}.\n        inf (principal S) (principal (A - {x})))", "by (subst INF_inf_distrib [symmetric]) (auto simp: INF_constant)"], ["", "lemma tendsto_at_left_realI_sequentially:\n  fixes f :: \"real \\<Rightarrow> 'b::first_countable_topology\"\n  assumes *: \"\\<And>X. filterlim X (at_left c) sequentially \\<Longrightarrow> (\\<lambda>n. f (X n)) \\<longlonglongrightarrow> y\"\n  shows \"(f \\<longlongrightarrow> y) (at_left c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_left c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_left c)", "obtain A where A: \"decseq A\" \"open (A n)\" \"y \\<in> A n\" \"nhds y = (INF n. principal (A n))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>decseq A; \\<And>n. open (A n); \\<And>n. y \\<in> A n;\n         nhds y = (INF n. principal (A n))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule nhds_countable[of y]) (rule that)"], ["proof (state)\nthis:\n  decseq A\n  open (A ?n)\n  y \\<in> A ?n\n  nhds y = (INF n. principal (A n))\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_left c)", "have \"\\<forall>m. \\<exists>d<c. \\<forall>x\\<in>{d<..<c}. f x \\<in> A m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m. \\<exists>d<c. \\<forall>x\\<in>{d<..<c}. f x \\<in> A m", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m.\n               \\<exists>d<c.\n                  \\<forall>x\\<in>{d<..<c}. f x \\<in> A m) \\<Longrightarrow>\n    False", "assume \"\\<not> (\\<forall>m. \\<exists>d<c. \\<forall>x\\<in>{d<..<c}. f x \\<in> A m)\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>m. \\<exists>d<c. \\<forall>x\\<in>{d<..<c}. f x \\<in> A m)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m.\n               \\<exists>d<c.\n                  \\<forall>x\\<in>{d<..<c}. f x \\<in> A m) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>m. \\<exists>d<c. \\<forall>x\\<in>{d<..<c}. f x \\<in> A m)", "obtain m where **: \"\\<And>d. d < c \\<Longrightarrow> \\<exists>x\\<in>{d<..<c}. f x \\<notin> A m\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>m. \\<exists>d<c. \\<forall>x\\<in>{d<..<c}. f x \\<in> A m)\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        (\\<And>d.\n            d < c \\<Longrightarrow>\n            \\<exists>x\\<in>{d<..<c}. f x \\<notin> A m) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ?d < c \\<Longrightarrow> \\<exists>x\\<in>{?d<..<c}. f x \\<notin> A m\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m.\n               \\<exists>d<c.\n                  \\<forall>x\\<in>{d<..<c}. f x \\<in> A m) \\<Longrightarrow>\n    False", "have \"\\<exists>X. \\<forall>n. (f (X n) \\<notin> A m \\<and> X n < c) \\<and> X (Suc n) > c - max 0 ((c - X n) / 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>X.\n       \\<forall>n.\n          (f (X n) \\<notin> A m \\<and> X n < c) \\<and>\n          c - max 0 ((c - X n) / 2) < X (Suc n)", "proof (intro dependent_nat_choice, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>x. f x \\<notin> A m \\<and> x < c\n 2. \\<And>x n.\n       f x \\<notin> A m \\<and> x < c \\<Longrightarrow>\n       \\<exists>y.\n          (f y \\<notin> A m \\<and> y < c) \\<and> c - max 0 ((c - x) / 2) < y", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<exists>x. f x \\<notin> A m \\<and> x < c\n 2. \\<And>x n.\n       f x \\<notin> A m \\<and> x < c \\<Longrightarrow>\n       \\<exists>y.\n          (f y \\<notin> A m \\<and> y < c) \\<and> c - max 0 ((c - x) / 2) < y", "from **[of \"c - 1\"]"], ["proof (chain)\npicking this:\n  c - 1 < c \\<Longrightarrow> \\<exists>x\\<in>{c - 1<..<c}. f x \\<notin> A m", "show ?case"], ["proof (prove)\nusing this:\n  c - 1 < c \\<Longrightarrow> \\<exists>x\\<in>{c - 1<..<c}. f x \\<notin> A m\n\ngoal (1 subgoal):\n 1. \\<exists>x. f x \\<notin> A m \\<and> x < c", "by auto"], ["proof (state)\nthis:\n  \\<exists>x. f x \\<notin> A m \\<and> x < c\n\ngoal (1 subgoal):\n 1. \\<And>x n.\n       f x \\<notin> A m \\<and> x < c \\<Longrightarrow>\n       \\<exists>y.\n          (f y \\<notin> A m \\<and> y < c) \\<and> c - max 0 ((c - x) / 2) < y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x n.\n       f x \\<notin> A m \\<and> x < c \\<Longrightarrow>\n       \\<exists>y.\n          (f y \\<notin> A m \\<and> y < c) \\<and> c - max 0 ((c - x) / 2) < y", "case (2 x n)"], ["proof (state)\nthis:\n  f x \\<notin> A m \\<and> x < c\n\ngoal (1 subgoal):\n 1. \\<And>x n.\n       f x \\<notin> A m \\<and> x < c \\<Longrightarrow>\n       \\<exists>y.\n          (f y \\<notin> A m \\<and> y < c) \\<and> c - max 0 ((c - x) / 2) < y", "with **[of \"c - max 0 (c - x) / 2\"]"], ["proof (chain)\npicking this:\n  c - max 0 (c - x) / 2 < c \\<Longrightarrow>\n  \\<exists>x\\<in>{c - max 0 (c - x) / 2<..<c}. f x \\<notin> A m\n  f x \\<notin> A m \\<and> x < c", "show ?case"], ["proof (prove)\nusing this:\n  c - max 0 (c - x) / 2 < c \\<Longrightarrow>\n  \\<exists>x\\<in>{c - max 0 (c - x) / 2<..<c}. f x \\<notin> A m\n  f x \\<notin> A m \\<and> x < c\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       (f y \\<notin> A m \\<and> y < c) \\<and> c - max 0 ((c - x) / 2) < y", "by force"], ["proof (state)\nthis:\n  \\<exists>y.\n     (f y \\<notin> A m \\<and> y < c) \\<and> c - max 0 ((c - x) / 2) < y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>X.\n     \\<forall>n.\n        (f (X n) \\<notin> A m \\<and> X n < c) \\<and>\n        c - max 0 ((c - X n) / 2) < X (Suc n)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m.\n               \\<exists>d<c.\n                  \\<forall>x\\<in>{d<..<c}. f x \\<in> A m) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>X.\n     \\<forall>n.\n        (f (X n) \\<notin> A m \\<and> X n < c) \\<and>\n        c - max 0 ((c - X n) / 2) < X (Suc n)", "obtain X where X: \"\\<And>n. f (X n) \\<notin> A m\" \"\\<And>n. X n < c\" \"\\<And>n. X (Suc n) > c - max 0 ((c - X n) / 2)\""], ["proof (prove)\nusing this:\n  \\<exists>X.\n     \\<forall>n.\n        (f (X n) \\<notin> A m \\<and> X n < c) \\<and>\n        c - max 0 ((c - X n) / 2) < X (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>\\<And>n. f (X n) \\<notin> A m; \\<And>n. X n < c;\n         \\<And>n. c - max 0 ((c - X n) / 2) < X (Suc n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f (X ?n) \\<notin> A m\n  X ?n < c\n  c - max 0 ((c - X ?n) / 2) < X (Suc ?n)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m.\n               \\<exists>d<c.\n                  \\<forall>x\\<in>{d<..<c}. f x \\<in> A m) \\<Longrightarrow>\n    False", "have X_ge: \"X n \\<ge> c - (c - X 0) / 2 ^ n\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. c - (c - X 0) / 2 ^ n \\<le> X n", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. c - (c - X 0) / 2 ^ 0 \\<le> X 0\n 2. \\<And>n.\n       c - (c - X 0) / 2 ^ n \\<le> X n \\<Longrightarrow>\n       c - (c - X 0) / 2 ^ Suc n \\<le> X (Suc n)", "case (Suc n)"], ["proof (state)\nthis:\n  c - (c - X 0) / 2 ^ n \\<le> X n\n\ngoal (2 subgoals):\n 1. c - (c - X 0) / 2 ^ 0 \\<le> X 0\n 2. \\<And>n.\n       c - (c - X 0) / 2 ^ n \\<le> X n \\<Longrightarrow>\n       c - (c - X 0) / 2 ^ Suc n \\<le> X (Suc n)", "have \"c - (c - X 0) / 2 ^ Suc n = c - (c - (c - (c - X 0) / 2 ^ n)) / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c - (c - X 0) / 2 ^ Suc n = c - (c - (c - (c - X 0) / 2 ^ n)) / 2", "by simp"], ["proof (state)\nthis:\n  c - (c - X 0) / 2 ^ Suc n = c - (c - (c - (c - X 0) / 2 ^ n)) / 2\n\ngoal (2 subgoals):\n 1. c - (c - X 0) / 2 ^ 0 \\<le> X 0\n 2. \\<And>n.\n       c - (c - X 0) / 2 ^ n \\<le> X n \\<Longrightarrow>\n       c - (c - X 0) / 2 ^ Suc n \\<le> X (Suc n)", "also"], ["proof (state)\nthis:\n  c - (c - X 0) / 2 ^ Suc n = c - (c - (c - (c - X 0) / 2 ^ n)) / 2\n\ngoal (2 subgoals):\n 1. c - (c - X 0) / 2 ^ 0 \\<le> X 0\n 2. \\<And>n.\n       c - (c - X 0) / 2 ^ n \\<le> X n \\<Longrightarrow>\n       c - (c - X 0) / 2 ^ Suc n \\<le> X (Suc n)", "have \"c - (c - (c - (c - X 0) / 2 ^ n)) / 2 \\<le> c - (c - X n) / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c - (c - (c - (c - X 0) / 2 ^ n)) / 2 \\<le> c - (c - X n) / 2", "by (intro diff_left_mono divide_right_mono Suc diff_right_mono) auto"], ["proof (state)\nthis:\n  c - (c - (c - (c - X 0) / 2 ^ n)) / 2 \\<le> c - (c - X n) / 2\n\ngoal (2 subgoals):\n 1. c - (c - X 0) / 2 ^ 0 \\<le> X 0\n 2. \\<And>n.\n       c - (c - X 0) / 2 ^ n \\<le> X n \\<Longrightarrow>\n       c - (c - X 0) / 2 ^ Suc n \\<le> X (Suc n)", "also"], ["proof (state)\nthis:\n  c - (c - (c - (c - X 0) / 2 ^ n)) / 2 \\<le> c - (c - X n) / 2\n\ngoal (2 subgoals):\n 1. c - (c - X 0) / 2 ^ 0 \\<le> X 0\n 2. \\<And>n.\n       c - (c - X 0) / 2 ^ n \\<le> X n \\<Longrightarrow>\n       c - (c - X 0) / 2 ^ Suc n \\<le> X (Suc n)", "have \"\\<dots> = c - max 0 ((c - X n) / 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c - (c - X n) / 2 = c - max 0 ((c - X n) / 2)", "using X[of n]"], ["proof (prove)\nusing this:\n  f (X n) \\<notin> A m\n  X n < c\n  c - max 0 ((c - X n) / 2) < X (Suc n)\n\ngoal (1 subgoal):\n 1. c - (c - X n) / 2 = c - max 0 ((c - X n) / 2)", "by (simp add: max_def)"], ["proof (state)\nthis:\n  c - (c - X n) / 2 = c - max 0 ((c - X n) / 2)\n\ngoal (2 subgoals):\n 1. c - (c - X 0) / 2 ^ 0 \\<le> X 0\n 2. \\<And>n.\n       c - (c - X 0) / 2 ^ n \\<le> X n \\<Longrightarrow>\n       c - (c - X 0) / 2 ^ Suc n \\<le> X (Suc n)", "also"], ["proof (state)\nthis:\n  c - (c - X n) / 2 = c - max 0 ((c - X n) / 2)\n\ngoal (2 subgoals):\n 1. c - (c - X 0) / 2 ^ 0 \\<le> X 0\n 2. \\<And>n.\n       c - (c - X 0) / 2 ^ n \\<le> X n \\<Longrightarrow>\n       c - (c - X 0) / 2 ^ Suc n \\<le> X (Suc n)", "have \"\\<dots> < X (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c - max 0 ((c - X n) / 2) < X (Suc n)", "using X[of n]"], ["proof (prove)\nusing this:\n  f (X n) \\<notin> A m\n  X n < c\n  c - max 0 ((c - X n) / 2) < X (Suc n)\n\ngoal (1 subgoal):\n 1. c - max 0 ((c - X n) / 2) < X (Suc n)", "by simp"], ["proof (state)\nthis:\n  c - max 0 ((c - X n) / 2) < X (Suc n)\n\ngoal (2 subgoals):\n 1. c - (c - X 0) / 2 ^ 0 \\<le> X 0\n 2. \\<And>n.\n       c - (c - X 0) / 2 ^ n \\<le> X n \\<Longrightarrow>\n       c - (c - X 0) / 2 ^ Suc n \\<le> X (Suc n)", "finally"], ["proof (chain)\npicking this:\n  c - (c - X 0) / 2 ^ Suc n < X (Suc n)", "show ?case"], ["proof (prove)\nusing this:\n  c - (c - X 0) / 2 ^ Suc n < X (Suc n)\n\ngoal (1 subgoal):\n 1. c - (c - X 0) / 2 ^ Suc n \\<le> X (Suc n)", "by linarith"], ["proof (state)\nthis:\n  c - (c - X 0) / 2 ^ Suc n \\<le> X (Suc n)\n\ngoal (1 subgoal):\n 1. c - (c - X 0) / 2 ^ 0 \\<le> X 0", "qed auto"], ["proof (state)\nthis:\n  c - (c - X 0) / 2 ^ ?n \\<le> X ?n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m.\n               \\<exists>d<c.\n                  \\<forall>x\\<in>{d<..<c}. f x \\<in> A m) \\<Longrightarrow>\n    False", "have \"X \\<longlonglongrightarrow> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<longlonglongrightarrow> c", "proof (rule tendsto_sandwich)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially. ?f n \\<le> X n\n 2. \\<forall>\\<^sub>F n in sequentially. X n \\<le> ?h n\n 3. ?f \\<longlonglongrightarrow> c\n 4. ?h \\<longlonglongrightarrow> c", "show \"eventually (\\<lambda>n. X n \\<le> c) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. X n \\<le> c", "using X"], ["proof (prove)\nusing this:\n  f (X ?n) \\<notin> A m\n  X ?n < c\n  c - max 0 ((c - X ?n) / 2) < X (Suc ?n)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. X n \\<le> c", "by (intro always_eventually) (auto intro!: less_imp_le)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. X n \\<le> c\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially. ?f n \\<le> X n\n 2. ?f \\<longlonglongrightarrow> c\n 3. (\\<lambda>n. c) \\<longlonglongrightarrow> c", "show \"eventually (\\<lambda>n. X n \\<ge> c - (c - X 0) / 2 ^ n) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. c - (c - X 0) / 2 ^ n \\<le> X n", "using X_ge"], ["proof (prove)\nusing this:\n  c - (c - X 0) / 2 ^ ?n \\<le> X ?n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. c - (c - X 0) / 2 ^ n \\<le> X n", "by (intro always_eventually) auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. c - (c - X 0) / 2 ^ n \\<le> X n\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. c - (c - X 0) / 2 ^ n) \\<longlonglongrightarrow> c\n 2. (\\<lambda>n. c) \\<longlonglongrightarrow> c", "qed real_asymp+"], ["proof (state)\nthis:\n  X \\<longlonglongrightarrow> c\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m.\n               \\<exists>d<c.\n                  \\<forall>x\\<in>{d<..<c}. f x \\<in> A m) \\<Longrightarrow>\n    False", "hence \"filterlim X (at_left c) sequentially\""], ["proof (prove)\nusing this:\n  X \\<longlonglongrightarrow> c\n\ngoal (1 subgoal):\n 1. filterlim X (at_left c) sequentially", "by (rule tendsto_imp_filterlim_at_left)\n         (use X in \\<open>auto intro!: always_eventually less_imp_le\\<close>)"], ["proof (state)\nthis:\n  filterlim X (at_left c) sequentially\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m.\n               \\<exists>d<c.\n                  \\<forall>x\\<in>{d<..<c}. f x \\<in> A m) \\<Longrightarrow>\n    False", "from topological_tendstoD[OF *[OF this] A(2, 3), of m] X(1)"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in sequentially. f (X x) \\<in> A m\n  f (X ?n) \\<notin> A m", "show False"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially. f (X x) \\<in> A m\n  f (X ?n) \\<notin> A m\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>m. \\<exists>d<c. \\<forall>x\\<in>{d<..<c}. f x \\<in> A m\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_left c)", "then"], ["proof (chain)\npicking this:\n  \\<forall>m. \\<exists>d<c. \\<forall>x\\<in>{d<..<c}. f x \\<in> A m", "obtain d where d: \"d m < c\" \"x \\<in> {d m<..<c} \\<Longrightarrow> f x \\<in> A m\" for m x"], ["proof (prove)\nusing this:\n  \\<forall>m. \\<exists>d<c. \\<forall>x\\<in>{d<..<c}. f x \\<in> A m\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>\\<And>m. d m < c;\n         \\<And>m x.\n            x \\<in> {d m<..<c} \\<Longrightarrow> f x \\<in> A m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  d ?m < c\n  ?x \\<in> {d ?m<..<c} \\<Longrightarrow> f ?x \\<in> A ?m\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_left c)", "have ***: \"at_left c = (INF S\\<in>{S. open S \\<and> c \\<in> S}. principal (S \\<inter> {..<c}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at_left c =\n    (INF S\\<in>{S. open S \\<and> c \\<in> S}. principal (S \\<inter> {..<c}))", "by (simp add: at_within_altdef)"], ["proof (state)\nthis:\n  at_left c =\n  (INF S\\<in>{S. open S \\<and> c \\<in> S}. principal (S \\<inter> {..<c}))\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_left c)", "from d"], ["proof (chain)\npicking this:\n  d ?m < c\n  ?x \\<in> {d ?m<..<c} \\<Longrightarrow> f ?x \\<in> A ?m", "show ?thesis"], ["proof (prove)\nusing this:\n  d ?m < c\n  ?x \\<in> {d ?m<..<c} \\<Longrightarrow> f ?x \\<in> A ?m\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_left c)", "unfolding *** A"], ["proof (prove)\nusing this:\n  d ?m < c\n  ?x \\<in> {d ?m<..<c} \\<Longrightarrow> f ?x \\<in> A ?m\n\ngoal (1 subgoal):\n 1. filterlim f (INF n. principal (A n))\n     (INF S\\<in>{S. open S \\<and> c \\<in> S}. principal (S \\<inter> {..<c}))", "using A(1,2)"], ["proof (prove)\nusing this:\n  d ?m < c\n  ?x \\<in> {d ?m<..<c} \\<Longrightarrow> f ?x \\<in> A ?m\n  decseq A\n  open (A ?n)\n\ngoal (1 subgoal):\n 1. filterlim f (INF n. principal (A n))\n     (INF S\\<in>{S. open S \\<and> c \\<in> S}. principal (S \\<inter> {..<c}))", "by (intro filterlim_base[of _ \"\\<lambda>m. {d m<..}\"]) auto"], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> y) (at_left c)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  shows at_right_PInf [simp]: \"at_right (\\<infinity> :: ereal) = bot\"\n    and at_left_MInf [simp]: \"at_left (-\\<infinity> :: ereal) = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at_right \\<infinity> = bot &&& at_left (- \\<infinity>) = bot", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. at_right \\<infinity> = bot\n 2. at_left (- \\<infinity>) = bot", "have \"{(\\<infinity>::ereal)<..} = {}\" \"{..<-(\\<infinity>::ereal)} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<infinity><..} = {} &&& {..<- \\<infinity>} = {}", "by auto"], ["proof (state)\nthis:\n  {\\<infinity><..} = {}\n  {..<- \\<infinity>} = {}\n\ngoal (2 subgoals):\n 1. at_right \\<infinity> = bot\n 2. at_left (- \\<infinity>) = bot", "thus \"at_right (\\<infinity> :: ereal) = bot\" \"at_left (-\\<infinity> :: ereal) = bot\""], ["proof (prove)\nusing this:\n  {\\<infinity><..} = {}\n  {..<- \\<infinity>} = {}\n\ngoal (1 subgoal):\n 1. at_right \\<infinity> = bot &&& at_left (- \\<infinity>) = bot", "by (simp_all add: at_within_def)"], ["proof (state)\nthis:\n  at_right \\<infinity> = bot\n  at_left (- \\<infinity>) = bot\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tendsto_at_left_erealI_sequentially:\n  fixes f :: \"ereal \\<Rightarrow> 'b::first_countable_topology\"\n  assumes *: \"\\<And>X. filterlim X (at_left c) sequentially \\<Longrightarrow> (\\<lambda>n. f (X n)) \\<longlonglongrightarrow> y\"\n  shows \"(f \\<longlongrightarrow> y) (at_left c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_left c)", "proof (cases c)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow> (f \\<longlongrightarrow> y) (at_left c)\n 2. c = \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_left c)\n 3. c = - \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_left c)", "case [simp]: PInf"], ["proof (state)\nthis:\n  c = \\<infinity>\n\ngoal (3 subgoals):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow> (f \\<longlongrightarrow> y) (at_left c)\n 2. c = \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_left c)\n 3. c = - \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_left c)", "have \"((\\<lambda>x. f (ereal x)) \\<longlongrightarrow> y) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f (ereal x)) \\<longlongrightarrow> y) at_top", "using assms"], ["proof (prove)\nusing this:\n  filterlim ?X (at_left c) sequentially \\<Longrightarrow>\n  (\\<lambda>n. f (?X n)) \\<longlonglongrightarrow> y\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f (ereal x)) \\<longlongrightarrow> y) at_top", "by (intro tendsto_at_topI_sequentially assms)\n       (simp_all flip: ereal_tendsto_simps add: o_def filterlim_at)"], ["proof (state)\nthis:\n  ((\\<lambda>x. f (ereal x)) \\<longlongrightarrow> y) at_top\n\ngoal (3 subgoals):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow> (f \\<longlongrightarrow> y) (at_left c)\n 2. c = \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_left c)\n 3. c = - \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_left c)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. f (ereal x)) \\<longlongrightarrow> y) at_top\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_left c)", "by (simp add: at_left_PInf filterlim_filtermap)"], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> y) (at_left c)\n\ngoal (2 subgoals):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow> (f \\<longlongrightarrow> y) (at_left c)\n 2. c = - \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_left c)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow> (f \\<longlongrightarrow> y) (at_left c)\n 2. c = - \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_left c)", "case [simp]: MInf"], ["proof (state)\nthis:\n  c = - \\<infinity>\n\ngoal (2 subgoals):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow> (f \\<longlongrightarrow> y) (at_left c)\n 2. c = - \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_left c)", "thus ?thesis"], ["proof (prove)\nusing this:\n  c = - \\<infinity>\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_left c)", "by auto"], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> y) (at_left c)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow> (f \\<longlongrightarrow> y) (at_left c)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow> (f \\<longlongrightarrow> y) (at_left c)", "case [simp]: (real c')"], ["proof (state)\nthis:\n  c = ereal c'\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow> (f \\<longlongrightarrow> y) (at_left c)", "have \"((\\<lambda>x. f (ereal x)) \\<longlongrightarrow> y) (at_left c')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f (ereal x)) \\<longlongrightarrow> y) (at_left c')", "proof (intro tendsto_at_left_realI_sequentially assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       filterlim X (at_left c') sequentially \\<Longrightarrow>\n       LIM n sequentially. ereal (X n) :> at_left c", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       filterlim X (at_left c') sequentially \\<Longrightarrow>\n       LIM n sequentially. ereal (X n) :> at_left c", "assume *: \"filterlim X (at_left c') sequentially\""], ["proof (state)\nthis:\n  filterlim X (at_left c') sequentially\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       filterlim X (at_left c') sequentially \\<Longrightarrow>\n       LIM n sequentially. ereal (X n) :> at_left c", "show \"filterlim (\\<lambda>n. ereal (X n)) (at_left c) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM n sequentially. ereal (X n) :> at_left c", "by (rule filterlim_compose[OF _ *])\n         (simp add: sequentially_imp_eventually_within tendsto_imp_filterlim_at_left)"], ["proof (state)\nthis:\n  LIM n sequentially. ereal (X n) :> at_left c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<lambda>x. f (ereal x)) \\<longlongrightarrow> y) (at_left c')\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow> (f \\<longlongrightarrow> y) (at_left c)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. f (ereal x)) \\<longlongrightarrow> y) (at_left c')\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_left c)", "by (simp add: at_left_ereal filterlim_filtermap)"], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> y) (at_left c)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tendsto_at_right_realI_sequentially:\n  fixes f :: \"real \\<Rightarrow> 'b::first_countable_topology\"\n  assumes *: \"\\<And>X. filterlim X (at_right c) sequentially \\<Longrightarrow> (\\<lambda>n. f (X n)) \\<longlonglongrightarrow> y\"\n  shows \"(f \\<longlongrightarrow> y) (at_right c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_right c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_right c)", "obtain A where A: \"decseq A\" \"open (A n)\" \"y \\<in> A n\" \"nhds y = (INF n. principal (A n))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>decseq A; \\<And>n. open (A n); \\<And>n. y \\<in> A n;\n         nhds y = (INF n. principal (A n))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule nhds_countable[of y]) (rule that)"], ["proof (state)\nthis:\n  decseq A\n  open (A ?n)\n  y \\<in> A ?n\n  nhds y = (INF n. principal (A n))\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_right c)", "have \"\\<forall>m. \\<exists>d>c. \\<forall>x\\<in>{c<..<d}. f x \\<in> A m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m. \\<exists>d>c. \\<forall>x\\<in>{c<..<d}. f x \\<in> A m", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m.\n               \\<exists>d>c.\n                  \\<forall>x\\<in>{c<..<d}. f x \\<in> A m) \\<Longrightarrow>\n    False", "assume \"\\<not> (\\<forall>m. \\<exists>d>c. \\<forall>x\\<in>{c<..<d}. f x \\<in> A m)\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>m. \\<exists>d>c. \\<forall>x\\<in>{c<..<d}. f x \\<in> A m)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m.\n               \\<exists>d>c.\n                  \\<forall>x\\<in>{c<..<d}. f x \\<in> A m) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>m. \\<exists>d>c. \\<forall>x\\<in>{c<..<d}. f x \\<in> A m)", "obtain m where **: \"\\<And>d. d > c \\<Longrightarrow> \\<exists>x\\<in>{c<..<d}. f x \\<notin> A m\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>m. \\<exists>d>c. \\<forall>x\\<in>{c<..<d}. f x \\<in> A m)\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        (\\<And>d.\n            c < d \\<Longrightarrow>\n            \\<exists>x\\<in>{c<..<d}. f x \\<notin> A m) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c < ?d \\<Longrightarrow> \\<exists>x\\<in>{c<..<?d}. f x \\<notin> A m\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m.\n               \\<exists>d>c.\n                  \\<forall>x\\<in>{c<..<d}. f x \\<in> A m) \\<Longrightarrow>\n    False", "have \"\\<exists>X. \\<forall>n. (f (X n) \\<notin> A m \\<and> X n > c) \\<and> X (Suc n) < c + max 0 ((X n - c) / 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>X.\n       \\<forall>n.\n          (f (X n) \\<notin> A m \\<and> c < X n) \\<and>\n          X (Suc n) < c + max 0 ((X n - c) / 2)", "proof (intro dependent_nat_choice, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>x. f x \\<notin> A m \\<and> c < x\n 2. \\<And>x n.\n       f x \\<notin> A m \\<and> c < x \\<Longrightarrow>\n       \\<exists>y.\n          (f y \\<notin> A m \\<and> c < y) \\<and> y < c + max 0 ((x - c) / 2)", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<exists>x. f x \\<notin> A m \\<and> c < x\n 2. \\<And>x n.\n       f x \\<notin> A m \\<and> c < x \\<Longrightarrow>\n       \\<exists>y.\n          (f y \\<notin> A m \\<and> c < y) \\<and> y < c + max 0 ((x - c) / 2)", "from **[of \"c + 1\"]"], ["proof (chain)\npicking this:\n  c < c + 1 \\<Longrightarrow> \\<exists>x\\<in>{c<..<c + 1}. f x \\<notin> A m", "show ?case"], ["proof (prove)\nusing this:\n  c < c + 1 \\<Longrightarrow> \\<exists>x\\<in>{c<..<c + 1}. f x \\<notin> A m\n\ngoal (1 subgoal):\n 1. \\<exists>x. f x \\<notin> A m \\<and> c < x", "by auto"], ["proof (state)\nthis:\n  \\<exists>x. f x \\<notin> A m \\<and> c < x\n\ngoal (1 subgoal):\n 1. \\<And>x n.\n       f x \\<notin> A m \\<and> c < x \\<Longrightarrow>\n       \\<exists>y.\n          (f y \\<notin> A m \\<and> c < y) \\<and> y < c + max 0 ((x - c) / 2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x n.\n       f x \\<notin> A m \\<and> c < x \\<Longrightarrow>\n       \\<exists>y.\n          (f y \\<notin> A m \\<and> c < y) \\<and> y < c + max 0 ((x - c) / 2)", "case (2 x n)"], ["proof (state)\nthis:\n  f x \\<notin> A m \\<and> c < x\n\ngoal (1 subgoal):\n 1. \\<And>x n.\n       f x \\<notin> A m \\<and> c < x \\<Longrightarrow>\n       \\<exists>y.\n          (f y \\<notin> A m \\<and> c < y) \\<and> y < c + max 0 ((x - c) / 2)", "with **[of \"c + max 0 (x - c) / 2\"]"], ["proof (chain)\npicking this:\n  c < c + max 0 (x - c) / 2 \\<Longrightarrow>\n  \\<exists>x\\<in>{c<..<c + max 0 (x - c) / 2}. f x \\<notin> A m\n  f x \\<notin> A m \\<and> c < x", "show ?case"], ["proof (prove)\nusing this:\n  c < c + max 0 (x - c) / 2 \\<Longrightarrow>\n  \\<exists>x\\<in>{c<..<c + max 0 (x - c) / 2}. f x \\<notin> A m\n  f x \\<notin> A m \\<and> c < x\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       (f y \\<notin> A m \\<and> c < y) \\<and> y < c + max 0 ((x - c) / 2)", "by force"], ["proof (state)\nthis:\n  \\<exists>y.\n     (f y \\<notin> A m \\<and> c < y) \\<and> y < c + max 0 ((x - c) / 2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>X.\n     \\<forall>n.\n        (f (X n) \\<notin> A m \\<and> c < X n) \\<and>\n        X (Suc n) < c + max 0 ((X n - c) / 2)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m.\n               \\<exists>d>c.\n                  \\<forall>x\\<in>{c<..<d}. f x \\<in> A m) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>X.\n     \\<forall>n.\n        (f (X n) \\<notin> A m \\<and> c < X n) \\<and>\n        X (Suc n) < c + max 0 ((X n - c) / 2)", "obtain X where X: \"\\<And>n. f (X n) \\<notin> A m\" \"\\<And>n. X n > c\" \"\\<And>n. X (Suc n) < c + max 0 ((X n - c) / 2)\""], ["proof (prove)\nusing this:\n  \\<exists>X.\n     \\<forall>n.\n        (f (X n) \\<notin> A m \\<and> c < X n) \\<and>\n        X (Suc n) < c + max 0 ((X n - c) / 2)\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>\\<And>n. f (X n) \\<notin> A m; \\<And>n. c < X n;\n         \\<And>n. X (Suc n) < c + max 0 ((X n - c) / 2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f (X ?n) \\<notin> A m\n  c < X ?n\n  X (Suc ?n) < c + max 0 ((X ?n - c) / 2)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m.\n               \\<exists>d>c.\n                  \\<forall>x\\<in>{c<..<d}. f x \\<in> A m) \\<Longrightarrow>\n    False", "have X_le: \"X n \\<le> c + (X 0 - c) / 2 ^ n\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. X n \\<le> c + (X 0 - c) / 2 ^ n", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. X 0 \\<le> c + (X 0 - c) / 2 ^ 0\n 2. \\<And>n.\n       X n \\<le> c + (X 0 - c) / 2 ^ n \\<Longrightarrow>\n       X (Suc n) \\<le> c + (X 0 - c) / 2 ^ Suc n", "case (Suc n)"], ["proof (state)\nthis:\n  X n \\<le> c + (X 0 - c) / 2 ^ n\n\ngoal (2 subgoals):\n 1. X 0 \\<le> c + (X 0 - c) / 2 ^ 0\n 2. \\<And>n.\n       X n \\<le> c + (X 0 - c) / 2 ^ n \\<Longrightarrow>\n       X (Suc n) \\<le> c + (X 0 - c) / 2 ^ Suc n", "have \"X (Suc n) < c + max 0 ((X n - c) / 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X (Suc n) < c + max 0 ((X n - c) / 2)", "by (intro X)"], ["proof (state)\nthis:\n  X (Suc n) < c + max 0 ((X n - c) / 2)\n\ngoal (2 subgoals):\n 1. X 0 \\<le> c + (X 0 - c) / 2 ^ 0\n 2. \\<And>n.\n       X n \\<le> c + (X 0 - c) / 2 ^ n \\<Longrightarrow>\n       X (Suc n) \\<le> c + (X 0 - c) / 2 ^ Suc n", "also"], ["proof (state)\nthis:\n  X (Suc n) < c + max 0 ((X n - c) / 2)\n\ngoal (2 subgoals):\n 1. X 0 \\<le> c + (X 0 - c) / 2 ^ 0\n 2. \\<And>n.\n       X n \\<le> c + (X 0 - c) / 2 ^ n \\<Longrightarrow>\n       X (Suc n) \\<le> c + (X 0 - c) / 2 ^ Suc n", "have \"\\<dots> = c + (X n - c) / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c + max 0 ((X n - c) / 2) = c + (X n - c) / 2", "using X[of n]"], ["proof (prove)\nusing this:\n  f (X n) \\<notin> A m\n  c < X n\n  X (Suc n) < c + max 0 ((X n - c) / 2)\n\ngoal (1 subgoal):\n 1. c + max 0 ((X n - c) / 2) = c + (X n - c) / 2", "by (simp add: field_simps max_def)"], ["proof (state)\nthis:\n  c + max 0 ((X n - c) / 2) = c + (X n - c) / 2\n\ngoal (2 subgoals):\n 1. X 0 \\<le> c + (X 0 - c) / 2 ^ 0\n 2. \\<And>n.\n       X n \\<le> c + (X 0 - c) / 2 ^ n \\<Longrightarrow>\n       X (Suc n) \\<le> c + (X 0 - c) / 2 ^ Suc n", "also"], ["proof (state)\nthis:\n  c + max 0 ((X n - c) / 2) = c + (X n - c) / 2\n\ngoal (2 subgoals):\n 1. X 0 \\<le> c + (X 0 - c) / 2 ^ 0\n 2. \\<And>n.\n       X n \\<le> c + (X 0 - c) / 2 ^ n \\<Longrightarrow>\n       X (Suc n) \\<le> c + (X 0 - c) / 2 ^ Suc n", "have \"\\<dots> \\<le> c + (c + (X 0 - c) / 2 ^ n - c) / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c + (X n - c) / 2 \\<le> c + (c + (X 0 - c) / 2 ^ n - c) / 2", "by (intro add_left_mono divide_right_mono Suc diff_right_mono) auto"], ["proof (state)\nthis:\n  c + (X n - c) / 2 \\<le> c + (c + (X 0 - c) / 2 ^ n - c) / 2\n\ngoal (2 subgoals):\n 1. X 0 \\<le> c + (X 0 - c) / 2 ^ 0\n 2. \\<And>n.\n       X n \\<le> c + (X 0 - c) / 2 ^ n \\<Longrightarrow>\n       X (Suc n) \\<le> c + (X 0 - c) / 2 ^ Suc n", "also"], ["proof (state)\nthis:\n  c + (X n - c) / 2 \\<le> c + (c + (X 0 - c) / 2 ^ n - c) / 2\n\ngoal (2 subgoals):\n 1. X 0 \\<le> c + (X 0 - c) / 2 ^ 0\n 2. \\<And>n.\n       X n \\<le> c + (X 0 - c) / 2 ^ n \\<Longrightarrow>\n       X (Suc n) \\<le> c + (X 0 - c) / 2 ^ Suc n", "have \"\\<dots> = c + (X 0 - c) / 2 ^ Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c + (c + (X 0 - c) / 2 ^ n - c) / 2 = c + (X 0 - c) / 2 ^ Suc n", "by simp"], ["proof (state)\nthis:\n  c + (c + (X 0 - c) / 2 ^ n - c) / 2 = c + (X 0 - c) / 2 ^ Suc n\n\ngoal (2 subgoals):\n 1. X 0 \\<le> c + (X 0 - c) / 2 ^ 0\n 2. \\<And>n.\n       X n \\<le> c + (X 0 - c) / 2 ^ n \\<Longrightarrow>\n       X (Suc n) \\<le> c + (X 0 - c) / 2 ^ Suc n", "finally"], ["proof (chain)\npicking this:\n  X (Suc n) < c + (X 0 - c) / 2 ^ Suc n", "show ?case"], ["proof (prove)\nusing this:\n  X (Suc n) < c + (X 0 - c) / 2 ^ Suc n\n\ngoal (1 subgoal):\n 1. X (Suc n) \\<le> c + (X 0 - c) / 2 ^ Suc n", "by linarith"], ["proof (state)\nthis:\n  X (Suc n) \\<le> c + (X 0 - c) / 2 ^ Suc n\n\ngoal (1 subgoal):\n 1. X 0 \\<le> c + (X 0 - c) / 2 ^ 0", "qed auto"], ["proof (state)\nthis:\n  X ?n \\<le> c + (X 0 - c) / 2 ^ ?n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m.\n               \\<exists>d>c.\n                  \\<forall>x\\<in>{c<..<d}. f x \\<in> A m) \\<Longrightarrow>\n    False", "have \"X \\<longlonglongrightarrow> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<longlonglongrightarrow> c", "proof (rule tendsto_sandwich)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially. ?f n \\<le> X n\n 2. \\<forall>\\<^sub>F n in sequentially. X n \\<le> ?h n\n 3. ?f \\<longlonglongrightarrow> c\n 4. ?h \\<longlonglongrightarrow> c", "show \"eventually (\\<lambda>n. X n \\<ge> c) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. c \\<le> X n", "using X"], ["proof (prove)\nusing this:\n  f (X ?n) \\<notin> A m\n  c < X ?n\n  X (Suc ?n) < c + max 0 ((X ?n - c) / 2)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. c \\<le> X n", "by (intro always_eventually) (auto intro!: less_imp_le)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. c \\<le> X n\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially. X n \\<le> ?h n\n 2. (\\<lambda>n. c) \\<longlonglongrightarrow> c\n 3. ?h \\<longlonglongrightarrow> c", "show \"eventually (\\<lambda>n. X n \\<le> c + (X 0 - c) / 2 ^ n) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. X n \\<le> c + (X 0 - c) / 2 ^ n", "using X_le"], ["proof (prove)\nusing this:\n  X ?n \\<le> c + (X 0 - c) / 2 ^ ?n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. X n \\<le> c + (X 0 - c) / 2 ^ n", "by (intro always_eventually) auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. X n \\<le> c + (X 0 - c) / 2 ^ n\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. c) \\<longlonglongrightarrow> c\n 2. (\\<lambda>n. c + (X 0 - c) / 2 ^ n) \\<longlonglongrightarrow> c", "qed real_asymp+"], ["proof (state)\nthis:\n  X \\<longlonglongrightarrow> c\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m.\n               \\<exists>d>c.\n                  \\<forall>x\\<in>{c<..<d}. f x \\<in> A m) \\<Longrightarrow>\n    False", "hence \"filterlim X (at_right c) sequentially\""], ["proof (prove)\nusing this:\n  X \\<longlonglongrightarrow> c\n\ngoal (1 subgoal):\n 1. filterlim X (at_right c) sequentially", "by (rule tendsto_imp_filterlim_at_right)\n         (use X in \\<open>auto intro!: always_eventually less_imp_le\\<close>)"], ["proof (state)\nthis:\n  filterlim X (at_right c) sequentially\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m.\n               \\<exists>d>c.\n                  \\<forall>x\\<in>{c<..<d}. f x \\<in> A m) \\<Longrightarrow>\n    False", "from topological_tendstoD[OF *[OF this] A(2, 3), of m] X(1)"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in sequentially. f (X x) \\<in> A m\n  f (X ?n) \\<notin> A m", "show False"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially. f (X x) \\<in> A m\n  f (X ?n) \\<notin> A m\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>m. \\<exists>d>c. \\<forall>x\\<in>{c<..<d}. f x \\<in> A m\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_right c)", "then"], ["proof (chain)\npicking this:\n  \\<forall>m. \\<exists>d>c. \\<forall>x\\<in>{c<..<d}. f x \\<in> A m", "obtain d where d: \"d m > c\" \"x \\<in> {c<..<d m} \\<Longrightarrow> f x \\<in> A m\" for m x"], ["proof (prove)\nusing this:\n  \\<forall>m. \\<exists>d>c. \\<forall>x\\<in>{c<..<d}. f x \\<in> A m\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>\\<And>m. c < d m;\n         \\<And>m x.\n            x \\<in> {c<..<d m} \\<Longrightarrow> f x \\<in> A m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  c < d ?m\n  ?x \\<in> {c<..<d ?m} \\<Longrightarrow> f ?x \\<in> A ?m\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_right c)", "have ***: \"at_right c = (INF S\\<in>{S. open S \\<and> c \\<in> S}. principal (S \\<inter> {c<..}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at_right c =\n    (INF S\\<in>{S. open S \\<and> c \\<in> S}. principal (S \\<inter> {c<..}))", "by (simp add: at_within_altdef)"], ["proof (state)\nthis:\n  at_right c =\n  (INF S\\<in>{S. open S \\<and> c \\<in> S}. principal (S \\<inter> {c<..}))\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_right c)", "from d"], ["proof (chain)\npicking this:\n  c < d ?m\n  ?x \\<in> {c<..<d ?m} \\<Longrightarrow> f ?x \\<in> A ?m", "show ?thesis"], ["proof (prove)\nusing this:\n  c < d ?m\n  ?x \\<in> {c<..<d ?m} \\<Longrightarrow> f ?x \\<in> A ?m\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_right c)", "unfolding *** A"], ["proof (prove)\nusing this:\n  c < d ?m\n  ?x \\<in> {c<..<d ?m} \\<Longrightarrow> f ?x \\<in> A ?m\n\ngoal (1 subgoal):\n 1. filterlim f (INF n. principal (A n))\n     (INF S\\<in>{S. open S \\<and> c \\<in> S}. principal (S \\<inter> {c<..}))", "using A(1,2)"], ["proof (prove)\nusing this:\n  c < d ?m\n  ?x \\<in> {c<..<d ?m} \\<Longrightarrow> f ?x \\<in> A ?m\n  decseq A\n  open (A ?n)\n\ngoal (1 subgoal):\n 1. filterlim f (INF n. principal (A n))\n     (INF S\\<in>{S. open S \\<and> c \\<in> S}. principal (S \\<inter> {c<..}))", "by (intro filterlim_base[of _ \"\\<lambda>m. {..<d m}\"]) auto"], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> y) (at_right c)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tendsto_at_right_erealI_sequentially:\n  fixes f :: \"ereal \\<Rightarrow> 'b::first_countable_topology\"\n  assumes *: \"\\<And>X. filterlim X (at_right c) sequentially \\<Longrightarrow> (\\<lambda>n. f (X n)) \\<longlonglongrightarrow> y\"\n  shows \"(f \\<longlongrightarrow> y) (at_right c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_right c)", "proof (cases c)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow>\n       (f \\<longlongrightarrow> y) (at_right c)\n 2. c = \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_right c)\n 3. c = - \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_right c)", "case [simp]: MInf"], ["proof (state)\nthis:\n  c = - \\<infinity>\n\ngoal (3 subgoals):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow>\n       (f \\<longlongrightarrow> y) (at_right c)\n 2. c = \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_right c)\n 3. c = - \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_right c)", "have \"((\\<lambda>x. f (-ereal x)) \\<longlongrightarrow> y) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f (- ereal x)) \\<longlongrightarrow> y) at_top", "using assms"], ["proof (prove)\nusing this:\n  filterlim ?X (at_right c) sequentially \\<Longrightarrow>\n  (\\<lambda>n. f (?X n)) \\<longlonglongrightarrow> y\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f (- ereal x)) \\<longlongrightarrow> y) at_top", "by (intro tendsto_at_topI_sequentially assms)\n      (simp_all flip: uminus_ereal.simps ereal_tendsto_simps add: o_def filterlim_at)"], ["proof (state)\nthis:\n  ((\\<lambda>x. f (- ereal x)) \\<longlongrightarrow> y) at_top\n\ngoal (3 subgoals):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow>\n       (f \\<longlongrightarrow> y) (at_right c)\n 2. c = \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_right c)\n 3. c = - \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_right c)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. f (- ereal x)) \\<longlongrightarrow> y) at_top\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_right c)", "by (simp add: at_right_MInf filterlim_filtermap at_top_mirror)"], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> y) (at_right c)\n\ngoal (2 subgoals):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow>\n       (f \\<longlongrightarrow> y) (at_right c)\n 2. c = \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_right c)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow>\n       (f \\<longlongrightarrow> y) (at_right c)\n 2. c = \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_right c)", "case [simp]: PInf"], ["proof (state)\nthis:\n  c = \\<infinity>\n\ngoal (2 subgoals):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow>\n       (f \\<longlongrightarrow> y) (at_right c)\n 2. c = \\<infinity> \\<Longrightarrow>\n    (f \\<longlongrightarrow> y) (at_right c)", "thus ?thesis"], ["proof (prove)\nusing this:\n  c = \\<infinity>\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_right c)", "by auto"], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> y) (at_right c)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow>\n       (f \\<longlongrightarrow> y) (at_right c)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow>\n       (f \\<longlongrightarrow> y) (at_right c)", "case [simp]: (real c')"], ["proof (state)\nthis:\n  c = ereal c'\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow>\n       (f \\<longlongrightarrow> y) (at_right c)", "have \"((\\<lambda>x. f (ereal x)) \\<longlongrightarrow> y) (at_right c')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f (ereal x)) \\<longlongrightarrow> y) (at_right c')", "proof (intro tendsto_at_right_realI_sequentially assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       filterlim X (at_right c') sequentially \\<Longrightarrow>\n       LIM n sequentially. ereal (X n) :> at_right c", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       filterlim X (at_right c') sequentially \\<Longrightarrow>\n       LIM n sequentially. ereal (X n) :> at_right c", "assume *: \"filterlim X (at_right c') sequentially\""], ["proof (state)\nthis:\n  filterlim X (at_right c') sequentially\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       filterlim X (at_right c') sequentially \\<Longrightarrow>\n       LIM n sequentially. ereal (X n) :> at_right c", "show \"filterlim (\\<lambda>n. ereal (X n)) (at_right c) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM n sequentially. ereal (X n) :> at_right c", "by (rule filterlim_compose[OF _ *])\n         (simp add: sequentially_imp_eventually_within tendsto_imp_filterlim_at_right)"], ["proof (state)\nthis:\n  LIM n sequentially. ereal (X n) :> at_right c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<lambda>x. f (ereal x)) \\<longlongrightarrow> y) (at_right c')\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       c = ereal r \\<Longrightarrow>\n       (f \\<longlongrightarrow> y) (at_right c)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. f (ereal x)) \\<longlongrightarrow> y) (at_right c')\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> y) (at_right c)", "by (simp add: at_right_ereal filterlim_filtermap)"], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> y) (at_right c)\n\ngoal:\nNo subgoals!", "qed"], ["", "proposition analytic_continuation':\n  assumes hol: \"f holomorphic_on S\" \"g holomorphic_on S\"\n      and \"open S\" and \"connected S\"\n      and \"U \\<subseteq> S\" and \"\\<xi> \\<in> S\"\n      and \"\\<xi> islimpt U\"\n      and fU0 [simp]: \"\\<And>z. z \\<in> U \\<Longrightarrow> f z = g z\"\n      and \"w \\<in> S\"\n    shows \"f w = g w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f w = g w", "using analytic_continuation[OF holomorphic_on_diff[OF hol] assms(3-7) _ assms(9)] assms(8)"], ["proof (prove)\nusing this:\n  (\\<And>z. z \\<in> U \\<Longrightarrow> f z - g z = 0) \\<Longrightarrow>\n  f w - g w = 0\n  ?z \\<in> U \\<Longrightarrow> f ?z = g ?z\n\ngoal (1 subgoal):\n 1. f w = g w", "by simp"], ["", "subsection \\<open>Various facts about integrals\\<close>"], ["", "lemma continuous_on_imp_set_integrable_cbox:\n  fixes h :: \"'a :: euclidean_space \\<Rightarrow> 'b :: euclidean_space\"\n  assumes \"continuous_on (cbox a b) h\"\n  shows   \"set_integrable lborel (cbox a b) h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel (cbox a b) h", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set_integrable lborel (cbox a b) h", "from assms"], ["proof (chain)\npicking this:\n  continuous_on (cbox a b) h", "have \"h absolutely_integrable_on cbox a b\""], ["proof (prove)\nusing this:\n  continuous_on (cbox a b) h\n\ngoal (1 subgoal):\n 1. h absolutely_integrable_on cbox a b", "by (rule absolutely_integrable_continuous)"], ["proof (state)\nthis:\n  h absolutely_integrable_on cbox a b\n\ngoal (1 subgoal):\n 1. set_integrable lborel (cbox a b) h", "moreover"], ["proof (state)\nthis:\n  h absolutely_integrable_on cbox a b\n\ngoal (1 subgoal):\n 1. set_integrable lborel (cbox a b) h", "have \"(\\<lambda>x. indicat_real (cbox a b) x *\\<^sub>R h x) \\<in> borel_measurable borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. indicat_real (cbox a b) x *\\<^sub>R h x)\n    \\<in> borel_measurable borel", "by (rule borel_measurable_continuous_on_indicator) (use assms in auto)"], ["proof (state)\nthis:\n  (\\<lambda>x. indicat_real (cbox a b) x *\\<^sub>R h x)\n  \\<in> borel_measurable borel\n\ngoal (1 subgoal):\n 1. set_integrable lborel (cbox a b) h", "ultimately"], ["proof (chain)\npicking this:\n  h absolutely_integrable_on cbox a b\n  (\\<lambda>x. indicat_real (cbox a b) x *\\<^sub>R h x)\n  \\<in> borel_measurable borel", "show ?thesis"], ["proof (prove)\nusing this:\n  h absolutely_integrable_on cbox a b\n  (\\<lambda>x. indicat_real (cbox a b) x *\\<^sub>R h x)\n  \\<in> borel_measurable borel\n\ngoal (1 subgoal):\n 1. set_integrable lborel (cbox a b) h", "unfolding set_integrable_def"], ["proof (prove)\nusing this:\n  integrable lebesgue (\\<lambda>x. indicat_real (cbox a b) x *\\<^sub>R h x)\n  (\\<lambda>x. indicat_real (cbox a b) x *\\<^sub>R h x)\n  \\<in> borel_measurable borel\n\ngoal (1 subgoal):\n 1. integrable lborel (\\<lambda>x. indicat_real (cbox a b) x *\\<^sub>R h x)", "using assms"], ["proof (prove)\nusing this:\n  integrable lebesgue (\\<lambda>x. indicat_real (cbox a b) x *\\<^sub>R h x)\n  (\\<lambda>x. indicat_real (cbox a b) x *\\<^sub>R h x)\n  \\<in> borel_measurable borel\n  continuous_on (cbox a b) h\n\ngoal (1 subgoal):\n 1. integrable lborel (\\<lambda>x. indicat_real (cbox a b) x *\\<^sub>R h x)", "by (subst (asm) integrable_completion) auto"], ["proof (state)\nthis:\n  set_integrable lborel (cbox a b) h\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma set_nn_integral_cong:\n  assumes \"M = M'\" \"A = B\" \"\\<And>x. x \\<in> space M \\<inter> A \\<Longrightarrow> f x = g x\"\n  shows   \"set_nn_integral M A f = set_nn_integral M' B g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_nn_integral M A f = set_nn_integral M' B g", "using assms"], ["proof (prove)\nusing this:\n  M = M'\n  A = B\n  ?x \\<in> space M \\<inter> A \\<Longrightarrow> f ?x = g ?x\n\ngoal (1 subgoal):\n 1. set_nn_integral M A f = set_nn_integral M' B g", "unfolding assms(1,2)"], ["proof (prove)\nusing this:\n  M' = M'\n  B = B\n  ?x \\<in> space M' \\<inter> B \\<Longrightarrow> f ?x = g ?x\n\ngoal (1 subgoal):\n 1. set_nn_integral M' B f = set_nn_integral M' B g", "by (intro nn_integral_cong) (auto simp: indicator_def)"], ["", "lemma set_integrable_bound:\n  fixes f :: \"'a \\<Rightarrow> 'b::{banach, second_countable_topology}\"\n    and g :: \"'a \\<Rightarrow> 'c::{banach, second_countable_topology}\"\n  assumes \"set_integrable M A f\" \"set_borel_measurable M A g\"\n  assumes \"AE x in M. x \\<in> A \\<longrightarrow> norm (g x) \\<le> norm (f x)\"\n  shows   \"set_integrable M A g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable M A g", "unfolding set_integrable_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. indicat_real A x *\\<^sub>R g x)", "proof (rule Bochner_Integration.integrable_bound)"], ["proof (state)\ngoal (3 subgoals):\n 1. integrable M ?f\n 2. (\\<lambda>x. indicat_real A x *\\<^sub>R g x) \\<in> borel_measurable M\n 3. AE x in M. norm (indicat_real A x *\\<^sub>R g x) \\<le> norm (?f x)", "from assms(1)"], ["proof (chain)\npicking this:\n  set_integrable M A f", "show \"integrable M (\\<lambda>x. indicator A x *\\<^sub>R f x)\""], ["proof (prove)\nusing this:\n  set_integrable M A f\n\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. indicat_real A x *\\<^sub>R f x)", "by (simp add: set_integrable_def)"], ["proof (state)\nthis:\n  integrable M (\\<lambda>x. indicat_real A x *\\<^sub>R f x)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. indicat_real A x *\\<^sub>R g x) \\<in> borel_measurable M\n 2. AE x in M. norm (indicat_real A x *\\<^sub>R g x)\n               \\<le> norm (indicat_real A x *\\<^sub>R f x)", "from assms(2)"], ["proof (chain)\npicking this:\n  set_borel_measurable M A g", "show \"(\\<lambda>x. indicat_real A x *\\<^sub>R g x) \\<in> borel_measurable M\""], ["proof (prove)\nusing this:\n  set_borel_measurable M A g\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. indicat_real A x *\\<^sub>R g x) \\<in> borel_measurable M", "by (simp add: set_borel_measurable_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. indicat_real A x *\\<^sub>R g x) \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. AE x in M. norm (indicat_real A x *\\<^sub>R g x)\n               \\<le> norm (indicat_real A x *\\<^sub>R f x)", "from assms(3)"], ["proof (chain)\npicking this:\n  AE x\\<in>A in M. norm (g x) \\<le> norm (f x)", "show \"AE x in M. norm (indicat_real A x *\\<^sub>R g x) \\<le> norm (indicat_real A x *\\<^sub>R f x)\""], ["proof (prove)\nusing this:\n  AE x\\<in>A in M. norm (g x) \\<le> norm (f x)\n\ngoal (1 subgoal):\n 1. AE x in M. norm (indicat_real A x *\\<^sub>R g x)\n               \\<le> norm (indicat_real A x *\\<^sub>R f x)", "by eventually_elim (simp add: indicator_def)"], ["proof (state)\nthis:\n  AE x in M. norm (indicat_real A x *\\<^sub>R g x)\n             \\<le> norm (indicat_real A x *\\<^sub>R f x)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* TODO replace version in library. Better name? *)"], ["", "lemma nn_integral_has_integral_lebesgue:\n  fixes f :: \"'a::euclidean_space \\<Rightarrow> real\"\n  assumes nonneg: \"\\<And>x. x \\<in> \\<Omega> \\<Longrightarrow> 0 \\<le> f x\" and I: \"(f has_integral I) \\<Omega>\"\n  shows \"integral\\<^sup>N lborel (\\<lambda>x. indicator \\<Omega> x * f x) = I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                       \\<partial>lborel =\n    ennreal I", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                       \\<partial>lborel =\n    ennreal I", "from I"], ["proof (chain)\npicking this:\n  (f has_integral I) \\<Omega>", "have \"(\\<lambda>x. indicator \\<Omega> x *\\<^sub>R f x) \\<in> lebesgue \\<rightarrow>\\<^sub>M borel\""], ["proof (prove)\nusing this:\n  (f has_integral I) \\<Omega>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. indicat_real \\<Omega> x *\\<^sub>R f x)\n    \\<in> borel_measurable lebesgue", "by (rule has_integral_implies_lebesgue_measurable)"], ["proof (state)\nthis:\n  (\\<lambda>x. indicat_real \\<Omega> x *\\<^sub>R f x)\n  \\<in> borel_measurable lebesgue\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                       \\<partial>lborel =\n    ennreal I", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. indicat_real \\<Omega> x *\\<^sub>R f x)\n  \\<in> borel_measurable lebesgue", "obtain f' :: \"'a \\<Rightarrow> real\"\n    where [measurable]: \"f' \\<in> borel \\<rightarrow>\\<^sub>M borel\" and eq: \"AE x in lborel. indicator \\<Omega> x * f x = f' x\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. indicat_real \\<Omega> x *\\<^sub>R f x)\n  \\<in> borel_measurable lebesgue\n\ngoal (1 subgoal):\n 1. (\\<And>f'.\n        \\<lbrakk>f' \\<in> borel_measurable borel;\n         AE x in lborel. indicat_real \\<Omega> x * f x = f' x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: completion_ex_borel_measurable_real)"], ["proof (state)\nthis:\n  f' \\<in> borel_measurable borel\n  AE x in lborel. indicat_real \\<Omega> x * f x = f' x\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                       \\<partial>lborel =\n    ennreal I", "from I"], ["proof (chain)\npicking this:\n  (f has_integral I) \\<Omega>", "have \"((\\<lambda>x. abs (indicator \\<Omega> x * f x)) has_integral I) UNIV\""], ["proof (prove)\nusing this:\n  (f has_integral I) \\<Omega>\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<bar>indicat_real \\<Omega> x * f x\\<bar>) has_integral I)\n     UNIV", "using nonneg"], ["proof (prove)\nusing this:\n  (f has_integral I) \\<Omega>\n  ?x \\<in> \\<Omega> \\<Longrightarrow> 0 \\<le> f ?x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<bar>indicat_real \\<Omega> x * f x\\<bar>) has_integral I)\n     UNIV", "by (simp add: indicator_def if_distrib[of \"\\<lambda>x. x * f y\" for y] cong: if_cong)"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<bar>indicat_real \\<Omega> x * f x\\<bar>) has_integral I)\n   UNIV\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                       \\<partial>lborel =\n    ennreal I", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<bar>indicat_real \\<Omega> x * f x\\<bar>) has_integral I)\n   UNIV\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                       \\<partial>lborel =\n    ennreal I", "have \"((\\<lambda>x. abs (indicator \\<Omega> x * f x)) has_integral I) UNIV \\<longleftrightarrow> ((\\<lambda>x. abs (f' x)) has_integral I) UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<bar>indicat_real \\<Omega> x * f x\\<bar>) has_integral I)\n     UNIV =\n    ((\\<lambda>x. \\<bar>f' x\\<bar>) has_integral I) UNIV", "using eq"], ["proof (prove)\nusing this:\n  AE x in lborel. indicat_real \\<Omega> x * f x = f' x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<bar>indicat_real \\<Omega> x * f x\\<bar>) has_integral I)\n     UNIV =\n    ((\\<lambda>x. \\<bar>f' x\\<bar>) has_integral I) UNIV", "by (intro has_integral_AE) auto"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<bar>indicat_real \\<Omega> x * f x\\<bar>) has_integral I)\n   UNIV =\n  ((\\<lambda>x. \\<bar>f' x\\<bar>) has_integral I) UNIV\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                       \\<partial>lborel =\n    ennreal I", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. \\<bar>f' x\\<bar>) has_integral I) UNIV", "have \"integral\\<^sup>N lborel (\\<lambda>x. abs (f' x)) = I\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. \\<bar>f' x\\<bar>) has_integral I) UNIV\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal \\<bar>f' x\\<bar> \\<partial>lborel =\n    ennreal I", "by (rule nn_integral_has_integral_lborel[rotated 2]) auto"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal \\<bar>f' x\\<bar> \\<partial>lborel =\n  ennreal I\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                       \\<partial>lborel =\n    ennreal I", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal \\<bar>f' x\\<bar> \\<partial>lborel =\n  ennreal I\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                       \\<partial>lborel =\n    ennreal I", "have \"integral\\<^sup>N lborel (\\<lambda>x. abs (f' x)) = integral\\<^sup>N lborel (\\<lambda>x. abs (indicator \\<Omega> x * f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal \\<bar>f' x\\<bar> \\<partial>lborel =\n    \\<integral>\\<^sup>+ x. ennreal \\<bar>indicat_real \\<Omega> x * f x\\<bar>\n                       \\<partial>lborel", "using eq"], ["proof (prove)\nusing this:\n  AE x in lborel. indicat_real \\<Omega> x * f x = f' x\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal \\<bar>f' x\\<bar> \\<partial>lborel =\n    \\<integral>\\<^sup>+ x. ennreal \\<bar>indicat_real \\<Omega> x * f x\\<bar>\n                       \\<partial>lborel", "by (intro nn_integral_cong_AE) auto"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal \\<bar>f' x\\<bar> \\<partial>lborel =\n  \\<integral>\\<^sup>+ x. ennreal \\<bar>indicat_real \\<Omega> x * f x\\<bar>\n                     \\<partial>lborel\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                       \\<partial>lborel =\n    ennreal I", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal \\<bar>f' x\\<bar> \\<partial>lborel =\n  \\<integral>\\<^sup>+ x. ennreal \\<bar>indicat_real \\<Omega> x * f x\\<bar>\n                     \\<partial>lborel\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                       \\<partial>lborel =\n    ennreal I", "have \"(\\<lambda>x. abs (indicator \\<Omega> x * f x)) = (\\<lambda>x. indicator \\<Omega> x * f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<bar>indicat_real \\<Omega> x * f x\\<bar>) =\n    (\\<lambda>x. indicat_real \\<Omega> x * f x)", "using nonneg"], ["proof (prove)\nusing this:\n  ?x \\<in> \\<Omega> \\<Longrightarrow> 0 \\<le> f ?x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<bar>indicat_real \\<Omega> x * f x\\<bar>) =\n    (\\<lambda>x. indicat_real \\<Omega> x * f x)", "by (auto simp: indicator_def fun_eq_iff)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<bar>indicat_real \\<Omega> x * f x\\<bar>) =\n  (\\<lambda>x. indicat_real \\<Omega> x * f x)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                       \\<partial>lborel =\n    ennreal I", "finally"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                     \\<partial>lborel =\n  ennreal I", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                     \\<partial>lborel =\n  ennreal I\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                       \\<partial>lborel =\n    ennreal I", "."], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                     \\<partial>lborel =\n  ennreal I\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Uniform convergence of integrals\\<close>"], ["", "lemma has_absolute_integral_change_of_variables_1':\n  fixes f :: \"real \\<Rightarrow> real\" and g :: \"real \\<Rightarrow> real\"\n  assumes S: \"S \\<in> sets lebesgue\"\n    and der_g: \"\\<And>x. x \\<in> S \\<Longrightarrow> (g has_field_derivative g' x) (at x within S)\"\n    and inj: \"inj_on g S\"\n  shows \"(\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f(g x)) absolutely_integrable_on S \\<and>\n           integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f(g x)) = b\n     \\<longleftrightarrow> f absolutely_integrable_on (g ` S) \\<and> integral (g ` S) f = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) absolutely_integrable_on\n     S \\<and>\n     integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) = b) =\n    (f absolutely_integrable_on g ` S \\<and> integral (g ` S) f = b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) absolutely_integrable_on\n     S \\<and>\n     integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) = b) =\n    (f absolutely_integrable_on g ` S \\<and> integral (g ` S) f = b)", "have \"(\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R vec (f(g x)) :: real ^ 1) absolutely_integrable_on S \\<and>\n           integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R vec (f(g x))) = (vec b :: real ^ 1)\n         \\<longleftrightarrow> (\\<lambda>x. vec (f x) :: real ^ 1) absolutely_integrable_on (g ` S) \\<and>\n           integral (g ` S) (\\<lambda>x. vec (f x)) = (vec b :: real ^ 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) absolutely_integrable_on\n     S \\<and>\n     integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) =\n     vec b) =\n    ((\\<lambda>x. vec (f x)) absolutely_integrable_on g ` S \\<and>\n     integral (g ` S) (\\<lambda>x. vec (f x)) = vec b)", "using assms"], ["proof (prove)\nusing this:\n  S \\<in> sets lebesgue\n  ?x \\<in> S \\<Longrightarrow>\n  (g has_real_derivative g' ?x) (at ?x within S)\n  inj_on g S\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) absolutely_integrable_on\n     S \\<and>\n     integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) =\n     vec b) =\n    ((\\<lambda>x. vec (f x)) absolutely_integrable_on g ` S \\<and>\n     integral (g ` S) (\\<lambda>x. vec (f x)) = vec b)", "unfolding has_field_derivative_iff_has_vector_derivative"], ["proof (prove)\nusing this:\n  S \\<in> sets lebesgue\n  ?x \\<in> S \\<Longrightarrow>\n  (g has_vector_derivative g' ?x) (at ?x within S)\n  inj_on g S\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) absolutely_integrable_on\n     S \\<and>\n     integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) =\n     vec b) =\n    ((\\<lambda>x. vec (f x)) absolutely_integrable_on g ` S \\<and>\n     integral (g ` S) (\\<lambda>x. vec (f x)) = vec b)", "by (intro has_absolute_integral_change_of_variables_1 assms) auto"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) absolutely_integrable_on\n   S \\<and>\n   integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) =\n   vec b) =\n  ((\\<lambda>x. vec (f x)) absolutely_integrable_on g ` S \\<and>\n   integral (g ` S) (\\<lambda>x. vec (f x)) = vec b)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) absolutely_integrable_on\n     S \\<and>\n     integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) = b) =\n    (f absolutely_integrable_on g ` S \\<and> integral (g ` S) f = b)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) absolutely_integrable_on\n   S \\<and>\n   integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) =\n   vec b) =\n  ((\\<lambda>x. vec (f x)) absolutely_integrable_on g ` S \\<and>\n   integral (g ` S) (\\<lambda>x. vec (f x)) = vec b)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) absolutely_integrable_on\n     S \\<and>\n     integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) = b) =\n    (f absolutely_integrable_on g ` S \\<and> integral (g ` S) f = b)", "by (simp add: absolutely_integrable_on_1_iff integral_on_1_eq)"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) absolutely_integrable_on\n   S \\<and>\n   integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) = b) =\n  (f absolutely_integrable_on g ` S \\<and> integral (g ` S) f = b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma set_nn_integral_lborel_eq_integral:\n  fixes f::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes \"set_borel_measurable borel A f\"\n  assumes \"\\<And>x. x \\<in> A \\<Longrightarrow> 0 \\<le> f x\" \"(\\<integral>\\<^sup>+x\\<in>A. f x \\<partial>lborel) < \\<infinity>\"\n  shows \"(\\<integral>\\<^sup>+x\\<in>A. f x \\<partial>lborel) = integral A f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel =\n    ennreal (integral A f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel =\n    ennreal (integral A f)", "have eq: \"(\\<integral>\\<^sup>+x\\<in>A. f x \\<partial>lborel) = (\\<integral>\\<^sup>+x. ennreal (indicator A x * f x) \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel =\n    \\<integral>\\<^sup>+ x. ennreal (indicat_real A x * f x) \\<partial>lborel", "by (intro nn_integral_cong) (auto simp: indicator_def)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel =\n  \\<integral>\\<^sup>+ x. ennreal (indicat_real A x * f x) \\<partial>lborel\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel =\n    ennreal (integral A f)", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel =\n  \\<integral>\\<^sup>+ x. ennreal (indicat_real A x * f x) \\<partial>lborel\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel =\n    ennreal (integral A f)", "have \"\\<dots> = integral UNIV (\\<lambda>x. indicator A x * f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (indicat_real A x * f x)\n                       \\<partial>lborel =\n    ennreal (integral UNIV (\\<lambda>x. indicat_real A x * f x))", "using assms eq"], ["proof (prove)\nusing this:\n  set_borel_measurable borel A f\n  ?x \\<in> A \\<Longrightarrow> 0 \\<le> f ?x\n  \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel < \\<infinity>\n  \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel =\n  \\<integral>\\<^sup>+ x. ennreal (indicat_real A x * f x) \\<partial>lborel\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (indicat_real A x * f x)\n                       \\<partial>lborel =\n    ennreal (integral UNIV (\\<lambda>x. indicat_real A x * f x))", "by (intro nn_integral_lborel_eq_integral)\n                      (auto simp: indicator_def set_borel_measurable_def)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (indicat_real A x * f x) \\<partial>lborel =\n  ennreal (integral UNIV (\\<lambda>x. indicat_real A x * f x))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel =\n    ennreal (integral A f)", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (indicat_real A x * f x) \\<partial>lborel =\n  ennreal (integral UNIV (\\<lambda>x. indicat_real A x * f x))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel =\n    ennreal (integral A f)", "have \"integral UNIV (\\<lambda>x. indicator A x * f x) = integral A (\\<lambda>x. indicator A x * f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral UNIV (\\<lambda>x. indicat_real A x * f x) =\n    integral A (\\<lambda>x. indicat_real A x * f x)", "by (rule integral_spike_set) (auto simp: indicator_def)"], ["proof (state)\nthis:\n  integral UNIV (\\<lambda>x. indicat_real A x * f x) =\n  integral A (\\<lambda>x. indicat_real A x * f x)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel =\n    ennreal (integral A f)", "also"], ["proof (state)\nthis:\n  integral UNIV (\\<lambda>x. indicat_real A x * f x) =\n  integral A (\\<lambda>x. indicat_real A x * f x)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel =\n    ennreal (integral A f)", "have \"\\<dots> = integral A f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral A (\\<lambda>x. indicat_real A x * f x) = integral A f", "by (rule integral_cong) (auto simp: indicator_def)"], ["proof (state)\nthis:\n  integral A (\\<lambda>x. indicat_real A x * f x) = integral A f\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel =\n    ennreal (integral A f)", "finally"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel =\n  ennreal (integral A f)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel =\n  ennreal (integral A f)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel =\n    ennreal (integral A f)", "."], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>A. ennreal (f x)\\<partial>lborel =\n  ennreal (integral A f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nn_integral_has_integral_lebesgue':\n  fixes f :: \"'a::euclidean_space \\<Rightarrow> real\"\n  assumes nonneg: \"\\<And>x. x \\<in> \\<Omega> \\<Longrightarrow> 0 \\<le> f x\" and I: \"(f has_integral I) \\<Omega>\"\n  shows \"integral\\<^sup>N lborel (\\<lambda>x. ennreal (f x) * indicator \\<Omega> x) = ennreal I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>\\<Omega>. ennreal (f x)\\<partial>lborel =\n    ennreal I", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>\\<Omega>. ennreal (f x)\\<partial>lborel =\n    ennreal I", "have \"integral\\<^sup>N lborel (\\<lambda>x. ennreal (f x) * indicator \\<Omega> x) =\n        integral\\<^sup>N lborel (\\<lambda>x. ennreal (indicator \\<Omega> x * f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>\\<Omega>. ennreal (f x)\\<partial>lborel =\n    \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                       \\<partial>lborel", "by (intro nn_integral_cong) (auto simp: indicator_def)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>\\<Omega>. ennreal (f x)\\<partial>lborel =\n  \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                     \\<partial>lborel\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>\\<Omega>. ennreal (f x)\\<partial>lborel =\n    ennreal I", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>\\<Omega>. ennreal (f x)\\<partial>lborel =\n  \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                     \\<partial>lborel\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>\\<Omega>. ennreal (f x)\\<partial>lborel =\n    ennreal I", "have \"\\<dots> = ennreal I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                       \\<partial>lborel =\n    ennreal I", "using assms"], ["proof (prove)\nusing this:\n  ?x \\<in> \\<Omega> \\<Longrightarrow> 0 \\<le> f ?x\n  (f has_integral I) \\<Omega>\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                       \\<partial>lborel =\n    ennreal I", "by (intro nn_integral_has_integral_lebesgue)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (indicat_real \\<Omega> x * f x)\n                     \\<partial>lborel =\n  ennreal I\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>\\<Omega>. ennreal (f x)\\<partial>lborel =\n    ennreal I", "finally"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+x\\<in>\\<Omega>. ennreal (f x)\\<partial>lborel =\n  ennreal I", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+x\\<in>\\<Omega>. ennreal (f x)\\<partial>lborel =\n  ennreal I\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+x\\<in>\\<Omega>. ennreal (f x)\\<partial>lborel =\n    ennreal I", "."], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+x\\<in>\\<Omega>. ennreal (f x)\\<partial>lborel =\n  ennreal I\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma uniform_limit_set_lebesgue_integral:\n  fixes f :: \"'a \\<Rightarrow> 'b :: euclidean_space \\<Rightarrow> 'c :: {banach, second_countable_topology}\"\n  assumes \"set_integrable lborel X' g\"\n  assumes [measurable]: \"X' \\<in> sets borel\"\n  assumes [measurable]: \"\\<And>y. y \\<in> Y \\<Longrightarrow> set_borel_measurable borel X' (f y)\"\n  assumes \"\\<And>y. y \\<in> Y \\<Longrightarrow> (AE t\\<in>X' in lborel. norm (f y t) \\<le> g t)\"\n  assumes \"eventually (\\<lambda>x. X x \\<in> sets borel \\<and> X x \\<subseteq> X') F\"\n  assumes \"filterlim (\\<lambda>x. set_lebesgue_integral lborel (X x) g)\n             (nhds (set_lebesgue_integral lborel X' g)) F\"\n  shows \"uniform_limit Y\n           (\\<lambda>x y. set_lebesgue_integral lborel (X x) (f y))\n           (\\<lambda>y. set_lebesgue_integral lborel X' (f y)) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit Y (\\<lambda>x y. set_lebesgue_integral lborel (X x) (f y))\n     (\\<lambda>y. set_lebesgue_integral lborel X' (f y)) F", "proof (rule uniform_limitI, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in F.\n          \\<forall>x\\<in>Y.\n             dist (set_lebesgue_integral lborel (X n) (f x))\n              (set_lebesgue_integral lborel X' (f x))\n             < e", "case (1 \\<epsilon>)"], ["proof (state)\nthis:\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in F.\n          \\<forall>x\\<in>Y.\n             dist (set_lebesgue_integral lborel (X n) (f x))\n              (set_lebesgue_integral lborel X' (f x))\n             < e", "have integrable_g: \"set_integrable lborel U g\"\n    if \"U \\<in> sets borel\" \"U \\<subseteq> X'\" for U"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel U g", "by (rule set_integrable_subset[OF assms(1)]) (use that in auto)"], ["proof (state)\nthis:\n  \\<lbrakk>?U \\<in> sets borel; ?U \\<subseteq> X'\\<rbrakk>\n  \\<Longrightarrow> set_integrable lborel ?U g\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in F.\n          \\<forall>x\\<in>Y.\n             dist (set_lebesgue_integral lborel (X n) (f x))\n              (set_lebesgue_integral lborel X' (f x))\n             < e", "have \"eventually (\\<lambda>x. dist (set_lebesgue_integral lborel (X x) g)\n                             (set_lebesgue_integral lborel X' g) < \\<epsilon>) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F.\n       dist (set_lebesgue_integral lborel (X x) g)\n        (set_lebesgue_integral lborel X' g)\n       < \\<epsilon>", "using \\<open>\\<epsilon> > 0\\<close> assms"], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n  set_integrable lborel X' g\n  X' \\<in> sets borel\n  ?y \\<in> Y \\<Longrightarrow> set_borel_measurable borel X' (f ?y)\n  ?y \\<in> Y \\<Longrightarrow>\n  AE x\\<in>X' in lborel. norm (f ?y x) \\<le> g x\n  \\<forall>\\<^sub>F x in F. X x \\<in> sets borel \\<and> X x \\<subseteq> X'\n  ((\\<lambda>x. set_lebesgue_integral lborel (X x) g) \\<longlongrightarrow>\n   set_lebesgue_integral lborel X' g)\n   F\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F.\n       dist (set_lebesgue_integral lborel (X x) g)\n        (set_lebesgue_integral lborel X' g)\n       < \\<epsilon>", "by (auto simp: tendsto_iff)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in F.\n     dist (set_lebesgue_integral lborel (X x) g)\n      (set_lebesgue_integral lborel X' g)\n     < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in F.\n          \\<forall>x\\<in>Y.\n             dist (set_lebesgue_integral lborel (X n) (f x))\n              (set_lebesgue_integral lborel X' (f x))\n             < e", "from this"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in F.\n     dist (set_lebesgue_integral lborel (X x) g)\n      (set_lebesgue_integral lborel X' g)\n     < \\<epsilon>", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in F.\n     dist (set_lebesgue_integral lborel (X x) g)\n      (set_lebesgue_integral lborel X' g)\n     < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F.\n       \\<forall>x\\<in>Y.\n          dist (set_lebesgue_integral lborel (X n) (f x))\n           (set_lebesgue_integral lborel X' (f x))\n          < \\<epsilon>", "using \\<open>eventually (\\<lambda>_. _ \\<and> _) F\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in F.\n     dist (set_lebesgue_integral lborel (X x) g)\n      (set_lebesgue_integral lborel X' g)\n     < \\<epsilon>\n  \\<forall>\\<^sub>F uu_ in F.\n     X uu_ \\<in> sets borel \\<and> X uu_ \\<subseteq> X'\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F.\n       \\<forall>x\\<in>Y.\n          dist (set_lebesgue_integral lborel (X n) (f x))\n           (set_lebesgue_integral lborel X' (f x))\n          < \\<epsilon>", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>dist (set_lebesgue_integral lborel (X n) g)\n                 (set_lebesgue_integral lborel X' g)\n                < \\<epsilon>;\n        X n \\<in> sets borel \\<and> X n \\<subseteq> X'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>Y.\n                            dist (set_lebesgue_integral lborel (X n) (f x))\n                             (set_lebesgue_integral lborel X' (f x))\n                            < \\<epsilon>", "case (elim x)"], ["proof (state)\nthis:\n  dist (set_lebesgue_integral lborel (X x) g)\n   (set_lebesgue_integral lborel X' g)\n  < \\<epsilon>\n  X x \\<in> sets borel \\<and> X x \\<subseteq> X'\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>dist (set_lebesgue_integral lborel (X n) g)\n                 (set_lebesgue_integral lborel X' g)\n                < \\<epsilon>;\n        X n \\<in> sets borel \\<and> X n \\<subseteq> X'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>Y.\n                            dist (set_lebesgue_integral lborel (X n) (f x))\n                             (set_lebesgue_integral lborel X' (f x))\n                            < \\<epsilon>", "hence [measurable]:\"X x \\<in> sets borel\" and \"X x \\<subseteq> X'\""], ["proof (prove)\nusing this:\n  dist (set_lebesgue_integral lborel (X x) g)\n   (set_lebesgue_integral lborel X' g)\n  < \\<epsilon>\n  X x \\<in> sets borel \\<and> X x \\<subseteq> X'\n\ngoal (1 subgoal):\n 1. X x \\<in> sets borel &&& X x \\<subseteq> X'", "by auto"], ["proof (state)\nthis:\n  X x \\<in> sets borel\n  X x \\<subseteq> X'\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>dist (set_lebesgue_integral lborel (X n) g)\n                 (set_lebesgue_integral lborel X' g)\n                < \\<epsilon>;\n        X n \\<in> sets borel \\<and> X n \\<subseteq> X'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>Y.\n                            dist (set_lebesgue_integral lborel (X n) (f x))\n                             (set_lebesgue_integral lborel X' (f x))\n                            < \\<epsilon>", "have integrable: \"set_integrable lborel U (f y)\"\n      if \"y \\<in> Y\" \"U \\<in> sets borel\" \"U \\<subseteq> X'\" for y U"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel U (f y)", "apply (rule set_integrable_subset)"], ["proof (prove)\ngoal (3 subgoals):\n 1. set_integrable lborel ?A (f y)\n 2. U \\<in> sets lborel\n 3. U \\<subseteq> ?A", "apply (rule set_integrable_bound[OF assms(1)])"], ["proof (prove)\ngoal (4 subgoals):\n 1. set_borel_measurable lborel X' (f y)\n 2. AE x\\<in>X' in lborel. norm (f y x) \\<le> norm (g x)\n 3. U \\<in> sets lborel\n 4. U \\<subseteq> X'", "apply (use assms(3) that in \\<open>simp add: set_borel_measurable_def\\<close>)"], ["proof (prove)\ngoal (3 subgoals):\n 1. AE x\\<in>X' in lborel. norm (f y x) \\<le> norm (g x)\n 2. U \\<in> sets lborel\n 3. U \\<subseteq> X'", "using assms(4)[OF \\<open>y \\<in> Y\\<close>]"], ["proof (prove)\nusing this:\n  AE x\\<in>X' in lborel. norm (f y x) \\<le> g x\n\ngoal (3 subgoals):\n 1. AE x\\<in>X' in lborel. norm (f y x) \\<le> norm (g x)\n 2. U \\<in> sets lborel\n 3. U \\<subseteq> X'", "apply eventually_elim"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> X' \\<longrightarrow> norm (f y x) \\<le> g x \\<Longrightarrow>\n       x \\<in> X' \\<longrightarrow> norm (f y x) \\<le> norm (g x)\n 2. U \\<in> sets lborel\n 3. U \\<subseteq> X'", "apply force"], ["proof (prove)\ngoal (2 subgoals):\n 1. U \\<in> sets lborel\n 2. U \\<subseteq> X'", "using that"], ["proof (prove)\nusing this:\n  y \\<in> Y\n  U \\<in> sets borel\n  U \\<subseteq> X'\n\ngoal (2 subgoals):\n 1. U \\<in> sets lborel\n 2. U \\<subseteq> X'", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<lbrakk>?y \\<in> Y; ?U \\<in> sets borel; ?U \\<subseteq> X'\\<rbrakk>\n  \\<Longrightarrow> set_integrable lborel ?U (f ?y)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>dist (set_lebesgue_integral lborel (X n) g)\n                 (set_lebesgue_integral lborel X' g)\n                < \\<epsilon>;\n        X n \\<in> sets borel \\<and> X n \\<subseteq> X'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>Y.\n                            dist (set_lebesgue_integral lborel (X n) (f x))\n                             (set_lebesgue_integral lborel X' (f x))\n                            < \\<epsilon>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>Y.\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> Y \\<Longrightarrow>\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> Y \\<Longrightarrow>\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "assume \"y \\<in> Y\""], ["proof (state)\nthis:\n  y \\<in> Y\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> Y \\<Longrightarrow>\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "have \"dist (set_lebesgue_integral lborel (X x) (f y))\n                 (set_lebesgue_integral lborel X' (f y)) =\n            norm (set_lebesgue_integral lborel X' (f y) -\n                  set_lebesgue_integral lborel (X x) (f y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (set_lebesgue_integral lborel (X x) (f y))\n     (set_lebesgue_integral lborel X' (f y)) =\n    norm\n     (set_lebesgue_integral lborel X' (f y) -\n      set_lebesgue_integral lborel (X x) (f y))", "by (simp add: dist_norm norm_minus_commute)"], ["proof (state)\nthis:\n  dist (set_lebesgue_integral lborel (X x) (f y))\n   (set_lebesgue_integral lborel X' (f y)) =\n  norm\n   (set_lebesgue_integral lborel X' (f y) -\n    set_lebesgue_integral lborel (X x) (f y))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> Y \\<Longrightarrow>\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "also"], ["proof (state)\nthis:\n  dist (set_lebesgue_integral lborel (X x) (f y))\n   (set_lebesgue_integral lborel X' (f y)) =\n  norm\n   (set_lebesgue_integral lborel X' (f y) -\n    set_lebesgue_integral lborel (X x) (f y))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> Y \\<Longrightarrow>\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "have \"set_lebesgue_integral lborel X' (f y) -\n                    set_lebesgue_integral lborel (X x) (f y) =\n                 set_lebesgue_integral lborel (X' - X x) (f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_lebesgue_integral lborel X' (f y) -\n    set_lebesgue_integral lborel (X x) (f y) =\n    set_lebesgue_integral lborel (X' - X x) (f y)", "unfolding set_lebesgue_integral_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (LBINT x. indicat_real X' x *\\<^sub>R f y x) -\n    (LBINT xa. indicat_real (X x) xa *\\<^sub>R f y xa) =\n    LBINT xa. indicat_real (X' - X x) xa *\\<^sub>R f y xa", "apply (subst Bochner_Integration.integral_diff [symmetric])"], ["proof (prove)\ngoal (3 subgoals):\n 1. integrable lborel (\\<lambda>x. indicat_real X' x *\\<^sub>R f y x)\n 2. integrable lborel (\\<lambda>xa. indicat_real (X x) xa *\\<^sub>R f y xa)\n 3. LBINT xa.\n      indicat_real X' xa *\\<^sub>R f y xa -\n      indicat_real (X x) xa *\\<^sub>R f y xa =\n    LBINT xa. indicat_real (X' - X x) xa *\\<^sub>R f y xa", "unfolding set_integrable_def [symmetric]"], ["proof (prove)\ngoal (3 subgoals):\n 1. set_integrable lborel X' (f y)\n 2. set_integrable lborel (X x) (f y)\n 3. LBINT xa.\n      indicat_real X' xa *\\<^sub>R f y xa -\n      indicat_real (X x) xa *\\<^sub>R f y xa =\n    LBINT xa. indicat_real (X' - X x) xa *\\<^sub>R f y xa", "apply (rule integrable; (fact | simp))"], ["proof (prove)\ngoal (2 subgoals):\n 1. set_integrable lborel (X x) (f y)\n 2. LBINT xa.\n      indicat_real X' xa *\\<^sub>R f y xa -\n      indicat_real (X x) xa *\\<^sub>R f y xa =\n    LBINT xa. indicat_real (X' - X x) xa *\\<^sub>R f y xa", "apply (rule integrable; fact)"], ["proof (prove)\ngoal (1 subgoal):\n 1. LBINT xa.\n      indicat_real X' xa *\\<^sub>R f y xa -\n      indicat_real (X x) xa *\\<^sub>R f y xa =\n    LBINT xa. indicat_real (X' - X x) xa *\\<^sub>R f y xa", "apply (intro Bochner_Integration.integral_cong)"], ["proof (prove)\ngoal (2 subgoals):\n 1. lborel = lborel\n 2. \\<And>xa.\n       xa \\<in> space lborel \\<Longrightarrow>\n       indicat_real X' xa *\\<^sub>R f y xa -\n       indicat_real (X x) xa *\\<^sub>R f y xa =\n       indicat_real (X' - X x) xa *\\<^sub>R f y xa", "apply (use \\<open>X x \\<subseteq> X'\\<close> in \\<open>auto simp: indicator_def\\<close>)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  set_lebesgue_integral lborel X' (f y) -\n  set_lebesgue_integral lborel (X x) (f y) =\n  set_lebesgue_integral lborel (X' - X x) (f y)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> Y \\<Longrightarrow>\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "also"], ["proof (state)\nthis:\n  set_lebesgue_integral lborel X' (f y) -\n  set_lebesgue_integral lborel (X x) (f y) =\n  set_lebesgue_integral lborel (X' - X x) (f y)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> Y \\<Longrightarrow>\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "have \"norm \\<dots> \\<le> (\\<integral>t\\<in>X'-X x. norm (f y t) \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (set_lebesgue_integral lborel (X' - X x) (f y))\n    \\<le> LBINT t:X' - X x. norm (f y t)", "by (intro set_integral_norm_bound integrable) (fact | simp)+"], ["proof (state)\nthis:\n  norm (set_lebesgue_integral lborel (X' - X x) (f y))\n  \\<le> LBINT t:X' - X x. norm (f y t)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> Y \\<Longrightarrow>\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "also"], ["proof (state)\nthis:\n  norm (set_lebesgue_integral lborel (X' - X x) (f y))\n  \\<le> LBINT t:X' - X x. norm (f y t)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> Y \\<Longrightarrow>\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "have \"AE t\\<in>X' - X x in lborel. norm (f y t) \\<le> g t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x\\<in>X' - X x in lborel. norm (f y x) \\<le> g x", "using assms(4)[OF \\<open>y \\<in> Y\\<close>]"], ["proof (prove)\nusing this:\n  AE x\\<in>X' in lborel. norm (f y x) \\<le> g x\n\ngoal (1 subgoal):\n 1. AE x\\<in>X' - X x in lborel. norm (f y x) \\<le> g x", "by eventually_elim auto"], ["proof (state)\nthis:\n  AE x\\<in>X' - X x in lborel. norm (f y x) \\<le> g x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> Y \\<Longrightarrow>\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "with \\<open>y \\<in> Y\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> Y\n  AE x\\<in>X' - X x in lborel. norm (f y x) \\<le> g x", "have \"(\\<integral>t\\<in>X'-X x. norm (f y t) \\<partial>lborel) \\<le> (\\<integral>t\\<in>X'-X x. g t \\<partial>lborel)\""], ["proof (prove)\nusing this:\n  y \\<in> Y\n  AE x\\<in>X' - X x in lborel. norm (f y x) \\<le> g x\n\ngoal (1 subgoal):\n 1. LBINT t:X' - X x. norm (f y t)\n    \\<le> set_lebesgue_integral lborel (X' - X x) g", "by (intro set_integral_mono_AE set_integrable_norm integrable integrable_g) auto"], ["proof (state)\nthis:\n  LBINT t:X' - X x. norm (f y t)\n  \\<le> set_lebesgue_integral lborel (X' - X x) g\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> Y \\<Longrightarrow>\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "also"], ["proof (state)\nthis:\n  LBINT t:X' - X x. norm (f y t)\n  \\<le> set_lebesgue_integral lborel (X' - X x) g\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> Y \\<Longrightarrow>\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "have \"\\<dots> = (\\<integral>t\\<in>X'. g t \\<partial>lborel) - (\\<integral>t\\<in>X x. g t \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_lebesgue_integral lborel (X' - X x) g =\n    set_lebesgue_integral lborel X' g - set_lebesgue_integral lborel (X x) g", "unfolding set_lebesgue_integral_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. LBINT xa. indicat_real (X' - X x) xa *\\<^sub>R g xa =\n    (LBINT x. indicat_real X' x *\\<^sub>R g x) -\n    (LBINT xa. indicat_real (X x) xa *\\<^sub>R g xa)", "apply (subst Bochner_Integration.integral_diff [symmetric])"], ["proof (prove)\ngoal (3 subgoals):\n 1. integrable lborel (\\<lambda>x. indicat_real X' x *\\<^sub>R g x)\n 2. integrable lborel (\\<lambda>xa. indicat_real (X x) xa *\\<^sub>R g xa)\n 3. LBINT xa. indicat_real (X' - X x) xa *\\<^sub>R g xa =\n    LBINT xa.\n      indicat_real X' xa *\\<^sub>R g xa -\n      indicat_real (X x) xa *\\<^sub>R g xa", "unfolding set_integrable_def [symmetric]"], ["proof (prove)\ngoal (3 subgoals):\n 1. set_integrable lborel X' g\n 2. set_integrable lborel (X x) g\n 3. LBINT xa. indicat_real (X' - X x) xa *\\<^sub>R g xa =\n    LBINT xa.\n      indicat_real X' xa *\\<^sub>R g xa -\n      indicat_real (X x) xa *\\<^sub>R g xa", "apply (rule integrable_g; (fact | simp))"], ["proof (prove)\ngoal (2 subgoals):\n 1. set_integrable lborel (X x) g\n 2. LBINT xa. indicat_real (X' - X x) xa *\\<^sub>R g xa =\n    LBINT xa.\n      indicat_real X' xa *\\<^sub>R g xa -\n      indicat_real (X x) xa *\\<^sub>R g xa", "apply (rule integrable_g; fact)"], ["proof (prove)\ngoal (1 subgoal):\n 1. LBINT xa. indicat_real (X' - X x) xa *\\<^sub>R g xa =\n    LBINT xa.\n      indicat_real X' xa *\\<^sub>R g xa -\n      indicat_real (X x) xa *\\<^sub>R g xa", "apply (intro Bochner_Integration.integral_cong)"], ["proof (prove)\ngoal (2 subgoals):\n 1. lborel = lborel\n 2. \\<And>xa.\n       xa \\<in> space lborel \\<Longrightarrow>\n       indicat_real (X' - X x) xa *\\<^sub>R g xa =\n       indicat_real X' xa *\\<^sub>R g xa -\n       indicat_real (X x) xa *\\<^sub>R g xa", "apply (use \\<open>X x \\<subseteq> X'\\<close> in \\<open>auto simp: indicator_def\\<close>)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  set_lebesgue_integral lborel (X' - X x) g =\n  set_lebesgue_integral lborel X' g - set_lebesgue_integral lborel (X x) g\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> Y \\<Longrightarrow>\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "also"], ["proof (state)\nthis:\n  set_lebesgue_integral lborel (X' - X x) g =\n  set_lebesgue_integral lborel X' g - set_lebesgue_integral lborel (X x) g\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> Y \\<Longrightarrow>\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "have \"\\<dots> \\<le> dist (\\<integral>t\\<in>X x. g t \\<partial>lborel) (\\<integral>t\\<in>X'. g t \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_lebesgue_integral lborel X' g - set_lebesgue_integral lborel (X x) g\n    \\<le> dist (set_lebesgue_integral lborel (X x) g)\n           (set_lebesgue_integral lborel X' g)", "by (simp add: dist_norm)"], ["proof (state)\nthis:\n  set_lebesgue_integral lborel X' g - set_lebesgue_integral lborel (X x) g\n  \\<le> dist (set_lebesgue_integral lborel (X x) g)\n         (set_lebesgue_integral lborel X' g)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> Y \\<Longrightarrow>\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "also"], ["proof (state)\nthis:\n  set_lebesgue_integral lborel X' g - set_lebesgue_integral lborel (X x) g\n  \\<le> dist (set_lebesgue_integral lborel (X x) g)\n         (set_lebesgue_integral lborel X' g)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> Y \\<Longrightarrow>\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "have \"\\<dots> < \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (set_lebesgue_integral lborel (X x) g)\n     (set_lebesgue_integral lborel X' g)\n    < \\<epsilon>", "by fact"], ["proof (state)\nthis:\n  dist (set_lebesgue_integral lborel (X x) g)\n   (set_lebesgue_integral lborel X' g)\n  < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> Y \\<Longrightarrow>\n       dist (set_lebesgue_integral lborel (X x) (f xa))\n        (set_lebesgue_integral lborel X' (f xa))\n       < \\<epsilon>", "finally"], ["proof (chain)\npicking this:\n  dist (set_lebesgue_integral lborel (X x) (f y))\n   (set_lebesgue_integral lborel X' (f y))\n  < \\<epsilon>", "show \"dist (set_lebesgue_integral lborel (X x) (f y))\n                         (set_lebesgue_integral lborel X' (f y)) < \\<epsilon>\""], ["proof (prove)\nusing this:\n  dist (set_lebesgue_integral lborel (X x) (f y))\n   (set_lebesgue_integral lborel X' (f y))\n  < \\<epsilon>\n\ngoal (1 subgoal):\n 1. dist (set_lebesgue_integral lborel (X x) (f y))\n     (set_lebesgue_integral lborel X' (f y))\n    < \\<epsilon>", "."], ["proof (state)\nthis:\n  dist (set_lebesgue_integral lborel (X x) (f y))\n   (set_lebesgue_integral lborel X' (f y))\n  < \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>Y.\n     dist (set_lebesgue_integral lborel (X x) (f xa))\n      (set_lebesgue_integral lborel X' (f xa))\n     < \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in F.\n     \\<forall>x\\<in>Y.\n        dist (set_lebesgue_integral lborel (X n) (f x))\n         (set_lebesgue_integral lborel X' (f x))\n        < \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma integral_dominated_convergence_at_right:\n  fixes s :: \"real \\<Rightarrow> 'a \\<Rightarrow> 'b::{banach, second_countable_topology}\" and w :: \"'a \\<Rightarrow> real\"\n    and f :: \"'a \\<Rightarrow> 'b\" and M and c :: real\n  assumes \"f \\<in> borel_measurable M\" \"\\<And>t. s t \\<in> borel_measurable M\" \"integrable M w\"\n  assumes lim: \"AE x in M. ((\\<lambda>i. s i x) \\<longlongrightarrow> f x) (at_right c)\"\n  assumes bound: \"\\<forall>\\<^sub>F i in at_right c. AE x in M. norm (s i x) \\<le> w x\"\n  shows \"((\\<lambda>t. integral\\<^sup>L M (s t)) \\<longlongrightarrow> integral\\<^sup>L M f) (at_right c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. integral\\<^sup>L M (s t)) \\<longlongrightarrow>\n     integral\\<^sup>L M f)\n     (at_right c)", "proof (rule tendsto_at_right_realI_sequentially)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       filterlim X (at_right c) sequentially \\<Longrightarrow>\n       (\\<lambda>n. integral\\<^sup>L M (s (X n)))\n       \\<longlonglongrightarrow> integral\\<^sup>L M f", "fix X :: \"nat \\<Rightarrow> real\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       filterlim X (at_right c) sequentially \\<Longrightarrow>\n       (\\<lambda>n. integral\\<^sup>L M (s (X n)))\n       \\<longlonglongrightarrow> integral\\<^sup>L M f", "assume X: \"filterlim X (at_right c) sequentially\""], ["proof (state)\nthis:\n  filterlim X (at_right c) sequentially\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       filterlim X (at_right c) sequentially \\<Longrightarrow>\n       (\\<lambda>n. integral\\<^sup>L M (s (X n)))\n       \\<longlonglongrightarrow> integral\\<^sup>L M f", "from filterlim_iff[THEN iffD1, OF this, rule_format, OF bound]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in sequentially.\n     AE xa in M. norm (s (X x) xa) \\<le> w xa", "obtain N where w: \"\\<And>n. N \\<le> n \\<Longrightarrow> AE x in M. norm (s (X n) x) \\<le> w x\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially.\n     AE xa in M. norm (s (X x) xa) \\<le> w xa\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        (\\<And>n.\n            N \\<le> n \\<Longrightarrow>\n            AE x in M. norm (s (X n) x) \\<le> w x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_sequentially)"], ["proof (state)\nthis:\n  N \\<le> ?n \\<Longrightarrow> AE x in M. norm (s (X ?n) x) \\<le> w x\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       filterlim X (at_right c) sequentially \\<Longrightarrow>\n       (\\<lambda>n. integral\\<^sup>L M (s (X n)))\n       \\<longlonglongrightarrow> integral\\<^sup>L M f", "show \"(\\<lambda>n. integral\\<^sup>L M (s (X n))) \\<longlonglongrightarrow> integral\\<^sup>L M f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. integral\\<^sup>L M (s (X n)))\n    \\<longlonglongrightarrow> integral\\<^sup>L M f", "proof (rule LIMSEQ_offset, rule integral_dominated_convergence)"], ["proof (state)\ngoal (5 subgoals):\n 1. f \\<in> borel_measurable M\n 2. \\<And>n. s (X (n + ?k)) \\<in> borel_measurable M\n 3. integrable M ?w2\n 4. AE x in M. (\\<lambda>n. s (X (n + ?k)) x) \\<longlonglongrightarrow> f x\n 5. \\<And>n. AE x in M. norm (s (X (n + ?k)) x) \\<le> ?w2 x", "show \"AE x in M. norm (s (X (n + N)) x) \\<le> w x\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. norm (s (X (n + N)) x) \\<le> w x", "by (rule w) auto"], ["proof (state)\nthis:\n  AE x in M. norm (s (X (?n + N)) x) \\<le> w x\n\ngoal (4 subgoals):\n 1. f \\<in> borel_measurable M\n 2. \\<And>n. s (X (n + N)) \\<in> borel_measurable M\n 3. integrable M w\n 4. AE x in M. (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x", "show \"AE x in M. (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x", "using lim"], ["proof (prove)\nusing this:\n  AE x in M. ((\\<lambda>i. s i x) \\<longlongrightarrow> f x) (at_right c)\n\ngoal (1 subgoal):\n 1. AE x in M. (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       ((\\<lambda>i. s i x) \\<longlongrightarrow> f x)\n        (at_right c) \\<Longrightarrow>\n       (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       ((\\<lambda>i. s i x) \\<longlongrightarrow> f x)\n        (at_right c) \\<Longrightarrow>\n       (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x", "assume \"((\\<lambda>i. s i x) \\<longlongrightarrow> f x) (at_right c)\""], ["proof (state)\nthis:\n  ((\\<lambda>i. s i x) \\<longlongrightarrow> f x) (at_right c)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       ((\\<lambda>i. s i x) \\<longlongrightarrow> f x)\n        (at_right c) \\<Longrightarrow>\n       (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x", "then"], ["proof (chain)\npicking this:\n  ((\\<lambda>i. s i x) \\<longlongrightarrow> f x) (at_right c)", "show \"(\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x\""], ["proof (prove)\nusing this:\n  ((\\<lambda>i. s i x) \\<longlongrightarrow> f x) (at_right c)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x", "by (intro LIMSEQ_ignore_initial_segment filterlim_compose[OF _ X])"], ["proof (state)\nthis:\n  (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE x in M. (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x\n\ngoal (3 subgoals):\n 1. f \\<in> borel_measurable M\n 2. \\<And>n. s (X (n + N)) \\<in> borel_measurable M\n 3. integrable M w", "qed fact+"], ["proof (state)\nthis:\n  (\\<lambda>n. integral\\<^sup>L M (s (X n)))\n  \\<longlonglongrightarrow> integral\\<^sup>L M f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma integral_dominated_convergence_at_left:\n  fixes s :: \"real \\<Rightarrow> 'a \\<Rightarrow> 'b::{banach, second_countable_topology}\" and w :: \"'a \\<Rightarrow> real\"\n    and f :: \"'a \\<Rightarrow> 'b\" and M and c :: real\n  assumes \"f \\<in> borel_measurable M\" \"\\<And>t. s t \\<in> borel_measurable M\" \"integrable M w\"\n  assumes lim: \"AE x in M. ((\\<lambda>i. s i x) \\<longlongrightarrow> f x) (at_left c)\"\n  assumes bound: \"\\<forall>\\<^sub>F i in at_left c. AE x in M. norm (s i x) \\<le> w x\"\n  shows \"((\\<lambda>t. integral\\<^sup>L M (s t)) \\<longlongrightarrow> integral\\<^sup>L M f) (at_left c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. integral\\<^sup>L M (s t)) \\<longlongrightarrow>\n     integral\\<^sup>L M f)\n     (at_left c)", "proof (rule tendsto_at_left_realI_sequentially)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       filterlim X (at_left c) sequentially \\<Longrightarrow>\n       (\\<lambda>n. integral\\<^sup>L M (s (X n)))\n       \\<longlonglongrightarrow> integral\\<^sup>L M f", "fix X :: \"nat \\<Rightarrow> real\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       filterlim X (at_left c) sequentially \\<Longrightarrow>\n       (\\<lambda>n. integral\\<^sup>L M (s (X n)))\n       \\<longlonglongrightarrow> integral\\<^sup>L M f", "assume X: \"filterlim X (at_left c) sequentially\""], ["proof (state)\nthis:\n  filterlim X (at_left c) sequentially\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       filterlim X (at_left c) sequentially \\<Longrightarrow>\n       (\\<lambda>n. integral\\<^sup>L M (s (X n)))\n       \\<longlonglongrightarrow> integral\\<^sup>L M f", "from filterlim_iff[THEN iffD1, OF this, rule_format, OF bound]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in sequentially.\n     AE xa in M. norm (s (X x) xa) \\<le> w xa", "obtain N where w: \"\\<And>n. N \\<le> n \\<Longrightarrow> AE x in M. norm (s (X n) x) \\<le> w x\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially.\n     AE xa in M. norm (s (X x) xa) \\<le> w xa\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        (\\<And>n.\n            N \\<le> n \\<Longrightarrow>\n            AE x in M. norm (s (X n) x) \\<le> w x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_sequentially)"], ["proof (state)\nthis:\n  N \\<le> ?n \\<Longrightarrow> AE x in M. norm (s (X ?n) x) \\<le> w x\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       filterlim X (at_left c) sequentially \\<Longrightarrow>\n       (\\<lambda>n. integral\\<^sup>L M (s (X n)))\n       \\<longlonglongrightarrow> integral\\<^sup>L M f", "show \"(\\<lambda>n. integral\\<^sup>L M (s (X n))) \\<longlonglongrightarrow> integral\\<^sup>L M f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. integral\\<^sup>L M (s (X n)))\n    \\<longlonglongrightarrow> integral\\<^sup>L M f", "proof (rule LIMSEQ_offset, rule integral_dominated_convergence)"], ["proof (state)\ngoal (5 subgoals):\n 1. f \\<in> borel_measurable M\n 2. \\<And>n. s (X (n + ?k)) \\<in> borel_measurable M\n 3. integrable M ?w2\n 4. AE x in M. (\\<lambda>n. s (X (n + ?k)) x) \\<longlonglongrightarrow> f x\n 5. \\<And>n. AE x in M. norm (s (X (n + ?k)) x) \\<le> ?w2 x", "show \"AE x in M. norm (s (X (n + N)) x) \\<le> w x\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. norm (s (X (n + N)) x) \\<le> w x", "by (rule w) auto"], ["proof (state)\nthis:\n  AE x in M. norm (s (X (?n + N)) x) \\<le> w x\n\ngoal (4 subgoals):\n 1. f \\<in> borel_measurable M\n 2. \\<And>n. s (X (n + N)) \\<in> borel_measurable M\n 3. integrable M w\n 4. AE x in M. (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x", "show \"AE x in M. (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x", "using lim"], ["proof (prove)\nusing this:\n  AE x in M. ((\\<lambda>i. s i x) \\<longlongrightarrow> f x) (at_left c)\n\ngoal (1 subgoal):\n 1. AE x in M. (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       ((\\<lambda>i. s i x) \\<longlongrightarrow> f x)\n        (at_left c) \\<Longrightarrow>\n       (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       ((\\<lambda>i. s i x) \\<longlongrightarrow> f x)\n        (at_left c) \\<Longrightarrow>\n       (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x", "assume \"((\\<lambda>i. s i x) \\<longlongrightarrow> f x) (at_left c)\""], ["proof (state)\nthis:\n  ((\\<lambda>i. s i x) \\<longlongrightarrow> f x) (at_left c)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       ((\\<lambda>i. s i x) \\<longlongrightarrow> f x)\n        (at_left c) \\<Longrightarrow>\n       (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x", "then"], ["proof (chain)\npicking this:\n  ((\\<lambda>i. s i x) \\<longlongrightarrow> f x) (at_left c)", "show \"(\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x\""], ["proof (prove)\nusing this:\n  ((\\<lambda>i. s i x) \\<longlongrightarrow> f x) (at_left c)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x", "by (intro LIMSEQ_ignore_initial_segment filterlim_compose[OF _ X])"], ["proof (state)\nthis:\n  (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE x in M. (\\<lambda>n. s (X (n + N)) x) \\<longlonglongrightarrow> f x\n\ngoal (3 subgoals):\n 1. f \\<in> borel_measurable M\n 2. \\<And>n. s (X (n + N)) \\<in> borel_measurable M\n 3. integrable M w", "qed fact+"], ["proof (state)\nthis:\n  (\\<lambda>n. integral\\<^sup>L M (s (X n)))\n  \\<longlonglongrightarrow> integral\\<^sup>L M f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma uniform_limit_interval_integral_right:\n  fixes f :: \"'a \\<Rightarrow> real \\<Rightarrow> 'c :: {banach, second_countable_topology}\"\n  assumes \"interval_lebesgue_integrable lborel a b g\"\n  assumes [measurable]: \"\\<And>y. y \\<in> Y \\<Longrightarrow> set_borel_measurable borel (einterval a b) (f y)\"\n  assumes \"\\<And>y. y \\<in> Y \\<Longrightarrow> (AE t\\<in>einterval a b in lborel. norm (f y t) \\<le> g t)\"\n  assumes \"a < b\"\n  shows   \"uniform_limit Y (\\<lambda>b' y. LBINT t=a..b'. f y t) (\\<lambda>y. LBINT t=a..b. f y t) (at_left b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)", "proof (cases \"Y = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)", "case False"], ["proof (state)\nthis:\n  Y \\<noteq> {}\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)", "have g_nonneg: \"AE t\\<in>einterval a b in lborel. g t \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x\\<in>einterval a b in lborel. 0 \\<le> g x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AE x\\<in>einterval a b in lborel. 0 \\<le> g x", "from \\<open>Y \\<noteq> {}\\<close>"], ["proof (chain)\npicking this:\n  Y \\<noteq> {}", "obtain y where \"y \\<in> Y\""], ["proof (prove)\nusing this:\n  Y \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>y. y \\<in> Y \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> Y\n\ngoal (1 subgoal):\n 1. AE x\\<in>einterval a b in lborel. 0 \\<le> g x", "from assms(3)[OF this]"], ["proof (chain)\npicking this:\n  AE x\\<in>einterval a b in lborel. norm (f y x) \\<le> g x", "show ?thesis"], ["proof (prove)\nusing this:\n  AE x\\<in>einterval a b in lborel. norm (f y x) \\<le> g x\n\ngoal (1 subgoal):\n 1. AE x\\<in>einterval a b in lborel. 0 \\<le> g x", "by eventually_elim (auto elim: order.trans[rotated])"], ["proof (state)\nthis:\n  AE x\\<in>einterval a b in lborel. 0 \\<le> g x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE x\\<in>einterval a b in lborel. 0 \\<le> g x\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)", "have ev: \"eventually (\\<lambda>b'. b' \\<in> {a<..<b}) (at_left b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F b' in at_left b. b' \\<in> {a<..<b}", "using \\<open>a < b\\<close>"], ["proof (prove)\nusing this:\n  a < b\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F b' in at_left b. b' \\<in> {a<..<b}", "by (intro eventually_at_leftI)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F b' in at_left b. b' \\<in> {a<..<b}\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)", "with \\<open>a < b\\<close>"], ["proof (chain)\npicking this:\n  a < b\n  \\<forall>\\<^sub>F b' in at_left b. b' \\<in> {a<..<b}", "have \"?thesis \\<longleftrightarrow> uniform_limit Y (\\<lambda>b' y. \\<integral>t\\<in>einterval a (min b b'). f y t \\<partial>lborel)\n                                  (\\<lambda>y. \\<integral>t\\<in>einterval a b. f y t \\<partial>lborel) (at_left b)\""], ["proof (prove)\nusing this:\n  a < b\n  \\<forall>\\<^sub>F b' in at_left b. b' \\<in> {a<..<b}\n\ngoal (1 subgoal):\n 1. uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b) =\n    uniform_limit Y\n     (\\<lambda>b' y.\n         set_lebesgue_integral lborel (einterval a (min b b')) (f y))\n     (\\<lambda>y. set_lebesgue_integral lborel (einterval a b) (f y))\n     (at_left b)", "by (intro filterlim_cong arg_cong2[where f = uniformly_on])\n       (auto simp: interval_lebesgue_integral_def fun_eq_iff min_def\n             intro!: eventually_mono[OF ev])"], ["proof (state)\nthis:\n  uniform_limit Y\n   (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n   (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b) =\n  uniform_limit Y\n   (\\<lambda>b' y.\n       set_lebesgue_integral lborel (einterval a (min b b')) (f y))\n   (\\<lambda>y. set_lebesgue_integral lborel (einterval a b) (f y))\n   (at_left b)\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)", "also"], ["proof (state)\nthis:\n  uniform_limit Y\n   (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n   (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b) =\n  uniform_limit Y\n   (\\<lambda>b' y.\n       set_lebesgue_integral lborel (einterval a (min b b')) (f y))\n   (\\<lambda>y. set_lebesgue_integral lborel (einterval a b) (f y))\n   (at_left b)\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)", "have \\<dots>"], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit Y\n     (\\<lambda>b' y.\n         set_lebesgue_integral lborel (einterval a (min b b')) (f y))\n     (\\<lambda>y. set_lebesgue_integral lborel (einterval a b) (f y))\n     (at_left b)", "proof (rule uniform_limit_set_lebesgue_integral[where g = g], goal_cases)"], ["proof (state)\ngoal (6 subgoals):\n 1. set_integrable lborel (einterval a b) g\n 2. einterval a b \\<in> sets borel\n 3. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       set_borel_measurable borel (einterval a b) (f y)\n 4. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       AE b'\\<in>einterval a b in lborel. norm (f y b') \\<le> g b'\n 5. \\<forall>\\<^sub>F b' in at_left b.\n       einterval a (min b b') \\<in> sets borel \\<and>\n       einterval a (min b b') \\<subseteq> einterval a b\n 6. ((\\<lambda>b'.\n         set_lebesgue_integral lborel (einterval a (min b b'))\n          g) \\<longlongrightarrow>\n     set_lebesgue_integral lborel (einterval a b) g)\n     (at_left b)", "show \"\\<forall>\\<^sub>F b' in at_left b. einterval a (min b b') \\<in> sets borel \\<and>\n                              einterval a (min b b') \\<subseteq> einterval a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F b' in at_left b.\n       einterval a (min b b') \\<in> sets borel \\<and>\n       einterval a (min b b') \\<subseteq> einterval a b", "using ev"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F b' in at_left b. b' \\<in> {a<..<b}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F b' in at_left b.\n       einterval a (min b b') \\<in> sets borel \\<and>\n       einterval a (min b b') \\<subseteq> einterval a b", "by eventually_elim (auto simp: einterval_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F b' in at_left b.\n     einterval a (min b b') \\<in> sets borel \\<and>\n     einterval a (min b b') \\<subseteq> einterval a b\n\ngoal (5 subgoals):\n 1. set_integrable lborel (einterval a b) g\n 2. einterval a b \\<in> sets borel\n 3. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       set_borel_measurable borel (einterval a b) (f y)\n 4. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       AE b'\\<in>einterval a b in lborel. norm (f y b') \\<le> g b'\n 5. ((\\<lambda>b'.\n         set_lebesgue_integral lborel (einterval a (min b b'))\n          g) \\<longlongrightarrow>\n     set_lebesgue_integral lborel (einterval a b) g)\n     (at_left b)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. set_integrable lborel (einterval a b) g\n 2. einterval a b \\<in> sets borel\n 3. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       set_borel_measurable borel (einterval a b) (f y)\n 4. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       AE b'\\<in>einterval a b in lborel. norm (f y b') \\<le> g b'\n 5. ((\\<lambda>b'.\n         set_lebesgue_integral lborel (einterval a (min b b'))\n          g) \\<longlongrightarrow>\n     set_lebesgue_integral lborel (einterval a b) g)\n     (at_left b)", "show \"((\\<lambda>b'. set_lebesgue_integral lborel (einterval a (min b b')) g) \\<longlongrightarrow>\n            set_lebesgue_integral lborel (einterval a b) g) (at_left b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>b'.\n         set_lebesgue_integral lborel (einterval a (min b b'))\n          g) \\<longlongrightarrow>\n     set_lebesgue_integral lborel (einterval a b) g)\n     (at_left b)", "unfolding set_lebesgue_integral_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>b'.\n         LBINT x.\n           indicat_real (einterval a (min b b')) x *\\<^sub>R\n           g x) \\<longlongrightarrow>\n     LBINT x. indicat_real (einterval a b) x *\\<^sub>R g x)\n     (at_left b)", "proof (intro tendsto_at_left_erealI_sequentially integral_dominated_convergence)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       (\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x)\n       \\<in> borel_measurable lborel\n 2. \\<And>X n.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       (\\<lambda>x.\n           indicat_real (einterval a (min b (X n))) x *\\<^sub>R g x)\n       \\<in> borel_measurable lborel\n 3. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 4. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval a (min b (X n)))\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 5. \\<And>X n.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval a (min b (X n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "have *: \"set_borel_measurable borel (einterval a b) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_borel_measurable borel (einterval a b) g", "using assms(1) less_imp_le[OF \\<open>a < b\\<close>]"], ["proof (prove)\nusing this:\n  interval_lebesgue_integrable lborel a b g\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. set_borel_measurable borel (einterval a b) g", "by (simp add: interval_lebesgue_integrable_def set_integrable_def set_borel_measurable_def)"], ["proof (state)\nthis:\n  set_borel_measurable borel (einterval a b) g\n\ngoal (5 subgoals):\n 1. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       (\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x)\n       \\<in> borel_measurable lborel\n 2. \\<And>X n.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       (\\<lambda>x.\n           indicat_real (einterval a (min b (X n))) x *\\<^sub>R g x)\n       \\<in> borel_measurable lborel\n 3. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 4. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval a (min b (X n)))\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 5. \\<And>X n.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval a (min b (X n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "show \"(\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x) \\<in> borel_measurable lborel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x)\n    \\<in> borel_measurable lborel", "using *"], ["proof (prove)\nusing this:\n  set_borel_measurable borel (einterval a b) g\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x)\n    \\<in> borel_measurable lborel", "by (simp add: set_borel_measurable_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x)\n  \\<in> borel_measurable lborel\n\ngoal (4 subgoals):\n 1. \\<And>X n.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       (\\<lambda>x.\n           indicat_real (einterval a (min b (X n))) x *\\<^sub>R g x)\n       \\<in> borel_measurable lborel\n 2. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 3. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval a (min b (X n)))\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 4. \\<And>X n.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval a (min b (X n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "fix X :: \"nat \\<Rightarrow> ereal\" and n :: nat"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>X n.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       (\\<lambda>x.\n           indicat_real (einterval a (min b (X n))) x *\\<^sub>R g x)\n       \\<in> borel_measurable lborel\n 2. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 3. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval a (min b (X n)))\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 4. \\<And>X n.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval a (min b (X n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "have \"set_borel_measurable borel (einterval a (min b (X n))) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_borel_measurable borel (einterval a (min b (X n))) g", "by (rule set_borel_measurable_subset[OF *]) (auto simp: einterval_def)"], ["proof (state)\nthis:\n  set_borel_measurable borel (einterval a (min b (X n))) g\n\ngoal (4 subgoals):\n 1. \\<And>X n.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       (\\<lambda>x.\n           indicat_real (einterval a (min b (X n))) x *\\<^sub>R g x)\n       \\<in> borel_measurable lborel\n 2. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 3. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval a (min b (X n)))\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 4. \\<And>X n.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval a (min b (X n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "thus \"(\\<lambda>x. indicat_real (einterval a (min b (X n))) x *\\<^sub>R g x) \\<in> borel_measurable lborel\""], ["proof (prove)\nusing this:\n  set_borel_measurable borel (einterval a (min b (X n))) g\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. indicat_real (einterval a (min b (X n))) x *\\<^sub>R g x)\n    \\<in> borel_measurable lborel", "by (simp add: set_borel_measurable_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. indicat_real (einterval a (min b (X n))) x *\\<^sub>R g x)\n  \\<in> borel_measurable lborel\n\ngoal (3 subgoals):\n 1. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 2. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval a (min b (X n)))\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 3. \\<And>X n.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval a (min b (X n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 2. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval a (min b (X n)))\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 3. \\<And>X n.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval a (min b (X n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "fix X :: \"nat \\<Rightarrow> ereal\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 2. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval a (min b (X n)))\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 3. \\<And>X n.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval a (min b (X n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "assume X: \"filterlim X (at_left b) sequentially\""], ["proof (state)\nthis:\n  filterlim X (at_left b) sequentially\n\ngoal (3 subgoals):\n 1. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 2. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval a (min b (X n)))\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 3. \\<And>X n.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval a (min b (X n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "show \"AE x in lborel. (\\<lambda>n. indicat_real (einterval a (min b (X n))) x *\\<^sub>R g x)\n               \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in lborel. (\\<lambda>n.\n                        indicat_real (einterval a (min b (X n))) x *\\<^sub>R\n                        g x)\n                    \\<longlonglongrightarrow> indicat_real (einterval a b)\n         x *\\<^sub>R\n        g x", "proof (rule AE_I2)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space lborel \\<Longrightarrow>\n       (\\<lambda>n.\n           indicat_real (einterval a (min b (X n))) x *\\<^sub>R g x)\n       \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R\n                                 g x", "fix x :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space lborel \\<Longrightarrow>\n       (\\<lambda>n.\n           indicat_real (einterval a (min b (X n))) x *\\<^sub>R g x)\n       \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R\n                                 g x", "have \"(\\<lambda>t. indicator (einterval a (min b (X t))) x :: real) \\<longlonglongrightarrow>\n                indicator (einterval a b) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "proof (cases \"x \\<in> einterval a b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x\n 2. x \\<notin> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "case False"], ["proof (state)\nthis:\n  x \\<notin> einterval a b\n\ngoal (2 subgoals):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x\n 2. x \\<notin> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "hence \"x \\<notin> einterval a (min b (X t))\"for t"], ["proof (prove)\nusing this:\n  x \\<notin> einterval a b\n\ngoal (1 subgoal):\n 1. x \\<notin> einterval a (min b (X t))", "by (auto simp: einterval_def)"], ["proof (state)\nthis:\n  x \\<notin> einterval a (min b (X ?t))\n\ngoal (2 subgoals):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x\n 2. x \\<notin> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "with False"], ["proof (chain)\npicking this:\n  x \\<notin> einterval a b\n  x \\<notin> einterval a (min b (X ?t))", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> einterval a b\n  x \\<notin> einterval a (min b (X ?t))\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "by (simp add: indicator_def)"], ["proof (state)\nthis:\n  (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n  \\<longlonglongrightarrow> indicat_real (einterval a b) x\n\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "case True"], ["proof (state)\nthis:\n  x \\<in> einterval a b\n\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "with \\<open>a < b\\<close>"], ["proof (chain)\npicking this:\n  a < b\n  x \\<in> einterval a b", "have \"eventually (\\<lambda>t. t \\<in> {max a x<..<b}) (at_left b)\""], ["proof (prove)\nusing this:\n  a < b\n  x \\<in> einterval a b\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_left b. t \\<in> {max a (ereal x)<..<b}", "by (intro eventually_at_leftI[of \"ereal x\"]) (auto simp: einterval_def min_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_left b. t \\<in> {max a (ereal x)<..<b}\n\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "from this and X"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F t in at_left b. t \\<in> {max a (ereal x)<..<b}\n  filterlim X (at_left b) sequentially", "have \"eventually (\\<lambda>t. X t \\<in> {max a x<..<b}) sequentially\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at_left b. t \\<in> {max a (ereal x)<..<b}\n  filterlim X (at_left b) sequentially\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in sequentially. X t \\<in> {max a (ereal x)<..<b}", "by (rule eventually_compose_filterlim)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in sequentially. X t \\<in> {max a (ereal x)<..<b}\n\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "hence \"eventually (\\<lambda>t. indicator (einterval a (min b (X t))) x = (1 :: real)) sequentially\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in sequentially. X t \\<in> {max a (ereal x)<..<b}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in sequentially.\n       indicat_real (einterval a (min b (X t))) x = 1", "by eventually_elim (use True in \\<open>auto simp: indicator_def einterval_def\\<close>)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in sequentially.\n     indicat_real (einterval a (min b (X t))) x = 1\n\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "from tendsto_eventually[OF this] and True"], ["proof (chain)\npicking this:\n  (\\<lambda>xa. indicat_real (einterval a (min b (X xa))) x)\n  \\<longlonglongrightarrow> 1\n  x \\<in> einterval a b", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>xa. indicat_real (einterval a (min b (X xa))) x)\n  \\<longlonglongrightarrow> 1\n  x \\<in> einterval a b\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "by (simp add: indicator_def)"], ["proof (state)\nthis:\n  (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n  \\<longlonglongrightarrow> indicat_real (einterval a b) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n  \\<longlonglongrightarrow> indicat_real (einterval a b) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space lborel \\<Longrightarrow>\n       (\\<lambda>n.\n           indicat_real (einterval a (min b (X n))) x *\\<^sub>R g x)\n       \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R\n                                 g x", "thus \"(\\<lambda>n. indicat_real (einterval a (min b (X n))) x *\\<^sub>R g x)\n                 \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R g x\""], ["proof (prove)\nusing this:\n  (\\<lambda>t. indicat_real (einterval a (min b (X t))) x)\n  \\<longlonglongrightarrow> indicat_real (einterval a b) x\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. indicat_real (einterval a (min b (X n))) x *\\<^sub>R g x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R g x", "by (intro tendsto_intros)"], ["proof (state)\nthis:\n  (\\<lambda>n. indicat_real (einterval a (min b (X n))) x *\\<^sub>R g x)\n  \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R g x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE x in lborel. (\\<lambda>n.\n                      indicat_real (einterval a (min b (X n))) x *\\<^sub>R\n                      g x)\n                  \\<longlonglongrightarrow> indicat_real (einterval a b)\n       x *\\<^sub>R\n      g x\n\ngoal (2 subgoals):\n 1. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 2. \\<And>X n.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval a (min b (X n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 2. \\<And>X n.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval a (min b (X n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "fix X :: \"nat \\<Rightarrow> ereal\" and n :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 2. \\<And>X n.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval a (min b (X n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "show \"AE x in lborel. norm (indicator (einterval a (min b (X n))) x *\\<^sub>R g x) \\<le>\n              indicator (einterval a b) x *\\<^sub>R g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in lborel. norm\n                     (indicat_real (einterval a (min b (X n))) x *\\<^sub>R\n                      g x)\n                    \\<le> indicat_real (einterval a b) x *\\<^sub>R g x", "using g_nonneg"], ["proof (prove)\nusing this:\n  AE x\\<in>einterval a b in lborel. 0 \\<le> g x\n\ngoal (1 subgoal):\n 1. AE x in lborel. norm\n                     (indicat_real (einterval a (min b (X n))) x *\\<^sub>R\n                      g x)\n                    \\<le> indicat_real (einterval a b) x *\\<^sub>R g x", "by eventually_elim (auto simp: indicator_def einterval_def)"], ["proof (state)\nthis:\n  AE x in lborel. norm\n                   (indicat_real (einterval a (min b (X n))) x *\\<^sub>R\n                    g x)\n                  \\<le> indicat_real (einterval a b) x *\\<^sub>R g x\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       filterlim X (at_left b) sequentially \\<Longrightarrow>\n       integrable lborel\n        (\\<lambda>c. indicat_real (einterval a b) c *\\<^sub>R g c)", "qed (use assms less_imp_le[OF \\<open>a < b\\<close>] in \n         \\<open>auto simp: interval_lebesgue_integrable_def set_integrable_def\\<close>)"], ["proof (state)\nthis:\n  ((\\<lambda>b'.\n       set_lebesgue_integral lborel (einterval a (min b b'))\n        g) \\<longlongrightarrow>\n   set_lebesgue_integral lborel (einterval a b) g)\n   (at_left b)\n\ngoal (4 subgoals):\n 1. set_integrable lborel (einterval a b) g\n 2. einterval a b \\<in> sets borel\n 3. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       set_borel_measurable borel (einterval a b) (f y)\n 4. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       AE b'\\<in>einterval a b in lborel. norm (f y b') \\<le> g b'", "qed (use assms in \\<open>auto simp: interval_lebesgue_integrable_def\\<close>)"], ["proof (state)\nthis:\n  uniform_limit Y\n   (\\<lambda>b' y.\n       set_lebesgue_integral lborel (einterval a (min b b')) (f y))\n   (\\<lambda>y. set_lebesgue_integral lborel (einterval a b) (f y))\n   (at_left b)\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)", "finally"], ["proof (chain)\npicking this:\n  uniform_limit Y\n   (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n   (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)", "show ?thesis"], ["proof (prove)\nusing this:\n  uniform_limit Y\n   (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n   (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)\n\ngoal (1 subgoal):\n 1. uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)", "."], ["proof (state)\nthis:\n  uniform_limit Y\n   (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n   (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)\n\ngoal (1 subgoal):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>b' y. interval_lebesgue_integral lborel a b' (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_left b)", "qed auto"], ["", "lemma uniform_limit_interval_integral_left:\n  fixes f :: \"'a \\<Rightarrow> real \\<Rightarrow> 'c :: {banach, second_countable_topology}\"\n  assumes \"interval_lebesgue_integrable lborel a b g\"\n  assumes [measurable]: \"\\<And>y. y \\<in> Y \\<Longrightarrow> set_borel_measurable borel (einterval a b) (f y)\"\n  assumes \"\\<And>y. y \\<in> Y \\<Longrightarrow> (AE t\\<in>einterval a b in lborel. norm (f y t) \\<le> g t)\"\n  assumes \"a < b\"\n  shows   \"uniform_limit Y (\\<lambda>a' y. LBINT t=a'..b. f y t) (\\<lambda>y. LBINT t=a..b. f y t) (at_right a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)", "proof (cases \"Y = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)", "case False"], ["proof (state)\nthis:\n  Y \\<noteq> {}\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)", "have g_nonneg: \"AE t\\<in>einterval a b in lborel. g t \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x\\<in>einterval a b in lborel. 0 \\<le> g x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AE x\\<in>einterval a b in lborel. 0 \\<le> g x", "from \\<open>Y \\<noteq> {}\\<close>"], ["proof (chain)\npicking this:\n  Y \\<noteq> {}", "obtain y where \"y \\<in> Y\""], ["proof (prove)\nusing this:\n  Y \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>y. y \\<in> Y \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> Y\n\ngoal (1 subgoal):\n 1. AE x\\<in>einterval a b in lborel. 0 \\<le> g x", "from assms(3)[OF this]"], ["proof (chain)\npicking this:\n  AE x\\<in>einterval a b in lborel. norm (f y x) \\<le> g x", "show ?thesis"], ["proof (prove)\nusing this:\n  AE x\\<in>einterval a b in lborel. norm (f y x) \\<le> g x\n\ngoal (1 subgoal):\n 1. AE x\\<in>einterval a b in lborel. 0 \\<le> g x", "by eventually_elim (auto elim: order.trans[rotated])"], ["proof (state)\nthis:\n  AE x\\<in>einterval a b in lborel. 0 \\<le> g x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE x\\<in>einterval a b in lborel. 0 \\<le> g x\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)", "have ev: \"eventually (\\<lambda>b'. b' \\<in> {a<..<b}) (at_right a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F b' in at_right a. b' \\<in> {a<..<b}", "using \\<open>a < b\\<close>"], ["proof (prove)\nusing this:\n  a < b\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F b' in at_right a. b' \\<in> {a<..<b}", "by (intro eventually_at_rightI)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F b' in at_right a. b' \\<in> {a<..<b}\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)", "with \\<open>a < b\\<close>"], ["proof (chain)\npicking this:\n  a < b\n  \\<forall>\\<^sub>F b' in at_right a. b' \\<in> {a<..<b}", "have \"?thesis \\<longleftrightarrow> uniform_limit Y (\\<lambda>a' y. \\<integral>t\\<in>einterval (max a a') b. f y t \\<partial>lborel)\n                                  (\\<lambda>y. \\<integral>t\\<in>einterval a b. f y t \\<partial>lborel) (at_right a)\""], ["proof (prove)\nusing this:\n  a < b\n  \\<forall>\\<^sub>F b' in at_right a. b' \\<in> {a<..<b}\n\ngoal (1 subgoal):\n 1. uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y))\n     (at_right a) =\n    uniform_limit Y\n     (\\<lambda>a' y.\n         set_lebesgue_integral lborel (einterval (max a a') b) (f y))\n     (\\<lambda>y. set_lebesgue_integral lborel (einterval a b) (f y))\n     (at_right a)", "by (intro filterlim_cong arg_cong2[where f = uniformly_on])\n       (auto simp: interval_lebesgue_integral_def fun_eq_iff max_def\n             intro!: eventually_mono[OF ev])"], ["proof (state)\nthis:\n  uniform_limit Y\n   (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n   (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a) =\n  uniform_limit Y\n   (\\<lambda>a' y.\n       set_lebesgue_integral lborel (einterval (max a a') b) (f y))\n   (\\<lambda>y. set_lebesgue_integral lborel (einterval a b) (f y))\n   (at_right a)\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)", "also"], ["proof (state)\nthis:\n  uniform_limit Y\n   (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n   (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a) =\n  uniform_limit Y\n   (\\<lambda>a' y.\n       set_lebesgue_integral lborel (einterval (max a a') b) (f y))\n   (\\<lambda>y. set_lebesgue_integral lborel (einterval a b) (f y))\n   (at_right a)\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)", "have \\<dots>"], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit Y\n     (\\<lambda>a' y.\n         set_lebesgue_integral lborel (einterval (max a a') b) (f y))\n     (\\<lambda>y. set_lebesgue_integral lborel (einterval a b) (f y))\n     (at_right a)", "proof (rule uniform_limit_set_lebesgue_integral[where g = g], goal_cases)"], ["proof (state)\ngoal (6 subgoals):\n 1. set_integrable lborel (einterval a b) g\n 2. einterval a b \\<in> sets borel\n 3. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       set_borel_measurable borel (einterval a b) (f y)\n 4. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       AE a'\\<in>einterval a b in lborel. norm (f y a') \\<le> g a'\n 5. \\<forall>\\<^sub>F a' in at_right a.\n       einterval (max a a') b \\<in> sets borel \\<and>\n       einterval (max a a') b \\<subseteq> einterval a b\n 6. ((\\<lambda>a'.\n         set_lebesgue_integral lborel (einterval (max a a') b)\n          g) \\<longlongrightarrow>\n     set_lebesgue_integral lborel (einterval a b) g)\n     (at_right a)", "show \"\\<forall>\\<^sub>F a' in at_right a. einterval (max a a') b \\<in> sets borel \\<and>\n                              einterval (max a a') b \\<subseteq> einterval a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F a' in at_right a.\n       einterval (max a a') b \\<in> sets borel \\<and>\n       einterval (max a a') b \\<subseteq> einterval a b", "using ev"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F b' in at_right a. b' \\<in> {a<..<b}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F a' in at_right a.\n       einterval (max a a') b \\<in> sets borel \\<and>\n       einterval (max a a') b \\<subseteq> einterval a b", "by eventually_elim (auto simp: einterval_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F a' in at_right a.\n     einterval (max a a') b \\<in> sets borel \\<and>\n     einterval (max a a') b \\<subseteq> einterval a b\n\ngoal (5 subgoals):\n 1. set_integrable lborel (einterval a b) g\n 2. einterval a b \\<in> sets borel\n 3. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       set_borel_measurable borel (einterval a b) (f y)\n 4. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       AE a'\\<in>einterval a b in lborel. norm (f y a') \\<le> g a'\n 5. ((\\<lambda>a'.\n         set_lebesgue_integral lborel (einterval (max a a') b)\n          g) \\<longlongrightarrow>\n     set_lebesgue_integral lborel (einterval a b) g)\n     (at_right a)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. set_integrable lborel (einterval a b) g\n 2. einterval a b \\<in> sets borel\n 3. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       set_borel_measurable borel (einterval a b) (f y)\n 4. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       AE a'\\<in>einterval a b in lborel. norm (f y a') \\<le> g a'\n 5. ((\\<lambda>a'.\n         set_lebesgue_integral lborel (einterval (max a a') b)\n          g) \\<longlongrightarrow>\n     set_lebesgue_integral lborel (einterval a b) g)\n     (at_right a)", "show \"((\\<lambda>a'. set_lebesgue_integral lborel (einterval (max a a') b) g) \\<longlongrightarrow>\n            set_lebesgue_integral lborel (einterval a b) g) (at_right a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>a'.\n         set_lebesgue_integral lborel (einterval (max a a') b)\n          g) \\<longlongrightarrow>\n     set_lebesgue_integral lborel (einterval a b) g)\n     (at_right a)", "unfolding set_lebesgue_integral_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>a'.\n         LBINT x.\n           indicat_real (einterval (max a a') b) x *\\<^sub>R\n           g x) \\<longlongrightarrow>\n     LBINT x. indicat_real (einterval a b) x *\\<^sub>R g x)\n     (at_right a)", "proof (intro tendsto_at_right_erealI_sequentially integral_dominated_convergence)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       (\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x)\n       \\<in> borel_measurable lborel\n 2. \\<And>X n.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       (\\<lambda>x.\n           indicat_real (einterval (max a (X n)) b) x *\\<^sub>R g x)\n       \\<in> borel_measurable lborel\n 3. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 4. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval (max a (X n)) b)\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 5. \\<And>X n.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval (max a (X n)) b)\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "have *: \"set_borel_measurable borel (einterval a b) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_borel_measurable borel (einterval a b) g", "using assms(1) less_imp_le[OF \\<open>a < b\\<close>]"], ["proof (prove)\nusing this:\n  interval_lebesgue_integrable lborel a b g\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. set_borel_measurable borel (einterval a b) g", "by (simp add: interval_lebesgue_integrable_def set_integrable_def set_borel_measurable_def)"], ["proof (state)\nthis:\n  set_borel_measurable borel (einterval a b) g\n\ngoal (5 subgoals):\n 1. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       (\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x)\n       \\<in> borel_measurable lborel\n 2. \\<And>X n.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       (\\<lambda>x.\n           indicat_real (einterval (max a (X n)) b) x *\\<^sub>R g x)\n       \\<in> borel_measurable lborel\n 3. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 4. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval (max a (X n)) b)\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 5. \\<And>X n.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval (max a (X n)) b)\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "show \"(\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x) \\<in> borel_measurable lborel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x)\n    \\<in> borel_measurable lborel", "using *"], ["proof (prove)\nusing this:\n  set_borel_measurable borel (einterval a b) g\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x)\n    \\<in> borel_measurable lborel", "by (simp add: set_borel_measurable_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x)\n  \\<in> borel_measurable lborel\n\ngoal (4 subgoals):\n 1. \\<And>X n.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       (\\<lambda>x.\n           indicat_real (einterval (max a (X n)) b) x *\\<^sub>R g x)\n       \\<in> borel_measurable lborel\n 2. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 3. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval (max a (X n)) b)\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 4. \\<And>X n.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval (max a (X n)) b)\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "fix X :: \"nat \\<Rightarrow> ereal\" and n :: nat"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>X n.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       (\\<lambda>x.\n           indicat_real (einterval (max a (X n)) b) x *\\<^sub>R g x)\n       \\<in> borel_measurable lborel\n 2. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 3. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval (max a (X n)) b)\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 4. \\<And>X n.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval (max a (X n)) b)\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "have \"set_borel_measurable borel (einterval (max a (X n)) b) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_borel_measurable borel (einterval (max a (X n)) b) g", "by (rule set_borel_measurable_subset[OF *]) (auto simp: einterval_def)"], ["proof (state)\nthis:\n  set_borel_measurable borel (einterval (max a (X n)) b) g\n\ngoal (4 subgoals):\n 1. \\<And>X n.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       (\\<lambda>x.\n           indicat_real (einterval (max a (X n)) b) x *\\<^sub>R g x)\n       \\<in> borel_measurable lborel\n 2. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 3. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval (max a (X n)) b)\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 4. \\<And>X n.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval (max a (X n)) b)\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "thus \"(\\<lambda>x. indicat_real (einterval (max a (X n)) b) x *\\<^sub>R g x) \\<in> borel_measurable lborel\""], ["proof (prove)\nusing this:\n  set_borel_measurable borel (einterval (max a (X n)) b) g\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. indicat_real (einterval (max a (X n)) b) x *\\<^sub>R g x)\n    \\<in> borel_measurable lborel", "by (simp add: set_borel_measurable_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. indicat_real (einterval (max a (X n)) b) x *\\<^sub>R g x)\n  \\<in> borel_measurable lborel\n\ngoal (3 subgoals):\n 1. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 2. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval (max a (X n)) b)\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 3. \\<And>X n.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval (max a (X n)) b)\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 2. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval (max a (X n)) b)\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 3. \\<And>X n.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval (max a (X n)) b)\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "fix X :: \"nat \\<Rightarrow> ereal\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 2. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval (max a (X n)) b)\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 3. \\<And>X n.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval (max a (X n)) b)\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "assume X: \"filterlim X (at_right a) sequentially\""], ["proof (state)\nthis:\n  filterlim X (at_right a) sequentially\n\ngoal (3 subgoals):\n 1. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 2. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. (\\<lambda>n.\n                           indicat_real (einterval (max a (X n)) b)\n                            x *\\<^sub>R\n                           g x)\n                       \\<longlonglongrightarrow> indicat_real\n            (einterval a b) x *\\<^sub>R\n           g x\n 3. \\<And>X n.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval (max a (X n)) b)\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "show \"AE x in lborel. (\\<lambda>n. indicat_real (einterval (max a (X n)) b) x *\\<^sub>R g x)\n               \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in lborel. (\\<lambda>n.\n                        indicat_real (einterval (max a (X n)) b) x *\\<^sub>R\n                        g x)\n                    \\<longlonglongrightarrow> indicat_real (einterval a b)\n         x *\\<^sub>R\n        g x", "proof (rule AE_I2)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space lborel \\<Longrightarrow>\n       (\\<lambda>n.\n           indicat_real (einterval (max a (X n)) b) x *\\<^sub>R g x)\n       \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R\n                                 g x", "fix x :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space lborel \\<Longrightarrow>\n       (\\<lambda>n.\n           indicat_real (einterval (max a (X n)) b) x *\\<^sub>R g x)\n       \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R\n                                 g x", "have \"(\\<lambda>t. indicator (einterval (max a (X t)) b) x :: real) \\<longlonglongrightarrow>\n                indicator (einterval a b) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "proof (cases \"x \\<in> einterval a b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x\n 2. x \\<notin> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "case False"], ["proof (state)\nthis:\n  x \\<notin> einterval a b\n\ngoal (2 subgoals):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x\n 2. x \\<notin> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "hence \"x \\<notin> einterval (max a (X t)) b\"for t"], ["proof (prove)\nusing this:\n  x \\<notin> einterval a b\n\ngoal (1 subgoal):\n 1. x \\<notin> einterval (max a (X t)) b", "by (auto simp: einterval_def)"], ["proof (state)\nthis:\n  x \\<notin> einterval (max a (X ?t)) b\n\ngoal (2 subgoals):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x\n 2. x \\<notin> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "with False"], ["proof (chain)\npicking this:\n  x \\<notin> einterval a b\n  x \\<notin> einterval (max a (X ?t)) b", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> einterval a b\n  x \\<notin> einterval (max a (X ?t)) b\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "by (simp add: indicator_def)"], ["proof (state)\nthis:\n  (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n  \\<longlonglongrightarrow> indicat_real (einterval a b) x\n\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "case True"], ["proof (state)\nthis:\n  x \\<in> einterval a b\n\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "with \\<open>a < b\\<close>"], ["proof (chain)\npicking this:\n  a < b\n  x \\<in> einterval a b", "have \"eventually (\\<lambda>t. t \\<in> {a<..<x}) (at_right a)\""], ["proof (prove)\nusing this:\n  a < b\n  x \\<in> einterval a b\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right a. t \\<in> {a<..<ereal x}", "by (intro eventually_at_rightI[of _ \"ereal x\"]) (auto simp: einterval_def min_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right a. t \\<in> {a<..<ereal x}\n\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "from this and X"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F t in at_right a. t \\<in> {a<..<ereal x}\n  filterlim X (at_right a) sequentially", "have \"eventually (\\<lambda>t. X t \\<in> {a<..<x}) sequentially\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at_right a. t \\<in> {a<..<ereal x}\n  filterlim X (at_right a) sequentially\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in sequentially. X t \\<in> {a<..<ereal x}", "by (rule eventually_compose_filterlim)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in sequentially. X t \\<in> {a<..<ereal x}\n\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "hence \"eventually (\\<lambda>t. indicator (einterval (max a (X t)) b) x = (1 :: real)) sequentially\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in sequentially. X t \\<in> {a<..<ereal x}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in sequentially.\n       indicat_real (einterval (max a (X t)) b) x = 1", "by eventually_elim (use True in \\<open>auto simp: indicator_def einterval_def\\<close>)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in sequentially.\n     indicat_real (einterval (max a (X t)) b) x = 1\n\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "from tendsto_eventually[OF this] and True"], ["proof (chain)\npicking this:\n  (\\<lambda>xa. indicat_real (einterval (max a (X xa)) b) x)\n  \\<longlonglongrightarrow> 1\n  x \\<in> einterval a b", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>xa. indicat_real (einterval (max a (X xa)) b) x)\n  \\<longlonglongrightarrow> 1\n  x \\<in> einterval a b\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "by (simp add: indicator_def)"], ["proof (state)\nthis:\n  (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n  \\<longlonglongrightarrow> indicat_real (einterval a b) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n  \\<longlonglongrightarrow> indicat_real (einterval a b) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space lborel \\<Longrightarrow>\n       (\\<lambda>n.\n           indicat_real (einterval (max a (X n)) b) x *\\<^sub>R g x)\n       \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R\n                                 g x", "thus \"(\\<lambda>n. indicat_real (einterval (max a (X n)) b) x *\\<^sub>R g x)\n                 \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R g x\""], ["proof (prove)\nusing this:\n  (\\<lambda>t. indicat_real (einterval (max a (X t)) b) x)\n  \\<longlonglongrightarrow> indicat_real (einterval a b) x\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. indicat_real (einterval (max a (X n)) b) x *\\<^sub>R g x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R g x", "by (intro tendsto_intros)"], ["proof (state)\nthis:\n  (\\<lambda>n. indicat_real (einterval (max a (X n)) b) x *\\<^sub>R g x)\n  \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R g x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE x in lborel. (\\<lambda>n.\n                      indicat_real (einterval (max a (X n)) b) x *\\<^sub>R\n                      g x)\n                  \\<longlonglongrightarrow> indicat_real (einterval a b)\n       x *\\<^sub>R\n      g x\n\ngoal (2 subgoals):\n 1. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 2. \\<And>X n.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval (max a (X n)) b)\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 2. \\<And>X n.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval (max a (X n)) b)\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "fix X :: \"nat \\<Rightarrow> ereal\" and n :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       integrable lborel (?w1 X)\n 2. \\<And>X n.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       AE x in lborel. norm\n                        (indicat_real (einterval (max a (X n)) b)\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w1 X x", "show \"AE x in lborel. norm (indicator (einterval (max a (X n)) b) x *\\<^sub>R g x) \\<le>\n              indicator (einterval a b) x *\\<^sub>R g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in lborel. norm\n                     (indicat_real (einterval (max a (X n)) b) x *\\<^sub>R\n                      g x)\n                    \\<le> indicat_real (einterval a b) x *\\<^sub>R g x", "using g_nonneg"], ["proof (prove)\nusing this:\n  AE x\\<in>einterval a b in lborel. 0 \\<le> g x\n\ngoal (1 subgoal):\n 1. AE x in lborel. norm\n                     (indicat_real (einterval (max a (X n)) b) x *\\<^sub>R\n                      g x)\n                    \\<le> indicat_real (einterval a b) x *\\<^sub>R g x", "by eventually_elim (auto simp: indicator_def einterval_def)"], ["proof (state)\nthis:\n  AE x in lborel. norm\n                   (indicat_real (einterval (max a (X n)) b) x *\\<^sub>R\n                    g x)\n                  \\<le> indicat_real (einterval a b) x *\\<^sub>R g x\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       filterlim X (at_right a) sequentially \\<Longrightarrow>\n       integrable lborel\n        (\\<lambda>c. indicat_real (einterval a b) c *\\<^sub>R g c)", "qed (use assms less_imp_le[OF \\<open>a < b\\<close>] in \n         \\<open>auto simp: interval_lebesgue_integrable_def set_integrable_def\\<close>)"], ["proof (state)\nthis:\n  ((\\<lambda>a'.\n       set_lebesgue_integral lborel (einterval (max a a') b)\n        g) \\<longlongrightarrow>\n   set_lebesgue_integral lborel (einterval a b) g)\n   (at_right a)\n\ngoal (4 subgoals):\n 1. set_integrable lborel (einterval a b) g\n 2. einterval a b \\<in> sets borel\n 3. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       set_borel_measurable borel (einterval a b) (f y)\n 4. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       AE a'\\<in>einterval a b in lborel. norm (f y a') \\<le> g a'", "qed (use assms in \\<open>auto simp: interval_lebesgue_integrable_def\\<close>)"], ["proof (state)\nthis:\n  uniform_limit Y\n   (\\<lambda>a' y.\n       set_lebesgue_integral lborel (einterval (max a a') b) (f y))\n   (\\<lambda>y. set_lebesgue_integral lborel (einterval a b) (f y))\n   (at_right a)\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)", "finally"], ["proof (chain)\npicking this:\n  uniform_limit Y\n   (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n   (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)", "show ?thesis"], ["proof (prove)\nusing this:\n  uniform_limit Y\n   (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n   (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)\n\ngoal (1 subgoal):\n 1. uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)", "."], ["proof (state)\nthis:\n  uniform_limit Y\n   (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n   (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)\n\ngoal (1 subgoal):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>a' y. interval_lebesgue_integral lborel a' b (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) (at_right a)", "qed auto"], ["", "lemma uniform_limit_interval_integral_sequentially:\n  fixes f :: \"'a \\<Rightarrow> real \\<Rightarrow> 'c :: {banach, second_countable_topology}\"\n  assumes \"interval_lebesgue_integrable lborel a b g\"\n  assumes [measurable]: \"\\<And>y. y \\<in> Y \\<Longrightarrow> set_borel_measurable borel (einterval a b) (f y)\"\n  assumes \"\\<And>y. y \\<in> Y \\<Longrightarrow> (AE t\\<in>einterval a b in lborel. norm (f y t) \\<le> g t)\"\n  assumes a': \"filterlim a' (at_right a) sequentially\"\n  assumes b': \"filterlim b' (at_left b) sequentially\"\n  assumes \"a < b\"\n  shows   \"uniform_limit Y (\\<lambda>n y. LBINT t=a' n..b' n. f y t)\n             (\\<lambda>y. LBINT t=a..b. f y t) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially", "proof (cases \"Y = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially", "case False"], ["proof (state)\nthis:\n  Y \\<noteq> {}\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially", "have g_nonneg: \"AE t\\<in>einterval a b in lborel. g t \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x\\<in>einterval a b in lborel. 0 \\<le> g x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AE x\\<in>einterval a b in lborel. 0 \\<le> g x", "from \\<open>Y \\<noteq> {}\\<close>"], ["proof (chain)\npicking this:\n  Y \\<noteq> {}", "obtain y where \"y \\<in> Y\""], ["proof (prove)\nusing this:\n  Y \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>y. y \\<in> Y \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> Y\n\ngoal (1 subgoal):\n 1. AE x\\<in>einterval a b in lborel. 0 \\<le> g x", "from assms(3)[OF this]"], ["proof (chain)\npicking this:\n  AE x\\<in>einterval a b in lborel. norm (f y x) \\<le> g x", "show ?thesis"], ["proof (prove)\nusing this:\n  AE x\\<in>einterval a b in lborel. norm (f y x) \\<le> g x\n\ngoal (1 subgoal):\n 1. AE x\\<in>einterval a b in lborel. 0 \\<le> g x", "by eventually_elim (auto elim: order.trans[rotated])"], ["proof (state)\nthis:\n  AE x\\<in>einterval a b in lborel. 0 \\<le> g x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE x\\<in>einterval a b in lborel. 0 \\<le> g x\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially", "have ev: \"eventually (\\<lambda>n. a < a' n \\<and> a' n < b' n \\<and> b' n < b) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       a < a' n \\<and> a' n < b' n \\<and> b' n < b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       a < a' n \\<and> a' n < b' n \\<and> b' n < b", "from ereal_dense2[OF \\<open>a < b\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>z. a < ereal z \\<and> ereal z < b", "obtain t where t: \"a < ereal t\" \"ereal t < b\""], ["proof (prove)\nusing this:\n  \\<exists>z. a < ereal z \\<and> ereal z < b\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>a < ereal t; ereal t < b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a < ereal t\n  ereal t < b\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       a < a' n \\<and> a' n < b' n \\<and> b' n < b", "from t"], ["proof (chain)\npicking this:\n  a < ereal t\n  ereal t < b", "have \"eventually (\\<lambda>n. a' n \\<in> {a<..<t}) sequentially\""], ["proof (prove)\nusing this:\n  a < ereal t\n  ereal t < b\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. a' n \\<in> {a<..<ereal t}", "by (intro eventually_compose_filterlim[OF _ a'] eventually_at_rightI[of _ \"ereal t\"])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. a' n \\<in> {a<..<ereal t}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       a < a' n \\<and> a' n < b' n \\<and> b' n < b", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. a' n \\<in> {a<..<ereal t}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       a < a' n \\<and> a' n < b' n \\<and> b' n < b", "from t"], ["proof (chain)\npicking this:\n  a < ereal t\n  ereal t < b", "have \"eventually (\\<lambda>n. b' n \\<in> {t<..<b}) sequentially\""], ["proof (prove)\nusing this:\n  a < ereal t\n  ereal t < b\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. b' n \\<in> {ereal t<..<b}", "by (intro eventually_compose_filterlim[OF _ b'] eventually_at_leftI[of \"ereal t\"])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. b' n \\<in> {ereal t<..<b}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       a < a' n \\<and> a' n < b' n \\<and> b' n < b", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially. a' n \\<in> {a<..<ereal t}\n  \\<forall>\\<^sub>F n in sequentially. b' n \\<in> {ereal t<..<b}", "show \"eventually (\\<lambda>n. a < a' n \\<and> a' n < b' n \\<and> b' n < b) sequentially\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. a' n \\<in> {a<..<ereal t}\n  \\<forall>\\<^sub>F n in sequentially. b' n \\<in> {ereal t<..<b}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       a < a' n \\<and> a' n < b' n \\<and> b' n < b", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     a < a' n \\<and> a' n < b' n \\<and> b' n < b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     a < a' n \\<and> a' n < b' n \\<and> b' n < b\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially", "have \"?thesis \\<longleftrightarrow> uniform_limit Y (\\<lambda>n y. \\<integral>t\\<in>einterval (max a (a' n)) (min b (b' n)). f y t \\<partial>lborel)\n                      (\\<lambda>y. \\<integral>t\\<in>einterval a b. f y t \\<partial>lborel) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y))\n     sequentially =\n    uniform_limit Y\n     (\\<lambda>n y.\n         set_lebesgue_integral lborel\n          (einterval (max a (a' n)) (min b (b' n))) (f y))\n     (\\<lambda>y. set_lebesgue_integral lborel (einterval a b) (f y))\n     sequentially", "using \\<open>a < b\\<close>"], ["proof (prove)\nusing this:\n  a < b\n\ngoal (1 subgoal):\n 1. uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y))\n     sequentially =\n    uniform_limit Y\n     (\\<lambda>n y.\n         set_lebesgue_integral lborel\n          (einterval (max a (a' n)) (min b (b' n))) (f y))\n     (\\<lambda>y. set_lebesgue_integral lborel (einterval a b) (f y))\n     sequentially", "by (intro filterlim_cong arg_cong2[where f = uniformly_on])\n       (auto simp: interval_lebesgue_integral_def fun_eq_iff min_def max_def\n             intro!: eventually_mono[OF ev])"], ["proof (state)\nthis:\n  uniform_limit Y\n   (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n   (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially =\n  uniform_limit Y\n   (\\<lambda>n y.\n       set_lebesgue_integral lborel\n        (einterval (max a (a' n)) (min b (b' n))) (f y))\n   (\\<lambda>y. set_lebesgue_integral lborel (einterval a b) (f y))\n   sequentially\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially", "also"], ["proof (state)\nthis:\n  uniform_limit Y\n   (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n   (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially =\n  uniform_limit Y\n   (\\<lambda>n y.\n       set_lebesgue_integral lborel\n        (einterval (max a (a' n)) (min b (b' n))) (f y))\n   (\\<lambda>y. set_lebesgue_integral lborel (einterval a b) (f y))\n   sequentially\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially", "have \\<dots>"], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit Y\n     (\\<lambda>n y.\n         set_lebesgue_integral lborel\n          (einterval (max a (a' n)) (min b (b' n))) (f y))\n     (\\<lambda>y. set_lebesgue_integral lborel (einterval a b) (f y))\n     sequentially", "proof (rule uniform_limit_set_lebesgue_integral[where g = g], goal_cases)"], ["proof (state)\ngoal (6 subgoals):\n 1. set_integrable lborel (einterval a b) g\n 2. einterval a b \\<in> sets borel\n 3. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       set_borel_measurable borel (einterval a b) (f y)\n 4. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       AE n\\<in>einterval a b in lborel. norm (f y n) \\<le> g n\n 5. \\<forall>\\<^sub>F n in sequentially.\n       einterval (max a (a' n)) (min b (b' n)) \\<in> sets borel \\<and>\n       einterval (max a (a' n)) (min b (b' n)) \\<subseteq> einterval a b\n 6. (\\<lambda>n.\n        set_lebesgue_integral lborel\n         (einterval (max a (a' n)) (min b (b' n))) g)\n    \\<longlonglongrightarrow> set_lebesgue_integral lborel (einterval a b) g", "show \"\\<forall>\\<^sub>F n in sequentially. einterval (max a (a' n)) (min b (b' n)) \\<in> sets borel \\<and>\n                                einterval (max a (a' n)) (min b (b' n)) \\<subseteq> einterval a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       einterval (max a (a' n)) (min b (b' n)) \\<in> sets borel \\<and>\n       einterval (max a (a' n)) (min b (b' n)) \\<subseteq> einterval a b", "using ev"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     a < a' n \\<and> a' n < b' n \\<and> b' n < b\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       einterval (max a (a' n)) (min b (b' n)) \\<in> sets borel \\<and>\n       einterval (max a (a' n)) (min b (b' n)) \\<subseteq> einterval a b", "by eventually_elim (auto simp: einterval_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     einterval (max a (a' n)) (min b (b' n)) \\<in> sets borel \\<and>\n     einterval (max a (a' n)) (min b (b' n)) \\<subseteq> einterval a b\n\ngoal (5 subgoals):\n 1. set_integrable lborel (einterval a b) g\n 2. einterval a b \\<in> sets borel\n 3. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       set_borel_measurable borel (einterval a b) (f y)\n 4. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       AE n\\<in>einterval a b in lborel. norm (f y n) \\<le> g n\n 5. (\\<lambda>n.\n        set_lebesgue_integral lborel\n         (einterval (max a (a' n)) (min b (b' n))) g)\n    \\<longlonglongrightarrow> set_lebesgue_integral lborel (einterval a b) g", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. set_integrable lborel (einterval a b) g\n 2. einterval a b \\<in> sets borel\n 3. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       set_borel_measurable borel (einterval a b) (f y)\n 4. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       AE n\\<in>einterval a b in lborel. norm (f y n) \\<le> g n\n 5. (\\<lambda>n.\n        set_lebesgue_integral lborel\n         (einterval (max a (a' n)) (min b (b' n))) g)\n    \\<longlonglongrightarrow> set_lebesgue_integral lborel (einterval a b) g", "show \"((\\<lambda>n. set_lebesgue_integral lborel (einterval (max a (a' n)) (min b (b' n))) g) \\<longlongrightarrow>\n            set_lebesgue_integral lborel (einterval a b) g) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        set_lebesgue_integral lborel\n         (einterval (max a (a' n)) (min b (b' n))) g)\n    \\<longlonglongrightarrow> set_lebesgue_integral lborel (einterval a b) g", "unfolding set_lebesgue_integral_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        LBINT x.\n          indicat_real (einterval (max a (a' n)) (min b (b' n))) x *\\<^sub>R\n          g x)\n    \\<longlonglongrightarrow> LBINT x.\n                                indicat_real (einterval a b) x *\\<^sub>R g x", "proof (intro integral_dominated_convergence)"], ["proof (state)\ngoal (5 subgoals):\n 1. (\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x)\n    \\<in> borel_measurable lborel\n 2. \\<And>n.\n       (\\<lambda>x.\n           indicat_real (einterval (max a (a' n)) (min b (b' n)))\n            x *\\<^sub>R\n           g x)\n       \\<in> borel_measurable lborel\n 3. integrable lborel ?w\n 4. AE x in lborel. (\\<lambda>n.\n                        indicat_real\n                         (einterval (max a (a' n)) (min b (b' n)))\n                         x *\\<^sub>R\n                        g x)\n                    \\<longlonglongrightarrow> indicat_real (einterval a b)\n         x *\\<^sub>R\n        g x\n 5. \\<And>n.\n       AE x in lborel. norm\n                        (indicat_real\n                          (einterval (max a (a' n)) (min b (b' n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w x", "have *: \"set_borel_measurable borel (einterval a b) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_borel_measurable borel (einterval a b) g", "using assms(1) less_imp_le[OF \\<open>a < b\\<close>]"], ["proof (prove)\nusing this:\n  interval_lebesgue_integrable lborel a b g\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. set_borel_measurable borel (einterval a b) g", "by (simp add: interval_lebesgue_integrable_def set_integrable_def set_borel_measurable_def)"], ["proof (state)\nthis:\n  set_borel_measurable borel (einterval a b) g\n\ngoal (5 subgoals):\n 1. (\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x)\n    \\<in> borel_measurable lborel\n 2. \\<And>n.\n       (\\<lambda>x.\n           indicat_real (einterval (max a (a' n)) (min b (b' n)))\n            x *\\<^sub>R\n           g x)\n       \\<in> borel_measurable lborel\n 3. integrable lborel ?w\n 4. AE x in lborel. (\\<lambda>n.\n                        indicat_real\n                         (einterval (max a (a' n)) (min b (b' n)))\n                         x *\\<^sub>R\n                        g x)\n                    \\<longlonglongrightarrow> indicat_real (einterval a b)\n         x *\\<^sub>R\n        g x\n 5. \\<And>n.\n       AE x in lborel. norm\n                        (indicat_real\n                          (einterval (max a (a' n)) (min b (b' n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w x", "show \"(\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x) \\<in> borel_measurable lborel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x)\n    \\<in> borel_measurable lborel", "using *"], ["proof (prove)\nusing this:\n  set_borel_measurable borel (einterval a b) g\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x)\n    \\<in> borel_measurable lborel", "by (simp add: set_borel_measurable_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x)\n  \\<in> borel_measurable lborel\n\ngoal (4 subgoals):\n 1. \\<And>n.\n       (\\<lambda>x.\n           indicat_real (einterval (max a (a' n)) (min b (b' n)))\n            x *\\<^sub>R\n           g x)\n       \\<in> borel_measurable lborel\n 2. integrable lborel ?w\n 3. AE x in lborel. (\\<lambda>n.\n                        indicat_real\n                         (einterval (max a (a' n)) (min b (b' n)))\n                         x *\\<^sub>R\n                        g x)\n                    \\<longlonglongrightarrow> indicat_real (einterval a b)\n         x *\\<^sub>R\n        g x\n 4. \\<And>n.\n       AE x in lborel. norm\n                        (indicat_real\n                          (einterval (max a (a' n)) (min b (b' n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w x", "fix n :: nat"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>n.\n       (\\<lambda>x.\n           indicat_real (einterval (max a (a' n)) (min b (b' n)))\n            x *\\<^sub>R\n           g x)\n       \\<in> borel_measurable lborel\n 2. integrable lborel ?w\n 3. AE x in lborel. (\\<lambda>n.\n                        indicat_real\n                         (einterval (max a (a' n)) (min b (b' n)))\n                         x *\\<^sub>R\n                        g x)\n                    \\<longlonglongrightarrow> indicat_real (einterval a b)\n         x *\\<^sub>R\n        g x\n 4. \\<And>n.\n       AE x in lborel. norm\n                        (indicat_real\n                          (einterval (max a (a' n)) (min b (b' n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w x", "have \"set_borel_measurable borel (einterval (max a (a' n)) (min b (b' n))) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_borel_measurable borel (einterval (max a (a' n)) (min b (b' n))) g", "by (rule set_borel_measurable_subset[OF *]) (auto simp: einterval_def)"], ["proof (state)\nthis:\n  set_borel_measurable borel (einterval (max a (a' n)) (min b (b' n))) g\n\ngoal (4 subgoals):\n 1. \\<And>n.\n       (\\<lambda>x.\n           indicat_real (einterval (max a (a' n)) (min b (b' n)))\n            x *\\<^sub>R\n           g x)\n       \\<in> borel_measurable lborel\n 2. integrable lborel ?w\n 3. AE x in lborel. (\\<lambda>n.\n                        indicat_real\n                         (einterval (max a (a' n)) (min b (b' n)))\n                         x *\\<^sub>R\n                        g x)\n                    \\<longlonglongrightarrow> indicat_real (einterval a b)\n         x *\\<^sub>R\n        g x\n 4. \\<And>n.\n       AE x in lborel. norm\n                        (indicat_real\n                          (einterval (max a (a' n)) (min b (b' n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w x", "thus \"(\\<lambda>x. indicat_real (einterval (max a (a' n)) (min b (b' n))) x *\\<^sub>R g x) \\<in> borel_measurable lborel\""], ["proof (prove)\nusing this:\n  set_borel_measurable borel (einterval (max a (a' n)) (min b (b' n))) g\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        indicat_real (einterval (max a (a' n)) (min b (b' n))) x *\\<^sub>R\n        g x)\n    \\<in> borel_measurable lborel", "by (simp add: set_borel_measurable_def)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      indicat_real (einterval (max a (a' n)) (min b (b' n))) x *\\<^sub>R\n      g x)\n  \\<in> borel_measurable lborel\n\ngoal (3 subgoals):\n 1. integrable lborel ?w\n 2. AE x in lborel. (\\<lambda>n.\n                        indicat_real\n                         (einterval (max a (a' n)) (min b (b' n)))\n                         x *\\<^sub>R\n                        g x)\n                    \\<longlonglongrightarrow> indicat_real (einterval a b)\n         x *\\<^sub>R\n        g x\n 3. \\<And>n.\n       AE x in lborel. norm\n                        (indicat_real\n                          (einterval (max a (a' n)) (min b (b' n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w x", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. integrable lborel ?w\n 2. AE x in lborel. (\\<lambda>n.\n                        indicat_real\n                         (einterval (max a (a' n)) (min b (b' n)))\n                         x *\\<^sub>R\n                        g x)\n                    \\<longlonglongrightarrow> indicat_real (einterval a b)\n         x *\\<^sub>R\n        g x\n 3. \\<And>n.\n       AE x in lborel. norm\n                        (indicat_real\n                          (einterval (max a (a' n)) (min b (b' n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w x", "show \"AE x in lborel. (\\<lambda>n. indicat_real (einterval (max a (a' n)) (min b (b' n))) x *\\<^sub>R g x)\n               \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in lborel. (\\<lambda>n.\n                        indicat_real\n                         (einterval (max a (a' n)) (min b (b' n)))\n                         x *\\<^sub>R\n                        g x)\n                    \\<longlonglongrightarrow> indicat_real (einterval a b)\n         x *\\<^sub>R\n        g x", "proof (rule AE_I2)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space lborel \\<Longrightarrow>\n       (\\<lambda>n.\n           indicat_real (einterval (max a (a' n)) (min b (b' n)))\n            x *\\<^sub>R\n           g x)\n       \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R\n                                 g x", "fix x :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space lborel \\<Longrightarrow>\n       (\\<lambda>n.\n           indicat_real (einterval (max a (a' n)) (min b (b' n)))\n            x *\\<^sub>R\n           g x)\n       \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R\n                                 g x", "have \"(\\<lambda>t. indicator (einterval (max a (a' t)) (min b (b' t))) x :: real) \\<longlonglongrightarrow>\n                indicator (einterval a b) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "proof (cases \"x \\<in> einterval a b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x\n 2. x \\<notin> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "case False"], ["proof (state)\nthis:\n  x \\<notin> einterval a b\n\ngoal (2 subgoals):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x\n 2. x \\<notin> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "hence \"x \\<notin> einterval (max a (a' t)) (min b (b' t))\"for t"], ["proof (prove)\nusing this:\n  x \\<notin> einterval a b\n\ngoal (1 subgoal):\n 1. x \\<notin> einterval (max a (a' t)) (min b (b' t))", "by (auto simp: einterval_def)"], ["proof (state)\nthis:\n  x \\<notin> einterval (max a (a' ?t)) (min b (b' ?t))\n\ngoal (2 subgoals):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x\n 2. x \\<notin> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "with False"], ["proof (chain)\npicking this:\n  x \\<notin> einterval a b\n  x \\<notin> einterval (max a (a' ?t)) (min b (b' ?t))", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> einterval a b\n  x \\<notin> einterval (max a (a' ?t)) (min b (b' ?t))\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "by (simp add: indicator_def)"], ["proof (state)\nthis:\n  (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n  \\<longlonglongrightarrow> indicat_real (einterval a b) x\n\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "case True"], ["proof (state)\nthis:\n  x \\<in> einterval a b\n\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "with \\<open>a < b\\<close>"], ["proof (chain)\npicking this:\n  a < b\n  x \\<in> einterval a b", "have \"eventually (\\<lambda>t. t \\<in> {a<..<x}) (at_right a)\""], ["proof (prove)\nusing this:\n  a < b\n  x \\<in> einterval a b\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at_right a. t \\<in> {a<..<ereal x}", "by (intro eventually_at_rightI[of _ \"ereal x\"]) (auto simp: einterval_def min_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at_right a. t \\<in> {a<..<ereal x}\n\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "have \"eventually (\\<lambda>n. x \\<in> {a' n<..<b' n}) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. ereal x \\<in> {a' n<..<b' n}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. ereal x \\<in> {a' n<..<b' n}", "have \"eventually (\\<lambda>n. a' n \\<in> {a<..<x}) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. a' n \\<in> {a<..<ereal x}", "using True"], ["proof (prove)\nusing this:\n  x \\<in> einterval a b\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. a' n \\<in> {a<..<ereal x}", "by (intro eventually_compose_filterlim[OF _ a'] eventually_at_rightI[of _ \"ereal x\"])\n                 (auto simp: einterval_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. a' n \\<in> {a<..<ereal x}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. ereal x \\<in> {a' n<..<b' n}", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. a' n \\<in> {a<..<ereal x}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. ereal x \\<in> {a' n<..<b' n}", "have \"eventually (\\<lambda>n. b' n \\<in> {x<..<b}) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. b' n \\<in> {ereal x<..<b}", "using True"], ["proof (prove)\nusing this:\n  x \\<in> einterval a b\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. b' n \\<in> {ereal x<..<b}", "by (intro eventually_compose_filterlim[OF _ b'] eventually_at_leftI[of \"ereal x\"])\n                 (auto simp: einterval_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. b' n \\<in> {ereal x<..<b}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. ereal x \\<in> {a' n<..<b' n}", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially. a' n \\<in> {a<..<ereal x}\n  \\<forall>\\<^sub>F n in sequentially. b' n \\<in> {ereal x<..<b}", "show \"eventually (\\<lambda>n. x \\<in> {a' n<..<b' n}) sequentially\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. a' n \\<in> {a<..<ereal x}\n  \\<forall>\\<^sub>F n in sequentially. b' n \\<in> {ereal x<..<b}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. ereal x \\<in> {a' n<..<b' n}", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. ereal x \\<in> {a' n<..<b' n}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. ereal x \\<in> {a' n<..<b' n}\n\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "hence \"eventually (\\<lambda>t. indicator (einterval (max a (a' t)) (min b (b' t))) x = (1 :: real)) sequentially\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. ereal x \\<in> {a' n<..<b' n}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in sequentially.\n       indicat_real (einterval (max a (a' t)) (min b (b' t))) x = 1", "by eventually_elim (use True in \\<open>auto simp: indicator_def einterval_def\\<close>)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in sequentially.\n     indicat_real (einterval (max a (a' t)) (min b (b' t))) x = 1\n\ngoal (1 subgoal):\n 1. x \\<in> einterval a b \\<Longrightarrow>\n    (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "from tendsto_eventually[OF this] and True"], ["proof (chain)\npicking this:\n  (\\<lambda>xa. indicat_real (einterval (max a (a' xa)) (min b (b' xa))) x)\n  \\<longlonglongrightarrow> 1\n  x \\<in> einterval a b", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>xa. indicat_real (einterval (max a (a' xa)) (min b (b' xa))) x)\n  \\<longlonglongrightarrow> 1\n  x \\<in> einterval a b\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x", "by (simp add: indicator_def)"], ["proof (state)\nthis:\n  (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n  \\<longlonglongrightarrow> indicat_real (einterval a b) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n  \\<longlonglongrightarrow> indicat_real (einterval a b) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space lborel \\<Longrightarrow>\n       (\\<lambda>n.\n           indicat_real (einterval (max a (a' n)) (min b (b' n)))\n            x *\\<^sub>R\n           g x)\n       \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R\n                                 g x", "thus \"(\\<lambda>n. indicat_real (einterval (max a (a' n)) (min b (b' n))) x *\\<^sub>R g x)\n                 \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R g x\""], ["proof (prove)\nusing this:\n  (\\<lambda>t. indicat_real (einterval (max a (a' t)) (min b (b' t))) x)\n  \\<longlonglongrightarrow> indicat_real (einterval a b) x\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        indicat_real (einterval (max a (a' n)) (min b (b' n))) x *\\<^sub>R\n        g x)\n    \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R g x", "by (intro tendsto_intros)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      indicat_real (einterval (max a (a' n)) (min b (b' n))) x *\\<^sub>R\n      g x)\n  \\<longlonglongrightarrow> indicat_real (einterval a b) x *\\<^sub>R g x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE x in lborel. (\\<lambda>n.\n                      indicat_real (einterval (max a (a' n)) (min b (b' n)))\n                       x *\\<^sub>R\n                      g x)\n                  \\<longlonglongrightarrow> indicat_real (einterval a b)\n       x *\\<^sub>R\n      g x\n\ngoal (2 subgoals):\n 1. integrable lborel ?w\n 2. \\<And>n.\n       AE x in lborel. norm\n                        (indicat_real\n                          (einterval (max a (a' n)) (min b (b' n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. integrable lborel ?w\n 2. \\<And>n.\n       AE x in lborel. norm\n                        (indicat_real\n                          (einterval (max a (a' n)) (min b (b' n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w x", "fix X :: \"nat \\<Rightarrow> ereal\" and n :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. integrable lborel ?w\n 2. \\<And>n.\n       AE x in lborel. norm\n                        (indicat_real\n                          (einterval (max a (a' n)) (min b (b' n)))\n                          x *\\<^sub>R\n                         g x)\n                       \\<le> ?w x", "show \"AE x in lborel. norm (indicator (einterval (max a (a' n)) (min b (b' n))) x *\\<^sub>R g x) \\<le>\n              indicator (einterval a b) x *\\<^sub>R g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in lborel. norm\n                     (indicat_real (einterval (max a (a' n)) (min b (b' n)))\n                       x *\\<^sub>R\n                      g x)\n                    \\<le> indicat_real (einterval a b) x *\\<^sub>R g x", "using g_nonneg"], ["proof (prove)\nusing this:\n  AE x\\<in>einterval a b in lborel. 0 \\<le> g x\n\ngoal (1 subgoal):\n 1. AE x in lborel. norm\n                     (indicat_real (einterval (max a (a' n)) (min b (b' n)))\n                       x *\\<^sub>R\n                      g x)\n                    \\<le> indicat_real (einterval a b) x *\\<^sub>R g x", "by eventually_elim (auto simp: indicator_def einterval_def)"], ["proof (state)\nthis:\n  AE x in lborel. norm\n                   (indicat_real (einterval (max a (a' n)) (min b (b' n)))\n                     x *\\<^sub>R\n                    g x)\n                  \\<le> indicat_real (einterval a b) x *\\<^sub>R g x\n\ngoal (1 subgoal):\n 1. integrable lborel\n     (\\<lambda>x. indicat_real (einterval a b) x *\\<^sub>R g x)", "qed (use assms less_imp_le[OF \\<open>a < b\\<close>] in \n         \\<open>auto simp: interval_lebesgue_integrable_def set_integrable_def\\<close>)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      set_lebesgue_integral lborel (einterval (max a (a' n)) (min b (b' n)))\n       g)\n  \\<longlonglongrightarrow> set_lebesgue_integral lborel (einterval a b) g\n\ngoal (4 subgoals):\n 1. set_integrable lborel (einterval a b) g\n 2. einterval a b \\<in> sets borel\n 3. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       set_borel_measurable borel (einterval a b) (f y)\n 4. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       AE n\\<in>einterval a b in lborel. norm (f y n) \\<le> g n", "qed (use assms in \\<open>auto simp: interval_lebesgue_integrable_def\\<close>)"], ["proof (state)\nthis:\n  uniform_limit Y\n   (\\<lambda>n y.\n       set_lebesgue_integral lborel\n        (einterval (max a (a' n)) (min b (b' n))) (f y))\n   (\\<lambda>y. set_lebesgue_integral lborel (einterval a b) (f y))\n   sequentially\n\ngoal (2 subgoals):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially", "finally"], ["proof (chain)\npicking this:\n  uniform_limit Y\n   (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n   (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially", "show ?thesis"], ["proof (prove)\nusing this:\n  uniform_limit Y\n   (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n   (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially\n\ngoal (1 subgoal):\n 1. uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially", "."], ["proof (state)\nthis:\n  uniform_limit Y\n   (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n   (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially\n\ngoal (1 subgoal):\n 1. Y = {} \\<Longrightarrow>\n    uniform_limit Y\n     (\\<lambda>n y. interval_lebesgue_integral lborel (a' n) (b' n) (f y))\n     (\\<lambda>y. interval_lebesgue_integral lborel a b (f y)) sequentially", "qed auto"], ["", "lemma interval_lebesgue_integrable_combine:\n  assumes \"interval_lebesgue_integrable lborel A B f\"\n  assumes \"interval_lebesgue_integrable lborel B C f\"\n  assumes \"set_borel_measurable borel (einterval A C) f\"\n  assumes \"A \\<le> B\" \"B \\<le> C\"\n  shows   \"interval_lebesgue_integrable lborel A C f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel A C f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel A C f", "have meas: \"set_borel_measurable borel (einterval A B \\<union> einterval B C) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_borel_measurable borel (einterval A B \\<union> einterval B C) f", "by (rule set_borel_measurable_subset[OF assms(3)]) (use assms in \\<open>auto simp: einterval_def\\<close>)"], ["proof (state)\nthis:\n  set_borel_measurable borel (einterval A B \\<union> einterval B C) f\n\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel A C f", "have \"set_integrable lborel (einterval A B \\<union> einterval B C) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel (einterval A B \\<union> einterval B C) f", "using assms"], ["proof (prove)\nusing this:\n  interval_lebesgue_integrable lborel A B f\n  interval_lebesgue_integrable lborel B C f\n  set_borel_measurable borel (einterval A C) f\n  A \\<le> B\n  B \\<le> C\n\ngoal (1 subgoal):\n 1. set_integrable lborel (einterval A B \\<union> einterval B C) f", "by (intro set_integrable_Un) (auto simp: interval_lebesgue_integrable_def)"], ["proof (state)\nthis:\n  set_integrable lborel (einterval A B \\<union> einterval B C) f\n\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel A C f", "also"], ["proof (state)\nthis:\n  set_integrable lborel (einterval A B \\<union> einterval B C) f\n\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel A C f", "have \"?this \\<longleftrightarrow> set_integrable lborel (einterval A C) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel (einterval A B \\<union> einterval B C) f =\n    set_integrable lborel (einterval A C) f", "proof (cases \"B \\<in> {\\<infinity>, -\\<infinity>}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. B \\<in> {\\<infinity>, - \\<infinity>} \\<Longrightarrow>\n    set_integrable lborel (einterval A B \\<union> einterval B C) f =\n    set_integrable lborel (einterval A C) f\n 2. B \\<notin> {\\<infinity>, - \\<infinity>} \\<Longrightarrow>\n    set_integrable lborel (einterval A B \\<union> einterval B C) f =\n    set_integrable lborel (einterval A C) f", "case True"], ["proof (state)\nthis:\n  B \\<in> {\\<infinity>, - \\<infinity>}\n\ngoal (2 subgoals):\n 1. B \\<in> {\\<infinity>, - \\<infinity>} \\<Longrightarrow>\n    set_integrable lborel (einterval A B \\<union> einterval B C) f =\n    set_integrable lborel (einterval A C) f\n 2. B \\<notin> {\\<infinity>, - \\<infinity>} \\<Longrightarrow>\n    set_integrable lborel (einterval A B \\<union> einterval B C) f =\n    set_integrable lborel (einterval A C) f", "with assms"], ["proof (chain)\npicking this:\n  interval_lebesgue_integrable lborel A B f\n  interval_lebesgue_integrable lborel B C f\n  set_borel_measurable borel (einterval A C) f\n  A \\<le> B\n  B \\<le> C\n  B \\<in> {\\<infinity>, - \\<infinity>}", "have \"einterval A B \\<union> einterval B C = einterval A C\""], ["proof (prove)\nusing this:\n  interval_lebesgue_integrable lborel A B f\n  interval_lebesgue_integrable lborel B C f\n  set_borel_measurable borel (einterval A C) f\n  A \\<le> B\n  B \\<le> C\n  B \\<in> {\\<infinity>, - \\<infinity>}\n\ngoal (1 subgoal):\n 1. einterval A B \\<union> einterval B C = einterval A C", "by (auto simp: einterval_def)"], ["proof (state)\nthis:\n  einterval A B \\<union> einterval B C = einterval A C\n\ngoal (2 subgoals):\n 1. B \\<in> {\\<infinity>, - \\<infinity>} \\<Longrightarrow>\n    set_integrable lborel (einterval A B \\<union> einterval B C) f =\n    set_integrable lborel (einterval A C) f\n 2. B \\<notin> {\\<infinity>, - \\<infinity>} \\<Longrightarrow>\n    set_integrable lborel (einterval A B \\<union> einterval B C) f =\n    set_integrable lborel (einterval A C) f", "thus ?thesis"], ["proof (prove)\nusing this:\n  einterval A B \\<union> einterval B C = einterval A C\n\ngoal (1 subgoal):\n 1. set_integrable lborel (einterval A B \\<union> einterval B C) f =\n    set_integrable lborel (einterval A C) f", "by simp"], ["proof (state)\nthis:\n  set_integrable lborel (einterval A B \\<union> einterval B C) f =\n  set_integrable lborel (einterval A C) f\n\ngoal (1 subgoal):\n 1. B \\<notin> {\\<infinity>, - \\<infinity>} \\<Longrightarrow>\n    set_integrable lborel (einterval A B \\<union> einterval B C) f =\n    set_integrable lborel (einterval A C) f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<notin> {\\<infinity>, - \\<infinity>} \\<Longrightarrow>\n    set_integrable lborel (einterval A B \\<union> einterval B C) f =\n    set_integrable lborel (einterval A C) f", "case False"], ["proof (state)\nthis:\n  B \\<notin> {\\<infinity>, - \\<infinity>}\n\ngoal (1 subgoal):\n 1. B \\<notin> {\\<infinity>, - \\<infinity>} \\<Longrightarrow>\n    set_integrable lborel (einterval A B \\<union> einterval B C) f =\n    set_integrable lborel (einterval A C) f", "then"], ["proof (chain)\npicking this:\n  B \\<notin> {\\<infinity>, - \\<infinity>}", "obtain B' where [simp]: \"B = ereal B'\""], ["proof (prove)\nusing this:\n  B \\<notin> {\\<infinity>, - \\<infinity>}\n\ngoal (1 subgoal):\n 1. (\\<And>B'. B = ereal B' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases B) auto"], ["proof (state)\nthis:\n  B = ereal B'\n\ngoal (1 subgoal):\n 1. B \\<notin> {\\<infinity>, - \\<infinity>} \\<Longrightarrow>\n    set_integrable lborel (einterval A B \\<union> einterval B C) f =\n    set_integrable lborel (einterval A C) f", "have \"indicator (einterval A C) x = (indicator (einterval A B \\<union> einterval B C) x :: real)\"\n      if \"x \\<noteq> B'\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. indicat_real (einterval A C) x =\n    indicat_real (einterval A B \\<union> einterval B C) x", "using assms(4,5) that"], ["proof (prove)\nusing this:\n  A \\<le> B\n  B \\<le> C\n  x \\<noteq> B'\n\ngoal (1 subgoal):\n 1. indicat_real (einterval A C) x =\n    indicat_real (einterval A B \\<union> einterval B C) x", "by (cases A; cases C) (auto simp: einterval_def indicator_def)"], ["proof (state)\nthis:\n  ?x \\<noteq> B' \\<Longrightarrow>\n  indicat_real (einterval A C) ?x =\n  indicat_real (einterval A B \\<union> einterval B C) ?x\n\ngoal (1 subgoal):\n 1. B \\<notin> {\\<infinity>, - \\<infinity>} \\<Longrightarrow>\n    set_integrable lborel (einterval A B \\<union> einterval B C) f =\n    set_integrable lborel (einterval A C) f", "hence \"{x \\<in> space lborel. indicat_real (einterval A B \\<union> einterval B C) x *\\<^sub>R f x \\<noteq>\n              indicat_real (einterval A C) x *\\<^sub>R f x} \\<subseteq> {B'}\""], ["proof (prove)\nusing this:\n  ?x \\<noteq> B' \\<Longrightarrow>\n  indicat_real (einterval A C) ?x =\n  indicat_real (einterval A B \\<union> einterval B C) ?x\n\ngoal (1 subgoal):\n 1. {x \\<in> space lborel.\n     indicat_real (einterval A B \\<union> einterval B C) x *\\<^sub>R\n     f x \\<noteq>\n     indicat_real (einterval A C) x *\\<^sub>R f x}\n    \\<subseteq> {B'}", "by force"], ["proof (state)\nthis:\n  {x \\<in> space lborel.\n   indicat_real (einterval A B \\<union> einterval B C) x *\\<^sub>R\n   f x \\<noteq>\n   indicat_real (einterval A C) x *\\<^sub>R f x}\n  \\<subseteq> {B'}\n\ngoal (1 subgoal):\n 1. B \\<notin> {\\<infinity>, - \\<infinity>} \\<Longrightarrow>\n    set_integrable lborel (einterval A B \\<union> einterval B C) f =\n    set_integrable lborel (einterval A C) f", "thus ?thesis"], ["proof (prove)\nusing this:\n  {x \\<in> space lborel.\n   indicat_real (einterval A B \\<union> einterval B C) x *\\<^sub>R\n   f x \\<noteq>\n   indicat_real (einterval A C) x *\\<^sub>R f x}\n  \\<subseteq> {B'}\n\ngoal (1 subgoal):\n 1. set_integrable lborel (einterval A B \\<union> einterval B C) f =\n    set_integrable lborel (einterval A C) f", "unfolding set_integrable_def"], ["proof (prove)\nusing this:\n  {x \\<in> space lborel.\n   indicat_real (einterval A B \\<union> einterval B C) x *\\<^sub>R\n   f x \\<noteq>\n   indicat_real (einterval A C) x *\\<^sub>R f x}\n  \\<subseteq> {B'}\n\ngoal (1 subgoal):\n 1. integrable lborel\n     (\\<lambda>x.\n         indicat_real (einterval A B \\<union> einterval B C) x *\\<^sub>R\n         f x) =\n    integrable lborel\n     (\\<lambda>x. indicat_real (einterval A C) x *\\<^sub>R f x)", "using meas assms"], ["proof (prove)\nusing this:\n  {x \\<in> space lborel.\n   indicat_real (einterval A B \\<union> einterval B C) x *\\<^sub>R\n   f x \\<noteq>\n   indicat_real (einterval A C) x *\\<^sub>R f x}\n  \\<subseteq> {B'}\n  set_borel_measurable borel (einterval A B \\<union> einterval B C) f\n  interval_lebesgue_integrable lborel A B f\n  interval_lebesgue_integrable lborel B C f\n  set_borel_measurable borel (einterval A C) f\n  A \\<le> B\n  B \\<le> C\n\ngoal (1 subgoal):\n 1. integrable lborel\n     (\\<lambda>x.\n         indicat_real (einterval A B \\<union> einterval B C) x *\\<^sub>R\n         f x) =\n    integrable lborel\n     (\\<lambda>x. indicat_real (einterval A C) x *\\<^sub>R f x)", "by (intro integrable_cong_AE AE_I[of _ _ \"{B'}\"])\n         (simp_all add: set_borel_measurable_def)"], ["proof (state)\nthis:\n  set_integrable lborel (einterval A B \\<union> einterval B C) f =\n  set_integrable lborel (einterval A C) f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set_integrable lborel (einterval A B \\<union> einterval B C) f =\n  set_integrable lborel (einterval A C) f\n\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel A C f", "also"], ["proof (state)\nthis:\n  set_integrable lborel (einterval A B \\<union> einterval B C) f =\n  set_integrable lborel (einterval A C) f\n\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel A C f", "have \"\\<dots> \\<longleftrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel (einterval A C) f =\n    interval_lebesgue_integrable lborel A C f", "using order.trans[OF assms(4,5)]"], ["proof (prove)\nusing this:\n  A \\<le> C\n\ngoal (1 subgoal):\n 1. set_integrable lborel (einterval A C) f =\n    interval_lebesgue_integrable lborel A C f", "by (simp add: interval_lebesgue_integrable_def)"], ["proof (state)\nthis:\n  set_integrable lborel (einterval A C) f =\n  interval_lebesgue_integrable lborel A C f\n\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel A C f", "finally"], ["proof (chain)\npicking this:\n  interval_lebesgue_integrable lborel A C f", "show ?thesis"], ["proof (prove)\nusing this:\n  interval_lebesgue_integrable lborel A C f\n\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel A C f", "."], ["proof (state)\nthis:\n  interval_lebesgue_integrable lborel A C f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma interval_lebesgue_integrable_bigo_right:\n  fixes A B :: real\n  fixes f :: \"real \\<Rightarrow> real\"\n  assumes \"f \\<in> O[at_left B](g)\"\n  assumes cont: \"continuous_on {A..<B} f\"\n  assumes meas: \"set_borel_measurable borel {A<..<B} f\"\n  assumes \"interval_lebesgue_integrable lborel A B g\"\n  assumes \"A < B\"\n  shows   \"interval_lebesgue_integrable lborel A B f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel (ereal A) (ereal B) f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel (ereal A) (ereal B) f", "from assms(1)"], ["proof (chain)\npicking this:\n  f \\<in> O[at_left B](g)", "obtain c where c: \"c > 0\" \"eventually (\\<lambda>x. norm (f x) \\<le> c * norm (g x)) (at_left B)\""], ["proof (prove)\nusing this:\n  f \\<in> O[at_left B](g)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>0 < c;\n         \\<forall>\\<^sub>F x in at_left B.\n            norm (f x) \\<le> c * norm (g x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim landau_o.bigE)"], ["proof (state)\nthis:\n  0 < c\n  \\<forall>\\<^sub>F x in at_left B. norm (f x) \\<le> c * norm (g x)\n\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel (ereal A) (ereal B) f", "then"], ["proof (chain)\npicking this:\n  0 < c\n  \\<forall>\\<^sub>F x in at_left B. norm (f x) \\<le> c * norm (g x)", "obtain B' where B': \"B' < B\" \"\\<And>x. x \\<in> {B'<..<B} \\<Longrightarrow> norm (f x) \\<le> c * norm (g x)\""], ["proof (prove)\nusing this:\n  0 < c\n  \\<forall>\\<^sub>F x in at_left B. norm (f x) \\<le> c * norm (g x)\n\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        \\<lbrakk>B' < B;\n         \\<And>x.\n            x \\<in> {B'<..<B} \\<Longrightarrow>\n            norm (f x) \\<le> c * norm (g x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>A < B\\<close>"], ["proof (prove)\nusing this:\n  0 < c\n  \\<forall>\\<^sub>F x in at_left B. norm (f x) \\<le> c * norm (g x)\n  A < B\n\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        \\<lbrakk>B' < B;\n         \\<And>x.\n            x \\<in> {B'<..<B} \\<Longrightarrow>\n            norm (f x) \\<le> c * norm (g x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: Topological_Spaces.eventually_at_left[of A])"], ["proof (state)\nthis:\n  B' < B\n  ?x \\<in> {B'<..<B} \\<Longrightarrow> norm (f ?x) \\<le> c * norm (g ?x)\n\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel (ereal A) (ereal B) f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel (ereal A) (ereal B) f", "proof (rule interval_lebesgue_integrable_combine)"], ["proof (state)\ngoal (5 subgoals):\n 1. interval_lebesgue_integrable lborel (ereal A) ?B f\n 2. interval_lebesgue_integrable lborel ?B (ereal B) f\n 3. set_borel_measurable borel (einterval (ereal A) (ereal B)) f\n 4. ereal A \\<le> ?B\n 5. ?B \\<le> ereal B", "show \"interval_lebesgue_integrable lborel A (max A B') f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel (ereal A) (ereal (max A B')) f", "using B' assms"], ["proof (prove)\nusing this:\n  B' < B\n  ?x \\<in> {B'<..<B} \\<Longrightarrow> norm (f ?x) \\<le> c * norm (g ?x)\n  f \\<in> O[at_left B](g)\n  continuous_on {A..<B} f\n  set_borel_measurable borel {A<..<B} f\n  interval_lebesgue_integrable lborel (ereal A) (ereal B) g\n  A < B\n\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel (ereal A) (ereal (max A B')) f", "by (intro interval_integrable_continuous_on continuous_on_subset[OF cont]) auto"], ["proof (state)\nthis:\n  interval_lebesgue_integrable lborel (ereal A) (ereal (max A B')) f\n\ngoal (4 subgoals):\n 1. interval_lebesgue_integrable lborel (ereal (max A B')) (ereal B) f\n 2. set_borel_measurable borel (einterval (ereal A) (ereal B)) f\n 3. ereal A \\<le> ereal (max A B')\n 4. ereal (max A B') \\<le> ereal B", "show \"set_borel_measurable borel (einterval (ereal A) (ereal B)) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_borel_measurable borel (einterval (ereal A) (ereal B)) f", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> O[at_left B](g)\n  continuous_on {A..<B} f\n  set_borel_measurable borel {A<..<B} f\n  interval_lebesgue_integrable lborel (ereal A) (ereal B) g\n  A < B\n\ngoal (1 subgoal):\n 1. set_borel_measurable borel (einterval (ereal A) (ereal B)) f", "by simp"], ["proof (state)\nthis:\n  set_borel_measurable borel (einterval (ereal A) (ereal B)) f\n\ngoal (3 subgoals):\n 1. interval_lebesgue_integrable lborel (ereal (max A B')) (ereal B) f\n 2. ereal A \\<le> ereal (max A B')\n 3. ereal (max A B') \\<le> ereal B", "have meas': \"set_borel_measurable borel {max A B'<..<B} f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_borel_measurable borel {max A B'<..<B} f", "by (rule set_borel_measurable_subset[OF meas]) auto"], ["proof (state)\nthis:\n  set_borel_measurable borel {max A B'<..<B} f\n\ngoal (3 subgoals):\n 1. interval_lebesgue_integrable lborel (ereal (max A B')) (ereal B) f\n 2. ereal A \\<le> ereal (max A B')\n 3. ereal (max A B') \\<le> ereal B", "have \"set_integrable lborel {max A B'<..<B} f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel {max A B'<..<B} f", "proof (rule set_integrable_bound[OF _ _ AE_I2[OF impI]])"], ["proof (state)\ngoal (3 subgoals):\n 1. set_integrable lborel {max A B'<..<B} ?f\n 2. set_borel_measurable lborel {max A B'<..<B} f\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {max A B'<..<B}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (?f x)", "have \"set_integrable lborel {A<..<B} (\\<lambda>x. c * g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel {A<..<B} (\\<lambda>x. c * g x)", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> O[at_left B](g)\n  continuous_on {A..<B} f\n  set_borel_measurable borel {A<..<B} f\n  interval_lebesgue_integrable lborel (ereal A) (ereal B) g\n  A < B\n\ngoal (1 subgoal):\n 1. set_integrable lborel {A<..<B} (\\<lambda>x. c * g x)", "by (simp add: interval_lebesgue_integrable_def)"], ["proof (state)\nthis:\n  set_integrable lborel {A<..<B} (\\<lambda>x. c * g x)\n\ngoal (3 subgoals):\n 1. set_integrable lborel {max A B'<..<B} ?f\n 2. set_borel_measurable lborel {max A B'<..<B} f\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {max A B'<..<B}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (?f x)", "thus \"set_integrable lborel {max A B'<..<B} (\\<lambda>x. c * g x)\""], ["proof (prove)\nusing this:\n  set_integrable lborel {A<..<B} (\\<lambda>x. c * g x)\n\ngoal (1 subgoal):\n 1. set_integrable lborel {max A B'<..<B} (\\<lambda>x. c * g x)", "by (rule set_integrable_subset) auto"], ["proof (state)\nthis:\n  set_integrable lborel {max A B'<..<B} (\\<lambda>x. c * g x)\n\ngoal (2 subgoals):\n 1. set_borel_measurable lborel {max A B'<..<B} f\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {max A B'<..<B}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (c * g x)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. set_borel_measurable lborel {max A B'<..<B} f\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {max A B'<..<B}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (c * g x)", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. set_borel_measurable lborel {max A B'<..<B} f\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {max A B'<..<B}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (c * g x)", "assume \"x \\<in> {max A B'<..<B}\""], ["proof (state)\nthis:\n  x \\<in> {max A B'<..<B}\n\ngoal (2 subgoals):\n 1. set_borel_measurable lborel {max A B'<..<B} f\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {max A B'<..<B}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (c * g x)", "hence \"norm (f x) \\<le> c * norm (g x)\""], ["proof (prove)\nusing this:\n  x \\<in> {max A B'<..<B}\n\ngoal (1 subgoal):\n 1. norm (f x) \\<le> c * norm (g x)", "by (intro B') auto"], ["proof (state)\nthis:\n  norm (f x) \\<le> c * norm (g x)\n\ngoal (2 subgoals):\n 1. set_borel_measurable lborel {max A B'<..<B} f\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {max A B'<..<B}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (c * g x)", "also"], ["proof (state)\nthis:\n  norm (f x) \\<le> c * norm (g x)\n\ngoal (2 subgoals):\n 1. set_borel_measurable lborel {max A B'<..<B} f\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {max A B'<..<B}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (c * g x)", "have \"\\<dots> \\<le> norm (c * g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c * norm (g x) \\<le> norm (c * g x)", "unfolding norm_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. c * norm (g x) \\<le> norm c * norm (g x)", "by (intro mult_right_mono) auto"], ["proof (state)\nthis:\n  c * norm (g x) \\<le> norm (c * g x)\n\ngoal (2 subgoals):\n 1. set_borel_measurable lborel {max A B'<..<B} f\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {max A B'<..<B}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (c * g x)", "finally"], ["proof (chain)\npicking this:\n  norm (f x) \\<le> norm (c * g x)", "show  \"norm (f x) \\<le> norm (c * g x)\""], ["proof (prove)\nusing this:\n  norm (f x) \\<le> norm (c * g x)\n\ngoal (1 subgoal):\n 1. norm (f x) \\<le> norm (c * g x)", "."], ["proof (state)\nthis:\n  norm (f x) \\<le> norm (c * g x)\n\ngoal (1 subgoal):\n 1. set_borel_measurable lborel {max A B'<..<B} f", "qed (use meas' in \\<open>simp_all add: set_borel_measurable_def\\<close>)"], ["proof (state)\nthis:\n  set_integrable lborel {max A B'<..<B} f\n\ngoal (3 subgoals):\n 1. interval_lebesgue_integrable lborel (ereal (max A B')) (ereal B) f\n 2. ereal A \\<le> ereal (max A B')\n 3. ereal (max A B') \\<le> ereal B", "thus \"interval_lebesgue_integrable lborel (ereal (max A B')) (ereal B) f\""], ["proof (prove)\nusing this:\n  set_integrable lborel {max A B'<..<B} f\n\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel (ereal (max A B')) (ereal B) f", "unfolding interval_lebesgue_integrable_def einterval_eq_Icc"], ["proof (prove)\nusing this:\n  set_integrable lborel {max A B'<..<B} f\n\ngoal (1 subgoal):\n 1. if ereal (max A B') \\<le> ereal B\n    then set_integrable lborel {max A B'<..<B} f\n    else set_integrable lborel {B<..<max A B'} f", "using \\<open>B' < B\\<close> assms"], ["proof (prove)\nusing this:\n  set_integrable lborel {max A B'<..<B} f\n  B' < B\n  f \\<in> O[at_left B](g)\n  continuous_on {A..<B} f\n  set_borel_measurable borel {A<..<B} f\n  interval_lebesgue_integrable lborel (ereal A) (ereal B) g\n  A < B\n\ngoal (1 subgoal):\n 1. if ereal (max A B') \\<le> ereal B\n    then set_integrable lborel {max A B'<..<B} f\n    else set_integrable lborel {B<..<max A B'} f", "by simp"], ["proof (state)\nthis:\n  interval_lebesgue_integrable lborel (ereal (max A B')) (ereal B) f\n\ngoal (2 subgoals):\n 1. ereal A \\<le> ereal (max A B')\n 2. ereal (max A B') \\<le> ereal B", "qed (use B' assms in auto)"], ["proof (state)\nthis:\n  interval_lebesgue_integrable lborel (ereal A) (ereal B) f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma interval_lebesgue_integrable_bigo_left:\n  fixes A B :: real\n  fixes f :: \"real \\<Rightarrow> real\"\n  assumes \"f \\<in> O[at_right A](g)\"\n  assumes cont: \"continuous_on {A<..B} f\"\n  assumes meas: \"set_borel_measurable borel {A<..<B} f\"\n  assumes \"interval_lebesgue_integrable lborel A B g\"\n  assumes \"A < B\"\n  shows   \"interval_lebesgue_integrable lborel A B f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel (ereal A) (ereal B) f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel (ereal A) (ereal B) f", "from assms(1)"], ["proof (chain)\npicking this:\n  f \\<in> O[at_right A](g)", "obtain c where c: \"c > 0\" \"eventually (\\<lambda>x. norm (f x) \\<le> c * norm (g x)) (at_right A)\""], ["proof (prove)\nusing this:\n  f \\<in> O[at_right A](g)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>0 < c;\n         \\<forall>\\<^sub>F x in at_right A.\n            norm (f x) \\<le> c * norm (g x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim landau_o.bigE)"], ["proof (state)\nthis:\n  0 < c\n  \\<forall>\\<^sub>F x in at_right A. norm (f x) \\<le> c * norm (g x)\n\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel (ereal A) (ereal B) f", "then"], ["proof (chain)\npicking this:\n  0 < c\n  \\<forall>\\<^sub>F x in at_right A. norm (f x) \\<le> c * norm (g x)", "obtain A' where A': \"A' > A\" \"\\<And>x. x \\<in> {A<..<A'} \\<Longrightarrow> norm (f x) \\<le> c * norm (g x)\""], ["proof (prove)\nusing this:\n  0 < c\n  \\<forall>\\<^sub>F x in at_right A. norm (f x) \\<le> c * norm (g x)\n\ngoal (1 subgoal):\n 1. (\\<And>A'.\n        \\<lbrakk>A < A';\n         \\<And>x.\n            x \\<in> {A<..<A'} \\<Longrightarrow>\n            norm (f x) \\<le> c * norm (g x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>A < B\\<close>"], ["proof (prove)\nusing this:\n  0 < c\n  \\<forall>\\<^sub>F x in at_right A. norm (f x) \\<le> c * norm (g x)\n  A < B\n\ngoal (1 subgoal):\n 1. (\\<And>A'.\n        \\<lbrakk>A < A';\n         \\<And>x.\n            x \\<in> {A<..<A'} \\<Longrightarrow>\n            norm (f x) \\<le> c * norm (g x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: Topological_Spaces.eventually_at_right[of A])"], ["proof (state)\nthis:\n  A < A'\n  ?x \\<in> {A<..<A'} \\<Longrightarrow> norm (f ?x) \\<le> c * norm (g ?x)\n\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel (ereal A) (ereal B) f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel (ereal A) (ereal B) f", "proof (rule interval_lebesgue_integrable_combine)"], ["proof (state)\ngoal (5 subgoals):\n 1. interval_lebesgue_integrable lborel (ereal A) ?B f\n 2. interval_lebesgue_integrable lborel ?B (ereal B) f\n 3. set_borel_measurable borel (einterval (ereal A) (ereal B)) f\n 4. ereal A \\<le> ?B\n 5. ?B \\<le> ereal B", "show \"interval_lebesgue_integrable lborel (min B A') B f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel (ereal (min B A')) (ereal B) f", "using A' assms"], ["proof (prove)\nusing this:\n  A < A'\n  ?x \\<in> {A<..<A'} \\<Longrightarrow> norm (f ?x) \\<le> c * norm (g ?x)\n  f \\<in> O[at_right A](g)\n  continuous_on {A<..B} f\n  set_borel_measurable borel {A<..<B} f\n  interval_lebesgue_integrable lborel (ereal A) (ereal B) g\n  A < B\n\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel (ereal (min B A')) (ereal B) f", "by (intro interval_integrable_continuous_on continuous_on_subset[OF cont]) auto"], ["proof (state)\nthis:\n  interval_lebesgue_integrable lborel (ereal (min B A')) (ereal B) f\n\ngoal (4 subgoals):\n 1. interval_lebesgue_integrable lborel (ereal A) (ereal (min B A')) f\n 2. set_borel_measurable borel (einterval (ereal A) (ereal B)) f\n 3. ereal A \\<le> ereal (min B A')\n 4. ereal (min B A') \\<le> ereal B", "show \"set_borel_measurable borel (einterval (ereal A) (ereal B)) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_borel_measurable borel (einterval (ereal A) (ereal B)) f", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> O[at_right A](g)\n  continuous_on {A<..B} f\n  set_borel_measurable borel {A<..<B} f\n  interval_lebesgue_integrable lborel (ereal A) (ereal B) g\n  A < B\n\ngoal (1 subgoal):\n 1. set_borel_measurable borel (einterval (ereal A) (ereal B)) f", "by simp"], ["proof (state)\nthis:\n  set_borel_measurable borel (einterval (ereal A) (ereal B)) f\n\ngoal (3 subgoals):\n 1. interval_lebesgue_integrable lborel (ereal A) (ereal (min B A')) f\n 2. ereal A \\<le> ereal (min B A')\n 3. ereal (min B A') \\<le> ereal B", "have meas': \"set_borel_measurable borel {A<..<min B A'} f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_borel_measurable borel {A<..<min B A'} f", "by (rule set_borel_measurable_subset[OF meas]) auto"], ["proof (state)\nthis:\n  set_borel_measurable borel {A<..<min B A'} f\n\ngoal (3 subgoals):\n 1. interval_lebesgue_integrable lborel (ereal A) (ereal (min B A')) f\n 2. ereal A \\<le> ereal (min B A')\n 3. ereal (min B A') \\<le> ereal B", "have \"set_integrable lborel {A<..<min B A'} f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel {A<..<min B A'} f", "proof (rule set_integrable_bound[OF _ _ AE_I2[OF impI]])"], ["proof (state)\ngoal (3 subgoals):\n 1. set_integrable lborel {A<..<min B A'} ?f\n 2. set_borel_measurable lborel {A<..<min B A'} f\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {A<..<min B A'}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (?f x)", "have \"set_integrable lborel {A<..<B} (\\<lambda>x. c * g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel {A<..<B} (\\<lambda>x. c * g x)", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> O[at_right A](g)\n  continuous_on {A<..B} f\n  set_borel_measurable borel {A<..<B} f\n  interval_lebesgue_integrable lborel (ereal A) (ereal B) g\n  A < B\n\ngoal (1 subgoal):\n 1. set_integrable lborel {A<..<B} (\\<lambda>x. c * g x)", "by (simp add: interval_lebesgue_integrable_def)"], ["proof (state)\nthis:\n  set_integrable lborel {A<..<B} (\\<lambda>x. c * g x)\n\ngoal (3 subgoals):\n 1. set_integrable lborel {A<..<min B A'} ?f\n 2. set_borel_measurable lborel {A<..<min B A'} f\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {A<..<min B A'}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (?f x)", "thus \"set_integrable lborel {A<..<min B A'} (\\<lambda>x. c * g x)\""], ["proof (prove)\nusing this:\n  set_integrable lborel {A<..<B} (\\<lambda>x. c * g x)\n\ngoal (1 subgoal):\n 1. set_integrable lborel {A<..<min B A'} (\\<lambda>x. c * g x)", "by (rule set_integrable_subset) auto"], ["proof (state)\nthis:\n  set_integrable lborel {A<..<min B A'} (\\<lambda>x. c * g x)\n\ngoal (2 subgoals):\n 1. set_borel_measurable lborel {A<..<min B A'} f\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {A<..<min B A'}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (c * g x)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. set_borel_measurable lborel {A<..<min B A'} f\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {A<..<min B A'}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (c * g x)", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. set_borel_measurable lborel {A<..<min B A'} f\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {A<..<min B A'}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (c * g x)", "assume \"x \\<in> {A<..<min B A'}\""], ["proof (state)\nthis:\n  x \\<in> {A<..<min B A'}\n\ngoal (2 subgoals):\n 1. set_borel_measurable lborel {A<..<min B A'} f\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {A<..<min B A'}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (c * g x)", "hence \"norm (f x) \\<le> c * norm (g x)\""], ["proof (prove)\nusing this:\n  x \\<in> {A<..<min B A'}\n\ngoal (1 subgoal):\n 1. norm (f x) \\<le> c * norm (g x)", "by (intro A') auto"], ["proof (state)\nthis:\n  norm (f x) \\<le> c * norm (g x)\n\ngoal (2 subgoals):\n 1. set_borel_measurable lborel {A<..<min B A'} f\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {A<..<min B A'}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (c * g x)", "also"], ["proof (state)\nthis:\n  norm (f x) \\<le> c * norm (g x)\n\ngoal (2 subgoals):\n 1. set_borel_measurable lborel {A<..<min B A'} f\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {A<..<min B A'}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (c * g x)", "have \"\\<dots> \\<le> norm (c * g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c * norm (g x) \\<le> norm (c * g x)", "unfolding norm_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. c * norm (g x) \\<le> norm c * norm (g x)", "by (intro mult_right_mono) auto"], ["proof (state)\nthis:\n  c * norm (g x) \\<le> norm (c * g x)\n\ngoal (2 subgoals):\n 1. set_borel_measurable lborel {A<..<min B A'} f\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> space lborel; x \\<in> {A<..<min B A'}\\<rbrakk>\n       \\<Longrightarrow> norm (f x) \\<le> norm (c * g x)", "finally"], ["proof (chain)\npicking this:\n  norm (f x) \\<le> norm (c * g x)", "show  \"norm (f x) \\<le> norm (c * g x)\""], ["proof (prove)\nusing this:\n  norm (f x) \\<le> norm (c * g x)\n\ngoal (1 subgoal):\n 1. norm (f x) \\<le> norm (c * g x)", "."], ["proof (state)\nthis:\n  norm (f x) \\<le> norm (c * g x)\n\ngoal (1 subgoal):\n 1. set_borel_measurable lborel {A<..<min B A'} f", "qed (use meas' in \\<open>simp_all add: set_borel_measurable_def\\<close>)"], ["proof (state)\nthis:\n  set_integrable lborel {A<..<min B A'} f\n\ngoal (3 subgoals):\n 1. interval_lebesgue_integrable lborel (ereal A) (ereal (min B A')) f\n 2. ereal A \\<le> ereal (min B A')\n 3. ereal (min B A') \\<le> ereal B", "thus \"interval_lebesgue_integrable lborel (ereal A) (ereal (min B A')) f\""], ["proof (prove)\nusing this:\n  set_integrable lborel {A<..<min B A'} f\n\ngoal (1 subgoal):\n 1. interval_lebesgue_integrable lborel (ereal A) (ereal (min B A')) f", "unfolding interval_lebesgue_integrable_def einterval_eq_Icc"], ["proof (prove)\nusing this:\n  set_integrable lborel {A<..<min B A'} f\n\ngoal (1 subgoal):\n 1. if ereal A \\<le> ereal (min B A')\n    then set_integrable lborel {A<..<min B A'} f\n    else set_integrable lborel {min B A'<..<A} f", "using \\<open>A' > A\\<close> assms"], ["proof (prove)\nusing this:\n  set_integrable lborel {A<..<min B A'} f\n  A < A'\n  f \\<in> O[at_right A](g)\n  continuous_on {A<..B} f\n  set_borel_measurable borel {A<..<B} f\n  interval_lebesgue_integrable lborel (ereal A) (ereal B) g\n  A < B\n\ngoal (1 subgoal):\n 1. if ereal A \\<le> ereal (min B A')\n    then set_integrable lborel {A<..<min B A'} f\n    else set_integrable lborel {min B A'<..<A} f", "by simp"], ["proof (state)\nthis:\n  interval_lebesgue_integrable lborel (ereal A) (ereal (min B A')) f\n\ngoal (2 subgoals):\n 1. ereal A \\<le> ereal (min B A')\n 2. ereal (min B A') \\<le> ereal B", "qed (use A' assms in auto)"], ["proof (state)\nthis:\n  interval_lebesgue_integrable lborel (ereal A) (ereal B) f\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Other material\\<close>"], ["", "(* TODO: Library *)"], ["", "lemma summable_comparison_test_bigo:\n  fixes f :: \"nat \\<Rightarrow> real\"\n  assumes \"summable (\\<lambda>n. norm (g n))\" \"f \\<in> O(g)\"\n  shows   \"summable f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summable f", "from \\<open>f \\<in> O(g)\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> O(g)", "obtain C where C: \"eventually (\\<lambda>x. norm (f x) \\<le> C * norm (g x)) at_top\""], ["proof (prove)\nusing this:\n  f \\<in> O(g)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<forall>\\<^sub>F x in sequentially.\n           norm (f x) \\<le> C * norm (g x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: landau_o.bigE)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in sequentially. norm (f x) \\<le> C * norm (g x)\n\ngoal (1 subgoal):\n 1. summable f", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially. norm (f x) \\<le> C * norm (g x)\n\ngoal (1 subgoal):\n 1. summable f", "by (rule summable_comparison_test_ev) (insert assms, auto intro: summable_mult)"], ["proof (state)\nthis:\n  summable f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fps_expansion_cong:\n  assumes \"eventually (\\<lambda>x. g x = h x) (nhds x)\"\n  shows   \"fps_expansion g x = fps_expansion h x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fps_expansion g x = fps_expansion h x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fps_expansion g x = fps_expansion h x", "have \"(deriv ^^ n) g x = (deriv ^^ n) h x\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ n) g x = (deriv ^^ n) h x", "by (intro higher_deriv_cong_ev assms refl)"], ["proof (state)\nthis:\n  (deriv ^^ ?n) g x = (deriv ^^ ?n) h x\n\ngoal (1 subgoal):\n 1. fps_expansion g x = fps_expansion h x", "thus ?thesis"], ["proof (prove)\nusing this:\n  (deriv ^^ ?n) g x = (deriv ^^ ?n) h x\n\ngoal (1 subgoal):\n 1. fps_expansion g x = fps_expansion h x", "by (simp add: fps_expansion_def)"], ["proof (state)\nthis:\n  fps_expansion g x = fps_expansion h x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fps_expansion_eq_zero_iff:\n  assumes \"g holomorphic_on ball z r\" \"r > 0\"\n  shows   \"fps_expansion g z = 0 \\<longleftrightarrow> (\\<forall>z\\<in>ball z r. g z = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fps_expansion g z = 0) = (\\<forall>z\\<in>ball z r. g z = 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. fps_expansion g z = 0 \\<Longrightarrow> \\<forall>z\\<in>ball z r. g z = 0\n 2. \\<forall>z\\<in>ball z r. g z = 0 \\<Longrightarrow> fps_expansion g z = 0", "assume *: \"\\<forall>z\\<in>ball z r. g z = 0\""], ["proof (state)\nthis:\n  \\<forall>z\\<in>ball z r. g z = 0\n\ngoal (2 subgoals):\n 1. fps_expansion g z = 0 \\<Longrightarrow> \\<forall>z\\<in>ball z r. g z = 0\n 2. \\<forall>z\\<in>ball z r. g z = 0 \\<Longrightarrow> fps_expansion g z = 0", "have \"eventually (\\<lambda>w. w \\<in> ball z r) (nhds z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F w in nhds z. w \\<in> ball z r", "using assms"], ["proof (prove)\nusing this:\n  g holomorphic_on ball z r\n  0 < r\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F w in nhds z. w \\<in> ball z r", "by (intro eventually_nhds_in_open) auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F w in nhds z. w \\<in> ball z r\n\ngoal (2 subgoals):\n 1. fps_expansion g z = 0 \\<Longrightarrow> \\<forall>z\\<in>ball z r. g z = 0\n 2. \\<forall>z\\<in>ball z r. g z = 0 \\<Longrightarrow> fps_expansion g z = 0", "hence \"eventually (\\<lambda>z. g z = 0) (nhds z)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F w in nhds z. w \\<in> ball z r\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in nhds z. g z = 0", "by eventually_elim (use * in auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in nhds z. g z = 0\n\ngoal (2 subgoals):\n 1. fps_expansion g z = 0 \\<Longrightarrow> \\<forall>z\\<in>ball z r. g z = 0\n 2. \\<forall>z\\<in>ball z r. g z = 0 \\<Longrightarrow> fps_expansion g z = 0", "hence \"fps_expansion g z = fps_expansion (\\<lambda>_. 0) z\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F z in nhds z. g z = 0\n\ngoal (1 subgoal):\n 1. fps_expansion g z = fps_expansion (\\<lambda>_. 0) z", "by (intro fps_expansion_cong)"], ["proof (state)\nthis:\n  fps_expansion g z = fps_expansion (\\<lambda>_. 0) z\n\ngoal (2 subgoals):\n 1. fps_expansion g z = 0 \\<Longrightarrow> \\<forall>z\\<in>ball z r. g z = 0\n 2. \\<forall>z\\<in>ball z r. g z = 0 \\<Longrightarrow> fps_expansion g z = 0", "thus \"fps_expansion g z = 0\""], ["proof (prove)\nusing this:\n  fps_expansion g z = fps_expansion (\\<lambda>_. 0) z\n\ngoal (1 subgoal):\n 1. fps_expansion g z = 0", "by (simp add: fps_expansion_def fps_zero_def)"], ["proof (state)\nthis:\n  fps_expansion g z = 0\n\ngoal (1 subgoal):\n 1. fps_expansion g z = 0 \\<Longrightarrow> \\<forall>z\\<in>ball z r. g z = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. fps_expansion g z = 0 \\<Longrightarrow> \\<forall>z\\<in>ball z r. g z = 0", "assume *: \"fps_expansion g z = 0\""], ["proof (state)\nthis:\n  fps_expansion g z = 0\n\ngoal (1 subgoal):\n 1. fps_expansion g z = 0 \\<Longrightarrow> \\<forall>z\\<in>ball z r. g z = 0", "have \"g w = 0\" if \"w \\<in> ball z r\" for w"], ["proof (prove)\ngoal (1 subgoal):\n 1. g w = 0", "by (rule holomorphic_fun_eq_0_on_ball[OF assms(1) that])\n       (use * in \\<open>auto simp: fps_expansion_def fps_eq_iff\\<close>)"], ["proof (state)\nthis:\n  ?w \\<in> ball z r \\<Longrightarrow> g ?w = 0\n\ngoal (1 subgoal):\n 1. fps_expansion g z = 0 \\<Longrightarrow> \\<forall>z\\<in>ball z r. g z = 0", "thus \"\\<forall>w\\<in>ball z r. g w = 0\""], ["proof (prove)\nusing this:\n  ?w \\<in> ball z r \\<Longrightarrow> g ?w = 0\n\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>ball z r. g w = 0", "by blast"], ["proof (state)\nthis:\n  \\<forall>w\\<in>ball z r. g w = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fds_nth_higher_deriv:\n  \"fds_nth ((fds_deriv ^^ k) F) = (\\<lambda>n. (-1) ^ k * of_real (ln n) ^ k * fds_nth F n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_nth ((fds_deriv ^^ k) F) =\n    (\\<lambda>n. (- (1::'a)) ^ k * of_real (ln (real n)) ^ k * fds_nth F n)", "by (induction k) (auto simp: fds_nth_deriv fun_eq_iff simp flip: scaleR_conv_of_real)"], ["", "lemma binomial_n_n_minus_one [simp]: \"n > 0 \\<Longrightarrow> n choose (n - Suc 0) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> n choose (n - Suc 0) = n", "by (cases n) auto"], ["", "lemma has_field_derivative_complex_powr_right:\n  \"w \\<noteq> 0 \\<Longrightarrow> ((\\<lambda>z. w powr z) has_field_derivative Ln w * w powr z) (at z within A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<noteq> 0 \\<Longrightarrow>\n    ((powr) w has_field_derivative Ln w * w powr z) (at z within A)", "by (rule DERIV_subset, rule has_field_derivative_powr_right) auto"], ["", "lemmas has_field_derivative_complex_powr_right' =\n  has_field_derivative_complex_powr_right[THEN DERIV_chain2]"], ["", "end"]]}