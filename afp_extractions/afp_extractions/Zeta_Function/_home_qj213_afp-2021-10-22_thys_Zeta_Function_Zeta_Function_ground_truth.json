{"file_name": "/home/qj213/afp-2021-10-22/thys/Zeta_Function/Zeta_Function.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Zeta_Function", "problem_names": ["lemma holomorphic_on_extend:\n  assumes \"f holomorphic_on S - {\\<xi>}\" \"\\<xi> \\<in> interior S\" \"f \\<in> O[at \\<xi>](\\<lambda>_. 1)\"\n  shows   \"(\\<exists>g. g holomorphic_on S \\<and> (\\<forall>z\\<in>S - {\\<xi>}. g z = f z))\"", "lemma removable_singularities:\n  assumes \"finite X\" \"X \\<subseteq> interior S\" \"f holomorphic_on (S - X)\"\n  assumes \"\\<And>z. z \\<in> X \\<Longrightarrow> f \\<in> O[at z](\\<lambda>_. 1)\"\n  shows   \"\\<exists>g. g holomorphic_on S \\<and> (\\<forall>z\\<in>S-X. g z = f z)\"", "lemma continuous_imp_bigo_1:\n  assumes \"continuous (at x within A) f\"\n  shows   \"f \\<in> O[at x within A](\\<lambda>_. 1)\"", "lemma taylor_bigo_linear:\n  assumes \"f field_differentiable at x0 within A\"\n  shows   \"(\\<lambda>x. f x - f x0) \\<in> O[at x0 within A](\\<lambda>x. x - x0)\"", "lemma powr_add_minus_powr_asymptotics:\n  fixes a z :: complex \n  shows \"((\\<lambda>z. ((1 + z) powr a - 1) / z) \\<longlongrightarrow> a) (at 0)\"", "lemma complex_powr_add_minus_powr_asymptotics:\n  fixes s :: complex\n  assumes a: \"a > 0\" and s: \"Re s < 1\"\n  shows \"filterlim (\\<lambda>x. of_real (x + a) powr s - of_real x powr s) (nhds 0) at_top\"", "lemma summable_zeta:\n  assumes \"Re s > 1\"\n  shows   \"summable (\\<lambda>n. of_nat (Suc n) powr -s)\"", "lemma summable_zeta_real:\n  assumes \"x > 1\"\n  shows   \"summable (\\<lambda>n. real (Suc n) powr -x)\"", "lemma summable_hurwitz_zeta:\n  assumes \"Re s > 1\" \"a > 0\"\n  shows   \"summable (\\<lambda>n. (of_nat n + of_real a) powr -s)\"", "lemma summable_hurwitz_zeta_real:\n  assumes \"x > 1\" \"a > 0\"\n  shows   \"summable (\\<lambda>n. (real n + a) powr -x)\"", "lemma hurwitz_zeta_1: \"hurwitz_zeta c 1 = 0\"", "lemma zeta_1: \"zeta 1 = 0\"", "lemma zeta_minus_pole_eq: \"s \\<noteq> 1 \\<Longrightarrow> zeta s - 1 / (s - 1) = pre_zeta 1 s\"", "lemma holomorphic_pre_zeta_aux':\n  assumes \"a > 0\" \"bounded U\" \"open U\" \"U \\<subseteq> {s. Re s > \\<sigma>}\" and \\<sigma>: \"\\<sigma> > - 2 * real n\"\n  shows   \"pre_zeta_aux n a holomorphic_on U\"", "lemma analytic_pre_zeta_aux:\n  assumes \"a > 0\"\n  shows   \"pre_zeta_aux n a analytic_on {s. Re s > - 2 * real n}\"", "lemma pre_zeta_aux_conv_zeta:\n  \"pre_zeta_aux N a s = \\<zeta> s + a powr (1 - s) / (1 - s)\"", "lemma pre_zeta_aux_eq:\n  assumes \"m \\<le> n\" \"a > 0\" \"Re s > -2 * real m\"\n  shows   \"pre_zeta_aux m a s = pre_zeta_aux n a s\"", "lemma pre_zeta_aux_eq':\n  assumes \"a > 0\" \"Re s > -2 * real m\" \"Re s > -2 * real n\"\n  shows   \"pre_zeta_aux m a s = pre_zeta_aux n a s\"", "lemma pre_zeta_aux_eq_pre_zeta:\n  assumes \"Re s > -2 * real n\" and \"a > 0\"\n  shows   \"pre_zeta_aux n a s = pre_zeta a s\"", "lemma analytic_pre_zeta: \n  assumes \"a > 0\"\n  shows   \"pre_zeta a analytic_on A\"", "lemma holomorphic_pre_zeta [holomorphic_intros]:\n  \"f holomorphic_on A \\<Longrightarrow> a > 0 \\<Longrightarrow> (\\<lambda>z. pre_zeta a (f z)) holomorphic_on A\"", "theorem holomorphic_hurwitz_zeta: \n  assumes \"a > 0\" \"1 \\<notin> A\"\n  shows   \"hurwitz_zeta a holomorphic_on A\"", "theorem holomorphic_zeta: \"1 \\<notin> A\\<Longrightarrow> zeta holomorphic_on A\"", "theorem is_pole_hurwitz_zeta:\n  assumes \"a > 0\"\n  shows   \"is_pole (hurwitz_zeta a) 1\"", "theorem zorder_hurwitz_zeta: \n  assumes \"a > 0\"\n  shows   \"zorder (hurwitz_zeta a) 1 = -1\"", "theorem residue_hurwitz_zeta: \n  assumes \"a > 0\"\n  shows   \"residue (hurwitz_zeta a) 1 = 1\"", "lemma zeta_bigo_at_1: \"zeta \\<in> O[at 1 within A](\\<lambda>x. 1 / (x - 1))\"", "theorem\n  assumes \"a > 0\" \"Re s > 1\"\n  shows hurwitz_zeta_conv_suminf: \"hurwitz_zeta a s = (\\<Sum>n. (of_nat n + of_real a) powr -s)\"\n  and   sums_hurwitz_zeta: \"(\\<lambda>n. (of_nat n + of_real a) powr -s) sums hurwitz_zeta a s\"", "lemma pre_zeta_aux_cnj [simp]: \n  assumes \"a > 0\"\n  shows   \"pre_zeta_aux n a (cnj z) = cnj (pre_zeta_aux n a z)\"", "lemma pre_zeta_cnj [simp]: \"a > 0 \\<Longrightarrow> pre_zeta a (cnj z) = cnj (pre_zeta a z)\"", "lemma hurwitz_zeta_cnj [simp]: \"a > 0 \\<Longrightarrow> hurwitz_zeta a (cnj z) = cnj (hurwitz_zeta a z)\"", "lemma zeta_cnj [simp]: \"zeta (cnj z) = cnj (zeta z)\"", "lemma eval_fds_zeta: \"Re s > 1 \\<Longrightarrow> eval_fds fds_zeta s = zeta s\"", "theorem euler_product_zeta:\n  assumes \"Re s > 1\"\n  shows   \"(\\<lambda>n. \\<Prod>p\\<le>n. if prime p then inverse (1 - 1 / of_nat p powr s) else 1) \\<longlonglongrightarrow> zeta s\"", "theorem zeta_Re_gt_1_nonzero: \"Re s > 1 \\<Longrightarrow> zeta s \\<noteq> 0\"", "theorem tendsto_zeta_Re_going_to_at_top: \"(zeta \\<longlongrightarrow> 1) (Re going_to at_top)\"", "lemma conv_abscissa_zeta [simp]: \"conv_abscissa (fds_zeta :: complex fds) = 1\"\n  and abs_conv_abscissa_zeta [simp]: \"abs_conv_abscissa (fds_zeta :: complex fds) = 1\"", "theorem deriv_zeta_sums:\n  assumes s: \"Re s > 1\"\n  shows \"(\\<lambda>n. -of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums deriv zeta s\"", "theorem inverse_zeta_sums:\n  assumes s: \"Re s > 1\"\n  shows   \"(\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums inverse (zeta s)\"", "lemma hurwitz_zeta_critical_strip:\n  fixes s :: complex and a :: real\n  defines \"S \\<equiv> (\\<lambda>n. \\<Sum>i<n. (of_nat i + a) powr - s)\"\n  defines \"I' \\<equiv> (\\<lambda>n. of_nat n powr (1 - s) / (1 - s))\"\n  assumes \"Re s > 0\" \"s \\<noteq> 1\" and \"a > 0\"\n  shows   \"(\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s\"", "lemma zeta_critical_strip:\n  fixes s :: complex and a :: real\n  defines \"S \\<equiv> (\\<lambda>n. \\<Sum>i=1..n. (of_nat i) powr - s)\"\n  defines \"I \\<equiv> (\\<lambda>n. of_nat n powr (1 - s) / (1 - s))\"\n  assumes s: \"Re s > 0\" \"s \\<noteq> 1\"\n  shows   \"(\\<lambda>n. S n - I n) \\<longlonglongrightarrow> zeta s\"", "theorem zeta_Re_ge_1_nonzero:\n  fixes s assumes \"Re s \\<ge> 1\" \"s \\<noteq> 1\"\n  shows \"zeta s \\<noteq> 0\"", "theorem hurwitz_zeta_neg_of_nat: \n  assumes \"a > 0\"\n  shows   \"hurwitz_zeta a (-of_nat n) = -bernpoly (Suc n) a / of_nat (Suc n)\"", "lemma hurwitz_zeta_0 [simp]: \"a > 0 \\<Longrightarrow> hurwitz_zeta a 0 = 1 / 2 - a\"", "lemma zeta_0 [simp]: \"zeta 0 = -1 / 2\"", "theorem zeta_neg_of_nat: \n  \"zeta (-of_nat n) = -of_real (bernoulli' (Suc n)) / of_nat (Suc n)\"", "theorem zeta_even_nat: \n  \"zeta (2 * of_nat n) = \n     of_real ((-1) ^ Suc n * bernoulli (2 * n) * (2 * pi) ^ (2 * n) / (2 * fact (2 * n)))\"", "lemma\n  assumes z: \"Re z > 0\" and a: \"a > 0\"\n  shows   Gamma_hurwitz_zeta_aux_integral: \n            \"Gamma z / (of_nat n + of_real a) powr z = \n               (\\<integral>s\\<in>{0<..}. (s powr (z - 1) / exp ((n+a) * s)) \\<partial>lebesgue)\"\n    and   Gamma_hurwitz_zeta_aux_integrable:\n            \"set_integrable lebesgue {0<..} (\\<lambda>s. s powr (z - 1) / exp ((n+a) * s))\"", "lemma\n  assumes x: \"x > 0\" and \"a > 0\"\n  shows   Gamma_hurwitz_zeta_aux_integral_real: \n            \"Gamma x / (real n + a) powr x = \n               set_lebesgue_integral lebesgue {0<..} \n               (\\<lambda>s. s powr (x - 1) / exp ((real n + a) * s))\"\n    and   Gamma_hurwitz_zeta_aux_integrable_real:\n            \"set_integrable lebesgue {0<..} (\\<lambda>s. s powr (x - 1) / exp ((real n + a) * s))\"", "theorem\n  assumes \"Re z > 1\" and \"a > (0::real)\"\n  shows   Gamma_times_hurwitz_zeta_integral: \"Gamma z * hurwitz_zeta a z =\n            (\\<integral>x\\<in>{0<..}. (of_real x powr (z - 1) * of_real (exp (-a*x) / (1 - exp (-x)))) \\<partial>lebesgue)\"\n    and   Gamma_times_hurwitz_zeta_integrable:\n            \"set_integrable lebesgue {0<..} \n               (\\<lambda>x. of_real x powr (z - 1) * of_real (exp (-a*x) / (1 - exp (-x))))\"", "lemma Gamma_times_zeta_has_integral:\n  assumes \"Re z > 1\"\n  shows   \"((\\<lambda>x. x powr (z - 1) / (of_real (exp x) - 1)) has_integral (Gamma z * zeta z)) {0<..}\"\n    (is \"(?f has_integral _) _\")", "lemma Gamma_times_zeta_has_integral_real:\n  fixes z :: real\n  assumes \"z > 1\"\n  shows   \"((\\<lambda>x. x powr (z - 1) / (exp x - 1)) has_integral (Gamma z * Re (zeta z))) {0<..}\"", "lemma Gamma_integral_real':\n  assumes x: \"x > (0 :: real)\"\n  shows   \"((\\<lambda>t. t powr (x - 1) / exp t) has_integral Gamma x) {0<..}\"", "lemma primes_infinite_analytic: \"infinite {p :: nat. prime p}\"", "lemma perzeta_frac [simp]: \"perzeta (frac q) = perzeta q\"", "lemma fds_perzeta_frac [simp]: \"fds_perzeta (frac q) = fds_perzeta q\"", "lemma abs_conv_abscissa_perzeta: \"abs_conv_abscissa (fds_perzeta q) \\<le> 1\"", "lemma conv_abscissa_perzeta: \"conv_abscissa (fds_perzeta q) \\<le> 1\"", "lemma fds_perzeta__left_0 [simp]: \"fds_perzeta 0 = fds_zeta\"", "lemma perzeta_0_left [simp]: \"perzeta 0 s = zeta s\"", "lemma perzeta_int: \"q \\<in> \\<int> \\<Longrightarrow> perzeta q = zeta\"", "lemma fds_perzeta_int: \"q \\<in> \\<int> \\<Longrightarrow> fds_perzeta q = fds_zeta\"", "lemma sums_fds_perzeta:\n  assumes \"Re s > 1\"\n  shows   \"(\\<lambda>m. exp (2 * pi * \\<i> * Suc m * q) / of_nat (Suc m) powr s) sums\n             eval_fds (fds_perzeta q) s\"", "lemma sum_tendsto_fds_perzeta:\n  assumes \"Re s > 1\"\n  shows   \"(\\<lambda>n. \\<Sum>k\\<in>{0<..n}. exp (2 * real k * pi * q * \\<i>) * of_nat k powr - s)\n              \\<longlonglongrightarrow> eval_fds (fds_perzeta q) s\"", "lemma conv_abscissa_perzeta':\n  assumes \"q \\<notin> \\<int>\"\n  shows   \"conv_abscissa (fds_perzeta q) \\<le> 0\"", "lemma fds_perzeta_one_half: \"fds_perzeta (1 / 2) = fds (\\<lambda>n. (-1) ^ n)\"", "lemma perzeta_one_half_1 [simp]: \"perzeta (1 / 2) 1 = -ln 2\"", "lemma set_integrable_bigo:\n  fixes f g :: \"real \\<Rightarrow> 'a :: {banach, real_normed_field, second_countable_topology}\"\n  assumes \"f \\<in> O(\\<lambda>x. g x)\" and \"set_integrable lborel {a..} g\"\n  assumes \"\\<And>b. b \\<ge> a \\<Longrightarrow> set_integrable lborel {a..<b} f\"\n  assumes [measurable]: \"set_borel_measurable borel {a..} f\"\n  shows   \"set_integrable lborel {a..} f\"", "lemma set_integrable_Gamma_hurwitz_aux2_real:\n  fixes s a :: real\n  assumes \"r > 0\" and \"a > 0\"\n  shows \"set_integrable lborel {r..} (\\<lambda>x. x powr s * (exp (-a * x)) / (1 - exp (-x)))\"\n    (is \"set_integrable _ _ ?g\")", "lemma set_integrable_Gamma_hurwitz_aux2:\n  fixes s :: complex and a :: real\n  assumes \"r > 0\" and \"a > 0\"\n  shows   \"set_integrable lborel {r..} (\\<lambda>x. x powr -s * (exp (- a * x)) / (1 - exp (- x)))\"\n             (is \"set_integrable _ _ ?g\")", "lemma closed_neg_Im_slit: \"closed {z. Re z = 0 \\<and> Im z \\<le> 0}\"", "lemma path_hankel_semiannulus [simp, intro]: \"path (hankel_semiannulus r R)\"\n  and valid_path_hankel_semiannulus [simp, intro]: \"valid_path (hankel_semiannulus r R)\"\n  and pathfinish_hankel_semiannulus [simp, intro]:\n        \"pathfinish (hankel_semiannulus r R) = pathstart (hankel_semiannulus r R)\"", "lemma Ln'_i: \"Ln' \\<i> = \\<i> * pi / 2\"", "lemma Ln'_of_real_pos:\n  assumes \"x > 0\"\n  shows   \"Ln' (of_real x) = of_real (ln x)\"", "lemma Ln'_of_real_neg:\n  assumes \"x < 0\"\n  shows   \"Ln' (of_real x) = of_real (ln (-x)) + \\<i> * pi\"", "lemma Ln'_times_of_real:\n  \"Ln' (of_real x * z) = of_real (ln x) + Ln' z\" if \"x > 0\" \"z \\<noteq> 0\" for z x", "lemma Ln'_cis:\n  assumes \"t \\<in> {-pi / 2<..3 / 2 * pi}\"\n  shows   \"Ln' (cis t) = \\<i> * t\"", "lemma contour_integral_part_circlepath_h:\n  assumes r: \"r > 0\"\n  shows   \"contour_integral (part_circlepath 0 r 0 pi) (f s) = integral {0..pi} (h r s)\"", "lemma integral_g_holomorphic:\n  assumes \"b > 0\"\n  shows   \"(\\<lambda>s. integral {b..c} (g s)) holomorphic_on A\"", "lemma integral_h_holomorphic:\n  assumes r: \"r \\<in> {0<..<2}\"\n  shows   \"(\\<lambda>s. integral {b..c} (h r s)) holomorphic_on A\"", "lemma hurwitz_formula_integral_semiannulus:\n  fixes N :: nat and r :: real and s :: complex\n  defines \"R \\<equiv> real (2 * N + 1) * pi\"\n  assumes \"r > 0\" and \"r < 2\"\n  shows \"exp (-\\<i> * pi * s) * integral {r..R} (\\<lambda>x. x powr (-s) * exp (-a * x) / (1 - exp (-x))) +\n         integral {r..R} (\\<lambda>x. x powr (-s) * exp (a * x) / (1 - exp x)) +\n         contour_integral (part_circlepath 0 R 0 pi) (f s) +\n         contour_integral (part_circlepath 0 r pi 0) (f s)\n         = -2 * pi * \\<i> * exp (- s * of_real pi * \\<i> / 2) * (\\<Sum>k\\<in>{0<..N}. Res s k)\" (is ?thesis1)\n    and \"f s contour_integrable_on hankel_semiannulus r N\"", "lemma hurwitz_formula_bound1:\n  defines \"H \\<equiv> \\<lambda>z. exp (complex_of_real a * z) / (1 - exp z)\"\n  assumes \"r > 0\"\n  obtains C where \"C \\<ge> 0\" and \"\\<And>z. z \\<notin> (\\<Union>n::int. ball (2 * n * pi * \\<i>) r) \\<Longrightarrow> norm (H z) \\<le> C\"", "lemma hurwitz_formula_bound2:\n  obtains C where \"C \\<ge> 0\" and \"\\<And>r z. r > 0 \\<Longrightarrow> r < pi \\<Longrightarrow> z \\<in> sphere 0 r \\<Longrightarrow>\n     norm (f s z) \\<le> C * r powr (-Re s - 1)\"", "lemma rGamma_hurwitz_zeta_eq_contour_integral:\n  fixes s :: complex and r :: real\n  assumes \"s \\<noteq> 0\" and r: \"r \\<in> {1..<2}\" and a: \"a > 0\"\n  defines \"err1 \\<equiv> (\\<lambda>s r. contour_integral (part_circlepath 0 r pi 0) (f s))\"\n  defines \"err2 \\<equiv> (\\<lambda>s r. cnj (contour_integral (part_circlepath 0 r pi 0) (f (cnj s))))\"\n  shows   \"2 * \\<i> * pi * rGamma s * hurwitz_zeta a (1 - s) =\n             err2 s r - err1 s r + 2 * \\<i> * sin (pi * s) * (CLBINT x:{r..}. g s x)\"\n  (is \"?f s = ?g s\")", "lemma hurwitz_zeta_formula_aux:\n  fixes s :: complex\n  assumes s: \"Re s > 1\"\n  shows   \"rGamma s * hurwitz_zeta a (1 - s) = (2 * pi) powr -s * \n                  (\\<i> powr (-s) * F a s + \\<i> powr s * F (-a) s)\"", "lemma perzeta_conv_hurwitz_zeta_aux:\n  fixes a :: real and s :: complex\n  assumes a: \"a \\<in> {0<..<1}\" and s: \"Re s > 0\"\n  shows   \"rGamma (1 - s) * eval_fds (fds_perzeta a) s = (2 * pi) powr (s - 1) * \\<i> *\n             (\\<i> powr -s * hurwitz_zeta a (1 - s) -\n              \\<i> powr s * hurwitz_zeta (1 - a) (1 - s))\" \n  (is \"?lhs s = ?rhs s\")", "lemma\n  assumes \"q' \\<notin> \\<int>\"\n  shows   holomorphic_perzeta': \"perzeta q' holomorphic_on A\"\n    and   perzeta_altdef2:   \"Re s > 0 \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s\"", "lemma perzeta_altdef1: \"Re s > 1 \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s\"", "lemma holomorphic_perzeta: \"q \\<notin> \\<int> \\<or> 1 \\<notin> A \\<Longrightarrow> perzeta q holomorphic_on A\"", "lemma holomorphic_perzeta'' [holomorphic_intros]:\n  assumes \"f holomorphic_on A\" and \"q \\<notin> \\<int> \\<or> (\\<forall>x\\<in>A. f x \\<noteq> 1)\"\n  shows   \"(\\<lambda>x. perzeta q (f x)) holomorphic_on A\"", "theorem hurwitz_zeta_formula:\n  fixes a :: real and s :: complex\n  assumes \"a \\<in> {0<..1}\" and \"s \\<noteq> 0\" and \"a \\<noteq> 1 \\<or> s \\<noteq> 1\"\n  shows   \"rGamma s * hurwitz_zeta a (1 - s) =\n             (2 * pi) powr - s * (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (-a) s)\"\n  (is \"?f s = ?g s\")", "theorem perzeta_conv_hurwitz_zeta:\n  fixes a :: real and s :: complex\n  assumes \"a \\<in> {0<..<1}\" and \"s \\<noteq> 0\"\n  shows   \"rGamma (1 - s) * perzeta a s =\n             (2 * pi) powr (s - 1) * \\<i> * (\\<i> powr (-s) * hurwitz_zeta a (1 - s) -\n                                         \\<i> powr s * hurwitz_zeta (1 - a) (1 - s))\"\n  (is \"?f s = ?g s\")", "lemma zeta_zero_reflect:\n  assumes \"Re s \\<in> {0<..<1}\" and \"zeta s = 0\"\n  shows   \"zeta (1 - s) = 0\"", "lemma perzeta_conv_hurwitz_zeta_multiplication:\n  fixes k :: nat and a :: int and s :: complex\n  assumes \"k > 0\" \"s \\<noteq> 1\"\n  shows   \"k powr s * perzeta (a / k) s =\n             (\\<Sum>n=1..k. exp (2 * pi * n * a / k * \\<i>) * hurwitz_zeta (n / k) s)\"\n  (is \"?lhs s = ?rhs s\")", "lemma perzeta_conv_hurwitz_zeta_multiplication':\n  fixes k :: nat and a :: int and s :: complex\n  assumes \"k > 0\" \"s \\<noteq> 1\"\n  shows   \"perzeta (a / k) s = k powr -s *\n             (\\<Sum>n=1..k. exp (2 * pi * n * a / k * \\<i>) * hurwitz_zeta (n / k) s)\"", "lemma zeta_conv_hurwitz_zeta_multiplication:\n  fixes k a :: nat and s :: complex\n  assumes \"k > 0\" \"s \\<noteq> 1\"\n  shows   \"k powr s * zeta s = (\\<Sum>n=1..k. hurwitz_zeta (n / k) s)\"", "lemma hurwitz_zeta_one_half_left:\n  assumes \"s \\<noteq> 1\"\n  shows   \"hurwitz_zeta (1 / 2) s = (2 powr s - 1) * zeta s\"", "theorem hurwitz_zeta_functional_equation:\n  fixes h k :: nat and s :: complex\n  assumes hk: \"k > 0\" \"h \\<in> {0<..k}\" and s: \"s \\<notin> {0, 1}\"\n  defines \"a \\<equiv> real h / real k\"\n  shows \"rGamma s * hurwitz_zeta a (1 - s) =\n           2 * (2 * pi * k) powr -s *\n             (\\<Sum>n=1..k. cos (s*pi/2 - 2*pi*n*h/k) * hurwitz_zeta (n / k) s)\"", "lemma perzeta_one_half_left: \"s \\<noteq> 1 \\<Longrightarrow> perzeta (1 / 2) s = (2 powr (1-s) - 1) * zeta s\"", "lemma perzeta_one_half_left':\n  \"perzeta (1 / 2) s =\n         (if s = 1 then -ln 2 else (2 powr (1 - s) - 1) / (s - 1)) * ((s - 1) * pre_zeta 1 s + 1)\""], "translations": [["", "lemma holomorphic_on_extend:\n  assumes \"f holomorphic_on S - {\\<xi>}\" \"\\<xi> \\<in> interior S\" \"f \\<in> O[at \\<xi>](\\<lambda>_. 1)\"\n  shows   \"(\\<exists>g. g holomorphic_on S \\<and> (\\<forall>z\\<in>S - {\\<xi>}. g z = f z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g holomorphic_on S \\<and> (\\<forall>z\\<in>S - {\\<xi>}. g z = f z)", "by (subst holomorphic_on_extend_bounded) (insert assms, auto elim!: landau_o.bigE)"], ["", "lemma removable_singularities:\n  assumes \"finite X\" \"X \\<subseteq> interior S\" \"f holomorphic_on (S - X)\"\n  assumes \"\\<And>z. z \\<in> X \\<Longrightarrow> f \\<in> O[at z](\\<lambda>_. 1)\"\n  shows   \"\\<exists>g. g holomorphic_on S \\<and> (\\<forall>z\\<in>S-X. g z = f z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g. g holomorphic_on S \\<and> (\\<forall>z\\<in>S - X. g z = f z)", "using assms"], ["proof (prove)\nusing this:\n  finite X\n  X \\<subseteq> interior S\n  f holomorphic_on S - X\n  ?z \\<in> X \\<Longrightarrow> f \\<in> O[at ?z](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. \\<exists>g. g holomorphic_on S \\<and> (\\<forall>z\\<in>S - X. g z = f z)", "proof (induction arbitrary: f rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>{} \\<subseteq> interior S; f holomorphic_on S - {};\n        \\<And>z.\n           z \\<in> {} \\<Longrightarrow>\n           f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g holomorphic_on S \\<and>\n                            (\\<forall>z\\<in>S - {}. g z = f z)\n 2. \\<And>x F f.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>f.\n           \\<lbrakk>F \\<subseteq> interior S; f holomorphic_on S - F;\n            \\<And>z.\n               z \\<in> F \\<Longrightarrow>\n               f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>g.\n                                g holomorphic_on S \\<and>\n                                (\\<forall>z\\<in>S - F. g z = f z);\n        insert x F \\<subseteq> interior S; f holomorphic_on S - insert x F;\n        \\<And>z.\n           z \\<in> insert x F \\<Longrightarrow>\n           f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g holomorphic_on S \\<and>\n                            (\\<forall>z\\<in>S - insert x F. g z = f z)", "case empty"], ["proof (state)\nthis:\n  {} \\<subseteq> interior S\n  f holomorphic_on S - {}\n  ?z \\<in> {} \\<Longrightarrow> f \\<in> O[at ?z](\\<lambda>_. 1)\n\ngoal (2 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>{} \\<subseteq> interior S; f holomorphic_on S - {};\n        \\<And>z.\n           z \\<in> {} \\<Longrightarrow>\n           f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g holomorphic_on S \\<and>\n                            (\\<forall>z\\<in>S - {}. g z = f z)\n 2. \\<And>x F f.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>f.\n           \\<lbrakk>F \\<subseteq> interior S; f holomorphic_on S - F;\n            \\<And>z.\n               z \\<in> F \\<Longrightarrow>\n               f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>g.\n                                g holomorphic_on S \\<and>\n                                (\\<forall>z\\<in>S - F. g z = f z);\n        insert x F \\<subseteq> interior S; f holomorphic_on S - insert x F;\n        \\<And>z.\n           z \\<in> insert x F \\<Longrightarrow>\n           f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g holomorphic_on S \\<and>\n                            (\\<forall>z\\<in>S - insert x F. g z = f z)", "thus ?case"], ["proof (prove)\nusing this:\n  {} \\<subseteq> interior S\n  f holomorphic_on S - {}\n  ?z \\<in> {} \\<Longrightarrow> f \\<in> O[at ?z](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. \\<exists>g. g holomorphic_on S \\<and> (\\<forall>z\\<in>S - {}. g z = f z)", "by auto"], ["proof (state)\nthis:\n  \\<exists>g. g holomorphic_on S \\<and> (\\<forall>z\\<in>S - {}. g z = f z)\n\ngoal (1 subgoal):\n 1. \\<And>x F f.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>f.\n           \\<lbrakk>F \\<subseteq> interior S; f holomorphic_on S - F;\n            \\<And>z.\n               z \\<in> F \\<Longrightarrow>\n               f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>g.\n                                g holomorphic_on S \\<and>\n                                (\\<forall>z\\<in>S - F. g z = f z);\n        insert x F \\<subseteq> interior S; f holomorphic_on S - insert x F;\n        \\<And>z.\n           z \\<in> insert x F \\<Longrightarrow>\n           f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g holomorphic_on S \\<and>\n                            (\\<forall>z\\<in>S - insert x F. g z = f z)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F f.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>f.\n           \\<lbrakk>F \\<subseteq> interior S; f holomorphic_on S - F;\n            \\<And>z.\n               z \\<in> F \\<Longrightarrow>\n               f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>g.\n                                g holomorphic_on S \\<and>\n                                (\\<forall>z\\<in>S - F. g z = f z);\n        insert x F \\<subseteq> interior S; f holomorphic_on S - insert x F;\n        \\<And>z.\n           z \\<in> insert x F \\<Longrightarrow>\n           f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g holomorphic_on S \\<and>\n                            (\\<forall>z\\<in>S - insert x F. g z = f z)", "case (insert z0 X f)"], ["proof (state)\nthis:\n  finite X\n  z0 \\<notin> X\n  \\<lbrakk>X \\<subseteq> interior S; ?f holomorphic_on S - X;\n   \\<And>z.\n      z \\<in> X \\<Longrightarrow> ?f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>g.\n                       g holomorphic_on S \\<and>\n                       (\\<forall>z\\<in>S - X. g z = ?f z)\n  insert z0 X \\<subseteq> interior S\n  f holomorphic_on S - insert z0 X\n  ?z \\<in> insert z0 X \\<Longrightarrow> f \\<in> O[at ?z](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. \\<And>x F f.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>f.\n           \\<lbrakk>F \\<subseteq> interior S; f holomorphic_on S - F;\n            \\<And>z.\n               z \\<in> F \\<Longrightarrow>\n               f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>g.\n                                g holomorphic_on S \\<and>\n                                (\\<forall>z\\<in>S - F. g z = f z);\n        insert x F \\<subseteq> interior S; f holomorphic_on S - insert x F;\n        \\<And>z.\n           z \\<in> insert x F \\<Longrightarrow>\n           f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g holomorphic_on S \\<and>\n                            (\\<forall>z\\<in>S - insert x F. g z = f z)", "from insert.prems and insert.hyps"], ["proof (chain)\npicking this:\n  insert z0 X \\<subseteq> interior S\n  f holomorphic_on S - insert z0 X\n  ?z \\<in> insert z0 X \\<Longrightarrow> f \\<in> O[at ?z](\\<lambda>_. 1)\n  finite X\n  z0 \\<notin> X", "have z0: \"z0 \\<in> interior (S - X)\""], ["proof (prove)\nusing this:\n  insert z0 X \\<subseteq> interior S\n  f holomorphic_on S - insert z0 X\n  ?z \\<in> insert z0 X \\<Longrightarrow> f \\<in> O[at ?z](\\<lambda>_. 1)\n  finite X\n  z0 \\<notin> X\n\ngoal (1 subgoal):\n 1. z0 \\<in> interior (S - X)", "by (auto simp: interior_diff finite_imp_closed)"], ["proof (state)\nthis:\n  z0 \\<in> interior (S - X)\n\ngoal (1 subgoal):\n 1. \\<And>x F f.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>f.\n           \\<lbrakk>F \\<subseteq> interior S; f holomorphic_on S - F;\n            \\<And>z.\n               z \\<in> F \\<Longrightarrow>\n               f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>g.\n                                g holomorphic_on S \\<and>\n                                (\\<forall>z\\<in>S - F. g z = f z);\n        insert x F \\<subseteq> interior S; f holomorphic_on S - insert x F;\n        \\<And>z.\n           z \\<in> insert x F \\<Longrightarrow>\n           f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g holomorphic_on S \\<and>\n                            (\\<forall>z\\<in>S - insert x F. g z = f z)", "hence \"\\<exists>g. g holomorphic_on (S - X) \\<and> (\\<forall>z\\<in>S - X - {z0}. g z = f z)\""], ["proof (prove)\nusing this:\n  z0 \\<in> interior (S - X)\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g holomorphic_on S - X \\<and>\n       (\\<forall>z\\<in>S - X - {z0}. g z = f z)", "using insert.prems insert.hyps"], ["proof (prove)\nusing this:\n  z0 \\<in> interior (S - X)\n  insert z0 X \\<subseteq> interior S\n  f holomorphic_on S - insert z0 X\n  ?z \\<in> insert z0 X \\<Longrightarrow> f \\<in> O[at ?z](\\<lambda>_. 1)\n  finite X\n  z0 \\<notin> X\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g holomorphic_on S - X \\<and>\n       (\\<forall>z\\<in>S - X - {z0}. g z = f z)", "by (intro holomorphic_on_extend) auto"], ["proof (state)\nthis:\n  \\<exists>g.\n     g holomorphic_on S - X \\<and> (\\<forall>z\\<in>S - X - {z0}. g z = f z)\n\ngoal (1 subgoal):\n 1. \\<And>x F f.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>f.\n           \\<lbrakk>F \\<subseteq> interior S; f holomorphic_on S - F;\n            \\<And>z.\n               z \\<in> F \\<Longrightarrow>\n               f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>g.\n                                g holomorphic_on S \\<and>\n                                (\\<forall>z\\<in>S - F. g z = f z);\n        insert x F \\<subseteq> interior S; f holomorphic_on S - insert x F;\n        \\<And>z.\n           z \\<in> insert x F \\<Longrightarrow>\n           f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g holomorphic_on S \\<and>\n                            (\\<forall>z\\<in>S - insert x F. g z = f z)", "then"], ["proof (chain)\npicking this:\n  \\<exists>g.\n     g holomorphic_on S - X \\<and> (\\<forall>z\\<in>S - X - {z0}. g z = f z)", "obtain g where g: \"g holomorphic_on (S - X)\" \"\\<forall>z\\<in>S - X - {z0}. g z = f z\""], ["proof (prove)\nusing this:\n  \\<exists>g.\n     g holomorphic_on S - X \\<and> (\\<forall>z\\<in>S - X - {z0}. g z = f z)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g holomorphic_on S - X;\n         \\<forall>z\\<in>S - X - {z0}. g z = f z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g holomorphic_on S - X\n  \\<forall>z\\<in>S - X - {z0}. g z = f z\n\ngoal (1 subgoal):\n 1. \\<And>x F f.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>f.\n           \\<lbrakk>F \\<subseteq> interior S; f holomorphic_on S - F;\n            \\<And>z.\n               z \\<in> F \\<Longrightarrow>\n               f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>g.\n                                g holomorphic_on S \\<and>\n                                (\\<forall>z\\<in>S - F. g z = f z);\n        insert x F \\<subseteq> interior S; f holomorphic_on S - insert x F;\n        \\<And>z.\n           z \\<in> insert x F \\<Longrightarrow>\n           f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g holomorphic_on S \\<and>\n                            (\\<forall>z\\<in>S - insert x F. g z = f z)", "have \"\\<exists>h. h holomorphic_on S \\<and> (\\<forall>z\\<in>S - X. h z = g z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>h. h holomorphic_on S \\<and> (\\<forall>z\\<in>S - X. h z = g z)", "proof (rule insert.IH)"], ["proof (state)\ngoal (3 subgoals):\n 1. X \\<subseteq> interior S\n 2. g holomorphic_on S - X\n 3. \\<And>z. z \\<in> X \\<Longrightarrow> g \\<in> O[at z](\\<lambda>_. 1)", "fix z0'"], ["proof (state)\ngoal (3 subgoals):\n 1. X \\<subseteq> interior S\n 2. g holomorphic_on S - X\n 3. \\<And>z. z \\<in> X \\<Longrightarrow> g \\<in> O[at z](\\<lambda>_. 1)", "assume z0': \"z0' \\<in> X\""], ["proof (state)\nthis:\n  z0' \\<in> X\n\ngoal (3 subgoals):\n 1. X \\<subseteq> interior S\n 2. g holomorphic_on S - X\n 3. \\<And>z. z \\<in> X \\<Longrightarrow> g \\<in> O[at z](\\<lambda>_. 1)", "hence \"eventually (\\<lambda>z. z \\<in> interior S - (X - {z0'}) - {z0}) (nhds z0')\""], ["proof (prove)\nusing this:\n  z0' \\<in> X\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in nhds z0'. z \\<in> interior S - (X - {z0'}) - {z0}", "using insert.prems insert.hyps"], ["proof (prove)\nusing this:\n  z0' \\<in> X\n  insert z0 X \\<subseteq> interior S\n  f holomorphic_on S - insert z0 X\n  ?z \\<in> insert z0 X \\<Longrightarrow> f \\<in> O[at ?z](\\<lambda>_. 1)\n  finite X\n  z0 \\<notin> X\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in nhds z0'. z \\<in> interior S - (X - {z0'}) - {z0}", "by (intro eventually_nhds_in_open open_Diff finite_imp_closed) auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in nhds z0'. z \\<in> interior S - (X - {z0'}) - {z0}\n\ngoal (3 subgoals):\n 1. X \\<subseteq> interior S\n 2. g holomorphic_on S - X\n 3. \\<And>z. z \\<in> X \\<Longrightarrow> g \\<in> O[at z](\\<lambda>_. 1)", "hence ev: \"eventually (\\<lambda>z. z \\<in> S - X - {z0}) (at z0')\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F z in nhds z0'. z \\<in> interior S - (X - {z0'}) - {z0}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in at z0'. z \\<in> S - X - {z0}", "unfolding eventually_at_filter"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F z in nhds z0'. z \\<in> interior S - (X - {z0'}) - {z0}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in nhds z0'.\n       x \\<noteq> z0' \\<longrightarrow>\n       x \\<in> UNIV \\<longrightarrow> x \\<in> S - X - {z0}", "by eventually_elim (insert z0' insert.hyps interior_subset[of S], auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in at z0'. z \\<in> S - X - {z0}\n\ngoal (3 subgoals):\n 1. X \\<subseteq> interior S\n 2. g holomorphic_on S - X\n 3. \\<And>z. z \\<in> X \\<Longrightarrow> g \\<in> O[at z](\\<lambda>_. 1)", "have \"g \\<in> \\<Theta>[at z0'](f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> \\<Theta>[at z0'](f)", "by (intro bigthetaI_cong eventually_mono[OF ev]) (insert g, auto)"], ["proof (state)\nthis:\n  g \\<in> \\<Theta>[at z0'](f)\n\ngoal (3 subgoals):\n 1. X \\<subseteq> interior S\n 2. g holomorphic_on S - X\n 3. \\<And>z. z \\<in> X \\<Longrightarrow> g \\<in> O[at z](\\<lambda>_. 1)", "also"], ["proof (state)\nthis:\n  g \\<in> \\<Theta>[at z0'](f)\n\ngoal (3 subgoals):\n 1. X \\<subseteq> interior S\n 2. g holomorphic_on S - X\n 3. \\<And>z. z \\<in> X \\<Longrightarrow> g \\<in> O[at z](\\<lambda>_. 1)", "have \"f \\<in> O[at z0'](\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> O[at z0'](\\<lambda>_. 1)", "using z0'"], ["proof (prove)\nusing this:\n  z0' \\<in> X\n\ngoal (1 subgoal):\n 1. f \\<in> O[at z0'](\\<lambda>_. 1)", "by (intro insert.prems) auto"], ["proof (state)\nthis:\n  f \\<in> O[at z0'](\\<lambda>_. 1)\n\ngoal (3 subgoals):\n 1. X \\<subseteq> interior S\n 2. g holomorphic_on S - X\n 3. \\<And>z. z \\<in> X \\<Longrightarrow> g \\<in> O[at z](\\<lambda>_. 1)", "finally"], ["proof (chain)\npicking this:\n  g \\<in> O[at z0'](\\<lambda>_. 1)", "show \"g \\<in> \\<dots>\""], ["proof (prove)\nusing this:\n  g \\<in> O[at z0'](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. g \\<in> O[at z0'](\\<lambda>_. 1)", "."], ["proof (state)\nthis:\n  g \\<in> O[at z0'](\\<lambda>_. 1)\n\ngoal (2 subgoals):\n 1. X \\<subseteq> interior S\n 2. g holomorphic_on S - X", "qed (insert insert.prems g, auto)"], ["proof (state)\nthis:\n  \\<exists>h. h holomorphic_on S \\<and> (\\<forall>z\\<in>S - X. h z = g z)\n\ngoal (1 subgoal):\n 1. \\<And>x F f.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>f.\n           \\<lbrakk>F \\<subseteq> interior S; f holomorphic_on S - F;\n            \\<And>z.\n               z \\<in> F \\<Longrightarrow>\n               f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>g.\n                                g holomorphic_on S \\<and>\n                                (\\<forall>z\\<in>S - F. g z = f z);\n        insert x F \\<subseteq> interior S; f holomorphic_on S - insert x F;\n        \\<And>z.\n           z \\<in> insert x F \\<Longrightarrow>\n           f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g holomorphic_on S \\<and>\n                            (\\<forall>z\\<in>S - insert x F. g z = f z)", "then"], ["proof (chain)\npicking this:\n  \\<exists>h. h holomorphic_on S \\<and> (\\<forall>z\\<in>S - X. h z = g z)", "obtain h where \"h holomorphic_on S\" \"\\<forall>z\\<in>S - X. h z = g z\""], ["proof (prove)\nusing this:\n  \\<exists>h. h holomorphic_on S \\<and> (\\<forall>z\\<in>S - X. h z = g z)\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h holomorphic_on S;\n         \\<forall>z\\<in>S - X. h z = g z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  h holomorphic_on S\n  \\<forall>z\\<in>S - X. h z = g z\n\ngoal (1 subgoal):\n 1. \\<And>x F f.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>f.\n           \\<lbrakk>F \\<subseteq> interior S; f holomorphic_on S - F;\n            \\<And>z.\n               z \\<in> F \\<Longrightarrow>\n               f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>g.\n                                g holomorphic_on S \\<and>\n                                (\\<forall>z\\<in>S - F. g z = f z);\n        insert x F \\<subseteq> interior S; f holomorphic_on S - insert x F;\n        \\<And>z.\n           z \\<in> insert x F \\<Longrightarrow>\n           f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g holomorphic_on S \\<and>\n                            (\\<forall>z\\<in>S - insert x F. g z = f z)", "with g"], ["proof (chain)\npicking this:\n  g holomorphic_on S - X\n  \\<forall>z\\<in>S - X - {z0}. g z = f z\n  h holomorphic_on S\n  \\<forall>z\\<in>S - X. h z = g z", "have \"h holomorphic_on S\" \"\\<forall>z\\<in>S - insert z0 X. h z = f z\""], ["proof (prove)\nusing this:\n  g holomorphic_on S - X\n  \\<forall>z\\<in>S - X - {z0}. g z = f z\n  h holomorphic_on S\n  \\<forall>z\\<in>S - X. h z = g z\n\ngoal (1 subgoal):\n 1. h holomorphic_on S &&& \\<forall>z\\<in>S - insert z0 X. h z = f z", "by auto"], ["proof (state)\nthis:\n  h holomorphic_on S\n  \\<forall>z\\<in>S - insert z0 X. h z = f z\n\ngoal (1 subgoal):\n 1. \\<And>x F f.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>f.\n           \\<lbrakk>F \\<subseteq> interior S; f holomorphic_on S - F;\n            \\<And>z.\n               z \\<in> F \\<Longrightarrow>\n               f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>g.\n                                g holomorphic_on S \\<and>\n                                (\\<forall>z\\<in>S - F. g z = f z);\n        insert x F \\<subseteq> interior S; f holomorphic_on S - insert x F;\n        \\<And>z.\n           z \\<in> insert x F \\<Longrightarrow>\n           f \\<in> O[at z](\\<lambda>_. 1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g holomorphic_on S \\<and>\n                            (\\<forall>z\\<in>S - insert x F. g z = f z)", "thus ?case"], ["proof (prove)\nusing this:\n  h holomorphic_on S\n  \\<forall>z\\<in>S - insert z0 X. h z = f z\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g holomorphic_on S \\<and> (\\<forall>z\\<in>S - insert z0 X. g z = f z)", "by blast"], ["proof (state)\nthis:\n  \\<exists>g.\n     g holomorphic_on S \\<and> (\\<forall>z\\<in>S - insert z0 X. g z = f z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma continuous_imp_bigo_1:\n  assumes \"continuous (at x within A) f\"\n  shows   \"f \\<in> O[at x within A](\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> O[at x within A](\\<lambda>_. 1::'b)", "proof (rule bigoI_tendsto)"], ["proof (state)\ngoal (2 subgoals):\n 1. ((\\<lambda>x. f x / (1::'b)) \\<longlongrightarrow> ?c) (at x within A)\n 2. \\<forall>\\<^sub>F x in at x within A. (1::'b) \\<noteq> (0::'b)", "from assms"], ["proof (chain)\npicking this:\n  continuous (at x within A) f", "show \"((\\<lambda>x. f x / 1) \\<longlongrightarrow> f x) (at x within A)\""], ["proof (prove)\nusing this:\n  continuous (at x within A) f\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f x / (1::'b)) \\<longlongrightarrow> f x) (at x within A)", "by (auto simp: continuous_within)"], ["proof (state)\nthis:\n  ((\\<lambda>x. f x / (1::'b)) \\<longlongrightarrow> f x) (at x within A)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x within A. (1::'b) \\<noteq> (0::'b)", "qed auto"], ["", "lemma taylor_bigo_linear:\n  assumes \"f field_differentiable at x0 within A\"\n  shows   \"(\\<lambda>x. f x - f x0) \\<in> O[at x0 within A](\\<lambda>x. x - x0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - f x0) \\<in> O[at x0 within A](\\<lambda>x. x - x0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - f x0) \\<in> O[at x0 within A](\\<lambda>x. x - x0)", "from assms"], ["proof (chain)\npicking this:\n  f field_differentiable at x0 within A", "obtain f' where \"(f has_field_derivative f') (at x0 within A)\""], ["proof (prove)\nusing this:\n  f field_differentiable at x0 within A\n\ngoal (1 subgoal):\n 1. (\\<And>f'.\n        (f has_field_derivative f') (at x0 within A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: field_differentiable_def)"], ["proof (state)\nthis:\n  (f has_field_derivative f') (at x0 within A)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - f x0) \\<in> O[at x0 within A](\\<lambda>x. x - x0)", "hence \"((\\<lambda>x. (f x - f x0) / (x - x0)) \\<longlongrightarrow> f') (at x0 within A)\""], ["proof (prove)\nusing this:\n  (f has_field_derivative f') (at x0 within A)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (f x - f x0) / (x - x0)) \\<longlongrightarrow> f')\n     (at x0 within A)", "by (auto simp: has_field_derivative_iff)"], ["proof (state)\nthis:\n  ((\\<lambda>x. (f x - f x0) / (x - x0)) \\<longlongrightarrow> f')\n   (at x0 within A)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - f x0) \\<in> O[at x0 within A](\\<lambda>x. x - x0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. (f x - f x0) / (x - x0)) \\<longlongrightarrow> f')\n   (at x0 within A)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - f x0) \\<in> O[at x0 within A](\\<lambda>x. x - x0)", "by (intro bigoI_tendsto[where c = f']) (auto simp: eventually_at_filter)"], ["proof (state)\nthis:\n  (\\<lambda>x. f x - f x0) \\<in> O[at x0 within A](\\<lambda>x. x - x0)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* END TODO *)\n\n(* TODO Move? *)"], ["", "lemma powr_add_minus_powr_asymptotics:\n  fixes a z :: complex \n  shows \"((\\<lambda>z. ((1 + z) powr a - 1) / z) \\<longlongrightarrow> a) (at 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>z. ((1 + z) powr a - 1) / z) \\<midarrow>0\\<rightarrow> a", "proof (rule Lim_transform_eventually)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?f \\<midarrow>0\\<rightarrow> a\n 2. \\<forall>\\<^sub>F x in at 0. ?f x = ((1 + x) powr a - 1) / x", "have \"eventually (\\<lambda>z::complex. z \\<in> ball 0 1 - {0}) (at 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in at 0. z \\<in> ball 0 1 - {0}", "using eventually_at_ball'[of 1 \"0::complex\" UNIV]"], ["proof (prove)\nusing this:\n  0 < 1 \\<Longrightarrow>\n  \\<forall>\\<^sub>F t in at 0.\n     t \\<in> ball 0 1 \\<and> t \\<noteq> 0 \\<and> t \\<in> UNIV\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in at 0. z \\<in> ball 0 1 - {0}", "by (simp add: dist_norm)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in at 0. z \\<in> ball 0 1 - {0}\n\ngoal (2 subgoals):\n 1. ?f \\<midarrow>0\\<rightarrow> a\n 2. \\<forall>\\<^sub>F x in at 0. ?f x = ((1 + x) powr a - 1) / x", "thus \"eventually (\\<lambda>z. (\\<Sum>n. (a gchoose (Suc n)) * z ^ n) = ((1 + z) powr a - 1) / z) (at 0)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F z in at 0. z \\<in> ball 0 1 - {0}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in at 0.\n       (\\<Sum>n. (a gchoose Suc n) * z ^ n) = ((1 + z) powr a - 1) / z", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> ball 0 1 - {0} \\<Longrightarrow>\n       (\\<Sum>n. (a gchoose Suc n) * z ^ n) = ((1 + z) powr a - 1) / z", "case (elim z)"], ["proof (state)\nthis:\n  z \\<in> ball 0 1 - {0}\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> ball 0 1 - {0} \\<Longrightarrow>\n       (\\<Sum>n. (a gchoose Suc n) * z ^ n) = ((1 + z) powr a - 1) / z", "hence \"(\\<lambda>n. (a gchoose n) * z ^ n) sums (1 + z) powr a\""], ["proof (prove)\nusing this:\n  z \\<in> ball 0 1 - {0}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (a gchoose n) * z ^ n) sums (1 + z) powr a", "by (intro gen_binomial_complex) auto"], ["proof (state)\nthis:\n  (\\<lambda>n. (a gchoose n) * z ^ n) sums (1 + z) powr a\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> ball 0 1 - {0} \\<Longrightarrow>\n       (\\<Sum>n. (a gchoose Suc n) * z ^ n) = ((1 + z) powr a - 1) / z", "hence \"(\\<lambda>n. (a gchoose (Suc n)) * z ^ (Suc n)) sums ((1 + z) powr a - 1)\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. (a gchoose n) * z ^ n) sums (1 + z) powr a\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (a gchoose Suc n) * z ^ Suc n) sums ((1 + z) powr a - 1)", "by (subst sums_Suc_iff) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>n. (a gchoose Suc n) * z ^ Suc n) sums ((1 + z) powr a - 1)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> ball 0 1 - {0} \\<Longrightarrow>\n       (\\<Sum>n. (a gchoose Suc n) * z ^ n) = ((1 + z) powr a - 1) / z", "also"], ["proof (state)\nthis:\n  (\\<lambda>n. (a gchoose Suc n) * z ^ Suc n) sums ((1 + z) powr a - 1)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> ball 0 1 - {0} \\<Longrightarrow>\n       (\\<Sum>n. (a gchoose Suc n) * z ^ n) = ((1 + z) powr a - 1) / z", "have \"(\\<lambda>n. (a gchoose (Suc n)) * z ^ (Suc n)) = (\\<lambda>n. z * ((a gchoose (Suc n)) * z ^ n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (a gchoose Suc n) * z ^ Suc n) =\n    (\\<lambda>n. z * ((a gchoose Suc n) * z ^ n))", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (\\<lambda>n. (a gchoose Suc n) * z ^ Suc n) =\n  (\\<lambda>n. z * ((a gchoose Suc n) * z ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> ball 0 1 - {0} \\<Longrightarrow>\n       (\\<Sum>n. (a gchoose Suc n) * z ^ n) = ((1 + z) powr a - 1) / z", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n. z * ((a gchoose Suc n) * z ^ n)) sums ((1 + z) powr a - 1)", "have \"(\\<lambda>n. (a gchoose (Suc n)) * z ^ n) sums (((1 + z) powr a - 1) / z)\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. z * ((a gchoose Suc n) * z ^ n)) sums ((1 + z) powr a - 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (a gchoose Suc n) * z ^ n) sums (((1 + z) powr a - 1) / z)", "by (rule sums_mult_D) (use elim in auto)"], ["proof (state)\nthis:\n  (\\<lambda>n. (a gchoose Suc n) * z ^ n) sums (((1 + z) powr a - 1) / z)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> ball 0 1 - {0} \\<Longrightarrow>\n       (\\<Sum>n. (a gchoose Suc n) * z ^ n) = ((1 + z) powr a - 1) / z", "thus ?case"], ["proof (prove)\nusing this:\n  (\\<lambda>n. (a gchoose Suc n) * z ^ n) sums (((1 + z) powr a - 1) / z)\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. (a gchoose Suc n) * z ^ n) = ((1 + z) powr a - 1) / z", "by (simp add: sums_iff)"], ["proof (state)\nthis:\n  (\\<Sum>n. (a gchoose Suc n) * z ^ n) = ((1 + z) powr a - 1) / z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in at 0.\n     (\\<Sum>n. (a gchoose Suc n) * z ^ n) = ((1 + z) powr a - 1) / z\n\ngoal (1 subgoal):\n 1. (\\<lambda>z. \\<Sum>n. (a gchoose Suc n) * z ^ n) \\<midarrow>0\n    \\<rightarrow> a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>z. \\<Sum>n. (a gchoose Suc n) * z ^ n) \\<midarrow>0\n    \\<rightarrow> a", "have \"conv_radius (\\<lambda>n. a gchoose (n + 1)) = conv_radius (\\<lambda>n. a gchoose n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_radius (\\<lambda>n. a gchoose (n + 1)) = conv_radius ((gchoose) a)", "using conv_radius_shift[of \"\\<lambda>n. a gchoose n\" 1]"], ["proof (prove)\nusing this:\n  conv_radius (\\<lambda>n. a gchoose (n + 1)) = conv_radius ((gchoose) a)\n\ngoal (1 subgoal):\n 1. conv_radius (\\<lambda>n. a gchoose (n + 1)) = conv_radius ((gchoose) a)", "by simp"], ["proof (state)\nthis:\n  conv_radius (\\<lambda>n. a gchoose (n + 1)) = conv_radius ((gchoose) a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>z. \\<Sum>n. (a gchoose Suc n) * z ^ n) \\<midarrow>0\n    \\<rightarrow> a", "hence \"continuous_on (cball 0 (1/2)) (\\<lambda>z. \\<Sum>n. (a gchoose (Suc n)) * (z - 0) ^ n)\""], ["proof (prove)\nusing this:\n  conv_radius (\\<lambda>n. a gchoose (n + 1)) = conv_radius ((gchoose) a)\n\ngoal (1 subgoal):\n 1. continuous_on (cball 0 (1 / 2))\n     (\\<lambda>z. \\<Sum>n. (a gchoose Suc n) * (z - 0) ^ n)", "using conv_radius_gchoose[of a]"], ["proof (prove)\nusing this:\n  conv_radius (\\<lambda>n. a gchoose (n + 1)) = conv_radius ((gchoose) a)\n  conv_radius ((gchoose) a) = (if a \\<in> \\<nat> then \\<infinity> else 1)\n\ngoal (1 subgoal):\n 1. continuous_on (cball 0 (1 / 2))\n     (\\<lambda>z. \\<Sum>n. (a gchoose Suc n) * (z - 0) ^ n)", "by (intro powser_continuous_suminf) (simp_all)"], ["proof (state)\nthis:\n  continuous_on (cball 0 (1 / 2))\n   (\\<lambda>z. \\<Sum>n. (a gchoose Suc n) * (z - 0) ^ n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>z. \\<Sum>n. (a gchoose Suc n) * z ^ n) \\<midarrow>0\n    \\<rightarrow> a", "hence \"isCont (\\<lambda>z. \\<Sum>n. (a gchoose (Suc n)) * z ^ n) 0\""], ["proof (prove)\nusing this:\n  continuous_on (cball 0 (1 / 2))\n   (\\<lambda>z. \\<Sum>n. (a gchoose Suc n) * (z - 0) ^ n)\n\ngoal (1 subgoal):\n 1. isCont (\\<lambda>z. \\<Sum>n. (a gchoose Suc n) * z ^ n) 0", "by (auto intro: continuous_on_interior)"], ["proof (state)\nthis:\n  isCont (\\<lambda>z. \\<Sum>n. (a gchoose Suc n) * z ^ n) 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>z. \\<Sum>n. (a gchoose Suc n) * z ^ n) \\<midarrow>0\n    \\<rightarrow> a", "thus \"(\\<lambda>z. \\<Sum>n. (a gchoose Suc n) * z ^ n) \\<midarrow>0\\<rightarrow> a\""], ["proof (prove)\nusing this:\n  isCont (\\<lambda>z. \\<Sum>n. (a gchoose Suc n) * z ^ n) 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>z. \\<Sum>n. (a gchoose Suc n) * z ^ n) \\<midarrow>0\n    \\<rightarrow> a", "by (auto simp: isCont_def)"], ["proof (state)\nthis:\n  (\\<lambda>z. \\<Sum>n. (a gchoose Suc n) * z ^ n) \\<midarrow>0\n  \\<rightarrow> a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma complex_powr_add_minus_powr_asymptotics:\n  fixes s :: complex\n  assumes a: \"a > 0\" and s: \"Re s < 1\"\n  shows \"filterlim (\\<lambda>x. of_real (x + a) powr s - of_real x powr s) (nhds 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real (x + a) powr s -\n         complex_of_real x powr s) \\<longlongrightarrow>\n     0)\n     at_top", "proof (rule Lim_transform_eventually)"], ["proof (state)\ngoal (2 subgoals):\n 1. (?f \\<longlongrightarrow> 0) at_top\n 2. \\<forall>\\<^sub>F x in at_top.\n       ?f x = complex_of_real (x + a) powr s - complex_of_real x powr s", "show \"eventually (\\<lambda>x. ((1 + of_real (a / x)) powr s - 1) / of_real (a / x) * \n                            of_real x powr (s - 1) * a = \n                          of_real (x + a) powr s - of_real x powr s) at_top\"\n    (is \"eventually (\\<lambda>x. ?f x / ?g x * ?h x * _ = _) _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ((1 + complex_of_real (a / x)) powr s - 1) /\n       complex_of_real (a / x) *\n       complex_of_real x powr (s - 1) *\n       complex_of_real a =\n       complex_of_real (x + a) powr s - complex_of_real x powr s", "using eventually_gt_at_top[of a]"], ["proof (prove)\nusing this:\n  eventually ((<) a) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ((1 + complex_of_real (a / x)) powr s - 1) /\n       complex_of_real (a / x) *\n       complex_of_real x powr (s - 1) *\n       complex_of_real a =\n       complex_of_real (x + a) powr s - complex_of_real x powr s", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       a < x \\<Longrightarrow>\n       ((1 + complex_of_real (a / x)) powr s - 1) /\n       complex_of_real (a / x) *\n       complex_of_real x powr (s - 1) *\n       complex_of_real a =\n       complex_of_real (x + a) powr s - complex_of_real x powr s", "case (elim x)"], ["proof (state)\nthis:\n  a < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       a < x \\<Longrightarrow>\n       ((1 + complex_of_real (a / x)) powr s - 1) /\n       complex_of_real (a / x) *\n       complex_of_real x powr (s - 1) *\n       complex_of_real a =\n       complex_of_real (x + a) powr s - complex_of_real x powr s", "have \"?f x / ?g x * ?h x * a = ?f x * (a * ?h x / ?g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((1 + complex_of_real (a / x)) powr s - 1) / complex_of_real (a / x) *\n    complex_of_real x powr (s - 1) *\n    complex_of_real a =\n    ((1 + complex_of_real (a / x)) powr s - 1) *\n    (complex_of_real a * complex_of_real x powr (s - 1) /\n     complex_of_real (a / x))", "by simp"], ["proof (state)\nthis:\n  ((1 + complex_of_real (a / x)) powr s - 1) / complex_of_real (a / x) *\n  complex_of_real x powr (s - 1) *\n  complex_of_real a =\n  ((1 + complex_of_real (a / x)) powr s - 1) *\n  (complex_of_real a * complex_of_real x powr (s - 1) /\n   complex_of_real (a / x))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       a < x \\<Longrightarrow>\n       ((1 + complex_of_real (a / x)) powr s - 1) /\n       complex_of_real (a / x) *\n       complex_of_real x powr (s - 1) *\n       complex_of_real a =\n       complex_of_real (x + a) powr s - complex_of_real x powr s", "also"], ["proof (state)\nthis:\n  ((1 + complex_of_real (a / x)) powr s - 1) / complex_of_real (a / x) *\n  complex_of_real x powr (s - 1) *\n  complex_of_real a =\n  ((1 + complex_of_real (a / x)) powr s - 1) *\n  (complex_of_real a * complex_of_real x powr (s - 1) /\n   complex_of_real (a / x))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       a < x \\<Longrightarrow>\n       ((1 + complex_of_real (a / x)) powr s - 1) /\n       complex_of_real (a / x) *\n       complex_of_real x powr (s - 1) *\n       complex_of_real a =\n       complex_of_real (x + a) powr s - complex_of_real x powr s", "have \"a * ?h x / ?g x = of_real x powr s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real a * complex_of_real x powr (s - 1) /\n    complex_of_real (a / x) =\n    complex_of_real x powr s", "using elim a"], ["proof (prove)\nusing this:\n  a < x\n  0 < a\n\ngoal (1 subgoal):\n 1. complex_of_real a * complex_of_real x powr (s - 1) /\n    complex_of_real (a / x) =\n    complex_of_real x powr s", "by (simp add: powr_diff)"], ["proof (state)\nthis:\n  complex_of_real a * complex_of_real x powr (s - 1) /\n  complex_of_real (a / x) =\n  complex_of_real x powr s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       a < x \\<Longrightarrow>\n       ((1 + complex_of_real (a / x)) powr s - 1) /\n       complex_of_real (a / x) *\n       complex_of_real x powr (s - 1) *\n       complex_of_real a =\n       complex_of_real (x + a) powr s - complex_of_real x powr s", "also"], ["proof (state)\nthis:\n  complex_of_real a * complex_of_real x powr (s - 1) /\n  complex_of_real (a / x) =\n  complex_of_real x powr s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       a < x \\<Longrightarrow>\n       ((1 + complex_of_real (a / x)) powr s - 1) /\n       complex_of_real (a / x) *\n       complex_of_real x powr (s - 1) *\n       complex_of_real a =\n       complex_of_real (x + a) powr s - complex_of_real x powr s", "have \"?f x * \\<dots> = of_real (x + a) powr s - of_real x powr s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((1 + complex_of_real (a / x)) powr s - 1) * complex_of_real x powr s =\n    complex_of_real (x + a) powr s - complex_of_real x powr s", "using a elim"], ["proof (prove)\nusing this:\n  0 < a\n  a < x\n\ngoal (1 subgoal):\n 1. ((1 + complex_of_real (a / x)) powr s - 1) * complex_of_real x powr s =\n    complex_of_real (x + a) powr s - complex_of_real x powr s", "by (simp add: algebra_simps powr_times_real [symmetric])"], ["proof (state)\nthis:\n  ((1 + complex_of_real (a / x)) powr s - 1) * complex_of_real x powr s =\n  complex_of_real (x + a) powr s - complex_of_real x powr s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       a < x \\<Longrightarrow>\n       ((1 + complex_of_real (a / x)) powr s - 1) /\n       complex_of_real (a / x) *\n       complex_of_real x powr (s - 1) *\n       complex_of_real a =\n       complex_of_real (x + a) powr s - complex_of_real x powr s", "finally"], ["proof (chain)\npicking this:\n  ((1 + complex_of_real (a / x)) powr s - 1) / complex_of_real (a / x) *\n  complex_of_real x powr (s - 1) *\n  complex_of_real a =\n  complex_of_real (x + a) powr s - complex_of_real x powr s", "show ?case"], ["proof (prove)\nusing this:\n  ((1 + complex_of_real (a / x)) powr s - 1) / complex_of_real (a / x) *\n  complex_of_real x powr (s - 1) *\n  complex_of_real a =\n  complex_of_real (x + a) powr s - complex_of_real x powr s\n\ngoal (1 subgoal):\n 1. ((1 + complex_of_real (a / x)) powr s - 1) / complex_of_real (a / x) *\n    complex_of_real x powr (s - 1) *\n    complex_of_real a =\n    complex_of_real (x + a) powr s - complex_of_real x powr s", "."], ["proof (state)\nthis:\n  ((1 + complex_of_real (a / x)) powr s - 1) / complex_of_real (a / x) *\n  complex_of_real x powr (s - 1) *\n  complex_of_real a =\n  complex_of_real (x + a) powr s - complex_of_real x powr s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     ((1 + complex_of_real (a / x)) powr s - 1) / complex_of_real (a / x) *\n     complex_of_real x powr (s - 1) *\n     complex_of_real a =\n     complex_of_real (x + a) powr s - complex_of_real x powr s\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         ((1 + complex_of_real (a / x)) powr s - 1) /\n         complex_of_real (a / x) *\n         complex_of_real x powr (s - 1) *\n         complex_of_real a) \\<longlongrightarrow>\n     0)\n     at_top", "have \"filterlim (\\<lambda>x. complex_of_real (a / x)) (nhds (complex_of_real 0)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. complex_of_real (a / x)) \\<longlongrightarrow>\n     complex_of_real 0)\n     at_top", "by (intro tendsto_of_real real_tendsto_divide_at_top[OF tendsto_const] filterlim_ident)"], ["proof (state)\nthis:\n  ((\\<lambda>x. complex_of_real (a / x)) \\<longlongrightarrow>\n   complex_of_real 0)\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         ((1 + complex_of_real (a / x)) powr s - 1) /\n         complex_of_real (a / x) *\n         complex_of_real x powr (s - 1) *\n         complex_of_real a) \\<longlongrightarrow>\n     0)\n     at_top", "hence \"filterlim (\\<lambda>x. complex_of_real (a / x)) (at 0) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. complex_of_real (a / x)) \\<longlongrightarrow>\n   complex_of_real 0)\n   at_top\n\ngoal (1 subgoal):\n 1. LIM x at_top. complex_of_real (a / x) :> at 0", "using a"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. complex_of_real (a / x)) \\<longlongrightarrow>\n   complex_of_real 0)\n   at_top\n  0 < a\n\ngoal (1 subgoal):\n 1. LIM x at_top. complex_of_real (a / x) :> at 0", "by (intro filterlim_atI) auto"], ["proof (state)\nthis:\n  LIM x at_top. complex_of_real (a / x) :> at 0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         ((1 + complex_of_real (a / x)) powr s - 1) /\n         complex_of_real (a / x) *\n         complex_of_real x powr (s - 1) *\n         complex_of_real a) \\<longlongrightarrow>\n     0)\n     at_top", "hence \"((\\<lambda>x. ?f x / ?g x * ?h x * a) \\<longlongrightarrow> s * 0 * a) at_top\""], ["proof (prove)\nusing this:\n  LIM x at_top. complex_of_real (a / x) :> at 0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         ((1 + complex_of_real (a / x)) powr s - 1) /\n         complex_of_real (a / x) *\n         complex_of_real x powr (s - 1) *\n         complex_of_real a) \\<longlongrightarrow>\n     s * 0 * complex_of_real a)\n     at_top", "using s"], ["proof (prove)\nusing this:\n  LIM x at_top. complex_of_real (a / x) :> at 0\n  Re s < 1\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         ((1 + complex_of_real (a / x)) powr s - 1) /\n         complex_of_real (a / x) *\n         complex_of_real x powr (s - 1) *\n         complex_of_real a) \\<longlongrightarrow>\n     s * 0 * complex_of_real a)\n     at_top", "by (intro tendsto_mult filterlim_compose[OF powr_add_minus_powr_asymptotics]\n              tendsto_const tendsto_neg_powr_complex_of_real filterlim_ident) auto"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       ((1 + complex_of_real (a / x)) powr s - 1) /\n       complex_of_real (a / x) *\n       complex_of_real x powr (s - 1) *\n       complex_of_real a) \\<longlongrightarrow>\n   s * 0 * complex_of_real a)\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         ((1 + complex_of_real (a / x)) powr s - 1) /\n         complex_of_real (a / x) *\n         complex_of_real x powr (s - 1) *\n         complex_of_real a) \\<longlongrightarrow>\n     0)\n     at_top", "thus \"((\\<lambda>x. ?f x / ?g x * ?h x * a) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       ((1 + complex_of_real (a / x)) powr s - 1) /\n       complex_of_real (a / x) *\n       complex_of_real x powr (s - 1) *\n       complex_of_real a) \\<longlongrightarrow>\n   s * 0 * complex_of_real a)\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         ((1 + complex_of_real (a / x)) powr s - 1) /\n         complex_of_real (a / x) *\n         complex_of_real x powr (s - 1) *\n         complex_of_real a) \\<longlongrightarrow>\n     0)\n     at_top", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       ((1 + complex_of_real (a / x)) powr s - 1) /\n       complex_of_real (a / x) *\n       complex_of_real x powr (s - 1) *\n       complex_of_real a) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal:\nNo subgoals!", "qed"], ["", "(* END TODO *)"], ["", "lemma summable_zeta:\n  assumes \"Re s > 1\"\n  shows   \"summable (\\<lambda>n. of_nat (Suc n) powr -s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. of_nat (Suc n) powr - s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. of_nat (Suc n) powr - s)", "have \"summable (\\<lambda>n. exp (complex_of_real (ln (real (Suc n))) * - s))\" (is \"summable ?f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. exp (complex_of_real (ln (real (Suc n))) * - s))", "by (subst summable_Suc_iff, rule summable_complex_powr_iff) (use assms in auto)"], ["proof (state)\nthis:\n  summable (\\<lambda>n. exp (complex_of_real (ln (real (Suc n))) * - s))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. of_nat (Suc n) powr - s)", "also"], ["proof (state)\nthis:\n  summable (\\<lambda>n. exp (complex_of_real (ln (real (Suc n))) * - s))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. of_nat (Suc n) powr - s)", "have \"?f = (\\<lambda>n. of_nat (Suc n) powr -s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. exp (complex_of_real (ln (real (Suc n))) * - s)) =\n    (\\<lambda>n. of_nat (Suc n) powr - s)", "by (simp add: powr_def algebra_simps del: of_nat_Suc)"], ["proof (state)\nthis:\n  (\\<lambda>n. exp (complex_of_real (ln (real (Suc n))) * - s)) =\n  (\\<lambda>n. of_nat (Suc n) powr - s)\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. of_nat (Suc n) powr - s)", "finally"], ["proof (chain)\npicking this:\n  summable (\\<lambda>n. of_nat (Suc n) powr - s)", "show ?thesis"], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. of_nat (Suc n) powr - s)\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. of_nat (Suc n) powr - s)", "."], ["proof (state)\nthis:\n  summable (\\<lambda>n. of_nat (Suc n) powr - s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma summable_zeta_real:\n  assumes \"x > 1\"\n  shows   \"summable (\\<lambda>n. real (Suc n) powr -x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. real (Suc n) powr - x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. real (Suc n) powr - x)", "have \"summable (\\<lambda>n. of_nat (Suc n) powr -complex_of_real x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. of_nat (Suc n) powr - complex_of_real x)", "using assms"], ["proof (prove)\nusing this:\n  1 < x\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. of_nat (Suc n) powr - complex_of_real x)", "by (intro summable_zeta) simp_all"], ["proof (state)\nthis:\n  summable (\\<lambda>n. of_nat (Suc n) powr - complex_of_real x)\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. real (Suc n) powr - x)", "also"], ["proof (state)\nthis:\n  summable (\\<lambda>n. of_nat (Suc n) powr - complex_of_real x)\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. real (Suc n) powr - x)", "have \"(\\<lambda>n. of_nat (Suc n) powr -complex_of_real x) = (\\<lambda>n. of_real (real (Suc n) powr -x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. of_nat (Suc n) powr - complex_of_real x) =\n    (\\<lambda>n. complex_of_real (real (Suc n) powr - x))", "by (subst powr_Reals_eq) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>n. of_nat (Suc n) powr - complex_of_real x) =\n  (\\<lambda>n. complex_of_real (real (Suc n) powr - x))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. real (Suc n) powr - x)", "finally"], ["proof (chain)\npicking this:\n  summable (\\<lambda>n. complex_of_real (real (Suc n) powr - x))", "show ?thesis"], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. complex_of_real (real (Suc n) powr - x))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. real (Suc n) powr - x)", "by (subst (asm) summable_complex_of_real)"], ["proof (state)\nthis:\n  summable (\\<lambda>n. real (Suc n) powr - x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma summable_hurwitz_zeta:\n  assumes \"Re s > 1\" \"a > 0\"\n  shows   \"summable (\\<lambda>n. (of_nat n + of_real a) powr -s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. (of_nat n + complex_of_real a) powr - s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. (of_nat n + complex_of_real a) powr - s)", "have \"summable (\\<lambda>n. (of_nat (Suc n) + of_real a) powr -s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. (of_nat (Suc n) + complex_of_real a) powr - s)", "proof (rule summable_comparison_test' [OF summable_zeta_real [OF assms(1)]] )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       ?N \\<le> n \\<Longrightarrow>\n       cmod ((of_nat (Suc n) + complex_of_real a) powr - s)\n       \\<le> real (Suc n) powr - Re s", "fix n :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       ?N \\<le> n \\<Longrightarrow>\n       cmod ((of_nat (Suc n) + complex_of_real a) powr - s)\n       \\<le> real (Suc n) powr - Re s", "have \"norm ((of_nat (Suc n) + of_real a) powr -s) = (real (Suc n) + a) powr - Re s\"\n      (is \"?N = _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod ((of_nat (Suc n) + complex_of_real a) powr - s) =\n    (real (Suc n) + a) powr - Re s", "using assms"], ["proof (prove)\nusing this:\n  1 < Re s\n  0 < a\n\ngoal (1 subgoal):\n 1. cmod ((of_nat (Suc n) + complex_of_real a) powr - s) =\n    (real (Suc n) + a) powr - Re s", "by (simp add: norm_powr_real_powr)"], ["proof (state)\nthis:\n  cmod ((of_nat (Suc n) + complex_of_real a) powr - s) =\n  (real (Suc n) + a) powr - Re s\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ?N \\<le> n \\<Longrightarrow>\n       cmod ((of_nat (Suc n) + complex_of_real a) powr - s)\n       \\<le> real (Suc n) powr - Re s", "also"], ["proof (state)\nthis:\n  cmod ((of_nat (Suc n) + complex_of_real a) powr - s) =\n  (real (Suc n) + a) powr - Re s\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ?N \\<le> n \\<Longrightarrow>\n       cmod ((of_nat (Suc n) + complex_of_real a) powr - s)\n       \\<le> real (Suc n) powr - Re s", "have \"\\<dots> \\<le> real (Suc n) powr -Re s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (real (Suc n) + a) powr - Re s \\<le> real (Suc n) powr - Re s", "using assms"], ["proof (prove)\nusing this:\n  1 < Re s\n  0 < a\n\ngoal (1 subgoal):\n 1. (real (Suc n) + a) powr - Re s \\<le> real (Suc n) powr - Re s", "by (intro powr_mono2') auto"], ["proof (state)\nthis:\n  (real (Suc n) + a) powr - Re s \\<le> real (Suc n) powr - Re s\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ?N \\<le> n \\<Longrightarrow>\n       cmod ((of_nat (Suc n) + complex_of_real a) powr - s)\n       \\<le> real (Suc n) powr - Re s", "finally"], ["proof (chain)\npicking this:\n  cmod ((of_nat (Suc n) + complex_of_real a) powr - s)\n  \\<le> real (Suc n) powr - Re s", "show \"?N \\<le> \\<dots>\""], ["proof (prove)\nusing this:\n  cmod ((of_nat (Suc n) + complex_of_real a) powr - s)\n  \\<le> real (Suc n) powr - Re s\n\ngoal (1 subgoal):\n 1. cmod ((of_nat (Suc n) + complex_of_real a) powr - s)\n    \\<le> real (Suc n) powr - Re s", "."], ["proof (state)\nthis:\n  cmod ((of_nat (Suc n) + complex_of_real a) powr - s)\n  \\<le> real (Suc n) powr - Re s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  summable (\\<lambda>n. (of_nat (Suc n) + complex_of_real a) powr - s)\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. (of_nat n + complex_of_real a) powr - s)", "thus ?thesis"], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. (of_nat (Suc n) + complex_of_real a) powr - s)\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. (of_nat n + complex_of_real a) powr - s)", "by (subst (asm) summable_Suc_iff)"], ["proof (state)\nthis:\n  summable (\\<lambda>n. (of_nat n + complex_of_real a) powr - s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma summable_hurwitz_zeta_real:\n  assumes \"x > 1\" \"a > 0\"\n  shows   \"summable (\\<lambda>n. (real n + a) powr -x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. (real n + a) powr - x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. (real n + a) powr - x)", "have \"summable (\\<lambda>n. (of_nat n + of_real a) powr -complex_of_real x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable\n     (\\<lambda>n. (of_nat n + complex_of_real a) powr - complex_of_real x)", "using assms"], ["proof (prove)\nusing this:\n  1 < x\n  0 < a\n\ngoal (1 subgoal):\n 1. summable\n     (\\<lambda>n. (of_nat n + complex_of_real a) powr - complex_of_real x)", "by (intro summable_hurwitz_zeta) simp_all"], ["proof (state)\nthis:\n  summable\n   (\\<lambda>n. (of_nat n + complex_of_real a) powr - complex_of_real x)\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. (real n + a) powr - x)", "also"], ["proof (state)\nthis:\n  summable\n   (\\<lambda>n. (of_nat n + complex_of_real a) powr - complex_of_real x)\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. (real n + a) powr - x)", "have \"(\\<lambda>n. (of_nat n + of_real a) powr -complex_of_real x) = \n               (\\<lambda>n. of_real ((real n + a) powr -x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (of_nat n + complex_of_real a) powr - complex_of_real x) =\n    (\\<lambda>n. complex_of_real ((real n + a) powr - x))", "using assms"], ["proof (prove)\nusing this:\n  1 < x\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (of_nat n + complex_of_real a) powr - complex_of_real x) =\n    (\\<lambda>n. complex_of_real ((real n + a) powr - x))", "by (subst powr_Reals_eq) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>n. (of_nat n + complex_of_real a) powr - complex_of_real x) =\n  (\\<lambda>n. complex_of_real ((real n + a) powr - x))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. (real n + a) powr - x)", "finally"], ["proof (chain)\npicking this:\n  summable (\\<lambda>n. complex_of_real ((real n + a) powr - x))", "show ?thesis"], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. complex_of_real ((real n + a) powr - x))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. (real n + a) powr - x)", "by (subst (asm) summable_complex_of_real)"], ["proof (state)\nthis:\n  summable (\\<lambda>n. (real n + a) powr - x)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Definitions\\<close>"], ["", "text \\<open>\n  We use the Euler--MacLaurin summation formula to express $\\zeta(s,a) - \\frac{a^{1-s}}{s-1}$ as\n  a polynomial plus some remainder term, which is an integral over a function of \n  order $O(-1-2n-\\mathfrak{R}(s))$. It is then clear that this integral converges uniformly\n  to an analytic function in $s$ for all $s$ with $\\mathfrak{R}(s) > -2n$.\n\\<close>"], ["", "definition pre_zeta_aux :: \"nat \\<Rightarrow> real \\<Rightarrow> complex \\<Rightarrow> complex\" where\n  \"pre_zeta_aux N a s = a powr - s / 2 +\n    (\\<Sum>i=1..N. (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R (pochhammer s (2*i - 1) * \n                 of_real a powr (- s - of_nat (2*i - 1)))) +\n    EM_remainder (Suc (2*N)) \n      (\\<lambda>x. -(pochhammer s (Suc (2*N)) * of_real (x + a) powr (- 1 - 2*N - s))) 0\""], ["", "text \\<open>\n  By iterating the above construction long enough, we can extend this to the entire\n  complex plane.\n\\<close>"], ["", "definition pre_zeta :: \"real \\<Rightarrow> complex \\<Rightarrow> complex\" where\n  \"pre_zeta a s = pre_zeta_aux (nat (1 - \\<lceil>Re s / 2\\<rceil>)) a s\""], ["", "text \\<open>\n  We can then obtain the Hurwitz $\\zeta$ function by adding back the pole at 1.\n  Note that it is not necessary to trust that this somewhat complicated definition is,\n  in fact, the correct one, since we will later show that this Hurwitz zeta function\n  fulfils\n  \\[\\zeta(s,a) = \\sum_{n=0}^\\infty \\frac{1}{(n + a)^s}\\]\n  and is analytic on $\\mathbb{C}\\setminus \\{1\\}$, which uniquely defines the function\n  due to analytic continuation. It is therefore obvious that any alternative definition\n  that is analytic on $\\mathbb{C}\\setminus \\{1\\}$ and satisfies the above equation \n  must be equal to our Hurwitz $\\zeta$ function.\n\\<close>"], ["", "definition hurwitz_zeta :: \"real \\<Rightarrow> complex \\<Rightarrow> complex\" where\n  \"hurwitz_zeta a s = (if s = 1 then 0 else pre_zeta a s + of_real a powr (1 - s) / (s - 1))\""], ["", "text \\<open>\n  The Riemann $\\zeta$ function is simply the Hurwitz $\\zeta$ function with $a = 1$.\n\\<close>"], ["", "definition zeta :: \"complex \\<Rightarrow> complex\" where\n  \"zeta = hurwitz_zeta 1\""], ["", "text \\<open>\n  We define the $\\zeta$ functions as 0 at their poles. To avoid confusion, these facts\n  are not added as simplification rules by default.\n\\<close>"], ["", "lemma hurwitz_zeta_1: \"hurwitz_zeta c 1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hurwitz_zeta c 1 = 0", "by (simp add: hurwitz_zeta_def)"], ["", "lemma zeta_1: \"zeta 1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta 1 = 0", "by (simp add: zeta_def hurwitz_zeta_1)"], ["", "lemma zeta_minus_pole_eq: \"s \\<noteq> 1 \\<Longrightarrow> zeta s - 1 / (s - 1) = pre_zeta 1 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<noteq> 1 \\<Longrightarrow> zeta s - 1 / (s - 1) = pre_zeta 1 s", "by (simp add: zeta_def hurwitz_zeta_def)"], ["", "context\nbegin"], ["", "private"], ["", "lemma holomorphic_pre_zeta_aux':\n  assumes \"a > 0\" \"bounded U\" \"open U\" \"U \\<subseteq> {s. Re s > \\<sigma>}\" and \\<sigma>: \"\\<sigma> > - 2 * real n\"\n  shows   \"pre_zeta_aux n a holomorphic_on U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_zeta_aux n a holomorphic_on U", "unfolding pre_zeta_aux_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        complex_of_real a powr - s / 2 +\n        (\\<Sum>i = 1..n.\n            (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n            (pochhammer s (2 * i - 1) *\n             complex_of_real a powr (- s - of_nat (2 * i - 1)))) +\n        EM_remainder (Suc (2 * n))\n         (\\<lambda>x.\n             - (pochhammer s (Suc (2 * n)) *\n                complex_of_real (x + a) powr (- 1 - 2 * of_nat n - s)))\n         0) holomorphic_on\n    U", "proof (intro holomorphic_intros)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>z. z \\<in> U \\<Longrightarrow> 2 \\<noteq> 0\n 2. (\\<lambda>z.\n        EM_remainder (Suc (2 * n))\n         (\\<lambda>x.\n             - (pochhammer z (Suc (2 * n)) *\n                complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n         0) holomorphic_on\n    U", "define C :: real where \"C = max 0 (Sup ((\\<lambda>s. norm (pochhammer s (Suc (2 * n)))) ` closure U))\""], ["proof (state)\nthis:\n  C = max 0 (SUP s\\<in>closure U. cmod (pochhammer s (Suc (2 * n))))\n\ngoal (2 subgoals):\n 1. \\<And>z. z \\<in> U \\<Longrightarrow> 2 \\<noteq> 0\n 2. (\\<lambda>z.\n        EM_remainder (Suc (2 * n))\n         (\\<lambda>x.\n             - (pochhammer z (Suc (2 * n)) *\n                complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n         0) holomorphic_on\n    U", "have \"compact (closure U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact (closure U)", "using assms"], ["proof (prove)\nusing this:\n  0 < a\n  bounded U\n  open U\n  U \\<subseteq> {s. \\<sigma> < Re s}\n  - 2 * real n < \\<sigma>\n\ngoal (1 subgoal):\n 1. compact (closure U)", "by (auto simp: compact_eq_bounded_closed)"], ["proof (state)\nthis:\n  compact (closure U)\n\ngoal (2 subgoals):\n 1. \\<And>z. z \\<in> U \\<Longrightarrow> 2 \\<noteq> 0\n 2. (\\<lambda>z.\n        EM_remainder (Suc (2 * n))\n         (\\<lambda>x.\n             - (pochhammer z (Suc (2 * n)) *\n                complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n         0) holomorphic_on\n    U", "hence \"compact ((\\<lambda>s. norm (pochhammer s (Suc (2 * n)))) ` closure U)\""], ["proof (prove)\nusing this:\n  compact (closure U)\n\ngoal (1 subgoal):\n 1. compact ((\\<lambda>s. cmod (pochhammer s (Suc (2 * n)))) ` closure U)", "by (rule compact_continuous_image [rotated]) (auto intro!: continuous_intros)"], ["proof (state)\nthis:\n  compact ((\\<lambda>s. cmod (pochhammer s (Suc (2 * n)))) ` closure U)\n\ngoal (2 subgoals):\n 1. \\<And>z. z \\<in> U \\<Longrightarrow> 2 \\<noteq> 0\n 2. (\\<lambda>z.\n        EM_remainder (Suc (2 * n))\n         (\\<lambda>x.\n             - (pochhammer z (Suc (2 * n)) *\n                complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n         0) holomorphic_on\n    U", "hence \"bounded ((\\<lambda>s. norm (pochhammer s (Suc (2 * n)))) ` closure U)\""], ["proof (prove)\nusing this:\n  compact ((\\<lambda>s. cmod (pochhammer s (Suc (2 * n)))) ` closure U)\n\ngoal (1 subgoal):\n 1. bounded ((\\<lambda>s. cmod (pochhammer s (Suc (2 * n)))) ` closure U)", "by (simp add: compact_eq_bounded_closed)"], ["proof (state)\nthis:\n  bounded ((\\<lambda>s. cmod (pochhammer s (Suc (2 * n)))) ` closure U)\n\ngoal (2 subgoals):\n 1. \\<And>z. z \\<in> U \\<Longrightarrow> 2 \\<noteq> 0\n 2. (\\<lambda>z.\n        EM_remainder (Suc (2 * n))\n         (\\<lambda>x.\n             - (pochhammer z (Suc (2 * n)) *\n                complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n         0) holomorphic_on\n    U", "hence C: \"cmod (pochhammer s (Suc (2 * n))) \\<le> C\" if \"s \\<in> U\" for s"], ["proof (prove)\nusing this:\n  bounded ((\\<lambda>s. cmod (pochhammer s (Suc (2 * n)))) ` closure U)\n\ngoal (1 subgoal):\n 1. cmod (pochhammer s (Suc (2 * n))) \\<le> C", "using that closure_subset[of U]"], ["proof (prove)\nusing this:\n  bounded ((\\<lambda>s. cmod (pochhammer s (Suc (2 * n)))) ` closure U)\n  s \\<in> U\n  U \\<subseteq> closure U\n\ngoal (1 subgoal):\n 1. cmod (pochhammer s (Suc (2 * n))) \\<le> C", "unfolding C_def"], ["proof (prove)\nusing this:\n  bounded ((\\<lambda>s. cmod (pochhammer s (Suc (2 * n)))) ` closure U)\n  s \\<in> U\n  U \\<subseteq> closure U\n\ngoal (1 subgoal):\n 1. cmod (pochhammer s (Suc (2 * n)))\n    \\<le> max 0 (SUP s\\<in>closure U. cmod (pochhammer s (Suc (2 * n))))", "by (intro max.coboundedI2 cSup_upper bounded_imp_bdd_above) (auto simp: image_iff)"], ["proof (state)\nthis:\n  ?s \\<in> U \\<Longrightarrow> cmod (pochhammer ?s (Suc (2 * n))) \\<le> C\n\ngoal (2 subgoals):\n 1. \\<And>z. z \\<in> U \\<Longrightarrow> 2 \\<noteq> 0\n 2. (\\<lambda>z.\n        EM_remainder (Suc (2 * n))\n         (\\<lambda>x.\n             - (pochhammer z (Suc (2 * n)) *\n                complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n         0) holomorphic_on\n    U", "have C' [simp]: \"C \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> C", "by (simp add: C_def)"], ["proof (state)\nthis:\n  0 \\<le> C\n\ngoal (2 subgoals):\n 1. \\<And>z. z \\<in> U \\<Longrightarrow> 2 \\<noteq> 0\n 2. (\\<lambda>z.\n        EM_remainder (Suc (2 * n))\n         (\\<lambda>x.\n             - (pochhammer z (Suc (2 * n)) *\n                complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n         0) holomorphic_on\n    U", "let ?g = \"\\<lambda>(x::real). C * (x + a) powr (- 1 - 2 * of_nat n - \\<sigma>)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>z. z \\<in> U \\<Longrightarrow> 2 \\<noteq> 0\n 2. (\\<lambda>z.\n        EM_remainder (Suc (2 * n))\n         (\\<lambda>x.\n             - (pochhammer z (Suc (2 * n)) *\n                complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n         0) holomorphic_on\n    U", "let ?G = \"\\<lambda>(x::real). C / (- 2 * of_nat n - \\<sigma>) * (x + a) powr (- 2 * of_nat n - \\<sigma>)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>z. z \\<in> U \\<Longrightarrow> 2 \\<noteq> 0\n 2. (\\<lambda>z.\n        EM_remainder (Suc (2 * n))\n         (\\<lambda>x.\n             - (pochhammer z (Suc (2 * n)) *\n                complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n         0) holomorphic_on\n    U", "define poch' where \"poch' = deriv (\\<lambda>z::complex. pochhammer z (Suc (2 * n)))\""], ["proof (state)\nthis:\n  poch' = deriv (\\<lambda>z. pochhammer z (Suc (2 * n)))\n\ngoal (2 subgoals):\n 1. \\<And>z. z \\<in> U \\<Longrightarrow> 2 \\<noteq> 0\n 2. (\\<lambda>z.\n        EM_remainder (Suc (2 * n))\n         (\\<lambda>x.\n             - (pochhammer z (Suc (2 * n)) *\n                complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n         0) holomorphic_on\n    U", "have [derivative_intros]:\n    \"((\\<lambda>z. pochhammer z (Suc (2 * n))) has_field_derivative poch' z) (at z within A)\" \n    for z :: complex and A"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>z. pochhammer z (Suc (2 * n))) has_field_derivative poch' z)\n     (at z within A)", "unfolding poch'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>z. pochhammer z (Suc (2 * n))) has_field_derivative\n     deriv (\\<lambda>z. pochhammer z (Suc (2 * n))) z)\n     (at z within A)", "by (rule holomorphic_derivI [OF holomorphic_pochhammer [of _ UNIV]]) auto"], ["proof (state)\nthis:\n  ((\\<lambda>z. pochhammer z (Suc (2 * n))) has_field_derivative poch' ?z)\n   (at ?z within ?A)\n\ngoal (2 subgoals):\n 1. \\<And>z. z \\<in> U \\<Longrightarrow> 2 \\<noteq> 0\n 2. (\\<lambda>z.\n        EM_remainder (Suc (2 * n))\n         (\\<lambda>x.\n             - (pochhammer z (Suc (2 * n)) *\n                complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n         0) holomorphic_on\n    U", "have A: \"continuous_on A poch'\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on A poch'", "unfolding poch'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on A (deriv (\\<lambda>z. pochhammer z (Suc (2 * n))))", "by (rule continuous_on_subset[OF _ subset_UNIV], \n        intro holomorphic_on_imp_continuous_on holomorphic_deriv)\n        (auto intro: holomorphic_pochhammer)"], ["proof (state)\nthis:\n  continuous_on ?A poch'\n\ngoal (2 subgoals):\n 1. \\<And>z. z \\<in> U \\<Longrightarrow> 2 \\<noteq> 0\n 2. (\\<lambda>z.\n        EM_remainder (Suc (2 * n))\n         (\\<lambda>x.\n             - (pochhammer z (Suc (2 * n)) *\n                complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n         0) holomorphic_on\n    U", "note [continuous_intros] = continuous_on_compose2[OF this _ subset_UNIV]"], ["proof (state)\nthis:\n  continuous_on ?s ?f \\<Longrightarrow>\n  continuous_on ?s (\\<lambda>x. poch' (?f x))\n\ngoal (2 subgoals):\n 1. \\<And>z. z \\<in> U \\<Longrightarrow> 2 \\<noteq> 0\n 2. (\\<lambda>z.\n        EM_remainder (Suc (2 * n))\n         (\\<lambda>x.\n             - (pochhammer z (Suc (2 * n)) *\n                complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n         0) holomorphic_on\n    U", "define f' where \"f' = (\\<lambda>z t. - (poch' z * complex_of_real (t + a) powr (- 1 - 2 * of_nat n - z) -\n                          Ln (complex_of_real (t + a)) * complex_of_real (t + a) powr \n                            (- 1 - 2 * of_nat n - z) * pochhammer z (Suc (2 * n))))\""], ["proof (state)\nthis:\n  f' =\n  (\\<lambda>z t.\n      - (poch' z * complex_of_real (t + a) powr (- 1 - 2 * of_nat n - z) -\n         Ln (complex_of_real (t + a)) *\n         complex_of_real (t + a) powr (- 1 - 2 * of_nat n - z) *\n         pochhammer z (Suc (2 * n))))\n\ngoal (2 subgoals):\n 1. \\<And>z. z \\<in> U \\<Longrightarrow> 2 \\<noteq> 0\n 2. (\\<lambda>z.\n        EM_remainder (Suc (2 * n))\n         (\\<lambda>x.\n             - (pochhammer z (Suc (2 * n)) *\n                complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n         0) holomorphic_on\n    U", "show \"(\\<lambda>z. EM_remainder (Suc (2 * n)) (\\<lambda>x. - (pochhammer z (Suc (2 * n)) *\n                  complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z))) 0) holomorphic_on\n    U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        EM_remainder (Suc (2 * n))\n         (\\<lambda>x.\n             - (pochhammer z (Suc (2 * n)) *\n                complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n         0) holomorphic_on\n    U", "unfolding pre_zeta_aux_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        EM_remainder (Suc (2 * n))\n         (\\<lambda>x.\n             - (pochhammer z (Suc (2 * n)) *\n                complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n         0) holomorphic_on\n    U", "proof (rule holomorphic_EM_remainder[of _ ?G ?g _ _ f'], goal_cases)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>y.\n       real_of_int 0 \\<le> y \\<Longrightarrow>\n       ((\\<lambda>x.\n            C / (- 2 * real n - \\<sigma>) *\n            (x + a) powr (- 2 * real n - \\<sigma>)) has_real_derivative\n        C * (y + a) powr (- 1 - 2 * real n - \\<sigma>))\n        (at y within {real_of_int 0..})\n 2. \\<And>z t x.\n       \\<lbrakk>z \\<in> U; 0 \\<le> x;\n        t \\<in> {real_of_int 0..real_of_int x}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>z.\n                              - (pochhammer z (Suc (2 * n)) *\n                                 complex_of_real (t + a) powr\n                                 (- 1 - 2 * of_nat n -\n                                  z))) has_field_derivative\n                          f' z t)\n                          (at z within U)\n 3. continuous_on (U \\<times> {real_of_int 0..}) (\\<lambda>(z, t). f' z t)\n 4. \\<And>b c z e.\n       \\<lbrakk>real_of_int 0 \\<le> b; z \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real\n                              (bernpoly (Suc (2 * n)) (t - e)) *\n                             - (pochhammer z (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - z))) integrable_on\n                         {b..c}\n 5. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 6. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 7. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 8. open U", "case (1 x)"], ["proof (state)\nthis:\n  real_of_int 0 \\<le> x\n\ngoal (8 subgoals):\n 1. \\<And>y.\n       real_of_int 0 \\<le> y \\<Longrightarrow>\n       ((\\<lambda>x.\n            C / (- 2 * real n - \\<sigma>) *\n            (x + a) powr (- 2 * real n - \\<sigma>)) has_real_derivative\n        C * (y + a) powr (- 1 - 2 * real n - \\<sigma>))\n        (at y within {real_of_int 0..})\n 2. \\<And>z t x.\n       \\<lbrakk>z \\<in> U; 0 \\<le> x;\n        t \\<in> {real_of_int 0..real_of_int x}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>z.\n                              - (pochhammer z (Suc (2 * n)) *\n                                 complex_of_real (t + a) powr\n                                 (- 1 - 2 * of_nat n -\n                                  z))) has_field_derivative\n                          f' z t)\n                          (at z within U)\n 3. continuous_on (U \\<times> {real_of_int 0..}) (\\<lambda>(z, t). f' z t)\n 4. \\<And>b c z e.\n       \\<lbrakk>real_of_int 0 \\<le> b; z \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real\n                              (bernpoly (Suc (2 * n)) (t - e)) *\n                             - (pochhammer z (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - z))) integrable_on\n                         {b..c}\n 5. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 6. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 7. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 8. open U", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         C / (- 2 * real n - \\<sigma>) *\n         (x + a) powr (- 2 * real n - \\<sigma>)) has_real_derivative\n     C * (x + a) powr (- 1 - 2 * real n - \\<sigma>))\n     (at x within {real_of_int 0..})", "by (insert 1 \\<sigma> \\<open>a > 0\\<close>, rule derivative_eq_intros refl | simp)+\n         (auto simp: field_simps powr_diff powr_add powr_minus)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       C / (- 2 * real n - \\<sigma>) *\n       (x + a) powr (- 2 * real n - \\<sigma>)) has_real_derivative\n   C * (x + a) powr (- 1 - 2 * real n - \\<sigma>))\n   (at x within {real_of_int 0..})\n\ngoal (7 subgoals):\n 1. \\<And>z t x.\n       \\<lbrakk>z \\<in> U; 0 \\<le> x;\n        t \\<in> {real_of_int 0..real_of_int x}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>z.\n                              - (pochhammer z (Suc (2 * n)) *\n                                 complex_of_real (t + a) powr\n                                 (- 1 - 2 * of_nat n -\n                                  z))) has_field_derivative\n                          f' z t)\n                          (at z within U)\n 2. continuous_on (U \\<times> {real_of_int 0..}) (\\<lambda>(z, t). f' z t)\n 3. \\<And>b c z e.\n       \\<lbrakk>real_of_int 0 \\<le> b; z \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real\n                              (bernpoly (Suc (2 * n)) (t - e)) *\n                             - (pochhammer z (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - z))) integrable_on\n                         {b..c}\n 4. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 5. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 6. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 7. open U", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>z t x.\n       \\<lbrakk>z \\<in> U; 0 \\<le> x;\n        t \\<in> {real_of_int 0..real_of_int x}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>z.\n                              - (pochhammer z (Suc (2 * n)) *\n                                 complex_of_real (t + a) powr\n                                 (- 1 - 2 * of_nat n -\n                                  z))) has_field_derivative\n                          f' z t)\n                          (at z within U)\n 2. continuous_on (U \\<times> {real_of_int 0..}) (\\<lambda>(z, t). f' z t)\n 3. \\<And>b c z e.\n       \\<lbrakk>real_of_int 0 \\<le> b; z \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real\n                              (bernpoly (Suc (2 * n)) (t - e)) *\n                             - (pochhammer z (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - z))) integrable_on\n                         {b..c}\n 4. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 5. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 6. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 7. open U", "case (2 z t x)"], ["proof (state)\nthis:\n  z \\<in> U\n  0 \\<le> x\n  t \\<in> {real_of_int 0..real_of_int x}\n\ngoal (7 subgoals):\n 1. \\<And>z t x.\n       \\<lbrakk>z \\<in> U; 0 \\<le> x;\n        t \\<in> {real_of_int 0..real_of_int x}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>z.\n                              - (pochhammer z (Suc (2 * n)) *\n                                 complex_of_real (t + a) powr\n                                 (- 1 - 2 * of_nat n -\n                                  z))) has_field_derivative\n                          f' z t)\n                          (at z within U)\n 2. continuous_on (U \\<times> {real_of_int 0..}) (\\<lambda>(z, t). f' z t)\n 3. \\<And>b c z e.\n       \\<lbrakk>real_of_int 0 \\<le> b; z \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real\n                              (bernpoly (Suc (2 * n)) (t - e)) *\n                             - (pochhammer z (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - z))) integrable_on\n                         {b..c}\n 4. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 5. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 6. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 7. open U", "note [derivative_intros] = has_field_derivative_powr_right [THEN DERIV_chain2]"], ["proof (state)\nthis:\n  \\<lbrakk>?w1 \\<noteq> 0;\n   (?g has_field_derivative ?Db) (at ?x within ?s)\\<rbrakk>\n  \\<Longrightarrow> ((\\<lambda>x. ?w1 powr ?g x) has_field_derivative\n                     Ln ?w1 * ?w1 powr ?g ?x * ?Db)\n                     (at ?x within ?s)\n\ngoal (7 subgoals):\n 1. \\<And>z t x.\n       \\<lbrakk>z \\<in> U; 0 \\<le> x;\n        t \\<in> {real_of_int 0..real_of_int x}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>z.\n                              - (pochhammer z (Suc (2 * n)) *\n                                 complex_of_real (t + a) powr\n                                 (- 1 - 2 * of_nat n -\n                                  z))) has_field_derivative\n                          f' z t)\n                          (at z within U)\n 2. continuous_on (U \\<times> {real_of_int 0..}) (\\<lambda>(z, t). f' z t)\n 3. \\<And>b c z e.\n       \\<lbrakk>real_of_int 0 \\<le> b; z \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real\n                              (bernpoly (Suc (2 * n)) (t - e)) *\n                             - (pochhammer z (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - z))) integrable_on\n                         {b..c}\n 4. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 5. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 6. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 7. open U", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>z.\n         - (pochhammer z (Suc (2 * n)) *\n            complex_of_real (t + a) powr\n            (- 1 - 2 * of_nat n - z))) has_field_derivative\n     f' z t)\n     (at z within U)", "by (insert 2 \\<sigma> \\<open>a > 0\\<close>, (rule derivative_eq_intros refl | (simp add: add_eq_0_iff; fail))+)\n         (simp add: f'_def)"], ["proof (state)\nthis:\n  ((\\<lambda>z.\n       - (pochhammer z (Suc (2 * n)) *\n          complex_of_real (t + a) powr\n          (- 1 - 2 * of_nat n - z))) has_field_derivative\n   f' z t)\n   (at z within U)\n\ngoal (6 subgoals):\n 1. continuous_on (U \\<times> {real_of_int 0..}) (\\<lambda>(z, t). f' z t)\n 2. \\<And>b c z e.\n       \\<lbrakk>real_of_int 0 \\<le> b; z \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real\n                              (bernpoly (Suc (2 * n)) (t - e)) *\n                             - (pochhammer z (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - z))) integrable_on\n                         {b..c}\n 3. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 4. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 5. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 6. open U", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. continuous_on (U \\<times> {real_of_int 0..}) (\\<lambda>(z, t). f' z t)\n 2. \\<And>b c z e.\n       \\<lbrakk>real_of_int 0 \\<le> b; z \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real\n                              (bernpoly (Suc (2 * n)) (t - e)) *\n                             - (pochhammer z (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - z))) integrable_on\n                         {b..c}\n 3. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 4. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 5. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 6. open U", "case 3"], ["proof (state)\nthis:\n  \n\ngoal (6 subgoals):\n 1. continuous_on (U \\<times> {real_of_int 0..}) (\\<lambda>(z, t). f' z t)\n 2. \\<And>b c z e.\n       \\<lbrakk>real_of_int 0 \\<le> b; z \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real\n                              (bernpoly (Suc (2 * n)) (t - e)) *\n                             - (pochhammer z (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - z))) integrable_on\n                         {b..c}\n 3. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 4. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 5. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 6. open U", "hence *: \"complex_of_real x + complex_of_real a \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\" if \"x \\<ge> 0\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real x + complex_of_real a\n    \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "using nonpos_Reals_of_real_iff[of \"x+a\", unfolded of_real_add] that \\<open>a > 0\\<close>"], ["proof (prove)\nusing this:\n  (of_real x + of_real a \\<in> \\<real>\\<^sub>\\<le>\\<^sub>0) =\n  (x + a \\<le> 0)\n  0 \\<le> x\n  0 < a\n\ngoal (1 subgoal):\n 1. complex_of_real x + complex_of_real a\n    \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "by auto"], ["proof (state)\nthis:\n  0 \\<le> ?x \\<Longrightarrow>\n  complex_of_real ?x + complex_of_real a\n  \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (6 subgoals):\n 1. continuous_on (U \\<times> {real_of_int 0..}) (\\<lambda>(z, t). f' z t)\n 2. \\<And>b c z e.\n       \\<lbrakk>real_of_int 0 \\<le> b; z \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real\n                              (bernpoly (Suc (2 * n)) (t - e)) *\n                             - (pochhammer z (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - z))) integrable_on\n                         {b..c}\n 3. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 4. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 5. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 6. open U", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on (U \\<times> {real_of_int 0..}) (\\<lambda>(z, t). f' z t)", "using \\<open>a > 0\\<close> and *"], ["proof (prove)\nusing this:\n  0 < a\n  0 \\<le> ?x \\<Longrightarrow>\n  complex_of_real ?x + complex_of_real a\n  \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. continuous_on (U \\<times> {real_of_int 0..}) (\\<lambda>(z, t). f' z t)", "unfolding f'_def"], ["proof (prove)\nusing this:\n  0 < a\n  0 \\<le> ?x \\<Longrightarrow>\n  complex_of_real ?x + complex_of_real a\n  \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. continuous_on (U \\<times> {real_of_int 0..})\n     (\\<lambda>(z, t).\n         - (poch' z *\n            complex_of_real (t + a) powr (- 1 - 2 * of_nat n - z) -\n            Ln (complex_of_real (t + a)) *\n            complex_of_real (t + a) powr (- 1 - 2 * of_nat n - z) *\n            pochhammer z (Suc (2 * n))))", "by (auto simp: case_prod_unfold add_eq_0_iff intro!: continuous_intros)"], ["proof (state)\nthis:\n  continuous_on (U \\<times> {real_of_int 0..}) (\\<lambda>(z, t). f' z t)\n\ngoal (5 subgoals):\n 1. \\<And>b c z e.\n       \\<lbrakk>real_of_int 0 \\<le> b; z \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real\n                              (bernpoly (Suc (2 * n)) (t - e)) *\n                             - (pochhammer z (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - z))) integrable_on\n                         {b..c}\n 2. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 3. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 4. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 5. open U", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>b c z e.\n       \\<lbrakk>real_of_int 0 \\<le> b; z \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real\n                              (bernpoly (Suc (2 * n)) (t - e)) *\n                             - (pochhammer z (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - z))) integrable_on\n                         {b..c}\n 2. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 3. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 4. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 5. open U", "case (4 b c z e)"], ["proof (state)\nthis:\n  real_of_int 0 \\<le> b\n  z \\<in> U\n\ngoal (5 subgoals):\n 1. \\<And>b c z e.\n       \\<lbrakk>real_of_int 0 \\<le> b; z \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real\n                              (bernpoly (Suc (2 * n)) (t - e)) *\n                             - (pochhammer z (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - z))) integrable_on\n                         {b..c}\n 2. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 3. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 4. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 5. open U", "have \"- 2 * real n < \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 2 * real n < \\<sigma>", "by (fact \\<sigma>)"], ["proof (state)\nthis:\n  - 2 * real n < \\<sigma>\n\ngoal (5 subgoals):\n 1. \\<And>b c z e.\n       \\<lbrakk>real_of_int 0 \\<le> b; z \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real\n                              (bernpoly (Suc (2 * n)) (t - e)) *\n                             - (pochhammer z (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - z))) integrable_on\n                         {b..c}\n 2. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 3. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 4. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 5. open U", "also"], ["proof (state)\nthis:\n  - 2 * real n < \\<sigma>\n\ngoal (5 subgoals):\n 1. \\<And>b c z e.\n       \\<lbrakk>real_of_int 0 \\<le> b; z \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real\n                              (bernpoly (Suc (2 * n)) (t - e)) *\n                             - (pochhammer z (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - z))) integrable_on\n                         {b..c}\n 2. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 3. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 4. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 5. open U", "from 4 assms"], ["proof (chain)\npicking this:\n  real_of_int 0 \\<le> b\n  z \\<in> U\n  0 < a\n  bounded U\n  open U\n  U \\<subseteq> {s. \\<sigma> < Re s}\n  - 2 * real n < \\<sigma>", "have \"\\<sigma> < Re z\""], ["proof (prove)\nusing this:\n  real_of_int 0 \\<le> b\n  z \\<in> U\n  0 < a\n  bounded U\n  open U\n  U \\<subseteq> {s. \\<sigma> < Re s}\n  - 2 * real n < \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<sigma> < Re z", "by auto"], ["proof (state)\nthis:\n  \\<sigma> < Re z\n\ngoal (5 subgoals):\n 1. \\<And>b c z e.\n       \\<lbrakk>real_of_int 0 \\<le> b; z \\<in> U\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real\n                              (bernpoly (Suc (2 * n)) (t - e)) *\n                             - (pochhammer z (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - z))) integrable_on\n                         {b..c}\n 2. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 3. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 4. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 5. open U", "finally"], ["proof (chain)\npicking this:\n  - 2 * real n < Re z", "show ?case"], ["proof (prove)\nusing this:\n  - 2 * real n < Re z\n\ngoal (1 subgoal):\n 1. (\\<lambda>t.\n        complex_of_real (bernpoly (Suc (2 * n)) (t - e)) *\n        - (pochhammer z (Suc (2 * n)) *\n           complex_of_real (t + a) powr\n           (- 1 - 2 * of_nat n - z))) integrable_on\n    {b..c}", "using assms 4"], ["proof (prove)\nusing this:\n  - 2 * real n < Re z\n  0 < a\n  bounded U\n  open U\n  U \\<subseteq> {s. \\<sigma> < Re s}\n  - 2 * real n < \\<sigma>\n  real_of_int 0 \\<le> b\n  z \\<in> U\n\ngoal (1 subgoal):\n 1. (\\<lambda>t.\n        complex_of_real (bernpoly (Suc (2 * n)) (t - e)) *\n        - (pochhammer z (Suc (2 * n)) *\n           complex_of_real (t + a) powr\n           (- 1 - 2 * of_nat n - z))) integrable_on\n    {b..c}", "by (intro integrable_continuous_real continuous_intros) (auto simp: add_eq_0_iff)"], ["proof (state)\nthis:\n  (\\<lambda>t.\n      complex_of_real (bernpoly (Suc (2 * n)) (t - e)) *\n      - (pochhammer z (Suc (2 * n)) *\n         complex_of_real (t + a) powr\n         (- 1 - 2 * of_nat n - z))) integrable_on\n  {b..c}\n\ngoal (4 subgoals):\n 1. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 2. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 3. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 4. open U", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 2. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 3. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 4. open U", "case (5 t x s)"], ["proof (state)\nthis:\n  s \\<in> U\n  real_of_int 0 \\<le> t\n  t \\<le> x\n\ngoal (4 subgoals):\n 1. \\<And>a' b y.\n       \\<lbrakk>y \\<in> U; real_of_int 0 \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly (Suc (2 * n)) t *\\<^sub>R\n                             - (pochhammer y (Suc (2 * n)) *\n                                complex_of_real (t + a) powr\n                                (- 1 - 2 * of_nat n - y))) integrable_on\n                         {a'..b}\n 2. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 3. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 4. open U", "thus ?case"], ["proof (prove)\nusing this:\n  s \\<in> U\n  real_of_int 0 \\<le> t\n  t \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<lambda>t.\n        pbernpoly (Suc (2 * n)) t *\\<^sub>R\n        - (pochhammer s (Suc (2 * n)) *\n           complex_of_real (t + a) powr\n           (- 1 - 2 * of_nat n - s))) integrable_on\n    {t..x}", "using \\<open>a > 0\\<close>"], ["proof (prove)\nusing this:\n  s \\<in> U\n  real_of_int 0 \\<le> t\n  t \\<le> x\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<lambda>t.\n        pbernpoly (Suc (2 * n)) t *\\<^sub>R\n        - (pochhammer s (Suc (2 * n)) *\n           complex_of_real (t + a) powr\n           (- 1 - 2 * of_nat n - s))) integrable_on\n    {t..x}", "by (intro integrable_EM_remainder') (auto intro!: continuous_intros simp: add_eq_0_iff)"], ["proof (state)\nthis:\n  (\\<lambda>t.\n      pbernpoly (Suc (2 * n)) t *\\<^sub>R\n      - (pochhammer s (Suc (2 * n)) *\n         complex_of_real (t + a) powr\n         (- 1 - 2 * of_nat n - s))) integrable_on\n  {t..x}\n\ngoal (3 subgoals):\n 1. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 2. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 3. open U", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 2. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 3. open U", "case 6"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 2. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 3. open U", "from \\<sigma>"], ["proof (chain)\npicking this:\n  - 2 * real n < \\<sigma>", "have \"(\\<lambda>y. C / (-2 * real n - \\<sigma>) * (a + y) powr (-2 * real n - \\<sigma>)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  - 2 * real n < \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        C / (- 2 * real n - \\<sigma>) *\n        (a + real x) powr (- 2 * real n - \\<sigma>))\n    \\<longlonglongrightarrow> 0", "by (intro tendsto_mult_right_zero tendsto_neg_powr\n            filterlim_real_sequentially filterlim_tendsto_add_at_top [OF tendsto_const]) auto"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      C / (- 2 * real n - \\<sigma>) *\n      (a + real x) powr (- 2 * real n - \\<sigma>))\n  \\<longlonglongrightarrow> 0\n\ngoal (3 subgoals):\n 1. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))\n 2. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 3. open U", "thus ?case"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      C / (- 2 * real n - \\<sigma>) *\n      (a + real x) powr (- 2 * real n - \\<sigma>))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. convergent\n     (\\<lambda>y.\n         C / (- 2 * real n - \\<sigma>) *\n         (real y + a) powr (- 2 * real n - \\<sigma>))", "unfolding convergent_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      C / (- 2 * real n - \\<sigma>) *\n      (a + real x) powr (- 2 * real n - \\<sigma>))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. \\<exists>L.\n       (\\<lambda>y.\n           C / (- 2 * real n - \\<sigma>) *\n           (real y + a) powr (- 2 * real n - \\<sigma>))\n       \\<longlonglongrightarrow> L", "by (auto simp: add_ac)"], ["proof (state)\nthis:\n  convergent\n   (\\<lambda>y.\n       C / (- 2 * real n - \\<sigma>) *\n       (real y + a) powr (- 2 * real n - \\<sigma>))\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 2. open U", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 2. open U", "case 7"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n 2. open U", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>U.\n          cmod\n           (- (pochhammer y (Suc (2 * n)) *\n               complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n          \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)", "proof (intro eventually_mono [OF eventually_ge_at_top[of 1]] ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>1 \\<le> x; y \\<in> U\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (- (pochhammer y (Suc (2 * n)) *\n                              complex_of_real (x + a) powr\n                              (- 1 - 2 * of_nat n - y)))\n                         \\<le> C *\n                               (x + a) powr (- 1 - 2 * real n - \\<sigma>)", "fix x :: real and s :: complex"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>1 \\<le> x; y \\<in> U\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (- (pochhammer y (Suc (2 * n)) *\n                              complex_of_real (x + a) powr\n                              (- 1 - 2 * of_nat n - y)))\n                         \\<le> C *\n                               (x + a) powr (- 1 - 2 * real n - \\<sigma>)", "assume x: \"x \\<ge> 1\" and s: \"s \\<in> U\""], ["proof (state)\nthis:\n  1 \\<le> x\n  s \\<in> U\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>1 \\<le> x; y \\<in> U\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (- (pochhammer y (Suc (2 * n)) *\n                              complex_of_real (x + a) powr\n                              (- 1 - 2 * of_nat n - y)))\n                         \\<le> C *\n                               (x + a) powr (- 1 - 2 * real n - \\<sigma>)", "have \"norm (- (pochhammer s (Suc (2 * n)) * of_real (x + a) powr (- 1 - 2 * of_nat n - s))) =\n              norm (pochhammer s (Suc (2 * n))) * (x + a) powr (-1 - 2 * of_nat n - Re s)\"\n        (is \"?N = _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (- (pochhammer s (Suc (2 * n)) *\n         complex_of_real (x + a) powr (- 1 - 2 * of_nat n - s))) =\n    cmod (pochhammer s (Suc (2 * n))) *\n    (x + a) powr (- 1 - 2 * real n - Re s)", "using 7 \\<open>a > 0\\<close> x"], ["proof (prove)\nusing this:\n  0 < a\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. cmod\n     (- (pochhammer s (Suc (2 * n)) *\n         complex_of_real (x + a) powr (- 1 - 2 * of_nat n - s))) =\n    cmod (pochhammer s (Suc (2 * n))) *\n    (x + a) powr (- 1 - 2 * real n - Re s)", "by (simp add: norm_mult norm_powr_real_powr)"], ["proof (state)\nthis:\n  cmod\n   (- (pochhammer s (Suc (2 * n)) *\n       complex_of_real (x + a) powr (- 1 - 2 * of_nat n - s))) =\n  cmod (pochhammer s (Suc (2 * n))) * (x + a) powr (- 1 - 2 * real n - Re s)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>1 \\<le> x; y \\<in> U\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (- (pochhammer y (Suc (2 * n)) *\n                              complex_of_real (x + a) powr\n                              (- 1 - 2 * of_nat n - y)))\n                         \\<le> C *\n                               (x + a) powr (- 1 - 2 * real n - \\<sigma>)", "also"], ["proof (state)\nthis:\n  cmod\n   (- (pochhammer s (Suc (2 * n)) *\n       complex_of_real (x + a) powr (- 1 - 2 * of_nat n - s))) =\n  cmod (pochhammer s (Suc (2 * n))) * (x + a) powr (- 1 - 2 * real n - Re s)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>1 \\<le> x; y \\<in> U\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (- (pochhammer y (Suc (2 * n)) *\n                              complex_of_real (x + a) powr\n                              (- 1 - 2 * of_nat n - y)))\n                         \\<le> C *\n                               (x + a) powr (- 1 - 2 * real n - \\<sigma>)", "have \"\\<dots> \\<le> ?g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (pochhammer s (Suc (2 * n))) *\n    (x + a) powr (- 1 - 2 * real n - Re s)\n    \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)", "using 7 assms x s \\<open>a > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < a\n  bounded U\n  open U\n  U \\<subseteq> {s. \\<sigma> < Re s}\n  - 2 * real n < \\<sigma>\n  1 \\<le> x\n  s \\<in> U\n  0 < a\n\ngoal (1 subgoal):\n 1. cmod (pochhammer s (Suc (2 * n))) *\n    (x + a) powr (- 1 - 2 * real n - Re s)\n    \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)", "by (intro mult_mono C powr_mono) auto"], ["proof (state)\nthis:\n  cmod (pochhammer s (Suc (2 * n))) * (x + a) powr (- 1 - 2 * real n - Re s)\n  \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>1 \\<le> x; y \\<in> U\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (- (pochhammer y (Suc (2 * n)) *\n                              complex_of_real (x + a) powr\n                              (- 1 - 2 * of_nat n - y)))\n                         \\<le> C *\n                               (x + a) powr (- 1 - 2 * real n - \\<sigma>)", "finally"], ["proof (chain)\npicking this:\n  cmod\n   (- (pochhammer s (Suc (2 * n)) *\n       complex_of_real (x + a) powr (- 1 - 2 * of_nat n - s)))\n  \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)", "show \"?N \\<le> ?g x\""], ["proof (prove)\nusing this:\n  cmod\n   (- (pochhammer s (Suc (2 * n)) *\n       complex_of_real (x + a) powr (- 1 - 2 * of_nat n - s)))\n  \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n\ngoal (1 subgoal):\n 1. cmod\n     (- (pochhammer s (Suc (2 * n)) *\n         complex_of_real (x + a) powr (- 1 - 2 * of_nat n - s)))\n    \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)", "."], ["proof (state)\nthis:\n  cmod\n   (- (pochhammer s (Suc (2 * n)) *\n       complex_of_real (x + a) powr (- 1 - 2 * of_nat n - s)))\n  \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<forall>y\\<in>U.\n        cmod\n         (- (pochhammer y (Suc (2 * n)) *\n             complex_of_real (x + a) powr (- 1 - 2 * of_nat n - y)))\n        \\<le> C * (x + a) powr (- 1 - 2 * real n - \\<sigma>)\n\ngoal (1 subgoal):\n 1. open U", "qed (insert assms, auto)"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      EM_remainder (Suc (2 * n))\n       (\\<lambda>x.\n           - (pochhammer z (Suc (2 * n)) *\n              complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n       0) holomorphic_on\n  U\n\ngoal (1 subgoal):\n 1. \\<And>z. z \\<in> U \\<Longrightarrow> 2 \\<noteq> 0", "qed (insert assms, auto)"], ["", "lemma analytic_pre_zeta_aux:\n  assumes \"a > 0\"\n  shows   \"pre_zeta_aux n a analytic_on {s. Re s > - 2 * real n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_zeta_aux n a analytic_on {s. - 2 * real n < Re s}", "unfolding analytic_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{s. - 2 * real n < Re s}.\n       \\<exists>e>0. pre_zeta_aux n a holomorphic_on ball x e", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s. - 2 * real n < Re s} \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta_aux n a holomorphic_on ball x e", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s. - 2 * real n < Re s} \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta_aux n a holomorphic_on ball x e", "assume s: \"s \\<in> {s. Re s > - 2 * real n}\""], ["proof (state)\nthis:\n  s \\<in> {s. - 2 * real n < Re s}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s. - 2 * real n < Re s} \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta_aux n a holomorphic_on ball x e", "define \\<sigma> where \"\\<sigma> = (Re s - 2 * real n) / 2\""], ["proof (state)\nthis:\n  \\<sigma> = (Re s - 2 * real n) / 2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s. - 2 * real n < Re s} \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta_aux n a holomorphic_on ball x e", "with s"], ["proof (chain)\npicking this:\n  s \\<in> {s. - 2 * real n < Re s}\n  \\<sigma> = (Re s - 2 * real n) / 2", "have \\<sigma>: \"\\<sigma> > - 2 * real n\""], ["proof (prove)\nusing this:\n  s \\<in> {s. - 2 * real n < Re s}\n  \\<sigma> = (Re s - 2 * real n) / 2\n\ngoal (1 subgoal):\n 1. - 2 * real n < \\<sigma>", "by (simp add: \\<sigma>_def field_simps)"], ["proof (state)\nthis:\n  - 2 * real n < \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s. - 2 * real n < Re s} \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta_aux n a holomorphic_on ball x e", "from s"], ["proof (chain)\npicking this:\n  s \\<in> {s. - 2 * real n < Re s}", "have s': \"s \\<in> {s. Re s > \\<sigma>}\""], ["proof (prove)\nusing this:\n  s \\<in> {s. - 2 * real n < Re s}\n\ngoal (1 subgoal):\n 1. s \\<in> {s. \\<sigma> < Re s}", "by (auto simp: \\<sigma>_def field_simps)"], ["proof (state)\nthis:\n  s \\<in> {s. \\<sigma> < Re s}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s. - 2 * real n < Re s} \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta_aux n a holomorphic_on ball x e", "have \"open {s. Re s > \\<sigma>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open {s. \\<sigma> < Re s}", "by (rule open_halfspace_Re_gt)"], ["proof (state)\nthis:\n  open {s. \\<sigma> < Re s}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s. - 2 * real n < Re s} \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta_aux n a holomorphic_on ball x e", "with s'"], ["proof (chain)\npicking this:\n  s \\<in> {s. \\<sigma> < Re s}\n  open {s. \\<sigma> < Re s}", "obtain \\<epsilon> where \"\\<epsilon> > 0\" \"ball s \\<epsilon> \\<subseteq> {s. Re s > \\<sigma>}\""], ["proof (prove)\nusing this:\n  s \\<in> {s. \\<sigma> < Re s}\n  open {s. \\<sigma> < Re s}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<epsilon>.\n        \\<lbrakk>0 < \\<epsilon>;\n         ball s \\<epsilon> \\<subseteq> {s. \\<sigma> < Re s}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding open_contains_ball"], ["proof (prove)\nusing this:\n  s \\<in> {s. \\<sigma> < Re s}\n  \\<forall>x\\<in>{s. \\<sigma> < Re s}.\n     \\<exists>e>0. ball x e \\<subseteq> {s. \\<sigma> < Re s}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<epsilon>.\n        \\<lbrakk>0 < \\<epsilon>;\n         ball s \\<epsilon> \\<subseteq> {s. \\<sigma> < Re s}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 < \\<epsilon>\n  ball s \\<epsilon> \\<subseteq> {s. \\<sigma> < Re s}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s. - 2 * real n < Re s} \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta_aux n a holomorphic_on ball x e", "with \\<sigma>"], ["proof (chain)\npicking this:\n  - 2 * real n < \\<sigma>\n  0 < \\<epsilon>\n  ball s \\<epsilon> \\<subseteq> {s. \\<sigma> < Re s}", "have \"pre_zeta_aux n a holomorphic_on ball s \\<epsilon>\""], ["proof (prove)\nusing this:\n  - 2 * real n < \\<sigma>\n  0 < \\<epsilon>\n  ball s \\<epsilon> \\<subseteq> {s. \\<sigma> < Re s}\n\ngoal (1 subgoal):\n 1. pre_zeta_aux n a holomorphic_on ball s \\<epsilon>", "by (intro holomorphic_pre_zeta_aux' [OF assms, of _ \\<sigma>]) auto"], ["proof (state)\nthis:\n  pre_zeta_aux n a holomorphic_on ball s \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s. - 2 * real n < Re s} \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta_aux n a holomorphic_on ball x e", "with \\<open>\\<epsilon> > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < \\<epsilon>\n  pre_zeta_aux n a holomorphic_on ball s \\<epsilon>", "show \"\\<exists>e>0. pre_zeta_aux n a holomorphic_on ball s e\""], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n  pre_zeta_aux n a holomorphic_on ball s \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>e>0. pre_zeta_aux n a holomorphic_on ball s e", "by blast"], ["proof (state)\nthis:\n  \\<exists>e>0. pre_zeta_aux n a holomorphic_on ball s e\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context\n  fixes s :: complex and N :: nat and \\<zeta> :: \"complex \\<Rightarrow> complex\" and a :: real\n  assumes s: \"Re s > 1\" and a: \"a > 0\"\n  defines \"\\<zeta> \\<equiv> (\\<lambda>s. \\<Sum>n. (of_nat n + of_real a) powr -s)\"\nbegin"], ["", "interpretation \\<zeta>: euler_maclaurin_nat'\n  \"\\<lambda>x. of_real (x + a) powr (1 - s) / (1 - s)\" \"\\<lambda>x. of_real (x + a) powr -s\" \n  \"\\<lambda>n x. (-1) ^ n * pochhammer s n * of_real (x + a) powr -(s + n)\" \n  0 N \"\\<zeta> s\" \"{}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. euler_maclaurin_nat'\n     (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))\n     (\\<lambda>x. complex_of_real (x + a) powr - s)\n     (\\<lambda>n x.\n         (- 1) ^ n * pochhammer s n *\n         complex_of_real (x + a) powr - (s + of_nat n))\n     0 N (\\<zeta> s) {}", "proof (standard, goal_cases)"], ["proof (state)\ngoal (7 subgoals):\n 1. finite {}\n 2. (\\<lambda>x.\n        (- 1) ^ 0 * pochhammer s 0 *\n        complex_of_real (x + a) powr - (s + of_nat 0)) =\n    (\\<lambda>x. complex_of_real (x + a) powr - s)\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow>\n       continuous_on {real 0..}\n        (\\<lambda>x.\n            (- 1) ^ k * pochhammer s k *\n            complex_of_real (x + a) powr - (s + of_nat k))\n 4. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 0..} - {}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              (- 1) ^ k * pochhammer s k *\n                              complex_of_real (x + a) powr\n                              - (s + of_nat k)) has_vector_derivative\n                          (- 1) ^ Suc k * pochhammer s (Suc k) *\n                          complex_of_real (x + a) powr\n                          - (s + of_nat (Suc k)))\n                          (at x)\n 5. continuous_on {real 0..}\n     (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))\n 6. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 7. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "case 2"], ["proof (state)\nthis:\n  \n\ngoal (7 subgoals):\n 1. finite {}\n 2. (\\<lambda>x.\n        (- 1) ^ 0 * pochhammer s 0 *\n        complex_of_real (x + a) powr - (s + of_nat 0)) =\n    (\\<lambda>x. complex_of_real (x + a) powr - s)\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow>\n       continuous_on {real 0..}\n        (\\<lambda>x.\n            (- 1) ^ k * pochhammer s k *\n            complex_of_real (x + a) powr - (s + of_nat k))\n 4. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 0..} - {}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              (- 1) ^ k * pochhammer s k *\n                              complex_of_real (x + a) powr\n                              - (s + of_nat k)) has_vector_derivative\n                          (- 1) ^ Suc k * pochhammer s (Suc k) *\n                          complex_of_real (x + a) powr\n                          - (s + of_nat (Suc k)))\n                          (at x)\n 5. continuous_on {real 0..}\n     (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))\n 6. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 7. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (- 1) ^ 0 * pochhammer s 0 *\n        complex_of_real (x + a) powr - (s + of_nat 0)) =\n    (\\<lambda>x. complex_of_real (x + a) powr - s)", "by (simp add: powr_minus field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (- 1) ^ 0 * pochhammer s 0 *\n      complex_of_real (x + a) powr - (s + of_nat 0)) =\n  (\\<lambda>x. complex_of_real (x + a) powr - s)\n\ngoal (6 subgoals):\n 1. finite {}\n 2. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow>\n       continuous_on {real 0..}\n        (\\<lambda>x.\n            (- 1) ^ k * pochhammer s k *\n            complex_of_real (x + a) powr - (s + of_nat k))\n 3. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 0..} - {}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              (- 1) ^ k * pochhammer s k *\n                              complex_of_real (x + a) powr\n                              - (s + of_nat k)) has_vector_derivative\n                          (- 1) ^ Suc k * pochhammer s (Suc k) *\n                          complex_of_real (x + a) powr\n                          - (s + of_nat (Suc k)))\n                          (at x)\n 4. continuous_on {real 0..}\n     (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))\n 5. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 6. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. finite {}\n 2. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow>\n       continuous_on {real 0..}\n        (\\<lambda>x.\n            (- 1) ^ k * pochhammer s k *\n            complex_of_real (x + a) powr - (s + of_nat k))\n 3. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 0..} - {}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              (- 1) ^ k * pochhammer s k *\n                              complex_of_real (x + a) powr\n                              - (s + of_nat k)) has_vector_derivative\n                          (- 1) ^ Suc k * pochhammer s (Suc k) *\n                          complex_of_real (x + a) powr\n                          - (s + of_nat (Suc k)))\n                          (at x)\n 4. continuous_on {real 0..}\n     (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))\n 5. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 6. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "case (3 k)"], ["proof (state)\nthis:\n  k \\<le> 2 * N + 1\n\ngoal (6 subgoals):\n 1. finite {}\n 2. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow>\n       continuous_on {real 0..}\n        (\\<lambda>x.\n            (- 1) ^ k * pochhammer s k *\n            complex_of_real (x + a) powr - (s + of_nat k))\n 3. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 0..} - {}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              (- 1) ^ k * pochhammer s k *\n                              complex_of_real (x + a) powr\n                              - (s + of_nat k)) has_vector_derivative\n                          (- 1) ^ Suc k * pochhammer s (Suc k) *\n                          complex_of_real (x + a) powr\n                          - (s + of_nat (Suc k)))\n                          (at x)\n 4. continuous_on {real 0..}\n     (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))\n 5. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 6. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "have \"complex_of_real x + complex_of_real a = 0 \\<longleftrightarrow> x = -a\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (complex_of_real x + complex_of_real a = 0) = (x = - a)", "by (simp only: of_real_add [symmetric] of_real_eq_0_iff add_eq_0_iff2)"], ["proof (state)\nthis:\n  (complex_of_real ?x + complex_of_real a = 0) = (?x = - a)\n\ngoal (6 subgoals):\n 1. finite {}\n 2. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow>\n       continuous_on {real 0..}\n        (\\<lambda>x.\n            (- 1) ^ k * pochhammer s k *\n            complex_of_real (x + a) powr - (s + of_nat k))\n 3. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 0..} - {}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              (- 1) ^ k * pochhammer s k *\n                              complex_of_real (x + a) powr\n                              - (s + of_nat k)) has_vector_derivative\n                          (- 1) ^ Suc k * pochhammer s (Suc k) *\n                          complex_of_real (x + a) powr\n                          - (s + of_nat (Suc k)))\n                          (at x)\n 4. continuous_on {real 0..}\n     (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))\n 5. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 6. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "with a s"], ["proof (chain)\npicking this:\n  0 < a\n  1 < Re s\n  (complex_of_real ?x + complex_of_real a = 0) = (?x = - a)", "show ?case"], ["proof (prove)\nusing this:\n  0 < a\n  1 < Re s\n  (complex_of_real ?x + complex_of_real a = 0) = (?x = - a)\n\ngoal (1 subgoal):\n 1. continuous_on {real 0..}\n     (\\<lambda>x.\n         (- 1) ^ k * pochhammer s k *\n         complex_of_real (x + a) powr - (s + of_nat k))", "by (intro continuous_intros) (auto simp: add_nonneg_nonneg)"], ["proof (state)\nthis:\n  continuous_on {real 0..}\n   (\\<lambda>x.\n       (- 1) ^ k * pochhammer s k *\n       complex_of_real (x + a) powr - (s + of_nat k))\n\ngoal (5 subgoals):\n 1. finite {}\n 2. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 0..} - {}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              (- 1) ^ k * pochhammer s k *\n                              complex_of_real (x + a) powr\n                              - (s + of_nat k)) has_vector_derivative\n                          (- 1) ^ Suc k * pochhammer s (Suc k) *\n                          complex_of_real (x + a) powr\n                          - (s + of_nat (Suc k)))\n                          (at x)\n 3. continuous_on {real 0..}\n     (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))\n 4. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 5. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. finite {}\n 2. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 0..} - {}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              (- 1) ^ k * pochhammer s k *\n                              complex_of_real (x + a) powr\n                              - (s + of_nat k)) has_vector_derivative\n                          (- 1) ^ Suc k * pochhammer s (Suc k) *\n                          complex_of_real (x + a) powr\n                          - (s + of_nat (Suc k)))\n                          (at x)\n 3. continuous_on {real 0..}\n     (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))\n 4. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 5. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "case (4 k x)"], ["proof (state)\nthis:\n  k \\<le> 2 * N\n  x \\<in> {real 0..} - {}\n\ngoal (5 subgoals):\n 1. finite {}\n 2. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 0..} - {}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              (- 1) ^ k * pochhammer s k *\n                              complex_of_real (x + a) powr\n                              - (s + of_nat k)) has_vector_derivative\n                          (- 1) ^ Suc k * pochhammer s (Suc k) *\n                          complex_of_real (x + a) powr\n                          - (s + of_nat (Suc k)))\n                          (at x)\n 3. continuous_on {real 0..}\n     (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))\n 4. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 5. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "with a"], ["proof (chain)\npicking this:\n  0 < a\n  k \\<le> 2 * N\n  x \\<in> {real 0..} - {}", "have \"0 < x + a\""], ["proof (prove)\nusing this:\n  0 < a\n  k \\<le> 2 * N\n  x \\<in> {real 0..} - {}\n\ngoal (1 subgoal):\n 1. 0 < x + a", "by simp"], ["proof (state)\nthis:\n  0 < x + a\n\ngoal (5 subgoals):\n 1. finite {}\n 2. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 0..} - {}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              (- 1) ^ k * pochhammer s k *\n                              complex_of_real (x + a) powr\n                              - (s + of_nat k)) has_vector_derivative\n                          (- 1) ^ Suc k * pochhammer s (Suc k) *\n                          complex_of_real (x + a) powr\n                          - (s + of_nat (Suc k)))\n                          (at x)\n 3. continuous_on {real 0..}\n     (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))\n 4. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 5. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "hence *: \"complex_of_real x + complex_of_real a \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\""], ["proof (prove)\nusing this:\n  0 < x + a\n\ngoal (1 subgoal):\n 1. complex_of_real x + complex_of_real a\n    \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "using nonpos_Reals_of_real_iff[of \"x+a\", unfolded of_real_add]"], ["proof (prove)\nusing this:\n  0 < x + a\n  (of_real x + of_real a \\<in> \\<real>\\<^sub>\\<le>\\<^sub>0) =\n  (x + a \\<le> 0)\n\ngoal (1 subgoal):\n 1. complex_of_real x + complex_of_real a\n    \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "by auto"], ["proof (state)\nthis:\n  complex_of_real x + complex_of_real a \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (5 subgoals):\n 1. finite {}\n 2. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 0..} - {}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              (- 1) ^ k * pochhammer s k *\n                              complex_of_real (x + a) powr\n                              - (s + of_nat k)) has_vector_derivative\n                          (- 1) ^ Suc k * pochhammer s (Suc k) *\n                          complex_of_real (x + a) powr\n                          - (s + of_nat (Suc k)))\n                          (at x)\n 3. continuous_on {real 0..}\n     (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))\n 4. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 5. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "have **: \"pochhammer z (Suc n) = - pochhammer z n * (-z - of_nat n :: complex)\" for z n"], ["proof (prove)\ngoal (1 subgoal):\n 1. pochhammer z (Suc n) = - pochhammer z n * (- z - of_nat n)", "by (simp add: pochhammer_rec' field_simps)"], ["proof (state)\nthis:\n  pochhammer ?z (Suc ?n) = - pochhammer ?z ?n * (- ?z - of_nat ?n)\n\ngoal (5 subgoals):\n 1. finite {}\n 2. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 0..} - {}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              (- 1) ^ k * pochhammer s k *\n                              complex_of_real (x + a) powr\n                              - (s + of_nat k)) has_vector_derivative\n                          (- 1) ^ Suc k * pochhammer s (Suc k) *\n                          complex_of_real (x + a) powr\n                          - (s + of_nat (Suc k)))\n                          (at x)\n 3. continuous_on {real 0..}\n     (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))\n 4. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 5. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "show \"((\\<lambda>x. (- 1) ^ k * pochhammer s k * of_real (x + a) powr - (s + of_nat k)) \n          has_vector_derivative (- 1) ^ Suc k * pochhammer s (Suc k) *\n            of_real (x + a) powr - (s + of_nat (Suc k))) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         (- 1) ^ k * pochhammer s k *\n         complex_of_real (x + a) powr\n         - (s + of_nat k)) has_vector_derivative\n     (- 1) ^ Suc k * pochhammer s (Suc k) *\n     complex_of_real (x + a) powr - (s + of_nat (Suc k)))\n     (at x)", "by (insert 4 *, (rule has_vector_derivative_real_field derivative_eq_intros refl | simp)+)\n       (auto simp: divide_simps powr_add powr_diff powr_minus **)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       (- 1) ^ k * pochhammer s k *\n       complex_of_real (x + a) powr - (s + of_nat k)) has_vector_derivative\n   (- 1) ^ Suc k * pochhammer s (Suc k) *\n   complex_of_real (x + a) powr - (s + of_nat (Suc k)))\n   (at x)\n\ngoal (4 subgoals):\n 1. finite {}\n 2. continuous_on {real 0..}\n     (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))\n 3. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 4. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. finite {}\n 2. continuous_on {real 0..}\n     (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))\n 3. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 4. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "case 5"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. finite {}\n 2. continuous_on {real 0..}\n     (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))\n 3. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 4. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "with s a"], ["proof (chain)\npicking this:\n  1 < Re s\n  0 < a", "show ?case"], ["proof (prove)\nusing this:\n  1 < Re s\n  0 < a\n\ngoal (1 subgoal):\n 1. continuous_on {real 0..}\n     (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))", "by (auto intro!: continuous_intros simp: minus_equation_iff add_eq_0_iff)"], ["proof (state)\nthis:\n  continuous_on {real 0..}\n   (\\<lambda>x. complex_of_real (x + a) powr (1 - s) / (1 - s))\n\ngoal (3 subgoals):\n 1. finite {}\n 2. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 3. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. finite {}\n 2. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 3. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "case (6 x)"], ["proof (state)\nthis:\n  x \\<in> {real 0..} - {}\n\ngoal (3 subgoals):\n 1. finite {}\n 2. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 3. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "with a"], ["proof (chain)\npicking this:\n  0 < a\n  x \\<in> {real 0..} - {}", "have \"0 < x + a\""], ["proof (prove)\nusing this:\n  0 < a\n  x \\<in> {real 0..} - {}\n\ngoal (1 subgoal):\n 1. 0 < x + a", "by simp"], ["proof (state)\nthis:\n  0 < x + a\n\ngoal (3 subgoals):\n 1. finite {}\n 2. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 3. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "hence *: \"complex_of_real x + complex_of_real a \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\""], ["proof (prove)\nusing this:\n  0 < x + a\n\ngoal (1 subgoal):\n 1. complex_of_real x + complex_of_real a\n    \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "using nonpos_Reals_of_real_iff[of \"x+a\", unfolded of_real_add]"], ["proof (prove)\nusing this:\n  0 < x + a\n  (of_real x + of_real a \\<in> \\<real>\\<^sub>\\<le>\\<^sub>0) =\n  (x + a \\<le> 0)\n\ngoal (1 subgoal):\n 1. complex_of_real x + complex_of_real a\n    \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "by auto"], ["proof (state)\nthis:\n  complex_of_real x + complex_of_real a \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (3 subgoals):\n 1. finite {}\n 2. \\<And>x.\n       x \\<in> {real 0..} - {} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (x + a) powr (1 - s) /\n            (1 - s)) has_vector_derivative\n        complex_of_real (x + a) powr - s)\n        (at x)\n 3. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real (x + a) powr (1 - s) /\n         (1 - s)) has_vector_derivative\n     complex_of_real (x + a) powr - s)\n     (at x)", "unfolding of_real_add"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         (complex_of_real x + complex_of_real a) powr (1 - s) /\n         (1 - s)) has_vector_derivative\n     (complex_of_real x + complex_of_real a) powr - s)\n     (at x)", "by (insert 6 s *, (rule has_vector_derivative_real_field derivative_eq_intros refl | \n          force simp add: minus_equation_iff)+)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       complex_of_real (x + a) powr (1 - s) / (1 - s)) has_vector_derivative\n   complex_of_real (x + a) powr - s)\n   (at x)\n\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "case 7"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "from s a"], ["proof (chain)\npicking this:\n  1 < Re s\n  0 < a", "have \"(\\<lambda>k. (of_nat k + of_real a) powr -s) sums \\<zeta> s\""], ["proof (prove)\nusing this:\n  1 < Re s\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<lambda>k. (of_nat k + complex_of_real a) powr - s) sums \\<zeta> s", "unfolding \\<zeta>_def"], ["proof (prove)\nusing this:\n  1 < Re s\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<lambda>k. (of_nat k + complex_of_real a) powr - s) sums\n    (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)", "by (intro summable_sums summable_hurwitz_zeta) auto"], ["proof (state)\nthis:\n  (\\<lambda>k. (of_nat k + complex_of_real a) powr - s) sums \\<zeta> s\n\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "hence 1: \"(\\<lambda>b. (\\<Sum>k=0..b. (of_nat k + of_real a) powr -s)) \\<longlonglongrightarrow> \\<zeta> s\""], ["proof (prove)\nusing this:\n  (\\<lambda>k. (of_nat k + complex_of_real a) powr - s) sums \\<zeta> s\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. \\<Sum>k = 0..b. (of_nat k + complex_of_real a) powr - s)\n    \\<longlonglongrightarrow> \\<zeta> s", "by (simp add: sums_def')"], ["proof (state)\nthis:\n  (\\<lambda>b. \\<Sum>k = 0..b. (of_nat k + complex_of_real a) powr - s)\n  \\<longlonglongrightarrow> \\<zeta> s\n\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "{"], ["proof (state)\nthis:\n  (\\<lambda>b. \\<Sum>k = 0..b. (of_nat k + complex_of_real a) powr - s)\n  \\<longlonglongrightarrow> \\<zeta> s\n\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "fix z"], ["proof (state)\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "assume \"Re z < 0\""], ["proof (state)\nthis:\n  Re z < 0\n\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "hence \"((\\<lambda>b. (a + real b) powr Re z) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\nusing this:\n  Re z < 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. (a + real b) powr Re z) \\<longlonglongrightarrow> 0", "by (intro tendsto_neg_powr filterlim_tendsto_add_at_top filterlim_real_sequentially) auto"], ["proof (state)\nthis:\n  (\\<lambda>b. (a + real b) powr Re z) \\<longlonglongrightarrow> 0\n\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "also"], ["proof (state)\nthis:\n  (\\<lambda>b. (a + real b) powr Re z) \\<longlonglongrightarrow> 0\n\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "have \"(\\<lambda>b. (a + real b) powr Re z) = (\\<lambda>b. norm ((of_nat b + a) powr z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. (a + real b) powr Re z) =\n    (\\<lambda>b. cmod (complex_of_real (real b + a) powr z))", "using a"], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. (a + real b) powr Re z) =\n    (\\<lambda>b. cmod (complex_of_real (real b + a) powr z))", "by (subst norm_powr_real_powr) (auto simp: add_ac)"], ["proof (state)\nthis:\n  (\\<lambda>b. (a + real b) powr Re z) =\n  (\\<lambda>b. cmod (complex_of_real (real b + a) powr z))\n\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>b. cmod (complex_of_real (real b + a) powr z))\n  \\<longlonglongrightarrow> 0", "have \"((\\<lambda>b. (of_nat b + a) powr z) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\nusing this:\n  (\\<lambda>b. cmod (complex_of_real (real b + a) powr z))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. complex_of_real (real b + a) powr z)\n    \\<longlonglongrightarrow> 0", "by (subst (asm) tendsto_norm_zero_iff) simp"], ["proof (state)\nthis:\n  (\\<lambda>b. complex_of_real (real b + a) powr z)\n  \\<longlonglongrightarrow> 0\n\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "}"], ["proof (state)\nthis:\n  Re ?z2 < 0 \\<Longrightarrow>\n  (\\<lambda>b. complex_of_real (real b + a) powr ?z2)\n  \\<longlonglongrightarrow> 0\n\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "note * = this"], ["proof (state)\nthis:\n  Re ?z2 < 0 \\<Longrightarrow>\n  (\\<lambda>b. complex_of_real (real b + a) powr ?z2)\n  \\<longlonglongrightarrow> 0\n\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "have \"(\\<lambda>b. (of_nat b + a) powr (1 - s) / (1 - s)) \\<longlonglongrightarrow> 0 / (1 - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. complex_of_real (real b + a) powr (1 - s) / (1 - s))\n    \\<longlonglongrightarrow> 0 / (1 - s)", "using s"], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. complex_of_real (real b + a) powr (1 - s) / (1 - s))\n    \\<longlonglongrightarrow> 0 / (1 - s)", "by (intro tendsto_divide tendsto_const *) auto"], ["proof (state)\nthis:\n  (\\<lambda>b. complex_of_real (real b + a) powr (1 - s) / (1 - s))\n  \\<longlonglongrightarrow> 0 / (1 - s)\n\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "hence 2: \"(\\<lambda>b. (of_nat b + a) powr (1 - s) / (1 - s)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>b. complex_of_real (real b + a) powr (1 - s) / (1 - s))\n  \\<longlonglongrightarrow> 0 / (1 - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. complex_of_real (real b + a) powr (1 - s) / (1 - s))\n    \\<longlonglongrightarrow> 0", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>b. complex_of_real (real b + a) powr (1 - s) / (1 - s))\n  \\<longlonglongrightarrow> 0\n\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "have \"(\\<lambda>b. (\\<Sum>i<2 * N + 1. (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n             ((- 1) ^ i * pochhammer s i * (of_nat b + a) powr -(s + of_nat i))))\n          \\<longlonglongrightarrow> (\\<Sum>i<2 * N + 1. (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R \n                   ((- 1) ^ i * pochhammer s i * 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        \\<Sum>i<2 * N + 1.\n           (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n           ((- 1) ^ i * pochhammer s i *\n            complex_of_real (real b + a) powr - (s + of_nat i)))\n    \\<longlonglongrightarrow> (\\<Sum>i<2 * N + 1.\n                                  (bernoulli' (Suc i) /\n                                   fact (Suc i)) *\\<^sub>R\n                                  ((- 1) ^ i * pochhammer s i * 0))", "using s"], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        \\<Sum>i<2 * N + 1.\n           (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n           ((- 1) ^ i * pochhammer s i *\n            complex_of_real (real b + a) powr - (s + of_nat i)))\n    \\<longlonglongrightarrow> (\\<Sum>i<2 * N + 1.\n                                  (bernoulli' (Suc i) /\n                                   fact (Suc i)) *\\<^sub>R\n                                  ((- 1) ^ i * pochhammer s i * 0))", "by (intro tendsto_intros *) auto"], ["proof (state)\nthis:\n  (\\<lambda>b.\n      \\<Sum>i<2 * N + 1.\n         (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n         ((- 1) ^ i * pochhammer s i *\n          complex_of_real (real b + a) powr - (s + of_nat i)))\n  \\<longlonglongrightarrow> (\\<Sum>i<2 * N + 1.\n                                (bernoulli' (Suc i) /\n                                 fact (Suc i)) *\\<^sub>R\n                                ((- 1) ^ i * pochhammer s i * 0))\n\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "hence 3: \"(\\<lambda>b. (\\<Sum>i<2 * N + 1. (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n              ((- 1) ^ i * pochhammer s i * (of_nat b + a) powr -(s + of_nat i)))) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>b.\n      \\<Sum>i<2 * N + 1.\n         (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n         ((- 1) ^ i * pochhammer s i *\n          complex_of_real (real b + a) powr - (s + of_nat i)))\n  \\<longlonglongrightarrow> (\\<Sum>i<2 * N + 1.\n                                (bernoulli' (Suc i) /\n                                 fact (Suc i)) *\\<^sub>R\n                                ((- 1) ^ i * pochhammer s i * 0))\n\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        \\<Sum>i<2 * N + 1.\n           (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n           ((- 1) ^ i * pochhammer s i *\n            complex_of_real (real b + a) powr - (s + of_nat i)))\n    \\<longlonglongrightarrow> 0", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>b.\n      \\<Sum>i<2 * N + 1.\n         (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n         ((- 1) ^ i * pochhammer s i *\n          complex_of_real (real b + a) powr - (s + of_nat i)))\n  \\<longlonglongrightarrow> 0\n\ngoal (2 subgoals):\n 1. finite {}\n 2. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "from tendsto_diff[OF tendsto_diff[OF 1 2] 3]"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      (\\<Sum>k = 0..x. (of_nat k + complex_of_real a) powr - s) -\n      complex_of_real (real x + a) powr (1 - s) / (1 - s) -\n      (\\<Sum>i<2 * N + 1.\n          (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n          ((- 1) ^ i * pochhammer s i *\n           complex_of_real (real x + a) powr - (s + of_nat i))))\n  \\<longlonglongrightarrow> \\<zeta> s - 0 - 0", "show ?case"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      (\\<Sum>k = 0..x. (of_nat k + complex_of_real a) powr - s) -\n      complex_of_real (real x + a) powr (1 - s) / (1 - s) -\n      (\\<Sum>i<2 * N + 1.\n          (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n          ((- 1) ^ i * pochhammer s i *\n           complex_of_real (real x + a) powr - (s + of_nat i))))\n  \\<longlonglongrightarrow> \\<zeta> s - 0 - 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n        complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n            ((- 1) ^ i * pochhammer s i *\n             complex_of_real (real b + a) powr - (s + of_nat i))))\n    \\<longlonglongrightarrow> \\<zeta> s", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>b.\n      (\\<Sum>k = 0..b. complex_of_real (real k + a) powr - s) -\n      complex_of_real (real b + a) powr (1 - s) / (1 - s) -\n      (\\<Sum>i<2 * N + 1.\n          (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n          ((- 1) ^ i * pochhammer s i *\n           complex_of_real (real b + a) powr - (s + of_nat i))))\n  \\<longlonglongrightarrow> \\<zeta> s\n\ngoal (1 subgoal):\n 1. finite {}", "qed simp_all"], ["", "text \\<open>\n  The pre-$\\zeta$ functions agree with the infinite sum that is used to define the $\\zeta$\n  function for $\\mathfrak{R}(s)>1$.\n\\<close>"], ["", "lemma pre_zeta_aux_conv_zeta:\n  \"pre_zeta_aux N a s = \\<zeta> s + a powr (1 - s) / (1 - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_zeta_aux N a s =\n    \\<zeta> s + complex_of_real a powr (1 - s) / (1 - s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pre_zeta_aux N a s =\n    \\<zeta> s + complex_of_real a powr (1 - s) / (1 - s)", "let ?R = \"(\\<Sum>i=1..N. ((bernoulli (2*i) / fact (2*i)) *\\<^sub>R pochhammer s (2*i - 1) * of_real a powr (-s - (2*i-1))))\""], ["proof (state)\ngoal (1 subgoal):\n 1. pre_zeta_aux N a s =\n    \\<zeta> s + complex_of_real a powr (1 - s) / (1 - s)", "let ?S = \"EM_remainder (Suc (2 * N)) (\\<lambda>x. - (pochhammer s (Suc (2*N)) *\n              of_real (x + a) powr (- 1 - 2 * of_nat N - s))) 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. pre_zeta_aux N a s =\n    \\<zeta> s + complex_of_real a powr (1 - s) / (1 - s)", "from \\<zeta>.euler_maclaurin_strong_nat'[OF le_refl, simplified]"], ["proof (chain)\npicking this:\n  complex_of_real a powr - s =\n  complex_of_real a powr (1 - s) / (1 - s) + \\<zeta> s +\n  (1 / 2) *\\<^sub>R complex_of_real a powr - s +\n  (\\<Sum>i = Suc 0..N.\n      - ((bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n         (pochhammer s (2 * i - Suc 0) *\n          complex_of_real a powr (- s - of_nat (2 * i - Suc 0))))) -\n  EM_remainder (Suc (2 * N))\n   (\\<lambda>x.\n       - (pochhammer s (Suc (2 * N)) *\n          (complex_of_real x + complex_of_real a) powr\n          (- 1 - 2 * of_nat N - s)))\n   0", "have \"of_real a powr -s = a powr (1 - s) / (1 - s) + \\<zeta> s + a powr -s / 2 + (-?R) - ?S\""], ["proof (prove)\nusing this:\n  complex_of_real a powr - s =\n  complex_of_real a powr (1 - s) / (1 - s) + \\<zeta> s +\n  (1 / 2) *\\<^sub>R complex_of_real a powr - s +\n  (\\<Sum>i = Suc 0..N.\n      - ((bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n         (pochhammer s (2 * i - Suc 0) *\n          complex_of_real a powr (- s - of_nat (2 * i - Suc 0))))) -\n  EM_remainder (Suc (2 * N))\n   (\\<lambda>x.\n       - (pochhammer s (Suc (2 * N)) *\n          (complex_of_real x + complex_of_real a) powr\n          (- 1 - 2 * of_nat N - s)))\n   0\n\ngoal (1 subgoal):\n 1. complex_of_real a powr - s =\n    complex_of_real a powr (1 - s) / (1 - s) + \\<zeta> s +\n    complex_of_real a powr - s / 2 +\n    - (\\<Sum>i = 1..N.\n          (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n          pochhammer s (2 * i - 1) *\n          complex_of_real a powr (- s - of_nat (2 * i - 1))) -\n    EM_remainder (Suc (2 * N))\n     (\\<lambda>x.\n         - (pochhammer s (Suc (2 * N)) *\n            complex_of_real (x + a) powr (- 1 - 2 * of_nat N - s)))\n     0", "unfolding sum_negf [symmetric]"], ["proof (prove)\nusing this:\n  complex_of_real a powr - s =\n  complex_of_real a powr (1 - s) / (1 - s) + \\<zeta> s +\n  (1 / 2) *\\<^sub>R complex_of_real a powr - s +\n  (\\<Sum>i = Suc 0..N.\n      - ((bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n         (pochhammer s (2 * i - Suc 0) *\n          complex_of_real a powr (- s - of_nat (2 * i - Suc 0))))) -\n  EM_remainder (Suc (2 * N))\n   (\\<lambda>x.\n       - (pochhammer s (Suc (2 * N)) *\n          (complex_of_real x + complex_of_real a) powr\n          (- 1 - 2 * of_nat N - s)))\n   0\n\ngoal (1 subgoal):\n 1. complex_of_real a powr - s =\n    complex_of_real a powr (1 - s) / (1 - s) + \\<zeta> s +\n    complex_of_real a powr - s / 2 +\n    (\\<Sum>x = 1..N.\n        - ((bernoulli (2 * x) / fact (2 * x)) *\\<^sub>R\n           pochhammer s (2 * x - 1) *\n           complex_of_real a powr (- s - of_nat (2 * x - 1)))) -\n    EM_remainder (Suc (2 * N))\n     (\\<lambda>x.\n         - (pochhammer s (Suc (2 * N)) *\n            complex_of_real (x + a) powr (- 1 - 2 * of_nat N - s)))\n     0", "by (simp add: scaleR_conv_of_real pre_zeta_aux_def mult_ac)"], ["proof (state)\nthis:\n  complex_of_real a powr - s =\n  complex_of_real a powr (1 - s) / (1 - s) + \\<zeta> s +\n  complex_of_real a powr - s / 2 +\n  - (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        pochhammer s (2 * i - 1) *\n        complex_of_real a powr (- s - of_nat (2 * i - 1))) -\n  EM_remainder (Suc (2 * N))\n   (\\<lambda>x.\n       - (pochhammer s (Suc (2 * N)) *\n          complex_of_real (x + a) powr (- 1 - 2 * of_nat N - s)))\n   0\n\ngoal (1 subgoal):\n 1. pre_zeta_aux N a s =\n    \\<zeta> s + complex_of_real a powr (1 - s) / (1 - s)", "thus ?thesis"], ["proof (prove)\nusing this:\n  complex_of_real a powr - s =\n  complex_of_real a powr (1 - s) / (1 - s) + \\<zeta> s +\n  complex_of_real a powr - s / 2 +\n  - (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        pochhammer s (2 * i - 1) *\n        complex_of_real a powr (- s - of_nat (2 * i - 1))) -\n  EM_remainder (Suc (2 * N))\n   (\\<lambda>x.\n       - (pochhammer s (Suc (2 * N)) *\n          complex_of_real (x + a) powr (- 1 - 2 * of_nat N - s)))\n   0\n\ngoal (1 subgoal):\n 1. pre_zeta_aux N a s =\n    \\<zeta> s + complex_of_real a powr (1 - s) / (1 - s)", "unfolding pre_zeta_aux_def"], ["proof (prove)\nusing this:\n  complex_of_real a powr - s =\n  complex_of_real a powr (1 - s) / (1 - s) + \\<zeta> s +\n  complex_of_real a powr - s / 2 +\n  - (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        pochhammer s (2 * i - 1) *\n        complex_of_real a powr (- s - of_nat (2 * i - 1))) -\n  EM_remainder (Suc (2 * N))\n   (\\<lambda>x.\n       - (pochhammer s (Suc (2 * N)) *\n          complex_of_real (x + a) powr (- 1 - 2 * of_nat N - s)))\n   0\n\ngoal (1 subgoal):\n 1. complex_of_real a powr - s / 2 +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        (pochhammer s (2 * i - 1) *\n         complex_of_real a powr (- s - of_nat (2 * i - 1)))) +\n    EM_remainder (Suc (2 * N))\n     (\\<lambda>x.\n         - (pochhammer s (Suc (2 * N)) *\n            complex_of_real (x + a) powr (- 1 - 2 * of_nat N - s)))\n     0 =\n    \\<zeta> s + complex_of_real a powr (1 - s) / (1 - s)", "(* TODO: Field_as_Ring causes some problems with field_simps vs. div_mult_self *)"], ["proof (prove)\nusing this:\n  complex_of_real a powr - s =\n  complex_of_real a powr (1 - s) / (1 - s) + \\<zeta> s +\n  complex_of_real a powr - s / 2 +\n  - (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        pochhammer s (2 * i - 1) *\n        complex_of_real a powr (- s - of_nat (2 * i - 1))) -\n  EM_remainder (Suc (2 * N))\n   (\\<lambda>x.\n       - (pochhammer s (Suc (2 * N)) *\n          complex_of_real (x + a) powr (- 1 - 2 * of_nat N - s)))\n   0\n\ngoal (1 subgoal):\n 1. complex_of_real a powr - s / 2 +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        (pochhammer s (2 * i - 1) *\n         complex_of_real a powr (- s - of_nat (2 * i - 1)))) +\n    EM_remainder (Suc (2 * N))\n     (\\<lambda>x.\n         - (pochhammer s (Suc (2 * N)) *\n            complex_of_real (x + a) powr (- 1 - 2 * of_nat N - s)))\n     0 =\n    \\<zeta> s + complex_of_real a powr (1 - s) / (1 - s)", "by (simp add: field_simps del: div_mult_self3 div_mult_self4 div_mult_self2 div_mult_self1)"], ["proof (state)\nthis:\n  pre_zeta_aux N a s = \\<zeta> s + complex_of_real a powr (1 - s) / (1 - s)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>\n  Since all of the partial pre-$\\zeta$ functions are analytic and agree in the halfspace with \n  $\\mathfrak R(s)>0$, they must agree in their entire domain.\n\\<close>"], ["", "lemma pre_zeta_aux_eq:\n  assumes \"m \\<le> n\" \"a > 0\" \"Re s > -2 * real m\"\n  shows   \"pre_zeta_aux m a s = pre_zeta_aux n a s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_zeta_aux m a s = pre_zeta_aux n a s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pre_zeta_aux m a s = pre_zeta_aux n a s", "have \"pre_zeta_aux n a s - pre_zeta_aux m a s = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_zeta_aux n a s - pre_zeta_aux m a s = 0", "proof (rule analytic_continuation[of \"\\<lambda>s. pre_zeta_aux n a s - pre_zeta_aux m a s\"])"], ["proof (state)\ngoal (8 subgoals):\n 1. (\\<lambda>s. pre_zeta_aux n a s - pre_zeta_aux m a s) holomorphic_on ?S\n 2. open ?S\n 3. connected ?S\n 4. ?U \\<subseteq> ?S\n 5. ?\\<xi> \\<in> ?S\n 6. ?\\<xi> islimpt ?U\n 7. \\<And>z.\n       z \\<in> ?U \\<Longrightarrow>\n       pre_zeta_aux n a z - pre_zeta_aux m a z = 0\n 8. s \\<in> ?S", "show \"(\\<lambda>s. pre_zeta_aux n a s - pre_zeta_aux m a s) holomorphic_on {s. Re s > -2 * real m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. pre_zeta_aux n a s - pre_zeta_aux m a s) holomorphic_on\n    {s. - 2 * real m < Re s}", "using assms"], ["proof (prove)\nusing this:\n  m \\<le> n\n  0 < a\n  - 2 * real m < Re s\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. pre_zeta_aux n a s - pre_zeta_aux m a s) holomorphic_on\n    {s. - 2 * real m < Re s}", "by (intro holomorphic_intros analytic_imp_holomorphic \n                        analytic_on_subset[OF analytic_pre_zeta_aux]) auto"], ["proof (state)\nthis:\n  (\\<lambda>s. pre_zeta_aux n a s - pre_zeta_aux m a s) holomorphic_on\n  {s. - 2 * real m < Re s}\n\ngoal (7 subgoals):\n 1. open {s. - 2 * real m < Re s}\n 2. connected {s. - 2 * real m < Re s}\n 3. ?U \\<subseteq> {s. - 2 * real m < Re s}\n 4. ?\\<xi> \\<in> {s. - 2 * real m < Re s}\n 5. ?\\<xi> islimpt ?U\n 6. \\<And>z.\n       z \\<in> ?U \\<Longrightarrow>\n       pre_zeta_aux n a z - pre_zeta_aux m a z = 0\n 7. s \\<in> {s. - 2 * real m < Re s}", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. open {s. - 2 * real m < Re s}\n 2. connected {s. - 2 * real m < Re s}\n 3. ?U \\<subseteq> {s. - 2 * real m < Re s}\n 4. ?\\<xi> \\<in> {s. - 2 * real m < Re s}\n 5. ?\\<xi> islimpt ?U\n 6. \\<And>z.\n       z \\<in> ?U \\<Longrightarrow>\n       pre_zeta_aux n a z - pre_zeta_aux m a z = 0\n 7. s \\<in> {s. - 2 * real m < Re s}", "fix s"], ["proof (state)\ngoal (7 subgoals):\n 1. open {s. - 2 * real m < Re s}\n 2. connected {s. - 2 * real m < Re s}\n 3. ?U \\<subseteq> {s. - 2 * real m < Re s}\n 4. ?\\<xi> \\<in> {s. - 2 * real m < Re s}\n 5. ?\\<xi> islimpt ?U\n 6. \\<And>z.\n       z \\<in> ?U \\<Longrightarrow>\n       pre_zeta_aux n a z - pre_zeta_aux m a z = 0\n 7. s \\<in> {s. - 2 * real m < Re s}", "assume \"s \\<in> {s. Re s > 1}\""], ["proof (state)\nthis:\n  s \\<in> {s. 1 < Re s}\n\ngoal (7 subgoals):\n 1. open {s. - 2 * real m < Re s}\n 2. connected {s. - 2 * real m < Re s}\n 3. ?U \\<subseteq> {s. - 2 * real m < Re s}\n 4. ?\\<xi> \\<in> {s. - 2 * real m < Re s}\n 5. ?\\<xi> islimpt ?U\n 6. \\<And>z.\n       z \\<in> ?U \\<Longrightarrow>\n       pre_zeta_aux n a z - pre_zeta_aux m a z = 0\n 7. s \\<in> {s. - 2 * real m < Re s}", "with \\<open>a > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < a\n  s \\<in> {s. 1 < Re s}", "show \"pre_zeta_aux n a s - pre_zeta_aux m a s = 0\""], ["proof (prove)\nusing this:\n  0 < a\n  s \\<in> {s. 1 < Re s}\n\ngoal (1 subgoal):\n 1. pre_zeta_aux n a s - pre_zeta_aux m a s = 0", "by (simp add: pre_zeta_aux_conv_zeta)"], ["proof (state)\nthis:\n  pre_zeta_aux n a s - pre_zeta_aux m a s = 0\n\ngoal (6 subgoals):\n 1. open {s. - 2 * real m < Re s}\n 2. connected {s. - 2 * real m < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. - 2 * real m < Re s}\n 4. ?\\<xi> \\<in> {s. - 2 * real m < Re s}\n 5. ?\\<xi> islimpt {s. 1 < Re s}\n 6. s \\<in> {s. - 2 * real m < Re s}", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. open {s. - 2 * real m < Re s}\n 2. connected {s. - 2 * real m < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. - 2 * real m < Re s}\n 4. ?\\<xi> \\<in> {s. - 2 * real m < Re s}\n 5. ?\\<xi> islimpt {s. 1 < Re s}\n 6. s \\<in> {s. - 2 * real m < Re s}", "have \"2 \\<in> {s. Re s > 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<in> {s. 1 < Re s}", "by simp"], ["proof (state)\nthis:\n  2 \\<in> {s. 1 < Re s}\n\ngoal (6 subgoals):\n 1. open {s. - 2 * real m < Re s}\n 2. connected {s. - 2 * real m < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. - 2 * real m < Re s}\n 4. ?\\<xi> \\<in> {s. - 2 * real m < Re s}\n 5. ?\\<xi> islimpt {s. 1 < Re s}\n 6. s \\<in> {s. - 2 * real m < Re s}", "also"], ["proof (state)\nthis:\n  2 \\<in> {s. 1 < Re s}\n\ngoal (6 subgoals):\n 1. open {s. - 2 * real m < Re s}\n 2. connected {s. - 2 * real m < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. - 2 * real m < Re s}\n 4. ?\\<xi> \\<in> {s. - 2 * real m < Re s}\n 5. ?\\<xi> islimpt {s. 1 < Re s}\n 6. s \\<in> {s. - 2 * real m < Re s}", "have \"\\<dots> = interior \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {s. 1 < Re s} = interior {s. 1 < Re s}", "by (intro interior_open [symmetric] open_halfspace_Re_gt)"], ["proof (state)\nthis:\n  {s. 1 < Re s} = interior {s. 1 < Re s}\n\ngoal (6 subgoals):\n 1. open {s. - 2 * real m < Re s}\n 2. connected {s. - 2 * real m < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. - 2 * real m < Re s}\n 4. ?\\<xi> \\<in> {s. - 2 * real m < Re s}\n 5. ?\\<xi> islimpt {s. 1 < Re s}\n 6. s \\<in> {s. - 2 * real m < Re s}", "finally"], ["proof (chain)\npicking this:\n  2 \\<in> interior {s. 1 < Re s}", "show \"2 islimpt {s. Re s > 1}\""], ["proof (prove)\nusing this:\n  2 \\<in> interior {s. 1 < Re s}\n\ngoal (1 subgoal):\n 1. 2 islimpt {s. 1 < Re s}", "by (rule interior_limit_point)"], ["proof (state)\nthis:\n  2 islimpt {s. 1 < Re s}\n\ngoal (5 subgoals):\n 1. open {s. - 2 * real m < Re s}\n 2. connected {s. - 2 * real m < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. - 2 * real m < Re s}\n 4. 2 \\<in> {s. - 2 * real m < Re s}\n 5. s \\<in> {s. - 2 * real m < Re s}", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. open {s. - 2 * real m < Re s}\n 2. connected {s. - 2 * real m < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. - 2 * real m < Re s}\n 4. 2 \\<in> {s. - 2 * real m < Re s}\n 5. s \\<in> {s. - 2 * real m < Re s}", "show \"connected {s. Re s > -2 * real m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected {s. - 2 * real m < Re s}", "using convex_halfspace_gt[of \"-2 * real m\" \"1::complex\"]"], ["proof (prove)\nusing this:\n  convex {x. - 2 * real m < 1 \\<bullet> x}\n\ngoal (1 subgoal):\n 1. connected {s. - 2 * real m < Re s}", "by (intro convex_connected) auto"], ["proof (state)\nthis:\n  connected {s. - 2 * real m < Re s}\n\ngoal (4 subgoals):\n 1. open {s. - 2 * real m < Re s}\n 2. {s. 1 < Re s} \\<subseteq> {s. - 2 * real m < Re s}\n 3. 2 \\<in> {s. - 2 * real m < Re s}\n 4. s \\<in> {s. - 2 * real m < Re s}", "qed (insert assms, auto simp: open_halfspace_Re_gt)"], ["proof (state)\nthis:\n  pre_zeta_aux n a s - pre_zeta_aux m a s = 0\n\ngoal (1 subgoal):\n 1. pre_zeta_aux m a s = pre_zeta_aux n a s", "thus ?thesis"], ["proof (prove)\nusing this:\n  pre_zeta_aux n a s - pre_zeta_aux m a s = 0\n\ngoal (1 subgoal):\n 1. pre_zeta_aux m a s = pre_zeta_aux n a s", "by simp"], ["proof (state)\nthis:\n  pre_zeta_aux m a s = pre_zeta_aux n a s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pre_zeta_aux_eq':\n  assumes \"a > 0\" \"Re s > -2 * real m\" \"Re s > -2 * real n\"\n  shows   \"pre_zeta_aux m a s = pre_zeta_aux n a s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_zeta_aux m a s = pre_zeta_aux n a s", "proof (cases m n rule: linorder_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. m < n \\<Longrightarrow> pre_zeta_aux m a s = pre_zeta_aux n a s\n 2. m = n \\<Longrightarrow> pre_zeta_aux m a s = pre_zeta_aux n a s\n 3. n < m \\<Longrightarrow> pre_zeta_aux m a s = pre_zeta_aux n a s", "case less"], ["proof (state)\nthis:\n  m < n\n\ngoal (3 subgoals):\n 1. m < n \\<Longrightarrow> pre_zeta_aux m a s = pre_zeta_aux n a s\n 2. m = n \\<Longrightarrow> pre_zeta_aux m a s = pre_zeta_aux n a s\n 3. n < m \\<Longrightarrow> pre_zeta_aux m a s = pre_zeta_aux n a s", "with assms"], ["proof (chain)\npicking this:\n  0 < a\n  - 2 * real m < Re s\n  - 2 * real n < Re s\n  m < n", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < a\n  - 2 * real m < Re s\n  - 2 * real n < Re s\n  m < n\n\ngoal (1 subgoal):\n 1. pre_zeta_aux m a s = pre_zeta_aux n a s", "by (intro pre_zeta_aux_eq) auto"], ["proof (state)\nthis:\n  pre_zeta_aux m a s = pre_zeta_aux n a s\n\ngoal (2 subgoals):\n 1. m = n \\<Longrightarrow> pre_zeta_aux m a s = pre_zeta_aux n a s\n 2. n < m \\<Longrightarrow> pre_zeta_aux m a s = pre_zeta_aux n a s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. m = n \\<Longrightarrow> pre_zeta_aux m a s = pre_zeta_aux n a s\n 2. n < m \\<Longrightarrow> pre_zeta_aux m a s = pre_zeta_aux n a s", "case greater"], ["proof (state)\nthis:\n  n < m\n\ngoal (2 subgoals):\n 1. m = n \\<Longrightarrow> pre_zeta_aux m a s = pre_zeta_aux n a s\n 2. n < m \\<Longrightarrow> pre_zeta_aux m a s = pre_zeta_aux n a s", "with assms"], ["proof (chain)\npicking this:\n  0 < a\n  - 2 * real m < Re s\n  - 2 * real n < Re s\n  n < m", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < a\n  - 2 * real m < Re s\n  - 2 * real n < Re s\n  n < m\n\ngoal (1 subgoal):\n 1. pre_zeta_aux m a s = pre_zeta_aux n a s", "by (subst eq_commute, intro pre_zeta_aux_eq) auto"], ["proof (state)\nthis:\n  pre_zeta_aux m a s = pre_zeta_aux n a s\n\ngoal (1 subgoal):\n 1. m = n \\<Longrightarrow> pre_zeta_aux m a s = pre_zeta_aux n a s", "qed auto"], ["", "lemma pre_zeta_aux_eq_pre_zeta:\n  assumes \"Re s > -2 * real n\" and \"a > 0\"\n  shows   \"pre_zeta_aux n a s = pre_zeta a s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_zeta_aux n a s = pre_zeta a s", "unfolding pre_zeta_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_zeta_aux n a s =\n    pre_zeta_aux (nat (1 - \\<lceil>Re s / 2\\<rceil>)) a s", "proof (intro pre_zeta_aux_eq')"], ["proof (state)\ngoal (3 subgoals):\n 1. 0 < a\n 2. - 2 * real n < Re s\n 3. - 2 * real (nat (1 - \\<lceil>Re s / 2\\<rceil>)) < Re s", "from assms"], ["proof (chain)\npicking this:\n  - 2 * real n < Re s\n  0 < a", "show \"- 2 * real (nat (1 - \\<lceil>Re s / 2\\<rceil>)) < Re s\""], ["proof (prove)\nusing this:\n  - 2 * real n < Re s\n  0 < a\n\ngoal (1 subgoal):\n 1. - 2 * real (nat (1 - \\<lceil>Re s / 2\\<rceil>)) < Re s", "by linarith"], ["proof (state)\nthis:\n  - 2 * real (nat (1 - \\<lceil>Re s / 2\\<rceil>)) < Re s\n\ngoal (2 subgoals):\n 1. 0 < a\n 2. - 2 * real n < Re s", "qed (insert assms, simp_all)"], ["", "text \\<open>\n  This means that the idea of iterating that construction infinitely does yield\n  a well-defined entire function.\n\\<close>"], ["", "lemma analytic_pre_zeta: \n  assumes \"a > 0\"\n  shows   \"pre_zeta a analytic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_zeta a analytic_on A", "unfolding analytic_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A. \\<exists>e>0. pre_zeta a holomorphic_on ball x e", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta a holomorphic_on ball x e", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta a holomorphic_on ball x e", "assume \"s \\<in> A\""], ["proof (state)\nthis:\n  s \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta a holomorphic_on ball x e", "let ?B = \"{s'. Re s' > of_int \\<lfloor>Re s\\<rfloor> - 1}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta a holomorphic_on ball x e", "have s: \"s \\<in> ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}", "by simp linarith?"], ["proof (state)\nthis:\n  s \\<in> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta a holomorphic_on ball x e", "moreover"], ["proof (state)\nthis:\n  s \\<in> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta a holomorphic_on ball x e", "have \"open ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}", "by (rule open_halfspace_Re_gt)"], ["proof (state)\nthis:\n  open {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta a holomorphic_on ball x e", "ultimately"], ["proof (chain)\npicking this:\n  s \\<in> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}\n  open {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}", "obtain \\<epsilon> where \\<epsilon>: \"\\<epsilon> > 0\" \"ball s \\<epsilon> \\<subseteq> ?B\""], ["proof (prove)\nusing this:\n  s \\<in> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}\n  open {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<epsilon>.\n        \\<lbrakk>0 < \\<epsilon>;\n         ball s \\<epsilon>\n         \\<subseteq> {s'.\n                      real_of_int \\<lfloor>Re s\\<rfloor> - 1\n                      < Re s'}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding open_contains_ball"], ["proof (prove)\nusing this:\n  s \\<in> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}\n  \\<forall>x\\<in>{s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}.\n     \\<exists>e>0.\n        ball x e\n        \\<subseteq> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<epsilon>.\n        \\<lbrakk>0 < \\<epsilon>;\n         ball s \\<epsilon>\n         \\<subseteq> {s'.\n                      real_of_int \\<lfloor>Re s\\<rfloor> - 1\n                      < Re s'}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 < \\<epsilon>\n  ball s \\<epsilon>\n  \\<subseteq> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta a holomorphic_on ball x e", "define C where \"C = ball s \\<epsilon>\""], ["proof (state)\nthis:\n  C = ball s \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta a holomorphic_on ball x e", "note analytic = analytic_on_subset[OF analytic_pre_zeta_aux]"], ["proof (state)\nthis:\n  \\<lbrakk>0 < ?a1; ?T \\<subseteq> {s. - 2 * real ?n1 < Re s}\\<rbrakk>\n  \\<Longrightarrow> pre_zeta_aux ?n1 ?a1 analytic_on ?T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta a holomorphic_on ball x e", "have \"pre_zeta_aux (nat \\<lceil>- Re s\\<rceil> + 2) a holomorphic_on C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_zeta_aux (nat \\<lceil>- Re s\\<rceil> + 2) a holomorphic_on C", "proof (intro analytic_imp_holomorphic analytic subsetI assms, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       x \\<in> {sa. - 2 * real (nat \\<lceil>- Re s\\<rceil> + 2) < Re sa}", "case (1 w)"], ["proof (state)\nthis:\n  w \\<in> C\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       x \\<in> {sa. - 2 * real (nat \\<lceil>- Re s\\<rceil> + 2) < Re sa}", "with \\<epsilon>"], ["proof (chain)\npicking this:\n  0 < \\<epsilon>\n  ball s \\<epsilon>\n  \\<subseteq> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}\n  w \\<in> C", "have \"w \\<in> ?B\""], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n  ball s \\<epsilon>\n  \\<subseteq> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}\n  w \\<in> C\n\ngoal (1 subgoal):\n 1. w \\<in> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}", "by (auto simp: C_def)"], ["proof (state)\nthis:\n  w \\<in> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       x \\<in> {sa. - 2 * real (nat \\<lceil>- Re s\\<rceil> + 2) < Re sa}", "thus ?case"], ["proof (prove)\nusing this:\n  w \\<in> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}\n\ngoal (1 subgoal):\n 1. w \\<in> {sa. - 2 * real (nat \\<lceil>- Re s\\<rceil> + 2) < Re sa}", "by (auto simp: ceiling_minus)"], ["proof (state)\nthis:\n  w \\<in> {sa. - 2 * real (nat \\<lceil>- Re s\\<rceil> + 2) < Re sa}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pre_zeta_aux (nat \\<lceil>- Re s\\<rceil> + 2) a holomorphic_on C\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta a holomorphic_on ball x e", "also"], ["proof (state)\nthis:\n  pre_zeta_aux (nat \\<lceil>- Re s\\<rceil> + 2) a holomorphic_on C\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta a holomorphic_on ball x e", "have \"?this \\<longleftrightarrow> pre_zeta a holomorphic_on C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (pre_zeta_aux (nat \\<lceil>- Re s\\<rceil> + 2) a holomorphic_on C) =\n    (pre_zeta a holomorphic_on C)", "proof (intro holomorphic_cong refl pre_zeta_aux_eq_pre_zeta assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       - 2 * real (nat \\<lceil>- Re s\\<rceil> + 2) < Re x", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       - 2 * real (nat \\<lceil>- Re s\\<rceil> + 2) < Re x", "assume \"w \\<in> C\""], ["proof (state)\nthis:\n  w \\<in> C\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       - 2 * real (nat \\<lceil>- Re s\\<rceil> + 2) < Re x", "with \\<epsilon>"], ["proof (chain)\npicking this:\n  0 < \\<epsilon>\n  ball s \\<epsilon>\n  \\<subseteq> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}\n  w \\<in> C", "have w: \"w \\<in> ?B\""], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n  ball s \\<epsilon>\n  \\<subseteq> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}\n  w \\<in> C\n\ngoal (1 subgoal):\n 1. w \\<in> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}", "by (auto simp: C_def)"], ["proof (state)\nthis:\n  w \\<in> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       - 2 * real (nat \\<lceil>- Re s\\<rceil> + 2) < Re x", "thus \" - 2 * real (nat \\<lceil>- Re s\\<rceil> + 2) < Re w\""], ["proof (prove)\nusing this:\n  w \\<in> {s'. real_of_int \\<lfloor>Re s\\<rfloor> - 1 < Re s'}\n\ngoal (1 subgoal):\n 1. - 2 * real (nat \\<lceil>- Re s\\<rceil> + 2) < Re w", "by (simp add: ceiling_minus)"], ["proof (state)\nthis:\n  - 2 * real (nat \\<lceil>- Re s\\<rceil> + 2) < Re w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (pre_zeta_aux (nat \\<lceil>- Re s\\<rceil> + 2) a holomorphic_on C) =\n  (pre_zeta a holomorphic_on C)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       \\<exists>e>0. pre_zeta a holomorphic_on ball x e", "finally"], ["proof (chain)\npicking this:\n  pre_zeta a holomorphic_on C", "show \"\\<exists>e>0. pre_zeta a holomorphic_on ball s e\""], ["proof (prove)\nusing this:\n  pre_zeta a holomorphic_on C\n\ngoal (1 subgoal):\n 1. \\<exists>e>0. pre_zeta a holomorphic_on ball s e", "using \\<open>\\<epsilon> > 0\\<close>"], ["proof (prove)\nusing this:\n  pre_zeta a holomorphic_on C\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>e>0. pre_zeta a holomorphic_on ball s e", "unfolding C_def"], ["proof (prove)\nusing this:\n  pre_zeta a holomorphic_on ball s \\<epsilon>\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>e>0. pre_zeta a holomorphic_on ball s e", "by blast"], ["proof (state)\nthis:\n  \\<exists>e>0. pre_zeta a holomorphic_on ball s e\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma holomorphic_pre_zeta [holomorphic_intros]:\n  \"f holomorphic_on A \\<Longrightarrow> a > 0 \\<Longrightarrow> (\\<lambda>z. pre_zeta a (f z)) holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f holomorphic_on A; 0 < a\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z. pre_zeta a (f z)) holomorphic_on A", "using holomorphic_on_compose [OF _ analytic_imp_holomorphic [OF analytic_pre_zeta], of f]"], ["proof (prove)\nusing this:\n  \\<lbrakk>f holomorphic_on ?s; 0 < ?a2\\<rbrakk>\n  \\<Longrightarrow> pre_zeta ?a2 \\<circ> f holomorphic_on ?s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f holomorphic_on A; 0 < a\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z. pre_zeta a (f z)) holomorphic_on A", "by (simp add: o_def)"], ["", "corollary continuous_on_pre_zeta:\n  \"a > 0 \\<Longrightarrow> continuous_on A (pre_zeta a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a \\<Longrightarrow> continuous_on A (pre_zeta a)", "by (intro holomorphic_on_imp_continuous_on holomorphic_intros) auto"], ["", "corollary continuous_on_pre_zeta' [continuous_intros]:\n  \"continuous_on A f \\<Longrightarrow> a > 0 \\<Longrightarrow> continuous_on A (\\<lambda>x. pre_zeta a (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>continuous_on A f; 0 < a\\<rbrakk>\n    \\<Longrightarrow> continuous_on A (\\<lambda>x. pre_zeta a (f x))", "using continuous_on_compose2 [OF continuous_on_pre_zeta, of a A f \"f ` A\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < a; continuous_on A f; f ` A \\<subseteq> f ` A\\<rbrakk>\n  \\<Longrightarrow> continuous_on A (\\<lambda>x. pre_zeta a (f x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>continuous_on A f; 0 < a\\<rbrakk>\n    \\<Longrightarrow> continuous_on A (\\<lambda>x. pre_zeta a (f x))", "by (auto simp: image_iff)"], ["", "corollary continuous_pre_zeta [continuous_intros]:\n  \"a > 0 \\<Longrightarrow> continuous (at s within A) (pre_zeta a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a \\<Longrightarrow> continuous (at s within A) (pre_zeta a)", "by (rule continuous_within_subset[of _ UNIV])\n     (insert continuous_on_pre_zeta[of a UNIV], \n      auto simp: continuous_on_eq_continuous_at open_Compl)"], ["", "corollary continuous_pre_zeta' [continuous_intros]:\n  \"a > 0 \\<Longrightarrow> continuous (at s within A) f \\<Longrightarrow>\n     continuous (at s within A) (\\<lambda>s. pre_zeta a (f s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < a; continuous (at s within A) f\\<rbrakk>\n    \\<Longrightarrow> continuous (at s within A)\n                       (\\<lambda>s. pre_zeta a (f s))", "using continuous_within_compose3[OF continuous_pre_zeta, of a s A f]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < a; continuous (at s within A) f\\<rbrakk>\n  \\<Longrightarrow> continuous (at s within A)\n                     (\\<lambda>x. pre_zeta a (f x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < a; continuous (at s within A) f\\<rbrakk>\n    \\<Longrightarrow> continuous (at s within A)\n                       (\\<lambda>s. pre_zeta a (f s))", "by auto"], ["", "text \\<open>\n  It is now obvious that $\\zeta$ is holomorphic everywhere except 1, where it has a \n  simple pole with residue 1, which we can simply read off.\n\\<close>"], ["", "theorem holomorphic_hurwitz_zeta: \n  assumes \"a > 0\" \"1 \\<notin> A\"\n  shows   \"hurwitz_zeta a holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hurwitz_zeta a holomorphic_on A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hurwitz_zeta a holomorphic_on A", "have \"(\\<lambda>s. pre_zeta a s + complex_of_real a powr (1 - s) / (s - 1)) holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        pre_zeta a s +\n        complex_of_real a powr (1 - s) / (s - 1)) holomorphic_on\n    A", "using assms"], ["proof (prove)\nusing this:\n  0 < a\n  1 \\<notin> A\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        pre_zeta a s +\n        complex_of_real a powr (1 - s) / (s - 1)) holomorphic_on\n    A", "by (auto intro!: holomorphic_intros)"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      pre_zeta a s +\n      complex_of_real a powr (1 - s) / (s - 1)) holomorphic_on\n  A\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a holomorphic_on A", "also"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      pre_zeta a s +\n      complex_of_real a powr (1 - s) / (s - 1)) holomorphic_on\n  A\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a holomorphic_on A", "from assms"], ["proof (chain)\npicking this:\n  0 < a\n  1 \\<notin> A", "have \"?this \\<longleftrightarrow> ?thesis\""], ["proof (prove)\nusing this:\n  0 < a\n  1 \\<notin> A\n\ngoal (1 subgoal):\n 1. ((\\<lambda>s.\n         pre_zeta a s +\n         complex_of_real a powr (1 - s) / (s - 1)) holomorphic_on\n     A) =\n    (hurwitz_zeta a holomorphic_on A)", "by (intro holomorphic_cong) (auto simp: hurwitz_zeta_def)"], ["proof (state)\nthis:\n  ((\\<lambda>s.\n       pre_zeta a s +\n       complex_of_real a powr (1 - s) / (s - 1)) holomorphic_on\n   A) =\n  (hurwitz_zeta a holomorphic_on A)\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a holomorphic_on A", "finally"], ["proof (chain)\npicking this:\n  hurwitz_zeta a holomorphic_on A", "show ?thesis"], ["proof (prove)\nusing this:\n  hurwitz_zeta a holomorphic_on A\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a holomorphic_on A", "."], ["proof (state)\nthis:\n  hurwitz_zeta a holomorphic_on A\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary holomorphic_hurwitz_zeta' [holomorphic_intros]:\n  assumes \"f holomorphic_on A\" and \"a > 0\" and \"\\<And>z. z \\<in> A \\<Longrightarrow> f z \\<noteq> 1\"\n  shows   \"(\\<lambda>x. hurwitz_zeta a (f x)) holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. hurwitz_zeta a (f x)) holomorphic_on A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. hurwitz_zeta a (f x)) holomorphic_on A", "have \"hurwitz_zeta a \\<circ> f holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hurwitz_zeta a \\<circ> f holomorphic_on A", "using assms"], ["proof (prove)\nusing this:\n  f holomorphic_on A\n  0 < a\n  ?z \\<in> A \\<Longrightarrow> f ?z \\<noteq> 1\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a \\<circ> f holomorphic_on A", "by (intro holomorphic_on_compose_gen[of _ _ _ \"f ` A\"] holomorphic_hurwitz_zeta assms) auto"], ["proof (state)\nthis:\n  hurwitz_zeta a \\<circ> f holomorphic_on A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. hurwitz_zeta a (f x)) holomorphic_on A", "thus ?thesis"], ["proof (prove)\nusing this:\n  hurwitz_zeta a \\<circ> f holomorphic_on A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. hurwitz_zeta a (f x)) holomorphic_on A", "by (simp add: o_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. hurwitz_zeta a (f x)) holomorphic_on A\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem holomorphic_zeta: \"1 \\<notin> A\\<Longrightarrow> zeta holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<notin> A \\<Longrightarrow> zeta holomorphic_on A", "unfolding zeta_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<notin> A \\<Longrightarrow> hurwitz_zeta 1 holomorphic_on A", "by (auto intro: holomorphic_intros)"], ["", "corollary holomorphic_zeta' [holomorphic_intros]:\n  assumes \"f holomorphic_on A\" and \"\\<And>z. z \\<in> A \\<Longrightarrow> f z \\<noteq> 1\"\n  shows   \"(\\<lambda>x. zeta (f x)) holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. zeta (f x)) holomorphic_on A", "using assms"], ["proof (prove)\nusing this:\n  f holomorphic_on A\n  ?z \\<in> A \\<Longrightarrow> f ?z \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. zeta (f x)) holomorphic_on A", "unfolding zeta_def"], ["proof (prove)\nusing this:\n  f holomorphic_on A\n  ?z \\<in> A \\<Longrightarrow> f ?z \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. hurwitz_zeta 1 (f x)) holomorphic_on A", "by (auto intro: holomorphic_intros)"], ["", "corollary analytic_hurwitz_zeta: \n  assumes \"a > 0\" \"1 \\<notin> A\"\n  shows   \"hurwitz_zeta a analytic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hurwitz_zeta a analytic_on A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hurwitz_zeta a analytic_on A", "from assms(1)"], ["proof (chain)\npicking this:\n  0 < a", "have \"hurwitz_zeta a holomorphic_on -{1}\""], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a holomorphic_on - {1}", "by (rule holomorphic_hurwitz_zeta) auto"], ["proof (state)\nthis:\n  hurwitz_zeta a holomorphic_on - {1}\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a analytic_on A", "also"], ["proof (state)\nthis:\n  hurwitz_zeta a holomorphic_on - {1}\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a analytic_on A", "have \"?this \\<longleftrightarrow> hurwitz_zeta a analytic_on -{1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (hurwitz_zeta a holomorphic_on - {1}) =\n    (hurwitz_zeta a analytic_on - {1})", "by (intro analytic_on_open [symmetric]) auto"], ["proof (state)\nthis:\n  (hurwitz_zeta a holomorphic_on - {1}) = (hurwitz_zeta a analytic_on - {1})\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a analytic_on A", "finally"], ["proof (chain)\npicking this:\n  hurwitz_zeta a analytic_on - {1}", "show ?thesis"], ["proof (prove)\nusing this:\n  hurwitz_zeta a analytic_on - {1}\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a analytic_on A", "by (rule analytic_on_subset) (insert assms, auto)"], ["proof (state)\nthis:\n  hurwitz_zeta a analytic_on A\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary analytic_zeta: \"1 \\<notin> A \\<Longrightarrow> zeta analytic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<notin> A \\<Longrightarrow> zeta analytic_on A", "unfolding zeta_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<notin> A \\<Longrightarrow> hurwitz_zeta 1 analytic_on A", "by (rule analytic_hurwitz_zeta) auto"], ["", "corollary continuous_on_hurwitz_zeta:\n  \"a > 0 \\<Longrightarrow> 1 \\<notin> A \\<Longrightarrow> continuous_on A (hurwitz_zeta a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < a; 1 \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> continuous_on A (hurwitz_zeta a)", "by (intro holomorphic_on_imp_continuous_on holomorphic_intros) auto"], ["", "corollary continuous_on_hurwitz_zeta' [continuous_intros]:\n  \"continuous_on A f \\<Longrightarrow> a > 0 \\<Longrightarrow> (\\<And>x. x \\<in> A \\<Longrightarrow> f x \\<noteq> 1) \\<Longrightarrow> \n     continuous_on A (\\<lambda>x. hurwitz_zeta a (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>continuous_on A f; 0 < a;\n     \\<And>x. x \\<in> A \\<Longrightarrow> f x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> continuous_on A (\\<lambda>x. hurwitz_zeta a (f x))", "using continuous_on_compose2 [OF continuous_on_hurwitz_zeta, of a \"f ` A\" A f]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < a; 1 \\<notin> f ` A; continuous_on A f;\n   f ` A \\<subseteq> f ` A\\<rbrakk>\n  \\<Longrightarrow> continuous_on A (\\<lambda>x. hurwitz_zeta a (f x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>continuous_on A f; 0 < a;\n     \\<And>x. x \\<in> A \\<Longrightarrow> f x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> continuous_on A (\\<lambda>x. hurwitz_zeta a (f x))", "by (auto simp: image_iff)"], ["", "corollary continuous_on_zeta: \"1 \\<notin> A \\<Longrightarrow> continuous_on A zeta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<notin> A \\<Longrightarrow> continuous_on A zeta", "by (intro holomorphic_on_imp_continuous_on holomorphic_intros) auto"], ["", "corollary continuous_on_zeta' [continuous_intros]:\n  \"continuous_on A f \\<Longrightarrow> (\\<And>x. x \\<in> A \\<Longrightarrow> f x \\<noteq> 1) \\<Longrightarrow> \n     continuous_on A (\\<lambda>x. zeta (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>continuous_on A f;\n     \\<And>x. x \\<in> A \\<Longrightarrow> f x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> continuous_on A (\\<lambda>x. zeta (f x))", "using continuous_on_compose2 [OF continuous_on_zeta, of \"f ` A\" A f]"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 \\<notin> f ` A; continuous_on A f;\n   f ` A \\<subseteq> f ` A\\<rbrakk>\n  \\<Longrightarrow> continuous_on A (\\<lambda>x. zeta (f x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>continuous_on A f;\n     \\<And>x. x \\<in> A \\<Longrightarrow> f x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> continuous_on A (\\<lambda>x. zeta (f x))", "by (auto simp: image_iff)"], ["", "corollary continuous_hurwitz_zeta [continuous_intros]:\n  \"a > 0 \\<Longrightarrow> s \\<noteq> 1 \\<Longrightarrow> continuous (at s within A) (hurwitz_zeta a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < a; s \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> continuous (at s within A) (hurwitz_zeta a)", "by (rule continuous_within_subset[of _ UNIV])\n     (insert continuous_on_hurwitz_zeta[of a \"-{1}\"], \n      auto simp: continuous_on_eq_continuous_at open_Compl)"], ["", "corollary continuous_hurwitz_zeta' [continuous_intros]:\n  \"a > 0 \\<Longrightarrow> f s \\<noteq> 1 \\<Longrightarrow> continuous (at s within A) f \\<Longrightarrow>\n     continuous (at s within A) (\\<lambda>s. hurwitz_zeta a (f s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < a; f s \\<noteq> 1; continuous (at s within A) f\\<rbrakk>\n    \\<Longrightarrow> continuous (at s within A)\n                       (\\<lambda>s. hurwitz_zeta a (f s))", "using continuous_within_compose3[OF continuous_hurwitz_zeta, of a f s A]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < a; f s \\<noteq> 1; continuous (at s within A) f\\<rbrakk>\n  \\<Longrightarrow> continuous (at s within A)\n                     (\\<lambda>x. hurwitz_zeta a (f x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < a; f s \\<noteq> 1; continuous (at s within A) f\\<rbrakk>\n    \\<Longrightarrow> continuous (at s within A)\n                       (\\<lambda>s. hurwitz_zeta a (f s))", "by auto"], ["", "corollary continuous_zeta [continuous_intros]:\n  \"s \\<noteq> 1 \\<Longrightarrow> continuous (at s within A) zeta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<noteq> 1 \\<Longrightarrow> continuous (at s within A) zeta", "unfolding zeta_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<noteq> 1 \\<Longrightarrow>\n    continuous (at s within A) (hurwitz_zeta 1)", "by (intro continuous_intros) auto"], ["", "corollary continuous_zeta' [continuous_intros]:\n  \"f s \\<noteq> 1 \\<Longrightarrow> continuous (at s within A) f \\<Longrightarrow> continuous (at s within A) (\\<lambda>s. zeta (f s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f s \\<noteq> 1; continuous (at s within A) f\\<rbrakk>\n    \\<Longrightarrow> continuous (at s within A) (\\<lambda>s. zeta (f s))", "unfolding zeta_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f s \\<noteq> 1; continuous (at s within A) f\\<rbrakk>\n    \\<Longrightarrow> continuous (at s within A)\n                       (\\<lambda>s. hurwitz_zeta 1 (f s))", "by (intro continuous_intros) auto"], ["", "corollary field_differentiable_at_zeta:\n  assumes \"s \\<noteq> 1\"\n  shows \"zeta field_differentiable at s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta field_differentiable at s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. zeta field_differentiable at s", "have \"zeta holomorphic_on (- {1})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta holomorphic_on - {1}", "using holomorphic_zeta"], ["proof (prove)\nusing this:\n  1 \\<notin> ?A \\<Longrightarrow> zeta holomorphic_on ?A\n\ngoal (1 subgoal):\n 1. zeta holomorphic_on - {1}", "by force"], ["proof (state)\nthis:\n  zeta holomorphic_on - {1}\n\ngoal (1 subgoal):\n 1. zeta field_differentiable at s", "moreover"], ["proof (state)\nthis:\n  zeta holomorphic_on - {1}\n\ngoal (1 subgoal):\n 1. zeta field_differentiable at s", "have \"open (-{1} :: complex set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open (- {1})", "by (intro open_Compl) auto"], ["proof (state)\nthis:\n  open (- {1})\n\ngoal (1 subgoal):\n 1. zeta field_differentiable at s", "ultimately"], ["proof (chain)\npicking this:\n  zeta holomorphic_on - {1}\n  open (- {1})", "show ?thesis"], ["proof (prove)\nusing this:\n  zeta holomorphic_on - {1}\n  open (- {1})\n\ngoal (1 subgoal):\n 1. zeta field_differentiable at s", "using assms"], ["proof (prove)\nusing this:\n  zeta holomorphic_on - {1}\n  open (- {1})\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. zeta field_differentiable at s", "by (auto simp add: holomorphic_on_open open_halfspace_Re_gt open_Diff field_differentiable_def)"], ["proof (state)\nthis:\n  zeta field_differentiable at s\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem is_pole_hurwitz_zeta:\n  assumes \"a > 0\"\n  shows   \"is_pole (hurwitz_zeta a) 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_pole (hurwitz_zeta a) 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_pole (hurwitz_zeta a) 1", "from assms"], ["proof (chain)\npicking this:\n  0 < a", "have \"continuous_on UNIV (pre_zeta a)\""], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. continuous_on UNIV (pre_zeta a)", "by (intro holomorphic_on_imp_continuous_on analytic_imp_holomorphic analytic_pre_zeta)"], ["proof (state)\nthis:\n  continuous_on UNIV (pre_zeta a)\n\ngoal (1 subgoal):\n 1. is_pole (hurwitz_zeta a) 1", "hence \"isCont (pre_zeta a) 1\""], ["proof (prove)\nusing this:\n  continuous_on UNIV (pre_zeta a)\n\ngoal (1 subgoal):\n 1. isCont (pre_zeta a) 1", "by (auto simp: continuous_on_eq_continuous_at)"], ["proof (state)\nthis:\n  isCont (pre_zeta a) 1\n\ngoal (1 subgoal):\n 1. is_pole (hurwitz_zeta a) 1", "hence *: \"pre_zeta a \\<midarrow>1\\<rightarrow> pre_zeta a 1\""], ["proof (prove)\nusing this:\n  isCont (pre_zeta a) 1\n\ngoal (1 subgoal):\n 1. pre_zeta a \\<midarrow>1\\<rightarrow> pre_zeta a 1", "by (simp add: isCont_def)"], ["proof (state)\nthis:\n  pre_zeta a \\<midarrow>1\\<rightarrow> pre_zeta a 1\n\ngoal (1 subgoal):\n 1. is_pole (hurwitz_zeta a) 1", "from assms"], ["proof (chain)\npicking this:\n  0 < a", "have \"isCont (\\<lambda>s. complex_of_real a powr (1 - s)) 1\""], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. isCont (\\<lambda>s. complex_of_real a powr (1 - s)) 1", "by (intro isCont_powr_complex) auto"], ["proof (state)\nthis:\n  isCont (\\<lambda>s. complex_of_real a powr (1 - s)) 1\n\ngoal (1 subgoal):\n 1. is_pole (hurwitz_zeta a) 1", "with assms"], ["proof (chain)\npicking this:\n  0 < a\n  isCont (\\<lambda>s. complex_of_real a powr (1 - s)) 1", "have **: \"(\\<lambda>s. complex_of_real a powr (1 - s)) \\<midarrow>1\\<rightarrow> 1\""], ["proof (prove)\nusing this:\n  0 < a\n  isCont (\\<lambda>s. complex_of_real a powr (1 - s)) 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. complex_of_real a powr (1 - s)) \\<midarrow>1\\<rightarrow> 1", "by (simp add: isCont_def)"], ["proof (state)\nthis:\n  (\\<lambda>s. complex_of_real a powr (1 - s)) \\<midarrow>1\\<rightarrow> 1\n\ngoal (1 subgoal):\n 1. is_pole (hurwitz_zeta a) 1", "have \"(\\<lambda>s::complex. s - 1) \\<midarrow>1\\<rightarrow> 1 - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. s - 1) \\<midarrow>1\\<rightarrow> 1 - 1", "by (intro tendsto_intros)"], ["proof (state)\nthis:\n  (\\<lambda>s. s - 1) \\<midarrow>1\\<rightarrow> 1 - 1\n\ngoal (1 subgoal):\n 1. is_pole (hurwitz_zeta a) 1", "hence \"filterlim (\\<lambda>s::complex. s - 1) (at 0) (at 1)\""], ["proof (prove)\nusing this:\n  (\\<lambda>s. s - 1) \\<midarrow>1\\<rightarrow> 1 - 1\n\ngoal (1 subgoal):\n 1. LIM s at 1. s - 1 :> at 0", "by (auto simp: filterlim_at eventually_at_filter)"], ["proof (state)\nthis:\n  LIM s at 1. s - 1 :> at 0\n\ngoal (1 subgoal):\n 1. is_pole (hurwitz_zeta a) 1", "hence ***: \"filterlim (\\<lambda>s :: complex. a powr (1 - s) / (s - 1)) at_infinity (at 1)\""], ["proof (prove)\nusing this:\n  LIM s at 1. s - 1 :> at 0\n\ngoal (1 subgoal):\n 1. LIM s at 1. complex_of_real a powr (1 - s) / (s - 1) :> at_infinity", "by (intro filterlim_divide_at_infinity [OF **]) auto"], ["proof (state)\nthis:\n  LIM s at 1. complex_of_real a powr (1 - s) / (s - 1) :> at_infinity\n\ngoal (1 subgoal):\n 1. is_pole (hurwitz_zeta a) 1", "have \"is_pole (\\<lambda>s. pre_zeta a s + complex_of_real a powr (1 - s) / (s - 1)) 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_pole\n     (\\<lambda>s. pre_zeta a s + complex_of_real a powr (1 - s) / (s - 1)) 1", "unfolding is_pole_def hurwitz_zeta_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM s at 1.\n       pre_zeta a s +\n       complex_of_real a powr (1 - s) / (s - 1) :> at_infinity", "by (rule tendsto_add_filterlim_at_infinity * ***)+"], ["proof (state)\nthis:\n  is_pole\n   (\\<lambda>s. pre_zeta a s + complex_of_real a powr (1 - s) / (s - 1)) 1\n\ngoal (1 subgoal):\n 1. is_pole (hurwitz_zeta a) 1", "also"], ["proof (state)\nthis:\n  is_pole\n   (\\<lambda>s. pre_zeta a s + complex_of_real a powr (1 - s) / (s - 1)) 1\n\ngoal (1 subgoal):\n 1. is_pole (hurwitz_zeta a) 1", "have \"?this \\<longleftrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_pole\n     (\\<lambda>s. pre_zeta a s + complex_of_real a powr (1 - s) / (s - 1))\n     1 =\n    is_pole (hurwitz_zeta a) 1", "unfolding is_pole_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (LIM s at 1.\n        pre_zeta a s +\n        complex_of_real a powr (1 - s) / (s - 1) :> at_infinity) =\n    filterlim (hurwitz_zeta a) at_infinity (at 1)", "by (intro filterlim_cong refl) (auto simp: eventually_at_filter hurwitz_zeta_def)"], ["proof (state)\nthis:\n  is_pole\n   (\\<lambda>s. pre_zeta a s + complex_of_real a powr (1 - s) / (s - 1)) 1 =\n  is_pole (hurwitz_zeta a) 1\n\ngoal (1 subgoal):\n 1. is_pole (hurwitz_zeta a) 1", "finally"], ["proof (chain)\npicking this:\n  is_pole (hurwitz_zeta a) 1", "show ?thesis"], ["proof (prove)\nusing this:\n  is_pole (hurwitz_zeta a) 1\n\ngoal (1 subgoal):\n 1. is_pole (hurwitz_zeta a) 1", "."], ["proof (state)\nthis:\n  is_pole (hurwitz_zeta a) 1\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary is_pole_zeta: \"is_pole zeta 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_pole zeta 1", "unfolding zeta_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_pole (hurwitz_zeta 1) 1", "by (rule is_pole_hurwitz_zeta) auto"], ["", "theorem zorder_hurwitz_zeta: \n  assumes \"a > 0\"\n  shows   \"zorder (hurwitz_zeta a) 1 = -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zorder (hurwitz_zeta a) 1 = - 1", "proof (rule zorder_eqI[of UNIV])"], ["proof (state)\ngoal (5 subgoals):\n 1. open UNIV\n 2. 1 \\<in> UNIV\n 3. ?g holomorphic_on UNIV\n 4. ?g 1 \\<noteq> 0\n 5. \\<And>w.\n       \\<lbrakk>w \\<in> UNIV; w \\<noteq> 1\\<rbrakk>\n       \\<Longrightarrow> hurwitz_zeta a w = ?g w * (w - 1) powr of_int (- 1)", "fix w :: complex"], ["proof (state)\ngoal (5 subgoals):\n 1. open UNIV\n 2. 1 \\<in> UNIV\n 3. ?g holomorphic_on UNIV\n 4. ?g 1 \\<noteq> 0\n 5. \\<And>w.\n       \\<lbrakk>w \\<in> UNIV; w \\<noteq> 1\\<rbrakk>\n       \\<Longrightarrow> hurwitz_zeta a w = ?g w * (w - 1) powr of_int (- 1)", "assume \"w \\<in> UNIV\" \"w \\<noteq> 1\""], ["proof (state)\nthis:\n  w \\<in> UNIV\n  w \\<noteq> 1\n\ngoal (5 subgoals):\n 1. open UNIV\n 2. 1 \\<in> UNIV\n 3. ?g holomorphic_on UNIV\n 4. ?g 1 \\<noteq> 0\n 5. \\<And>w.\n       \\<lbrakk>w \\<in> UNIV; w \\<noteq> 1\\<rbrakk>\n       \\<Longrightarrow> hurwitz_zeta a w = ?g w * (w - 1) powr of_int (- 1)", "thus \"hurwitz_zeta a w = (pre_zeta a w * (w - 1) + a powr (1 - w)) * (w - 1) powr (of_int (-1))\""], ["proof (prove)\nusing this:\n  w \\<in> UNIV\n  w \\<noteq> 1\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a w =\n    (pre_zeta a w * (w - 1) + complex_of_real a powr (1 - w)) *\n    (w - 1) powr of_int (- 1)", "apply (subst (1) powr_of_int)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>w \\<in> UNIV; w \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> w - 1 \\<noteq> 0\n 2. \\<lbrakk>w \\<in> UNIV; w \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> hurwitz_zeta a w =\n                      (pre_zeta a w * (w - 1) +\n                       complex_of_real a powr (1 - w)) *\n                      (if 0 \\<le> - 1 then (w - 1) ^ nat (- 1)\n                       else inverse ((w - 1) ^ nat (- (- 1))))", "by (auto simp add: hurwitz_zeta_def field_simps)"], ["proof (state)\nthis:\n  hurwitz_zeta a w =\n  (pre_zeta a w * (w - 1) + complex_of_real a powr (1 - w)) *\n  (w - 1) powr of_int (- 1)\n\ngoal (4 subgoals):\n 1. open UNIV\n 2. 1 \\<in> UNIV\n 3. (\\<lambda>w.\n        pre_zeta a w * (w - 1) +\n        complex_of_real a powr (1 - w)) holomorphic_on\n    UNIV\n 4. pre_zeta a 1 * (1 - 1) + complex_of_real a powr (1 - 1) \\<noteq> 0", "qed (insert assms, auto intro!: holomorphic_intros)"], ["", "corollary zorder_zeta: \"zorder zeta 1 = - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zorder zeta 1 = - 1", "unfolding zeta_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. zorder (hurwitz_zeta 1) 1 = - 1", "by (rule zorder_hurwitz_zeta) auto"], ["", "theorem residue_hurwitz_zeta: \n  assumes \"a > 0\"\n  shows   \"residue (hurwitz_zeta a) 1 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (hurwitz_zeta a) 1 = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. residue (hurwitz_zeta a) 1 = 1", "note holo = analytic_imp_holomorphic[OF analytic_pre_zeta]"], ["proof (state)\nthis:\n  0 < ?a1 \\<Longrightarrow> pre_zeta ?a1 holomorphic_on ?S\n\ngoal (1 subgoal):\n 1. residue (hurwitz_zeta a) 1 = 1", "have \"residue (hurwitz_zeta a) 1 = residue (\\<lambda>z. pre_zeta a z + a powr (1 - z) / (z - 1)) 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (hurwitz_zeta a) 1 =\n    residue\n     (\\<lambda>z. pre_zeta a z + complex_of_real a powr (1 - z) / (z - 1)) 1", "by (intro residue_cong) (auto simp: eventually_at_filter hurwitz_zeta_def)"], ["proof (state)\nthis:\n  residue (hurwitz_zeta a) 1 =\n  residue\n   (\\<lambda>z. pre_zeta a z + complex_of_real a powr (1 - z) / (z - 1)) 1\n\ngoal (1 subgoal):\n 1. residue (hurwitz_zeta a) 1 = 1", "also"], ["proof (state)\nthis:\n  residue (hurwitz_zeta a) 1 =\n  residue\n   (\\<lambda>z. pre_zeta a z + complex_of_real a powr (1 - z) / (z - 1)) 1\n\ngoal (1 subgoal):\n 1. residue (hurwitz_zeta a) 1 = 1", "have \"\\<dots> = residue (\\<lambda>z. a powr (1 - z) / (z - 1)) 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue\n     (\\<lambda>z. pre_zeta a z + complex_of_real a powr (1 - z) / (z - 1))\n     1 =\n    residue (\\<lambda>z. complex_of_real a powr (1 - z) / (z - 1)) 1", "using assms"], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. residue\n     (\\<lambda>z. pre_zeta a z + complex_of_real a powr (1 - z) / (z - 1))\n     1 =\n    residue (\\<lambda>z. complex_of_real a powr (1 - z) / (z - 1)) 1", "by (subst residue_add [of UNIV])\n       (auto intro!: holomorphic_intros holo intro: residue_holo[of UNIV, OF _ _ holo])"], ["proof (state)\nthis:\n  residue\n   (\\<lambda>z. pre_zeta a z + complex_of_real a powr (1 - z) / (z - 1)) 1 =\n  residue (\\<lambda>z. complex_of_real a powr (1 - z) / (z - 1)) 1\n\ngoal (1 subgoal):\n 1. residue (hurwitz_zeta a) 1 = 1", "also"], ["proof (state)\nthis:\n  residue\n   (\\<lambda>z. pre_zeta a z + complex_of_real a powr (1 - z) / (z - 1)) 1 =\n  residue (\\<lambda>z. complex_of_real a powr (1 - z) / (z - 1)) 1\n\ngoal (1 subgoal):\n 1. residue (hurwitz_zeta a) 1 = 1", "have \"\\<dots> = complex_of_real a powr (1 - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (\\<lambda>z. complex_of_real a powr (1 - z) / (z - 1)) 1 =\n    complex_of_real a powr (1 - 1)", "using assms"], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. residue (\\<lambda>z. complex_of_real a powr (1 - z) / (z - 1)) 1 =\n    complex_of_real a powr (1 - 1)", "by (intro residue_simple [of UNIV]) (auto intro!: holomorphic_intros)"], ["proof (state)\nthis:\n  residue (\\<lambda>z. complex_of_real a powr (1 - z) / (z - 1)) 1 =\n  complex_of_real a powr (1 - 1)\n\ngoal (1 subgoal):\n 1. residue (hurwitz_zeta a) 1 = 1", "also"], ["proof (state)\nthis:\n  residue (\\<lambda>z. complex_of_real a powr (1 - z) / (z - 1)) 1 =\n  complex_of_real a powr (1 - 1)\n\ngoal (1 subgoal):\n 1. residue (hurwitz_zeta a) 1 = 1", "from assms"], ["proof (chain)\npicking this:\n  0 < a", "have \"\\<dots> = 1\""], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. complex_of_real a powr (1 - 1) = 1", "by simp"], ["proof (state)\nthis:\n  complex_of_real a powr (1 - 1) = 1\n\ngoal (1 subgoal):\n 1. residue (hurwitz_zeta a) 1 = 1", "finally"], ["proof (chain)\npicking this:\n  residue (hurwitz_zeta a) 1 = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  residue (hurwitz_zeta a) 1 = 1\n\ngoal (1 subgoal):\n 1. residue (hurwitz_zeta a) 1 = 1", "."], ["proof (state)\nthis:\n  residue (hurwitz_zeta a) 1 = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary residue_zeta: \"residue zeta 1 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue zeta 1 = 1", "unfolding zeta_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (hurwitz_zeta 1) 1 = 1", "by (rule residue_hurwitz_zeta) auto"], ["", "lemma zeta_bigo_at_1: \"zeta \\<in> O[at 1 within A](\\<lambda>x. 1 / (x - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta \\<in> O[at 1 within A](\\<lambda>x. 1 / (x - 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. zeta \\<in> O[at 1 within A](\\<lambda>x. 1 / (x - 1))", "have \"zeta \\<in> \\<Theta>[at 1 within A](\\<lambda>s. pre_zeta 1 s + 1 / (s - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta\n    \\<in> \\<Theta>[at 1 within A](\\<lambda>s. pre_zeta 1 s + 1 / (s - 1))", "by (intro bigthetaI_cong) (auto simp: eventually_at_filter zeta_def hurwitz_zeta_def)"], ["proof (state)\nthis:\n  zeta \\<in> \\<Theta>[at 1 within A](\\<lambda>s. pre_zeta 1 s + 1 / (s - 1))\n\ngoal (1 subgoal):\n 1. zeta \\<in> O[at 1 within A](\\<lambda>x. 1 / (x - 1))", "also"], ["proof (state)\nthis:\n  zeta \\<in> \\<Theta>[at 1 within A](\\<lambda>s. pre_zeta 1 s + 1 / (s - 1))\n\ngoal (1 subgoal):\n 1. zeta \\<in> O[at 1 within A](\\<lambda>x. 1 / (x - 1))", "have \"(\\<lambda>s. pre_zeta 1 s + 1 / (s - 1)) \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. pre_zeta 1 s + 1 / (s - 1))\n    \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))", "proof (rule sum_in_bigo)"], ["proof (state)\ngoal (2 subgoals):\n 1. pre_zeta 1 \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))\n 2. (\\<lambda>x. 1 / (x - 1))\n    \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))", "have \"continuous_on UNIV (pre_zeta 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV (pre_zeta 1)", "by (intro holomorphic_on_imp_continuous_on holomorphic_intros) auto"], ["proof (state)\nthis:\n  continuous_on UNIV (pre_zeta 1)\n\ngoal (2 subgoals):\n 1. pre_zeta 1 \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))\n 2. (\\<lambda>x. 1 / (x - 1))\n    \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))", "hence \"isCont (pre_zeta 1) 1\""], ["proof (prove)\nusing this:\n  continuous_on UNIV (pre_zeta 1)\n\ngoal (1 subgoal):\n 1. isCont (pre_zeta 1) 1", "by (auto simp: continuous_on_eq_continuous_at)"], ["proof (state)\nthis:\n  isCont (pre_zeta 1) 1\n\ngoal (2 subgoals):\n 1. pre_zeta 1 \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))\n 2. (\\<lambda>x. 1 / (x - 1))\n    \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))", "hence \"continuous (at 1 within A) (pre_zeta 1)\""], ["proof (prove)\nusing this:\n  isCont (pre_zeta 1) 1\n\ngoal (1 subgoal):\n 1. continuous (at 1 within A) (pre_zeta 1)", "by (rule continuous_within_subset) auto"], ["proof (state)\nthis:\n  continuous (at 1 within A) (pre_zeta 1)\n\ngoal (2 subgoals):\n 1. pre_zeta 1 \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))\n 2. (\\<lambda>x. 1 / (x - 1))\n    \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))", "hence \"pre_zeta 1 \\<in> O[at 1 within A](\\<lambda>_. 1)\""], ["proof (prove)\nusing this:\n  continuous (at 1 within A) (pre_zeta 1)\n\ngoal (1 subgoal):\n 1. pre_zeta 1 \\<in> O[at 1 within A](\\<lambda>_. 1)", "by (intro continuous_imp_bigo_1) auto"], ["proof (state)\nthis:\n  pre_zeta 1 \\<in> O[at 1 within A](\\<lambda>_. 1)\n\ngoal (2 subgoals):\n 1. pre_zeta 1 \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))\n 2. (\\<lambda>x. 1 / (x - 1))\n    \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))", "also"], ["proof (state)\nthis:\n  pre_zeta 1 \\<in> O[at 1 within A](\\<lambda>_. 1)\n\ngoal (2 subgoals):\n 1. pre_zeta 1 \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))\n 2. (\\<lambda>x. 1 / (x - 1))\n    \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))", "have ev: \"eventually (\\<lambda>s. s \\<in> ball 1 1 \\<and> s \\<noteq> 1 \\<and> s \\<in> A) (at 1 within A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 1 within A.\n       s \\<in> ball 1 1 \\<and> s \\<noteq> 1 \\<and> s \\<in> A", "by (intro eventually_at_ball') auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at 1 within A.\n     s \\<in> ball 1 1 \\<and> s \\<noteq> 1 \\<and> s \\<in> A\n\ngoal (2 subgoals):\n 1. pre_zeta 1 \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))\n 2. (\\<lambda>x. 1 / (x - 1))\n    \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))", "have \"(\\<lambda>_. 1) \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>_. 1) \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))", "by (intro landau_o.bigI[of 1] eventually_mono[OF ev]) \n         (auto simp: eventually_at_filter norm_divide dist_norm norm_minus_commute field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>_. 1) \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))\n\ngoal (2 subgoals):\n 1. pre_zeta 1 \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))\n 2. (\\<lambda>x. 1 / (x - 1))\n    \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))", "finally"], ["proof (chain)\npicking this:\n  pre_zeta 1 \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))", "show \"pre_zeta 1 \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))\""], ["proof (prove)\nusing this:\n  pre_zeta 1 \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))\n\ngoal (1 subgoal):\n 1. pre_zeta 1 \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))", "."], ["proof (state)\nthis:\n  pre_zeta 1 \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1 / (x - 1))\n    \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))", "qed simp_all"], ["proof (state)\nthis:\n  (\\<lambda>s. pre_zeta 1 s + 1 / (s - 1))\n  \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))\n\ngoal (1 subgoal):\n 1. zeta \\<in> O[at 1 within A](\\<lambda>x. 1 / (x - 1))", "finally"], ["proof (chain)\npicking this:\n  zeta \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))", "show ?thesis"], ["proof (prove)\nusing this:\n  zeta \\<in> O[at 1 within A](\\<lambda>s. 1 / (s - 1))\n\ngoal (1 subgoal):\n 1. zeta \\<in> O[at 1 within A](\\<lambda>x. 1 / (x - 1))", "."], ["proof (state)\nthis:\n  zeta \\<in> O[at 1 within A](\\<lambda>x. 1 / (x - 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem\n  assumes \"a > 0\" \"Re s > 1\"\n  shows hurwitz_zeta_conv_suminf: \"hurwitz_zeta a s = (\\<Sum>n. (of_nat n + of_real a) powr -s)\"\n  and   sums_hurwitz_zeta: \"(\\<lambda>n. (of_nat n + of_real a) powr -s) sums hurwitz_zeta a s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hurwitz_zeta a s =\n    (\\<Sum>n. (of_nat n + complex_of_real a) powr - s) &&&\n    (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n    hurwitz_zeta a s", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. hurwitz_zeta a s = (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)\n 2. (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n    hurwitz_zeta a s", "from assms"], ["proof (chain)\npicking this:\n  0 < a\n  1 < Re s", "have [simp]: \"s \\<noteq> 1\""], ["proof (prove)\nusing this:\n  0 < a\n  1 < Re s\n\ngoal (1 subgoal):\n 1. s \\<noteq> 1", "by auto"], ["proof (state)\nthis:\n  s \\<noteq> 1\n\ngoal (2 subgoals):\n 1. hurwitz_zeta a s = (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)\n 2. (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n    hurwitz_zeta a s", "from assms"], ["proof (chain)\npicking this:\n  0 < a\n  1 < Re s", "have \"hurwitz_zeta a s = pre_zeta_aux 0 a s + of_real a powr (1 - s) / (s - 1)\""], ["proof (prove)\nusing this:\n  0 < a\n  1 < Re s\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a s =\n    pre_zeta_aux 0 a s + complex_of_real a powr (1 - s) / (s - 1)", "by (simp add: hurwitz_zeta_def pre_zeta_def)"], ["proof (state)\nthis:\n  hurwitz_zeta a s =\n  pre_zeta_aux 0 a s + complex_of_real a powr (1 - s) / (s - 1)\n\ngoal (2 subgoals):\n 1. hurwitz_zeta a s = (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)\n 2. (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n    hurwitz_zeta a s", "also"], ["proof (state)\nthis:\n  hurwitz_zeta a s =\n  pre_zeta_aux 0 a s + complex_of_real a powr (1 - s) / (s - 1)\n\ngoal (2 subgoals):\n 1. hurwitz_zeta a s = (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)\n 2. (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n    hurwitz_zeta a s", "from assms"], ["proof (chain)\npicking this:\n  0 < a\n  1 < Re s", "have \"pre_zeta_aux 0 a s = (\\<Sum>n. (of_nat n + of_real a) powr -s) + \n                          of_real a powr (1 - s) / (1 - s)\""], ["proof (prove)\nusing this:\n  0 < a\n  1 < Re s\n\ngoal (1 subgoal):\n 1. pre_zeta_aux 0 a s =\n    (\\<Sum>n. (of_nat n + complex_of_real a) powr - s) +\n    complex_of_real a powr (1 - s) / (1 - s)", "by (intro pre_zeta_aux_conv_zeta)"], ["proof (state)\nthis:\n  pre_zeta_aux 0 a s =\n  (\\<Sum>n. (of_nat n + complex_of_real a) powr - s) +\n  complex_of_real a powr (1 - s) / (1 - s)\n\ngoal (2 subgoals):\n 1. hurwitz_zeta a s = (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)\n 2. (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n    hurwitz_zeta a s", "also"], ["proof (state)\nthis:\n  pre_zeta_aux 0 a s =\n  (\\<Sum>n. (of_nat n + complex_of_real a) powr - s) +\n  complex_of_real a powr (1 - s) / (1 - s)\n\ngoal (2 subgoals):\n 1. hurwitz_zeta a s = (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)\n 2. (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n    hurwitz_zeta a s", "have \"\\<dots> + a powr (1 - s) / (s - 1) = \n               (\\<Sum>n. (of_nat n + of_real a) powr -s) + a powr (1 - s) * (1 / (1 - s) + 1 / (s - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. (of_nat n + complex_of_real a) powr - s) +\n    complex_of_real a powr (1 - s) / (1 - s) +\n    complex_of_real a powr (1 - s) / (s - 1) =\n    (\\<Sum>n. (of_nat n + complex_of_real a) powr - s) +\n    complex_of_real a powr (1 - s) * (1 / (1 - s) + 1 / (s - 1))", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (\\<Sum>n. (of_nat n + complex_of_real a) powr - s) +\n  complex_of_real a powr (1 - s) / (1 - s) +\n  complex_of_real a powr (1 - s) / (s - 1) =\n  (\\<Sum>n. (of_nat n + complex_of_real a) powr - s) +\n  complex_of_real a powr (1 - s) * (1 / (1 - s) + 1 / (s - 1))\n\ngoal (2 subgoals):\n 1. hurwitz_zeta a s = (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)\n 2. (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n    hurwitz_zeta a s", "also"], ["proof (state)\nthis:\n  (\\<Sum>n. (of_nat n + complex_of_real a) powr - s) +\n  complex_of_real a powr (1 - s) / (1 - s) +\n  complex_of_real a powr (1 - s) / (s - 1) =\n  (\\<Sum>n. (of_nat n + complex_of_real a) powr - s) +\n  complex_of_real a powr (1 - s) * (1 / (1 - s) + 1 / (s - 1))\n\ngoal (2 subgoals):\n 1. hurwitz_zeta a s = (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)\n 2. (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n    hurwitz_zeta a s", "have \"1 / (1 - s) + 1 / (s - 1) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / (1 - s) + 1 / (s - 1) = 0", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  1 / (1 - s) + 1 / (s - 1) = 0\n\ngoal (2 subgoals):\n 1. hurwitz_zeta a s = (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)\n 2. (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n    hurwitz_zeta a s", "finally"], ["proof (chain)\npicking this:\n  hurwitz_zeta a s =\n  (\\<Sum>n. (of_nat n + complex_of_real a) powr - s) +\n  complex_of_real a powr (1 - s) * 0", "show \"hurwitz_zeta a s = (\\<Sum>n. (of_nat n + of_real a) powr -s)\""], ["proof (prove)\nusing this:\n  hurwitz_zeta a s =\n  (\\<Sum>n. (of_nat n + complex_of_real a) powr - s) +\n  complex_of_real a powr (1 - s) * 0\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a s = (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)", "by simp"], ["proof (state)\nthis:\n  hurwitz_zeta a s = (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n    hurwitz_zeta a s", "moreover"], ["proof (state)\nthis:\n  hurwitz_zeta a s = (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n    hurwitz_zeta a s", "have \"(\\<lambda>n. (of_nat n + of_real a) powr -s) sums (\\<Sum>n. (of_nat n + of_real a) powr -s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n    (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)", "by (intro summable_sums summable_hurwitz_zeta assms)"], ["proof (state)\nthis:\n  (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n  (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n    hurwitz_zeta a s", "ultimately"], ["proof (chain)\npicking this:\n  hurwitz_zeta a s = (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)\n  (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n  (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)", "show \"(\\<lambda>n. (of_nat n + of_real a) powr -s) sums hurwitz_zeta a s\""], ["proof (prove)\nusing this:\n  hurwitz_zeta a s = (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)\n  (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n  (\\<Sum>n. (of_nat n + complex_of_real a) powr - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n    hurwitz_zeta a s", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n. (of_nat n + complex_of_real a) powr - s) sums\n  hurwitz_zeta a s\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary\n  assumes \"Re s > 1\"\n  shows zeta_conv_suminf: \"zeta s = (\\<Sum>n. of_nat (Suc n) powr -s)\"\n  and   sums_zeta: \"(\\<lambda>n. of_nat (Suc n) powr -s) sums zeta s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta s = (\\<Sum>n. of_nat (Suc n) powr - s) &&&\n    (\\<lambda>n. of_nat (Suc n) powr - s) sums zeta s", "using hurwitz_zeta_conv_suminf[of 1 s] sums_hurwitz_zeta[of 1 s] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < 1; 1 < Re s\\<rbrakk>\n  \\<Longrightarrow> hurwitz_zeta 1 s =\n                    (\\<Sum>n. (of_nat n + complex_of_real 1) powr - s)\n  \\<lbrakk>0 < 1; 1 < Re s\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n.\n                        (of_nat n + complex_of_real 1) powr - s) sums\n                    hurwitz_zeta 1 s\n  1 < Re s\n\ngoal (1 subgoal):\n 1. zeta s = (\\<Sum>n. of_nat (Suc n) powr - s) &&&\n    (\\<lambda>n. of_nat (Suc n) powr - s) sums zeta s", "by (simp_all add: zeta_def add_ac)"], ["", "corollary\n  assumes \"n > 1\"\n  shows zeta_nat_conv_suminf: \"zeta (of_nat n) = (\\<Sum>k. 1 / of_nat (Suc k) ^ n)\"\n  and   sums_zeta_nat: \"(\\<lambda>k. 1 / of_nat (Suc k) ^ n) sums zeta (of_nat n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta (of_nat n) = (\\<Sum>k. 1 / of_nat (Suc k) ^ n) &&&\n    (\\<lambda>k. 1 / of_nat (Suc k) ^ n) sums zeta (of_nat n)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. zeta (of_nat n) = (\\<Sum>k. 1 / of_nat (Suc k) ^ n)\n 2. (\\<lambda>k. 1 / of_nat (Suc k) ^ n) sums zeta (of_nat n)", "have \"(\\<lambda>k. of_nat (Suc k) powr -of_nat n) sums zeta (of_nat n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k. of_nat (Suc k) powr - of_nat n) sums zeta (of_nat n)", "using assms"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<lambda>k. of_nat (Suc k) powr - of_nat n) sums zeta (of_nat n)", "by (intro sums_zeta) auto"], ["proof (state)\nthis:\n  (\\<lambda>k. of_nat (Suc k) powr - of_nat n) sums zeta (of_nat n)\n\ngoal (2 subgoals):\n 1. zeta (of_nat n) = (\\<Sum>k. 1 / of_nat (Suc k) ^ n)\n 2. (\\<lambda>k. 1 / of_nat (Suc k) ^ n) sums zeta (of_nat n)", "also"], ["proof (state)\nthis:\n  (\\<lambda>k. of_nat (Suc k) powr - of_nat n) sums zeta (of_nat n)\n\ngoal (2 subgoals):\n 1. zeta (of_nat n) = (\\<Sum>k. 1 / of_nat (Suc k) ^ n)\n 2. (\\<lambda>k. 1 / of_nat (Suc k) ^ n) sums zeta (of_nat n)", "have \"(\\<lambda>k. of_nat (Suc k) powr -of_nat n) = (\\<lambda>k. 1 / of_nat (Suc k) ^ n :: complex)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k. of_nat (Suc k) powr - of_nat n) =\n    (\\<lambda>k. 1 / of_nat (Suc k) ^ n)", "by (simp add: powr_minus divide_simps del: of_nat_Suc)"], ["proof (state)\nthis:\n  (\\<lambda>k. of_nat (Suc k) powr - of_nat n) =\n  (\\<lambda>k. 1 / of_nat (Suc k) ^ n)\n\ngoal (2 subgoals):\n 1. zeta (of_nat n) = (\\<Sum>k. 1 / of_nat (Suc k) ^ n)\n 2. (\\<lambda>k. 1 / of_nat (Suc k) ^ n) sums zeta (of_nat n)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>k. 1 / of_nat (Suc k) ^ n) sums zeta (of_nat n)", "show \"(\\<lambda>k. 1 / of_nat (Suc k) ^ n) sums zeta (of_nat n)\""], ["proof (prove)\nusing this:\n  (\\<lambda>k. 1 / of_nat (Suc k) ^ n) sums zeta (of_nat n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>k. 1 / of_nat (Suc k) ^ n) sums zeta (of_nat n)", "."], ["proof (state)\nthis:\n  (\\<lambda>k. 1 / of_nat (Suc k) ^ n) sums zeta (of_nat n)\n\ngoal (1 subgoal):\n 1. zeta (of_nat n) = (\\<Sum>k. 1 / of_nat (Suc k) ^ n)", "thus \"zeta (of_nat n) = (\\<Sum>k. 1 / of_nat (Suc k) ^ n)\""], ["proof (prove)\nusing this:\n  (\\<lambda>k. 1 / of_nat (Suc k) ^ n) sums zeta (of_nat n)\n\ngoal (1 subgoal):\n 1. zeta (of_nat n) = (\\<Sum>k. 1 / of_nat (Suc k) ^ n)", "by (simp add: sums_iff)"], ["proof (state)\nthis:\n  zeta (of_nat n) = (\\<Sum>k. 1 / of_nat (Suc k) ^ n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pre_zeta_aux_cnj [simp]: \n  assumes \"a > 0\"\n  shows   \"pre_zeta_aux n a (cnj z) = cnj (pre_zeta_aux n a z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_zeta_aux n a (cnj z) = cnj (pre_zeta_aux n a z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pre_zeta_aux n a (cnj z) = cnj (pre_zeta_aux n a z)", "have \"cnj (pre_zeta_aux n a z) = \n          of_real a powr -cnj z / 2 + (\\<Sum>x=1..n. (bernoulli (2 * x) / fact (2 * x)) *\\<^sub>R\n            a powr (-cnj z - (2*x-1)) * pochhammer (cnj z) (2*x-1)) + EM_remainder (2*n+1)\n          (\\<lambda>x. -(pochhammer (cnj z) (Suc (2 * n)) * \n                  cnj (of_real (x + a) powr (-1 - 2 * of_nat n - z)))) 0\"\n    (is \"_ = _ + ?A + ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj (pre_zeta_aux n a z) =\n    complex_of_real a powr - cnj z / 2 +\n    (\\<Sum>x = 1..n.\n        (bernoulli (2 * x) / fact (2 * x)) *\\<^sub>R\n        complex_of_real a powr (- cnj z - of_nat (2 * x - 1)) *\n        pochhammer (cnj z) (2 * x - 1)) +\n    EM_remainder (2 * n + 1)\n     (\\<lambda>x.\n         - (pochhammer (cnj z) (Suc (2 * n)) *\n            cnj (complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z))))\n     0", "unfolding pre_zeta_aux_def complex_cnj_add"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj (complex_of_real a powr - z / 2) +\n    cnj (\\<Sum>i = 1..n.\n            (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n            (pochhammer z (2 * i - 1) *\n             complex_of_real a powr (- z - of_nat (2 * i - 1)))) +\n    cnj (EM_remainder (Suc (2 * n))\n          (\\<lambda>x.\n              - (pochhammer z (Suc (2 * n)) *\n                 complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n          0) =\n    complex_of_real a powr - cnj z / 2 +\n    (\\<Sum>x = 1..n.\n        (bernoulli (2 * x) / fact (2 * x)) *\\<^sub>R\n        complex_of_real a powr (- cnj z - of_nat (2 * x - 1)) *\n        pochhammer (cnj z) (2 * x - 1)) +\n    EM_remainder (2 * n + 1)\n     (\\<lambda>x.\n         - (pochhammer (cnj z) (Suc (2 * n)) *\n            cnj (complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z))))\n     0", "using assms"], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. cnj (complex_of_real a powr - z / 2) +\n    cnj (\\<Sum>i = 1..n.\n            (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n            (pochhammer z (2 * i - 1) *\n             complex_of_real a powr (- z - of_nat (2 * i - 1)))) +\n    cnj (EM_remainder (Suc (2 * n))\n          (\\<lambda>x.\n              - (pochhammer z (Suc (2 * n)) *\n                 complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z)))\n          0) =\n    complex_of_real a powr - cnj z / 2 +\n    (\\<Sum>x = 1..n.\n        (bernoulli (2 * x) / fact (2 * x)) *\\<^sub>R\n        complex_of_real a powr (- cnj z - of_nat (2 * x - 1)) *\n        pochhammer (cnj z) (2 * x - 1)) +\n    EM_remainder (2 * n + 1)\n     (\\<lambda>x.\n         - (pochhammer (cnj z) (Suc (2 * n)) *\n            cnj (complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z))))\n     0", "by (subst EM_remainder_cnj [symmetric]) \n       (auto intro!: continuous_intros simp: cnj_powr add_eq_0_iff mult_ac)"], ["proof (state)\nthis:\n  cnj (pre_zeta_aux n a z) =\n  complex_of_real a powr - cnj z / 2 +\n  (\\<Sum>x = 1..n.\n      (bernoulli (2 * x) / fact (2 * x)) *\\<^sub>R\n      complex_of_real a powr (- cnj z - of_nat (2 * x - 1)) *\n      pochhammer (cnj z) (2 * x - 1)) +\n  EM_remainder (2 * n + 1)\n   (\\<lambda>x.\n       - (pochhammer (cnj z) (Suc (2 * n)) *\n          cnj (complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z))))\n   0\n\ngoal (1 subgoal):\n 1. pre_zeta_aux n a (cnj z) = cnj (pre_zeta_aux n a z)", "also"], ["proof (state)\nthis:\n  cnj (pre_zeta_aux n a z) =\n  complex_of_real a powr - cnj z / 2 +\n  (\\<Sum>x = 1..n.\n      (bernoulli (2 * x) / fact (2 * x)) *\\<^sub>R\n      complex_of_real a powr (- cnj z - of_nat (2 * x - 1)) *\n      pochhammer (cnj z) (2 * x - 1)) +\n  EM_remainder (2 * n + 1)\n   (\\<lambda>x.\n       - (pochhammer (cnj z) (Suc (2 * n)) *\n          cnj (complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z))))\n   0\n\ngoal (1 subgoal):\n 1. pre_zeta_aux n a (cnj z) = cnj (pre_zeta_aux n a z)", "have \"?B = EM_remainder (2*n+1)\n        (\\<lambda>x. -(pochhammer (cnj z) (Suc (2 * n)) * of_real (x + a) powr (-1 - 2 * of_nat n - cnj z))) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder (2 * n + 1)\n     (\\<lambda>x.\n         - (pochhammer (cnj z) (Suc (2 * n)) *\n            cnj (complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z))))\n     0 =\n    EM_remainder (2 * n + 1)\n     (\\<lambda>x.\n         - (pochhammer (cnj z) (Suc (2 * n)) *\n            complex_of_real (x + a) powr (- 1 - 2 * of_nat n - cnj z)))\n     0", "using assms"], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. EM_remainder (2 * n + 1)\n     (\\<lambda>x.\n         - (pochhammer (cnj z) (Suc (2 * n)) *\n            cnj (complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z))))\n     0 =\n    EM_remainder (2 * n + 1)\n     (\\<lambda>x.\n         - (pochhammer (cnj z) (Suc (2 * n)) *\n            complex_of_real (x + a) powr (- 1 - 2 * of_nat n - cnj z)))\n     0", "by (intro EM_remainder_cong) (auto simp: cnj_powr)"], ["proof (state)\nthis:\n  EM_remainder (2 * n + 1)\n   (\\<lambda>x.\n       - (pochhammer (cnj z) (Suc (2 * n)) *\n          cnj (complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z))))\n   0 =\n  EM_remainder (2 * n + 1)\n   (\\<lambda>x.\n       - (pochhammer (cnj z) (Suc (2 * n)) *\n          complex_of_real (x + a) powr (- 1 - 2 * of_nat n - cnj z)))\n   0\n\ngoal (1 subgoal):\n 1. pre_zeta_aux n a (cnj z) = cnj (pre_zeta_aux n a z)", "also"], ["proof (state)\nthis:\n  EM_remainder (2 * n + 1)\n   (\\<lambda>x.\n       - (pochhammer (cnj z) (Suc (2 * n)) *\n          cnj (complex_of_real (x + a) powr (- 1 - 2 * of_nat n - z))))\n   0 =\n  EM_remainder (2 * n + 1)\n   (\\<lambda>x.\n       - (pochhammer (cnj z) (Suc (2 * n)) *\n          complex_of_real (x + a) powr (- 1 - 2 * of_nat n - cnj z)))\n   0\n\ngoal (1 subgoal):\n 1. pre_zeta_aux n a (cnj z) = cnj (pre_zeta_aux n a z)", "have \"of_real a powr -cnj z / 2 + ?A + \\<dots> = pre_zeta_aux n a (cnj z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real a powr - cnj z / 2 +\n    (\\<Sum>x = 1..n.\n        (bernoulli (2 * x) / fact (2 * x)) *\\<^sub>R\n        complex_of_real a powr (- cnj z - of_nat (2 * x - 1)) *\n        pochhammer (cnj z) (2 * x - 1)) +\n    EM_remainder (2 * n + 1)\n     (\\<lambda>x.\n         - (pochhammer (cnj z) (Suc (2 * n)) *\n            complex_of_real (x + a) powr (- 1 - 2 * of_nat n - cnj z)))\n     0 =\n    pre_zeta_aux n a (cnj z)", "by (simp add: pre_zeta_aux_def mult_ac)"], ["proof (state)\nthis:\n  complex_of_real a powr - cnj z / 2 +\n  (\\<Sum>x = 1..n.\n      (bernoulli (2 * x) / fact (2 * x)) *\\<^sub>R\n      complex_of_real a powr (- cnj z - of_nat (2 * x - 1)) *\n      pochhammer (cnj z) (2 * x - 1)) +\n  EM_remainder (2 * n + 1)\n   (\\<lambda>x.\n       - (pochhammer (cnj z) (Suc (2 * n)) *\n          complex_of_real (x + a) powr (- 1 - 2 * of_nat n - cnj z)))\n   0 =\n  pre_zeta_aux n a (cnj z)\n\ngoal (1 subgoal):\n 1. pre_zeta_aux n a (cnj z) = cnj (pre_zeta_aux n a z)", "finally"], ["proof (chain)\npicking this:\n  cnj (pre_zeta_aux n a z) = pre_zeta_aux n a (cnj z)", "show ?thesis"], ["proof (prove)\nusing this:\n  cnj (pre_zeta_aux n a z) = pre_zeta_aux n a (cnj z)\n\ngoal (1 subgoal):\n 1. pre_zeta_aux n a (cnj z) = cnj (pre_zeta_aux n a z)", ".."], ["proof (state)\nthis:\n  pre_zeta_aux n a (cnj z) = cnj (pre_zeta_aux n a z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pre_zeta_cnj [simp]: \"a > 0 \\<Longrightarrow> pre_zeta a (cnj z) = cnj (pre_zeta a z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a \\<Longrightarrow> pre_zeta a (cnj z) = cnj (pre_zeta a z)", "by (simp add: pre_zeta_def)"], ["", "lemma hurwitz_zeta_cnj [simp]: \"a > 0 \\<Longrightarrow> hurwitz_zeta a (cnj z) = cnj (hurwitz_zeta a z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a \\<Longrightarrow> hurwitz_zeta a (cnj z) = cnj (hurwitz_zeta a z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < a \\<Longrightarrow> hurwitz_zeta a (cnj z) = cnj (hurwitz_zeta a z)", "assume \"a > 0\""], ["proof (state)\nthis:\n  0 < a\n\ngoal (1 subgoal):\n 1. 0 < a \\<Longrightarrow> hurwitz_zeta a (cnj z) = cnj (hurwitz_zeta a z)", "moreover"], ["proof (state)\nthis:\n  0 < a\n\ngoal (1 subgoal):\n 1. 0 < a \\<Longrightarrow> hurwitz_zeta a (cnj z) = cnj (hurwitz_zeta a z)", "have \"cnj z = 1 \\<longleftrightarrow> z = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cnj z = 1) = (z = 1)", "by (simp add: complex_eq_iff)"], ["proof (state)\nthis:\n  (cnj z = 1) = (z = 1)\n\ngoal (1 subgoal):\n 1. 0 < a \\<Longrightarrow> hurwitz_zeta a (cnj z) = cnj (hurwitz_zeta a z)", "ultimately"], ["proof (chain)\npicking this:\n  0 < a\n  (cnj z = 1) = (z = 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < a\n  (cnj z = 1) = (z = 1)\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (cnj z) = cnj (hurwitz_zeta a z)", "by (auto simp: hurwitz_zeta_def cnj_powr)"], ["proof (state)\nthis:\n  hurwitz_zeta a (cnj z) = cnj (hurwitz_zeta a z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma zeta_cnj [simp]: \"zeta (cnj z) = cnj (zeta z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta (cnj z) = cnj (zeta z)", "by (simp add: zeta_def)"], ["", "corollary hurwitz_zeta_real: \"a > 0 \\<Longrightarrow> hurwitz_zeta a (of_real x) \\<in> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a \\<Longrightarrow> hurwitz_zeta a (complex_of_real x) \\<in> \\<real>", "using hurwitz_zeta_cnj [of a \"of_real x\"]"], ["proof (prove)\nusing this:\n  0 < a \\<Longrightarrow>\n  hurwitz_zeta a (cnj (complex_of_real x)) =\n  cnj (hurwitz_zeta a (complex_of_real x))\n\ngoal (1 subgoal):\n 1. 0 < a \\<Longrightarrow> hurwitz_zeta a (complex_of_real x) \\<in> \\<real>", "by (simp add: Reals_cnj_iff del: zeta_cnj)"], ["", "corollary zeta_real: \"zeta (of_real x) \\<in> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta (complex_of_real x) \\<in> \\<real>", "unfolding zeta_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. hurwitz_zeta 1 (complex_of_real x) \\<in> \\<real>", "by (rule hurwitz_zeta_real) auto"], ["", "corollary zeta_real': \"z \\<in> \\<real> \\<Longrightarrow> zeta z \\<in> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> \\<real> \\<Longrightarrow> zeta z \\<in> \\<real>", "by (elim Reals_cases) (auto simp: zeta_real)"], ["", "subsection \\<open>Connection to Dirichlet series\\<close>"], ["", "lemma eval_fds_zeta: \"Re s > 1 \\<Longrightarrow> eval_fds fds_zeta s = zeta s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < Re s \\<Longrightarrow> eval_fds fds_zeta s = zeta s", "using sums_zeta [of s]"], ["proof (prove)\nusing this:\n  1 < Re s \\<Longrightarrow>\n  (\\<lambda>n. of_nat (Suc n) powr - s) sums zeta s\n\ngoal (1 subgoal):\n 1. 1 < Re s \\<Longrightarrow> eval_fds fds_zeta s = zeta s", "by (intro eval_fds_eqI) (auto simp: powr_minus divide_simps)"], ["", "theorem euler_product_zeta:\n  assumes \"Re s > 1\"\n  shows   \"(\\<lambda>n. \\<Prod>p\\<le>n. if prime p then inverse (1 - 1 / of_nat p powr s) else 1) \\<longlonglongrightarrow> zeta s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)\n    \\<longlonglongrightarrow> zeta s", "using euler_product_fds_zeta[of s] assms"], ["proof (prove)\nusing this:\n  1 < s \\<bullet> 1 \\<Longrightarrow>\n  (\\<lambda>n.\n      \\<Prod>p\\<le>n.\n         if prime p then inverse (1 - 1 / nat_power p s) else 1)\n  \\<longlonglongrightarrow> eval_fds fds_zeta s\n  1 < Re s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)\n    \\<longlonglongrightarrow> zeta s", "unfolding nat_power_complex_def"], ["proof (prove)\nusing this:\n  1 < s \\<bullet> 1 \\<Longrightarrow>\n  (\\<lambda>n.\n      \\<Prod>p\\<le>n.\n         if prime p then inverse (1 - 1 / of_nat p powr s) else 1)\n  \\<longlonglongrightarrow> eval_fds fds_zeta s\n  1 < Re s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)\n    \\<longlonglongrightarrow> zeta s", "by (simp add: eval_fds_zeta)"], ["", "corollary euler_product_zeta':\n  assumes \"Re s > 1\"\n  shows   \"(\\<lambda>n. \\<Prod>p | prime p \\<and> p \\<le> n. inverse (1 - 1 / of_nat p powr s)) \\<longlonglongrightarrow> zeta s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<in>{p. prime p \\<and> p \\<le> n}.\n          inverse (1 - 1 / of_nat p powr s))\n    \\<longlonglongrightarrow> zeta s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<in>{p. prime p \\<and> p \\<le> n}.\n          inverse (1 - 1 / of_nat p powr s))\n    \\<longlonglongrightarrow> zeta s", "note euler_product_zeta [OF assms]"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Prod>p\\<le>n.\n         if prime p then inverse (1 - 1 / of_nat p powr s) else 1)\n  \\<longlonglongrightarrow> zeta s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<in>{p. prime p \\<and> p \\<le> n}.\n          inverse (1 - 1 / of_nat p powr s))\n    \\<longlonglongrightarrow> zeta s", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Prod>p\\<le>n.\n         if prime p then inverse (1 - 1 / of_nat p powr s) else 1)\n  \\<longlonglongrightarrow> zeta s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<in>{p. prime p \\<and> p \\<le> n}.\n          inverse (1 - 1 / of_nat p powr s))\n    \\<longlonglongrightarrow> zeta s", "have \"(\\<lambda>n. \\<Prod>p\\<le>n. if prime p then inverse (1 - 1 / of_nat p powr s) else 1) =\n               (\\<lambda>n. \\<Prod>p | prime p \\<and> p \\<le> n. inverse (1 - 1 / of_nat p powr s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1) =\n    (\\<lambda>n.\n        \\<Prod>p\\<in>{p. prime p \\<and> p \\<le> n}.\n          inverse (1 - 1 / of_nat p powr s))", "by (intro ext prod.mono_neutral_cong_right refl) auto"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Prod>p\\<le>n.\n         if prime p then inverse (1 - 1 / of_nat p powr s) else 1) =\n  (\\<lambda>n.\n      \\<Prod>p\\<in>{p. prime p \\<and> p \\<le> n}.\n        inverse (1 - 1 / of_nat p powr s))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<in>{p. prime p \\<and> p \\<le> n}.\n          inverse (1 - 1 / of_nat p powr s))\n    \\<longlonglongrightarrow> zeta s", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      \\<Prod>p\\<in>{p. prime p \\<and> p \\<le> n}.\n        inverse (1 - 1 / of_nat p powr s))\n  \\<longlonglongrightarrow> zeta s", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      \\<Prod>p\\<in>{p. prime p \\<and> p \\<le> n}.\n        inverse (1 - 1 / of_nat p powr s))\n  \\<longlonglongrightarrow> zeta s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<in>{p. prime p \\<and> p \\<le> n}.\n          inverse (1 - 1 / of_nat p powr s))\n    \\<longlonglongrightarrow> zeta s", "."], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Prod>p\\<in>{p. prime p \\<and> p \\<le> n}.\n        inverse (1 - 1 / of_nat p powr s))\n  \\<longlonglongrightarrow> zeta s\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem zeta_Re_gt_1_nonzero: \"Re s > 1 \\<Longrightarrow> zeta s \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < Re s \\<Longrightarrow> zeta s \\<noteq> 0", "using eval_fds_zeta_nonzero[of s]"], ["proof (prove)\nusing this:\n  1 < s \\<bullet> 1 \\<Longrightarrow> eval_fds fds_zeta s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 < Re s \\<Longrightarrow> zeta s \\<noteq> 0", "by (simp add: eval_fds_zeta)"], ["", "theorem tendsto_zeta_Re_going_to_at_top: \"(zeta \\<longlongrightarrow> 1) (Re going_to at_top)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (zeta \\<longlongrightarrow> 1) (Re going_to at_top)", "proof (rule Lim_transform_eventually)"], ["proof (state)\ngoal (2 subgoals):\n 1. (?f \\<longlongrightarrow> 1) (Re going_to at_top)\n 2. \\<forall>\\<^sub>F x in Re going_to at_top. ?f x = zeta x", "have \"eventually (\\<lambda>x::real. x > 1) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually ((<) 1) at_top", "by (rule eventually_gt_at_top)"], ["proof (state)\nthis:\n  eventually ((<) 1) at_top\n\ngoal (2 subgoals):\n 1. (?f \\<longlongrightarrow> 1) (Re going_to at_top)\n 2. \\<forall>\\<^sub>F x in Re going_to at_top. ?f x = zeta x", "hence \"eventually (\\<lambda>s. Re s > 1) (Re going_to at_top)\""], ["proof (prove)\nusing this:\n  eventually ((<) 1) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in Re going_to at_top. 1 < Re s", "by blast"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in Re going_to at_top. 1 < Re s\n\ngoal (2 subgoals):\n 1. (?f \\<longlongrightarrow> 1) (Re going_to at_top)\n 2. \\<forall>\\<^sub>F x in Re going_to at_top. ?f x = zeta x", "thus \"eventually (\\<lambda>z. eval_fds fds_zeta z = zeta z) (Re going_to at_top)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s in Re going_to at_top. 1 < Re s\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in Re going_to at_top. eval_fds fds_zeta z = zeta z", "by eventually_elim (simp add: eval_fds_zeta)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in Re going_to at_top. eval_fds fds_zeta z = zeta z\n\ngoal (1 subgoal):\n 1. (eval_fds fds_zeta \\<longlongrightarrow> 1) (Re going_to at_top)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (eval_fds fds_zeta \\<longlongrightarrow> 1) (Re going_to at_top)", "have \"conv_abscissa (fds_zeta :: complex fds) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_abscissa fds_zeta \\<le> 1", "proof (rule conv_abscissa_leI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c'.\n       1 < ereal c' \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_converges fds_zeta s", "fix c'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c'.\n       1 < ereal c' \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_converges fds_zeta s", "assume \"ereal c' > 1\""], ["proof (state)\nthis:\n  1 < ereal c'\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       1 < ereal c' \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_converges fds_zeta s", "thus \"\\<exists>s. s \\<bullet> 1 = c' \\<and> fds_converges fds_zeta (s::complex)\""], ["proof (prove)\nusing this:\n  1 < ereal c'\n\ngoal (1 subgoal):\n 1. \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_converges fds_zeta s", "by (auto intro!: exI[of _ \"of_real c'\"])"], ["proof (state)\nthis:\n  \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_converges fds_zeta s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  conv_abscissa fds_zeta \\<le> 1\n\ngoal (1 subgoal):\n 1. (eval_fds fds_zeta \\<longlongrightarrow> 1) (Re going_to at_top)", "hence \"(eval_fds fds_zeta \\<longlongrightarrow> fds_nth fds_zeta 1) (Re going_to at_top)\""], ["proof (prove)\nusing this:\n  conv_abscissa fds_zeta \\<le> 1\n\ngoal (1 subgoal):\n 1. (eval_fds fds_zeta \\<longlongrightarrow> fds_nth fds_zeta 1)\n     (Re going_to at_top)", "by (intro tendsto_eval_fds_Re_going_to_at_top') auto"], ["proof (state)\nthis:\n  (eval_fds fds_zeta \\<longlongrightarrow> fds_nth fds_zeta 1)\n   (Re going_to at_top)\n\ngoal (1 subgoal):\n 1. (eval_fds fds_zeta \\<longlongrightarrow> 1) (Re going_to at_top)", "thus \"(eval_fds fds_zeta \\<longlongrightarrow> 1) (Re going_to at_top)\""], ["proof (prove)\nusing this:\n  (eval_fds fds_zeta \\<longlongrightarrow> fds_nth fds_zeta 1)\n   (Re going_to at_top)\n\ngoal (1 subgoal):\n 1. (eval_fds fds_zeta \\<longlongrightarrow> 1) (Re going_to at_top)", "by simp"], ["proof (state)\nthis:\n  (eval_fds fds_zeta \\<longlongrightarrow> 1) (Re going_to at_top)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conv_abscissa_zeta [simp]: \"conv_abscissa (fds_zeta :: complex fds) = 1\"\n  and abs_conv_abscissa_zeta [simp]: \"abs_conv_abscissa (fds_zeta :: complex fds) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_abscissa fds_zeta = 1 &&& abs_conv_abscissa fds_zeta = 1", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. conv_abscissa fds_zeta = 1\n 2. abs_conv_abscissa fds_zeta = 1", "let ?z = \"fds_zeta :: complex fds\""], ["proof (state)\ngoal (2 subgoals):\n 1. conv_abscissa fds_zeta = 1\n 2. abs_conv_abscissa fds_zeta = 1", "have A: \"conv_abscissa ?z \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> conv_abscissa fds_zeta", "proof (intro conv_abscissa_geI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c'.\n       ereal c' < 1 \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> \\<not> fds_converges fds_zeta s", "fix c'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c'.\n       ereal c' < 1 \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> \\<not> fds_converges fds_zeta s", "assume \"ereal c' < 1\""], ["proof (state)\nthis:\n  ereal c' < 1\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       ereal c' < 1 \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> \\<not> fds_converges fds_zeta s", "hence \"\\<not>summable (\\<lambda>n. real n powr -c')\""], ["proof (prove)\nusing this:\n  ereal c' < 1\n\ngoal (1 subgoal):\n 1. \\<not> summable (\\<lambda>n. real n powr - c')", "by (subst summable_real_powr_iff) auto"], ["proof (state)\nthis:\n  \\<not> summable (\\<lambda>n. real n powr - c')\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       ereal c' < 1 \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> \\<not> fds_converges fds_zeta s", "hence \"\\<not>summable (\\<lambda>n. of_real (real n powr -c') :: complex)\""], ["proof (prove)\nusing this:\n  \\<not> summable (\\<lambda>n. real n powr - c')\n\ngoal (1 subgoal):\n 1. \\<not> summable (\\<lambda>n. complex_of_real (real n powr - c'))", "by (subst summable_of_real_iff)"], ["proof (state)\nthis:\n  \\<not> summable (\\<lambda>n. complex_of_real (real n powr - c'))\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       ereal c' < 1 \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> \\<not> fds_converges fds_zeta s", "also"], ["proof (state)\nthis:\n  \\<not> summable (\\<lambda>n. complex_of_real (real n powr - c'))\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       ereal c' < 1 \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> \\<not> fds_converges fds_zeta s", "have \"summable (\\<lambda>n. of_real (real n powr -c') :: complex) \\<longleftrightarrow> \n                 fds_converges fds_zeta (of_real c' :: complex)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. complex_of_real (real n powr - c')) =\n    fds_converges fds_zeta (complex_of_real c')", "unfolding fds_converges_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. complex_of_real (real n powr - c')) =\n    summable\n     (\\<lambda>n. fds_nth fds_zeta n / nat_power n (complex_of_real c'))", "by (intro summable_cong eventually_mono [OF eventually_gt_at_top[of 0]])\n         (simp add: fds_nth_zeta powr_Reals_eq powr_minus divide_simps)"], ["proof (state)\nthis:\n  summable (\\<lambda>n. complex_of_real (real n powr - c')) =\n  fds_converges fds_zeta (complex_of_real c')\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       ereal c' < 1 \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> \\<not> fds_converges fds_zeta s", "finally"], ["proof (chain)\npicking this:\n  \\<not> fds_converges fds_zeta (complex_of_real c')", "show \"\\<exists>s::complex. s \\<bullet> 1 = c' \\<and> \\<not>fds_converges fds_zeta s\""], ["proof (prove)\nusing this:\n  \\<not> fds_converges fds_zeta (complex_of_real c')\n\ngoal (1 subgoal):\n 1. \\<exists>s. s \\<bullet> 1 = c' \\<and> \\<not> fds_converges fds_zeta s", "by (intro exI[of _ \"of_real c'\"]) auto"], ["proof (state)\nthis:\n  \\<exists>s. s \\<bullet> 1 = c' \\<and> \\<not> fds_converges fds_zeta s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 \\<le> conv_abscissa fds_zeta\n\ngoal (2 subgoals):\n 1. conv_abscissa fds_zeta = 1\n 2. abs_conv_abscissa fds_zeta = 1", "have B: \"abs_conv_abscissa ?z \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_conv_abscissa fds_zeta \\<le> 1", "proof (intro abs_conv_abscissa_leI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c'.\n       1 < ereal c' \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_abs_converges fds_zeta s", "fix c'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c'.\n       1 < ereal c' \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_abs_converges fds_zeta s", "assume \"1 < ereal c'\""], ["proof (state)\nthis:\n  1 < ereal c'\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       1 < ereal c' \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_abs_converges fds_zeta s", "thus \"\\<exists>s::complex. s \\<bullet> 1 = c' \\<and> fds_abs_converges fds_zeta s\""], ["proof (prove)\nusing this:\n  1 < ereal c'\n\ngoal (1 subgoal):\n 1. \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_abs_converges fds_zeta s", "by (intro exI[of _ \"of_real c'\"]) auto"], ["proof (state)\nthis:\n  \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_abs_converges fds_zeta s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  abs_conv_abscissa fds_zeta \\<le> 1\n\ngoal (2 subgoals):\n 1. conv_abscissa fds_zeta = 1\n 2. abs_conv_abscissa fds_zeta = 1", "have \"conv_abscissa ?z \\<le> abs_conv_abscissa ?z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_abscissa fds_zeta \\<le> abs_conv_abscissa fds_zeta", "by (rule conv_le_abs_conv_abscissa)"], ["proof (state)\nthis:\n  conv_abscissa fds_zeta \\<le> abs_conv_abscissa fds_zeta\n\ngoal (2 subgoals):\n 1. conv_abscissa fds_zeta = 1\n 2. abs_conv_abscissa fds_zeta = 1", "also"], ["proof (state)\nthis:\n  conv_abscissa fds_zeta \\<le> abs_conv_abscissa fds_zeta\n\ngoal (2 subgoals):\n 1. conv_abscissa fds_zeta = 1\n 2. abs_conv_abscissa fds_zeta = 1", "note B"], ["proof (state)\nthis:\n  abs_conv_abscissa fds_zeta \\<le> 1\n\ngoal (2 subgoals):\n 1. conv_abscissa fds_zeta = 1\n 2. abs_conv_abscissa fds_zeta = 1", "finally"], ["proof (chain)\npicking this:\n  conv_abscissa fds_zeta \\<le> 1", "show \"conv_abscissa ?z = 1\""], ["proof (prove)\nusing this:\n  conv_abscissa fds_zeta \\<le> 1\n\ngoal (1 subgoal):\n 1. conv_abscissa fds_zeta = 1", "using A"], ["proof (prove)\nusing this:\n  conv_abscissa fds_zeta \\<le> 1\n  1 \\<le> conv_abscissa fds_zeta\n\ngoal (1 subgoal):\n 1. conv_abscissa fds_zeta = 1", "by (intro antisym)"], ["proof (state)\nthis:\n  conv_abscissa fds_zeta = 1\n\ngoal (1 subgoal):\n 1. abs_conv_abscissa fds_zeta = 1", "note A"], ["proof (state)\nthis:\n  1 \\<le> conv_abscissa fds_zeta\n\ngoal (1 subgoal):\n 1. abs_conv_abscissa fds_zeta = 1", "also"], ["proof (state)\nthis:\n  1 \\<le> conv_abscissa fds_zeta\n\ngoal (1 subgoal):\n 1. abs_conv_abscissa fds_zeta = 1", "have \"conv_abscissa ?z \\<le> abs_conv_abscissa ?z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_abscissa fds_zeta \\<le> abs_conv_abscissa fds_zeta", "by (rule conv_le_abs_conv_abscissa)"], ["proof (state)\nthis:\n  conv_abscissa fds_zeta \\<le> abs_conv_abscissa fds_zeta\n\ngoal (1 subgoal):\n 1. abs_conv_abscissa fds_zeta = 1", "finally"], ["proof (chain)\npicking this:\n  1 \\<le> abs_conv_abscissa fds_zeta", "show \"abs_conv_abscissa ?z = 1\""], ["proof (prove)\nusing this:\n  1 \\<le> abs_conv_abscissa fds_zeta\n\ngoal (1 subgoal):\n 1. abs_conv_abscissa fds_zeta = 1", "using B"], ["proof (prove)\nusing this:\n  1 \\<le> abs_conv_abscissa fds_zeta\n  abs_conv_abscissa fds_zeta \\<le> 1\n\ngoal (1 subgoal):\n 1. abs_conv_abscissa fds_zeta = 1", "by (intro antisym)"], ["proof (state)\nthis:\n  abs_conv_abscissa fds_zeta = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem deriv_zeta_sums:\n  assumes s: \"Re s > 1\"\n  shows \"(\\<lambda>n. -of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums deriv zeta s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - complex_of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums\n    deriv zeta s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - complex_of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums\n    deriv zeta s", "from s"], ["proof (chain)\npicking this:\n  1 < Re s", "have \"fds_converges (fds_deriv fds_zeta) s\""], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. fds_converges (fds_deriv fds_zeta) s", "by (intro fds_converges_deriv) simp_all"], ["proof (state)\nthis:\n  fds_converges (fds_deriv fds_zeta) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - complex_of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums\n    deriv zeta s", "with s"], ["proof (chain)\npicking this:\n  1 < Re s\n  fds_converges (fds_deriv fds_zeta) s", "have \"(\\<lambda>n. -of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums\n                  deriv (eval_fds fds_zeta) s\""], ["proof (prove)\nusing this:\n  1 < Re s\n  fds_converges (fds_deriv fds_zeta) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - complex_of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums\n    deriv (eval_fds fds_zeta) s", "unfolding fds_converges_altdef"], ["proof (prove)\nusing this:\n  1 < Re s\n  (\\<lambda>n.\n      fds_nth (fds_deriv fds_zeta) (Suc n) / nat_power (Suc n) s) sums\n  eval_fds (fds_deriv fds_zeta) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - complex_of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums\n    deriv (eval_fds fds_zeta) s", "by (simp add: fds_nth_deriv scaleR_conv_of_real eval_fds_deriv eval_fds_zeta)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      - complex_of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums\n  deriv (eval_fds fds_zeta) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - complex_of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums\n    deriv zeta s", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      - complex_of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums\n  deriv (eval_fds fds_zeta) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - complex_of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums\n    deriv zeta s", "from s"], ["proof (chain)\npicking this:\n  1 < Re s", "have \"eventually (\\<lambda>s. s \\<in> {s. Re s > 1}) (nhds s)\""], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in nhds s. s \\<in> {s. 1 < Re s}", "by (intro eventually_nhds_in_open) (auto simp: open_halfspace_Re_gt)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in nhds s. s \\<in> {s. 1 < Re s}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - complex_of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums\n    deriv zeta s", "hence \"eventually (\\<lambda>s. eval_fds fds_zeta s = zeta s) (nhds s)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s in nhds s. s \\<in> {s. 1 < Re s}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in nhds s. eval_fds fds_zeta s = zeta s", "by eventually_elim (auto simp: eval_fds_zeta)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in nhds s. eval_fds fds_zeta s = zeta s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - complex_of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums\n    deriv zeta s", "hence \"deriv (eval_fds fds_zeta) s = deriv zeta s\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s in nhds s. eval_fds fds_zeta s = zeta s\n\ngoal (1 subgoal):\n 1. deriv (eval_fds fds_zeta) s = deriv zeta s", "by (intro deriv_cong_ev refl)"], ["proof (state)\nthis:\n  deriv (eval_fds fds_zeta) s = deriv zeta s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - complex_of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums\n    deriv zeta s", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      - complex_of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums\n  deriv zeta s", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      - complex_of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums\n  deriv zeta s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - complex_of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums\n    deriv zeta s", "."], ["proof (state)\nthis:\n  (\\<lambda>n.\n      - complex_of_real (ln (real (Suc n))) / of_nat (Suc n) powr s) sums\n  deriv zeta s\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem inverse_zeta_sums:\n  assumes s: \"Re s > 1\"\n  shows   \"(\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums inverse (zeta s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums\n    inverse (zeta s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums\n    inverse (zeta s)", "have \"fds_converges (fds moebius_mu) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_converges (fds moebius_mu) s", "using assms"], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. fds_converges (fds moebius_mu) s", "by (auto intro!: fds_abs_converges_moebius_mu)"], ["proof (state)\nthis:\n  fds_converges (fds moebius_mu) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums\n    inverse (zeta s)", "hence \"(\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums eval_fds (fds moebius_mu) s\""], ["proof (prove)\nusing this:\n  fds_converges (fds moebius_mu) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums\n    eval_fds (fds moebius_mu) s", "by (simp add: fds_converges_altdef)"], ["proof (state)\nthis:\n  (\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums\n  eval_fds (fds moebius_mu) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums\n    inverse (zeta s)", "also"], ["proof (state)\nthis:\n  (\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums\n  eval_fds (fds moebius_mu) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums\n    inverse (zeta s)", "have \"fds moebius_mu = inverse (fds_zeta :: complex fds)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds moebius_mu = inverse fds_zeta", "by (rule fds_moebius_inverse_zeta)"], ["proof (state)\nthis:\n  fds moebius_mu = inverse fds_zeta\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums\n    inverse (zeta s)", "also"], ["proof (state)\nthis:\n  fds moebius_mu = inverse fds_zeta\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums\n    inverse (zeta s)", "from s"], ["proof (chain)\npicking this:\n  1 < Re s", "have \"eval_fds \\<dots> s = inverse (zeta s)\""], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. eval_fds (inverse fds_zeta) s = inverse (zeta s)", "by (subst eval_fds_inverse)\n       (auto simp: fds_moebius_inverse_zeta [symmetric] eval_fds_zeta \n             intro!: fds_abs_converges_moebius_mu)"], ["proof (state)\nthis:\n  eval_fds (inverse fds_zeta) s = inverse (zeta s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums\n    inverse (zeta s)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums\n  inverse (zeta s)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums\n  inverse (zeta s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums\n    inverse (zeta s)", "."], ["proof (state)\nthis:\n  (\\<lambda>n. moebius_mu (Suc n) / of_nat (Suc n) powr s) sums\n  inverse (zeta s)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The following gives an extension of the $\\zeta$ functions to the critical strip.\n\\<close>"], ["", "lemma hurwitz_zeta_critical_strip:\n  fixes s :: complex and a :: real\n  defines \"S \\<equiv> (\\<lambda>n. \\<Sum>i<n. (of_nat i + a) powr - s)\"\n  defines \"I' \\<equiv> (\\<lambda>n. of_nat n powr (1 - s) / (1 - s))\"\n  assumes \"Re s > 0\" \"s \\<noteq> 1\" and \"a > 0\"\n  shows   \"(\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "from assms"], ["proof (chain)\npicking this:\n  S \\<equiv> \\<lambda>n. \\<Sum>i<n. complex_of_real (real i + a) powr - s\n  I' \\<equiv> \\<lambda>n. of_nat n powr (1 - s) / (1 - s)\n  0 < Re s\n  s \\<noteq> 1\n  0 < a", "have [simp]: \"s \\<noteq> 1\""], ["proof (prove)\nusing this:\n  S \\<equiv> \\<lambda>n. \\<Sum>i<n. complex_of_real (real i + a) powr - s\n  I' \\<equiv> \\<lambda>n. of_nat n powr (1 - s) / (1 - s)\n  0 < Re s\n  s \\<noteq> 1\n  0 < a\n\ngoal (1 subgoal):\n 1. s \\<noteq> 1", "by auto"], ["proof (state)\nthis:\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "let ?f = \"\\<lambda>x. of_real (x + a) powr -s\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "let ?fs = \"\\<lambda>n x. (-1) ^ n * pochhammer s n * of_real (x + a) powr (-s - of_nat n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "have minus_commute: \"-a - b = -b - a\" for a b :: complex"], ["proof (prove)\ngoal (1 subgoal):\n 1. - a - b = - b - a", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  - ?a - ?b = - ?b - ?a\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "define I where \"I = (\\<lambda>n. (of_nat n + a) powr (1 - s) / (1 - s))\""], ["proof (state)\nthis:\n  I = (\\<lambda>n. complex_of_real (real n + a) powr (1 - s) / (1 - s))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "define R where \"R = (\\<lambda>n. EM_remainder' 1 (?fs 1) (real 0) (real n))\""], ["proof (state)\nthis:\n  R =\n  (\\<lambda>n.\n      EM_remainder' 1\n       (\\<lambda>x.\n           (- 1) ^ 1 * pochhammer s 1 *\n           complex_of_real (x + a) powr (- s - of_nat 1))\n       (real 0) (real n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "define R_lim where \"R_lim = EM_remainder 1 (?fs 1) 0\""], ["proof (state)\nthis:\n  R_lim =\n  EM_remainder 1\n   (\\<lambda>x.\n       (- 1) ^ 1 * pochhammer s 1 *\n       complex_of_real (x + a) powr (- s - of_nat 1))\n   0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "define C where \"C = - (a powr -s / 2)\""], ["proof (state)\nthis:\n  C = - (complex_of_real a powr - s / 2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "define D where \"D = (\\<lambda>n. (1/2) * (of_real (a + real n) powr - s))\""], ["proof (state)\nthis:\n  D = (\\<lambda>n. 1 / 2 * complex_of_real (a + real n) powr - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "define D' where \"D' = (\\<lambda>n. of_real (a + real n) powr - s)\""], ["proof (state)\nthis:\n  D' = (\\<lambda>n. complex_of_real (a + real n) powr - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "define C' where \"C' = a powr (1 - s) / (1 - s)\""], ["proof (state)\nthis:\n  C' = complex_of_real a powr (1 - s) / (1 - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "define C'' where \"C'' = of_real a powr - s\""], ["proof (state)\nthis:\n  C'' = complex_of_real a powr - s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "{"], ["proof (state)\nthis:\n  C'' = complex_of_real a powr - s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "fix n :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "assume n: \"n > 0\""], ["proof (state)\nthis:\n  0 < n\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "have \"((\\<lambda>x. of_real (x + a) powr -s) has_integral (of_real (real n + a) powr (1-s) / (1 - s) - \n            of_real (0 + a) powr (1 - s) / (1 - s))) {0..real n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. complex_of_real (x + a) powr - s) has_integral\n     complex_of_real (real n + a) powr (1 - s) / (1 - s) -\n     complex_of_real (0 + a) powr (1 - s) / (1 - s))\n     {0..real n}", "using n assms"], ["proof (prove)\nusing this:\n  0 < n\n  S \\<equiv> \\<lambda>n. \\<Sum>i<n. complex_of_real (real i + a) powr - s\n  I' \\<equiv> \\<lambda>n. of_nat n powr (1 - s) / (1 - s)\n  0 < Re s\n  s \\<noteq> 1\n  0 < a\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. complex_of_real (x + a) powr - s) has_integral\n     complex_of_real (real n + a) powr (1 - s) / (1 - s) -\n     complex_of_real (0 + a) powr (1 - s) / (1 - s))\n     {0..real n}", "by (intro fundamental_theorem_of_calculus)\n         (auto intro!: continuous_intros has_vector_derivative_real_field derivative_eq_intros\n               simp: complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  ((\\<lambda>x. complex_of_real (x + a) powr - s) has_integral\n   complex_of_real (real n + a) powr (1 - s) / (1 - s) -\n   complex_of_real (0 + a) powr (1 - s) / (1 - s))\n   {0..real n}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "hence I: \"((\\<lambda>x. of_real (x + a) powr -s) has_integral (I n - C')) {0..n}\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. complex_of_real (x + a) powr - s) has_integral\n   complex_of_real (real n + a) powr (1 - s) / (1 - s) -\n   complex_of_real (0 + a) powr (1 - s) / (1 - s))\n   {0..real n}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. complex_of_real (x + a) powr - s) has_integral I n - C')\n     {0..real n}", "by (auto simp: divide_simps C'_def I_def)"], ["proof (state)\nthis:\n  ((\\<lambda>x. complex_of_real (x + a) powr - s) has_integral I n - C')\n   {0..real n}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "have \"(\\<Sum>i\\<in>{0<..n}. ?f (real i)) - integral {real 0..real n} ?f =\n            (\\<Sum>k<1. (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R (?fs k (real n) - ?fs k (real 0))) + R n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{0<..n}. complex_of_real (real i + a) powr - s) -\n    integral {real 0..real n}\n     (\\<lambda>x. complex_of_real (x + a) powr - s) =\n    (\\<Sum>k<1.\n        (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n        ((- 1) ^ k * pochhammer s k *\n         complex_of_real (real n + a) powr (- s - of_nat k) -\n         (- 1) ^ k * pochhammer s k *\n         complex_of_real (real 0 + a) powr (- s - of_nat k))) +\n    R n", "using n assms"], ["proof (prove)\nusing this:\n  0 < n\n  S \\<equiv> \\<lambda>n. \\<Sum>i<n. complex_of_real (real i + a) powr - s\n  I' \\<equiv> \\<lambda>n. of_nat n powr (1 - s) / (1 - s)\n  0 < Re s\n  s \\<noteq> 1\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{0<..n}. complex_of_real (real i + a) powr - s) -\n    integral {real 0..real n}\n     (\\<lambda>x. complex_of_real (x + a) powr - s) =\n    (\\<Sum>k<1.\n        (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n        ((- 1) ^ k * pochhammer s k *\n         complex_of_real (real n + a) powr (- s - of_nat k) -\n         (- 1) ^ k * pochhammer s k *\n         complex_of_real (real 0 + a) powr (- s - of_nat k))) +\n    R n", "unfolding R_def"], ["proof (prove)\nusing this:\n  0 < n\n  S \\<equiv> \\<lambda>n. \\<Sum>i<n. complex_of_real (real i + a) powr - s\n  I' \\<equiv> \\<lambda>n. of_nat n powr (1 - s) / (1 - s)\n  0 < Re s\n  s \\<noteq> 1\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{0<..n}. complex_of_real (real i + a) powr - s) -\n    integral {real 0..real n}\n     (\\<lambda>x. complex_of_real (x + a) powr - s) =\n    (\\<Sum>k<1.\n        (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n        ((- 1) ^ k * pochhammer s k *\n         complex_of_real (real n + a) powr (- s - of_nat k) -\n         (- 1) ^ k * pochhammer s k *\n         complex_of_real (real 0 + a) powr (- s - of_nat k))) +\n    EM_remainder' 1\n     (\\<lambda>x.\n         (- 1) ^ 1 * pochhammer s 1 *\n         complex_of_real (x + a) powr (- s - of_nat 1))\n     (real 0) (real n)", "by (intro euler_maclaurin_strong_raw_nat[where Y = \"{0}\"])\n         (auto intro!: continuous_intros derivative_eq_intros has_vector_derivative_real_field\n               simp: pochhammer_rec' algebra_simps complex_nonpos_Reals_iff add_eq_0_iff)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0<..n}. complex_of_real (real i + a) powr - s) -\n  integral {real 0..real n} (\\<lambda>x. complex_of_real (x + a) powr - s) =\n  (\\<Sum>k<1.\n      (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n      ((- 1) ^ k * pochhammer s k *\n       complex_of_real (real n + a) powr (- s - of_nat k) -\n       (- 1) ^ k * pochhammer s k *\n       complex_of_real (real 0 + a) powr (- s - of_nat k))) +\n  R n\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0<..n}. complex_of_real (real i + a) powr - s) -\n  integral {real 0..real n} (\\<lambda>x. complex_of_real (x + a) powr - s) =\n  (\\<Sum>k<1.\n      (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n      ((- 1) ^ k * pochhammer s k *\n       complex_of_real (real n + a) powr (- s - of_nat k) -\n       (- 1) ^ k * pochhammer s k *\n       complex_of_real (real 0 + a) powr (- s - of_nat k))) +\n  R n\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "have \"(\\<Sum>k<1. (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R (?fs k (real n) - ?fs k (real 0))) = \n                  ((n + a) powr - s - a powr - s) / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k<1.\n        (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n        ((- 1) ^ k * pochhammer s k *\n         complex_of_real (real n + a) powr (- s - of_nat k) -\n         (- 1) ^ k * pochhammer s k *\n         complex_of_real (real 0 + a) powr (- s - of_nat k))) =\n    (complex_of_real (real n + a) powr - s - complex_of_real a powr - s) / 2", "by (simp add: lessThan_nat_numeral scaleR_conv_of_real numeral_2_eq_2 [symmetric])"], ["proof (state)\nthis:\n  (\\<Sum>k<1.\n      (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n      ((- 1) ^ k * pochhammer s k *\n       complex_of_real (real n + a) powr (- s - of_nat k) -\n       (- 1) ^ k * pochhammer s k *\n       complex_of_real (real 0 + a) powr (- s - of_nat k))) =\n  (complex_of_real (real n + a) powr - s - complex_of_real a powr - s) / 2\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "also"], ["proof (state)\nthis:\n  (\\<Sum>k<1.\n      (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n      ((- 1) ^ k * pochhammer s k *\n       complex_of_real (real n + a) powr (- s - of_nat k) -\n       (- 1) ^ k * pochhammer s k *\n       complex_of_real (real 0 + a) powr (- s - of_nat k))) =\n  (complex_of_real (real n + a) powr - s - complex_of_real a powr - s) / 2\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "have \"\\<dots> = C + D n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (complex_of_real (real n + a) powr - s - complex_of_real a powr - s) /\n    2 =\n    C + D n", "by (simp add: C_def D_def field_simps)"], ["proof (state)\nthis:\n  (complex_of_real (real n + a) powr - s - complex_of_real a powr - s) / 2 =\n  C + D n\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "also"], ["proof (state)\nthis:\n  (complex_of_real (real n + a) powr - s - complex_of_real a powr - s) / 2 =\n  C + D n\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "have \"integral {real 0..real n} (\\<lambda>x. complex_of_real (x + a) powr - s) = I n - C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {real 0..real n}\n     (\\<lambda>x. complex_of_real (x + a) powr - s) =\n    I n - C'", "using I"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. complex_of_real (x + a) powr - s) has_integral I n - C')\n   {0..real n}\n\ngoal (1 subgoal):\n 1. integral {real 0..real n}\n     (\\<lambda>x. complex_of_real (x + a) powr - s) =\n    I n - C'", "by (simp add: has_integral_iff)"], ["proof (state)\nthis:\n  integral {real 0..real n} (\\<lambda>x. complex_of_real (x + a) powr - s) =\n  I n - C'\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "also"], ["proof (state)\nthis:\n  integral {real 0..real n} (\\<lambda>x. complex_of_real (x + a) powr - s) =\n  I n - C'\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "have \"(\\<Sum>i\\<in>{0<..n}. of_real (real i + a) powr - s) = \n                 (\\<Sum>i=0..n. of_real (real i + a) powr - s) - of_real a powr -s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{0<..n}. complex_of_real (real i + a) powr - s) =\n    (\\<Sum>i = 0..n. complex_of_real (real i + a) powr - s) -\n    complex_of_real a powr - s", "using assms"], ["proof (prove)\nusing this:\n  S \\<equiv> \\<lambda>n. \\<Sum>i<n. complex_of_real (real i + a) powr - s\n  I' \\<equiv> \\<lambda>n. of_nat n powr (1 - s) / (1 - s)\n  0 < Re s\n  s \\<noteq> 1\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{0<..n}. complex_of_real (real i + a) powr - s) =\n    (\\<Sum>i = 0..n. complex_of_real (real i + a) powr - s) -\n    complex_of_real a powr - s", "by (subst sum.head) auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0<..n}. complex_of_real (real i + a) powr - s) =\n  (\\<Sum>i = 0..n. complex_of_real (real i + a) powr - s) -\n  complex_of_real a powr - s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0<..n}. complex_of_real (real i + a) powr - s) =\n  (\\<Sum>i = 0..n. complex_of_real (real i + a) powr - s) -\n  complex_of_real a powr - s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "have \"(\\<Sum>i=0..n. of_real (real i + a) powr - s) = S n + of_real (real n + a) powr -s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..n. complex_of_real (real i + a) powr - s) =\n    S n + complex_of_real (real n + a) powr - s", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..n. complex_of_real (real i + a) powr - s) =\n    (\\<Sum>i<n. complex_of_real (real i + a) powr - s) +\n    complex_of_real (real n + a) powr - s", "by (subst sum.last_plus) (auto simp: atLeast0LessThan)"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..n. complex_of_real (real i + a) powr - s) =\n  S n + complex_of_real (real n + a) powr - s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "finally"], ["proof (chain)\npicking this:\n  S n + complex_of_real (real n + a) powr - s - complex_of_real a powr - s -\n  (I n - C') =\n  C + D n + R n", "have \"C - C' + C'' - D' n + D n + R n + (I n - I' n) = S n - I' n\""], ["proof (prove)\nusing this:\n  S n + complex_of_real (real n + a) powr - s - complex_of_real a powr - s -\n  (I n - C') =\n  C + D n + R n\n\ngoal (1 subgoal):\n 1. C - C' + C'' - D' n + D n + R n + (I n - I' n) = S n - I' n", "by (simp add: algebra_simps S_def D'_def C''_def)"], ["proof (state)\nthis:\n  C - C' + C'' - D' n + D n + R n + (I n - I' n) = S n - I' n\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "}"], ["proof (state)\nthis:\n  0 < ?n2 \\<Longrightarrow>\n  C - C' + C'' - D' ?n2 + D ?n2 + R ?n2 + (I ?n2 - I' ?n2) = S ?n2 - I' ?n2\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "hence ev: \"eventually (\\<lambda>n. C - C' + C'' - D' n + D n + R n + (I n - I' n) = S n - I' n) at_top\""], ["proof (prove)\nusing this:\n  0 < ?n2 \\<Longrightarrow>\n  C - C' + C'' - D' ?n2 + D ?n2 + R ?n2 + (I ?n2 - I' ?n2) = S ?n2 - I' ?n2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       C - C' + C'' - D' n + D n + R n + (I n - I' n) = S n - I' n", "by (intro eventually_mono[OF eventually_gt_at_top[of 0]]) auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     C - C' + C'' - D' n + D n + R n + (I n - I' n) = S n - I' n\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "have [simp]: \"-1 - s = -s - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 - s = - s - 1", "by simp"], ["proof (state)\nthis:\n  - 1 - s = - s - 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "{"], ["proof (state)\nthis:\n  - 1 - s = - s - 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "let ?C = \"norm (pochhammer s 1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "have \"R \\<longlonglongrightarrow> R_lim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<longlonglongrightarrow> R_lim", "unfolding R_def R_lim_def of_nat_0"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        EM_remainder' 1\n         (\\<lambda>x.\n             (- 1) ^ 1 * pochhammer s 1 *\n             complex_of_real (x + a) powr (- s - of_nat 1))\n         0 (real n))\n    \\<longlonglongrightarrow> EM_remainder 1\n                               (\\<lambda>x.\n                                   (- 1) ^ 1 * pochhammer s 1 *\n                                   complex_of_real (x + a) powr\n                                   (- s - of_nat 1))\n                               0", "proof (subst of_int_0 [symmetric], rule tendsto_EM_remainder)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>y.\n       real_of_int 0 \\<le> y \\<Longrightarrow>\n       (?G has_real_derivative ?g y) (at y within {real_of_int 0..})\n 2. \\<And>a' n.\n       \\<lbrakk>real_of_int 0 \\<le> a'; a' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly 1 t *\\<^sub>R\n                             ((- 1) ^ 1 * pochhammer s 1 *\n                              complex_of_real (t + a) powr\n                              (- s - of_nat 1))) integrable_on\n                         {a'..n}\n 3. convergent (\\<lambda>y. ?G (real y))\n 4. \\<forall>\\<^sub>F x in at_top.\n       cmod\n        ((- 1) ^ 1 * pochhammer s 1 *\n         complex_of_real (x + a) powr (- s - of_nat 1))\n       \\<le> ?g x", "show \"eventually (\\<lambda>x. norm (?fs 1 x) \\<le> ?C * (x + a) powr (-Re s - 1)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       cmod\n        ((- 1) ^ 1 * pochhammer s 1 *\n         complex_of_real (x + a) powr (- s - of_nat 1))\n       \\<le> cmod (pochhammer s 1) * (x + a) powr (- Re s - 1)", "using eventually_ge_at_top[of 0]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) (0::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       cmod\n        ((- 1) ^ 1 * pochhammer s 1 *\n         complex_of_real (x + a) powr (- s - of_nat 1))\n       \\<le> cmod (pochhammer s 1) * (x + a) powr (- Re s - 1)", "by eventually_elim (insert assms, auto simp: norm_mult norm_powr_real_powr)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     cmod\n      ((- 1) ^ 1 * pochhammer s 1 *\n       complex_of_real (x + a) powr (- s - of_nat 1))\n     \\<le> cmod (pochhammer s 1) * (x + a) powr (- Re s - 1)\n\ngoal (3 subgoals):\n 1. \\<And>y.\n       real_of_int 0 \\<le> y \\<Longrightarrow>\n       (?G has_real_derivative\n        cmod (pochhammer s 1) * (y + a) powr (- Re s - 1))\n        (at y within {real_of_int 0..})\n 2. \\<And>a' n.\n       \\<lbrakk>real_of_int 0 \\<le> a'; a' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly 1 t *\\<^sub>R\n                             ((- 1) ^ 1 * pochhammer s 1 *\n                              complex_of_real (t + a) powr\n                              (- s - of_nat 1))) integrable_on\n                         {a'..n}\n 3. convergent (\\<lambda>y. ?G (real y))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>y.\n       real_of_int 0 \\<le> y \\<Longrightarrow>\n       (?G has_real_derivative\n        cmod (pochhammer s 1) * (y + a) powr (- Re s - 1))\n        (at y within {real_of_int 0..})\n 2. \\<And>a' n.\n       \\<lbrakk>real_of_int 0 \\<le> a'; a' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly 1 t *\\<^sub>R\n                             ((- 1) ^ 1 * pochhammer s 1 *\n                              complex_of_real (t + a) powr\n                              (- s - of_nat 1))) integrable_on\n                         {a'..n}\n 3. convergent (\\<lambda>y. ?G (real y))", "fix x"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>y.\n       real_of_int 0 \\<le> y \\<Longrightarrow>\n       (?G has_real_derivative\n        cmod (pochhammer s 1) * (y + a) powr (- Re s - 1))\n        (at y within {real_of_int 0..})\n 2. \\<And>a' n.\n       \\<lbrakk>real_of_int 0 \\<le> a'; a' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly 1 t *\\<^sub>R\n                             ((- 1) ^ 1 * pochhammer s 1 *\n                              complex_of_real (t + a) powr\n                              (- s - of_nat 1))) integrable_on\n                         {a'..n}\n 3. convergent (\\<lambda>y. ?G (real y))", "assume x: \"x \\<ge> real_of_int 0\""], ["proof (state)\nthis:\n  real_of_int 0 \\<le> x\n\ngoal (3 subgoals):\n 1. \\<And>y.\n       real_of_int 0 \\<le> y \\<Longrightarrow>\n       (?G has_real_derivative\n        cmod (pochhammer s 1) * (y + a) powr (- Re s - 1))\n        (at y within {real_of_int 0..})\n 2. \\<And>a' n.\n       \\<lbrakk>real_of_int 0 \\<le> a'; a' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly 1 t *\\<^sub>R\n                             ((- 1) ^ 1 * pochhammer s 1 *\n                              complex_of_real (t + a) powr\n                              (- s - of_nat 1))) integrable_on\n                         {a'..n}\n 3. convergent (\\<lambda>y. ?G (real y))", "have [simp]: \"-numeral n - (x :: real) = -x - numeral n\" for x n"], ["proof (prove)\ngoal (1 subgoal):\n 1. - numeral n - x = - x - numeral n", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  - numeral ?n - ?x = - ?x - numeral ?n\n\ngoal (3 subgoals):\n 1. \\<And>y.\n       real_of_int 0 \\<le> y \\<Longrightarrow>\n       (?G has_real_derivative\n        cmod (pochhammer s 1) * (y + a) powr (- Re s - 1))\n        (at y within {real_of_int 0..})\n 2. \\<And>a' n.\n       \\<lbrakk>real_of_int 0 \\<le> a'; a' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly 1 t *\\<^sub>R\n                             ((- 1) ^ 1 * pochhammer s 1 *\n                              complex_of_real (t + a) powr\n                              (- s - of_nat 1))) integrable_on\n                         {a'..n}\n 3. convergent (\\<lambda>y. ?G (real y))", "show \"((\\<lambda>x. ?C / (-Re s) * (x + a) powr (-Re s)) has_real_derivative \n              ?C * (x + a) powr (- Re s - 1)) (at x within {real_of_int 0..})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         cmod (pochhammer s 1) / - Re s *\n         (x + a) powr - Re s) has_real_derivative\n     cmod (pochhammer s 1) * (x + a) powr (- Re s - 1))\n     (at x within {real_of_int 0..})", "using assms x"], ["proof (prove)\nusing this:\n  S \\<equiv> \\<lambda>n. \\<Sum>i<n. complex_of_real (real i + a) powr - s\n  I' \\<equiv> \\<lambda>n. of_nat n powr (1 - s) / (1 - s)\n  0 < Re s\n  s \\<noteq> 1\n  0 < a\n  real_of_int 0 \\<le> x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         cmod (pochhammer s 1) / - Re s *\n         (x + a) powr - Re s) has_real_derivative\n     cmod (pochhammer s 1) * (x + a) powr (- Re s - 1))\n     (at x within {real_of_int 0..})", "by (auto intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       cmod (pochhammer s 1) / - Re s *\n       (x + a) powr - Re s) has_real_derivative\n   cmod (pochhammer s 1) * (x + a) powr (- Re s - 1))\n   (at x within {real_of_int 0..})\n\ngoal (2 subgoals):\n 1. \\<And>a' n.\n       \\<lbrakk>real_of_int 0 \\<le> a'; a' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly 1 t *\\<^sub>R\n                             ((- 1) ^ 1 * pochhammer s 1 *\n                              complex_of_real (t + a) powr\n                              (- s - of_nat 1))) integrable_on\n                         {a'..n}\n 2. convergent\n     (\\<lambda>y. cmod (pochhammer s 1) / - Re s * (real y + a) powr - Re s)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a' n.\n       \\<lbrakk>real_of_int 0 \\<le> a'; a' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly 1 t *\\<^sub>R\n                             ((- 1) ^ 1 * pochhammer s 1 *\n                              complex_of_real (t + a) powr\n                              (- s - of_nat 1))) integrable_on\n                         {a'..n}\n 2. convergent\n     (\\<lambda>y. cmod (pochhammer s 1) / - Re s * (real y + a) powr - Re s)", "have \"(\\<lambda>y. ?C / (- Re s) * (a + real y) powr (- Re s)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>y. cmod (pochhammer s 1) / - Re s * (a + real y) powr - Re s)\n    \\<longlonglongrightarrow> 0", "by (intro tendsto_mult_right_zero tendsto_neg_powr filterlim_real_sequentially\n                  filterlim_tendsto_add_at_top[OF tendsto_const]) (use assms in auto)"], ["proof (state)\nthis:\n  (\\<lambda>y. cmod (pochhammer s 1) / - Re s * (a + real y) powr - Re s)\n  \\<longlonglongrightarrow> 0\n\ngoal (2 subgoals):\n 1. \\<And>a' n.\n       \\<lbrakk>real_of_int 0 \\<le> a'; a' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly 1 t *\\<^sub>R\n                             ((- 1) ^ 1 * pochhammer s 1 *\n                              complex_of_real (t + a) powr\n                              (- s - of_nat 1))) integrable_on\n                         {a'..n}\n 2. convergent\n     (\\<lambda>y. cmod (pochhammer s 1) / - Re s * (real y + a) powr - Re s)", "thus \"convergent (\\<lambda>y. ?C / (- Re s) * (real y + a) powr (- Re s))\""], ["proof (prove)\nusing this:\n  (\\<lambda>y. cmod (pochhammer s 1) / - Re s * (a + real y) powr - Re s)\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. convergent\n     (\\<lambda>y. cmod (pochhammer s 1) / - Re s * (real y + a) powr - Re s)", "by (auto simp: add_ac convergent_def)"], ["proof (state)\nthis:\n  convergent\n   (\\<lambda>y. cmod (pochhammer s 1) / - Re s * (real y + a) powr - Re s)\n\ngoal (1 subgoal):\n 1. \\<And>a' n.\n       \\<lbrakk>real_of_int 0 \\<le> a'; a' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly 1 t *\\<^sub>R\n                             ((- 1) ^ 1 * pochhammer s 1 *\n                              complex_of_real (t + a) powr\n                              (- s - of_nat 1))) integrable_on\n                         {a'..n}", "qed (intro integrable_EM_remainder' continuous_intros, insert assms, auto simp: add_eq_0_iff)"], ["proof (state)\nthis:\n  R \\<longlonglongrightarrow> R_lim\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "}"], ["proof (state)\nthis:\n  R \\<longlonglongrightarrow> R_lim\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "moreover"], ["proof (state)\nthis:\n  R \\<longlonglongrightarrow> R_lim\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "have \"(\\<lambda>n. I n - I' n) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. I n - I' n) \\<longlonglongrightarrow> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. I n - I' n) \\<longlonglongrightarrow> 0", "have \"(\\<lambda>n. (complex_of_real (real n + a) powr (1 - s) - \n                 of_real (real n) powr (1 - s)) / (1 - s)) \\<longlonglongrightarrow> 0 / (1 - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        (complex_of_real (real n + a) powr (1 - s) -\n         complex_of_real (real n) powr (1 - s)) /\n        (1 - s))\n    \\<longlonglongrightarrow> 0 / (1 - s)", "using assms(3-5)"], ["proof (prove)\nusing this:\n  0 < Re s\n  s \\<noteq> 1\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        (complex_of_real (real n + a) powr (1 - s) -\n         complex_of_real (real n) powr (1 - s)) /\n        (1 - s))\n    \\<longlonglongrightarrow> 0 / (1 - s)", "by (intro filterlim_compose[OF _ filterlim_real_sequentially]\n                             tendsto_divide complex_powr_add_minus_powr_asymptotics) auto"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      (complex_of_real (real n + a) powr (1 - s) -\n       complex_of_real (real n) powr (1 - s)) /\n      (1 - s))\n  \\<longlonglongrightarrow> 0 / (1 - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. I n - I' n) \\<longlonglongrightarrow> 0", "thus \"(\\<lambda>n. I n - I' n) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      (complex_of_real (real n + a) powr (1 - s) -\n       complex_of_real (real n) powr (1 - s)) /\n      (1 - s))\n  \\<longlonglongrightarrow> 0 / (1 - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. I n - I' n) \\<longlonglongrightarrow> 0", "by (simp add: I_def I'_def divide_simps)"], ["proof (state)\nthis:\n  (\\<lambda>n. I n - I' n) \\<longlonglongrightarrow> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n. I n - I' n) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "ultimately"], ["proof (chain)\npicking this:\n  R \\<longlonglongrightarrow> R_lim\n  (\\<lambda>n. I n - I' n) \\<longlonglongrightarrow> 0", "have \"(\\<lambda>n. C - C' + C'' - D' n + D n + R n + (I n - I' n)) \n                     \\<longlonglongrightarrow> C - C' + C'' - 0 + 0 + R_lim + 0\""], ["proof (prove)\nusing this:\n  R \\<longlonglongrightarrow> R_lim\n  (\\<lambda>n. I n - I' n) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. C - C' + C'' - D' n + D n + R n + (I n - I' n))\n    \\<longlonglongrightarrow> C - C' + C'' - 0 + 0 + R_lim + 0", "unfolding D_def D'_def"], ["proof (prove)\nusing this:\n  R \\<longlonglongrightarrow> R_lim\n  (\\<lambda>n. I n - I' n) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        C - C' + C'' - complex_of_real (a + real n) powr - s +\n        1 / 2 * complex_of_real (a + real n) powr - s +\n        R n +\n        (I n - I' n))\n    \\<longlonglongrightarrow> C - C' + C'' - 0 + 0 + R_lim + 0", "using assms"], ["proof (prove)\nusing this:\n  R \\<longlonglongrightarrow> R_lim\n  (\\<lambda>n. I n - I' n) \\<longlonglongrightarrow> 0\n  S \\<equiv> \\<lambda>n. \\<Sum>i<n. complex_of_real (real i + a) powr - s\n  I' \\<equiv> \\<lambda>n. of_nat n powr (1 - s) / (1 - s)\n  0 < Re s\n  s \\<noteq> 1\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        C - C' + C'' - complex_of_real (a + real n) powr - s +\n        1 / 2 * complex_of_real (a + real n) powr - s +\n        R n +\n        (I n - I' n))\n    \\<longlonglongrightarrow> C - C' + C'' - 0 + 0 + R_lim + 0", "by (intro tendsto_add tendsto_diff tendsto_const tendsto_mult_right_zero\n              tendsto_neg_powr_complex_of_real filterlim_tendsto_add_at_top \n              filterlim_real_sequentially) auto"], ["proof (state)\nthis:\n  (\\<lambda>n. C - C' + C'' - D' n + D n + R n + (I n - I' n))\n  \\<longlonglongrightarrow> C - C' + C'' - 0 + 0 + R_lim + 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "also"], ["proof (state)\nthis:\n  (\\<lambda>n. C - C' + C'' - D' n + D n + R n + (I n - I' n))\n  \\<longlonglongrightarrow> C - C' + C'' - 0 + 0 + R_lim + 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "have \"C - C' + C'' - 0 + 0 + R_lim + 0 = \n               (a powr - s / 2) + a powr (1 - s) / (s - 1) + R_lim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C - C' + C'' - 0 + 0 + R_lim + 0 =\n    complex_of_real a powr - s / 2 +\n    complex_of_real a powr (1 - s) / (s - 1) +\n    R_lim", "by (simp add: C_def C'_def C''_def field_simps)"], ["proof (state)\nthis:\n  C - C' + C'' - 0 + 0 + R_lim + 0 =\n  complex_of_real a powr - s / 2 +\n  complex_of_real a powr (1 - s) / (s - 1) +\n  R_lim\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "also"], ["proof (state)\nthis:\n  C - C' + C'' - 0 + 0 + R_lim + 0 =\n  complex_of_real a powr - s / 2 +\n  complex_of_real a powr (1 - s) / (s - 1) +\n  R_lim\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "have \"\\<dots> = hurwitz_zeta a s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real a powr - s / 2 +\n    complex_of_real a powr (1 - s) / (s - 1) +\n    R_lim =\n    hurwitz_zeta a s", "using assms"], ["proof (prove)\nusing this:\n  S \\<equiv> \\<lambda>n. \\<Sum>i<n. complex_of_real (real i + a) powr - s\n  I' \\<equiv> \\<lambda>n. of_nat n powr (1 - s) / (1 - s)\n  0 < Re s\n  s \\<noteq> 1\n  0 < a\n\ngoal (1 subgoal):\n 1. complex_of_real a powr - s / 2 +\n    complex_of_real a powr (1 - s) / (s - 1) +\n    R_lim =\n    hurwitz_zeta a s", "by (simp add: hurwitz_zeta_def pre_zeta_def pre_zeta_aux_def\n                              R_lim_def scaleR_conv_of_real)"], ["proof (state)\nthis:\n  complex_of_real a powr - s / 2 +\n  complex_of_real a powr (1 - s) / (s - 1) +\n  R_lim =\n  hurwitz_zeta a s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n. C - C' + C'' - D' n + D n + R n + (I n - I' n))\n  \\<longlonglongrightarrow> hurwitz_zeta a s", "have \"(\\<lambda>n. C - C' + C'' - D' n + D n + R n + (I n - I' n)) \\<longlonglongrightarrow> hurwitz_zeta a s\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. C - C' + C'' - D' n + D n + R n + (I n - I' n))\n  \\<longlonglongrightarrow> hurwitz_zeta a s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. C - C' + C'' - D' n + D n + R n + (I n - I' n))\n    \\<longlonglongrightarrow> hurwitz_zeta a s", "."], ["proof (state)\nthis:\n  (\\<lambda>n. C - C' + C'' - D' n + D n + R n + (I n - I' n))\n  \\<longlonglongrightarrow> hurwitz_zeta a s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "with ev"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially.\n     C - C' + C'' - D' n + D n + R n + (I n - I' n) = S n - I' n\n  (\\<lambda>n. C - C' + C'' - D' n + D n + R n + (I n - I' n))\n  \\<longlonglongrightarrow> hurwitz_zeta a s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     C - C' + C'' - D' n + D n + R n + (I n - I' n) = S n - I' n\n  (\\<lambda>n. C - C' + C'' - D' n + D n + R n + (I n - I' n))\n  \\<longlonglongrightarrow> hurwitz_zeta a s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s", "by (blast intro: Lim_transform_eventually)"], ["proof (state)\nthis:\n  (\\<lambda>n. S n - I' n) \\<longlonglongrightarrow> hurwitz_zeta a s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma zeta_critical_strip:\n  fixes s :: complex and a :: real\n  defines \"S \\<equiv> (\\<lambda>n. \\<Sum>i=1..n. (of_nat i) powr - s)\"\n  defines \"I \\<equiv> (\\<lambda>n. of_nat n powr (1 - s) / (1 - s))\"\n  assumes s: \"Re s > 0\" \"s \\<noteq> 1\"\n  shows   \"(\\<lambda>n. S n - I n) \\<longlonglongrightarrow> zeta s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I n) \\<longlonglongrightarrow> zeta s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I n) \\<longlonglongrightarrow> zeta s", "from hurwitz_zeta_critical_strip[OF s zero_less_one]"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      (\\<Sum>i<n. complex_of_real (real i + 1) powr - s) -\n      of_nat n powr (1 - s) / (1 - s))\n  \\<longlonglongrightarrow> hurwitz_zeta 1 s", "have \"(\\<lambda>n. (\\<Sum>i<n. complex_of_real (Suc i) powr - s) -\n            of_nat n powr (1 - s) / (1 - s)) \\<longlonglongrightarrow> hurwitz_zeta 1 s\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      (\\<Sum>i<n. complex_of_real (real i + 1) powr - s) -\n      of_nat n powr (1 - s) / (1 - s))\n  \\<longlonglongrightarrow> hurwitz_zeta 1 s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        (\\<Sum>i<n. complex_of_real (real (Suc i)) powr - s) -\n        of_nat n powr (1 - s) / (1 - s))\n    \\<longlonglongrightarrow> hurwitz_zeta 1 s", "by (simp add: add_ac)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      (\\<Sum>i<n. complex_of_real (real (Suc i)) powr - s) -\n      of_nat n powr (1 - s) / (1 - s))\n  \\<longlonglongrightarrow> hurwitz_zeta 1 s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I n) \\<longlonglongrightarrow> zeta s", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      (\\<Sum>i<n. complex_of_real (real (Suc i)) powr - s) -\n      of_nat n powr (1 - s) / (1 - s))\n  \\<longlonglongrightarrow> hurwitz_zeta 1 s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I n) \\<longlonglongrightarrow> zeta s", "have \"(\\<lambda>n. (\\<Sum>i<n. complex_of_real (Suc i) powr -s)) = (\\<lambda>n. (\\<Sum>i=1..n. of_nat i powr -s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Sum>i<n. complex_of_real (real (Suc i)) powr - s) =\n    (\\<lambda>n. \\<Sum>i = 1..n. of_nat i powr - s)", "by (intro ext sum.reindex_bij_witness[of _ \"\\<lambda>x. x - 1\" Suc]) auto"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<Sum>i<n. complex_of_real (real (Suc i)) powr - s) =\n  (\\<lambda>n. \\<Sum>i = 1..n. of_nat i powr - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I n) \\<longlonglongrightarrow> zeta s", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      (\\<Sum>i = 1..n. of_nat i powr - s) - of_nat n powr (1 - s) / (1 - s))\n  \\<longlonglongrightarrow> hurwitz_zeta 1 s", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      (\\<Sum>i = 1..n. of_nat i powr - s) - of_nat n powr (1 - s) / (1 - s))\n  \\<longlonglongrightarrow> hurwitz_zeta 1 s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. S n - I n) \\<longlonglongrightarrow> zeta s", "by (simp add: zeta_def S_def I_def)"], ["proof (state)\nthis:\n  (\\<lambda>n. S n - I n) \\<longlonglongrightarrow> zeta s\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The non-vanishing of $\\zeta$ for $\\mathfrak{R}(s) \\geq 1$\\<close>"], ["", "text \\<open>\n  This proof is based on a sketch by Newman~\\cite{newman1998analytic}, which was previously\n  formalised in HOL Light by Harrison~\\cite{harrison2009pnt}, albeit in a much more concrete\n  and low-level style.\n\n  Our aim here is to reproduce Newman's proof idea cleanly and on the same high level of\n  abstraction.\n\\<close>"], ["", "theorem zeta_Re_ge_1_nonzero:\n  fixes s assumes \"Re s \\<ge> 1\" \"s \\<noteq> 1\"\n  shows \"zeta s \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta s \\<noteq> 0", "proof (cases \"Re s > 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 1 < Re s \\<Longrightarrow> zeta s \\<noteq> 0\n 2. \\<not> 1 < Re s \\<Longrightarrow> zeta s \\<noteq> 0", "case False"], ["proof (state)\nthis:\n  \\<not> 1 < Re s\n\ngoal (2 subgoals):\n 1. 1 < Re s \\<Longrightarrow> zeta s \\<noteq> 0\n 2. \\<not> 1 < Re s \\<Longrightarrow> zeta s \\<noteq> 0", "define a where \"a = -Im s\""], ["proof (state)\nthis:\n  a = - Im s\n\ngoal (2 subgoals):\n 1. 1 < Re s \\<Longrightarrow> zeta s \\<noteq> 0\n 2. \\<not> 1 < Re s \\<Longrightarrow> zeta s \\<noteq> 0", "from False assms"], ["proof (chain)\npicking this:\n  \\<not> 1 < Re s\n  1 \\<le> Re s\n  s \\<noteq> 1", "have s [simp]: \"s = 1 - \\<i> * a\" and a: \"a \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<not> 1 < Re s\n  1 \\<le> Re s\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. s = 1 - \\<i> * complex_of_real a &&& a \\<noteq> 0", "by (auto simp: complex_eq_iff a_def)"], ["proof (state)\nthis:\n  s = 1 - \\<i> * complex_of_real a\n  a \\<noteq> 0\n\ngoal (2 subgoals):\n 1. 1 < Re s \\<Longrightarrow> zeta s \\<noteq> 0\n 2. \\<not> 1 < Re s \\<Longrightarrow> zeta s \\<noteq> 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta s \\<noteq> 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "assume \"zeta s = 0\""], ["proof (state)\nthis:\n  zeta s = 0\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "hence zero: \"zeta (1 - \\<i> * a) = 0\""], ["proof (prove)\nusing this:\n  zeta s = 0\n\ngoal (1 subgoal):\n 1. zeta (1 - \\<i> * complex_of_real a) = 0", "by simp"], ["proof (state)\nthis:\n  zeta (1 - \\<i> * complex_of_real a) = 0\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "with zeta_cnj[of \"1 - \\<i> * a\"]"], ["proof (chain)\npicking this:\n  zeta (cnj (1 - \\<i> * complex_of_real a)) =\n  cnj (zeta (1 - \\<i> * complex_of_real a))\n  zeta (1 - \\<i> * complex_of_real a) = 0", "have zero': \"zeta (1 + \\<i> * a) = 0\""], ["proof (prove)\nusing this:\n  zeta (cnj (1 - \\<i> * complex_of_real a)) =\n  cnj (zeta (1 - \\<i> * complex_of_real a))\n  zeta (1 - \\<i> * complex_of_real a) = 0\n\ngoal (1 subgoal):\n 1. zeta (1 + \\<i> * complex_of_real a) = 0", "by simp\n\n    \\<comment> \\<open>We define the function $Q(s) = \\zeta(s)^2\\zeta(s+ia)\\zeta(s-ia)$ and its Dirichlet series.\n        The objective will be to show that this function is entire and its Dirichlet series\n        converges everywhere. Of course, $Q(s)$ has singularities at $1$ and $1\\pm ia$, so we \n        need to show they can be removed.\\<close>"], ["proof (state)\nthis:\n  zeta (1 + \\<i> * complex_of_real a) = 0\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "define Q Q_fds\n      where \"Q = (\\<lambda>s. zeta s ^ 2 * zeta (s + \\<i> * a) * zeta (s - \\<i> * a))\"\n        and \"Q_fds = fds_zeta ^ 2 * fds_shift (\\<i> * a) fds_zeta * fds_shift (-\\<i> * a) fds_zeta\""], ["proof (state)\nthis:\n  Q =\n  (\\<lambda>s.\n      (zeta s)\\<^sup>2 * zeta (s + \\<i> * complex_of_real a) *\n      zeta (s - \\<i> * complex_of_real a))\n  Q_fds =\n  fds_zeta\\<^sup>2 * fds_shift (\\<i> * complex_of_real a) fds_zeta *\n  fds_shift (- \\<i> * complex_of_real a) fds_zeta\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "let ?sings = \"{1, 1 + \\<i> * a, 1 - \\<i> * a}\"\n \n    \\<comment> \\<open>We show that @{term Q} is locally bounded everywhere. This is the case because the\n        poles of $\\zeta(s)$ cancel with the zeros of $\\zeta(s\\pm ia)$ and vice versa.\n        This boundedness is then enough to show that @{term Q} has only removable singularities.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "have Q_bigo_1: \"Q \\<in> O[at s](\\<lambda>_. 1)\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "have Q_eq: \"Q = (\\<lambda>s. (zeta s * zeta (s + \\<i> * a)) * (zeta s * zeta (s - \\<i> * a)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q =\n    (\\<lambda>s.\n        zeta s * zeta (s + \\<i> * complex_of_real a) *\n        (zeta s * zeta (s - \\<i> * complex_of_real a)))", "by (simp add: Q_def power2_eq_square mult_ac)\n\n      \\<comment> \\<open>The singularity of $\\zeta(s)$ at 1 gets cancelled by the zero of $\\zeta(s-ia)$:\\<close>"], ["proof (state)\nthis:\n  Q =\n  (\\<lambda>s.\n      zeta s * zeta (s + \\<i> * complex_of_real a) *\n      (zeta s * zeta (s - \\<i> * complex_of_real a)))\n\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "have bigo1: \"(\\<lambda>s. zeta s * zeta (s - \\<i> * a)) \\<in> O[at 1](\\<lambda>_. 1)\"\n        if \"zeta (1 - \\<i> * a) = 0\" \"a \\<noteq> 0\" for a :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "have \"(\\<lambda>s. zeta (s - \\<i> * a) - zeta (1 - \\<i> * a)) \\<in> O[at 1](\\<lambda>s. s - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        zeta (s - \\<i> * complex_of_real a) -\n        zeta (1 - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>s. s - 1)", "using that"], ["proof (prove)\nusing this:\n  zeta (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        zeta (s - \\<i> * complex_of_real a) -\n        zeta (1 - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>s. s - 1)", "by (intro taylor_bigo_linear holomorphic_on_imp_differentiable_at[of _ \"-{1 + \\<i> * a}\"]\n                    holomorphic_intros) (auto simp: complex_eq_iff)"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      zeta (s - \\<i> * complex_of_real a) -\n      zeta (1 - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>s. s - 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "hence \"(\\<lambda>s. zeta s * zeta (s - \\<i> * a)) \\<in> O[at 1](\\<lambda>s. 1 / (s - 1) * (s - 1))\""], ["proof (prove)\nusing this:\n  (\\<lambda>s.\n      zeta (s - \\<i> * complex_of_real a) -\n      zeta (1 - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>s. s - 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>s. 1 / (s - 1) * (s - 1))", "using that"], ["proof (prove)\nusing this:\n  (\\<lambda>s.\n      zeta (s - \\<i> * complex_of_real a) -\n      zeta (1 - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>s. s - 1)\n  zeta (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>s. 1 / (s - 1) * (s - 1))", "by (intro landau_o.big.mult zeta_bigo_at_1) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>s. 1 / (s - 1) * (s - 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "also"], ["proof (state)\nthis:\n  (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>s. 1 / (s - 1) * (s - 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "have \"(\\<lambda>s. 1 / (s - 1) * (s - 1)) \\<in> \\<Theta>[at 1](\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. (1::'a) / (s - (1::'a)) * (s - (1::'a)))\n    \\<in> \\<Theta>[at (1::'a)](\\<lambda>_. 1::'a)", "by (intro bigthetaI_cong) (auto simp: eventually_at_filter)"], ["proof (state)\nthis:\n  (\\<lambda>s. (1::?'a1) / (s - (1::?'a1)) * (s - (1::?'a1)))\n  \\<in> \\<Theta>[at (1::?'a1)](\\<lambda>_. 1::?'a1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>_. 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "."], ["proof (state)\nthis:\n  (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>_. 1)\n\ngoal:\nNo subgoals!", "qed\n\n      \\<comment> \\<open>The analogous result for $\\zeta(s) \\zeta(s+ia)$:\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>zeta (1 - \\<i> * complex_of_real ?a) = 0; ?a \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>s.\n                        zeta s * zeta (s - \\<i> * complex_of_real ?a))\n                    \\<in> O[at 1](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "have bigo1': \"(\\<lambda>s. zeta s * zeta (s + \\<i> * a)) \\<in> O[at 1](\\<lambda>_. 1)\"\n        if \"zeta (1 - \\<i> * a) = 0\" \"a \\<noteq> 0\" for a :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s + \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "using bigo1[of  \"-a\"] that zeta_cnj[of \"1 - \\<i> * a\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>zeta (1 - \\<i> * complex_of_real (- a)) = 0;\n   - a \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>s.\n                        zeta s * zeta (s - \\<i> * complex_of_real (- a)))\n                    \\<in> O[at 1](\\<lambda>_. 1)\n  zeta (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  zeta (cnj (1 - \\<i> * complex_of_real a)) =\n  cnj (zeta (1 - \\<i> * complex_of_real a))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s + \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "by simp\n\n      \\<comment> \\<open>The singularity of $\\zeta(s-ia)$ gets cancelled by the zero of $\\zeta(s)$:\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>zeta (1 - \\<i> * complex_of_real ?a) = 0; ?a \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>s.\n                        zeta s * zeta (s + \\<i> * complex_of_real ?a))\n                    \\<in> O[at 1](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "have bigo2: \"(\\<lambda>s. zeta s * zeta (s - \\<i> * a)) \\<in> O[at (1 + \\<i> * a)](\\<lambda>_. 1)\"\n        if \"zeta (1 - \\<i> * a) = 0\" \"a \\<noteq> 0\" for a :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n    \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n    \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)", "have \"(\\<lambda>s. zeta s * zeta (s - \\<i> * a)) \\<in> O[filtermap (\\<lambda>s. s + \\<i> * a) (at 1)](\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n    \\<in> O[filtermap (\\<lambda>s. s + \\<i> * complex_of_real a)\n             (at 1)](\\<lambda>_. 1)", "using bigo1'[of a] that"], ["proof (prove)\nusing this:\n  \\<lbrakk>zeta (1 - \\<i> * complex_of_real a) = 0; a \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>s.\n                        zeta s * zeta (s + \\<i> * complex_of_real a))\n                    \\<in> O[at 1](\\<lambda>_. 1)\n  zeta (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n    \\<in> O[filtermap (\\<lambda>s. s + \\<i> * complex_of_real a)\n             (at 1)](\\<lambda>_. 1)", "by (simp add: mult.commute landau_o.big.in_filtermap_iff)"], ["proof (state)\nthis:\n  (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n  \\<in> O[filtermap (\\<lambda>s. s + \\<i> * complex_of_real a)\n           (at 1)](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n    \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)", "also"], ["proof (state)\nthis:\n  (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n  \\<in> O[filtermap (\\<lambda>s. s + \\<i> * complex_of_real a)\n           (at 1)](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n    \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)", "have \"filtermap (\\<lambda>s. s + \\<i> * a) (at 1) = at (1 + \\<i> * a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filtermap (\\<lambda>s. s + \\<i> * complex_of_real a) (at 1) =\n    at (1 + \\<i> * complex_of_real a)", "using filtermap_at_shift[of \"-\\<i> * a\" 1]"], ["proof (prove)\nusing this:\n  filtermap (\\<lambda>x. x - - \\<i> * complex_of_real a) (at 1) =\n  at (1 - - \\<i> * complex_of_real a)\n\ngoal (1 subgoal):\n 1. filtermap (\\<lambda>s. s + \\<i> * complex_of_real a) (at 1) =\n    at (1 + \\<i> * complex_of_real a)", "by simp"], ["proof (state)\nthis:\n  filtermap (\\<lambda>s. s + \\<i> * complex_of_real a) (at 1) =\n  at (1 + \\<i> * complex_of_real a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n    \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n  \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n  \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n    \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)", "."], ["proof (state)\nthis:\n  (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n  \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)\n\ngoal:\nNo subgoals!", "qed\n\n      \\<comment> \\<open>Again, the analogous result for $\\zeta(s) \\zeta(s+ia)$:\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>zeta (1 - \\<i> * complex_of_real ?a) = 0; ?a \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>s.\n                        zeta s * zeta (s - \\<i> * complex_of_real ?a))\n                    \\<in> O[at (1 +\n                                \\<i> * complex_of_real ?a)](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "have bigo2': \"(\\<lambda>s. zeta s * zeta (s + \\<i> * a)) \\<in> O[at (1 - \\<i> * a)](\\<lambda>_. 1)\"\n        if \"zeta (1 - \\<i> * a) = 0\" \"a \\<noteq> 0\" for a :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s + \\<i> * complex_of_real a))\n    \\<in> O[at (1 - \\<i> * complex_of_real a)](\\<lambda>_. 1)", "using bigo2[of \"-a\"] that zeta_cnj[of \"1 - \\<i> * a\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>zeta (1 - \\<i> * complex_of_real (- a)) = 0;\n   - a \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>s.\n                        zeta s * zeta (s - \\<i> * complex_of_real (- a)))\n                    \\<in> O[at (1 +\n                                \\<i> *\n                                complex_of_real (- a))](\\<lambda>_. 1)\n  zeta (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  zeta (cnj (1 - \\<i> * complex_of_real a)) =\n  cnj (zeta (1 - \\<i> * complex_of_real a))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. zeta s * zeta (s + \\<i> * complex_of_real a))\n    \\<in> O[at (1 - \\<i> * complex_of_real a)](\\<lambda>_. 1)", "by simp\n\n      \\<comment> \\<open>Now the final case distinction to show $Q(s)\\in O(1)$ for all $s\\in\\mathbb{C}$:\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>zeta (1 - \\<i> * complex_of_real ?a) = 0; ?a \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>s.\n                        zeta s * zeta (s + \\<i> * complex_of_real ?a))\n                    \\<in> O[at (1 -\n                                \\<i> * complex_of_real ?a)](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "consider \"s = 1\" | \"s = 1 + \\<i> * a\" | \"s = 1 - \\<i> * a\" | \"s \\<notin> ?sings\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s = 1 \\<Longrightarrow> thesis;\n     s = 1 + \\<i> * complex_of_real a \\<Longrightarrow> thesis;\n     s = 1 - \\<i> * complex_of_real a \\<Longrightarrow> thesis;\n     s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                 1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>s = 1 \\<Longrightarrow> ?thesis;\n   s = 1 + \\<i> * complex_of_real a \\<Longrightarrow> ?thesis;\n   s = 1 - \\<i> * complex_of_real a \\<Longrightarrow> ?thesis;\n   s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n               1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>s = 1 \\<Longrightarrow> ?thesis;\n   s = 1 + \\<i> * complex_of_real a \\<Longrightarrow> ?thesis;\n   s = 1 - \\<i> * complex_of_real a \\<Longrightarrow> ?thesis;\n   s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n               1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "proof cases"], ["proof (state)\ngoal (4 subgoals):\n 1. s = 1 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s = 1 + \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 3. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 4. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "case 1"], ["proof (state)\nthis:\n  s = 1\n\ngoal (4 subgoals):\n 1. s = 1 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s = 1 + \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 3. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 4. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = 1\n\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "unfolding Q_eq"], ["proof (prove)\nusing this:\n  s = 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        zeta s * zeta (s + \\<i> * complex_of_real a) *\n        (zeta s * zeta (s - \\<i> * complex_of_real a)))\n    \\<in> O[at s](\\<lambda>_. 1)", "using zero zero' a"], ["proof (prove)\nusing this:\n  s = 1\n  zeta (1 - \\<i> * complex_of_real a) = 0\n  zeta (1 + \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        zeta s * zeta (s + \\<i> * complex_of_real a) *\n        (zeta s * zeta (s - \\<i> * complex_of_real a)))\n    \\<in> O[at s](\\<lambda>_. 1)", "by (auto intro: bigo1 bigo1' landau_o.big.mult_in_1)"], ["proof (state)\nthis:\n  Q \\<in> O[at s](\\<lambda>_. 1)\n\ngoal (3 subgoals):\n 1. s = 1 + \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 3. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. s = 1 + \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 3. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "case 2"], ["proof (state)\nthis:\n  s = 1 + \\<i> * complex_of_real a\n\ngoal (3 subgoals):\n 1. s = 1 + \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 3. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "from a"], ["proof (chain)\npicking this:\n  a \\<noteq> 0", "have \"isCont (\\<lambda>s. zeta s * zeta (s + \\<i> * a)) (1 + \\<i> * a)\""], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. isCont (\\<lambda>s. zeta s * zeta (s + \\<i> * complex_of_real a))\n     (1 + \\<i> * complex_of_real a)", "by (auto intro!: continuous_intros)"], ["proof (state)\nthis:\n  isCont (\\<lambda>s. zeta s * zeta (s + \\<i> * complex_of_real a))\n   (1 + \\<i> * complex_of_real a)\n\ngoal (3 subgoals):\n 1. s = 1 + \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 3. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "with 2"], ["proof (chain)\npicking this:\n  s = 1 + \\<i> * complex_of_real a\n  isCont (\\<lambda>s. zeta s * zeta (s + \\<i> * complex_of_real a))\n   (1 + \\<i> * complex_of_real a)", "show ?thesis"], ["proof (prove)\nusing this:\n  s = 1 + \\<i> * complex_of_real a\n  isCont (\\<lambda>s. zeta s * zeta (s + \\<i> * complex_of_real a))\n   (1 + \\<i> * complex_of_real a)\n\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "unfolding Q_eq"], ["proof (prove)\nusing this:\n  s = 1 + \\<i> * complex_of_real a\n  isCont (\\<lambda>s. zeta s * zeta (s + \\<i> * complex_of_real a))\n   (1 + \\<i> * complex_of_real a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        zeta s * zeta (s + \\<i> * complex_of_real a) *\n        (zeta s * zeta (s - \\<i> * complex_of_real a)))\n    \\<in> O[at s](\\<lambda>_. 1)", "using zero zero' a"], ["proof (prove)\nusing this:\n  s = 1 + \\<i> * complex_of_real a\n  isCont (\\<lambda>s. zeta s * zeta (s + \\<i> * complex_of_real a))\n   (1 + \\<i> * complex_of_real a)\n  zeta (1 - \\<i> * complex_of_real a) = 0\n  zeta (1 + \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        zeta s * zeta (s + \\<i> * complex_of_real a) *\n        (zeta s * zeta (s - \\<i> * complex_of_real a)))\n    \\<in> O[at s](\\<lambda>_. 1)", "by (auto intro: bigo2 landau_o.big.mult_in_1 continuous_imp_bigo_1)"], ["proof (state)\nthis:\n  Q \\<in> O[at s](\\<lambda>_. 1)\n\ngoal (2 subgoals):\n 1. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "case 3"], ["proof (state)\nthis:\n  s = 1 - \\<i> * complex_of_real a\n\ngoal (2 subgoals):\n 1. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "from a"], ["proof (chain)\npicking this:\n  a \\<noteq> 0", "have \"isCont (\\<lambda>s. zeta s * zeta (s - \\<i> * a)) (1 - \\<i> * a)\""], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. isCont (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n     (1 - \\<i> * complex_of_real a)", "by (auto intro!: continuous_intros)"], ["proof (state)\nthis:\n  isCont (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n   (1 - \\<i> * complex_of_real a)\n\ngoal (2 subgoals):\n 1. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "with 3"], ["proof (chain)\npicking this:\n  s = 1 - \\<i> * complex_of_real a\n  isCont (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n   (1 - \\<i> * complex_of_real a)", "show ?thesis"], ["proof (prove)\nusing this:\n  s = 1 - \\<i> * complex_of_real a\n  isCont (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n   (1 - \\<i> * complex_of_real a)\n\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "unfolding Q_eq"], ["proof (prove)\nusing this:\n  s = 1 - \\<i> * complex_of_real a\n  isCont (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n   (1 - \\<i> * complex_of_real a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        zeta s * zeta (s + \\<i> * complex_of_real a) *\n        (zeta s * zeta (s - \\<i> * complex_of_real a)))\n    \\<in> O[at s](\\<lambda>_. 1)", "using zero zero' a"], ["proof (prove)\nusing this:\n  s = 1 - \\<i> * complex_of_real a\n  isCont (\\<lambda>s. zeta s * zeta (s - \\<i> * complex_of_real a))\n   (1 - \\<i> * complex_of_real a)\n  zeta (1 - \\<i> * complex_of_real a) = 0\n  zeta (1 + \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        zeta s * zeta (s + \\<i> * complex_of_real a) *\n        (zeta s * zeta (s - \\<i> * complex_of_real a)))\n    \\<in> O[at s](\\<lambda>_. 1)", "by (auto intro: bigo2' landau_o.big.mult_in_1 continuous_imp_bigo_1)"], ["proof (state)\nthis:\n  Q \\<in> O[at s](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "qed (auto intro!: continuous_imp_bigo_1 continuous_intros simp: Q_def complex_eq_iff)"], ["proof (state)\nthis:\n  Q \\<in> O[at s](\\<lambda>_. 1)\n\ngoal:\nNo subgoals!", "qed\n  \n    \\<comment> \\<open>Thus, we can remove the singularities from @{term Q} and extend it to an entire function.\\<close>"], ["proof (state)\nthis:\n  Q \\<in> O[at ?s](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "have \"\\<exists>Q'. Q' holomorphic_on UNIV \\<and> (\\<forall>z\\<in>UNIV - ?sings. Q' z = Q z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q' holomorphic_on UNIV \\<and>\n       (\\<forall>z\\<in>UNIV -\n                       {1, 1 + \\<i> * complex_of_real a,\n                        1 - \\<i> * complex_of_real a}.\n           Q' z = Q z)", "by (intro removable_singularities Q_bigo_1)\n         (auto simp: Q_def complex_eq_iff intro!: holomorphic_intros)"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     Q' holomorphic_on UNIV \\<and>\n     (\\<forall>z\\<in>UNIV -\n                     {1, 1 + \\<i> * complex_of_real a,\n                      1 - \\<i> * complex_of_real a}.\n         Q' z = Q z)\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>Q'.\n     Q' holomorphic_on UNIV \\<and>\n     (\\<forall>z\\<in>UNIV -\n                     {1, 1 + \\<i> * complex_of_real a,\n                      1 - \\<i> * complex_of_real a}.\n         Q' z = Q z)", "obtain Q' where Q': \"Q' holomorphic_on UNIV\" \"\\<And>z. z \\<notin> ?sings \\<Longrightarrow> Q' z = Q z\""], ["proof (prove)\nusing this:\n  \\<exists>Q'.\n     Q' holomorphic_on UNIV \\<and>\n     (\\<forall>z\\<in>UNIV -\n                     {1, 1 + \\<i> * complex_of_real a,\n                      1 - \\<i> * complex_of_real a}.\n         Q' z = Q z)\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q' holomorphic_on UNIV;\n         \\<And>z.\n            z \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                        1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n            Q' z = Q z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast\n\n    \\<comment> \\<open>@{term Q'} constitutes an analytic continuation of the Dirichlet series of @{term Q}.\\<close>"], ["proof (state)\nthis:\n  Q' holomorphic_on UNIV\n  ?z \\<notin> {1, 1 + \\<i> * complex_of_real a,\n               1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n  Q' ?z = Q ?z\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "have eval_Q_fds: \"eval_fds Q_fds s = Q' s\" if \"Re s > 1\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q' s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q' s", "have \"eval_fds Q_fds s = Q s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q s", "using that"], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q s", "by (simp add: Q_fds_def Q_def eval_fds_mult eval_fds_power fds_abs_converges_mult \n                      fds_abs_converges_power eval_fds_zeta)"], ["proof (state)\nthis:\n  eval_fds Q_fds s = Q s\n\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q' s", "also"], ["proof (state)\nthis:\n  eval_fds Q_fds s = Q s\n\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q' s", "from that"], ["proof (chain)\npicking this:\n  1 < Re s", "have \"\\<dots> = Q' s\""], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. Q s = Q' s", "by (subst Q') auto"], ["proof (state)\nthis:\n  Q s = Q' s\n\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q' s", "finally"], ["proof (chain)\npicking this:\n  eval_fds Q_fds s = Q' s", "show ?thesis"], ["proof (prove)\nusing this:\n  eval_fds Q_fds s = Q' s\n\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q' s", "."], ["proof (state)\nthis:\n  eval_fds Q_fds s = Q' s\n\ngoal:\nNo subgoals!", "qed\n  \n    \\<comment> \\<open>Since $\\zeta(s)$ and $\\zeta(s\\pm ia)$ are completely multiplicative Dirichlet series,\n        the logarithm of their product can be rewritten into the following nice form:\\<close>"], ["proof (state)\nthis:\n  1 < Re ?s \\<Longrightarrow> eval_fds Q_fds ?s = Q' ?s\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "have ln_Q_fds_eq: \n      \"fds_ln 0 Q_fds = fds (\\<lambda>k. of_real (2 * mangoldt k / ln k * (1 + cos (a * ln k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))", "note simps = fds_ln_mult[where l' = 0 and l'' = 0] fds_ln_power[where l' = 0]\n                   fds_ln_prod[where l' = \"\\<lambda>_. 0\"]"], ["proof (state)\nthis:\n  \\<lbrakk>fds_nth ?f 1 \\<noteq> (0::?'a1); fds_nth ?g 1 \\<noteq> (0::?'a1);\n   (0::?'a1) + (0::?'a1) = ?l\\<rbrakk>\n  \\<Longrightarrow> fds_ln ?l (?f * ?g) =\n                    fds_ln (0::?'a1) ?f + fds_ln (0::?'a1) ?g\n  \\<lbrakk>fds_nth ?f 1 \\<noteq> (0::?'a1);\n   ?l = of_nat ?n * (0::?'a1)\\<rbrakk>\n  \\<Longrightarrow> fds_ln ?l (?f ^ ?n) = of_nat ?n * fds_ln (0::?'a1) ?f\n  \\<lbrakk>\\<And>x.\n              x \\<in> ?A \\<Longrightarrow>\n              fds_nth (?f x) 1 \\<noteq> (0::?'b1);\n   (\\<Sum>x\\<in>?A. (0::?'b1)) = ?l\\<rbrakk>\n  \\<Longrightarrow> fds_ln ?l (prod ?f ?A) =\n                    (\\<Sum>x\\<in>?A. fds_ln (0::?'b1) (?f x))\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))", "have \"fds_ln 0 Q_fds = 2 * fds_ln 0 fds_zeta + fds_shift (\\<i> * a) (fds_ln 0 fds_zeta) + \n                               fds_shift (-\\<i> * a) (fds_ln 0 fds_zeta)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    2 * fds_ln 0 fds_zeta +\n    fds_shift (\\<i> * complex_of_real a) (fds_ln 0 fds_zeta) +\n    fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 fds_zeta)", "by (auto simp: Q_fds_def simps)"], ["proof (state)\nthis:\n  fds_ln 0 Q_fds =\n  2 * fds_ln 0 fds_zeta +\n  fds_shift (\\<i> * complex_of_real a) (fds_ln 0 fds_zeta) +\n  fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 fds_zeta)\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))", "also"], ["proof (state)\nthis:\n  fds_ln 0 Q_fds =\n  2 * fds_ln 0 fds_zeta +\n  fds_shift (\\<i> * complex_of_real a) (fds_ln 0 fds_zeta) +\n  fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 fds_zeta)\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))", "have \"completely_multiplicative_function (fds_nth (fds_zeta :: complex fds))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. completely_multiplicative_function (fds_nth fds_zeta)", "by standard auto"], ["proof (state)\nthis:\n  completely_multiplicative_function (fds_nth fds_zeta)\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))", "hence \"fds_ln (0 :: complex) fds_zeta = fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))\""], ["proof (prove)\nusing this:\n  completely_multiplicative_function (fds_nth fds_zeta)\n\ngoal (1 subgoal):\n 1. fds_ln 0 fds_zeta = fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))", "by (subst fds_ln_completely_multiplicative) (auto simp: fds_eq_iff)"], ["proof (state)\nthis:\n  fds_ln 0 fds_zeta = fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))", "also"], ["proof (state)\nthis:\n  fds_ln 0 fds_zeta = fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))", "have \"2 * \\<dots> + fds_shift (\\<i> * a) \\<dots> + fds_shift (-\\<i> * a) \\<dots> = \n                   fds (\\<lambda>k. of_real (2 * mangoldt k / ln k * (1 + cos (a * ln k))))\"\n        (is \"?a = ?b\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n)) +\n    fds_shift (\\<i> * complex_of_real a)\n     (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) +\n    fds_shift (- \\<i> * complex_of_real a)\n     (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))", "proof (intro fds_eqI, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth\n        (2 * fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n)) +\n         fds_shift (\\<i> * complex_of_real a)\n          (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) +\n         fds_shift (- \\<i> * complex_of_real a)\n          (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))))\n        n =\n       fds_nth\n        (fds (\\<lambda>k.\n                 complex_of_real\n                  (2 * mangoldt k / ln (real k) *\n                   (1 + cos (a * ln (real k))))))\n        n", "case (1 n)"], ["proof (state)\nthis:\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth\n        (2 * fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n)) +\n         fds_shift (\\<i> * complex_of_real a)\n          (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) +\n         fds_shift (- \\<i> * complex_of_real a)\n          (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))))\n        n =\n       fds_nth\n        (fds (\\<lambda>k.\n                 complex_of_real\n                  (2 * mangoldt k / ln (real k) *\n                   (1 + cos (a * ln (real k))))))\n        n", "then"], ["proof (chain)\npicking this:\n  0 < n", "consider \"n = 1\" | \"n > 1\""], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n = 1 \\<Longrightarrow> thesis;\n     1 < n \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by force"], ["proof (state)\nthis:\n  \\<lbrakk>n = 1 \\<Longrightarrow> ?thesis;\n   1 < n \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth\n        (2 * fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n)) +\n         fds_shift (\\<i> * complex_of_real a)\n          (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) +\n         fds_shift (- \\<i> * complex_of_real a)\n          (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))))\n        n =\n       fds_nth\n        (fds (\\<lambda>k.\n                 complex_of_real\n                  (2 * mangoldt k / ln (real k) *\n                   (1 + cos (a * ln (real k))))))\n        n", "hence \"fds_nth ?a n = mangoldt n / ln (real n) * (2 + (n powr (\\<i> * a) + n powr (-\\<i> * a)))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>n = 1 \\<Longrightarrow> ?thesis;\n   1 < n \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. fds_nth\n     (2 * fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n)) +\n      fds_shift (\\<i> * complex_of_real a)\n       (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) +\n      fds_shift (- \\<i> * complex_of_real a)\n       (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))))\n     n =\n    complex_of_real (mangoldt n / ln (real n)) *\n    (2 +\n     (of_nat n powr (\\<i> * complex_of_real a) +\n      of_nat n powr (- \\<i> * complex_of_real a)))", "by cases (auto simp: field_simps scaleR_conv_of_real numeral_fds)"], ["proof (state)\nthis:\n  fds_nth\n   (2 * fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n)) +\n    fds_shift (\\<i> * complex_of_real a)\n     (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) +\n    fds_shift (- \\<i> * complex_of_real a)\n     (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))))\n   n =\n  complex_of_real (mangoldt n / ln (real n)) *\n  (2 +\n   (of_nat n powr (\\<i> * complex_of_real a) +\n    of_nat n powr (- \\<i> * complex_of_real a)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth\n        (2 * fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n)) +\n         fds_shift (\\<i> * complex_of_real a)\n          (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) +\n         fds_shift (- \\<i> * complex_of_real a)\n          (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))))\n        n =\n       fds_nth\n        (fds (\\<lambda>k.\n                 complex_of_real\n                  (2 * mangoldt k / ln (real k) *\n                   (1 + cos (a * ln (real k))))))\n        n", "also"], ["proof (state)\nthis:\n  fds_nth\n   (2 * fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n)) +\n    fds_shift (\\<i> * complex_of_real a)\n     (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) +\n    fds_shift (- \\<i> * complex_of_real a)\n     (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))))\n   n =\n  complex_of_real (mangoldt n / ln (real n)) *\n  (2 +\n   (of_nat n powr (\\<i> * complex_of_real a) +\n    of_nat n powr (- \\<i> * complex_of_real a)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth\n        (2 * fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n)) +\n         fds_shift (\\<i> * complex_of_real a)\n          (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) +\n         fds_shift (- \\<i> * complex_of_real a)\n          (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))))\n        n =\n       fds_nth\n        (fds (\\<lambda>k.\n                 complex_of_real\n                  (2 * mangoldt k / ln (real k) *\n                   (1 + cos (a * ln (real k))))))\n        n", "have \"n powr (\\<i> * a) + n powr (-\\<i> * a) = 2 * cos (of_real (a * ln n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat n powr (\\<i> * complex_of_real a) +\n    of_nat n powr (- \\<i> * complex_of_real a) =\n    2 * cos (complex_of_real (a * ln (real n)))", "using 1"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. of_nat n powr (\\<i> * complex_of_real a) +\n    of_nat n powr (- \\<i> * complex_of_real a) =\n    2 * cos (complex_of_real (a * ln (real n)))", "by (subst cos_exp_eq) (simp_all add: powr_def algebra_simps)"], ["proof (state)\nthis:\n  of_nat n powr (\\<i> * complex_of_real a) +\n  of_nat n powr (- \\<i> * complex_of_real a) =\n  2 * cos (complex_of_real (a * ln (real n)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth\n        (2 * fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n)) +\n         fds_shift (\\<i> * complex_of_real a)\n          (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) +\n         fds_shift (- \\<i> * complex_of_real a)\n          (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))))\n        n =\n       fds_nth\n        (fds (\\<lambda>k.\n                 complex_of_real\n                  (2 * mangoldt k / ln (real k) *\n                   (1 + cos (a * ln (real k))))))\n        n", "also"], ["proof (state)\nthis:\n  of_nat n powr (\\<i> * complex_of_real a) +\n  of_nat n powr (- \\<i> * complex_of_real a) =\n  2 * cos (complex_of_real (a * ln (real n)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth\n        (2 * fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n)) +\n         fds_shift (\\<i> * complex_of_real a)\n          (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) +\n         fds_shift (- \\<i> * complex_of_real a)\n          (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))))\n        n =\n       fds_nth\n        (fds (\\<lambda>k.\n                 complex_of_real\n                  (2 * mangoldt k / ln (real k) *\n                   (1 + cos (a * ln (real k))))))\n        n", "have \"mangoldt n / ln (real n) * (2 + \\<dots>) = \n                     of_real (2 * mangoldt n / ln n * (1 + cos (a * ln n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (mangoldt n / ln (real n)) *\n    (2 + 2 * cos (complex_of_real (a * ln (real n)))) =\n    complex_of_real\n     (2 * mangoldt n / ln (real n) * (1 + cos (a * ln (real n))))", "by (subst cos_of_real) simp_all"], ["proof (state)\nthis:\n  complex_of_real (mangoldt n / ln (real n)) *\n  (2 + 2 * cos (complex_of_real (a * ln (real n)))) =\n  complex_of_real\n   (2 * mangoldt n / ln (real n) * (1 + cos (a * ln (real n))))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth\n        (2 * fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n)) +\n         fds_shift (\\<i> * complex_of_real a)\n          (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) +\n         fds_shift (- \\<i> * complex_of_real a)\n          (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))))\n        n =\n       fds_nth\n        (fds (\\<lambda>k.\n                 complex_of_real\n                  (2 * mangoldt k / ln (real k) *\n                   (1 + cos (a * ln (real k))))))\n        n", "finally"], ["proof (chain)\npicking this:\n  fds_nth\n   (2 * fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n)) +\n    fds_shift (\\<i> * complex_of_real a)\n     (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) +\n    fds_shift (- \\<i> * complex_of_real a)\n     (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))))\n   n =\n  complex_of_real\n   (2 * mangoldt n / ln (real n) * (1 + cos (a * ln (real n))))", "show ?case"], ["proof (prove)\nusing this:\n  fds_nth\n   (2 * fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n)) +\n    fds_shift (\\<i> * complex_of_real a)\n     (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) +\n    fds_shift (- \\<i> * complex_of_real a)\n     (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))))\n   n =\n  complex_of_real\n   (2 * mangoldt n / ln (real n) * (1 + cos (a * ln (real n))))\n\ngoal (1 subgoal):\n 1. fds_nth\n     (2 * fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n)) +\n      fds_shift (\\<i> * complex_of_real a)\n       (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) +\n      fds_shift (- \\<i> * complex_of_real a)\n       (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))))\n     n =\n    fds_nth\n     (fds (\\<lambda>k.\n              complex_of_real\n               (2 * mangoldt k / ln (real k) *\n                (1 + cos (a * ln (real k))))))\n     n", "by (simp add: fds_nth_fds')"], ["proof (state)\nthis:\n  fds_nth\n   (2 * fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n)) +\n    fds_shift (\\<i> * complex_of_real a)\n     (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) +\n    fds_shift (- \\<i> * complex_of_real a)\n     (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))))\n   n =\n  fds_nth\n   (fds (\\<lambda>k.\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k))))))\n   n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 * fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n)) +\n  fds_shift (\\<i> * complex_of_real a)\n   (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) +\n  fds_shift (- \\<i> * complex_of_real a)\n   (fds (\\<lambda>n. mangoldt n /\\<^sub>R ln (real n))) =\n  fds (\\<lambda>k.\n          complex_of_real\n           (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))", "finally"], ["proof (chain)\npicking this:\n  fds_ln 0 Q_fds =\n  fds (\\<lambda>k.\n          complex_of_real\n           (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))", "show ?thesis"], ["proof (prove)\nusing this:\n  fds_ln 0 Q_fds =\n  fds (\\<lambda>k.\n          complex_of_real\n           (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))", "."], ["proof (state)\nthis:\n  fds_ln 0 Q_fds =\n  fds (\\<lambda>k.\n          complex_of_real\n           (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))\n\ngoal:\nNo subgoals!", "qed\n    \\<comment> \\<open>It is then obvious that this logarithm series has non-negative real coefficients.\\<close>"], ["proof (state)\nthis:\n  fds_ln 0 Q_fds =\n  fds (\\<lambda>k.\n          complex_of_real\n           (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  fds_ln 0 Q_fds =\n  fds (\\<lambda>k.\n          complex_of_real\n           (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "have \"nonneg_dirichlet_series \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nonneg_dirichlet_series\n     (fds (\\<lambda>k.\n              complex_of_real\n               (2 * mangoldt k / ln (real k) *\n                (1 + cos (a * ln (real k))))))", "proof (standard, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth\n        (fds (\\<lambda>k.\n                 complex_of_real\n                  (2 * mangoldt k / ln (real k) *\n                   (1 + cos (a * ln (real k))))))\n        n\n       \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "case (1 n)"], ["proof (state)\nthis:\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth\n        (fds (\\<lambda>k.\n                 complex_of_real\n                  (2 * mangoldt k / ln (real k) *\n                   (1 + cos (a * ln (real k))))))\n        n\n       \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "from cos_ge_minus_one[of \"a * ln n\"]"], ["proof (chain)\npicking this:\n  - 1 \\<le> cos (a * ln (real n))", "have \"1 + cos (a * ln (real n)) \\<ge> 0\""], ["proof (prove)\nusing this:\n  - 1 \\<le> cos (a * ln (real n))\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 + cos (a * ln (real n))", "by linarith"], ["proof (state)\nthis:\n  0 \\<le> 1 + cos (a * ln (real n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth\n        (fds (\\<lambda>k.\n                 complex_of_real\n                  (2 * mangoldt k / ln (real k) *\n                   (1 + cos (a * ln (real k))))))\n        n\n       \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "thus ?case"], ["proof (prove)\nusing this:\n  0 \\<le> 1 + cos (a * ln (real n))\n\ngoal (1 subgoal):\n 1. fds_nth\n     (fds (\\<lambda>k.\n              complex_of_real\n               (2 * mangoldt k / ln (real k) *\n                (1 + cos (a * ln (real k))))))\n     n\n    \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "using 1"], ["proof (prove)\nusing this:\n  0 \\<le> 1 + cos (a * ln (real n))\n  0 < n\n\ngoal (1 subgoal):\n 1. fds_nth\n     (fds (\\<lambda>k.\n              complex_of_real\n               (2 * mangoldt k / ln (real k) *\n                (1 + cos (a * ln (real k))))))\n     n\n    \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "by (cases \"n = 0\")\n           (auto simp: complex_nonneg_Reals_iff fds_nth_fds' mangoldt_nonneg\n                 intro!: divide_nonneg_nonneg mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  fds_nth\n   (fds (\\<lambda>k.\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k))))))\n   n\n  \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0\n\ngoal:\nNo subgoals!", "qed\n    \\<comment> \\<open>Therefore, the original series also has non-negative real coefficients.\\<close>"], ["proof (state)\nthis:\n  nonneg_dirichlet_series\n   (fds (\\<lambda>k.\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k))))))\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  nonneg_dirichlet_series (fds_ln 0 Q_fds)", "have nonneg: \"nonneg_dirichlet_series Q_fds\""], ["proof (prove)\nusing this:\n  nonneg_dirichlet_series (fds_ln 0 Q_fds)\n\ngoal (1 subgoal):\n 1. nonneg_dirichlet_series Q_fds", "by (rule nonneg_dirichlet_series_lnD) (auto simp: Q_fds_def)\n  \n    \\<comment> \\<open>By the Pringsheim--Landau theorem, a Dirichlet series with non-negative coefficnets that \n        can be analytically continued to the entire complex plane must converge everywhere, i.\\,e.\\ \n        its abscissa of (absolute) convergence is $-\\infty$:\\<close>"], ["proof (state)\nthis:\n  nonneg_dirichlet_series Q_fds\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "have abscissa_Q_fds: \"abs_conv_abscissa Q_fds \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_conv_abscissa Q_fds \\<le> 1", "unfolding Q_fds_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_conv_abscissa\n     (fds_zeta\\<^sup>2 * fds_shift (\\<i> * complex_of_real a) fds_zeta *\n      fds_shift (- \\<i> * complex_of_real a) fds_zeta)\n    \\<le> 1", "by (auto intro!: abs_conv_abscissa_mult_leI abs_conv_abscissa_power_leI)"], ["proof (state)\nthis:\n  abs_conv_abscissa Q_fds \\<le> 1\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "with nonneg and eval_Q_fds and \\<open>Q' holomorphic_on UNIV\\<close>"], ["proof (chain)\npicking this:\n  nonneg_dirichlet_series Q_fds\n  1 < Re ?s \\<Longrightarrow> eval_fds Q_fds ?s = Q' ?s\n  Q' holomorphic_on UNIV\n  abs_conv_abscissa Q_fds \\<le> 1", "have abscissa: \"abs_conv_abscissa Q_fds = -\\<infinity>\""], ["proof (prove)\nusing this:\n  nonneg_dirichlet_series Q_fds\n  1 < Re ?s \\<Longrightarrow> eval_fds Q_fds ?s = Q' ?s\n  Q' holomorphic_on UNIV\n  abs_conv_abscissa Q_fds \\<le> 1\n\ngoal (1 subgoal):\n 1. abs_conv_abscissa Q_fds = - \\<infinity>", "by (intro entire_continuation_imp_abs_conv_abscissa_MInfty[where c = 1 and g = Q'])\n           (auto simp: one_ereal_def)\n  \n    \\<comment> \\<open>This now leads to a contradiction in a very obvious way. If @{term Q_fds} is\n        absolutely convergent, then the subseries corresponding to powers of 2 (\\i.e.\n        we delete all summands $a_n / n ^ s$ where $n$ is not a power of 2 from the sum) is\n        also absolutely convergent. We denote this series with $R$.\\<close>"], ["proof (state)\nthis:\n  abs_conv_abscissa Q_fds = - \\<infinity>\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "define R_fds where \"R_fds = fds_primepow_subseries 2 Q_fds\""], ["proof (state)\nthis:\n  R_fds = fds_primepow_subseries 2 Q_fds\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "have \"conv_abscissa R_fds \\<le> abs_conv_abscissa R_fds\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_abscissa R_fds \\<le> abs_conv_abscissa R_fds", "by (rule conv_le_abs_conv_abscissa)"], ["proof (state)\nthis:\n  conv_abscissa R_fds \\<le> abs_conv_abscissa R_fds\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  conv_abscissa R_fds \\<le> abs_conv_abscissa R_fds\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "have \"abs_conv_abscissa R_fds \\<le> abs_conv_abscissa Q_fds\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_conv_abscissa R_fds \\<le> abs_conv_abscissa Q_fds", "unfolding R_fds_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_conv_abscissa (fds_primepow_subseries 2 Q_fds)\n    \\<le> abs_conv_abscissa Q_fds", "by (rule abs_conv_abscissa_restrict)"], ["proof (state)\nthis:\n  abs_conv_abscissa R_fds \\<le> abs_conv_abscissa Q_fds\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  abs_conv_abscissa R_fds \\<le> abs_conv_abscissa Q_fds\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "have \"\\<dots> = -\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_conv_abscissa Q_fds = - \\<infinity>", "by (simp add: abscissa)"], ["proof (state)\nthis:\n  abs_conv_abscissa Q_fds = - \\<infinity>\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  conv_abscissa R_fds \\<le> - \\<infinity>", "have abscissa': \"conv_abscissa R_fds = -\\<infinity>\""], ["proof (prove)\nusing this:\n  conv_abscissa R_fds \\<le> - \\<infinity>\n\ngoal (1 subgoal):\n 1. conv_abscissa R_fds = - \\<infinity>", "by simp\n  \n    \\<comment> \\<open>Since $\\zeta(s)$ and $\\zeta(s \\pm ia)$ have an Euler product expansion for \n        $\\mathfrak{R}(s) > 1$, we have\n          \\[R(s) = (1 - 2^{-s})^-2 (1 - 2^{-s+ia})^{-1} (1 - 2^{-s-ia})^{-1}\\]\n        there, and since $R$ converges everywhere and the right-hand side is holomorphic for\n        $\\mathfrak{R}(s) > 0$, the equation is also valid for all $s$ with $\\mathfrak{R}(s) > 0$\n        by analytic continuation.\\<close>"], ["proof (state)\nthis:\n  conv_abscissa R_fds = - \\<infinity>\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "have eval_R: \"eval_fds R_fds s = \n                   1 / ((1 - 2 powr -s) ^ 2 * (1 - 2 powr (-s + \\<i> * a)) * (1 - 2 powr (-s - \\<i> * a)))\"\n      (is \"_ = ?f s\") if \"Re s > 0\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds R_fds s =\n    1 /\n    ((1 - 2 powr - s)\\<^sup>2 *\n     (1 - 2 powr (- s + \\<i> * complex_of_real a)) *\n     (1 - 2 powr (- s - \\<i> * complex_of_real a)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eval_fds R_fds s =\n    1 /\n    ((1 - 2 powr - s)\\<^sup>2 *\n     (1 - 2 powr (- s + \\<i> * complex_of_real a)) *\n     (1 - 2 powr (- s - \\<i> * complex_of_real a)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds R_fds s =\n    1 /\n    ((1 - 2 powr - s)\\<^sup>2 *\n     (1 - 2 powr (- s + \\<i> * complex_of_real a)) *\n     (1 - 2 powr (- s - \\<i> * complex_of_real a)))", "proof (rule analytic_continuation_open[where f = \"eval_fds R_fds\"])"], ["proof (state)\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. eval_fds R_fds holomorphic_on ?s'\n 7. (\\<lambda>b.\n        1 /\n        ((1 - 2 powr - b)\\<^sup>2 *\n         (1 - 2 powr (- b + \\<i> * complex_of_real a)) *\n         (1 - 2 powr (- b - \\<i> * complex_of_real a)))) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       eval_fds R_fds z =\n       1 /\n       ((1 - 2 powr - z)\\<^sup>2 *\n        (1 - 2 powr (- z + \\<i> * complex_of_real a)) *\n        (1 - 2 powr (- z - \\<i> * complex_of_real a)))\n 9. s \\<in> ?s'", "show \"?f holomorphic_on {s. Re s > 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        1 /\n        ((1 - 2 powr - b)\\<^sup>2 *\n         (1 - 2 powr (- b + \\<i> * complex_of_real a)) *\n         (1 - 2 powr (- b - \\<i> * complex_of_real a)))) holomorphic_on\n    {s. 0 < Re s}", "by (intro holomorphic_intros) (auto simp: powr_def exp_eq_1 Ln_Reals_eq)"], ["proof (state)\nthis:\n  (\\<lambda>b.\n      1 /\n      ((1 - 2 powr - b)\\<^sup>2 *\n       (1 - 2 powr (- b + \\<i> * complex_of_real a)) *\n       (1 - 2 powr (- b - \\<i> * complex_of_real a)))) holomorphic_on\n  {s. 0 < Re s}\n\ngoal (8 subgoals):\n 1. open ?s\n 2. open {s. 0 < Re s}\n 3. ?s \\<noteq> {}\n 4. connected {s. 0 < Re s}\n 5. ?s \\<subseteq> {s. 0 < Re s}\n 6. eval_fds R_fds holomorphic_on {s. 0 < Re s}\n 7. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       eval_fds R_fds z =\n       1 /\n       ((1 - 2 powr - z)\\<^sup>2 *\n        (1 - 2 powr (- z + \\<i> * complex_of_real a)) *\n        (1 - 2 powr (- z - \\<i> * complex_of_real a)))\n 8. s \\<in> {s. 0 < Re s}", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. open ?s\n 2. open {s. 0 < Re s}\n 3. ?s \\<noteq> {}\n 4. connected {s. 0 < Re s}\n 5. ?s \\<subseteq> {s. 0 < Re s}\n 6. eval_fds R_fds holomorphic_on {s. 0 < Re s}\n 7. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       eval_fds R_fds z =\n       1 /\n       ((1 - 2 powr - z)\\<^sup>2 *\n        (1 - 2 powr (- z + \\<i> * complex_of_real a)) *\n        (1 - 2 powr (- z - \\<i> * complex_of_real a)))\n 8. s \\<in> {s. 0 < Re s}", "fix z"], ["proof (state)\ngoal (8 subgoals):\n 1. open ?s\n 2. open {s. 0 < Re s}\n 3. ?s \\<noteq> {}\n 4. connected {s. 0 < Re s}\n 5. ?s \\<subseteq> {s. 0 < Re s}\n 6. eval_fds R_fds holomorphic_on {s. 0 < Re s}\n 7. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       eval_fds R_fds z =\n       1 /\n       ((1 - 2 powr - z)\\<^sup>2 *\n        (1 - 2 powr (- z + \\<i> * complex_of_real a)) *\n        (1 - 2 powr (- z - \\<i> * complex_of_real a)))\n 8. s \\<in> {s. 0 < Re s}", "assume z: \"z \\<in> {s. Re s > 1}\""], ["proof (state)\nthis:\n  z \\<in> {s. 1 < Re s}\n\ngoal (8 subgoals):\n 1. open ?s\n 2. open {s. 0 < Re s}\n 3. ?s \\<noteq> {}\n 4. connected {s. 0 < Re s}\n 5. ?s \\<subseteq> {s. 0 < Re s}\n 6. eval_fds R_fds holomorphic_on {s. 0 < Re s}\n 7. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       eval_fds R_fds z =\n       1 /\n       ((1 - 2 powr - z)\\<^sup>2 *\n        (1 - 2 powr (- z + \\<i> * complex_of_real a)) *\n        (1 - 2 powr (- z - \\<i> * complex_of_real a)))\n 8. s \\<in> {s. 0 < Re s}", "have [simp]: \"completely_multiplicative_function (fds_nth fds_zeta)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. completely_multiplicative_function (fds_nth fds_zeta)", "by standard auto"], ["proof (state)\nthis:\n  completely_multiplicative_function (fds_nth fds_zeta)\n\ngoal (8 subgoals):\n 1. open ?s\n 2. open {s. 0 < Re s}\n 3. ?s \\<noteq> {}\n 4. connected {s. 0 < Re s}\n 5. ?s \\<subseteq> {s. 0 < Re s}\n 6. eval_fds R_fds holomorphic_on {s. 0 < Re s}\n 7. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       eval_fds R_fds z =\n       1 /\n       ((1 - 2 powr - z)\\<^sup>2 *\n        (1 - 2 powr (- z + \\<i> * complex_of_real a)) *\n        (1 - 2 powr (- z - \\<i> * complex_of_real a)))\n 8. s \\<in> {s. 0 < Re s}", "thus \"eval_fds R_fds z = ?f z\""], ["proof (prove)\nusing this:\n  completely_multiplicative_function (fds_nth fds_zeta)\n\ngoal (1 subgoal):\n 1. eval_fds R_fds z =\n    1 /\n    ((1 - 2 powr - z)\\<^sup>2 *\n     (1 - 2 powr (- z + \\<i> * complex_of_real a)) *\n     (1 - 2 powr (- z - \\<i> * complex_of_real a)))", "using z"], ["proof (prove)\nusing this:\n  completely_multiplicative_function (fds_nth fds_zeta)\n  z \\<in> {s. 1 < Re s}\n\ngoal (1 subgoal):\n 1. eval_fds R_fds z =\n    1 /\n    ((1 - 2 powr - z)\\<^sup>2 *\n     (1 - 2 powr (- z + \\<i> * complex_of_real a)) *\n     (1 - 2 powr (- z - \\<i> * complex_of_real a)))", "by (simp add: R_fds_def Q_fds_def eval_fds_mult eval_fds_power fds_abs_converges_mult \n                fds_abs_converges_power fds_primepow_subseries_euler_product_cm divide_simps\n                powr_minus powr_diff powr_add fds_abs_summable_zeta)"], ["proof (state)\nthis:\n  eval_fds R_fds z =\n  1 /\n  ((1 - 2 powr - z)\\<^sup>2 *\n   (1 - 2 powr (- z + \\<i> * complex_of_real a)) *\n   (1 - 2 powr (- z - \\<i> * complex_of_real a)))\n\ngoal (7 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected {s. 0 < Re s}\n 5. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 6. eval_fds R_fds holomorphic_on {s. 0 < Re s}\n 7. s \\<in> {s. 0 < Re s}", "qed (insert that abscissa', auto intro!: exI[of _ 2] convex_connected open_halfspace_Re_gt\n                                               convex_halfspace_Re_gt holomorphic_intros)"], ["proof (state)\nthis:\n  eval_fds R_fds s =\n  1 /\n  ((1 - 2 powr - s)\\<^sup>2 *\n   (1 - 2 powr (- s + \\<i> * complex_of_real a)) *\n   (1 - 2 powr (- s - \\<i> * complex_of_real a)))\n\ngoal:\nNo subgoals!", "qed\n  \n    \\<comment> \\<open>We now clearly have a contradiction: $R(s)$, being entire, is continuous everywhere,\n        while the function on the right-hand side clearly has a pole at $0$.\\<close>"], ["proof (state)\nthis:\n  0 < Re ?s \\<Longrightarrow>\n  eval_fds R_fds ?s =\n  1 /\n  ((1 - 2 powr - ?s)\\<^sup>2 *\n   (1 - 2 powr (- ?s + \\<i> * complex_of_real a)) *\n   (1 - 2 powr (- ?s - \\<i> * complex_of_real a)))\n\ngoal (1 subgoal):\n 1. zeta s = 0 \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (rule not_tendsto_and_filterlim_at_infinity)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "have \"((\\<lambda>b. (1-2 powr - b)\\<^sup>2 * (1 - 2 powr (-b+\\<i>*a)) * (1 - 2 powr (-b-\\<i>*a))) \\<longlongrightarrow> 0) \n              (at 0 within {s. Re s > 0})\"\n        (is \"filterlim ?f' _ _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>b.\n         (1 - 2 powr - b)\\<^sup>2 *\n         (1 - 2 powr (- b + \\<i> * complex_of_real a)) *\n         (1 -\n          2 powr (- b - \\<i> * complex_of_real a))) \\<longlongrightarrow>\n     0)\n     (at 0 within {s. 0 < Re s})", "by (intro tendsto_eq_intros) (auto)"], ["proof (state)\nthis:\n  ((\\<lambda>b.\n       (1 - 2 powr - b)\\<^sup>2 *\n       (1 - 2 powr (- b + \\<i> * complex_of_real a)) *\n       (1 - 2 powr (- b - \\<i> * complex_of_real a))) \\<longlongrightarrow>\n   0)\n   (at 0 within {s. 0 < Re s})\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>b.\n       (1 - 2 powr - b)\\<^sup>2 *\n       (1 - 2 powr (- b + \\<i> * complex_of_real a)) *\n       (1 - 2 powr (- b - \\<i> * complex_of_real a))) \\<longlongrightarrow>\n   0)\n   (at 0 within {s. 0 < Re s})\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "have \"eventually (\\<lambda>s. s \\<in> {s. Re s > 0}) (at 0 within {s. Re s > 0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}. s \\<in> {s. 0 < Re s}", "by (auto simp: eventually_at_filter)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}. s \\<in> {s. 0 < Re s}\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "hence \"eventually (\\<lambda>s. ?f' s \\<noteq> 0) (at 0 within {s. Re s > 0})\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}. s \\<in> {s. 0 < Re s}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}.\n       (1 - 2 powr - s)\\<^sup>2 *\n       (1 - 2 powr (- s + \\<i> * complex_of_real a)) *\n       (1 - 2 powr (- s - \\<i> * complex_of_real a)) \\<noteq>\n       0", "by eventually_elim (auto simp: powr_def exp_eq_1 Ln_Reals_eq)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}.\n     (1 - 2 powr - s)\\<^sup>2 *\n     (1 - 2 powr (- s + \\<i> * complex_of_real a)) *\n     (1 - 2 powr (- s - \\<i> * complex_of_real a)) \\<noteq>\n     0\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>b.\n       (1 - 2 powr - b)\\<^sup>2 *\n       (1 - 2 powr (- b + \\<i> * complex_of_real a)) *\n       (1 - 2 powr (- b - \\<i> * complex_of_real a))) \\<longlongrightarrow>\n   0)\n   (at 0 within {s. 0 < Re s})\n  \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}.\n     (1 - 2 powr - s)\\<^sup>2 *\n     (1 - 2 powr (- s + \\<i> * complex_of_real a)) *\n     (1 - 2 powr (- s - \\<i> * complex_of_real a)) \\<noteq>\n     0", "have \"filterlim ?f' (at 0) (at 0 within {s. Re s > 0})\""], ["proof (prove)\nusing this:\n  ((\\<lambda>b.\n       (1 - 2 powr - b)\\<^sup>2 *\n       (1 - 2 powr (- b + \\<i> * complex_of_real a)) *\n       (1 - 2 powr (- b - \\<i> * complex_of_real a))) \\<longlongrightarrow>\n   0)\n   (at 0 within {s. 0 < Re s})\n  \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}.\n     (1 - 2 powr - s)\\<^sup>2 *\n     (1 - 2 powr (- s + \\<i> * complex_of_real a)) *\n     (1 - 2 powr (- s - \\<i> * complex_of_real a)) \\<noteq>\n     0\n\ngoal (1 subgoal):\n 1. LIM b at 0 within {s. 0 < Re s}.\n       (1 - 2 powr - b)\\<^sup>2 *\n       (1 - 2 powr (- b + \\<i> * complex_of_real a)) *\n       (1 - 2 powr (- b - \\<i> * complex_of_real a)) :> at 0", "by (simp add: filterlim_at)"], ["proof (state)\nthis:\n  LIM b at 0 within {s. 0 < Re s}.\n     (1 - 2 powr - b)\\<^sup>2 *\n     (1 - 2 powr (- b + \\<i> * complex_of_real a)) *\n     (1 - 2 powr (- b - \\<i> * complex_of_real a)) :> at 0\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "hence \"filterlim ?f at_infinity (at 0 within {s. Re s > 0})\" (is ?lim)"], ["proof (prove)\nusing this:\n  LIM b at 0 within {s. 0 < Re s}.\n     (1 - 2 powr - b)\\<^sup>2 *\n     (1 - 2 powr (- b + \\<i> * complex_of_real a)) *\n     (1 - 2 powr (- b - \\<i> * complex_of_real a)) :> at 0\n\ngoal (1 subgoal):\n 1. LIM b at 0 within {s. 0 < Re s}.\n       1 /\n       ((1 - 2 powr - b)\\<^sup>2 *\n        (1 - 2 powr (- b + \\<i> * complex_of_real a)) *\n        (1 - 2 powr (- b - \\<i> * complex_of_real a))) :> at_infinity", "by (intro filterlim_divide_at_infinity[OF tendsto_const]\n                     tendsto_mult_filterlim_at_infinity) auto"], ["proof (state)\nthis:\n  LIM b at 0 within {s. 0 < Re s}.\n     1 /\n     ((1 - 2 powr - b)\\<^sup>2 *\n      (1 - 2 powr (- b + \\<i> * complex_of_real a)) *\n      (1 - 2 powr (- b - \\<i> * complex_of_real a))) :> at_infinity\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "also"], ["proof (state)\nthis:\n  LIM b at 0 within {s. 0 < Re s}.\n     1 /\n     ((1 - 2 powr - b)\\<^sup>2 *\n      (1 - 2 powr (- b + \\<i> * complex_of_real a)) *\n      (1 - 2 powr (- b - \\<i> * complex_of_real a))) :> at_infinity\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "have ev: \"eventually (\\<lambda>s. Re s > 0) (at 0 within {s. Re s > 0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}. 0 < Re s", "by (auto simp: eventually_at intro!: exI[of _ 1])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}. 0 < Re s\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "have \"?lim \\<longleftrightarrow> filterlim (eval_fds R_fds) at_infinity (at 0 within {s. Re s > 0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (LIM b at 0 within {s. 0 < Re s}.\n        1 /\n        ((1 - 2 powr - b)\\<^sup>2 *\n         (1 - 2 powr (- b + \\<i> * complex_of_real a)) *\n         (1 - 2 powr (- b - \\<i> * complex_of_real a))) :> at_infinity) =\n    filterlim (eval_fds R_fds) at_infinity (at 0 within {s. 0 < Re s})", "by (intro filterlim_cong refl eventually_mono[OF ev]) (auto simp: eval_R)"], ["proof (state)\nthis:\n  (LIM b at 0 within {s. 0 < Re s}.\n      1 /\n      ((1 - 2 powr - b)\\<^sup>2 *\n       (1 - 2 powr (- b + \\<i> * complex_of_real a)) *\n       (1 - 2 powr (- b - \\<i> * complex_of_real a))) :> at_infinity) =\n  filterlim (eval_fds R_fds) at_infinity (at 0 within {s. 0 < Re s})\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "finally"], ["proof (chain)\npicking this:\n  filterlim (eval_fds R_fds) at_infinity (at 0 within {s. 0 < Re s})", "show \\<dots>"], ["proof (prove)\nusing this:\n  filterlim (eval_fds R_fds) at_infinity (at 0 within {s. 0 < Re s})\n\ngoal (1 subgoal):\n 1. filterlim (eval_fds R_fds) at_infinity (at 0 within {s. 0 < Re s})", "."], ["proof (state)\nthis:\n  filterlim (eval_fds R_fds) at_infinity (at 0 within {s. 0 < Re s})\n\ngoal (2 subgoals):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot\n 2. (eval_fds R_fds \\<longlongrightarrow> ?c) (at 0 within {s. 0 < Re s})", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot\n 2. (eval_fds R_fds \\<longlongrightarrow> ?c) (at 0 within {s. 0 < Re s})", "have \"continuous (at 0 within {s. Re s > 0}) (eval_fds R_fds)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous (at 0 within {s. 0 < Re s}) (eval_fds R_fds)", "by (intro continuous_intros) (auto simp: abscissa')"], ["proof (state)\nthis:\n  continuous (at 0 within {s. 0 < Re s}) (eval_fds R_fds)\n\ngoal (2 subgoals):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot\n 2. (eval_fds R_fds \\<longlongrightarrow> ?c) (at 0 within {s. 0 < Re s})", "thus \"((eval_fds R_fds \\<longlongrightarrow> eval_fds R_fds 0)) (at 0 within {s. Re s > 0})\""], ["proof (prove)\nusing this:\n  continuous (at 0 within {s. 0 < Re s}) (eval_fds R_fds)\n\ngoal (1 subgoal):\n 1. (eval_fds R_fds \\<longlongrightarrow> eval_fds R_fds 0)\n     (at 0 within {s. 0 < Re s})", "by (auto simp: continuous_within)"], ["proof (state)\nthis:\n  (eval_fds R_fds \\<longlongrightarrow> eval_fds R_fds 0)\n   (at 0 within {s. 0 < Re s})\n\ngoal (1 subgoal):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot", "have \"0 \\<in> {s. Re s \\<ge> 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in> {s. 0 \\<le> Re s}", "by simp"], ["proof (state)\nthis:\n  0 \\<in> {s. 0 \\<le> Re s}\n\ngoal (1 subgoal):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot", "also"], ["proof (state)\nthis:\n  0 \\<in> {s. 0 \\<le> Re s}\n\ngoal (1 subgoal):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot", "have \"{s. Re s \\<ge> 0} = closure {s. Re s > 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {s. 0 \\<le> Re s} = closure {s. 0 < Re s}", "using closure_halfspace_gt[of \"1::complex\" 0]"], ["proof (prove)\nusing this:\n  1 \\<noteq> 0 \\<Longrightarrow>\n  closure {x. 0 < 1 \\<bullet> x} = {x. 0 \\<le> 1 \\<bullet> x}\n\ngoal (1 subgoal):\n 1. {s. 0 \\<le> Re s} = closure {s. 0 < Re s}", "by (simp add: inner_commute)"], ["proof (state)\nthis:\n  {s. 0 \\<le> Re s} = closure {s. 0 < Re s}\n\ngoal (1 subgoal):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot", "finally"], ["proof (chain)\npicking this:\n  0 \\<in> closure {s. 0 < Re s}", "have \"0 \\<in> \\<dots>\""], ["proof (prove)\nusing this:\n  0 \\<in> closure {s. 0 < Re s}\n\ngoal (1 subgoal):\n 1. 0 \\<in> closure {s. 0 < Re s}", "."], ["proof (state)\nthis:\n  0 \\<in> closure {s. 0 < Re s}\n\ngoal (1 subgoal):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot", "thus \"at 0 within {s. Re s > 0} \\<noteq> bot\""], ["proof (prove)\nusing this:\n  0 \\<in> closure {s. 0 < Re s}\n\ngoal (1 subgoal):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot", "by (subst at_within_eq_bot_iff) auto"], ["proof (state)\nthis:\n  at 0 within {s. 0 < Re s} \\<noteq> bot\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  zeta s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 < Re s \\<Longrightarrow> zeta s \\<noteq> 0", "qed (fact zeta_Re_gt_1_nonzero)"], ["", "subsection \\<open>Special values of the $\\zeta$ functions\\<close>"], ["", "theorem hurwitz_zeta_neg_of_nat: \n  assumes \"a > 0\"\n  shows   \"hurwitz_zeta a (-of_nat n) = -bernpoly (Suc n) a / of_nat (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "have \"-of_nat n \\<noteq> (1::complex)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - of_nat n \\<noteq> 1", "by (simp add: complex_eq_iff)"], ["proof (state)\nthis:\n  - of_nat n \\<noteq> 1\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "hence \"hurwitz_zeta a (-of_nat n) = \n           pre_zeta a (-of_nat n) + a powr real (Suc n) / (-of_nat (Suc n))\""], ["proof (prove)\nusing this:\n  - of_nat n \\<noteq> 1\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    pre_zeta a (- of_nat n) +\n    complex_of_real (a powr real (Suc n) / - real (Suc n))", "unfolding zeta_def hurwitz_zeta_def"], ["proof (prove)\nusing this:\n  - of_nat n \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (if - of_nat n = 1 then 0\n     else pre_zeta a (- of_nat n) +\n          complex_of_real a powr (1 - - of_nat n) / (- of_nat n - 1)) =\n    pre_zeta a (- of_nat n) +\n    complex_of_real (a powr real (Suc n) / - real (Suc n))", "using assms"], ["proof (prove)\nusing this:\n  - of_nat n \\<noteq> 1\n  0 < a\n\ngoal (1 subgoal):\n 1. (if - of_nat n = 1 then 0\n     else pre_zeta a (- of_nat n) +\n          complex_of_real a powr (1 - - of_nat n) / (- of_nat n - 1)) =\n    pre_zeta a (- of_nat n) +\n    complex_of_real (a powr real (Suc n) / - real (Suc n))", "by (simp add: powr_of_real [symmetric])"], ["proof (state)\nthis:\n  hurwitz_zeta a (- of_nat n) =\n  pre_zeta a (- of_nat n) +\n  complex_of_real (a powr real (Suc n) / - real (Suc n))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "also"], ["proof (state)\nthis:\n  hurwitz_zeta a (- of_nat n) =\n  pre_zeta a (- of_nat n) +\n  complex_of_real (a powr real (Suc n) / - real (Suc n))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "have \"a powr real (Suc n) / (-of_nat (Suc n)) = - (a powr real (Suc n) / of_nat (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a powr real (Suc n) / - real (Suc n) =\n    - (a powr real (Suc n) / real (Suc n))", "by (simp add: divide_simps del: of_nat_Suc)"], ["proof (state)\nthis:\n  a powr real (Suc n) / - real (Suc n) =\n  - (a powr real (Suc n) / real (Suc n))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "also"], ["proof (state)\nthis:\n  a powr real (Suc n) / - real (Suc n) =\n  - (a powr real (Suc n) / real (Suc n))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "have \"a powr real (Suc n) = a ^ Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a powr real (Suc n) = a ^ Suc n", "using assms"], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. a powr real (Suc n) = a ^ Suc n", "by (intro powr_realpow)"], ["proof (state)\nthis:\n  a powr real (Suc n) = a ^ Suc n\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "also"], ["proof (state)\nthis:\n  a powr real (Suc n) = a ^ Suc n\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "have \"pre_zeta a (-of_nat n) = pre_zeta_aux (Suc n) a (- of_nat n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_zeta a (- of_nat n) = pre_zeta_aux (Suc n) a (- of_nat n)", "using assms"], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. pre_zeta a (- of_nat n) = pre_zeta_aux (Suc n) a (- of_nat n)", "by (intro pre_zeta_aux_eq_pre_zeta [symmetric]) auto"], ["proof (state)\nthis:\n  pre_zeta a (- of_nat n) = pre_zeta_aux (Suc n) a (- of_nat n)\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "also"], ["proof (state)\nthis:\n  pre_zeta a (- of_nat n) = pre_zeta_aux (Suc n) a (- of_nat n)\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "have \"\\<dots> = of_real a powr of_nat n / 2 +\n                    (\\<Sum>i = 1..Suc n. (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n                       (pochhammer (- of_nat n) (2 * i - 1) *\n                       of_real a powr (of_nat n - of_nat (2 * i - 1)))) +\n                    EM_remainder (Suc (2 * Suc n)) (\\<lambda>x. - (pochhammer (- of_nat n)\n                      (2*n+3) * of_real (x + a) powr (- of_nat n - 3))) 0\"\n    (is \"_ = ?B + sum (\\<lambda>n. ?f (2 * n)) _ + _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. pre_zeta_aux (Suc n) a (- of_nat n) =\n    complex_of_real a powr of_nat n / 2 +\n    (\\<Sum>i = 1..Suc n.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        (pochhammer (- of_nat n) (2 * i - 1) *\n         complex_of_real a powr (of_nat n - of_nat (2 * i - 1)))) +\n    EM_remainder (Suc (2 * Suc n))\n     (\\<lambda>x.\n         - (pochhammer (- of_nat n) (2 * n + 3) *\n            complex_of_real (x + a) powr (- of_nat n - 3)))\n     0", "unfolding pre_zeta_aux_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real a powr - (- of_nat n) / 2 +\n    (\\<Sum>i = 1..Suc n.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        (pochhammer (- of_nat n) (2 * i - 1) *\n         complex_of_real a powr (- (- of_nat n) - of_nat (2 * i - 1)))) +\n    EM_remainder (Suc (2 * Suc n))\n     (\\<lambda>x.\n         - (pochhammer (- of_nat n) (Suc (2 * Suc n)) *\n            complex_of_real (x + a) powr\n            (- 1 - 2 * of_nat (Suc n) - - of_nat n)))\n     0 =\n    complex_of_real a powr of_nat n / 2 +\n    (\\<Sum>i = 1..Suc n.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        (pochhammer (- of_nat n) (2 * i - 1) *\n         complex_of_real a powr (of_nat n - of_nat (2 * i - 1)))) +\n    EM_remainder (Suc (2 * Suc n))\n     (\\<lambda>x.\n         - (pochhammer (- of_nat n) (2 * n + 3) *\n            complex_of_real (x + a) powr (- of_nat n - 3)))\n     0", "by (simp add: add_ac eval_nat_numeral)"], ["proof (state)\nthis:\n  pre_zeta_aux (Suc n) a (- of_nat n) =\n  complex_of_real a powr of_nat n / 2 +\n  (\\<Sum>i = 1..Suc n.\n      (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n      (pochhammer (- of_nat n) (2 * i - 1) *\n       complex_of_real a powr (of_nat n - of_nat (2 * i - 1)))) +\n  EM_remainder (Suc (2 * Suc n))\n   (\\<lambda>x.\n       - (pochhammer (- of_nat n) (2 * n + 3) *\n          complex_of_real (x + a) powr (- of_nat n - 3)))\n   0\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "also"], ["proof (state)\nthis:\n  pre_zeta_aux (Suc n) a (- of_nat n) =\n  complex_of_real a powr of_nat n / 2 +\n  (\\<Sum>i = 1..Suc n.\n      (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n      (pochhammer (- of_nat n) (2 * i - 1) *\n       complex_of_real a powr (of_nat n - of_nat (2 * i - 1)))) +\n  EM_remainder (Suc (2 * Suc n))\n   (\\<lambda>x.\n       - (pochhammer (- of_nat n) (2 * n + 3) *\n          complex_of_real (x + a) powr (- of_nat n - 3)))\n   0\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "have \"?B = of_real (a ^ n) / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real a powr of_nat n / 2 = complex_of_real (a ^ n) / 2", "using assms"], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. complex_of_real a powr of_nat n / 2 = complex_of_real (a ^ n) / 2", "by (subst powr_Reals_eq) (auto simp: powr_realpow)"], ["proof (state)\nthis:\n  complex_of_real a powr of_nat n / 2 = complex_of_real (a ^ n) / 2\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "also"], ["proof (state)\nthis:\n  complex_of_real a powr of_nat n / 2 = complex_of_real (a ^ n) / 2\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "have \"pochhammer (-of_nat n :: complex) (2*n+3) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pochhammer (- of_nat n) (2 * n + 3) = 0", "by (subst pochhammer_eq_0_iff) auto"], ["proof (state)\nthis:\n  pochhammer (- of_nat n) (2 * n + 3) = 0\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "finally"], ["proof (chain)\npicking this:\n  hurwitz_zeta a (- of_nat n) =\n  complex_of_real (a ^ n) / 2 +\n  (\\<Sum>i = 1..Suc n.\n      (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n      (pochhammer (- of_nat n) (2 * i - 1) *\n       complex_of_real a powr (of_nat n - of_nat (2 * i - 1)))) +\n  EM_remainder (Suc (2 * Suc n))\n   (\\<lambda>x. - (0 * complex_of_real (x + a) powr (- of_nat n - 3))) 0 +\n  complex_of_real (- (a ^ Suc n / real (Suc n)))", "have \"hurwitz_zeta a (-of_nat n) = \n                  - (a ^ Suc n / of_nat (Suc n)) + (a ^ n / 2 + sum (\\<lambda>n. ?f (2 * n)) {1..Suc n})\""], ["proof (prove)\nusing this:\n  hurwitz_zeta a (- of_nat n) =\n  complex_of_real (a ^ n) / 2 +\n  (\\<Sum>i = 1..Suc n.\n      (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n      (pochhammer (- of_nat n) (2 * i - 1) *\n       complex_of_real a powr (of_nat n - of_nat (2 * i - 1)))) +\n  EM_remainder (Suc (2 * Suc n))\n   (\\<lambda>x. - (0 * complex_of_real (x + a) powr (- of_nat n - 3))) 0 +\n  complex_of_real (- (a ^ Suc n / real (Suc n)))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- (a ^ Suc n / real (Suc n))) +\n    (complex_of_real (a ^ n / 2) +\n     (\\<Sum>na = 1..Suc n.\n         (bernoulli (2 * na) / fact (2 * na)) *\\<^sub>R\n         (pochhammer (- of_nat n) (2 * na - 1) *\n          complex_of_real a powr (of_nat n - of_nat (2 * na - 1)))))", "by simp"], ["proof (state)\nthis:\n  hurwitz_zeta a (- of_nat n) =\n  complex_of_real (- (a ^ Suc n / real (Suc n))) +\n  (complex_of_real (a ^ n / 2) +\n   (\\<Sum>na = 1..Suc n.\n       (bernoulli (2 * na) / fact (2 * na)) *\\<^sub>R\n       (pochhammer (- of_nat n) (2 * na - 1) *\n        complex_of_real a powr (of_nat n - of_nat (2 * na - 1)))))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "also"], ["proof (state)\nthis:\n  hurwitz_zeta a (- of_nat n) =\n  complex_of_real (- (a ^ Suc n / real (Suc n))) +\n  (complex_of_real (a ^ n / 2) +\n   (\\<Sum>na = 1..Suc n.\n       (bernoulli (2 * na) / fact (2 * na)) *\\<^sub>R\n       (pochhammer (- of_nat n) (2 * na - 1) *\n        complex_of_real a powr (of_nat n - of_nat (2 * na - 1)))))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "have \"sum (\\<lambda>n. ?f (2 * n)) {1..Suc n} = sum ?f ((*) 2 ` {1..Suc n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>na = 1..Suc n.\n        (bernoulli (2 * na) / fact (2 * na)) *\\<^sub>R\n        (pochhammer (- of_nat n) (2 * na - 1) *\n         complex_of_real a powr (of_nat n - of_nat (2 * na - 1)))) =\n    (\\<Sum>b\\<in>(*) 2 ` {1..Suc n}.\n       (bernoulli b / fact b) *\\<^sub>R\n       (pochhammer (- of_nat n) (b - 1) *\n        complex_of_real a powr (of_nat n - of_nat (b - 1))))", "by (intro sum.reindex_bij_witness[of _ \"\\<lambda>i. i div 2\" \"\\<lambda>i. 2*i\"]) auto"], ["proof (state)\nthis:\n  (\\<Sum>na = 1..Suc n.\n      (bernoulli (2 * na) / fact (2 * na)) *\\<^sub>R\n      (pochhammer (- of_nat n) (2 * na - 1) *\n       complex_of_real a powr (of_nat n - of_nat (2 * na - 1)))) =\n  (\\<Sum>b\\<in>(*) 2 ` {1..Suc n}.\n     (bernoulli b / fact b) *\\<^sub>R\n     (pochhammer (- of_nat n) (b - 1) *\n      complex_of_real a powr (of_nat n - of_nat (b - 1))))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>na = 1..Suc n.\n      (bernoulli (2 * na) / fact (2 * na)) *\\<^sub>R\n      (pochhammer (- of_nat n) (2 * na - 1) *\n       complex_of_real a powr (of_nat n - of_nat (2 * na - 1)))) =\n  (\\<Sum>b\\<in>(*) 2 ` {1..Suc n}.\n     (bernoulli b / fact b) *\\<^sub>R\n     (pochhammer (- of_nat n) (b - 1) *\n      complex_of_real a powr (of_nat n - of_nat (b - 1))))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "have \"\\<dots> = (\\<Sum>i=2..2*n+2. ?f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>b\\<in>(*) 2 ` {1..Suc n}.\n       (bernoulli b / fact b) *\\<^sub>R\n       (pochhammer (- of_nat n) (b - 1) *\n        complex_of_real a powr (of_nat n - of_nat (b - 1)))) =\n    (\\<Sum>i = 2..2 * n + 2.\n        (bernoulli i / fact i) *\\<^sub>R\n        (pochhammer (- of_nat n) (i - 1) *\n         complex_of_real a powr (of_nat n - of_nat (i - 1))))", "proof (intro sum.mono_neutral_left ballI, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite {2..2 * n + 2}\n 2. (*) 2 ` {1..Suc n} \\<subseteq> {2..2 * n + 2}\n 3. \\<And>i.\n       i \\<in> {2..2 * n + 2} - (*) 2 ` {1..Suc n} \\<Longrightarrow>\n       (bernoulli i / fact i) *\\<^sub>R\n       (pochhammer (- of_nat n) (i - 1) *\n        complex_of_real a powr (of_nat n - of_nat (i - 1))) =\n       0", "case (3 i)"], ["proof (state)\nthis:\n  i \\<in> {2..2 * n + 2} - (*) 2 ` {1..Suc n}\n\ngoal (3 subgoals):\n 1. finite {2..2 * n + 2}\n 2. (*) 2 ` {1..Suc n} \\<subseteq> {2..2 * n + 2}\n 3. \\<And>i.\n       i \\<in> {2..2 * n + 2} - (*) 2 ` {1..Suc n} \\<Longrightarrow>\n       (bernoulli i / fact i) *\\<^sub>R\n       (pochhammer (- of_nat n) (i - 1) *\n        complex_of_real a powr (of_nat n - of_nat (i - 1))) =\n       0", "hence \"odd i\" \"i \\<noteq> 1\""], ["proof (prove)\nusing this:\n  i \\<in> {2..2 * n + 2} - (*) 2 ` {1..Suc n}\n\ngoal (1 subgoal):\n 1. odd i &&& i \\<noteq> 1", "by (auto elim!: evenE)"], ["proof (state)\nthis:\n  odd i\n  i \\<noteq> 1\n\ngoal (3 subgoals):\n 1. finite {2..2 * n + 2}\n 2. (*) 2 ` {1..Suc n} \\<subseteq> {2..2 * n + 2}\n 3. \\<And>i.\n       i \\<in> {2..2 * n + 2} - (*) 2 ` {1..Suc n} \\<Longrightarrow>\n       (bernoulli i / fact i) *\\<^sub>R\n       (pochhammer (- of_nat n) (i - 1) *\n        complex_of_real a powr (of_nat n - of_nat (i - 1))) =\n       0", "thus ?case"], ["proof (prove)\nusing this:\n  odd i\n  i \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (bernoulli i / fact i) *\\<^sub>R\n    (pochhammer (- of_nat n) (i - 1) *\n     complex_of_real a powr (of_nat n - of_nat (i - 1))) =\n    0", "by (simp add: bernoulli_odd_eq_0)"], ["proof (state)\nthis:\n  (bernoulli i / fact i) *\\<^sub>R\n  (pochhammer (- of_nat n) (i - 1) *\n   complex_of_real a powr (of_nat n - of_nat (i - 1))) =\n  0\n\ngoal (2 subgoals):\n 1. finite {2..2 * n + 2}\n 2. (*) 2 ` {1..Suc n} \\<subseteq> {2..2 * n + 2}", "qed auto"], ["proof (state)\nthis:\n  (\\<Sum>b\\<in>(*) 2 ` {1..Suc n}.\n     (bernoulli b / fact b) *\\<^sub>R\n     (pochhammer (- of_nat n) (b - 1) *\n      complex_of_real a powr (of_nat n - of_nat (b - 1)))) =\n  (\\<Sum>i = 2..2 * n + 2.\n      (bernoulli i / fact i) *\\<^sub>R\n      (pochhammer (- of_nat n) (i - 1) *\n       complex_of_real a powr (of_nat n - of_nat (i - 1))))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>b\\<in>(*) 2 ` {1..Suc n}.\n     (bernoulli b / fact b) *\\<^sub>R\n     (pochhammer (- of_nat n) (b - 1) *\n      complex_of_real a powr (of_nat n - of_nat (b - 1)))) =\n  (\\<Sum>i = 2..2 * n + 2.\n      (bernoulli i / fact i) *\\<^sub>R\n      (pochhammer (- of_nat n) (i - 1) *\n       complex_of_real a powr (of_nat n - of_nat (i - 1))))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "have \"\\<dots> = (\\<Sum>i=2..Suc n. ?f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 2..2 * n + 2.\n        (bernoulli i / fact i) *\\<^sub>R\n        (pochhammer (- of_nat n) (i - 1) *\n         complex_of_real a powr (of_nat n - of_nat (i - 1)))) =\n    (\\<Sum>i = 2..Suc n.\n        (bernoulli i / fact i) *\\<^sub>R\n        (pochhammer (- of_nat n) (i - 1) *\n         complex_of_real a powr (of_nat n - of_nat (i - 1))))", "proof (intro sum.mono_neutral_right ballI, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite {2..2 * n + 2}\n 2. {2..Suc n} \\<subseteq> {2..2 * n + 2}\n 3. \\<And>i.\n       i \\<in> {2..2 * n + 2} - {2..Suc n} \\<Longrightarrow>\n       (bernoulli i / fact i) *\\<^sub>R\n       (pochhammer (- of_nat n) (i - 1) *\n        complex_of_real a powr (of_nat n - of_nat (i - 1))) =\n       0", "case (3 i)"], ["proof (state)\nthis:\n  i \\<in> {2..2 * n + 2} - {2..Suc n}\n\ngoal (3 subgoals):\n 1. finite {2..2 * n + 2}\n 2. {2..Suc n} \\<subseteq> {2..2 * n + 2}\n 3. \\<And>i.\n       i \\<in> {2..2 * n + 2} - {2..Suc n} \\<Longrightarrow>\n       (bernoulli i / fact i) *\\<^sub>R\n       (pochhammer (- of_nat n) (i - 1) *\n        complex_of_real a powr (of_nat n - of_nat (i - 1))) =\n       0", "hence \"pochhammer (-of_nat n :: complex) (i - 1) = 0\""], ["proof (prove)\nusing this:\n  i \\<in> {2..2 * n + 2} - {2..Suc n}\n\ngoal (1 subgoal):\n 1. pochhammer (- of_nat n) (i - 1) = 0", "by (subst pochhammer_eq_0_iff) auto"], ["proof (state)\nthis:\n  pochhammer (- of_nat n) (i - 1) = 0\n\ngoal (3 subgoals):\n 1. finite {2..2 * n + 2}\n 2. {2..Suc n} \\<subseteq> {2..2 * n + 2}\n 3. \\<And>i.\n       i \\<in> {2..2 * n + 2} - {2..Suc n} \\<Longrightarrow>\n       (bernoulli i / fact i) *\\<^sub>R\n       (pochhammer (- of_nat n) (i - 1) *\n        complex_of_real a powr (of_nat n - of_nat (i - 1))) =\n       0", "thus ?case"], ["proof (prove)\nusing this:\n  pochhammer (- of_nat n) (i - 1) = 0\n\ngoal (1 subgoal):\n 1. (bernoulli i / fact i) *\\<^sub>R\n    (pochhammer (- of_nat n) (i - 1) *\n     complex_of_real a powr (of_nat n - of_nat (i - 1))) =\n    0", "by simp"], ["proof (state)\nthis:\n  (bernoulli i / fact i) *\\<^sub>R\n  (pochhammer (- of_nat n) (i - 1) *\n   complex_of_real a powr (of_nat n - of_nat (i - 1))) =\n  0\n\ngoal (2 subgoals):\n 1. finite {2..2 * n + 2}\n 2. {2..Suc n} \\<subseteq> {2..2 * n + 2}", "qed auto"], ["proof (state)\nthis:\n  (\\<Sum>i = 2..2 * n + 2.\n      (bernoulli i / fact i) *\\<^sub>R\n      (pochhammer (- of_nat n) (i - 1) *\n       complex_of_real a powr (of_nat n - of_nat (i - 1)))) =\n  (\\<Sum>i = 2..Suc n.\n      (bernoulli i / fact i) *\\<^sub>R\n      (pochhammer (- of_nat n) (i - 1) *\n       complex_of_real a powr (of_nat n - of_nat (i - 1))))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 2..2 * n + 2.\n      (bernoulli i / fact i) *\\<^sub>R\n      (pochhammer (- of_nat n) (i - 1) *\n       complex_of_real a powr (of_nat n - of_nat (i - 1)))) =\n  (\\<Sum>i = 2..Suc n.\n      (bernoulli i / fact i) *\\<^sub>R\n      (pochhammer (- of_nat n) (i - 1) *\n       complex_of_real a powr (of_nat n - of_nat (i - 1))))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "have \"\\<dots> = (\\<Sum>i=Suc 1..Suc n. -of_real (real (Suc n choose i) * bernoulli i * \n                     a ^ (Suc n - i)) / of_nat (Suc n))\"\n    (is \"sum ?lhs _ = sum ?f _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 2..Suc n.\n        (bernoulli i / fact i) *\\<^sub>R\n        (pochhammer (- of_nat n) (i - 1) *\n         complex_of_real a powr (of_nat n - of_nat (i - 1)))) =\n    (\\<Sum>i = Suc 1..Suc n.\n        - complex_of_real\n           (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n        of_nat (Suc n))", "proof (intro sum.cong, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. {2..Suc n} = {Suc 1..Suc n}\n 2. \\<And>x.\n       x \\<in> {Suc 1..Suc n} \\<Longrightarrow>\n       (bernoulli x / fact x) *\\<^sub>R\n       (pochhammer (- of_nat n) (x - 1) *\n        complex_of_real a powr (of_nat n - of_nat (x - 1))) =\n       - complex_of_real\n          (real (Suc n choose x) * bernoulli x * a ^ (Suc n - x)) /\n       of_nat (Suc n)", "case (2 i)"], ["proof (state)\nthis:\n  i \\<in> {Suc 1..Suc n}\n\ngoal (2 subgoals):\n 1. {2..Suc n} = {Suc 1..Suc n}\n 2. \\<And>x.\n       x \\<in> {Suc 1..Suc n} \\<Longrightarrow>\n       (bernoulli x / fact x) *\\<^sub>R\n       (pochhammer (- of_nat n) (x - 1) *\n        complex_of_real a powr (of_nat n - of_nat (x - 1))) =\n       - complex_of_real\n          (real (Suc n choose x) * bernoulli x * a ^ (Suc n - x)) /\n       of_nat (Suc n)", "hence \"of_nat n - of_nat (i - 1) = (of_nat (Suc n - i) :: complex)\""], ["proof (prove)\nusing this:\n  i \\<in> {Suc 1..Suc n}\n\ngoal (1 subgoal):\n 1. of_nat n - of_nat (i - 1) = of_nat (Suc n - i)", "by (auto simp: of_nat_diff)"], ["proof (state)\nthis:\n  of_nat n - of_nat (i - 1) = of_nat (Suc n - i)\n\ngoal (2 subgoals):\n 1. {2..Suc n} = {Suc 1..Suc n}\n 2. \\<And>x.\n       x \\<in> {Suc 1..Suc n} \\<Longrightarrow>\n       (bernoulli x / fact x) *\\<^sub>R\n       (pochhammer (- of_nat n) (x - 1) *\n        complex_of_real a powr (of_nat n - of_nat (x - 1))) =\n       - complex_of_real\n          (real (Suc n choose x) * bernoulli x * a ^ (Suc n - x)) /\n       of_nat (Suc n)", "also"], ["proof (state)\nthis:\n  of_nat n - of_nat (i - 1) = of_nat (Suc n - i)\n\ngoal (2 subgoals):\n 1. {2..Suc n} = {Suc 1..Suc n}\n 2. \\<And>x.\n       x \\<in> {Suc 1..Suc n} \\<Longrightarrow>\n       (bernoulli x / fact x) *\\<^sub>R\n       (pochhammer (- of_nat n) (x - 1) *\n        complex_of_real a powr (of_nat n - of_nat (x - 1))) =\n       - complex_of_real\n          (real (Suc n choose x) * bernoulli x * a ^ (Suc n - x)) /\n       of_nat (Suc n)", "have \"of_real a powr \\<dots> = of_real (a ^ (Suc n - i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real a powr of_nat (Suc n - i) =\n    complex_of_real (a ^ (Suc n - i))", "using 2 assms"], ["proof (prove)\nusing this:\n  i \\<in> {Suc 1..Suc n}\n  0 < a\n\ngoal (1 subgoal):\n 1. complex_of_real a powr of_nat (Suc n - i) =\n    complex_of_real (a ^ (Suc n - i))", "by (subst powr_nat) auto"], ["proof (state)\nthis:\n  complex_of_real a powr of_nat (Suc n - i) =\n  complex_of_real (a ^ (Suc n - i))\n\ngoal (2 subgoals):\n 1. {2..Suc n} = {Suc 1..Suc n}\n 2. \\<And>x.\n       x \\<in> {Suc 1..Suc n} \\<Longrightarrow>\n       (bernoulli x / fact x) *\\<^sub>R\n       (pochhammer (- of_nat n) (x - 1) *\n        complex_of_real a powr (of_nat n - of_nat (x - 1))) =\n       - complex_of_real\n          (real (Suc n choose x) * bernoulli x * a ^ (Suc n - x)) /\n       of_nat (Suc n)", "finally"], ["proof (chain)\npicking this:\n  complex_of_real a powr (of_nat n - of_nat (i - 1)) =\n  complex_of_real (a ^ (Suc n - i))", "have A: \"of_real a powr (of_nat n - of_nat (i - 1)) = \\<dots>\""], ["proof (prove)\nusing this:\n  complex_of_real a powr (of_nat n - of_nat (i - 1)) =\n  complex_of_real (a ^ (Suc n - i))\n\ngoal (1 subgoal):\n 1. complex_of_real a powr (of_nat n - of_nat (i - 1)) =\n    complex_of_real (a ^ (Suc n - i))", "."], ["proof (state)\nthis:\n  complex_of_real a powr (of_nat n - of_nat (i - 1)) =\n  complex_of_real (a ^ (Suc n - i))\n\ngoal (2 subgoals):\n 1. {2..Suc n} = {Suc 1..Suc n}\n 2. \\<And>x.\n       x \\<in> {Suc 1..Suc n} \\<Longrightarrow>\n       (bernoulli x / fact x) *\\<^sub>R\n       (pochhammer (- of_nat n) (x - 1) *\n        complex_of_real a powr (of_nat n - of_nat (x - 1))) =\n       - complex_of_real\n          (real (Suc n choose x) * bernoulli x * a ^ (Suc n - x)) /\n       of_nat (Suc n)", "have \"pochhammer (-of_nat n) (i - 1) = complex_of_real (pochhammer (-real n) (i - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pochhammer (- of_nat n) (i - 1) =\n    complex_of_real (pochhammer (- real n) (i - 1))", "by (simp add: pochhammer_of_real [symmetric])"], ["proof (state)\nthis:\n  pochhammer (- of_nat n) (i - 1) =\n  complex_of_real (pochhammer (- real n) (i - 1))\n\ngoal (2 subgoals):\n 1. {2..Suc n} = {Suc 1..Suc n}\n 2. \\<And>x.\n       x \\<in> {Suc 1..Suc n} \\<Longrightarrow>\n       (bernoulli x / fact x) *\\<^sub>R\n       (pochhammer (- of_nat n) (x - 1) *\n        complex_of_real a powr (of_nat n - of_nat (x - 1))) =\n       - complex_of_real\n          (real (Suc n choose x) * bernoulli x * a ^ (Suc n - x)) /\n       of_nat (Suc n)", "also"], ["proof (state)\nthis:\n  pochhammer (- of_nat n) (i - 1) =\n  complex_of_real (pochhammer (- real n) (i - 1))\n\ngoal (2 subgoals):\n 1. {2..Suc n} = {Suc 1..Suc n}\n 2. \\<And>x.\n       x \\<in> {Suc 1..Suc n} \\<Longrightarrow>\n       (bernoulli x / fact x) *\\<^sub>R\n       (pochhammer (- of_nat n) (x - 1) *\n        complex_of_real a powr (of_nat n - of_nat (x - 1))) =\n       - complex_of_real\n          (real (Suc n choose x) * bernoulli x * a ^ (Suc n - x)) /\n       of_nat (Suc n)", "have \"pochhammer (-real n) (i - 1) = pochhammer (-of_nat (Suc n)) i / (-1 - real n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pochhammer (- real n) (i - 1) =\n    pochhammer (- real (Suc n)) i / (- 1 - real n)", "using 2"], ["proof (prove)\nusing this:\n  i \\<in> {Suc 1..Suc n}\n\ngoal (1 subgoal):\n 1. pochhammer (- real n) (i - 1) =\n    pochhammer (- real (Suc n)) i / (- 1 - real n)", "by (subst (2) pochhammer_rec_if) auto"], ["proof (state)\nthis:\n  pochhammer (- real n) (i - 1) =\n  pochhammer (- real (Suc n)) i / (- 1 - real n)\n\ngoal (2 subgoals):\n 1. {2..Suc n} = {Suc 1..Suc n}\n 2. \\<And>x.\n       x \\<in> {Suc 1..Suc n} \\<Longrightarrow>\n       (bernoulli x / fact x) *\\<^sub>R\n       (pochhammer (- of_nat n) (x - 1) *\n        complex_of_real a powr (of_nat n - of_nat (x - 1))) =\n       - complex_of_real\n          (real (Suc n choose x) * bernoulli x * a ^ (Suc n - x)) /\n       of_nat (Suc n)", "also"], ["proof (state)\nthis:\n  pochhammer (- real n) (i - 1) =\n  pochhammer (- real (Suc n)) i / (- 1 - real n)\n\ngoal (2 subgoals):\n 1. {2..Suc n} = {Suc 1..Suc n}\n 2. \\<And>x.\n       x \\<in> {Suc 1..Suc n} \\<Longrightarrow>\n       (bernoulli x / fact x) *\\<^sub>R\n       (pochhammer (- of_nat n) (x - 1) *\n        complex_of_real a powr (of_nat n - of_nat (x - 1))) =\n       - complex_of_real\n          (real (Suc n choose x) * bernoulli x * a ^ (Suc n - x)) /\n       of_nat (Suc n)", "have \"-1 - real n = -real (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 - real n = - real (Suc n)", "by simp"], ["proof (state)\nthis:\n  - 1 - real n = - real (Suc n)\n\ngoal (2 subgoals):\n 1. {2..Suc n} = {Suc 1..Suc n}\n 2. \\<And>x.\n       x \\<in> {Suc 1..Suc n} \\<Longrightarrow>\n       (bernoulli x / fact x) *\\<^sub>R\n       (pochhammer (- of_nat n) (x - 1) *\n        complex_of_real a powr (of_nat n - of_nat (x - 1))) =\n       - complex_of_real\n          (real (Suc n choose x) * bernoulli x * a ^ (Suc n - x)) /\n       of_nat (Suc n)", "finally"], ["proof (chain)\npicking this:\n  pochhammer (- of_nat n) (i - 1) =\n  complex_of_real (pochhammer (- real (Suc n)) i / - real (Suc n))", "have B: \"pochhammer (-of_nat n) (i - 1) = \n                    -complex_of_real (pochhammer (-real (Suc n)) i / real (Suc n))\""], ["proof (prove)\nusing this:\n  pochhammer (- of_nat n) (i - 1) =\n  complex_of_real (pochhammer (- real (Suc n)) i / - real (Suc n))\n\ngoal (1 subgoal):\n 1. pochhammer (- of_nat n) (i - 1) =\n    - complex_of_real (pochhammer (- real (Suc n)) i / real (Suc n))", "by (simp del: of_nat_Suc)"], ["proof (state)\nthis:\n  pochhammer (- of_nat n) (i - 1) =\n  - complex_of_real (pochhammer (- real (Suc n)) i / real (Suc n))\n\ngoal (2 subgoals):\n 1. {2..Suc n} = {Suc 1..Suc n}\n 2. \\<And>x.\n       x \\<in> {Suc 1..Suc n} \\<Longrightarrow>\n       (bernoulli x / fact x) *\\<^sub>R\n       (pochhammer (- of_nat n) (x - 1) *\n        complex_of_real a powr (of_nat n - of_nat (x - 1))) =\n       - complex_of_real\n          (real (Suc n choose x) * bernoulli x * a ^ (Suc n - x)) /\n       of_nat (Suc n)", "have \"?lhs i = -complex_of_real (bernoulli i * pochhammer (-real (Suc n)) i / fact i * \n                      a ^ (Suc n - i)) / of_nat (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bernoulli i / fact i) *\\<^sub>R\n    (pochhammer (- of_nat n) (i - 1) *\n     complex_of_real a powr (of_nat n - of_nat (i - 1))) =\n    - complex_of_real\n       (bernoulli i * pochhammer (- real (Suc n)) i / fact i *\n        a ^ (Suc n - i)) /\n    of_nat (Suc n)", "by (simp only: A B) (simp add: scaleR_conv_of_real)"], ["proof (state)\nthis:\n  (bernoulli i / fact i) *\\<^sub>R\n  (pochhammer (- of_nat n) (i - 1) *\n   complex_of_real a powr (of_nat n - of_nat (i - 1))) =\n  - complex_of_real\n     (bernoulli i * pochhammer (- real (Suc n)) i / fact i *\n      a ^ (Suc n - i)) /\n  of_nat (Suc n)\n\ngoal (2 subgoals):\n 1. {2..Suc n} = {Suc 1..Suc n}\n 2. \\<And>x.\n       x \\<in> {Suc 1..Suc n} \\<Longrightarrow>\n       (bernoulli x / fact x) *\\<^sub>R\n       (pochhammer (- of_nat n) (x - 1) *\n        complex_of_real a powr (of_nat n - of_nat (x - 1))) =\n       - complex_of_real\n          (real (Suc n choose x) * bernoulli x * a ^ (Suc n - x)) /\n       of_nat (Suc n)", "also"], ["proof (state)\nthis:\n  (bernoulli i / fact i) *\\<^sub>R\n  (pochhammer (- of_nat n) (i - 1) *\n   complex_of_real a powr (of_nat n - of_nat (i - 1))) =\n  - complex_of_real\n     (bernoulli i * pochhammer (- real (Suc n)) i / fact i *\n      a ^ (Suc n - i)) /\n  of_nat (Suc n)\n\ngoal (2 subgoals):\n 1. {2..Suc n} = {Suc 1..Suc n}\n 2. \\<And>x.\n       x \\<in> {Suc 1..Suc n} \\<Longrightarrow>\n       (bernoulli x / fact x) *\\<^sub>R\n       (pochhammer (- of_nat n) (x - 1) *\n        complex_of_real a powr (of_nat n - of_nat (x - 1))) =\n       - complex_of_real\n          (real (Suc n choose x) * bernoulli x * a ^ (Suc n - x)) /\n       of_nat (Suc n)", "have \"bernoulli i * pochhammer (-real (Suc n)) i / fact i =\n                 (real (Suc n) gchoose i) * bernoulli i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bernoulli i * pochhammer (- real (Suc n)) i / fact i =\n    (real (Suc n) gchoose i) * bernoulli i", "using 2"], ["proof (prove)\nusing this:\n  i \\<in> {Suc 1..Suc n}\n\ngoal (1 subgoal):\n 1. bernoulli i * pochhammer (- real (Suc n)) i / fact i =\n    (real (Suc n) gchoose i) * bernoulli i", "by (subst gbinomial_pochhammer) (auto simp: minus_one_power_iff bernoulli_odd_eq_0)"], ["proof (state)\nthis:\n  bernoulli i * pochhammer (- real (Suc n)) i / fact i =\n  (real (Suc n) gchoose i) * bernoulli i\n\ngoal (2 subgoals):\n 1. {2..Suc n} = {Suc 1..Suc n}\n 2. \\<And>x.\n       x \\<in> {Suc 1..Suc n} \\<Longrightarrow>\n       (bernoulli x / fact x) *\\<^sub>R\n       (pochhammer (- of_nat n) (x - 1) *\n        complex_of_real a powr (of_nat n - of_nat (x - 1))) =\n       - complex_of_real\n          (real (Suc n choose x) * bernoulli x * a ^ (Suc n - x)) /\n       of_nat (Suc n)", "also"], ["proof (state)\nthis:\n  bernoulli i * pochhammer (- real (Suc n)) i / fact i =\n  (real (Suc n) gchoose i) * bernoulli i\n\ngoal (2 subgoals):\n 1. {2..Suc n} = {Suc 1..Suc n}\n 2. \\<And>x.\n       x \\<in> {Suc 1..Suc n} \\<Longrightarrow>\n       (bernoulli x / fact x) *\\<^sub>R\n       (pochhammer (- of_nat n) (x - 1) *\n        complex_of_real a powr (of_nat n - of_nat (x - 1))) =\n       - complex_of_real\n          (real (Suc n choose x) * bernoulli x * a ^ (Suc n - x)) /\n       of_nat (Suc n)", "have \"real (Suc n) gchoose i = Suc n choose i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (Suc n) gchoose i = real (Suc n choose i)", "by (subst binomial_gbinomial) auto"], ["proof (state)\nthis:\n  real (Suc n) gchoose i = real (Suc n choose i)\n\ngoal (2 subgoals):\n 1. {2..Suc n} = {Suc 1..Suc n}\n 2. \\<And>x.\n       x \\<in> {Suc 1..Suc n} \\<Longrightarrow>\n       (bernoulli x / fact x) *\\<^sub>R\n       (pochhammer (- of_nat n) (x - 1) *\n        complex_of_real a powr (of_nat n - of_nat (x - 1))) =\n       - complex_of_real\n          (real (Suc n choose x) * bernoulli x * a ^ (Suc n - x)) /\n       of_nat (Suc n)", "finally"], ["proof (chain)\npicking this:\n  (bernoulli i / fact i) *\\<^sub>R\n  (pochhammer (- of_nat n) (i - 1) *\n   complex_of_real a powr (of_nat n - of_nat (i - 1))) =\n  - complex_of_real\n     (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n  of_nat (Suc n)", "show ?case"], ["proof (prove)\nusing this:\n  (bernoulli i / fact i) *\\<^sub>R\n  (pochhammer (- of_nat n) (i - 1) *\n   complex_of_real a powr (of_nat n - of_nat (i - 1))) =\n  - complex_of_real\n     (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n  of_nat (Suc n)\n\ngoal (1 subgoal):\n 1. (bernoulli i / fact i) *\\<^sub>R\n    (pochhammer (- of_nat n) (i - 1) *\n     complex_of_real a powr (of_nat n - of_nat (i - 1))) =\n    - complex_of_real\n       (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n    of_nat (Suc n)", "by simp"], ["proof (state)\nthis:\n  (bernoulli i / fact i) *\\<^sub>R\n  (pochhammer (- of_nat n) (i - 1) *\n   complex_of_real a powr (of_nat n - of_nat (i - 1))) =\n  - complex_of_real\n     (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n  of_nat (Suc n)\n\ngoal (1 subgoal):\n 1. {2..Suc n} = {Suc 1..Suc n}", "qed auto"], ["proof (state)\nthis:\n  (\\<Sum>i = 2..Suc n.\n      (bernoulli i / fact i) *\\<^sub>R\n      (pochhammer (- of_nat n) (i - 1) *\n       complex_of_real a powr (of_nat n - of_nat (i - 1)))) =\n  (\\<Sum>i = Suc 1..Suc n.\n      - complex_of_real\n         (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n      of_nat (Suc n))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 2..Suc n.\n      (bernoulli i / fact i) *\\<^sub>R\n      (pochhammer (- of_nat n) (i - 1) *\n       complex_of_real a powr (of_nat n - of_nat (i - 1)))) =\n  (\\<Sum>i = Suc 1..Suc n.\n      - complex_of_real\n         (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n      of_nat (Suc n))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "have \"a ^ n / 2 + sum ?f {Suc 1..Suc n} = sum ?f {1..Suc n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (a ^ n / 2) +\n    (\\<Sum>i = Suc 1..Suc n.\n        - complex_of_real\n           (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n        of_nat (Suc n)) =\n    (\\<Sum>i = 1..Suc n.\n        - complex_of_real\n           (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n        of_nat (Suc n))", "by (subst (2) sum.atLeast_Suc_atMost) (simp_all add: scaleR_conv_of_real del: of_nat_Suc)"], ["proof (state)\nthis:\n  complex_of_real (a ^ n / 2) +\n  (\\<Sum>i = Suc 1..Suc n.\n      - complex_of_real\n         (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n      of_nat (Suc n)) =\n  (\\<Sum>i = 1..Suc n.\n      - complex_of_real\n         (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n      of_nat (Suc n))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "also"], ["proof (state)\nthis:\n  complex_of_real (a ^ n / 2) +\n  (\\<Sum>i = Suc 1..Suc n.\n      - complex_of_real\n         (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n      of_nat (Suc n)) =\n  (\\<Sum>i = 1..Suc n.\n      - complex_of_real\n         (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n      of_nat (Suc n))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "have \"-(a ^ Suc n / of_nat (Suc n)) + sum ?f {1..Suc n} = sum ?f {0..Suc n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (- (a ^ Suc n / real (Suc n))) +\n    (\\<Sum>i = 1..Suc n.\n        - complex_of_real\n           (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n        of_nat (Suc n)) =\n    (\\<Sum>i = 0..Suc n.\n        - complex_of_real\n           (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n        of_nat (Suc n))", "by (subst (2) sum.atLeast_Suc_atMost) (simp_all add: scaleR_conv_of_real)"], ["proof (state)\nthis:\n  complex_of_real (- (a ^ Suc n / real (Suc n))) +\n  (\\<Sum>i = 1..Suc n.\n      - complex_of_real\n         (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n      of_nat (Suc n)) =\n  (\\<Sum>i = 0..Suc n.\n      - complex_of_real\n         (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n      of_nat (Suc n))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "also"], ["proof (state)\nthis:\n  complex_of_real (- (a ^ Suc n / real (Suc n))) +\n  (\\<Sum>i = 1..Suc n.\n      - complex_of_real\n         (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n      of_nat (Suc n)) =\n  (\\<Sum>i = 0..Suc n.\n      - complex_of_real\n         (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n      of_nat (Suc n))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "have \"\\<dots> = - bernpoly (Suc n) a / of_nat (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..Suc n.\n        - complex_of_real\n           (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n        of_nat (Suc n)) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "unfolding sum_negf sum_divide_distrib [symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. - (\\<Sum>i = 0..Suc n.\n          complex_of_real\n           (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i))) /\n    of_nat (Suc n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "by (simp add: bernpoly_def atLeast0AtMost)"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..Suc n.\n      - complex_of_real\n         (real (Suc n choose i) * bernoulli i * a ^ (Suc n - i)) /\n      of_nat (Suc n)) =\n  complex_of_real (- bernpoly (Suc n) a / real (Suc n))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "finally"], ["proof (chain)\npicking this:\n  hurwitz_zeta a (- of_nat n) =\n  complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  hurwitz_zeta a (- of_nat n) =\n  complex_of_real (- bernpoly (Suc n) a / real (Suc n))\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a (- of_nat n) =\n    complex_of_real (- bernpoly (Suc n) a / real (Suc n))", "."], ["proof (state)\nthis:\n  hurwitz_zeta a (- of_nat n) =\n  complex_of_real (- bernpoly (Suc n) a / real (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hurwitz_zeta_0 [simp]: \"a > 0 \\<Longrightarrow> hurwitz_zeta a 0 = 1 / 2 - a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a \\<Longrightarrow> hurwitz_zeta a 0 = complex_of_real (1 / 2 - a)", "using hurwitz_zeta_neg_of_nat[of a 0]"], ["proof (prove)\nusing this:\n  0 < a \\<Longrightarrow>\n  hurwitz_zeta a (- of_nat 0) =\n  complex_of_real (- bernpoly (Suc 0) a / real (Suc 0))\n\ngoal (1 subgoal):\n 1. 0 < a \\<Longrightarrow> hurwitz_zeta a 0 = complex_of_real (1 / 2 - a)", "by (simp add: bernpoly_def)"], ["", "lemma zeta_0 [simp]: \"zeta 0 = -1 / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta 0 = - 1 / 2", "by (simp add: zeta_def)"], ["", "theorem zeta_neg_of_nat: \n  \"zeta (-of_nat n) = -of_real (bernoulli' (Suc n)) / of_nat (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta (- of_nat n) =\n    - complex_of_real (bernoulli' (Suc n)) / of_nat (Suc n)", "unfolding zeta_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. hurwitz_zeta 1 (- of_nat n) =\n    - complex_of_real (bernoulli' (Suc n)) / of_nat (Suc n)", "by (simp add: hurwitz_zeta_neg_of_nat bernpoly_1')"], ["", "corollary zeta_trivial_zero:\n  assumes \"even n\" \"n \\<noteq> 0\"\n  shows   \"zeta (-of_nat n) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta (- of_nat n) = 0", "using zeta_neg_of_nat[of n] assms"], ["proof (prove)\nusing this:\n  zeta (- of_nat n) =\n  - complex_of_real (bernoulli' (Suc n)) / of_nat (Suc n)\n  even n\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. zeta (- of_nat n) = 0", "by (simp add: bernoulli'_odd_eq_0)"], ["", "theorem zeta_even_nat: \n  \"zeta (2 * of_nat n) = \n     of_real ((-1) ^ Suc n * bernoulli (2 * n) * (2 * pi) ^ (2 * n) / (2 * fact (2 * n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta (2 * of_nat n) =\n    complex_of_real\n     ((- 1) ^ Suc n * bernoulli (2 * n) * (2 * pi) ^ (2 * n) /\n      (2 * fact (2 * n)))", "proof (cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    zeta (2 * of_nat n) =\n    complex_of_real\n     ((- 1) ^ Suc n * bernoulli (2 * n) * (2 * pi) ^ (2 * n) /\n      (2 * fact (2 * n)))\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    zeta (2 * of_nat n) =\n    complex_of_real\n     ((- 1) ^ Suc n * bernoulli (2 * n) * (2 * pi) ^ (2 * n) /\n      (2 * fact (2 * n)))", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    zeta (2 * of_nat n) =\n    complex_of_real\n     ((- 1) ^ Suc n * bernoulli (2 * n) * (2 * pi) ^ (2 * n) /\n      (2 * fact (2 * n)))\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    zeta (2 * of_nat n) =\n    complex_of_real\n     ((- 1) ^ Suc n * bernoulli (2 * n) * (2 * pi) ^ (2 * n) /\n      (2 * fact (2 * n)))", "hence \"(\\<lambda>k. 1 / of_nat (Suc k) ^ (2 * n)) sums zeta (of_nat (2 * n))\""], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>k. 1 / of_nat (Suc k) ^ (2 * n)) sums zeta (of_nat (2 * n))", "by (intro sums_zeta_nat) auto"], ["proof (state)\nthis:\n  (\\<lambda>k. 1 / of_nat (Suc k) ^ (2 * n)) sums zeta (of_nat (2 * n))\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    zeta (2 * of_nat n) =\n    complex_of_real\n     ((- 1) ^ Suc n * bernoulli (2 * n) * (2 * pi) ^ (2 * n) /\n      (2 * fact (2 * n)))\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    zeta (2 * of_nat n) =\n    complex_of_real\n     ((- 1) ^ Suc n * bernoulli (2 * n) * (2 * pi) ^ (2 * n) /\n      (2 * fact (2 * n)))", "from sums_unique2 [OF this nat_even_power_sums_complex] False"], ["proof (chain)\npicking this:\n  0 < n \\<Longrightarrow>\n  zeta (of_nat (2 * n)) =\n  complex_of_real\n   ((- 1) ^ Suc n * bernoulli (2 * n) * (2 * pi) ^ (2 * n) /\n    (2 * fact (2 * n)))\n  n \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < n \\<Longrightarrow>\n  zeta (of_nat (2 * n)) =\n  complex_of_real\n   ((- 1) ^ Suc n * bernoulli (2 * n) * (2 * pi) ^ (2 * n) /\n    (2 * fact (2 * n)))\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. zeta (2 * of_nat n) =\n    complex_of_real\n     ((- 1) ^ Suc n * bernoulli (2 * n) * (2 * pi) ^ (2 * n) /\n      (2 * fact (2 * n)))", "by simp"], ["proof (state)\nthis:\n  zeta (2 * of_nat n) =\n  complex_of_real\n   ((- 1) ^ Suc n * bernoulli (2 * n) * (2 * pi) ^ (2 * n) /\n    (2 * fact (2 * n)))\n\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow>\n    zeta (2 * of_nat n) =\n    complex_of_real\n     ((- 1) ^ Suc n * bernoulli (2 * n) * (2 * pi) ^ (2 * n) /\n      (2 * fact (2 * n)))", "qed (insert zeta_neg_of_nat[of 0], simp_all)"], ["", "corollary zeta_even_numeral: \n  \"zeta (numeral (Num.Bit0 n)) = of_real\n     ((- 1) ^ Suc (numeral n) * bernoulli (numeral (num.Bit0 n)) *\n     (2 * pi) ^ numeral (num.Bit0 n) / (2 * fact (numeral (num.Bit0 n))))\" (is \"_ = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta (numeral (num.Bit0 n)) =\n    complex_of_real\n     ((- 1) ^ Suc (numeral n) * bernoulli (numeral (num.Bit0 n)) *\n      (2 * pi) ^ numeral (num.Bit0 n) /\n      (2 * fact (numeral (num.Bit0 n))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. zeta (numeral (num.Bit0 n)) =\n    complex_of_real\n     ((- 1) ^ Suc (numeral n) * bernoulli (numeral (num.Bit0 n)) *\n      (2 * pi) ^ numeral (num.Bit0 n) /\n      (2 * fact (numeral (num.Bit0 n))))", "have *: \"(2 * numeral n :: nat) = numeral (Num.Bit0 n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * numeral n = numeral (num.Bit0 n)", "by (subst numeral.numeral_Bit0, subst mult_2, rule refl)"], ["proof (state)\nthis:\n  2 * numeral n = numeral (num.Bit0 n)\n\ngoal (1 subgoal):\n 1. zeta (numeral (num.Bit0 n)) =\n    complex_of_real\n     ((- 1) ^ Suc (numeral n) * bernoulli (numeral (num.Bit0 n)) *\n      (2 * pi) ^ numeral (num.Bit0 n) /\n      (2 * fact (numeral (num.Bit0 n))))", "have \"numeral (Num.Bit0 n) = (2 * numeral n :: complex)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. numeral (num.Bit0 n) = 2 * numeral n", "by (subst numeral.numeral_Bit0, subst mult_2, rule refl)"], ["proof (state)\nthis:\n  numeral (num.Bit0 n) = 2 * numeral n\n\ngoal (1 subgoal):\n 1. zeta (numeral (num.Bit0 n)) =\n    complex_of_real\n     ((- 1) ^ Suc (numeral n) * bernoulli (numeral (num.Bit0 n)) *\n      (2 * pi) ^ numeral (num.Bit0 n) /\n      (2 * fact (numeral (num.Bit0 n))))", "also"], ["proof (state)\nthis:\n  numeral (num.Bit0 n) = 2 * numeral n\n\ngoal (1 subgoal):\n 1. zeta (numeral (num.Bit0 n)) =\n    complex_of_real\n     ((- 1) ^ Suc (numeral n) * bernoulli (numeral (num.Bit0 n)) *\n      (2 * pi) ^ numeral (num.Bit0 n) /\n      (2 * fact (numeral (num.Bit0 n))))", "have \"\\<dots> = 2 * of_nat (numeral n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * numeral n = 2 * of_nat (numeral n)", "by (simp only: of_nat_numeral of_nat_mult)"], ["proof (state)\nthis:\n  2 * numeral n = 2 * of_nat (numeral n)\n\ngoal (1 subgoal):\n 1. zeta (numeral (num.Bit0 n)) =\n    complex_of_real\n     ((- 1) ^ Suc (numeral n) * bernoulli (numeral (num.Bit0 n)) *\n      (2 * pi) ^ numeral (num.Bit0 n) /\n      (2 * fact (numeral (num.Bit0 n))))", "also"], ["proof (state)\nthis:\n  2 * numeral n = 2 * of_nat (numeral n)\n\ngoal (1 subgoal):\n 1. zeta (numeral (num.Bit0 n)) =\n    complex_of_real\n     ((- 1) ^ Suc (numeral n) * bernoulli (numeral (num.Bit0 n)) *\n      (2 * pi) ^ numeral (num.Bit0 n) /\n      (2 * fact (numeral (num.Bit0 n))))", "have \"zeta \\<dots> = ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta (2 * of_nat (numeral n)) =\n    complex_of_real\n     ((- 1) ^ Suc (numeral n) * bernoulli (numeral (num.Bit0 n)) *\n      (2 * pi) ^ numeral (num.Bit0 n) /\n      (2 * fact (numeral (num.Bit0 n))))", "by (subst zeta_even_nat) (simp only: *)"], ["proof (state)\nthis:\n  zeta (2 * of_nat (numeral n)) =\n  complex_of_real\n   ((- 1) ^ Suc (numeral n) * bernoulli (numeral (num.Bit0 n)) *\n    (2 * pi) ^ numeral (num.Bit0 n) /\n    (2 * fact (numeral (num.Bit0 n))))\n\ngoal (1 subgoal):\n 1. zeta (numeral (num.Bit0 n)) =\n    complex_of_real\n     ((- 1) ^ Suc (numeral n) * bernoulli (numeral (num.Bit0 n)) *\n      (2 * pi) ^ numeral (num.Bit0 n) /\n      (2 * fact (numeral (num.Bit0 n))))", "finally"], ["proof (chain)\npicking this:\n  zeta (numeral (num.Bit0 n)) =\n  complex_of_real\n   ((- 1) ^ Suc (numeral n) * bernoulli (numeral (num.Bit0 n)) *\n    (2 * pi) ^ numeral (num.Bit0 n) /\n    (2 * fact (numeral (num.Bit0 n))))", "show ?thesis"], ["proof (prove)\nusing this:\n  zeta (numeral (num.Bit0 n)) =\n  complex_of_real\n   ((- 1) ^ Suc (numeral n) * bernoulli (numeral (num.Bit0 n)) *\n    (2 * pi) ^ numeral (num.Bit0 n) /\n    (2 * fact (numeral (num.Bit0 n))))\n\ngoal (1 subgoal):\n 1. zeta (numeral (num.Bit0 n)) =\n    complex_of_real\n     ((- 1) ^ Suc (numeral n) * bernoulli (numeral (num.Bit0 n)) *\n      (2 * pi) ^ numeral (num.Bit0 n) /\n      (2 * fact (numeral (num.Bit0 n))))", "."], ["proof (state)\nthis:\n  zeta (numeral (num.Bit0 n)) =\n  complex_of_real\n   ((- 1) ^ Suc (numeral n) * bernoulli (numeral (num.Bit0 n)) *\n    (2 * pi) ^ numeral (num.Bit0 n) /\n    (2 * fact (numeral (num.Bit0 n))))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary zeta_neg_even_numeral [simp]: \"zeta (-numeral (Num.Bit0 n)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta (- numeral (num.Bit0 n)) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. zeta (- numeral (num.Bit0 n)) = 0", "have \"-numeral (Num.Bit0 n) = (-of_nat (numeral (Num.Bit0 n)) :: complex)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - numeral (num.Bit0 n) = - of_nat (numeral (num.Bit0 n))", "by simp"], ["proof (state)\nthis:\n  - numeral (num.Bit0 n) = - of_nat (numeral (num.Bit0 n))\n\ngoal (1 subgoal):\n 1. zeta (- numeral (num.Bit0 n)) = 0", "also"], ["proof (state)\nthis:\n  - numeral (num.Bit0 n) = - of_nat (numeral (num.Bit0 n))\n\ngoal (1 subgoal):\n 1. zeta (- numeral (num.Bit0 n)) = 0", "have \"zeta \\<dots> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta (- of_nat (numeral (num.Bit0 n))) = 0", "proof (rule zeta_trivial_zero)"], ["proof (state)\ngoal (2 subgoals):\n 1. even (numeral (num.Bit0 n))\n 2. numeral (num.Bit0 n) \\<noteq> 0", "have \"numeral (Num.Bit0 n) = (2 * numeral n :: nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. numeral (num.Bit0 n) = 2 * numeral n", "by (subst numeral.numeral_Bit0, subst mult_2, rule refl)"], ["proof (state)\nthis:\n  numeral (num.Bit0 n) = 2 * numeral n\n\ngoal (2 subgoals):\n 1. even (numeral (num.Bit0 n))\n 2. numeral (num.Bit0 n) \\<noteq> 0", "also"], ["proof (state)\nthis:\n  numeral (num.Bit0 n) = 2 * numeral n\n\ngoal (2 subgoals):\n 1. even (numeral (num.Bit0 n))\n 2. numeral (num.Bit0 n) \\<noteq> 0", "have \"even \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. even (2 * numeral n)", "by (rule dvd_triv_left)"], ["proof (state)\nthis:\n  even (2 * numeral n)\n\ngoal (2 subgoals):\n 1. even (numeral (num.Bit0 n))\n 2. numeral (num.Bit0 n) \\<noteq> 0", "finally"], ["proof (chain)\npicking this:\n  even (numeral (num.Bit0 n))", "show \"even (numeral (Num.Bit0 n) :: nat)\""], ["proof (prove)\nusing this:\n  even (numeral (num.Bit0 n))\n\ngoal (1 subgoal):\n 1. even (numeral (num.Bit0 n))", "."], ["proof (state)\nthis:\n  even (numeral (num.Bit0 n))\n\ngoal (1 subgoal):\n 1. numeral (num.Bit0 n) \\<noteq> 0", "qed auto"], ["proof (state)\nthis:\n  zeta (- of_nat (numeral (num.Bit0 n))) = 0\n\ngoal (1 subgoal):\n 1. zeta (- numeral (num.Bit0 n)) = 0", "finally"], ["proof (chain)\npicking this:\n  zeta (- numeral (num.Bit0 n)) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  zeta (- numeral (num.Bit0 n)) = 0\n\ngoal (1 subgoal):\n 1. zeta (- numeral (num.Bit0 n)) = 0", "."], ["proof (state)\nthis:\n  zeta (- numeral (num.Bit0 n)) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary zeta_neg_numeral:\n  \"zeta (-numeral n) = \n     -of_real (bernoulli' (numeral (Num.inc n)) / numeral (Num.inc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta (- numeral n) =\n    - complex_of_real\n       (bernoulli' (numeral (Num.inc n)) / numeral (Num.inc n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. zeta (- numeral n) =\n    - complex_of_real\n       (bernoulli' (numeral (Num.inc n)) / numeral (Num.inc n))", "have \"-numeral n = (- of_nat (numeral n) :: complex)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - numeral n = - of_nat (numeral n)", "by simp"], ["proof (state)\nthis:\n  - numeral n = - of_nat (numeral n)\n\ngoal (1 subgoal):\n 1. zeta (- numeral n) =\n    - complex_of_real\n       (bernoulli' (numeral (Num.inc n)) / numeral (Num.inc n))", "also"], ["proof (state)\nthis:\n  - numeral n = - of_nat (numeral n)\n\ngoal (1 subgoal):\n 1. zeta (- numeral n) =\n    - complex_of_real\n       (bernoulli' (numeral (Num.inc n)) / numeral (Num.inc n))", "have \"zeta \\<dots> = -of_real (bernoulli' (numeral (Num.inc n)) / numeral (Num.inc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta (- of_nat (numeral n)) =\n    - complex_of_real\n       (bernoulli' (numeral (Num.inc n)) / numeral (Num.inc n))", "by (subst zeta_neg_of_nat) (simp add: numeral_inc)"], ["proof (state)\nthis:\n  zeta (- of_nat (numeral n)) =\n  - complex_of_real (bernoulli' (numeral (Num.inc n)) / numeral (Num.inc n))\n\ngoal (1 subgoal):\n 1. zeta (- numeral n) =\n    - complex_of_real\n       (bernoulli' (numeral (Num.inc n)) / numeral (Num.inc n))", "finally"], ["proof (chain)\npicking this:\n  zeta (- numeral n) =\n  - complex_of_real (bernoulli' (numeral (Num.inc n)) / numeral (Num.inc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  zeta (- numeral n) =\n  - complex_of_real (bernoulli' (numeral (Num.inc n)) / numeral (Num.inc n))\n\ngoal (1 subgoal):\n 1. zeta (- numeral n) =\n    - complex_of_real\n       (bernoulli' (numeral (Num.inc n)) / numeral (Num.inc n))", "."], ["proof (state)\nthis:\n  zeta (- numeral n) =\n  - complex_of_real (bernoulli' (numeral (Num.inc n)) / numeral (Num.inc n))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary zeta_neg1: \"zeta (-1) = - 1 / 12\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta (- 1) = - 1 / 12", "using zeta_neg_of_nat[of 1]"], ["proof (prove)\nusing this:\n  zeta (- of_nat 1) =\n  - complex_of_real (bernoulli' (Suc 1)) / of_nat (Suc 1)\n\ngoal (1 subgoal):\n 1. zeta (- 1) = - 1 / 12", "by (simp add: eval_bernoulli)"], ["", "corollary zeta_neg3: \"zeta (-3) = 1 / 120\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta (- 3) = 1 / 120", "by (simp add: zeta_neg_numeral)"], ["", "corollary zeta_neg5: \"zeta (-5) = - 1 / 252\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta (- 5) = - 1 / 252", "by (simp add: zeta_neg_numeral)"], ["", "corollary zeta_2: \"zeta 2 = pi ^ 2 / 6\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta 2 = complex_of_real (pi\\<^sup>2 / 6)", "by (simp add: zeta_even_numeral)"], ["", "corollary zeta_4: \"zeta 4 = pi ^ 4 / 90\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta 4 = complex_of_real (pi ^ 4 / 90)", "by (simp add: zeta_even_numeral fact_num_eq_if)"], ["", "corollary zeta_6: \"zeta 6 = pi ^ 6 / 945\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta 6 = complex_of_real (pi ^ 6 / 945)", "by (simp add: zeta_even_numeral fact_num_eq_if)"], ["", "corollary zeta_8: \"zeta 8 = pi ^ 8 / 9450\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta 8 = complex_of_real (pi ^ 8 / 9450)", "by (simp add: zeta_even_numeral fact_num_eq_if)"], ["", "subsection \\<open>Integral relation between $\\Gamma$ and $\\zeta$ function\\<close>"], ["", "lemma\n  assumes z: \"Re z > 0\" and a: \"a > 0\"\n  shows   Gamma_hurwitz_zeta_aux_integral: \n            \"Gamma z / (of_nat n + of_real a) powr z = \n               (\\<integral>s\\<in>{0<..}. (s powr (z - 1) / exp ((n+a) * s)) \\<partial>lebesgue)\"\n    and   Gamma_hurwitz_zeta_aux_integrable:\n            \"set_integrable lebesgue {0<..} (\\<lambda>s. s powr (z - 1) / exp ((n+a) * s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s)) &&&\n    complex_set_integrable lebesgue {0<..}\n     (\\<lambda>s.\n         complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real n + a) * s)))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))\n 2. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>s.\n         complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real n + a) * s)))", "note integrable = absolutely_integrable_Gamma_integral' [OF z]"], ["proof (state)\nthis:\n  complex_set_integrable lebesgue {0<..}\n   (\\<lambda>t. complex_of_real t powr (z - 1) / complex_of_real (exp t))\n\ngoal (2 subgoals):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))\n 2. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>s.\n         complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real n + a) * s)))", "let ?INT = \"set_lebesgue_integral lebesgue {0<..} :: (real \\<Rightarrow> complex) \\<Rightarrow> complex\""], ["proof (state)\ngoal (2 subgoals):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))\n 2. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>s.\n         complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real n + a) * s)))", "let ?INT' = \"set_lebesgue_integral lebesgue {0<..} :: (real \\<Rightarrow> real) \\<Rightarrow> real\""], ["proof (state)\ngoal (2 subgoals):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))\n 2. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>s.\n         complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real n + a) * s)))", "have meas1: \"set_borel_measurable lebesgue {0<..} \n                 (\\<lambda>x. of_real x powr (z - 1) / of_real (exp ((n+a) * x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_borel_measurable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) /\n         complex_of_real (exp ((real n + a) * x)))", "unfolding set_borel_measurable_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        indicat_real {0<..} x *\\<^sub>R\n        (complex_of_real x powr (z - 1) /\n         complex_of_real (exp ((real n + a) * x))))\n    \\<in> borel_measurable lebesgue", "by (intro measurable_completion, subst measurable_lborel2, \n        intro borel_measurable_continuous_on_indicator) (auto intro!: continuous_intros)"], ["proof (state)\nthis:\n  set_borel_measurable lebesgue {0<..}\n   (\\<lambda>x.\n       complex_of_real x powr (z - 1) /\n       complex_of_real (exp ((real n + a) * x)))\n\ngoal (2 subgoals):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))\n 2. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>s.\n         complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real n + a) * s)))", "show integrable1: \"set_integrable lebesgue {0<..} \n                       (\\<lambda>s. s powr (z - 1) / exp ((n+a) * s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>s.\n         complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real n + a) * s)))", "using assms"], ["proof (prove)\nusing this:\n  0 < Re z\n  0 < a\n\ngoal (1 subgoal):\n 1. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>s.\n         complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real n + a) * s)))", "by (intro absolutely_integrable_Gamma_integral) auto"], ["proof (state)\nthis:\n  complex_set_integrable lebesgue {0<..}\n   (\\<lambda>s.\n       complex_of_real s powr (z - 1) /\n       complex_of_real (exp ((real n + a) * s)))\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "from assms"], ["proof (chain)\npicking this:\n  0 < Re z\n  0 < a", "have pos: \"0 < real n + a\""], ["proof (prove)\nusing this:\n  0 < Re z\n  0 < a\n\ngoal (1 subgoal):\n 1. 0 < real n + a", "by (simp add: add_nonneg_pos)"], ["proof (state)\nthis:\n  0 < real n + a\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "hence \"complex_of_real 0 \\<noteq> of_real (real n + a)\""], ["proof (prove)\nusing this:\n  0 < real n + a\n\ngoal (1 subgoal):\n 1. complex_of_real 0 \\<noteq> complex_of_real (real n + a)", "by (simp only: of_real_eq_iff)"], ["proof (state)\nthis:\n  complex_of_real 0 \\<noteq> complex_of_real (real n + a)\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "also"], ["proof (state)\nthis:\n  complex_of_real 0 \\<noteq> complex_of_real (real n + a)\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "have \"complex_of_real (real n + a) = of_nat n + of_real a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (real n + a) = of_nat n + complex_of_real a", "by simp"], ["proof (state)\nthis:\n  complex_of_real (real n + a) = of_nat n + complex_of_real a\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "finally"], ["proof (chain)\npicking this:\n  complex_of_real 0 \\<noteq> of_nat n + complex_of_real a", "have nz: \"\\<dots> \\<noteq> 0\""], ["proof (prove)\nusing this:\n  complex_of_real 0 \\<noteq> of_nat n + complex_of_real a\n\ngoal (1 subgoal):\n 1. of_nat n + complex_of_real a \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  of_nat n + complex_of_real a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "have \"((\\<lambda>t. complex_of_real t powr (z - 1) / of_real (exp t)) has_integral Gamma z) {0<..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         complex_of_real t powr (z - 1) /\n         complex_of_real (exp t)) has_integral\n     Gamma z)\n     {0<..}", "by (rule Gamma_integral_complex') fact+"], ["proof (state)\nthis:\n  ((\\<lambda>t.\n       complex_of_real t powr (z - 1) /\n       complex_of_real (exp t)) has_integral\n   Gamma z)\n   {0<..}\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "hence \"Gamma z = ?INT (\\<lambda>t. t powr (z - 1) / of_real (exp t))\""], ["proof (prove)\nusing this:\n  ((\\<lambda>t.\n       complex_of_real t powr (z - 1) /\n       complex_of_real (exp t)) has_integral\n   Gamma z)\n   {0<..}\n\ngoal (1 subgoal):\n 1. Gamma z =\n    CLINT t:{0<..}|lebesgue. complex_of_real t powr (z - 1) /\n                             complex_of_real (exp t)", "using set_lebesgue_integral_eq_integral(2) [OF integrable]"], ["proof (prove)\nusing this:\n  ((\\<lambda>t.\n       complex_of_real t powr (z - 1) /\n       complex_of_real (exp t)) has_integral\n   Gamma z)\n   {0<..}\n  CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                           complex_of_real (exp x) =\n  integral {0<..}\n   (\\<lambda>t. complex_of_real t powr (z - 1) / complex_of_real (exp t))\n\ngoal (1 subgoal):\n 1. Gamma z =\n    CLINT t:{0<..}|lebesgue. complex_of_real t powr (z - 1) /\n                             complex_of_real (exp t)", "by (simp add: has_integral_iff exp_of_real)"], ["proof (state)\nthis:\n  Gamma z =\n  CLINT t:{0<..}|lebesgue. complex_of_real t powr (z - 1) /\n                           complex_of_real (exp t)\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "also"], ["proof (state)\nthis:\n  Gamma z =\n  CLINT t:{0<..}|lebesgue. complex_of_real t powr (z - 1) /\n                           complex_of_real (exp t)\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "have \"lebesgue = density (distr lebesgue lebesgue (\\<lambda>t. (real n+a) * t)) \n                          (\\<lambda>x. ennreal (real n+a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lebesgue =\n    density (distr lebesgue lebesgue ((*) (real n + a)))\n     (\\<lambda>x. ennreal (real n + a))", "using lebesgue_real_scale[of \"real n + a\"] pos"], ["proof (prove)\nusing this:\n  real n + a \\<noteq> 0 \\<Longrightarrow>\n  lebesgue =\n  density (distr lebesgue lebesgue ((*) (real n + a)))\n   (\\<lambda>x. ennreal \\<bar>real n + a\\<bar>)\n  0 < real n + a\n\ngoal (1 subgoal):\n 1. lebesgue =\n    density (distr lebesgue lebesgue ((*) (real n + a)))\n     (\\<lambda>x. ennreal (real n + a))", "by auto"], ["proof (state)\nthis:\n  lebesgue =\n  density (distr lebesgue lebesgue ((*) (real n + a)))\n   (\\<lambda>x. ennreal (real n + a))\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "also"], ["proof (state)\nthis:\n  lebesgue =\n  density (distr lebesgue lebesgue ((*) (real n + a)))\n   (\\<lambda>x. ennreal (real n + a))\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "have \"set_lebesgue_integral \\<dots> {0<..} (\\<lambda>t. of_real t powr (z - 1) / of_real (exp t)) = \n               set_lebesgue_integral (distr lebesgue lebesgue (\\<lambda>t. (real n + a) * t)) {0<..}\n                 (\\<lambda>t. (real n + a) * t powr (z - 1) / exp t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CLINT t:{0<..}|density (distr lebesgue lebesgue ((*) (real n + a)))\n                    (\\<lambda>x.\n                        ennreal\n                         (real n +\n                          a)). complex_of_real t powr (z - 1) /\n                               complex_of_real (exp t) =\n    CLINT t:{0<..}|distr lebesgue lebesgue\n                    ((*) (real n +\n                          a)). complex_of_real (real n + a) *\n                               complex_of_real t powr (z - 1) /\n                               complex_of_real (exp t)", "using integrable pos"], ["proof (prove)\nusing this:\n  complex_set_integrable lebesgue {0<..}\n   (\\<lambda>t. complex_of_real t powr (z - 1) / complex_of_real (exp t))\n  0 < real n + a\n\ngoal (1 subgoal):\n 1. CLINT t:{0<..}|density (distr lebesgue lebesgue ((*) (real n + a)))\n                    (\\<lambda>x.\n                        ennreal\n                         (real n +\n                          a)). complex_of_real t powr (z - 1) /\n                               complex_of_real (exp t) =\n    CLINT t:{0<..}|distr lebesgue lebesgue\n                    ((*) (real n +\n                          a)). complex_of_real (real n + a) *\n                               complex_of_real t powr (z - 1) /\n                               complex_of_real (exp t)", "unfolding set_lebesgue_integral_def"], ["proof (prove)\nusing this:\n  complex_set_integrable lebesgue {0<..}\n   (\\<lambda>t. complex_of_real t powr (z - 1) / complex_of_real (exp t))\n  0 < real n + a\n\ngoal (1 subgoal):\n 1. CLINT x|density (distr lebesgue lebesgue ((*) (real n + a)))\n             (\\<lambda>x.\n                 ennreal\n                  (real n +\n                   a)). indicat_real {0<..} x *\\<^sub>R\n                        (complex_of_real x powr (z - 1) /\n                         complex_of_real (exp x)) =\n    CLINT x|distr lebesgue lebesgue\n             ((*) (real n +\n                   a)). indicat_real {0<..} x *\\<^sub>R\n                        (complex_of_real (real n + a) *\n                         complex_of_real x powr (z - 1) /\n                         complex_of_real (exp x))", "by (subst integral_density) (simp_all add: exp_of_real algebra_simps scaleR_conv_of_real set_integrable_def)"], ["proof (state)\nthis:\n  CLINT t:{0<..}|density (distr lebesgue lebesgue ((*) (real n + a)))\n                  (\\<lambda>x.\n                      ennreal\n                       (real n +\n                        a)). complex_of_real t powr (z - 1) /\n                             complex_of_real (exp t) =\n  CLINT t:{0<..}|distr lebesgue lebesgue\n                  ((*) (real n +\n                        a)). complex_of_real (real n + a) *\n                             complex_of_real t powr (z - 1) /\n                             complex_of_real (exp t)\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "also"], ["proof (state)\nthis:\n  CLINT t:{0<..}|density (distr lebesgue lebesgue ((*) (real n + a)))\n                  (\\<lambda>x.\n                      ennreal\n                       (real n +\n                        a)). complex_of_real t powr (z - 1) /\n                             complex_of_real (exp t) =\n  CLINT t:{0<..}|distr lebesgue lebesgue\n                  ((*) (real n +\n                        a)). complex_of_real (real n + a) *\n                             complex_of_real t powr (z - 1) /\n                             complex_of_real (exp t)\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "have \"\\<dots> = ?INT (\\<lambda>s. (n + a) * (of_real (n+a) * of_real s) powr (z - 1) / \n                    of_real (exp ((n+a) * s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CLINT t:{0<..}|distr lebesgue lebesgue\n                    ((*) (real n +\n                          a)). complex_of_real (real n + a) *\n                               complex_of_real t powr (z - 1) /\n                               complex_of_real (exp t) =\n    CLINT s:{0<..}|lebesgue. complex_of_real (real n + a) *\n                             (complex_of_real (real n + a) *\n                              complex_of_real s) powr\n                             (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "unfolding set_lebesgue_integral_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. CLINT x|distr lebesgue lebesgue\n             ((*) (real n +\n                   a)). indicat_real {0<..} x *\\<^sub>R\n                        (complex_of_real (real n + a) *\n                         complex_of_real x powr (z - 1) /\n                         complex_of_real (exp x)) =\n    CLINT x|lebesgue. indicat_real {0<..} x *\\<^sub>R\n                      (complex_of_real (real n + a) *\n                       (complex_of_real (real n + a) *\n                        complex_of_real x) powr\n                       (z - 1) /\n                       complex_of_real (exp ((real n + a) * x)))", "proof (subst integral_distr)"], ["proof (state)\ngoal (3 subgoals):\n 1. (*) (real n + a) \\<in> lebesgue \\<rightarrow>\\<^sub>M lebesgue\n 2. (\\<lambda>x.\n        indicat_real {0<..} x *\\<^sub>R\n        (complex_of_real (real n + a) * complex_of_real x powr (z - 1) /\n         complex_of_real (exp x)))\n    \\<in> borel_measurable lebesgue\n 3. CLINT x|lebesgue. indicat_real {0<..} ((real n + a) * x) *\\<^sub>R\n                      (complex_of_real (real n + a) *\n                       complex_of_real ((real n + a) * x) powr (z - 1) /\n                       complex_of_real (exp ((real n + a) * x))) =\n    CLINT x|lebesgue. indicat_real {0<..} x *\\<^sub>R\n                      (complex_of_real (real n + a) *\n                       (complex_of_real (real n + a) *\n                        complex_of_real x) powr\n                       (z - 1) /\n                       complex_of_real (exp ((real n + a) * x)))", "show \"(*) (real n + a) \\<in> lebesgue \\<rightarrow>\\<^sub>M lebesgue\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (*) (real n + a) \\<in> lebesgue \\<rightarrow>\\<^sub>M lebesgue", "using lebesgue_measurable_scaling[of \"real n + a\", where ?'a = real]"], ["proof (prove)\nusing this:\n  (*\\<^sub>R) (real n + a) \\<in> lebesgue \\<rightarrow>\\<^sub>M lebesgue\n\ngoal (1 subgoal):\n 1. (*) (real n + a) \\<in> lebesgue \\<rightarrow>\\<^sub>M lebesgue", "unfolding real_scaleR_def"], ["proof (prove)\nusing this:\n  (*) (real n + a) \\<in> lebesgue \\<rightarrow>\\<^sub>M lebesgue\n\ngoal (1 subgoal):\n 1. (*) (real n + a) \\<in> lebesgue \\<rightarrow>\\<^sub>M lebesgue", "."], ["proof (state)\nthis:\n  (*) (real n + a) \\<in> lebesgue \\<rightarrow>\\<^sub>M lebesgue\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        indicat_real {0<..} x *\\<^sub>R\n        (complex_of_real (real n + a) * complex_of_real x powr (z - 1) /\n         complex_of_real (exp x)))\n    \\<in> borel_measurable lebesgue\n 2. CLINT x|lebesgue. indicat_real {0<..} ((real n + a) * x) *\\<^sub>R\n                      (complex_of_real (real n + a) *\n                       complex_of_real ((real n + a) * x) powr (z - 1) /\n                       complex_of_real (exp ((real n + a) * x))) =\n    CLINT x|lebesgue. indicat_real {0<..} x *\\<^sub>R\n                      (complex_of_real (real n + a) *\n                       (complex_of_real (real n + a) *\n                        complex_of_real x) powr\n                       (z - 1) /\n                       complex_of_real (exp ((real n + a) * x)))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        indicat_real {0<..} x *\\<^sub>R\n        (complex_of_real (real n + a) * complex_of_real x powr (z - 1) /\n         complex_of_real (exp x)))\n    \\<in> borel_measurable lebesgue\n 2. CLINT x|lebesgue. indicat_real {0<..} ((real n + a) * x) *\\<^sub>R\n                      (complex_of_real (real n + a) *\n                       complex_of_real ((real n + a) * x) powr (z - 1) /\n                       complex_of_real (exp ((real n + a) * x))) =\n    CLINT x|lebesgue. indicat_real {0<..} x *\\<^sub>R\n                      (complex_of_real (real n + a) *\n                       (complex_of_real (real n + a) *\n                        complex_of_real x) powr\n                       (z - 1) /\n                       complex_of_real (exp ((real n + a) * x)))", "have \"(\\<lambda>x. (n+a) * (indicator {0<..} x *\\<^sub>R (of_real x powr (z - 1) / of_real (exp x)))) \n             \\<in> lebesgue \\<rightarrow>\\<^sub>M borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (real n + a) *\n        indicat_real {0<..} x *\\<^sub>R\n        (complex_of_real x powr (z - 1) / complex_of_real (exp x)))\n    \\<in> borel_measurable lebesgue", "using integrable"], ["proof (prove)\nusing this:\n  complex_set_integrable lebesgue {0<..}\n   (\\<lambda>t. complex_of_real t powr (z - 1) / complex_of_real (exp t))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (real n + a) *\n        indicat_real {0<..} x *\\<^sub>R\n        (complex_of_real x powr (z - 1) / complex_of_real (exp x)))\n    \\<in> borel_measurable lebesgue", "unfolding set_integrable_def"], ["proof (prove)\nusing this:\n  complex_integrable lebesgue\n   (\\<lambda>x.\n       indicat_real {0<..} x *\\<^sub>R\n       (complex_of_real x powr (z - 1) / complex_of_real (exp x)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (real n + a) *\n        indicat_real {0<..} x *\\<^sub>R\n        (complex_of_real x powr (z - 1) / complex_of_real (exp x)))\n    \\<in> borel_measurable lebesgue", "by (intro borel_measurable_times) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      complex_of_real (real n + a) *\n      indicat_real {0<..} x *\\<^sub>R\n      (complex_of_real x powr (z - 1) / complex_of_real (exp x)))\n  \\<in> borel_measurable lebesgue\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        indicat_real {0<..} x *\\<^sub>R\n        (complex_of_real (real n + a) * complex_of_real x powr (z - 1) /\n         complex_of_real (exp x)))\n    \\<in> borel_measurable lebesgue\n 2. CLINT x|lebesgue. indicat_real {0<..} ((real n + a) * x) *\\<^sub>R\n                      (complex_of_real (real n + a) *\n                       complex_of_real ((real n + a) * x) powr (z - 1) /\n                       complex_of_real (exp ((real n + a) * x))) =\n    CLINT x|lebesgue. indicat_real {0<..} x *\\<^sub>R\n                      (complex_of_real (real n + a) *\n                       (complex_of_real (real n + a) *\n                        complex_of_real x) powr\n                       (z - 1) /\n                       complex_of_real (exp ((real n + a) * x)))", "thus \"(\\<lambda>x. indicator {0<..} x *\\<^sub>R\n           (complex_of_real (real n + a) * complex_of_real x powr (z - 1) / exp x))\n    \\<in> borel_measurable lebesgue\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      complex_of_real (real n + a) *\n      indicat_real {0<..} x *\\<^sub>R\n      (complex_of_real x powr (z - 1) / complex_of_real (exp x)))\n  \\<in> borel_measurable lebesgue\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        indicat_real {0<..} x *\\<^sub>R\n        (complex_of_real (real n + a) * complex_of_real x powr (z - 1) /\n         complex_of_real (exp x)))\n    \\<in> borel_measurable lebesgue", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      indicat_real {0<..} x *\\<^sub>R\n      (complex_of_real (real n + a) * complex_of_real x powr (z - 1) /\n       complex_of_real (exp x)))\n  \\<in> borel_measurable lebesgue\n\ngoal (1 subgoal):\n 1. CLINT x|lebesgue. indicat_real {0<..} ((real n + a) * x) *\\<^sub>R\n                      (complex_of_real (real n + a) *\n                       complex_of_real ((real n + a) * x) powr (z - 1) /\n                       complex_of_real (exp ((real n + a) * x))) =\n    CLINT x|lebesgue. indicat_real {0<..} x *\\<^sub>R\n                      (complex_of_real (real n + a) *\n                       (complex_of_real (real n + a) *\n                        complex_of_real x) powr\n                       (z - 1) /\n                       complex_of_real (exp ((real n + a) * x)))", "qed (intro Bochner_Integration.integral_cong refl, insert pos, \n       auto simp: indicator_def zero_less_mult_iff)"], ["proof (state)\nthis:\n  CLINT t:{0<..}|distr lebesgue lebesgue\n                  ((*) (real n +\n                        a)). complex_of_real (real n + a) *\n                             complex_of_real t powr (z - 1) /\n                             complex_of_real (exp t) =\n  CLINT s:{0<..}|lebesgue. complex_of_real (real n + a) *\n                           (complex_of_real (real n + a) *\n                            complex_of_real s) powr\n                           (z - 1) /\n                           complex_of_real (exp ((real n + a) * s))\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "also"], ["proof (state)\nthis:\n  CLINT t:{0<..}|distr lebesgue lebesgue\n                  ((*) (real n +\n                        a)). complex_of_real (real n + a) *\n                             complex_of_real t powr (z - 1) /\n                             complex_of_real (exp t) =\n  CLINT s:{0<..}|lebesgue. complex_of_real (real n + a) *\n                           (complex_of_real (real n + a) *\n                            complex_of_real s) powr\n                           (z - 1) /\n                           complex_of_real (exp ((real n + a) * s))\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "have \"\\<dots> = ?INT (\\<lambda>s. ((n+a) powr z) * (s powr (z - 1) / exp ((n+a) * s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CLINT s:{0<..}|lebesgue. complex_of_real (real n + a) *\n                             (complex_of_real (real n + a) *\n                              complex_of_real s) powr\n                             (z - 1) /\n                             complex_of_real (exp ((real n + a) * s)) =\n    CLINT s:{0<..}|lebesgue. complex_of_real (real n + a) powr z *\n                             (complex_of_real s powr (z - 1) /\n                              complex_of_real (exp ((real n + a) * s)))", "using pos"], ["proof (prove)\nusing this:\n  0 < real n + a\n\ngoal (1 subgoal):\n 1. CLINT s:{0<..}|lebesgue. complex_of_real (real n + a) *\n                             (complex_of_real (real n + a) *\n                              complex_of_real s) powr\n                             (z - 1) /\n                             complex_of_real (exp ((real n + a) * s)) =\n    CLINT s:{0<..}|lebesgue. complex_of_real (real n + a) powr z *\n                             (complex_of_real s powr (z - 1) /\n                              complex_of_real (exp ((real n + a) * s)))", "by (intro set_lebesgue_integral_cong refl allI impI, simp, subst powr_times_real)\n       (auto simp: powr_diff)"], ["proof (state)\nthis:\n  CLINT s:{0<..}|lebesgue. complex_of_real (real n + a) *\n                           (complex_of_real (real n + a) *\n                            complex_of_real s) powr\n                           (z - 1) /\n                           complex_of_real (exp ((real n + a) * s)) =\n  CLINT s:{0<..}|lebesgue. complex_of_real (real n + a) powr z *\n                           (complex_of_real s powr (z - 1) /\n                            complex_of_real (exp ((real n + a) * s)))\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "also"], ["proof (state)\nthis:\n  CLINT s:{0<..}|lebesgue. complex_of_real (real n + a) *\n                           (complex_of_real (real n + a) *\n                            complex_of_real s) powr\n                           (z - 1) /\n                           complex_of_real (exp ((real n + a) * s)) =\n  CLINT s:{0<..}|lebesgue. complex_of_real (real n + a) powr z *\n                           (complex_of_real s powr (z - 1) /\n                            complex_of_real (exp ((real n + a) * s)))\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "have \"\\<dots> = (n + a) powr z * ?INT (\\<lambda>s. s powr (z - 1) / exp ((n+a) * s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CLINT s:{0<..}|lebesgue. complex_of_real (real n + a) powr z *\n                             (complex_of_real s powr (z - 1) /\n                              complex_of_real (exp ((real n + a) * s))) =\n    complex_of_real (real n + a) powr z *\n    (CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                              complex_of_real (exp ((real n + a) * s)))", "unfolding set_lebesgue_integral_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. CLINT x|lebesgue. indicat_real {0<..} x *\\<^sub>R\n                      (complex_of_real (real n + a) powr z *\n                       (complex_of_real x powr (z - 1) /\n                        complex_of_real (exp ((real n + a) * x)))) =\n    complex_of_real (real n + a) powr z *\n    (CLINT x|lebesgue. indicat_real {0<..} x *\\<^sub>R\n                       (complex_of_real x powr (z - 1) /\n                        complex_of_real (exp ((real n + a) * x))))", "by (subst integral_mult_right_zero [symmetric]) simp_all"], ["proof (state)\nthis:\n  CLINT s:{0<..}|lebesgue. complex_of_real (real n + a) powr z *\n                           (complex_of_real s powr (z - 1) /\n                            complex_of_real (exp ((real n + a) * s))) =\n  complex_of_real (real n + a) powr z *\n  (CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                            complex_of_real (exp ((real n + a) * s)))\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "finally"], ["proof (chain)\npicking this:\n  Gamma z =\n  complex_of_real (real n + a) powr z *\n  (CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                            complex_of_real (exp ((real n + a) * s)))", "show \"Gamma z / (of_nat n + of_real a) powr z = \n                  ?INT (\\<lambda>s. s powr (z - 1) / exp ((n+a) * s))\""], ["proof (prove)\nusing this:\n  Gamma z =\n  complex_of_real (real n + a) powr z *\n  (CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                            complex_of_real (exp ((real n + a) * s)))\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "using nz"], ["proof (prove)\nusing this:\n  Gamma z =\n  complex_of_real (real n + a) powr z *\n  (CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                            complex_of_real (exp ((real n + a) * s)))\n  of_nat n + complex_of_real a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Gamma z / (of_nat n + complex_of_real a) powr z =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "by (auto simp add: field_simps)"], ["proof (state)\nthis:\n  Gamma z / (of_nat n + complex_of_real a) powr z =\n  CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                           complex_of_real (exp ((real n + a) * s))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  assumes x: \"x > 0\" and \"a > 0\"\n  shows   Gamma_hurwitz_zeta_aux_integral_real: \n            \"Gamma x / (real n + a) powr x = \n               set_lebesgue_integral lebesgue {0<..} \n               (\\<lambda>s. s powr (x - 1) / exp ((real n + a) * s))\"\n    and   Gamma_hurwitz_zeta_aux_integrable_real:\n            \"set_integrable lebesgue {0<..} (\\<lambda>s. s powr (x - 1) / exp ((real n + a) * s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gamma x / (real n + a) powr x =\n    \\<integral>s\\<in>{0<..}. (s powr (x - 1) / exp ((real n + a) * s))\n    \\<partial>lebesgue &&&\n    (\\<lambda>s.\n        s powr (x - 1) / exp ((real n + a) * s)) absolutely_integrable_on\n    {0<..}", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. Gamma x / (real n + a) powr x =\n    \\<integral>s\\<in>{0<..}. (s powr (x - 1) / exp ((real n + a) * s))\n    \\<partial>lebesgue\n 2. (\\<lambda>s.\n        s powr (x - 1) / exp ((real n + a) * s)) absolutely_integrable_on\n    {0<..}", "show \"set_integrable lebesgue {0<..} (\\<lambda>s. s powr (x - 1) / exp ((real n + a) * s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        s powr (x - 1) / exp ((real n + a) * s)) absolutely_integrable_on\n    {0<..}", "using absolutely_integrable_Gamma_integral[of \"of_real x\" \"real n + a\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < Re (complex_of_real x); 0 < real n + a\\<rbrakk>\n  \\<Longrightarrow> complex_set_integrable lebesgue {0<..}\n                     (\\<lambda>t.\n                         complex_of_real t powr (complex_of_real x - 1) /\n                         complex_of_real (exp ((real n + a) * t)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        s powr (x - 1) / exp ((real n + a) * s)) absolutely_integrable_on\n    {0<..}", "unfolding set_integrable_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < Re (complex_of_real x); 0 < real n + a\\<rbrakk>\n  \\<Longrightarrow> complex_integrable lebesgue\n                     (\\<lambda>xa.\n                         indicat_real {0<..} xa *\\<^sub>R\n                         (complex_of_real xa powr (complex_of_real x - 1) /\n                          complex_of_real (exp ((real n + a) * xa))))\n\ngoal (1 subgoal):\n 1. integrable lebesgue\n     (\\<lambda>xa.\n         indicat_real {0<..} xa *\\<^sub>R\n         (xa powr (x - 1) / exp ((real n + a) * xa)))", "proof (rule Bochner_Integration.integrable_bound, goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. 0 < Re (complex_of_real x)\n 2. 0 < real n + a\n 3. (\\<lambda>xa.\n        indicat_real {0<..} xa *\\<^sub>R\n        (xa powr (x - 1) / exp ((real n + a) * xa)))\n    \\<in> borel_measurable lebesgue\n 4. AE xa in lebesgue. norm\n                        (indicat_real {0<..} xa *\\<^sub>R\n                         (xa powr (x - 1) / exp ((real n + a) * xa)))\n                       \\<le> cmod\n                              (indicat_real {0<..} xa *\\<^sub>R\n                               (complex_of_real xa powr\n                                (complex_of_real x - 1) /\n                                complex_of_real (exp ((real n + a) * xa))))", "case 3"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. 0 < Re (complex_of_real x)\n 2. 0 < real n + a\n 3. (\\<lambda>xa.\n        indicat_real {0<..} xa *\\<^sub>R\n        (xa powr (x - 1) / exp ((real n + a) * xa)))\n    \\<in> borel_measurable lebesgue\n 4. AE xa in lebesgue. norm\n                        (indicat_real {0<..} xa *\\<^sub>R\n                         (xa powr (x - 1) / exp ((real n + a) * xa)))\n                       \\<le> cmod\n                              (indicat_real {0<..} xa *\\<^sub>R\n                               (complex_of_real xa powr\n                                (complex_of_real x - 1) /\n                                complex_of_real (exp ((real n + a) * xa))))", "have \"set_integrable lebesgue {0<..} (\\<lambda>xa. complex_of_real xa powr (of_real x - 1) / \n              of_real (exp ((n + a) * xa)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>xa.\n         complex_of_real xa powr (complex_of_real x - 1) /\n         complex_of_real (exp ((real n + a) * xa)))", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n  0 < a\n\ngoal (1 subgoal):\n 1. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>xa.\n         complex_of_real xa powr (complex_of_real x - 1) /\n         complex_of_real (exp ((real n + a) * xa)))", "by (intro Gamma_hurwitz_zeta_aux_integrable) auto"], ["proof (state)\nthis:\n  complex_set_integrable lebesgue {0<..}\n   (\\<lambda>xa.\n       complex_of_real xa powr (complex_of_real x - 1) /\n       complex_of_real (exp ((real n + a) * xa)))\n\ngoal (4 subgoals):\n 1. 0 < Re (complex_of_real x)\n 2. 0 < real n + a\n 3. (\\<lambda>xa.\n        indicat_real {0<..} xa *\\<^sub>R\n        (xa powr (x - 1) / exp ((real n + a) * xa)))\n    \\<in> borel_measurable lebesgue\n 4. AE xa in lebesgue. norm\n                        (indicat_real {0<..} xa *\\<^sub>R\n                         (xa powr (x - 1) / exp ((real n + a) * xa)))\n                       \\<le> cmod\n                              (indicat_real {0<..} xa *\\<^sub>R\n                               (complex_of_real xa powr\n                                (complex_of_real x - 1) /\n                                complex_of_real (exp ((real n + a) * xa))))", "also"], ["proof (state)\nthis:\n  complex_set_integrable lebesgue {0<..}\n   (\\<lambda>xa.\n       complex_of_real xa powr (complex_of_real x - 1) /\n       complex_of_real (exp ((real n + a) * xa)))\n\ngoal (4 subgoals):\n 1. 0 < Re (complex_of_real x)\n 2. 0 < real n + a\n 3. (\\<lambda>xa.\n        indicat_real {0<..} xa *\\<^sub>R\n        (xa powr (x - 1) / exp ((real n + a) * xa)))\n    \\<in> borel_measurable lebesgue\n 4. AE xa in lebesgue. norm\n                        (indicat_real {0<..} xa *\\<^sub>R\n                         (xa powr (x - 1) / exp ((real n + a) * xa)))\n                       \\<le> cmod\n                              (indicat_real {0<..} xa *\\<^sub>R\n                               (complex_of_real xa powr\n                                (complex_of_real x - 1) /\n                                complex_of_real (exp ((real n + a) * xa))))", "have \"?this \\<longleftrightarrow> integrable lebesgue\n                 (\\<lambda>s. complex_of_real (indicator {0<..} s *\\<^sub>R (s powr (x - 1) / (exp ((n+a) * s)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>xa.\n         complex_of_real xa powr (complex_of_real x - 1) /\n         complex_of_real (exp ((real n + a) * xa))) =\n    complex_integrable lebesgue\n     (\\<lambda>s.\n         complex_of_real\n          (indicat_real {0<..} s *\\<^sub>R\n           (s powr (x - 1) / exp ((real n + a) * s))))", "unfolding set_integrable_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_integrable lebesgue\n     (\\<lambda>xa.\n         indicat_real {0<..} xa *\\<^sub>R\n         (complex_of_real xa powr (complex_of_real x - 1) /\n          complex_of_real (exp ((real n + a) * xa)))) =\n    complex_integrable lebesgue\n     (\\<lambda>s.\n         complex_of_real\n          (indicat_real {0<..} s *\\<^sub>R\n           (s powr (x - 1) / exp ((real n + a) * s))))", "by (intro Bochner_Integration.integrable_cong refl) (auto simp: powr_Reals_eq indicator_def)"], ["proof (state)\nthis:\n  complex_set_integrable lebesgue {0<..}\n   (\\<lambda>xa.\n       complex_of_real xa powr (complex_of_real x - 1) /\n       complex_of_real (exp ((real n + a) * xa))) =\n  complex_integrable lebesgue\n   (\\<lambda>s.\n       complex_of_real\n        (indicat_real {0<..} s *\\<^sub>R\n         (s powr (x - 1) / exp ((real n + a) * s))))\n\ngoal (4 subgoals):\n 1. 0 < Re (complex_of_real x)\n 2. 0 < real n + a\n 3. (\\<lambda>xa.\n        indicat_real {0<..} xa *\\<^sub>R\n        (xa powr (x - 1) / exp ((real n + a) * xa)))\n    \\<in> borel_measurable lebesgue\n 4. AE xa in lebesgue. norm\n                        (indicat_real {0<..} xa *\\<^sub>R\n                         (xa powr (x - 1) / exp ((real n + a) * xa)))\n                       \\<le> cmod\n                              (indicat_real {0<..} xa *\\<^sub>R\n                               (complex_of_real xa powr\n                                (complex_of_real x - 1) /\n                                complex_of_real (exp ((real n + a) * xa))))", "finally"], ["proof (chain)\npicking this:\n  complex_integrable lebesgue\n   (\\<lambda>s.\n       complex_of_real\n        (indicat_real {0<..} s *\\<^sub>R\n         (s powr (x - 1) / exp ((real n + a) * s))))", "have \"set_integrable lebesgue {0<..} (\\<lambda>s. s powr (x - 1) / exp ((n+a) * s))\""], ["proof (prove)\nusing this:\n  complex_integrable lebesgue\n   (\\<lambda>s.\n       complex_of_real\n        (indicat_real {0<..} s *\\<^sub>R\n         (s powr (x - 1) / exp ((real n + a) * s))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        s powr (x - 1) / exp ((real n + a) * s)) absolutely_integrable_on\n    {0<..}", "unfolding set_integrable_def complex_of_real_integrable_eq"], ["proof (prove)\nusing this:\n  integrable lebesgue\n   (\\<lambda>s.\n       indicat_real {0<..} s *\\<^sub>R\n       (s powr (x - 1) / exp ((real n + a) * s)))\n\ngoal (1 subgoal):\n 1. integrable lebesgue\n     (\\<lambda>xa.\n         indicat_real {0<..} xa *\\<^sub>R\n         (xa powr (x - 1) / exp ((real n + a) * xa)))", "."], ["proof (state)\nthis:\n  (\\<lambda>s.\n      s powr (x - 1) / exp ((real n + a) * s)) absolutely_integrable_on\n  {0<..}\n\ngoal (4 subgoals):\n 1. 0 < Re (complex_of_real x)\n 2. 0 < real n + a\n 3. (\\<lambda>xa.\n        indicat_real {0<..} xa *\\<^sub>R\n        (xa powr (x - 1) / exp ((real n + a) * xa)))\n    \\<in> borel_measurable lebesgue\n 4. AE xa in lebesgue. norm\n                        (indicat_real {0<..} xa *\\<^sub>R\n                         (xa powr (x - 1) / exp ((real n + a) * xa)))\n                       \\<le> cmod\n                              (indicat_real {0<..} xa *\\<^sub>R\n                               (complex_of_real xa powr\n                                (complex_of_real x - 1) /\n                                complex_of_real (exp ((real n + a) * xa))))", "thus ?case"], ["proof (prove)\nusing this:\n  (\\<lambda>s.\n      s powr (x - 1) / exp ((real n + a) * s)) absolutely_integrable_on\n  {0<..}\n\ngoal (1 subgoal):\n 1. (\\<lambda>xa.\n        indicat_real {0<..} xa *\\<^sub>R\n        (xa powr (x - 1) / exp ((real n + a) * xa)))\n    \\<in> borel_measurable lebesgue", "by (simp add: set_integrable_def)"], ["proof (state)\nthis:\n  (\\<lambda>xa.\n      indicat_real {0<..} xa *\\<^sub>R\n      (xa powr (x - 1) / exp ((real n + a) * xa)))\n  \\<in> borel_measurable lebesgue\n\ngoal (3 subgoals):\n 1. 0 < Re (complex_of_real x)\n 2. 0 < real n + a\n 3. AE xa in lebesgue. norm\n                        (indicat_real {0<..} xa *\\<^sub>R\n                         (xa powr (x - 1) / exp ((real n + a) * xa)))\n                       \\<le> cmod\n                              (indicat_real {0<..} xa *\\<^sub>R\n                               (complex_of_real xa powr\n                                (complex_of_real x - 1) /\n                                complex_of_real (exp ((real n + a) * xa))))", "qed (insert assms, auto intro!: AE_I2 simp: indicator_def norm_divide norm_powr_real_powr)"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      s powr (x - 1) / exp ((real n + a) * s)) absolutely_integrable_on\n  {0<..}\n\ngoal (1 subgoal):\n 1. Gamma x / (real n + a) powr x =\n    \\<integral>s\\<in>{0<..}. (s powr (x - 1) / exp ((real n + a) * s))\n    \\<partial>lebesgue", "from Gamma_hurwitz_zeta_aux_integral[of \"of_real x\" a n] and assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < Re (complex_of_real x); 0 < a\\<rbrakk>\n  \\<Longrightarrow> Gamma (complex_of_real x) /\n                    (of_nat n + complex_of_real a) powr complex_of_real x =\n                    CLINT s:{0<..}|lebesgue. complex_of_real s powr\n       (complex_of_real x - 1) /\n       complex_of_real (exp ((real n + a) * s))\n  0 < x\n  0 < a", "have \"of_real (Gamma x / (real n + a) powr x) = set_lebesgue_integral lebesgue {0<..} \n            (\\<lambda>s. complex_of_real s powr (of_real x - 1) / of_real (exp ((n+a) * s)))\" (is \"_ = ?I\")"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < Re (complex_of_real x); 0 < a\\<rbrakk>\n  \\<Longrightarrow> Gamma (complex_of_real x) /\n                    (of_nat n + complex_of_real a) powr complex_of_real x =\n                    CLINT s:{0<..}|lebesgue. complex_of_real s powr\n       (complex_of_real x - 1) /\n       complex_of_real (exp ((real n + a) * s))\n  0 < x\n  0 < a\n\ngoal (1 subgoal):\n 1. complex_of_real (Gamma x / (real n + a) powr x) =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr\n                             (complex_of_real x - 1) /\n                             complex_of_real (exp ((real n + a) * s))", "by (auto simp: Gamma_complex_of_real powr_Reals_eq)"], ["proof (state)\nthis:\n  complex_of_real (Gamma x / (real n + a) powr x) =\n  CLINT s:{0<..}|lebesgue. complex_of_real s powr (complex_of_real x - 1) /\n                           complex_of_real (exp ((real n + a) * s))\n\ngoal (1 subgoal):\n 1. Gamma x / (real n + a) powr x =\n    \\<integral>s\\<in>{0<..}. (s powr (x - 1) / exp ((real n + a) * s))\n    \\<partial>lebesgue", "also"], ["proof (state)\nthis:\n  complex_of_real (Gamma x / (real n + a) powr x) =\n  CLINT s:{0<..}|lebesgue. complex_of_real s powr (complex_of_real x - 1) /\n                           complex_of_real (exp ((real n + a) * s))\n\ngoal (1 subgoal):\n 1. Gamma x / (real n + a) powr x =\n    \\<integral>s\\<in>{0<..}. (s powr (x - 1) / exp ((real n + a) * s))\n    \\<partial>lebesgue", "have \"?I = lebesgue_integral lebesgue\n                    (\\<lambda>s. of_real (indicator {0<..} s *\\<^sub>R (s powr (x - 1) / exp ((n+a) * s))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CLINT s:{0<..}|lebesgue. complex_of_real s powr\n                             (complex_of_real x - 1) /\n                             complex_of_real (exp ((real n + a) * s)) =\n    CLINT s|lebesgue. complex_of_real\n                       (indicat_real {0<..} s *\\<^sub>R\n                        (s powr (x - 1) / exp ((real n + a) * s)))", "unfolding set_lebesgue_integral_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. CLINT xa|lebesgue. indicat_real {0<..} xa *\\<^sub>R\n                       (complex_of_real xa powr (complex_of_real x - 1) /\n                        complex_of_real (exp ((real n + a) * xa))) =\n    CLINT s|lebesgue. complex_of_real\n                       (indicat_real {0<..} s *\\<^sub>R\n                        (s powr (x - 1) / exp ((real n + a) * s)))", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n  0 < a\n\ngoal (1 subgoal):\n 1. CLINT xa|lebesgue. indicat_real {0<..} xa *\\<^sub>R\n                       (complex_of_real xa powr (complex_of_real x - 1) /\n                        complex_of_real (exp ((real n + a) * xa))) =\n    CLINT s|lebesgue. complex_of_real\n                       (indicat_real {0<..} s *\\<^sub>R\n                        (s powr (x - 1) / exp ((real n + a) * s)))", "by (intro Bochner_Integration.integral_cong refl) \n                   (auto simp: indicator_def powr_Reals_eq)"], ["proof (state)\nthis:\n  CLINT s:{0<..}|lebesgue. complex_of_real s powr (complex_of_real x - 1) /\n                           complex_of_real (exp ((real n + a) * s)) =\n  CLINT s|lebesgue. complex_of_real\n                     (indicat_real {0<..} s *\\<^sub>R\n                      (s powr (x - 1) / exp ((real n + a) * s)))\n\ngoal (1 subgoal):\n 1. Gamma x / (real n + a) powr x =\n    \\<integral>s\\<in>{0<..}. (s powr (x - 1) / exp ((real n + a) * s))\n    \\<partial>lebesgue", "also"], ["proof (state)\nthis:\n  CLINT s:{0<..}|lebesgue. complex_of_real s powr (complex_of_real x - 1) /\n                           complex_of_real (exp ((real n + a) * s)) =\n  CLINT s|lebesgue. complex_of_real\n                     (indicat_real {0<..} s *\\<^sub>R\n                      (s powr (x - 1) / exp ((real n + a) * s)))\n\ngoal (1 subgoal):\n 1. Gamma x / (real n + a) powr x =\n    \\<integral>s\\<in>{0<..}. (s powr (x - 1) / exp ((real n + a) * s))\n    \\<partial>lebesgue", "have \"\\<dots> = of_real (set_lebesgue_integral lebesgue {0<..} \n                    (\\<lambda>s. s powr (x - 1) / exp ((n+a) * s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CLINT s|lebesgue. complex_of_real\n                       (indicat_real {0<..} s *\\<^sub>R\n                        (s powr (x - 1) / exp ((real n + a) * s))) =\n    complex_of_real\n     (\\<integral>s\\<in>{0<..}. (s powr (x - 1) / exp ((real n + a) * s))\n      \\<partial>lebesgue)", "unfolding set_lebesgue_integral_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. CLINT s|lebesgue. complex_of_real\n                       (indicat_real {0<..} s *\\<^sub>R\n                        (s powr (x - 1) / exp ((real n + a) * s))) =\n    complex_of_real\n     (LINT xa|lebesgue.\n         indicat_real {0<..} xa *\\<^sub>R\n         (xa powr (x - 1) / exp ((real n + a) * xa)))", "by (rule Bochner_Integration.integral_complex_of_real)"], ["proof (state)\nthis:\n  CLINT s|lebesgue. complex_of_real\n                     (indicat_real {0<..} s *\\<^sub>R\n                      (s powr (x - 1) / exp ((real n + a) * s))) =\n  complex_of_real\n   (\\<integral>s\\<in>{0<..}. (s powr (x - 1) / exp ((real n + a) * s))\n    \\<partial>lebesgue)\n\ngoal (1 subgoal):\n 1. Gamma x / (real n + a) powr x =\n    \\<integral>s\\<in>{0<..}. (s powr (x - 1) / exp ((real n + a) * s))\n    \\<partial>lebesgue", "finally"], ["proof (chain)\npicking this:\n  complex_of_real (Gamma x / (real n + a) powr x) =\n  complex_of_real\n   (\\<integral>s\\<in>{0<..}. (s powr (x - 1) / exp ((real n + a) * s))\n    \\<partial>lebesgue)", "show \"Gamma x / (real n + a) powr x = set_lebesgue_integral lebesgue {0<..} \n                  (\\<lambda>s. s powr (x - 1) / exp ((real n + a) * s))\""], ["proof (prove)\nusing this:\n  complex_of_real (Gamma x / (real n + a) powr x) =\n  complex_of_real\n   (\\<integral>s\\<in>{0<..}. (s powr (x - 1) / exp ((real n + a) * s))\n    \\<partial>lebesgue)\n\ngoal (1 subgoal):\n 1. Gamma x / (real n + a) powr x =\n    \\<integral>s\\<in>{0<..}. (s powr (x - 1) / exp ((real n + a) * s))\n    \\<partial>lebesgue", "by (subst (asm) of_real_eq_iff)"], ["proof (state)\nthis:\n  Gamma x / (real n + a) powr x =\n  \\<integral>s\\<in>{0<..}. (s powr (x - 1) / exp ((real n + a) * s))\n  \\<partial>lebesgue\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem\n  assumes \"Re z > 1\" and \"a > (0::real)\"\n  shows   Gamma_times_hurwitz_zeta_integral: \"Gamma z * hurwitz_zeta a z =\n            (\\<integral>x\\<in>{0<..}. (of_real x powr (z - 1) * of_real (exp (-a*x) / (1 - exp (-x)))) \\<partial>lebesgue)\"\n    and   Gamma_times_hurwitz_zeta_integrable:\n            \"set_integrable lebesgue {0<..} \n               (\\<lambda>x. of_real x powr (z - 1) * of_real (exp (-a*x) / (1 - exp (-x))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x))) &&&\n    complex_set_integrable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) *\n         complex_of_real (exp (- a * x) / (1 - exp (- x))))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))\n 2. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) *\n         complex_of_real (exp (- a * x) / (1 - exp (- x))))", "from assms"], ["proof (chain)\npicking this:\n  1 < Re z\n  0 < a", "have z: \"Re z > 0\""], ["proof (prove)\nusing this:\n  1 < Re z\n  0 < a\n\ngoal (1 subgoal):\n 1. 0 < Re z", "by simp"], ["proof (state)\nthis:\n  0 < Re z\n\ngoal (2 subgoals):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))\n 2. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) *\n         complex_of_real (exp (- a * x) / (1 - exp (- x))))", "let ?INT = \"set_lebesgue_integral lebesgue {0<..} :: (real \\<Rightarrow> complex) \\<Rightarrow> complex\""], ["proof (state)\ngoal (2 subgoals):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))\n 2. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) *\n         complex_of_real (exp (- a * x) / (1 - exp (- x))))", "let ?INT' = \"set_lebesgue_integral lebesgue {0<..} :: (real \\<Rightarrow> real) \\<Rightarrow> real\""], ["proof (state)\ngoal (2 subgoals):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))\n 2. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) *\n         complex_of_real (exp (- a * x) / (1 - exp (- x))))", "have 1: \"complex_set_integrable lebesgue {0<..} \n            (\\<lambda>x. of_real x powr (z - 1) / of_real (exp ((real n + a) * x)))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) /\n         complex_of_real (exp ((real n + a) * x)))", "by (rule Gamma_hurwitz_zeta_aux_integrable) (use assms in simp_all)"], ["proof (state)\nthis:\n  complex_set_integrable lebesgue {0<..}\n   (\\<lambda>x.\n       complex_of_real x powr (z - 1) /\n       complex_of_real (exp ((real ?n + a) * x)))\n\ngoal (2 subgoals):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))\n 2. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) *\n         complex_of_real (exp (- a * x) / (1 - exp (- x))))", "have 2: \"summable (\\<lambda>n. norm (indicator {0<..} s *\\<^sub>R (of_real s powr (z - 1) / \n             of_real (exp ((n + a) * s)))))\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. summable\n     (\\<lambda>x.\n         cmod\n          (indicat_real {0<..} s *\\<^sub>R\n           (complex_of_real s powr (z - 1) /\n            complex_of_real (exp ((real x + a) * s)))))", "proof (cases \"s > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < s \\<Longrightarrow>\n    summable\n     (\\<lambda>x.\n         cmod\n          (indicat_real {0<..} s *\\<^sub>R\n           (complex_of_real s powr (z - 1) /\n            complex_of_real (exp ((real x + a) * s)))))\n 2. \\<not> 0 < s \\<Longrightarrow>\n    summable\n     (\\<lambda>x.\n         cmod\n          (indicat_real {0<..} s *\\<^sub>R\n           (complex_of_real s powr (z - 1) /\n            complex_of_real (exp ((real x + a) * s)))))", "case True"], ["proof (state)\nthis:\n  0 < s\n\ngoal (2 subgoals):\n 1. 0 < s \\<Longrightarrow>\n    summable\n     (\\<lambda>x.\n         cmod\n          (indicat_real {0<..} s *\\<^sub>R\n           (complex_of_real s powr (z - 1) /\n            complex_of_real (exp ((real x + a) * s)))))\n 2. \\<not> 0 < s \\<Longrightarrow>\n    summable\n     (\\<lambda>x.\n         cmod\n          (indicat_real {0<..} s *\\<^sub>R\n           (complex_of_real s powr (z - 1) /\n            complex_of_real (exp ((real x + a) * s)))))", "hence \"summable (\\<lambda>n. norm (of_real s powr (z - 1)) * exp (-a * s) * exp (-s) ^ n)\""], ["proof (prove)\nusing this:\n  0 < s\n\ngoal (1 subgoal):\n 1. summable\n     (\\<lambda>n.\n         cmod (complex_of_real s powr (z - 1)) * exp (- a * s) *\n         exp (- s) ^ n)", "using assms"], ["proof (prove)\nusing this:\n  0 < s\n  1 < Re z\n  0 < a\n\ngoal (1 subgoal):\n 1. summable\n     (\\<lambda>n.\n         cmod (complex_of_real s powr (z - 1)) * exp (- a * s) *\n         exp (- s) ^ n)", "by (intro summable_mult summable_geometric) simp_all"], ["proof (state)\nthis:\n  summable\n   (\\<lambda>n.\n       cmod (complex_of_real s powr (z - 1)) * exp (- a * s) *\n       exp (- s) ^ n)\n\ngoal (2 subgoals):\n 1. 0 < s \\<Longrightarrow>\n    summable\n     (\\<lambda>x.\n         cmod\n          (indicat_real {0<..} s *\\<^sub>R\n           (complex_of_real s powr (z - 1) /\n            complex_of_real (exp ((real x + a) * s)))))\n 2. \\<not> 0 < s \\<Longrightarrow>\n    summable\n     (\\<lambda>x.\n         cmod\n          (indicat_real {0<..} s *\\<^sub>R\n           (complex_of_real s powr (z - 1) /\n            complex_of_real (exp ((real x + a) * s)))))", "with True"], ["proof (chain)\npicking this:\n  0 < s\n  summable\n   (\\<lambda>n.\n       cmod (complex_of_real s powr (z - 1)) * exp (- a * s) *\n       exp (- s) ^ n)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < s\n  summable\n   (\\<lambda>n.\n       cmod (complex_of_real s powr (z - 1)) * exp (- a * s) *\n       exp (- s) ^ n)\n\ngoal (1 subgoal):\n 1. summable\n     (\\<lambda>x.\n         cmod\n          (indicat_real {0<..} s *\\<^sub>R\n           (complex_of_real s powr (z - 1) /\n            complex_of_real (exp ((real x + a) * s)))))", "by (simp add: norm_mult norm_divide exp_add exp_diff\n                    exp_minus field_simps exp_of_nat_mult [symmetric])"], ["proof (state)\nthis:\n  summable\n   (\\<lambda>x.\n       cmod\n        (indicat_real {0<..} s *\\<^sub>R\n         (complex_of_real s powr (z - 1) /\n          complex_of_real (exp ((real x + a) * s)))))\n\ngoal (1 subgoal):\n 1. \\<not> 0 < s \\<Longrightarrow>\n    summable\n     (\\<lambda>x.\n         cmod\n          (indicat_real {0<..} s *\\<^sub>R\n           (complex_of_real s powr (z - 1) /\n            complex_of_real (exp ((real x + a) * s)))))", "qed simp_all"], ["proof (state)\nthis:\n  summable\n   (\\<lambda>x.\n       cmod\n        (indicat_real {0<..} ?s *\\<^sub>R\n         (complex_of_real ?s powr (z - 1) /\n          complex_of_real (exp ((real x + a) * ?s)))))\n\ngoal (2 subgoals):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))\n 2. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) *\n         complex_of_real (exp (- a * x) / (1 - exp (- x))))", "have 3: \"summable (\\<lambda>n. \\<integral>x. norm (indicator {0<..} x *\\<^sub>R (complex_of_real x powr (z - 1) /\n                            complex_of_real (exp ((n + a) * x)))) \\<partial>lebesgue)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable\n     (\\<lambda>x.\n         LINT xa|lebesgue.\n            cmod\n             (indicat_real {0<..} xa *\\<^sub>R\n              (complex_of_real xa powr (z - 1) /\n               complex_of_real (exp ((real x + a) * xa)))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summable\n     (\\<lambda>x.\n         LINT xa|lebesgue.\n            cmod\n             (indicat_real {0<..} xa *\\<^sub>R\n              (complex_of_real xa powr (z - 1) /\n               complex_of_real (exp ((real x + a) * xa)))))", "have \"summable (\\<lambda>n. Gamma (Re z) * (real n + a) powr -Re z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. Gamma (Re z) * (real n + a) powr - Re z)", "using assms"], ["proof (prove)\nusing this:\n  1 < Re z\n  0 < a\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. Gamma (Re z) * (real n + a) powr - Re z)", "by (intro summable_mult summable_hurwitz_zeta_real) simp_all"], ["proof (state)\nthis:\n  summable (\\<lambda>n. Gamma (Re z) * (real n + a) powr - Re z)\n\ngoal (1 subgoal):\n 1. summable\n     (\\<lambda>x.\n         LINT xa|lebesgue.\n            cmod\n             (indicat_real {0<..} xa *\\<^sub>R\n              (complex_of_real xa powr (z - 1) /\n               complex_of_real (exp ((real x + a) * xa)))))", "also"], ["proof (state)\nthis:\n  summable (\\<lambda>n. Gamma (Re z) * (real n + a) powr - Re z)\n\ngoal (1 subgoal):\n 1. summable\n     (\\<lambda>x.\n         LINT xa|lebesgue.\n            cmod\n             (indicat_real {0<..} xa *\\<^sub>R\n              (complex_of_real xa powr (z - 1) /\n               complex_of_real (exp ((real x + a) * xa)))))", "have \"?this \\<longleftrightarrow> summable (\\<lambda>n. ?INT' (\\<lambda>s. norm (of_real s powr (z - 1) / \n                                       of_real (exp ((n+a) * s)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. Gamma (Re z) * (real n + a) powr - Re z) =\n    summable\n     (\\<lambda>x.\n         \\<integral>s\\<in>{0<..}.\n                    cmod\n                     (complex_of_real s powr (z - 1) /\n                      complex_of_real (exp ((real x + a) * s)))\n         \\<partial>lebesgue)", "proof (intro summable_cong always_eventually allI, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       Gamma (Re z) * (real x + a) powr - Re z =\n       \\<integral>s\\<in>{0<..}.\n                  cmod\n                   (complex_of_real s powr (z - 1) /\n                    complex_of_real (exp ((real x + a) * s)))\n       \\<partial>lebesgue", "case (1 n)"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>x.\n       Gamma (Re z) * (real x + a) powr - Re z =\n       \\<integral>s\\<in>{0<..}.\n                  cmod\n                   (complex_of_real s powr (z - 1) /\n                    complex_of_real (exp ((real x + a) * s)))\n       \\<partial>lebesgue", "have \"Gamma (Re z) * (real n + a) powr -Re z = Gamma (Re z) / (real n + a) powr Re z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gamma (Re z) * (real n + a) powr - Re z =\n    Gamma (Re z) / (real n + a) powr Re z", "by (subst powr_minus) (simp_all add: field_simps)"], ["proof (state)\nthis:\n  Gamma (Re z) * (real n + a) powr - Re z =\n  Gamma (Re z) / (real n + a) powr Re z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       Gamma (Re z) * (real x + a) powr - Re z =\n       \\<integral>s\\<in>{0<..}.\n                  cmod\n                   (complex_of_real s powr (z - 1) /\n                    complex_of_real (exp ((real x + a) * s)))\n       \\<partial>lebesgue", "also"], ["proof (state)\nthis:\n  Gamma (Re z) * (real n + a) powr - Re z =\n  Gamma (Re z) / (real n + a) powr Re z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       Gamma (Re z) * (real x + a) powr - Re z =\n       \\<integral>s\\<in>{0<..}.\n                  cmod\n                   (complex_of_real s powr (z - 1) /\n                    complex_of_real (exp ((real x + a) * s)))\n       \\<partial>lebesgue", "from assms"], ["proof (chain)\npicking this:\n  1 < Re z\n  0 < a", "have \"\\<dots> = (\\<integral>x\\<in>{0<..}. (x powr (Re z-1) / exp ((n+a) * x)) \\<partial>lebesgue)\""], ["proof (prove)\nusing this:\n  1 < Re z\n  0 < a\n\ngoal (1 subgoal):\n 1. Gamma (Re z) / (real n + a) powr Re z =\n    \\<integral>x\\<in>{0<..}. (x powr (Re z - 1) / exp ((real n + a) * x))\n    \\<partial>lebesgue", "by (subst Gamma_hurwitz_zeta_aux_integral_real) simp_all"], ["proof (state)\nthis:\n  Gamma (Re z) / (real n + a) powr Re z =\n  \\<integral>x\\<in>{0<..}. (x powr (Re z - 1) / exp ((real n + a) * x))\n  \\<partial>lebesgue\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       Gamma (Re z) * (real x + a) powr - Re z =\n       \\<integral>s\\<in>{0<..}.\n                  cmod\n                   (complex_of_real s powr (z - 1) /\n                    complex_of_real (exp ((real x + a) * s)))\n       \\<partial>lebesgue", "also"], ["proof (state)\nthis:\n  Gamma (Re z) / (real n + a) powr Re z =\n  \\<integral>x\\<in>{0<..}. (x powr (Re z - 1) / exp ((real n + a) * x))\n  \\<partial>lebesgue\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       Gamma (Re z) * (real x + a) powr - Re z =\n       \\<integral>s\\<in>{0<..}.\n                  cmod\n                   (complex_of_real s powr (z - 1) /\n                    complex_of_real (exp ((real x + a) * s)))\n       \\<partial>lebesgue", "have \"\\<dots> = (\\<integral>xa\\<in>{0<..}. norm (of_real xa powr (z-1) / of_real (exp ((n+a) * xa)))\n                         \\<partial>lebesgue)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>x\\<in>{0<..}. (x powr (Re z - 1) / exp ((real n + a) * x))\n    \\<partial>lebesgue =\n    \\<integral>xa\\<in>{0<..}.\n               cmod\n                (complex_of_real xa powr (z - 1) /\n                 complex_of_real (exp ((real n + a) * xa)))\n    \\<partial>lebesgue", "unfolding set_lebesgue_integral_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. LINT x|lebesgue.\n       indicat_real {0<..} x *\\<^sub>R\n       (x powr (Re z - 1) / exp ((real n + a) * x)) =\n    LINT x|lebesgue.\n       indicat_real {0<..} x *\\<^sub>R\n       cmod\n        (complex_of_real x powr (z - 1) /\n         complex_of_real (exp ((real n + a) * x)))", "by (intro Bochner_Integration.integral_cong refl)\n          (auto simp: indicator_def norm_divide norm_powr_real_powr)"], ["proof (state)\nthis:\n  \\<integral>x\\<in>{0<..}. (x powr (Re z - 1) / exp ((real n + a) * x))\n  \\<partial>lebesgue =\n  \\<integral>xa\\<in>{0<..}.\n             cmod\n              (complex_of_real xa powr (z - 1) /\n               complex_of_real (exp ((real n + a) * xa)))\n  \\<partial>lebesgue\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       Gamma (Re z) * (real x + a) powr - Re z =\n       \\<integral>s\\<in>{0<..}.\n                  cmod\n                   (complex_of_real s powr (z - 1) /\n                    complex_of_real (exp ((real x + a) * s)))\n       \\<partial>lebesgue", "finally"], ["proof (chain)\npicking this:\n  Gamma (Re z) * (real n + a) powr - Re z =\n  \\<integral>xa\\<in>{0<..}.\n             cmod\n              (complex_of_real xa powr (z - 1) /\n               complex_of_real (exp ((real n + a) * xa)))\n  \\<partial>lebesgue", "show ?case"], ["proof (prove)\nusing this:\n  Gamma (Re z) * (real n + a) powr - Re z =\n  \\<integral>xa\\<in>{0<..}.\n             cmod\n              (complex_of_real xa powr (z - 1) /\n               complex_of_real (exp ((real n + a) * xa)))\n  \\<partial>lebesgue\n\ngoal (1 subgoal):\n 1. Gamma (Re z) * (real n + a) powr - Re z =\n    \\<integral>s\\<in>{0<..}.\n               cmod\n                (complex_of_real s powr (z - 1) /\n                 complex_of_real (exp ((real n + a) * s)))\n    \\<partial>lebesgue", "."], ["proof (state)\nthis:\n  Gamma (Re z) * (real n + a) powr - Re z =\n  \\<integral>s\\<in>{0<..}.\n             cmod\n              (complex_of_real s powr (z - 1) /\n               complex_of_real (exp ((real n + a) * s)))\n  \\<partial>lebesgue\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  summable (\\<lambda>n. Gamma (Re z) * (real n + a) powr - Re z) =\n  summable\n   (\\<lambda>x.\n       \\<integral>s\\<in>{0<..}.\n                  cmod\n                   (complex_of_real s powr (z - 1) /\n                    complex_of_real (exp ((real x + a) * s)))\n       \\<partial>lebesgue)\n\ngoal (1 subgoal):\n 1. summable\n     (\\<lambda>x.\n         LINT xa|lebesgue.\n            cmod\n             (indicat_real {0<..} xa *\\<^sub>R\n              (complex_of_real xa powr (z - 1) /\n               complex_of_real (exp ((real x + a) * xa)))))", "finally"], ["proof (chain)\npicking this:\n  summable\n   (\\<lambda>x.\n       \\<integral>s\\<in>{0<..}.\n                  cmod\n                   (complex_of_real s powr (z - 1) /\n                    complex_of_real (exp ((real x + a) * s)))\n       \\<partial>lebesgue)", "show ?thesis"], ["proof (prove)\nusing this:\n  summable\n   (\\<lambda>x.\n       \\<integral>s\\<in>{0<..}.\n                  cmod\n                   (complex_of_real s powr (z - 1) /\n                    complex_of_real (exp ((real x + a) * s)))\n       \\<partial>lebesgue)\n\ngoal (1 subgoal):\n 1. summable\n     (\\<lambda>x.\n         LINT xa|lebesgue.\n            cmod\n             (indicat_real {0<..} xa *\\<^sub>R\n              (complex_of_real xa powr (z - 1) /\n               complex_of_real (exp ((real x + a) * xa)))))", "by (simp add: set_lebesgue_integral_def)"], ["proof (state)\nthis:\n  summable\n   (\\<lambda>x.\n       LINT xa|lebesgue.\n          cmod\n           (indicat_real {0<..} xa *\\<^sub>R\n            (complex_of_real xa powr (z - 1) /\n             complex_of_real (exp ((real x + a) * xa)))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  summable\n   (\\<lambda>x.\n       LINT xa|lebesgue.\n          cmod\n           (indicat_real {0<..} xa *\\<^sub>R\n            (complex_of_real xa powr (z - 1) /\n             complex_of_real (exp ((real x + a) * xa)))))\n\ngoal (2 subgoals):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))\n 2. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) *\n         complex_of_real (exp (- a * x) / (1 - exp (- x))))", "have sum_eq: \"(\\<Sum>n. indicator {0<..} s *\\<^sub>R (of_real s powr (z - 1) / of_real (exp ((n+a) * s)))) = \n                   indicator {0<..} s *\\<^sub>R (of_real s powr (z - 1) * \n                     of_real (exp (-a * s) / (1 - exp (-s))))\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))", "proof (cases \"s > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))\n 2. \\<not> 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))", "case True"], ["proof (state)\nthis:\n  0 < s\n\ngoal (2 subgoals):\n 1. 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))\n 2. \\<not> 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))", "hence \"(\\<Sum>n. indicator {0..} s *\\<^sub>R (of_real s powr (z - 1) / of_real (exp ((n+a) * s)))) =\n             (\\<Sum>n. of_real s powr (z - 1) * of_real (exp (-a * s)) * of_real (exp (-s)) ^ n)\""], ["proof (prove)\nusing this:\n  0 < s\n\ngoal (1 subgoal):\n 1. (\\<Sum>x.\n        indicat_real {0..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    (\\<Sum>n.\n        complex_of_real s powr (z - 1) * complex_of_real (exp (- a * s)) *\n        complex_of_real (exp (- s)) ^ n)", "by (intro suminf_cong) \n         (auto simp: exp_add exp_minus exp_of_nat_mult [symmetric] field_simps of_real_exp)"], ["proof (state)\nthis:\n  (\\<Sum>x.\n      indicat_real {0..} s *\\<^sub>R\n      (complex_of_real s powr (z - 1) /\n       complex_of_real (exp ((real x + a) * s)))) =\n  (\\<Sum>n.\n      complex_of_real s powr (z - 1) * complex_of_real (exp (- a * s)) *\n      complex_of_real (exp (- s)) ^ n)\n\ngoal (2 subgoals):\n 1. 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))\n 2. \\<not> 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))", "also"], ["proof (state)\nthis:\n  (\\<Sum>x.\n      indicat_real {0..} s *\\<^sub>R\n      (complex_of_real s powr (z - 1) /\n       complex_of_real (exp ((real x + a) * s)))) =\n  (\\<Sum>n.\n      complex_of_real s powr (z - 1) * complex_of_real (exp (- a * s)) *\n      complex_of_real (exp (- s)) ^ n)\n\ngoal (2 subgoals):\n 1. 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))\n 2. \\<not> 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))", "have \"(\\<Sum>n. of_real s powr (z - 1) * of_real (exp (-a * s)) * of_real (exp (-s)) ^ n) =\n                 of_real s powr (z - 1) * of_real (exp (-a * s)) * (\\<Sum>n. of_real (exp (-s)) ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n.\n        complex_of_real s powr (z - 1) * complex_of_real (exp (- a * s)) *\n        complex_of_real (exp (- s)) ^ n) =\n    complex_of_real s powr (z - 1) * complex_of_real (exp (- a * s)) *\n    (\\<Sum>n. complex_of_real (exp (- s)) ^ n)", "using True"], ["proof (prove)\nusing this:\n  0 < s\n\ngoal (1 subgoal):\n 1. (\\<Sum>n.\n        complex_of_real s powr (z - 1) * complex_of_real (exp (- a * s)) *\n        complex_of_real (exp (- s)) ^ n) =\n    complex_of_real s powr (z - 1) * complex_of_real (exp (- a * s)) *\n    (\\<Sum>n. complex_of_real (exp (- s)) ^ n)", "by (intro suminf_mult summable_geometric) simp_all"], ["proof (state)\nthis:\n  (\\<Sum>n.\n      complex_of_real s powr (z - 1) * complex_of_real (exp (- a * s)) *\n      complex_of_real (exp (- s)) ^ n) =\n  complex_of_real s powr (z - 1) * complex_of_real (exp (- a * s)) *\n  (\\<Sum>n. complex_of_real (exp (- s)) ^ n)\n\ngoal (2 subgoals):\n 1. 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))\n 2. \\<not> 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))", "also"], ["proof (state)\nthis:\n  (\\<Sum>n.\n      complex_of_real s powr (z - 1) * complex_of_real (exp (- a * s)) *\n      complex_of_real (exp (- s)) ^ n) =\n  complex_of_real s powr (z - 1) * complex_of_real (exp (- a * s)) *\n  (\\<Sum>n. complex_of_real (exp (- s)) ^ n)\n\ngoal (2 subgoals):\n 1. 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))\n 2. \\<not> 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))", "have \"(\\<Sum>n. complex_of_real (exp (-s)) ^ n) = 1 / (1 - of_real (exp (-s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. complex_of_real (exp (- s)) ^ n) =\n    1 / (1 - complex_of_real (exp (- s)))", "using True"], ["proof (prove)\nusing this:\n  0 < s\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. complex_of_real (exp (- s)) ^ n) =\n    1 / (1 - complex_of_real (exp (- s)))", "by (intro suminf_geometric) auto"], ["proof (state)\nthis:\n  (\\<Sum>n. complex_of_real (exp (- s)) ^ n) =\n  1 / (1 - complex_of_real (exp (- s)))\n\ngoal (2 subgoals):\n 1. 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))\n 2. \\<not> 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))", "also"], ["proof (state)\nthis:\n  (\\<Sum>n. complex_of_real (exp (- s)) ^ n) =\n  1 / (1 - complex_of_real (exp (- s)))\n\ngoal (2 subgoals):\n 1. 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))\n 2. \\<not> 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))", "have \"of_real s powr (z - 1) * of_real (exp (-a * s)) * \\<dots> = \n                 of_real s powr (z - 1) * of_real (exp (-a * s) / (1 - exp (-s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real s powr (z - 1) * complex_of_real (exp (- a * s)) *\n    (1 / (1 - complex_of_real (exp (- s)))) =\n    complex_of_real s powr (z - 1) *\n    complex_of_real (exp (- a * s) / (1 - exp (- s)))", "using \\<open>a > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. complex_of_real s powr (z - 1) * complex_of_real (exp (- a * s)) *\n    (1 / (1 - complex_of_real (exp (- s)))) =\n    complex_of_real s powr (z - 1) *\n    complex_of_real (exp (- a * s) / (1 - exp (- s)))", "by (auto simp add: divide_simps exp_minus)"], ["proof (state)\nthis:\n  complex_of_real s powr (z - 1) * complex_of_real (exp (- a * s)) *\n  (1 / (1 - complex_of_real (exp (- s)))) =\n  complex_of_real s powr (z - 1) *\n  complex_of_real (exp (- a * s) / (1 - exp (- s)))\n\ngoal (2 subgoals):\n 1. 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))\n 2. \\<not> 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>x.\n      indicat_real {0..} s *\\<^sub>R\n      (complex_of_real s powr (z - 1) /\n       complex_of_real (exp ((real x + a) * s)))) =\n  complex_of_real s powr (z - 1) *\n  complex_of_real (exp (- a * s) / (1 - exp (- s)))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>x.\n      indicat_real {0..} s *\\<^sub>R\n      (complex_of_real s powr (z - 1) /\n       complex_of_real (exp ((real x + a) * s)))) =\n  complex_of_real s powr (z - 1) *\n  complex_of_real (exp (- a * s) / (1 - exp (- s)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))", "using True"], ["proof (prove)\nusing this:\n  (\\<Sum>x.\n      indicat_real {0..} s *\\<^sub>R\n      (complex_of_real s powr (z - 1) /\n       complex_of_real (exp ((real x + a) * s)))) =\n  complex_of_real s powr (z - 1) *\n  complex_of_real (exp (- a * s) / (1 - exp (- s)))\n  0 < s\n\ngoal (1 subgoal):\n 1. (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>x.\n      indicat_real {0<..} s *\\<^sub>R\n      (complex_of_real s powr (z - 1) /\n       complex_of_real (exp ((real x + a) * s)))) =\n  indicat_real {0<..} s *\\<^sub>R\n  (complex_of_real s powr (z - 1) *\n   complex_of_real (exp (- a * s) / (1 - exp (- s))))\n\ngoal (1 subgoal):\n 1. \\<not> 0 < s \\<Longrightarrow>\n    (\\<Sum>x.\n        indicat_real {0<..} s *\\<^sub>R\n        (complex_of_real s powr (z - 1) /\n         complex_of_real (exp ((real x + a) * s)))) =\n    indicat_real {0<..} s *\\<^sub>R\n    (complex_of_real s powr (z - 1) *\n     complex_of_real (exp (- a * s) / (1 - exp (- s))))", "qed simp_all"], ["proof (state)\nthis:\n  (\\<Sum>x.\n      indicat_real {0<..} ?s *\\<^sub>R\n      (complex_of_real ?s powr (z - 1) /\n       complex_of_real (exp ((real x + a) * ?s)))) =\n  indicat_real {0<..} ?s *\\<^sub>R\n  (complex_of_real ?s powr (z - 1) *\n   complex_of_real (exp (- a * ?s) / (1 - exp (- ?s))))\n\ngoal (2 subgoals):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))\n 2. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) *\n         complex_of_real (exp (- a * x) / (1 - exp (- x))))", "show \"set_integrable lebesgue {0<..} \n          (\\<lambda>x. of_real x powr (z - 1) * of_real (exp (-a*x) / (1 - exp (-x))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) *\n         complex_of_real (exp (- a * x) / (1 - exp (- x))))", "using 1"], ["proof (prove)\nusing this:\n  complex_set_integrable lebesgue {0<..}\n   (\\<lambda>x.\n       complex_of_real x powr (z - 1) /\n       complex_of_real (exp ((real ?n + a) * x)))\n\ngoal (1 subgoal):\n 1. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) *\n         complex_of_real (exp (- a * x) / (1 - exp (- x))))", "unfolding sum_eq [symmetric] set_integrable_def"], ["proof (prove)\nusing this:\n  complex_integrable lebesgue\n   (\\<lambda>x.\n       indicat_real {0<..} x *\\<^sub>R\n       (complex_of_real x powr (z - 1) /\n        complex_of_real (exp ((real ?n + a) * x))))\n\ngoal (1 subgoal):\n 1. complex_integrable lebesgue\n     (\\<lambda>x.\n         \\<Sum>xa.\n            indicat_real {0<..} x *\\<^sub>R\n            (complex_of_real x powr (z - 1) /\n             complex_of_real (exp ((real xa + a) * x))))", "by (intro integrable_suminf[OF _ AE_I2] 2 3)"], ["proof (state)\nthis:\n  complex_set_integrable lebesgue {0<..}\n   (\\<lambda>x.\n       complex_of_real x powr (z - 1) *\n       complex_of_real (exp (- a * x) / (1 - exp (- x))))\n\ngoal (1 subgoal):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))", "have \"(\\<lambda>n. ?INT (\\<lambda>s. s powr (z - 1) / exp ((n+a) * s))) sums lebesgue_integral lebesgue\n            (\\<lambda>s. \\<Sum>n. indicator {0<..} s *\\<^sub>R (s powr (z - 1) / exp ((n+a) * s)))\" (is \"?A sums ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                                 complex_of_real\n                                  (exp ((real n + a) * s))) sums\n    (CLINT s|lebesgue. (\\<Sum>n.\n                           indicat_real {0<..} s *\\<^sub>R\n                           (complex_of_real s powr (z - 1) /\n                            complex_of_real (exp ((real n + a) * s)))))", "using 1"], ["proof (prove)\nusing this:\n  complex_set_integrable lebesgue {0<..}\n   (\\<lambda>x.\n       complex_of_real x powr (z - 1) /\n       complex_of_real (exp ((real ?n + a) * x)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                                 complex_of_real\n                                  (exp ((real n + a) * s))) sums\n    (CLINT s|lebesgue. (\\<Sum>n.\n                           indicat_real {0<..} s *\\<^sub>R\n                           (complex_of_real s powr (z - 1) /\n                            complex_of_real (exp ((real n + a) * s)))))", "unfolding set_lebesgue_integral_def set_integrable_def"], ["proof (prove)\nusing this:\n  complex_integrable lebesgue\n   (\\<lambda>x.\n       indicat_real {0<..} x *\\<^sub>R\n       (complex_of_real x powr (z - 1) /\n        complex_of_real (exp ((real ?n + a) * x))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        CLINT x|lebesgue. indicat_real {0<..} x *\\<^sub>R\n                          (complex_of_real x powr (z - 1) /\n                           complex_of_real (exp ((real n + a) * x)))) sums\n    (CLINT s|lebesgue. (\\<Sum>n.\n                           indicat_real {0<..} s *\\<^sub>R\n                           (complex_of_real s powr (z - 1) /\n                            complex_of_real (exp ((real n + a) * s)))))", "by (rule sums_integral[OF _ AE_I2[OF 2] 3])"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                               complex_of_real\n                                (exp ((real n + a) * s))) sums\n  (CLINT s|lebesgue. (\\<Sum>n.\n                         indicat_real {0<..} s *\\<^sub>R\n                         (complex_of_real s powr (z - 1) /\n                          complex_of_real (exp ((real n + a) * s)))))\n\ngoal (1 subgoal):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                               complex_of_real\n                                (exp ((real n + a) * s))) sums\n  (CLINT s|lebesgue. (\\<Sum>n.\n                         indicat_real {0<..} s *\\<^sub>R\n                         (complex_of_real s powr (z - 1) /\n                          complex_of_real (exp ((real n + a) * s)))))\n\ngoal (1 subgoal):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))", "have \"?A = (\\<lambda>n. Gamma z * (n + a) powr -z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                                 complex_of_real (exp ((real n + a) * s))) =\n    (\\<lambda>x. Gamma z * complex_of_real (real x + a) powr - z)", "using assms"], ["proof (prove)\nusing this:\n  1 < Re z\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                                 complex_of_real (exp ((real n + a) * s))) =\n    (\\<lambda>x. Gamma z * complex_of_real (real x + a) powr - z)", "by (subst Gamma_hurwitz_zeta_aux_integral [symmetric]) \n                   (simp_all add: powr_minus divide_simps)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                               complex_of_real (exp ((real n + a) * s))) =\n  (\\<lambda>x. Gamma z * complex_of_real (real x + a) powr - z)\n\ngoal (1 subgoal):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) /\n                               complex_of_real (exp ((real n + a) * s))) =\n  (\\<lambda>x. Gamma z * complex_of_real (real x + a) powr - z)\n\ngoal (1 subgoal):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))", "have \"?B = ?INT (\\<lambda>s. of_real s powr (z - 1) * of_real (exp (-a * s) / (1 - exp (-s))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CLINT s|lebesgue. (\\<Sum>n.\n                          indicat_real {0<..} s *\\<^sub>R\n                          (complex_of_real s powr (z - 1) /\n                           complex_of_real (exp ((real n + a) * s)))) =\n    CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * s) / (1 - exp (- s)))", "unfolding sum_eq set_lebesgue_integral_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. CLINT s|lebesgue. indicat_real {0<..} s *\\<^sub>R\n                      (complex_of_real s powr (z - 1) *\n                       complex_of_real (exp (- a * s) / (1 - exp (- s)))) =\n    CLINT x|lebesgue. indicat_real {0<..} x *\\<^sub>R\n                      (complex_of_real x powr (z - 1) *\n                       complex_of_real (exp (- a * x) / (1 - exp (- x))))", ".."], ["proof (state)\nthis:\n  CLINT s|lebesgue. (\\<Sum>n.\n                        indicat_real {0<..} s *\\<^sub>R\n                        (complex_of_real s powr (z - 1) /\n                         complex_of_real (exp ((real n + a) * s)))) =\n  CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) *\n                           complex_of_real (exp (- a * s) / (1 - exp (- s)))\n\ngoal (1 subgoal):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n. Gamma z * complex_of_real (real n + a) powr - z) sums\n  (CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) *\n                            complex_of_real\n                             (exp (- a * s) / (1 - exp (- s))))", "have \"(\\<lambda>n. Gamma z * (of_nat n + of_real a) powr -z) sums\n                  ?INT (\\<lambda>x. of_real x powr (z - 1) * of_real (exp (-a * x) / (1 - exp (-x))))\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. Gamma z * complex_of_real (real n + a) powr - z) sums\n  (CLINT s:{0<..}|lebesgue. complex_of_real s powr (z - 1) *\n                            complex_of_real\n                             (exp (- a * s) / (1 - exp (- s))))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Gamma z * (of_nat n + complex_of_real a) powr - z) sums\n    (CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                              complex_of_real\n                               (exp (- a * x) / (1 - exp (- x))))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n. Gamma z * (of_nat n + complex_of_real a) powr - z) sums\n  (CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                            complex_of_real\n                             (exp (- a * x) / (1 - exp (- x))))\n\ngoal (1 subgoal):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>n. Gamma z * (of_nat n + complex_of_real a) powr - z) sums\n  (CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                            complex_of_real\n                             (exp (- a * x) / (1 - exp (- x))))\n\ngoal (1 subgoal):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))", "have \"(\\<lambda>n. Gamma z * (of_nat n + of_real a) powr -z) sums (Gamma z * hurwitz_zeta a z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. Gamma z * (of_nat n + complex_of_real a) powr - z) sums\n    (Gamma z * hurwitz_zeta a z)", "using assms"], ["proof (prove)\nusing this:\n  1 < Re z\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Gamma z * (of_nat n + complex_of_real a) powr - z) sums\n    (Gamma z * hurwitz_zeta a z)", "by (intro sums_mult sums_hurwitz_zeta) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>n. Gamma z * (of_nat n + complex_of_real a) powr - z) sums\n  (Gamma z * hurwitz_zeta a z)\n\ngoal (1 subgoal):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>n. Gamma z * (of_nat n + complex_of_real a) powr - z) sums\n  (CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                            complex_of_real\n                             (exp (- a * x) / (1 - exp (- x))))\n  (\\<lambda>n. Gamma z * (of_nat n + complex_of_real a) powr - z) sums\n  (Gamma z * hurwitz_zeta a z)", "show \"Gamma z * hurwitz_zeta a z = \n                     (\\<integral>x\\<in>{0<..}. (of_real x powr (z - 1) * \n                        of_real (exp (-a * x) / (1 - exp (-x)))) \\<partial>lebesgue)\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. Gamma z * (of_nat n + complex_of_real a) powr - z) sums\n  (CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                            complex_of_real\n                             (exp (- a * x) / (1 - exp (- x))))\n  (\\<lambda>n. Gamma z * (of_nat n + complex_of_real a) powr - z) sums\n  (Gamma z * hurwitz_zeta a z)\n\ngoal (1 subgoal):\n 1. Gamma z * hurwitz_zeta a z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                             complex_of_real\n                              (exp (- a * x) / (1 - exp (- x)))", "by (rule sums_unique2 [symmetric])"], ["proof (state)\nthis:\n  Gamma z * hurwitz_zeta a z =\n  CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                           complex_of_real (exp (- a * x) / (1 - exp (- x)))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary\n  assumes \"Re z > 1\"\n  shows   Gamma_times_zeta_integral: \"Gamma z * zeta z =\n            (\\<integral>x\\<in>{0<..}. (of_real x powr (z - 1) / of_real (exp x - 1)) \\<partial>lebesgue)\" (is ?th1)\n    and   Gamma_times_zeta_integrable:\n            \"set_integrable lebesgue {0<..} \n               (\\<lambda>x. of_real x powr (z - 1) / of_real (exp x - 1))\" (is ?th2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Gamma z * zeta z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                             complex_of_real (exp x - 1) &&&\n    complex_set_integrable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) / complex_of_real (exp x - 1))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. Gamma z * zeta z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                             complex_of_real (exp x - 1)\n 2. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) / complex_of_real (exp x - 1))", "have *: \"(\\<lambda>x. indicator {0<..} x *\\<^sub>R (of_real x powr (z - 1) * \n                of_real (exp (-x) / (1 - exp (-x))))) =\n             (\\<lambda>x. indicator {0<..} x *\\<^sub>R (of_real x powr (z - 1) / of_real (exp x - 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        indicat_real {0<..} x *\\<^sub>R\n        (complex_of_real x powr (z - 1) *\n         complex_of_real (exp (- x) / (1 - exp (- x))))) =\n    (\\<lambda>x.\n        indicat_real {0<..} x *\\<^sub>R\n        (complex_of_real x powr (z - 1) / complex_of_real (exp x - 1)))", "by (intro ext) (simp add: field_simps exp_minus indicator_def)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      indicat_real {0<..} x *\\<^sub>R\n      (complex_of_real x powr (z - 1) *\n       complex_of_real (exp (- x) / (1 - exp (- x))))) =\n  (\\<lambda>x.\n      indicat_real {0<..} x *\\<^sub>R\n      (complex_of_real x powr (z - 1) / complex_of_real (exp x - 1)))\n\ngoal (2 subgoals):\n 1. Gamma z * zeta z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                             complex_of_real (exp x - 1)\n 2. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) / complex_of_real (exp x - 1))", "from Gamma_times_hurwitz_zeta_integral [OF assms zero_less_one] and *"], ["proof (chain)\npicking this:\n  Gamma z * hurwitz_zeta 1 z =\n  CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                           complex_of_real (exp (- 1 * x) / (1 - exp (- x)))\n  (\\<lambda>x.\n      indicat_real {0<..} x *\\<^sub>R\n      (complex_of_real x powr (z - 1) *\n       complex_of_real (exp (- x) / (1 - exp (- x))))) =\n  (\\<lambda>x.\n      indicat_real {0<..} x *\\<^sub>R\n      (complex_of_real x powr (z - 1) / complex_of_real (exp x - 1)))", "show ?th1"], ["proof (prove)\nusing this:\n  Gamma z * hurwitz_zeta 1 z =\n  CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                           complex_of_real (exp (- 1 * x) / (1 - exp (- x)))\n  (\\<lambda>x.\n      indicat_real {0<..} x *\\<^sub>R\n      (complex_of_real x powr (z - 1) *\n       complex_of_real (exp (- x) / (1 - exp (- x))))) =\n  (\\<lambda>x.\n      indicat_real {0<..} x *\\<^sub>R\n      (complex_of_real x powr (z - 1) / complex_of_real (exp x - 1)))\n\ngoal (1 subgoal):\n 1. Gamma z * zeta z =\n    CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                             complex_of_real (exp x - 1)", "by (simp add: zeta_def set_lebesgue_integral_def)"], ["proof (state)\nthis:\n  Gamma z * zeta z =\n  CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                           complex_of_real (exp x - 1)\n\ngoal (1 subgoal):\n 1. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) / complex_of_real (exp x - 1))", "from Gamma_times_hurwitz_zeta_integrable [OF assms zero_less_one] and *"], ["proof (chain)\npicking this:\n  complex_set_integrable lebesgue {0<..}\n   (\\<lambda>x.\n       complex_of_real x powr (z - 1) *\n       complex_of_real (exp (- 1 * x) / (1 - exp (- x))))\n  (\\<lambda>x.\n      indicat_real {0<..} x *\\<^sub>R\n      (complex_of_real x powr (z - 1) *\n       complex_of_real (exp (- x) / (1 - exp (- x))))) =\n  (\\<lambda>x.\n      indicat_real {0<..} x *\\<^sub>R\n      (complex_of_real x powr (z - 1) / complex_of_real (exp x - 1)))", "show ?th2"], ["proof (prove)\nusing this:\n  complex_set_integrable lebesgue {0<..}\n   (\\<lambda>x.\n       complex_of_real x powr (z - 1) *\n       complex_of_real (exp (- 1 * x) / (1 - exp (- x))))\n  (\\<lambda>x.\n      indicat_real {0<..} x *\\<^sub>R\n      (complex_of_real x powr (z - 1) *\n       complex_of_real (exp (- x) / (1 - exp (- x))))) =\n  (\\<lambda>x.\n      indicat_real {0<..} x *\\<^sub>R\n      (complex_of_real x powr (z - 1) / complex_of_real (exp x - 1)))\n\ngoal (1 subgoal):\n 1. complex_set_integrable lebesgue {0<..}\n     (\\<lambda>x.\n         complex_of_real x powr (z - 1) / complex_of_real (exp x - 1))", "by (simp add: zeta_def set_integrable_def)"], ["proof (state)\nthis:\n  complex_set_integrable lebesgue {0<..}\n   (\\<lambda>x.\n       complex_of_real x powr (z - 1) / complex_of_real (exp x - 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary hurwitz_zeta_integral_Gamma_def:\n  assumes \"Re z > 1\" \"a > 0\"\n  shows   \"hurwitz_zeta a z = \n             rGamma z * (\\<integral>x\\<in>{0<..}. (of_real x powr (z - 1) * \n               of_real (exp (-a * x) / (1 - exp (-x)))) \\<partial>lebesgue)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hurwitz_zeta a z =\n    rGamma z *\n    (CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                              complex_of_real\n                               (exp (- a * x) / (1 - exp (- x))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hurwitz_zeta a z =\n    rGamma z *\n    (CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                              complex_of_real\n                               (exp (- a * x) / (1 - exp (- x))))", "from assms"], ["proof (chain)\npicking this:\n  1 < Re z\n  0 < a", "have \"Gamma z \\<noteq> 0\""], ["proof (prove)\nusing this:\n  1 < Re z\n  0 < a\n\ngoal (1 subgoal):\n 1. Gamma z \\<noteq> 0", "by (subst Gamma_eq_zero_iff) (auto elim!: nonpos_Ints_cases)"], ["proof (state)\nthis:\n  Gamma z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a z =\n    rGamma z *\n    (CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                              complex_of_real\n                               (exp (- a * x) / (1 - exp (- x))))", "with Gamma_times_hurwitz_zeta_integral [OF assms]"], ["proof (chain)\npicking this:\n  Gamma z * hurwitz_zeta a z =\n  CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                           complex_of_real (exp (- a * x) / (1 - exp (- x)))\n  Gamma z \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  Gamma z * hurwitz_zeta a z =\n  CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                           complex_of_real (exp (- a * x) / (1 - exp (- x)))\n  Gamma z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. hurwitz_zeta a z =\n    rGamma z *\n    (CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                              complex_of_real\n                               (exp (- a * x) / (1 - exp (- x))))", "by (simp add: rGamma_inverse_Gamma field_simps)"], ["proof (state)\nthis:\n  hurwitz_zeta a z =\n  rGamma z *\n  (CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) *\n                            complex_of_real\n                             (exp (- a * x) / (1 - exp (- x))))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary zeta_integral_Gamma_def:\n  assumes \"Re z > 1\"\n  shows   \"zeta z =\n             rGamma z * (\\<integral>x\\<in>{0<..}. (of_real x powr (z - 1) / of_real (exp x - 1)) \\<partial>lebesgue)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta z =\n    rGamma z *\n    (CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                              complex_of_real (exp x - 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. zeta z =\n    rGamma z *\n    (CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                              complex_of_real (exp x - 1))", "from assms"], ["proof (chain)\npicking this:\n  1 < Re z", "have \"Gamma z \\<noteq> 0\""], ["proof (prove)\nusing this:\n  1 < Re z\n\ngoal (1 subgoal):\n 1. Gamma z \\<noteq> 0", "by (subst Gamma_eq_zero_iff) (auto elim!: nonpos_Ints_cases)"], ["proof (state)\nthis:\n  Gamma z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. zeta z =\n    rGamma z *\n    (CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                              complex_of_real (exp x - 1))", "with Gamma_times_zeta_integral [OF assms]"], ["proof (chain)\npicking this:\n  Gamma z * zeta z =\n  CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                           complex_of_real (exp x - 1)\n  Gamma z \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  Gamma z * zeta z =\n  CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                           complex_of_real (exp x - 1)\n  Gamma z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. zeta z =\n    rGamma z *\n    (CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                              complex_of_real (exp x - 1))", "by (simp add: rGamma_inverse_Gamma field_simps)"], ["proof (state)\nthis:\n  zeta z =\n  rGamma z *\n  (CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                            complex_of_real (exp x - 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Gamma_times_zeta_has_integral:\n  assumes \"Re z > 1\"\n  shows   \"((\\<lambda>x. x powr (z - 1) / (of_real (exp x) - 1)) has_integral (Gamma z * zeta z)) {0<..}\"\n    (is \"(?f has_integral _) _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real x powr (z - 1) /\n         (complex_of_real (exp x) - 1)) has_integral\n     Gamma z * zeta z)\n     {0<..}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real x powr (z - 1) /\n         (complex_of_real (exp x) - 1)) has_integral\n     Gamma z * zeta z)\n     {0<..}", "have \"(?f has_integral set_lebesgue_integral lebesgue {0<..} ?f) {0<..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real x powr (z - 1) /\n         (complex_of_real (exp x) - 1)) has_integral\n     CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                              (complex_of_real (exp x) - 1))\n     {0<..}", "using Gamma_times_zeta_integrable[OF assms]"], ["proof (prove)\nusing this:\n  complex_set_integrable lebesgue {0<..}\n   (\\<lambda>x.\n       complex_of_real x powr (z - 1) / complex_of_real (exp x - 1))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real x powr (z - 1) /\n         (complex_of_real (exp x) - 1)) has_integral\n     CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                              (complex_of_real (exp x) - 1))\n     {0<..}", "by (intro has_integral_set_lebesgue) auto"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       complex_of_real x powr (z - 1) /\n       (complex_of_real (exp x) - 1)) has_integral\n   CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                            (complex_of_real (exp x) - 1))\n   {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real x powr (z - 1) /\n         (complex_of_real (exp x) - 1)) has_integral\n     Gamma z * zeta z)\n     {0<..}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       complex_of_real x powr (z - 1) /\n       (complex_of_real (exp x) - 1)) has_integral\n   CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                            (complex_of_real (exp x) - 1))\n   {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real x powr (z - 1) /\n         (complex_of_real (exp x) - 1)) has_integral\n     Gamma z * zeta z)\n     {0<..}", "have \"set_lebesgue_integral lebesgue {0<..} ?f = Gamma z * zeta z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                             (complex_of_real (exp x) - 1) =\n    Gamma z * zeta z", "using Gamma_times_zeta_integral[OF assms]"], ["proof (prove)\nusing this:\n  Gamma z * zeta z =\n  CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                           complex_of_real (exp x - 1)\n\ngoal (1 subgoal):\n 1. CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                             (complex_of_real (exp x) - 1) =\n    Gamma z * zeta z", "by simp"], ["proof (state)\nthis:\n  CLINT x:{0<..}|lebesgue. complex_of_real x powr (z - 1) /\n                           (complex_of_real (exp x) - 1) =\n  Gamma z * zeta z\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real x powr (z - 1) /\n         (complex_of_real (exp x) - 1)) has_integral\n     Gamma z * zeta z)\n     {0<..}", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       complex_of_real x powr (z - 1) /\n       (complex_of_real (exp x) - 1)) has_integral\n   Gamma z * zeta z)\n   {0<..}", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       complex_of_real x powr (z - 1) /\n       (complex_of_real (exp x) - 1)) has_integral\n   Gamma z * zeta z)\n   {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real x powr (z - 1) /\n         (complex_of_real (exp x) - 1)) has_integral\n     Gamma z * zeta z)\n     {0<..}", "."], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       complex_of_real x powr (z - 1) /\n       (complex_of_real (exp x) - 1)) has_integral\n   Gamma z * zeta z)\n   {0<..}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Gamma_times_zeta_has_integral_real:\n  fixes z :: real\n  assumes \"z > 1\"\n  shows   \"((\\<lambda>x. x powr (z - 1) / (exp x - 1)) has_integral (Gamma z * Re (zeta z))) {0<..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. x powr (z - 1) / (exp x - 1)) has_integral\n     Gamma z * Re (zeta (complex_of_real z)))\n     {0<..}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. x powr (z - 1) / (exp x - 1)) has_integral\n     Gamma z * Re (zeta (complex_of_real z)))\n     {0<..}", "from assms"], ["proof (chain)\npicking this:\n  1 < z", "have *: \"Re (of_real z) > 1\""], ["proof (prove)\nusing this:\n  1 < z\n\ngoal (1 subgoal):\n 1. 1 < Re (complex_of_real z)", "by simp"], ["proof (state)\nthis:\n  1 < Re (complex_of_real z)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. x powr (z - 1) / (exp x - 1)) has_integral\n     Gamma z * Re (zeta (complex_of_real z)))\n     {0<..}", "have \"((\\<lambda>x. Re (complex_of_real x powr (complex_of_real z - 1)) / (exp x - 1)) has_integral\n           Gamma z * Re (zeta (complex_of_real z))) {0<..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         Re (complex_of_real x powr (complex_of_real z - 1)) /\n         (exp x - 1)) has_integral\n     Gamma z * Re (zeta (complex_of_real z)))\n     {0<..}", "using has_integral_linear[OF Gamma_times_zeta_has_integral[OF *] bounded_linear_Re]"], ["proof (prove)\nusing this:\n  (Re \\<circ>\n   (\\<lambda>x.\n       complex_of_real x powr (complex_of_real z - 1) /\n       (complex_of_real (exp x) - 1)) has_integral\n   Re (Gamma (complex_of_real z) * zeta (complex_of_real z)))\n   {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         Re (complex_of_real x powr (complex_of_real z - 1)) /\n         (exp x - 1)) has_integral\n     Gamma z * Re (zeta (complex_of_real z)))\n     {0<..}", "by (simp add: o_def Gamma_complex_of_real)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       Re (complex_of_real x powr (complex_of_real z - 1)) /\n       (exp x - 1)) has_integral\n   Gamma z * Re (zeta (complex_of_real z)))\n   {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. x powr (z - 1) / (exp x - 1)) has_integral\n     Gamma z * Re (zeta (complex_of_real z)))\n     {0<..}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       Re (complex_of_real x powr (complex_of_real z - 1)) /\n       (exp x - 1)) has_integral\n   Gamma z * Re (zeta (complex_of_real z)))\n   {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. x powr (z - 1) / (exp x - 1)) has_integral\n     Gamma z * Re (zeta (complex_of_real z)))\n     {0<..}", "have \"?this \\<longleftrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         Re (complex_of_real x powr (complex_of_real z - 1)) /\n         (exp x - 1)) has_integral\n     Gamma z * Re (zeta (complex_of_real z)))\n     {0<..} =\n    ((\\<lambda>x. x powr (z - 1) / (exp x - 1)) has_integral\n     Gamma z * Re (zeta (complex_of_real z)))\n     {0<..}", "using assms"], ["proof (prove)\nusing this:\n  1 < z\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         Re (complex_of_real x powr (complex_of_real z - 1)) /\n         (exp x - 1)) has_integral\n     Gamma z * Re (zeta (complex_of_real z)))\n     {0<..} =\n    ((\\<lambda>x. x powr (z - 1) / (exp x - 1)) has_integral\n     Gamma z * Re (zeta (complex_of_real z)))\n     {0<..}", "by (intro has_integral_cong) (auto simp: powr_Reals_eq)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       Re (complex_of_real x powr (complex_of_real z - 1)) /\n       (exp x - 1)) has_integral\n   Gamma z * Re (zeta (complex_of_real z)))\n   {0<..} =\n  ((\\<lambda>x. x powr (z - 1) / (exp x - 1)) has_integral\n   Gamma z * Re (zeta (complex_of_real z)))\n   {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. x powr (z - 1) / (exp x - 1)) has_integral\n     Gamma z * Re (zeta (complex_of_real z)))\n     {0<..}", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. x powr (z - 1) / (exp x - 1)) has_integral\n   Gamma z * Re (zeta (complex_of_real z)))\n   {0<..}", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. x powr (z - 1) / (exp x - 1)) has_integral\n   Gamma z * Re (zeta (complex_of_real z)))\n   {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. x powr (z - 1) / (exp x - 1)) has_integral\n     Gamma z * Re (zeta (complex_of_real z)))\n     {0<..}", "."], ["proof (state)\nthis:\n  ((\\<lambda>x. x powr (z - 1) / (exp x - 1)) has_integral\n   Gamma z * Re (zeta (complex_of_real z)))\n   {0<..}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Gamma_integral_real':\n  assumes x: \"x > (0 :: real)\"\n  shows   \"((\\<lambda>t. t powr (x - 1) / exp t) has_integral Gamma x) {0<..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. t powr (x - 1) / exp t) has_integral Gamma x) {0<..}", "using Gamma_integral_real[OF assms]"], ["proof (prove)\nusing this:\n  ((\\<lambda>t. t powr (x - 1) / exp t) has_integral Gamma x) {0..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. t powr (x - 1) / exp t) has_integral Gamma x) {0<..}", "by (subst has_integral_closure [symmetric]) auto"], ["", "subsection \\<open>An analytic proof of the infinitude of primes\\<close>"], ["", "text \\<open>\n  We can now also do an analytic proof of the infinitude of primes.\n\\<close>"], ["", "lemma primes_infinite_analytic: \"infinite {p :: nat. prime p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite {p. prime p}", "proof\n  \\<comment> \\<open>Suppose the set of primes were finite.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. finite {p. prime p} \\<Longrightarrow> False", "define P :: \"nat set\" where \"P = {p. prime p}\""], ["proof (state)\nthis:\n  P = {p. prime p}\n\ngoal (1 subgoal):\n 1. finite {p. prime p} \\<Longrightarrow> False", "assume fin: \"finite P\"\n\n  \\<comment> \\<open>Then the Euler product form of the $\\zeta$ function ranges over a finite set,\n      and since each factor is holomorphic in the positive real half-space, \n      the product is, too.\\<close>"], ["proof (state)\nthis:\n  finite P\n\ngoal (1 subgoal):\n 1. finite {p. prime p} \\<Longrightarrow> False", "define zeta' :: \"complex \\<Rightarrow> complex\" \n    where \"zeta' = (\\<lambda>s. (\\<Prod>p\\<in>P. inverse (1 - 1 / of_nat p powr s)))\""], ["proof (state)\nthis:\n  zeta' = (\\<lambda>s. \\<Prod>p\\<in>P. inverse (1 - 1 / of_nat p powr s))\n\ngoal (1 subgoal):\n 1. finite {p. prime p} \\<Longrightarrow> False", "have holo: \"zeta' holomorphic_on A\" if \"A \\<subseteq> {s. Re s > 0}\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta' holomorphic_on A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. zeta' holomorphic_on A", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. zeta' holomorphic_on A", "fix p :: nat and s :: complex"], ["proof (state)\ngoal (1 subgoal):\n 1. zeta' holomorphic_on A", "assume p: \"p \\<in> P\" and s: \"s \\<in> A\""], ["proof (state)\nthis:\n  p \\<in> P\n  s \\<in> A\n\ngoal (1 subgoal):\n 1. zeta' holomorphic_on A", "from p"], ["proof (chain)\npicking this:\n  p \\<in> P", "have p': \"real p > 1\""], ["proof (prove)\nusing this:\n  p \\<in> P\n\ngoal (1 subgoal):\n 1. 1 < real p", "by (subst of_nat_1 [symmetric], subst of_nat_less_iff) (simp add: prime_gt_Suc_0_nat P_def)"], ["proof (state)\nthis:\n  1 < real p\n\ngoal (1 subgoal):\n 1. zeta' holomorphic_on A", "have \"norm (of_nat p powr s) = real p powr Re s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (of_nat p powr s) = real p powr Re s", "by (simp add: norm_powr_real_powr)"], ["proof (state)\nthis:\n  cmod (of_nat p powr s) = real p powr Re s\n\ngoal (1 subgoal):\n 1. zeta' holomorphic_on A", "also"], ["proof (state)\nthis:\n  cmod (of_nat p powr s) = real p powr Re s\n\ngoal (1 subgoal):\n 1. zeta' holomorphic_on A", "have \"\\<dots> > real p powr 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real p powr 0 < real p powr Re s", "using p p' s that"], ["proof (prove)\nusing this:\n  p \\<in> P\n  1 < real p\n  s \\<in> A\n  A \\<subseteq> {s. 0 < Re s}\n\ngoal (1 subgoal):\n 1. real p powr 0 < real p powr Re s", "by (subst powr_less_cancel_iff) (auto simp: prime_gt_1_nat)"], ["proof (state)\nthis:\n  real p powr 0 < real p powr Re s\n\ngoal (1 subgoal):\n 1. zeta' holomorphic_on A", "finally"], ["proof (chain)\npicking this:\n  real p powr 0 < cmod (of_nat p powr s)", "have \"of_nat p powr s \\<noteq> 1\""], ["proof (prove)\nusing this:\n  real p powr 0 < cmod (of_nat p powr s)\n\ngoal (1 subgoal):\n 1. of_nat p powr s \\<noteq> 1", "using p"], ["proof (prove)\nusing this:\n  real p powr 0 < cmod (of_nat p powr s)\n  p \\<in> P\n\ngoal (1 subgoal):\n 1. of_nat p powr s \\<noteq> 1", "by (auto simp: P_def)"], ["proof (state)\nthis:\n  of_nat p powr s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. zeta' holomorphic_on A", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?p2 \\<in> P; ?s2 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> of_nat ?p2 powr ?s2 \\<noteq> 1\n\ngoal (1 subgoal):\n 1. zeta' holomorphic_on A", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?p2 \\<in> P; ?s2 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> of_nat ?p2 powr ?s2 \\<noteq> 1\n\ngoal (1 subgoal):\n 1. zeta' holomorphic_on A", "by (auto simp: zeta'_def P_def intro!: holomorphic_intros)"], ["proof (state)\nthis:\n  zeta' holomorphic_on A\n\ngoal:\nNo subgoals!", "qed\n\n  \\<comment> \\<open>Since the Euler product expansion of $\\zeta(s)$ is valid for all $s$ with\n      real value at least 1, and both $\\zeta(s)$ and the Euler product must \n      be equal in the positive real half-space punctured at 1 by analytic\n      continuation.\\<close>"], ["proof (state)\nthis:\n  ?A \\<subseteq> {s. 0 < Re s} \\<Longrightarrow> zeta' holomorphic_on ?A\n\ngoal (1 subgoal):\n 1. finite {p. prime p} \\<Longrightarrow> False", "have eq: \"zeta s = zeta' s\" if \"Re s > 0\" \"s \\<noteq> 1\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta s = zeta' s", "proof (rule analytic_continuation_open[of \"{s. Re s > 1}\" \"{s. Re s > 0} - {1}\" zeta zeta'])"], ["proof (state)\ngoal (9 subgoals):\n 1. open {s. 1 < Re s}\n 2. open ({s. 0 < Re s} - {1})\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected ({s. 0 < Re s} - {1})\n 5. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s} - {1}\n 6. zeta holomorphic_on {s. 0 < Re s} - {1}\n 7. zeta' holomorphic_on {s. 0 < Re s} - {1}\n 8. \\<And>z. z \\<in> {s. 1 < Re s} \\<Longrightarrow> zeta z = zeta' z\n 9. s \\<in> {s. 0 < Re s} - {1}", "fix s"], ["proof (state)\ngoal (9 subgoals):\n 1. open {s. 1 < Re s}\n 2. open ({s. 0 < Re s} - {1})\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected ({s. 0 < Re s} - {1})\n 5. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s} - {1}\n 6. zeta holomorphic_on {s. 0 < Re s} - {1}\n 7. zeta' holomorphic_on {s. 0 < Re s} - {1}\n 8. \\<And>z. z \\<in> {s. 1 < Re s} \\<Longrightarrow> zeta z = zeta' z\n 9. s__ \\<in> {s. 0 < Re s} - {1}", "assume s: \"s \\<in> {s. Re s > 1}\""], ["proof (state)\nthis:\n  s \\<in> {s. 1 < Re s}\n\ngoal (9 subgoals):\n 1. open {s. 1 < Re s}\n 2. open ({s. 0 < Re s} - {1})\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected ({s. 0 < Re s} - {1})\n 5. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s} - {1}\n 6. zeta holomorphic_on {s. 0 < Re s} - {1}\n 7. zeta' holomorphic_on {s. 0 < Re s} - {1}\n 8. \\<And>z. z \\<in> {s. 1 < Re s} \\<Longrightarrow> zeta z = zeta' z\n 9. s__ \\<in> {s. 0 < Re s} - {1}", "let ?f = \"(\\<lambda>n. \\<Prod>p\\<le>n. if prime p then inverse (1 - 1 / of_nat p powr s) else 1)\""], ["proof (state)\ngoal (9 subgoals):\n 1. open {s. 1 < Re s}\n 2. open ({s. 0 < Re s} - {1})\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected ({s. 0 < Re s} - {1})\n 5. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s} - {1}\n 6. zeta holomorphic_on {s. 0 < Re s} - {1}\n 7. zeta' holomorphic_on {s. 0 < Re s} - {1}\n 8. \\<And>z. z \\<in> {s. 1 < Re s} \\<Longrightarrow> zeta z = zeta' z\n 9. s__ \\<in> {s. 0 < Re s} - {1}", "have \"eventually (\\<lambda>n. ?f n = zeta' s) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Prod>p\\<le>n.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1) =\n       zeta' s", "using eventually_ge_at_top[of \"Max P\"]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) (Max P)) sequentially\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Prod>p\\<le>n.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1) =\n       zeta' s", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       Max P \\<le> n \\<Longrightarrow>\n       (\\<Prod>p\\<le>n.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1) =\n       zeta' s", "case (elim n)"], ["proof (state)\nthis:\n  Max P \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       Max P \\<le> n \\<Longrightarrow>\n       (\\<Prod>p\\<le>n.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1) =\n       zeta' s", "have \"P \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<noteq> {}", "by (auto simp: P_def intro!: exI[of _ 2])"], ["proof (state)\nthis:\n  P \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       Max P \\<le> n \\<Longrightarrow>\n       (\\<Prod>p\\<le>n.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1) =\n       zeta' s", "with elim"], ["proof (chain)\npicking this:\n  Max P \\<le> n\n  P \\<noteq> {}", "have \"P \\<subseteq> {..n}\""], ["proof (prove)\nusing this:\n  Max P \\<le> n\n  P \\<noteq> {}\n\ngoal (1 subgoal):\n 1. P \\<subseteq> {..n}", "using fin"], ["proof (prove)\nusing this:\n  Max P \\<le> n\n  P \\<noteq> {}\n  finite P\n\ngoal (1 subgoal):\n 1. P \\<subseteq> {..n}", "by auto"], ["proof (state)\nthis:\n  P \\<subseteq> {..n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       Max P \\<le> n \\<Longrightarrow>\n       (\\<Prod>p\\<le>n.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1) =\n       zeta' s", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<subseteq> {..n}\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<le>n.\n        if prime p then inverse (1 - 1 / of_nat p powr s) else 1) =\n    zeta' s", "unfolding zeta'_def"], ["proof (prove)\nusing this:\n  P \\<subseteq> {..n}\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<le>n.\n        if prime p then inverse (1 - 1 / of_nat p powr s) else 1) =\n    (\\<Prod>p\\<in>P. inverse (1 - 1 / of_nat p powr s))", "by (intro prod.mono_neutral_cong_right) (auto simp: P_def)"], ["proof (state)\nthis:\n  (\\<Prod>p\\<le>n.\n      if prime p then inverse (1 - 1 / of_nat p powr s) else 1) =\n  zeta' s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     (\\<Prod>p\\<le>n.\n         if prime p then inverse (1 - 1 / of_nat p powr s) else 1) =\n     zeta' s\n\ngoal (9 subgoals):\n 1. open {s. 1 < Re s}\n 2. open ({s. 0 < Re s} - {1})\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected ({s. 0 < Re s} - {1})\n 5. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s} - {1}\n 6. zeta holomorphic_on {s. 0 < Re s} - {1}\n 7. zeta' holomorphic_on {s. 0 < Re s} - {1}\n 8. \\<And>z. z \\<in> {s. 1 < Re s} \\<Longrightarrow> zeta z = zeta' z\n 9. s__ \\<in> {s. 0 < Re s} - {1}", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     (\\<Prod>p\\<le>n.\n         if prime p then inverse (1 - 1 / of_nat p powr s) else 1) =\n     zeta' s\n\ngoal (9 subgoals):\n 1. open {s. 1 < Re s}\n 2. open ({s. 0 < Re s} - {1})\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected ({s. 0 < Re s} - {1})\n 5. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s} - {1}\n 6. zeta holomorphic_on {s. 0 < Re s} - {1}\n 7. zeta' holomorphic_on {s. 0 < Re s} - {1}\n 8. \\<And>z. z \\<in> {s. 1 < Re s} \\<Longrightarrow> zeta z = zeta' z\n 9. s__ \\<in> {s. 0 < Re s} - {1}", "from s"], ["proof (chain)\npicking this:\n  s \\<in> {s. 1 < Re s}", "have \"?f \\<longlonglongrightarrow> zeta s\""], ["proof (prove)\nusing this:\n  s \\<in> {s. 1 < Re s}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)\n    \\<longlonglongrightarrow> zeta s", "by (intro euler_product_zeta) auto"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Prod>p\\<le>n.\n         if prime p then inverse (1 - 1 / of_nat p powr s) else 1)\n  \\<longlonglongrightarrow> zeta s\n\ngoal (9 subgoals):\n 1. open {s. 1 < Re s}\n 2. open ({s. 0 < Re s} - {1})\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected ({s. 0 < Re s} - {1})\n 5. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s} - {1}\n 6. zeta holomorphic_on {s. 0 < Re s} - {1}\n 7. zeta' holomorphic_on {s. 0 < Re s} - {1}\n 8. \\<And>z. z \\<in> {s. 1 < Re s} \\<Longrightarrow> zeta z = zeta' z\n 9. s__ \\<in> {s. 0 < Re s} - {1}", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially.\n     (\\<Prod>p\\<le>n.\n         if prime p then inverse (1 - 1 / of_nat p powr s) else 1) =\n     zeta' s\n  (\\<lambda>n.\n      \\<Prod>p\\<le>n.\n         if prime p then inverse (1 - 1 / of_nat p powr s) else 1)\n  \\<longlonglongrightarrow> zeta s", "have \"(\\<lambda>_. zeta' s) \\<longlonglongrightarrow> zeta s\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     (\\<Prod>p\\<le>n.\n         if prime p then inverse (1 - 1 / of_nat p powr s) else 1) =\n     zeta' s\n  (\\<lambda>n.\n      \\<Prod>p\\<le>n.\n         if prime p then inverse (1 - 1 / of_nat p powr s) else 1)\n  \\<longlonglongrightarrow> zeta s\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. zeta' s) \\<longlonglongrightarrow> zeta s", "by (blast intro: Lim_transform_eventually)"], ["proof (state)\nthis:\n  (\\<lambda>_. zeta' s) \\<longlonglongrightarrow> zeta s\n\ngoal (9 subgoals):\n 1. open {s. 1 < Re s}\n 2. open ({s. 0 < Re s} - {1})\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected ({s. 0 < Re s} - {1})\n 5. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s} - {1}\n 6. zeta holomorphic_on {s. 0 < Re s} - {1}\n 7. zeta' holomorphic_on {s. 0 < Re s} - {1}\n 8. \\<And>z. z \\<in> {s. 1 < Re s} \\<Longrightarrow> zeta z = zeta' z\n 9. s__ \\<in> {s. 0 < Re s} - {1}", "thus \"zeta s = zeta' s\""], ["proof (prove)\nusing this:\n  (\\<lambda>_. zeta' s) \\<longlonglongrightarrow> zeta s\n\ngoal (1 subgoal):\n 1. zeta s = zeta' s", "by (simp add: LIMSEQ_const_iff)"], ["proof (state)\nthis:\n  zeta s = zeta' s\n\ngoal (8 subgoals):\n 1. open {s. 1 < Re s}\n 2. open ({s. 0 < Re s} - {1})\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected ({s. 0 < Re s} - {1})\n 5. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s} - {1}\n 6. zeta holomorphic_on {s. 0 < Re s} - {1}\n 7. zeta' holomorphic_on {s. 0 < Re s} - {1}\n 8. s__ \\<in> {s. 0 < Re s} - {1}", "qed (auto intro!: exI[of _ 2] open_halfspace_Re_gt connected_open_delete convex_halfspace_Re_gt \n         holomorphic_intros holo that intro: convex_connected)\n\n  \\<comment> \\<open>However, since the Euler product is holomorphic on the entire positive real\n      half-space, it cannot have a pole at 1, while $\\zeta(s)$ does have a pole\n      at 1. Since they are equal in the punctured neighbourhood of 1, this is\n      a contradiction.\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>0 < Re ?s; ?s \\<noteq> 1\\<rbrakk>\n  \\<Longrightarrow> zeta ?s = zeta' ?s\n\ngoal (1 subgoal):\n 1. finite {p. prime p} \\<Longrightarrow> False", "have ev: \"eventually (\\<lambda>s. s \\<in> {s. Re s > 0} - {1}) (at 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 1. s \\<in> {s. 0 < Re s} - {1}", "by (auto simp: eventually_at_filter intro!: open_halfspace_Re_gt\n               eventually_mono[OF eventually_nhds_in_open[of \"{s. Re s > 0}\"]])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at 1. s \\<in> {s. 0 < Re s} - {1}\n\ngoal (1 subgoal):\n 1. finite {p. prime p} \\<Longrightarrow> False", "have \"\\<not>is_pole zeta' 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> is_pole zeta' 1", "by (rule not_is_pole_holomorphic [of \"{s. Re s > 0}\"]) (auto intro!: holo open_halfspace_Re_gt)"], ["proof (state)\nthis:\n  \\<not> is_pole zeta' 1\n\ngoal (1 subgoal):\n 1. finite {p. prime p} \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  \\<not> is_pole zeta' 1\n\ngoal (1 subgoal):\n 1. finite {p. prime p} \\<Longrightarrow> False", "have \"is_pole zeta' 1 \\<longleftrightarrow> is_pole zeta 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_pole zeta' 1 = is_pole zeta 1", "unfolding is_pole_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim zeta' at_infinity (at 1) = filterlim zeta at_infinity (at 1)", "by (intro filterlim_cong refl eventually_mono [OF ev] eq [symmetric]) auto"], ["proof (state)\nthis:\n  is_pole zeta' 1 = is_pole zeta 1\n\ngoal (1 subgoal):\n 1. finite {p. prime p} \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  \\<not> is_pole zeta 1", "show False"], ["proof (prove)\nusing this:\n  \\<not> is_pole zeta 1\n\ngoal (1 subgoal):\n 1. False", "using is_pole_zeta"], ["proof (prove)\nusing this:\n  \\<not> is_pole zeta 1\n  is_pole zeta 1\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The periodic zeta function\\<close>"], ["", "text \\<open>\n  The periodic zeta function $F(s, q)$ (as described e.\\,g.\\ by Apostol~\\cite{apostol1976analytic} \n  is related to the Hurwitz zeta function. It is periodic in \\<open>q\\<close> with period 1 and it can be \n  represented by a Dirichlet series that is absolutely convergent for $\\mathfrak{R}(s) > 1$.\n   If \\<open>q \\<notin> \\<int>\\<close>, it furthermore convergent for $\\mathfrak{R}(s) > 0$.\n\n  It is clear that for integer \\<open>q\\<close>, we have $F(s, q) = F(s, 0) = \\zeta(s)$. Moreover, for\n  non-integer \\<open>q\\<close>, $F(s, q)$ can be analytically continued to an entire function.\n\\<close>"], ["", "definition fds_perzeta :: \"real \\<Rightarrow> complex fds\" where\n  \"fds_perzeta q = fds (\\<lambda>m. exp (2 * pi * \\<i> * m * q))\""], ["", "text \\<open>\n  The definition of the periodic zeta function on the full domain is a bit unwieldy.\n  The precise reasoning for this definition will be given later, and, in any case, it\n  is probably more instructive to look at the derived ``alternative'' definitions later.\n\\<close>"], ["", "definition perzeta :: \"real \\<Rightarrow> complex \\<Rightarrow> complex\" where\n  \"perzeta q' s =\n     (if q' \\<in> \\<int> then zeta s\n      else let q = frac q' in\n        if s = 0 then \\<i> / (2 * pi) * (pre_zeta q 1 - pre_zeta (1 - q) 1 + \n                                             ln (1 - q) - ln q + pi * \\<i>)\n        else if s \\<in> \\<nat> then eval_fds (fds_perzeta q) s \n        else complex_of_real (2 * pi) powr (s - 1) * \\<i> * Gamma (1 - s) *\n               (\\<i> powr (-s) * hurwitz_zeta q (1 - s) -\n                \\<i> powr s * hurwitz_zeta (1 - q) (1 - s)))\""], ["", "interpretation fds_perzeta: periodic_fun_simple' fds_perzeta"], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_fun_simple' fds_perzeta", "by standard (simp_all add: fds_perzeta_def exp_add ring_distribs exp_eq_polar\n                             cis_mult [symmetric] cis_multiple_2pi)"], ["", "interpretation perzeta: periodic_fun_simple' perzeta"], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_fun_simple' perzeta", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. periodic_fun_simple' perzeta", "have [simp]: \"n + 1 \\<in> \\<int> \\<longleftrightarrow> n \\<in> \\<int>\" for n :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. (n + 1 \\<in> \\<int>) = (n \\<in> \\<int>)", "by (simp flip: frac_eq_0_iff add: frac.plus_1)"], ["proof (state)\nthis:\n  (?n + 1 \\<in> \\<int>) = (?n \\<in> \\<int>)\n\ngoal (1 subgoal):\n 1. periodic_fun_simple' perzeta", "show \"periodic_fun_simple' perzeta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_fun_simple' perzeta", "by standard (auto simp: fun_eq_iff perzeta_def Let_def frac.plus_1)"], ["proof (state)\nthis:\n  periodic_fun_simple' perzeta\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perzeta_frac [simp]: \"perzeta (frac q) = perzeta q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perzeta (frac q) = perzeta q", "by (auto simp: perzeta_def fun_eq_iff Let_def)"], ["", "lemma fds_perzeta_frac [simp]: \"fds_perzeta (frac q) = fds_perzeta q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_perzeta (frac q) = fds_perzeta q", "using fds_perzeta.plus_of_int[of \"frac q\" \"\\<lfloor>q\\<rfloor>\"]"], ["proof (prove)\nusing this:\n  fds_perzeta (frac q + real_of_int \\<lfloor>q\\<rfloor>) =\n  fds_perzeta (frac q)\n\ngoal (1 subgoal):\n 1. fds_perzeta (frac q) = fds_perzeta q", "by (simp add: frac_def)"], ["", "lemma abs_conv_abscissa_perzeta: \"abs_conv_abscissa (fds_perzeta q) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_conv_abscissa (fds_perzeta q) \\<le> 1", "proof (rule abs_conv_abscissa_leI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c'.\n       1 < ereal c' \\<Longrightarrow>\n       \\<exists>s.\n          s \\<bullet> 1 = c' \\<and> fds_abs_converges (fds_perzeta q) s", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c'.\n       1 < ereal c' \\<Longrightarrow>\n       \\<exists>s.\n          s \\<bullet> 1 = c' \\<and> fds_abs_converges (fds_perzeta q) s", "assume c: \"ereal c > 1\""], ["proof (state)\nthis:\n  1 < ereal c\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       1 < ereal c' \\<Longrightarrow>\n       \\<exists>s.\n          s \\<bullet> 1 = c' \\<and> fds_abs_converges (fds_perzeta q) s", "hence \"summable (\\<lambda>n. n powr -c)\""], ["proof (prove)\nusing this:\n  1 < ereal c\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>x. real x powr - c)", "by (simp add: summable_real_powr_iff)"], ["proof (state)\nthis:\n  summable (\\<lambda>x. real x powr - c)\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       1 < ereal c' \\<Longrightarrow>\n       \\<exists>s.\n          s \\<bullet> 1 = c' \\<and> fds_abs_converges (fds_perzeta q) s", "also"], ["proof (state)\nthis:\n  summable (\\<lambda>x. real x powr - c)\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       1 < ereal c' \\<Longrightarrow>\n       \\<exists>s.\n          s \\<bullet> 1 = c' \\<and> fds_abs_converges (fds_perzeta q) s", "have \"?this \\<longleftrightarrow> fds_abs_converges (fds_perzeta q) (of_real c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>x. real x powr - c) =\n    fds_abs_converges (fds_perzeta q) (complex_of_real c)", "unfolding fds_abs_converges_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>x. real x powr - c) =\n    summable\n     (\\<lambda>n.\n         cmod (fds_nth (fds_perzeta q) n / nat_power n (complex_of_real c)))", "by (intro summable_cong eventually_mono[OF eventually_gt_at_top[of 0]])\n       (auto simp: norm_divide norm_powr_real_powr fds_perzeta_def powr_minus field_simps)"], ["proof (state)\nthis:\n  summable (\\<lambda>x. real x powr - c) =\n  fds_abs_converges (fds_perzeta q) (complex_of_real c)\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       1 < ereal c' \\<Longrightarrow>\n       \\<exists>s.\n          s \\<bullet> 1 = c' \\<and> fds_abs_converges (fds_perzeta q) s", "finally"], ["proof (chain)\npicking this:\n  fds_abs_converges (fds_perzeta q) (complex_of_real c)", "show \"\\<exists>s. s \\<bullet> 1 = c \\<and> fds_abs_converges (fds_perzeta q) s\""], ["proof (prove)\nusing this:\n  fds_abs_converges (fds_perzeta q) (complex_of_real c)\n\ngoal (1 subgoal):\n 1. \\<exists>s. s \\<bullet> 1 = c \\<and> fds_abs_converges (fds_perzeta q) s", "by (intro exI[of _ \"of_real c\"]) auto"], ["proof (state)\nthis:\n  \\<exists>s. s \\<bullet> 1 = c \\<and> fds_abs_converges (fds_perzeta q) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conv_abscissa_perzeta: \"conv_abscissa (fds_perzeta q) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_abscissa (fds_perzeta q) \\<le> 1", "by (rule order.trans[OF conv_le_abs_conv_abscissa abs_conv_abscissa_perzeta])"], ["", "lemma fds_perzeta__left_0 [simp]: \"fds_perzeta 0 = fds_zeta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_perzeta 0 = fds_zeta", "by (simp add: fds_perzeta_def fds_zeta_def)"], ["", "lemma perzeta_0_left [simp]: \"perzeta 0 s = zeta s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perzeta 0 s = zeta s", "by (simp add: perzeta_def eval_fds_zeta)"], ["", "lemma perzeta_int: \"q \\<in> \\<int> \\<Longrightarrow> perzeta q = zeta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> \\<int> \\<Longrightarrow> perzeta q = zeta", "by (simp add: perzeta_def fun_eq_iff)"], ["", "lemma fds_perzeta_int: \"q \\<in> \\<int> \\<Longrightarrow> fds_perzeta q = fds_zeta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> \\<int> \\<Longrightarrow> fds_perzeta q = fds_zeta", "by (auto simp: fds_perzeta.of_int elim!: Ints_cases)"], ["", "lemma sums_fds_perzeta:\n  assumes \"Re s > 1\"\n  shows   \"(\\<lambda>m. exp (2 * pi * \\<i> * Suc m * q) / of_nat (Suc m) powr s) sums\n             eval_fds (fds_perzeta q) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        exp (complex_of_real (2 * pi) * \\<i> * of_nat (Suc m) *\n             complex_of_real q) /\n        of_nat (Suc m) powr s) sums\n    eval_fds (fds_perzeta q) s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        exp (complex_of_real (2 * pi) * \\<i> * of_nat (Suc m) *\n             complex_of_real q) /\n        of_nat (Suc m) powr s) sums\n    eval_fds (fds_perzeta q) s", "have \"conv_abscissa (fds_perzeta q) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_abscissa (fds_perzeta q) \\<le> 1", "by (rule conv_abscissa_perzeta)"], ["proof (state)\nthis:\n  conv_abscissa (fds_perzeta q) \\<le> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        exp (complex_of_real (2 * pi) * \\<i> * of_nat (Suc m) *\n             complex_of_real q) /\n        of_nat (Suc m) powr s) sums\n    eval_fds (fds_perzeta q) s", "also"], ["proof (state)\nthis:\n  conv_abscissa (fds_perzeta q) \\<le> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        exp (complex_of_real (2 * pi) * \\<i> * of_nat (Suc m) *\n             complex_of_real q) /\n        of_nat (Suc m) powr s) sums\n    eval_fds (fds_perzeta q) s", "have \"\\<dots> < ereal (Re s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < ereal (Re s)", "using assms"], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. 1 < ereal (Re s)", "by (simp add: one_ereal_def)"], ["proof (state)\nthis:\n  1 < ereal (Re s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        exp (complex_of_real (2 * pi) * \\<i> * of_nat (Suc m) *\n             complex_of_real q) /\n        of_nat (Suc m) powr s) sums\n    eval_fds (fds_perzeta q) s", "finally"], ["proof (chain)\npicking this:\n  conv_abscissa (fds_perzeta q) < ereal (Re s)", "have \"fds_converges (fds_perzeta q) s\""], ["proof (prove)\nusing this:\n  conv_abscissa (fds_perzeta q) < ereal (Re s)\n\ngoal (1 subgoal):\n 1. fds_converges (fds_perzeta q) s", "by (intro fds_converges) auto"], ["proof (state)\nthis:\n  fds_converges (fds_perzeta q) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        exp (complex_of_real (2 * pi) * \\<i> * of_nat (Suc m) *\n             complex_of_real q) /\n        of_nat (Suc m) powr s) sums\n    eval_fds (fds_perzeta q) s", "hence \"(\\<lambda>n. fds_nth (fds_perzeta q) (Suc n) / nat_power (Suc n) s) sums\n           eval_fds (fds_perzeta q) s\""], ["proof (prove)\nusing this:\n  fds_converges (fds_perzeta q) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. fds_nth (fds_perzeta q) (Suc n) / nat_power (Suc n) s) sums\n    eval_fds (fds_perzeta q) s", "by (subst sums_Suc_iff) (auto simp: fds_converges_iff)"], ["proof (state)\nthis:\n  (\\<lambda>n. fds_nth (fds_perzeta q) (Suc n) / nat_power (Suc n) s) sums\n  eval_fds (fds_perzeta q) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        exp (complex_of_real (2 * pi) * \\<i> * of_nat (Suc m) *\n             complex_of_real q) /\n        of_nat (Suc m) powr s) sums\n    eval_fds (fds_perzeta q) s", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n. fds_nth (fds_perzeta q) (Suc n) / nat_power (Suc n) s) sums\n  eval_fds (fds_perzeta q) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        exp (complex_of_real (2 * pi) * \\<i> * of_nat (Suc m) *\n             complex_of_real q) /\n        of_nat (Suc m) powr s) sums\n    eval_fds (fds_perzeta q) s", "by (simp add: fds_perzeta_def)"], ["proof (state)\nthis:\n  (\\<lambda>m.\n      exp (complex_of_real (2 * pi) * \\<i> * of_nat (Suc m) *\n           complex_of_real q) /\n      of_nat (Suc m) powr s) sums\n  eval_fds (fds_perzeta q) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_tendsto_fds_perzeta:\n  assumes \"Re s > 1\"\n  shows   \"(\\<lambda>n. \\<Sum>k\\<in>{0<..n}. exp (2 * real k * pi * q * \\<i>) * of_nat k powr - s)\n              \\<longlonglongrightarrow> eval_fds (fds_perzeta q) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Sum>k\\<in>{0<..n}.\n          exp (complex_of_real (2 * real k * pi * q) * \\<i>) *\n          of_nat k powr - s)\n    \\<longlonglongrightarrow> eval_fds (fds_perzeta q) s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Sum>k\\<in>{0<..n}.\n          exp (complex_of_real (2 * real k * pi * q) * \\<i>) *\n          of_nat k powr - s)\n    \\<longlonglongrightarrow> eval_fds (fds_perzeta q) s", "have \"(\\<lambda>m. exp (2 * pi * \\<i> * Suc m * q) / of_nat (Suc m) powr s) sums eval_fds (fds_perzeta q) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        exp (complex_of_real (2 * pi) * \\<i> * of_nat (Suc m) *\n             complex_of_real q) /\n        of_nat (Suc m) powr s) sums\n    eval_fds (fds_perzeta q) s", "by (intro sums_fds_perzeta assms)"], ["proof (state)\nthis:\n  (\\<lambda>m.\n      exp (complex_of_real (2 * pi) * \\<i> * of_nat (Suc m) *\n           complex_of_real q) /\n      of_nat (Suc m) powr s) sums\n  eval_fds (fds_perzeta q) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Sum>k\\<in>{0<..n}.\n          exp (complex_of_real (2 * real k * pi * q) * \\<i>) *\n          of_nat k powr - s)\n    \\<longlonglongrightarrow> eval_fds (fds_perzeta q) s", "hence \"(\\<lambda>n. \\<Sum>k<n. exp (2 * real (Suc k) * pi * q * \\<i>) * of_nat (Suc k) powr -s) \\<longlonglongrightarrow>\n           eval_fds (fds_perzeta q) s\"\n    (is \"filterlim ?f _ _\")"], ["proof (prove)\nusing this:\n  (\\<lambda>m.\n      exp (complex_of_real (2 * pi) * \\<i> * of_nat (Suc m) *\n           complex_of_real q) /\n      of_nat (Suc m) powr s) sums\n  eval_fds (fds_perzeta q) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Sum>k<n.\n           exp (complex_of_real (2 * real (Suc k) * pi * q) * \\<i>) *\n           of_nat (Suc k) powr - s)\n    \\<longlonglongrightarrow> eval_fds (fds_perzeta q) s", "by (simp add: sums_def powr_minus field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Sum>k<n.\n         exp (complex_of_real (2 * real (Suc k) * pi * q) * \\<i>) *\n         of_nat (Suc k) powr - s)\n  \\<longlonglongrightarrow> eval_fds (fds_perzeta q) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Sum>k\\<in>{0<..n}.\n          exp (complex_of_real (2 * real k * pi * q) * \\<i>) *\n          of_nat k powr - s)\n    \\<longlonglongrightarrow> eval_fds (fds_perzeta q) s", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Sum>k<n.\n         exp (complex_of_real (2 * real (Suc k) * pi * q) * \\<i>) *\n         of_nat (Suc k) powr - s)\n  \\<longlonglongrightarrow> eval_fds (fds_perzeta q) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Sum>k\\<in>{0<..n}.\n          exp (complex_of_real (2 * real k * pi * q) * \\<i>) *\n          of_nat k powr - s)\n    \\<longlonglongrightarrow> eval_fds (fds_perzeta q) s", "have \"?f = (\\<lambda>n. \\<Sum>k\\<in>{0<..n}. exp (2 * real k * pi * q * \\<i>) * of_nat k powr -s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Sum>k<n.\n           exp (complex_of_real (2 * real (Suc k) * pi * q) * \\<i>) *\n           of_nat (Suc k) powr - s) =\n    (\\<lambda>n.\n        \\<Sum>k\\<in>{0<..n}.\n          exp (complex_of_real (2 * real k * pi * q) * \\<i>) *\n          of_nat k powr - s)", "by (intro ext sum.reindex_bij_betw sum.reindex_bij_witness[of _ \"\\<lambda>n. n - 1\" Suc]) auto"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Sum>k<n.\n         exp (complex_of_real (2 * real (Suc k) * pi * q) * \\<i>) *\n         of_nat (Suc k) powr - s) =\n  (\\<lambda>n.\n      \\<Sum>k\\<in>{0<..n}.\n        exp (complex_of_real (2 * real k * pi * q) * \\<i>) *\n        of_nat k powr - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Sum>k\\<in>{0<..n}.\n          exp (complex_of_real (2 * real k * pi * q) * \\<i>) *\n          of_nat k powr - s)\n    \\<longlonglongrightarrow> eval_fds (fds_perzeta q) s", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      \\<Sum>k\\<in>{0<..n}.\n        exp (complex_of_real (2 * real k * pi * q) * \\<i>) *\n        of_nat k powr - s)\n  \\<longlonglongrightarrow> eval_fds (fds_perzeta q) s", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      \\<Sum>k\\<in>{0<..n}.\n        exp (complex_of_real (2 * real k * pi * q) * \\<i>) *\n        of_nat k powr - s)\n  \\<longlonglongrightarrow> eval_fds (fds_perzeta q) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Sum>k\\<in>{0<..n}.\n          exp (complex_of_real (2 * real k * pi * q) * \\<i>) *\n          of_nat k powr - s)\n    \\<longlonglongrightarrow> eval_fds (fds_perzeta q) s", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Sum>k\\<in>{0<..n}.\n        exp (complex_of_real (2 * real k * pi * q) * \\<i>) *\n        of_nat k powr - s)\n  \\<longlonglongrightarrow> eval_fds (fds_perzeta q) s\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Using the geometric series, it is easy to see that the Dirichlet series for $F(s, q)$\n  has bounded partial sums for non-integer \\<open>q\\<close>, so it must converge for any \\<open>s\\<close> with\n  $\\mathfrak{R}(s) > 0$.\n\\<close>"], ["", "lemma conv_abscissa_perzeta':\n  assumes \"q \\<notin> \\<int>\"\n  shows   \"conv_abscissa (fds_perzeta q) \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_abscissa (fds_perzeta q) \\<le> 0", "proof (rule conv_abscissa_leI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c'.\n       0 < ereal c' \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_converges (fds_perzeta q) s", "fix c :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c'.\n       0 < ereal c' \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_converges (fds_perzeta q) s", "assume c: \"ereal c > 0\""], ["proof (state)\nthis:\n  0 < ereal c\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       0 < ereal c' \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_converges (fds_perzeta q) s", "have \"fds_converges (fds_perzeta q) (of_real c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_converges (fds_perzeta q) (complex_of_real c)", "proof (rule bounded_partial_sums_imp_fps_converges)"], ["proof (state)\ngoal (2 subgoals):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k ?s0.0)\n 2. ?s0.0 \\<bullet> 1 < complex_of_real c \\<bullet> 1", "define \\<omega> where \"\\<omega> = exp (2 * pi * \\<i> * q)\""], ["proof (state)\nthis:\n  \\<omega> = exp (complex_of_real (2 * pi) * \\<i> * complex_of_real q)\n\ngoal (2 subgoals):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k ?s0.0)\n 2. ?s0.0 \\<bullet> 1 < complex_of_real c \\<bullet> 1", "have [simp]: \"norm \\<omega> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod \\<omega> = 1", "by (simp add: \\<omega>_def)"], ["proof (state)\nthis:\n  cmod \\<omega> = 1\n\ngoal (2 subgoals):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k ?s0.0)\n 2. ?s0.0 \\<bullet> 1 < complex_of_real c \\<bullet> 1", "define M where \"M = 2 / norm (1 - \\<omega>)\""], ["proof (state)\nthis:\n  M = 2 / cmod (1 - \\<omega>)\n\ngoal (2 subgoals):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k ?s0.0)\n 2. ?s0.0 \\<bullet> 1 < complex_of_real c \\<bullet> 1", "from \\<open>q \\<notin> \\<int>\\<close>"], ["proof (chain)\npicking this:\n  q \\<notin> \\<int>", "have \"\\<omega> \\<noteq> 1\""], ["proof (prove)\nusing this:\n  q \\<notin> \\<int>\n\ngoal (1 subgoal):\n 1. \\<omega> \\<noteq> 1", "by (auto simp: \\<omega>_def exp_eq_1)"], ["proof (state)\nthis:\n  \\<omega> \\<noteq> 1\n\ngoal (2 subgoals):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k ?s0.0)\n 2. ?s0.0 \\<bullet> 1 < complex_of_real c \\<bullet> 1", "hence \"M > 0\""], ["proof (prove)\nusing this:\n  \\<omega> \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 0 < M", "by (simp add: M_def)"], ["proof (state)\nthis:\n  0 < M\n\ngoal (2 subgoals):\n 1. Bseq\n     (\\<lambda>n.\n         \\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k ?s0.0)\n 2. ?s0.0 \\<bullet> 1 < complex_of_real c \\<bullet> 1", "show \"Bseq (\\<lambda>n. \\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Bseq\n     (\\<lambda>n. \\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0)", "unfolding Bseq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>K>0.\n       \\<forall>n.\n          cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0)\n          \\<le> K", "proof (rule exI, safe)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < ?K\n 2. \\<And>n.\n       cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0)\n       \\<le> ?K", "fix n :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < ?K\n 2. \\<And>n.\n       cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0)\n       \\<le> ?K", "show \"norm (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M", "proof (cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M", "have \"(\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) =\n                (\\<Sum>k\\<in>{1..1 + (n - 1)}. \\<omega> ^ k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) =\n    sum ((^) \\<omega>) {1..1 + (n - 1)}", "using False"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) =\n    sum ((^) \\<omega>) {1..1 + (n - 1)}", "by (intro sum.mono_neutral_cong_right)\n             (auto simp: fds_perzeta_def fds_nth_fds exp_of_nat_mult [symmetric] mult_ac \\<omega>_def)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) =\n  sum ((^) \\<omega>) {1..1 + (n - 1)}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) =\n  sum ((^) \\<omega>) {1..1 + (n - 1)}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M", "have \"\\<dots> = \\<omega> * (1 - \\<omega> ^ n) / (1 - \\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((^) \\<omega>) {1..1 + (n - 1)} =\n    \\<omega> * (1 - \\<omega> ^ n) / (1 - \\<omega>)", "using \\<open>\\<omega> \\<noteq> 1\\<close> and False"], ["proof (prove)\nusing this:\n  \\<omega> \\<noteq> 1\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. sum ((^) \\<omega>) {1..1 + (n - 1)} =\n    \\<omega> * (1 - \\<omega> ^ n) / (1 - \\<omega>)", "by (subst sum_gp_offset) simp"], ["proof (state)\nthis:\n  sum ((^) \\<omega>) {1..1 + (n - 1)} =\n  \\<omega> * (1 - \\<omega> ^ n) / (1 - \\<omega>)\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M", "also"], ["proof (state)\nthis:\n  sum ((^) \\<omega>) {1..1 + (n - 1)} =\n  \\<omega> * (1 - \\<omega> ^ n) / (1 - \\<omega>)\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M", "have \"norm \\<dots> \\<le> 1 * (norm (1::complex) + norm (\\<omega> ^ n)) / norm (1 - \\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (\\<omega> * (1 - \\<omega> ^ n) / (1 - \\<omega>))\n    \\<le> 1 * (cmod 1 + cmod (\\<omega> ^ n)) / cmod (1 - \\<omega>)", "unfolding norm_mult norm_divide"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod \\<omega> * cmod (1 - \\<omega> ^ n) / cmod (1 - \\<omega>)\n    \\<le> 1 * (cmod 1 + cmod (\\<omega> ^ n)) / cmod (1 - \\<omega>)", "by (intro mult_mono divide_right_mono norm_triangle_ineq4) auto"], ["proof (state)\nthis:\n  cmod (\\<omega> * (1 - \\<omega> ^ n) / (1 - \\<omega>))\n  \\<le> 1 * (cmod 1 + cmod (\\<omega> ^ n)) / cmod (1 - \\<omega>)\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M", "also"], ["proof (state)\nthis:\n  cmod (\\<omega> * (1 - \\<omega> ^ n) / (1 - \\<omega>))\n  \\<le> 1 * (cmod 1 + cmod (\\<omega> ^ n)) / cmod (1 - \\<omega>)\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M", "have \"\\<dots> = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 * (cmod 1 + cmod (\\<omega> ^ n)) / cmod (1 - \\<omega>) = M", "by (simp add: M_def norm_power)"], ["proof (state)\nthis:\n  1 * (cmod 1 + cmod (\\<omega> ^ n)) / cmod (1 - \\<omega>) = M\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M", "finally"], ["proof (chain)\npicking this:\n  cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M", "show ?thesis"], ["proof (prove)\nusing this:\n  cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M", "."], ["proof (state)\nthis:\n  cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M\n\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow>\n    cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M", "qed (use \\<open>M > 0\\<close> in simp_all)"], ["proof (state)\nthis:\n  cmod (\\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0) \\<le> M\n\ngoal (1 subgoal):\n 1. 0 < M", "qed fact+"], ["proof (state)\nthis:\n  Bseq\n   (\\<lambda>n. \\<Sum>k\\<le>n. fds_nth (fds_perzeta q) k / nat_power k 0)\n\ngoal (1 subgoal):\n 1. 0 \\<bullet> 1 < complex_of_real c \\<bullet> 1", "qed (insert c, auto)"], ["proof (state)\nthis:\n  fds_converges (fds_perzeta q) (complex_of_real c)\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       0 < ereal c' \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_converges (fds_perzeta q) s", "thus \"\\<exists>s. s \\<bullet> 1 = c \\<and> fds_converges (fds_perzeta q) s\""], ["proof (prove)\nusing this:\n  fds_converges (fds_perzeta q) (complex_of_real c)\n\ngoal (1 subgoal):\n 1. \\<exists>s. s \\<bullet> 1 = c \\<and> fds_converges (fds_perzeta q) s", "by (intro exI[of _ \"of_real c\"]) auto"], ["proof (state)\nthis:\n  \\<exists>s. s \\<bullet> 1 = c \\<and> fds_converges (fds_perzeta q) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fds_perzeta_one_half: \"fds_perzeta (1 / 2) = fds (\\<lambda>n. (-1) ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_perzeta (1 / 2) = fds ((^) (- 1))", "using Complex.DeMoivre[of pi]"], ["proof (prove)\nusing this:\n  cis pi ^ ?n = cis (real ?n * pi)\n\ngoal (1 subgoal):\n 1. fds_perzeta (1 / 2) = fds ((^) (- 1))", "by (intro fds_eqI) (auto simp: fds_perzeta_def exp_eq_polar mult_ac)"], ["", "lemma perzeta_one_half_1 [simp]: \"perzeta (1 / 2) 1 = -ln 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perzeta (1 / 2) 1 = - Ln 2", "proof (rule sums_unique2)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?f sums perzeta (1 / 2) 1\n 2. ?f sums - Ln 2", "have *: \"(1 / 2 :: real) \\<notin> \\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / 2 \\<notin> \\<int>", "using fraction_not_in_ints[of 2 1]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<not> is_unit 2; 2 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> of_int 1 / of_int 2 \\<notin> \\<int>\n\ngoal (1 subgoal):\n 1. 1 / 2 \\<notin> \\<int>", "by auto"], ["proof (state)\nthis:\n  1 / 2 \\<notin> \\<int>\n\ngoal (2 subgoals):\n 1. ?f sums perzeta (1 / 2) 1\n 2. ?f sums - Ln 2", "have \"fds_converges (fds_perzeta (1 / 2)) 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_converges (fds_perzeta (1 / 2)) 1", "by (rule fds_converges, rule le_less_trans, rule conv_abscissa_perzeta') (use * in auto)"], ["proof (state)\nthis:\n  fds_converges (fds_perzeta (1 / 2)) 1\n\ngoal (2 subgoals):\n 1. ?f sums perzeta (1 / 2) 1\n 2. ?f sums - Ln 2", "hence \"(\\<lambda>n. (-1) ^ Suc n / Suc n) sums eval_fds (fds_perzeta (1 / 2)) 1\""], ["proof (prove)\nusing this:\n  fds_converges (fds_perzeta (1 / 2)) 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. complex_of_real ((- 1) ^ Suc x / real (Suc x))) sums\n    eval_fds (fds_perzeta (1 / 2)) 1", "unfolding fds_converges_altdef"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      fds_nth (fds_perzeta (1 / 2)) (Suc n) / nat_power (Suc n) 1) sums\n  eval_fds (fds_perzeta (1 / 2)) 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. complex_of_real ((- 1) ^ Suc x / real (Suc x))) sums\n    eval_fds (fds_perzeta (1 / 2)) 1", "by (simp add: fds_perzeta_one_half)"], ["proof (state)\nthis:\n  (\\<lambda>x. complex_of_real ((- 1) ^ Suc x / real (Suc x))) sums\n  eval_fds (fds_perzeta (1 / 2)) 1\n\ngoal (2 subgoals):\n 1. ?f sums perzeta (1 / 2) 1\n 2. ?f sums - Ln 2", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. complex_of_real ((- 1) ^ Suc x / real (Suc x))) sums\n  eval_fds (fds_perzeta (1 / 2)) 1\n\ngoal (2 subgoals):\n 1. ?f sums perzeta (1 / 2) 1\n 2. ?f sums - Ln 2", "from *"], ["proof (chain)\npicking this:\n  1 / 2 \\<notin> \\<int>", "have \"eval_fds (fds_perzeta (1 / 2)) 1 = perzeta (1 / 2) 1\""], ["proof (prove)\nusing this:\n  1 / 2 \\<notin> \\<int>\n\ngoal (1 subgoal):\n 1. eval_fds (fds_perzeta (1 / 2)) 1 = perzeta (1 / 2) 1", "by (simp add: perzeta_def)"], ["proof (state)\nthis:\n  eval_fds (fds_perzeta (1 / 2)) 1 = perzeta (1 / 2) 1\n\ngoal (2 subgoals):\n 1. ?f sums perzeta (1 / 2) 1\n 2. ?f sums - Ln 2", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. complex_of_real ((- 1) ^ Suc x / real (Suc x))) sums\n  perzeta (1 / 2) 1", "show \"(\\<lambda>n. -complex_of_real ((-1) ^ n / Suc n)) sums perzeta (1 / 2) 1\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. complex_of_real ((- 1) ^ Suc x / real (Suc x))) sums\n  perzeta (1 / 2) 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. - complex_of_real ((- 1) ^ n / real (Suc n))) sums\n    perzeta (1 / 2) 1", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n. - complex_of_real ((- 1) ^ n / real (Suc n))) sums\n  perzeta (1 / 2) 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. - complex_of_real ((- 1) ^ n / real (Suc n))) sums - Ln 2", "hence \"(\\<lambda>n. -complex_of_real ((-1) ^ n / Suc n)) sums -of_real (ln 2)\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. - complex_of_real ((- 1) ^ n / real (Suc n))) sums\n  perzeta (1 / 2) 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. - complex_of_real ((- 1) ^ n / real (Suc n))) sums\n    - complex_of_real (ln 2)", "by (intro sums_minus sums_of_real alternating_harmonic_series_sums)"], ["proof (state)\nthis:\n  (\\<lambda>n. - complex_of_real ((- 1) ^ n / real (Suc n))) sums\n  - complex_of_real (ln 2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. - complex_of_real ((- 1) ^ n / real (Suc n))) sums - Ln 2", "thus \"(\\<lambda>n. -complex_of_real ((-1) ^ n / Suc n)) sums -(ln 2)\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. - complex_of_real ((- 1) ^ n / real (Suc n))) sums\n  - complex_of_real (ln 2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. - complex_of_real ((- 1) ^ n / real (Suc n))) sums - Ln 2", "by (simp flip: Ln_of_real)"], ["proof (state)\nthis:\n  (\\<lambda>n. - complex_of_real ((- 1) ^ n / real (Suc n))) sums - Ln 2\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Hurwitz's formula\\<close>"], ["", "text \\<open>\n  We now move on to prove Hurwitz's formula relating the Hurwitz zeta function and the\n  periodic zeta function. We mostly follow Apostol's proof, although we do make some small\n  changes in order to make the proof more amenable to Isabelle's complex analysis library.\n \n  The big difference is that Apostol integrates along a circle with a slit, where the two\n  sides of the slit lie on different branches of the integrand. This makes sense when looking\n  as the integrand as a Riemann surface, but we do not have a notion of Riemann surfaces in\n  Isabelle.\n\n  It is therefore much easier to simply cut the circle into an upper and a lower half. In fact,\n  the integral on the lower half can be reduced to the one on the upper half easily by\n  symmetry, so we really only need to handle the integral on the upper half. The integration\n  contour that we will use is therefore a semi-annulus in the upper half of the complex plane,\n  centred around the origin.\n\n  Now, first of all, we prove the existence of an important improper integral \n  that we will need later.\n\\<close>"], ["", "(* TODO: Move *)"], ["", "lemma set_integrable_bigo:\n  fixes f g :: \"real \\<Rightarrow> 'a :: {banach, real_normed_field, second_countable_topology}\"\n  assumes \"f \\<in> O(\\<lambda>x. g x)\" and \"set_integrable lborel {a..} g\"\n  assumes \"\\<And>b. b \\<ge> a \\<Longrightarrow> set_integrable lborel {a..<b} f\"\n  assumes [measurable]: \"set_borel_measurable borel {a..} f\"\n  shows   \"set_integrable lborel {a..} f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel {a..} f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set_integrable lborel {a..} f", "from assms(1)"], ["proof (chain)\npicking this:\n  f \\<in> O(g)", "obtain C x0 where C: \"C > 0\" \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> norm (f x) \\<le> C * norm (g x)\""], ["proof (prove)\nusing this:\n  f \\<in> O(g)\n\ngoal (1 subgoal):\n 1. (\\<And>C x0.\n        \\<lbrakk>0 < C;\n         \\<And>x.\n            x0 \\<le> x \\<Longrightarrow>\n            norm (f x) \\<le> C * norm (g x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (fastforce elim!: landau_o.bigE simp: eventually_at_top_linorder)"], ["proof (state)\nthis:\n  0 < C\n  x0 \\<le> ?x \\<Longrightarrow> norm (f ?x) \\<le> C * norm (g ?x)\n\ngoal (1 subgoal):\n 1. set_integrable lborel {a..} f", "define x0' where \"x0' = max a x0\""], ["proof (state)\nthis:\n  x0' = max a x0\n\ngoal (1 subgoal):\n 1. set_integrable lborel {a..} f", "have \"set_integrable lborel {a..<x0'} f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel {a..<x0'} f", "by (intro assms) (auto simp: x0'_def)"], ["proof (state)\nthis:\n  set_integrable lborel {a..<x0'} f\n\ngoal (1 subgoal):\n 1. set_integrable lborel {a..} f", "moreover"], ["proof (state)\nthis:\n  set_integrable lborel {a..<x0'} f\n\ngoal (1 subgoal):\n 1. set_integrable lborel {a..} f", "have \"set_integrable lborel {x0'..} f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel {x0'..} f", "unfolding set_integrable_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable lborel (\\<lambda>x. indicat_real {x0'..} x *\\<^sub>R f x)", "proof (rule Bochner_Integration.integrable_bound)"], ["proof (state)\ngoal (3 subgoals):\n 1. integrable lborel ?f\n 2. (\\<lambda>x. indicat_real {x0'..} x *\\<^sub>R f x)\n    \\<in> borel_measurable lborel\n 3. AE x in lborel. norm (indicat_real {x0'..} x *\\<^sub>R f x)\n                    \\<le> norm (?f x)", "from assms(2)"], ["proof (chain)\npicking this:\n  set_integrable lborel {a..} g", "have \"set_integrable lborel {x0'..} g\""], ["proof (prove)\nusing this:\n  set_integrable lborel {a..} g\n\ngoal (1 subgoal):\n 1. set_integrable lborel {x0'..} g", "by (rule set_integrable_subset) (auto simp: x0'_def)"], ["proof (state)\nthis:\n  set_integrable lborel {x0'..} g\n\ngoal (3 subgoals):\n 1. integrable lborel ?f\n 2. (\\<lambda>x. indicat_real {x0'..} x *\\<^sub>R f x)\n    \\<in> borel_measurable lborel\n 3. AE x in lborel. norm (indicat_real {x0'..} x *\\<^sub>R f x)\n                    \\<le> norm (?f x)", "thus \"integrable lborel (\\<lambda>x. C *\\<^sub>R (indicator {x0'..} x *\\<^sub>R g x))\""], ["proof (prove)\nusing this:\n  set_integrable lborel {x0'..} g\n\ngoal (1 subgoal):\n 1. integrable lborel\n     (\\<lambda>x. C *\\<^sub>R indicat_real {x0'..} x *\\<^sub>R g x)", "unfolding set_integrable_def"], ["proof (prove)\nusing this:\n  integrable lborel (\\<lambda>x. indicat_real {x0'..} x *\\<^sub>R g x)\n\ngoal (1 subgoal):\n 1. integrable lborel\n     (\\<lambda>x. C *\\<^sub>R indicat_real {x0'..} x *\\<^sub>R g x)", "by (intro integrable_scaleR_right) (simp add: abs_mult norm_mult)"], ["proof (state)\nthis:\n  integrable lborel\n   (\\<lambda>x. C *\\<^sub>R indicat_real {x0'..} x *\\<^sub>R g x)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. indicat_real {x0'..} x *\\<^sub>R f x)\n    \\<in> borel_measurable lborel\n 2. AE x in lborel. norm (indicat_real {x0'..} x *\\<^sub>R f x)\n                    \\<le> norm\n                           (C *\\<^sub>R\n                            indicat_real {x0'..} x *\\<^sub>R g x)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. indicat_real {x0'..} x *\\<^sub>R f x)\n    \\<in> borel_measurable lborel\n 2. AE x in lborel. norm (indicat_real {x0'..} x *\\<^sub>R f x)\n                    \\<le> norm\n                           (C *\\<^sub>R\n                            indicat_real {x0'..} x *\\<^sub>R g x)", "from assms(4)"], ["proof (chain)\npicking this:\n  set_borel_measurable borel {a..} f", "have \"set_borel_measurable borel {x0'..} f\""], ["proof (prove)\nusing this:\n  set_borel_measurable borel {a..} f\n\ngoal (1 subgoal):\n 1. set_borel_measurable borel {x0'..} f", "by (rule set_borel_measurable_subset) (auto simp: x0'_def)"], ["proof (state)\nthis:\n  set_borel_measurable borel {x0'..} f\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. indicat_real {x0'..} x *\\<^sub>R f x)\n    \\<in> borel_measurable lborel\n 2. AE x in lborel. norm (indicat_real {x0'..} x *\\<^sub>R f x)\n                    \\<le> norm\n                           (C *\\<^sub>R\n                            indicat_real {x0'..} x *\\<^sub>R g x)", "thus \"(\\<lambda>x. indicator {x0'..} x *\\<^sub>R f x) \\<in> borel_measurable lborel\""], ["proof (prove)\nusing this:\n  set_borel_measurable borel {x0'..} f\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. indicat_real {x0'..} x *\\<^sub>R f x)\n    \\<in> borel_measurable lborel", "by (simp add: set_borel_measurable_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. indicat_real {x0'..} x *\\<^sub>R f x)\n  \\<in> borel_measurable lborel\n\ngoal (1 subgoal):\n 1. AE x in lborel. norm (indicat_real {x0'..} x *\\<^sub>R f x)\n                    \\<le> norm\n                           (C *\\<^sub>R\n                            indicat_real {x0'..} x *\\<^sub>R g x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. AE x in lborel. norm (indicat_real {x0'..} x *\\<^sub>R f x)\n                    \\<le> norm\n                           (C *\\<^sub>R\n                            indicat_real {x0'..} x *\\<^sub>R g x)", "show \"AE x in lborel. norm (indicator {x0'..} x *\\<^sub>R f x)\n                            \\<le> norm (C *\\<^sub>R (indicator {x0'..} x *\\<^sub>R g x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in lborel. norm (indicat_real {x0'..} x *\\<^sub>R f x)\n                    \\<le> norm\n                           (C *\\<^sub>R\n                            indicat_real {x0'..} x *\\<^sub>R g x)", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  x0 \\<le> ?x \\<Longrightarrow> norm (f ?x) \\<le> C * norm (g ?x)\n\ngoal (1 subgoal):\n 1. AE x in lborel. norm (indicat_real {x0'..} x *\\<^sub>R f x)\n                    \\<le> norm\n                           (C *\\<^sub>R\n                            indicat_real {x0'..} x *\\<^sub>R g x)", "by (intro AE_I2) (auto simp: abs_mult indicator_def x0'_def)"], ["proof (state)\nthis:\n  AE x in lborel. norm (indicat_real {x0'..} x *\\<^sub>R f x)\n                  \\<le> norm\n                         (C *\\<^sub>R indicat_real {x0'..} x *\\<^sub>R g x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set_integrable lborel {x0'..} f\n\ngoal (1 subgoal):\n 1. set_integrable lborel {a..} f", "ultimately"], ["proof (chain)\npicking this:\n  set_integrable lborel {a..<x0'} f\n  set_integrable lborel {x0'..} f", "have \"set_integrable lborel ({a..<x0'} \\<union> {x0'..}) f\""], ["proof (prove)\nusing this:\n  set_integrable lborel {a..<x0'} f\n  set_integrable lborel {x0'..} f\n\ngoal (1 subgoal):\n 1. set_integrable lborel ({a..<x0'} \\<union> {x0'..}) f", "by (rule set_integrable_Un) auto"], ["proof (state)\nthis:\n  set_integrable lborel ({a..<x0'} \\<union> {x0'..}) f\n\ngoal (1 subgoal):\n 1. set_integrable lborel {a..} f", "also"], ["proof (state)\nthis:\n  set_integrable lborel ({a..<x0'} \\<union> {x0'..}) f\n\ngoal (1 subgoal):\n 1. set_integrable lborel {a..} f", "have \"{a..<x0'} \\<union> {x0'..} = {a..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a..<x0'} \\<union> {x0'..} = {a..}", "by (auto simp: x0'_def)"], ["proof (state)\nthis:\n  {a..<x0'} \\<union> {x0'..} = {a..}\n\ngoal (1 subgoal):\n 1. set_integrable lborel {a..} f", "finally"], ["proof (chain)\npicking this:\n  set_integrable lborel {a..} f", "show ?thesis"], ["proof (prove)\nusing this:\n  set_integrable lborel {a..} f\n\ngoal (1 subgoal):\n 1. set_integrable lborel {a..} f", "."], ["proof (state)\nthis:\n  set_integrable lborel {a..} f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma set_integrable_Gamma_hurwitz_aux2_real:\n  fixes s a :: real\n  assumes \"r > 0\" and \"a > 0\"\n  shows \"set_integrable lborel {r..} (\\<lambda>x. x powr s * (exp (-a * x)) / (1 - exp (-x)))\"\n    (is \"set_integrable _ _ ?g\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel {r..}\n     (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))", "proof (rule set_integrable_bigo)"], ["proof (state)\ngoal (4 subgoals):\n 1. (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x))) \\<in> O(?g)\n 2. set_integrable lborel {r..} ?g\n 3. \\<And>b.\n       r \\<le> b \\<Longrightarrow>\n       set_integrable lborel {r..<b}\n        (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n 4. set_borel_measurable borel {r..}\n     (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))", "have \"(\\<lambda>x. exp (-(a/2) * x)) integrable_on {r..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (- (a / 2) * x)) integrable_on {r..}", "using assms"], ["proof (prove)\nusing this:\n  0 < r\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (- (a / 2) * x)) integrable_on {r..}", "by (intro integrable_on_exp_minus_to_infinity) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. exp (- (a / 2) * x)) integrable_on {r..}\n\ngoal (4 subgoals):\n 1. (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x))) \\<in> O(?g)\n 2. set_integrable lborel {r..} ?g\n 3. \\<And>b.\n       r \\<le> b \\<Longrightarrow>\n       set_integrable lborel {r..<b}\n        (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n 4. set_borel_measurable borel {r..}\n     (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))", "hence \"set_integrable lebesgue {r..} (\\<lambda>x. exp (-(a/2) * x))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. exp (- (a / 2) * x)) integrable_on {r..}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (- (a / 2) * x)) absolutely_integrable_on {r..}", "by (intro nonnegative_absolutely_integrable) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>x. exp (- (a / 2) * x)) absolutely_integrable_on {r..}\n\ngoal (4 subgoals):\n 1. (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x))) \\<in> O(?g)\n 2. set_integrable lborel {r..} ?g\n 3. \\<And>b.\n       r \\<le> b \\<Longrightarrow>\n       set_integrable lborel {r..<b}\n        (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n 4. set_borel_measurable borel {r..}\n     (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))", "thus \"set_integrable lborel {r..} (\\<lambda>x. exp (-(a/2) * x))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. exp (- (a / 2) * x)) absolutely_integrable_on {r..}\n\ngoal (1 subgoal):\n 1. set_integrable lborel {r..} (\\<lambda>x. exp (- (a / 2) * x))", "by (simp add: set_integrable_def integrable_completion)"], ["proof (state)\nthis:\n  set_integrable lborel {r..} (\\<lambda>x. exp (- (a / 2) * x))\n\ngoal (3 subgoals):\n 1. (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n    \\<in> O(\\<lambda>x. exp (- (a / 2) * x))\n 2. \\<And>b.\n       r \\<le> b \\<Longrightarrow>\n       set_integrable lborel {r..<b}\n        (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n 3. set_borel_measurable borel {r..}\n     (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n    \\<in> O(\\<lambda>x. exp (- (a / 2) * x))\n 2. \\<And>b.\n       r \\<le> b \\<Longrightarrow>\n       set_integrable lborel {r..<b}\n        (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n 3. set_borel_measurable borel {r..}\n     (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))", "fix y :: real"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n    \\<in> O(\\<lambda>x. exp (- (a / 2) * x))\n 2. \\<And>b.\n       r \\<le> b \\<Longrightarrow>\n       set_integrable lborel {r..<b}\n        (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n 3. set_borel_measurable borel {r..}\n     (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))", "have \"set_integrable lborel {r..y} ?g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel {r..y}\n     (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))", "using assms"], ["proof (prove)\nusing this:\n  0 < r\n  0 < a\n\ngoal (1 subgoal):\n 1. set_integrable lborel {r..y}\n     (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))", "by (intro borel_integrable_atLeastAtMost') (auto intro!: continuous_intros)"], ["proof (state)\nthis:\n  set_integrable lborel {r..y}\n   (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n\ngoal (3 subgoals):\n 1. (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n    \\<in> O(\\<lambda>x. exp (- (a / 2) * x))\n 2. \\<And>b.\n       r \\<le> b \\<Longrightarrow>\n       set_integrable lborel {r..<b}\n        (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n 3. set_borel_measurable borel {r..}\n     (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))", "thus \"set_integrable lborel {r..<y} ?g\""], ["proof (prove)\nusing this:\n  set_integrable lborel {r..y}\n   (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n\ngoal (1 subgoal):\n 1. set_integrable lborel {r..<y}\n     (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))", "by (rule set_integrable_subset) auto"], ["proof (state)\nthis:\n  set_integrable lborel {r..<y}\n   (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n    \\<in> O(\\<lambda>x. exp (- (a / 2) * x))\n 2. set_borel_measurable borel {r..}\n     (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n    \\<in> O(\\<lambda>x. exp (- (a / 2) * x))\n 2. set_borel_measurable borel {r..}\n     (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))", "from assms"], ["proof (chain)\npicking this:\n  0 < r\n  0 < a", "show \"?g \\<in> O(\\<lambda>x. exp (-(a/2) * x))\""], ["proof (prove)\nusing this:\n  0 < r\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n    \\<in> O(\\<lambda>x. exp (- (a / 2) * x))", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))\n  \\<in> O(\\<lambda>x. exp (- (a / 2) * x))\n\ngoal (1 subgoal):\n 1. set_borel_measurable borel {r..}\n     (\\<lambda>x. x powr s * exp (- a * x) / (1 - exp (- x)))", "qed (auto simp: set_borel_measurable_def)"], ["", "lemma set_integrable_Gamma_hurwitz_aux2:\n  fixes s :: complex and a :: real\n  assumes \"r > 0\" and \"a > 0\"\n  shows   \"set_integrable lborel {r..} (\\<lambda>x. x powr -s * (exp (- a * x)) / (1 - exp (- x)))\"\n             (is \"set_integrable _ _ ?g\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_set_integrable lborel {r..}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         (1 - exp (- complex_of_real x)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. complex_set_integrable lborel {r..}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         (1 - exp (- complex_of_real x)))", "have \"set_integrable lborel {r..} (\\<lambda>x. x powr -Re s * (exp (-a * x)) / (1 - exp (-x)))\" \n    (is \"set_integrable _ _ ?g'\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel {r..}\n     (\\<lambda>x. x powr - Re s * exp (- a * x) / (1 - exp (- x)))", "by (rule set_integrable_Gamma_hurwitz_aux2_real) (use assms in auto)"], ["proof (state)\nthis:\n  set_integrable lborel {r..}\n   (\\<lambda>x. x powr - Re s * exp (- a * x) / (1 - exp (- x)))\n\ngoal (1 subgoal):\n 1. complex_set_integrable lborel {r..}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         (1 - exp (- complex_of_real x)))", "also"], ["proof (state)\nthis:\n  set_integrable lborel {r..}\n   (\\<lambda>x. x powr - Re s * exp (- a * x) / (1 - exp (- x)))\n\ngoal (1 subgoal):\n 1. complex_set_integrable lborel {r..}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         (1 - exp (- complex_of_real x)))", "have \"?this \\<longleftrightarrow> integrable lborel (\\<lambda>x. indicator {r..} x *\\<^sub>R ?g' x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel {r..}\n     (\\<lambda>x. x powr - Re s * exp (- a * x) / (1 - exp (- x))) =\n    integrable lborel\n     (\\<lambda>x.\n         indicat_real {r..} x *\\<^sub>R\n         (x powr - Re s * exp (- a * x) / (1 - exp (- x))))", "by (simp add: set_integrable_def)"], ["proof (state)\nthis:\n  set_integrable lborel {r..}\n   (\\<lambda>x. x powr - Re s * exp (- a * x) / (1 - exp (- x))) =\n  integrable lborel\n   (\\<lambda>x.\n       indicat_real {r..} x *\\<^sub>R\n       (x powr - Re s * exp (- a * x) / (1 - exp (- x))))\n\ngoal (1 subgoal):\n 1. complex_set_integrable lborel {r..}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         (1 - exp (- complex_of_real x)))", "also"], ["proof (state)\nthis:\n  set_integrable lborel {r..}\n   (\\<lambda>x. x powr - Re s * exp (- a * x) / (1 - exp (- x))) =\n  integrable lborel\n   (\\<lambda>x.\n       indicat_real {r..} x *\\<^sub>R\n       (x powr - Re s * exp (- a * x) / (1 - exp (- x))))\n\ngoal (1 subgoal):\n 1. complex_set_integrable lborel {r..}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         (1 - exp (- complex_of_real x)))", "have \"(\\<lambda>x. indicator {r..} x *\\<^sub>R ?g' x) = (\\<lambda>x. norm (indicator {r..} x *\\<^sub>R ?g x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        indicat_real {r..} x *\\<^sub>R\n        (x powr - Re s * exp (- a * x) / (1 - exp (- x)))) =\n    (\\<lambda>x.\n        cmod\n         (indicat_real {r..} x *\\<^sub>R\n          (complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n           (1 - exp (- complex_of_real x)))))", "using assms"], ["proof (prove)\nusing this:\n  0 < r\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        indicat_real {r..} x *\\<^sub>R\n        (x powr - Re s * exp (- a * x) / (1 - exp (- x)))) =\n    (\\<lambda>x.\n        cmod\n         (indicat_real {r..} x *\\<^sub>R\n          (complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n           (1 - exp (- complex_of_real x)))))", "by (auto simp: indicator_def norm_mult norm_divide norm_powr_real_powr fun_eq_iff\n                   exp_of_real exp_minus norm_inverse in_Reals_norm power2_eq_square divide_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      indicat_real {r..} x *\\<^sub>R\n      (x powr - Re s * exp (- a * x) / (1 - exp (- x)))) =\n  (\\<lambda>x.\n      cmod\n       (indicat_real {r..} x *\\<^sub>R\n        (complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         (1 - exp (- complex_of_real x)))))\n\ngoal (1 subgoal):\n 1. complex_set_integrable lborel {r..}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         (1 - exp (- complex_of_real x)))", "finally"], ["proof (chain)\npicking this:\n  integrable lborel\n   (\\<lambda>x.\n       cmod\n        (indicat_real {r..} x *\\<^sub>R\n         (complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n          (1 - exp (- complex_of_real x)))))", "show ?thesis"], ["proof (prove)\nusing this:\n  integrable lborel\n   (\\<lambda>x.\n       cmod\n        (indicat_real {r..} x *\\<^sub>R\n         (complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n          (1 - exp (- complex_of_real x)))))\n\ngoal (1 subgoal):\n 1. complex_set_integrable lborel {r..}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         (1 - exp (- complex_of_real x)))", "unfolding set_integrable_def"], ["proof (prove)\nusing this:\n  integrable lborel\n   (\\<lambda>x.\n       cmod\n        (indicat_real {r..} x *\\<^sub>R\n         (complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n          (1 - exp (- complex_of_real x)))))\n\ngoal (1 subgoal):\n 1. complex_integrable lborel\n     (\\<lambda>x.\n         indicat_real {r..} x *\\<^sub>R\n         (complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n          (1 - exp (- complex_of_real x))))", "by (subst (asm) integrable_norm_iff) auto"], ["proof (state)\nthis:\n  complex_set_integrable lborel {r..}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n       (1 - exp (- complex_of_real x)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma closed_neg_Im_slit: \"closed {z. Re z = 0 \\<and> Im z \\<le> 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed {z. Re z = 0 \\<and> Im z \\<le> 0}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. closed {z. Re z = 0 \\<and> Im z \\<le> 0}", "have \"closed ({z. Re z = 0} \\<inter> {z. Im z \\<le> 0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed ({z. Re z = 0} \\<inter> {z. Im z \\<le> 0})", "by (intro closed_Int closed_halfspace_Re_eq closed_halfspace_Im_le)"], ["proof (state)\nthis:\n  closed ({z. Re z = 0} \\<inter> {z. Im z \\<le> 0})\n\ngoal (1 subgoal):\n 1. closed {z. Re z = 0 \\<and> Im z \\<le> 0}", "also"], ["proof (state)\nthis:\n  closed ({z. Re z = 0} \\<inter> {z. Im z \\<le> 0})\n\ngoal (1 subgoal):\n 1. closed {z. Re z = 0 \\<and> Im z \\<le> 0}", "have \"{z. Re z = 0} \\<inter> {z. Im z \\<le> 0} = {z. Re z = 0 \\<and> Im z \\<le> 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {z. Re z = 0} \\<inter> {z. Im z \\<le> 0} =\n    {z. Re z = 0 \\<and> Im z \\<le> 0}", "by blast"], ["proof (state)\nthis:\n  {z. Re z = 0} \\<inter> {z. Im z \\<le> 0} =\n  {z. Re z = 0 \\<and> Im z \\<le> 0}\n\ngoal (1 subgoal):\n 1. closed {z. Re z = 0 \\<and> Im z \\<le> 0}", "finally"], ["proof (chain)\npicking this:\n  closed {z. Re z = 0 \\<and> Im z \\<le> 0}", "show ?thesis"], ["proof (prove)\nusing this:\n  closed {z. Re z = 0 \\<and> Im z \\<le> 0}\n\ngoal (1 subgoal):\n 1. closed {z. Re z = 0 \\<and> Im z \\<le> 0}", "."], ["proof (state)\nthis:\n  closed {z. Re z = 0 \\<and> Im z \\<le> 0}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We define tour semi-annulus path. When this path is mirrored into the lower half of the complex\n  plane and subtracted from the original path and the outer radius tends to \\<open>\\<infinity>\\<close>, this becomes a\n  Hankel contour extending to \\<open>-\\<infinity>\\<close>.\n\\<close>"], ["", "definition hankel_semiannulus :: \"real \\<Rightarrow> nat \\<Rightarrow> real \\<Rightarrow> complex\" where\n \"hankel_semiannulus r N = (let R = (2 * N + 1) * pi in\n    part_circlepath 0 R 0 pi +++                  \\<comment>\\<open>Big half circle\\<close>\n    linepath (of_real (-R)) (of_real (-r)) +++    \\<comment>\\<open>Line on the negative real axis\\<close>\n    part_circlepath 0 r pi 0 +++                  \\<comment>\\<open>Small half circle\\<close>\n    linepath (of_real r) (of_real R))             \\<comment>\\<open>Line on the positive real axis\\<close>\""], ["", "lemma path_hankel_semiannulus [simp, intro]: \"path (hankel_semiannulus r R)\"\n  and valid_path_hankel_semiannulus [simp, intro]: \"valid_path (hankel_semiannulus r R)\"\n  and pathfinish_hankel_semiannulus [simp, intro]:\n        \"pathfinish (hankel_semiannulus r R) = pathstart (hankel_semiannulus r R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path (hankel_semiannulus r R) &&&\n    valid_path (hankel_semiannulus r R) &&&\n    pathfinish (hankel_semiannulus r R) = pathstart (hankel_semiannulus r R)", "by (simp_all add: hankel_semiannulus_def Let_def)"], ["", "text \\<open>\n  We set the stage for an application of the Residue Theorem. We define a function\n  \\[f(s, z) = z^{-s} \\frac{\\exp(az)}{1-\\exp(-z)}\\ ,\\]\n  which will be the integrand. However, the principal branch of $z^{-s}$ has a branch cut\n  along the non-positive real axis, which is bad because a part of our integration path also\n  lies on the non-positive real axis. We therefore choose a slightly different branch of $z^{-s}$\n  by moving the logarithm branch along by $90^{\\circ}$ so that the branch cut lies on the\n  non-positive imaginary axis instead.\n\\<close>"], ["", "context\n  fixes a :: real\n  fixes f :: \"complex \\<Rightarrow> complex \\<Rightarrow> complex\"\n    and g :: \"complex \\<Rightarrow> real \\<Rightarrow> complex\"\n    and h :: \"real \\<Rightarrow> complex \\<Rightarrow> real \\<Rightarrow> complex\"\n    and Res :: \"complex \\<Rightarrow> nat \\<Rightarrow> complex\" \n    and Ln' :: \"complex \\<Rightarrow> complex\"\n    and F :: \"real \\<Rightarrow> complex \\<Rightarrow> complex\"\n  assumes a: \"a \\<in> {0<..1}\"\n\n  \\<comment>\\<open>Our custom branch of the logarithm\\<close>\n  defines \"Ln' \\<equiv> (\\<lambda>z. ln (-\\<i> * z) + \\<i> * pi / 2)\"\n\n  \\<comment>\\<open>The integrand\\<close>\n  defines \"f \\<equiv> (\\<lambda>s z. exp (Ln' z * (-s) + of_real a * z) / (1 - exp z))\"\n\n  \\<comment>\\<open>The integrand on the negative real axis\\<close>\n  defines \"g \\<equiv> (\\<lambda>s x. complex_of_real x powr -s * of_real (exp (-a*x)) / of_real (1 - exp (-x)))\"\n\n  \\<comment>\\<open>The integrand on the circular arcs\\<close>\n  defines \"h \\<equiv> (\\<lambda>r s t. r * \\<i> * cis t * exp (a * (r * cis t) - (ln r + \\<i> * t) * s) /\n                        (1 - exp (r * cis t)))\"\n\n  \\<comment>\\<open>The interesting part of the residues\\<close>\n  defines \"Res \\<equiv> (\\<lambda>s k. exp (of_real (2 * real k * pi * a) * \\<i>) *\n                            of_real (2 * real k * pi) powr (-s))\"\n\n  \\<comment>\\<open>The periodic zeta function (at least on $\\mathfrak{R}(s) > 1$ half-plane)\\<close>\n  defines \"F \\<equiv> (\\<lambda>q. eval_fds (fds_perzeta q))\"\nbegin"], ["", "text \\<open>\n  First, some basic properties of our custom branch of the logarithm:\n\\<close>"], ["", "lemma Ln'_i: \"Ln' \\<i> = \\<i> * pi / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln' \\<i> = \\<i> * complex_of_real pi / 2", "by (simp add: Ln'_def)"], ["", "lemma Ln'_of_real_pos:\n  assumes \"x > 0\"\n  shows   \"Ln' (of_real x) = of_real (ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x) = complex_of_real (ln x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x) = complex_of_real (ln x)", "have \"Ln' (of_real x) = Ln (of_real x * (-\\<i>)) + \\<i> * pi / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x) =\n    Ln (complex_of_real x * - \\<i>) + \\<i> * complex_of_real pi / 2", "by (simp add: Ln'_def mult_ac)"], ["proof (state)\nthis:\n  Ln' (complex_of_real x) =\n  Ln (complex_of_real x * - \\<i>) + \\<i> * complex_of_real pi / 2\n\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x) = complex_of_real (ln x)", "also"], ["proof (state)\nthis:\n  Ln' (complex_of_real x) =\n  Ln (complex_of_real x * - \\<i>) + \\<i> * complex_of_real pi / 2\n\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x) = complex_of_real (ln x)", "have \"\\<dots> = of_real (ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln (complex_of_real x * - \\<i>) + \\<i> * complex_of_real pi / 2 =\n    complex_of_real (ln x)", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. Ln (complex_of_real x * - \\<i>) + \\<i> * complex_of_real pi / 2 =\n    complex_of_real (ln x)", "by (subst Ln_times_of_real) (auto simp: Ln_of_real)"], ["proof (state)\nthis:\n  Ln (complex_of_real x * - \\<i>) + \\<i> * complex_of_real pi / 2 =\n  complex_of_real (ln x)\n\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x) = complex_of_real (ln x)", "finally"], ["proof (chain)\npicking this:\n  Ln' (complex_of_real x) = complex_of_real (ln x)", "show ?thesis"], ["proof (prove)\nusing this:\n  Ln' (complex_of_real x) = complex_of_real (ln x)\n\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x) = complex_of_real (ln x)", "."], ["proof (state)\nthis:\n  Ln' (complex_of_real x) = complex_of_real (ln x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Ln'_of_real_neg:\n  assumes \"x < 0\"\n  shows   \"Ln' (of_real x) = of_real (ln (-x)) + \\<i> * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x) =\n    complex_of_real (ln (- x)) + \\<i> * complex_of_real pi", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x) =\n    complex_of_real (ln (- x)) + \\<i> * complex_of_real pi", "have \"Ln' (of_real x) = Ln (of_real (-x) * \\<i>) + \\<i> * pi / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x) =\n    Ln (complex_of_real (- x) * \\<i>) + \\<i> * complex_of_real pi / 2", "by (simp add: Ln'_def mult_ac)"], ["proof (state)\nthis:\n  Ln' (complex_of_real x) =\n  Ln (complex_of_real (- x) * \\<i>) + \\<i> * complex_of_real pi / 2\n\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x) =\n    complex_of_real (ln (- x)) + \\<i> * complex_of_real pi", "also"], ["proof (state)\nthis:\n  Ln' (complex_of_real x) =\n  Ln (complex_of_real (- x) * \\<i>) + \\<i> * complex_of_real pi / 2\n\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x) =\n    complex_of_real (ln (- x)) + \\<i> * complex_of_real pi", "have \"\\<dots> = of_real (ln (-x)) + \\<i> * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln (complex_of_real (- x) * \\<i>) + \\<i> * complex_of_real pi / 2 =\n    complex_of_real (ln (- x)) + \\<i> * complex_of_real pi", "using assms"], ["proof (prove)\nusing this:\n  x < 0\n\ngoal (1 subgoal):\n 1. Ln (complex_of_real (- x) * \\<i>) + \\<i> * complex_of_real pi / 2 =\n    complex_of_real (ln (- x)) + \\<i> * complex_of_real pi", "by (subst Ln_times_of_real) (auto simp: Ln_Reals_eq)"], ["proof (state)\nthis:\n  Ln (complex_of_real (- x) * \\<i>) + \\<i> * complex_of_real pi / 2 =\n  complex_of_real (ln (- x)) + \\<i> * complex_of_real pi\n\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x) =\n    complex_of_real (ln (- x)) + \\<i> * complex_of_real pi", "finally"], ["proof (chain)\npicking this:\n  Ln' (complex_of_real x) =\n  complex_of_real (ln (- x)) + \\<i> * complex_of_real pi", "show ?thesis"], ["proof (prove)\nusing this:\n  Ln' (complex_of_real x) =\n  complex_of_real (ln (- x)) + \\<i> * complex_of_real pi\n\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x) =\n    complex_of_real (ln (- x)) + \\<i> * complex_of_real pi", "."], ["proof (state)\nthis:\n  Ln' (complex_of_real x) =\n  complex_of_real (ln (- x)) + \\<i> * complex_of_real pi\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Ln'_times_of_real:\n  \"Ln' (of_real x * z) = of_real (ln x) + Ln' z\" if \"x > 0\" \"z \\<noteq> 0\" for z x"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x * z) = complex_of_real (ln x) + Ln' z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x * z) = complex_of_real (ln x) + Ln' z", "have \"Ln' (of_real x * z) = Ln (of_real x * (- \\<i> * z)) + \\<i> * pi / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x * z) =\n    Ln (complex_of_real x * (- \\<i> * z)) + \\<i> * complex_of_real pi / 2", "by (simp add: Ln'_def mult_ac)"], ["proof (state)\nthis:\n  Ln' (complex_of_real x * z) =\n  Ln (complex_of_real x * (- \\<i> * z)) + \\<i> * complex_of_real pi / 2\n\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x * z) = complex_of_real (ln x) + Ln' z", "also"], ["proof (state)\nthis:\n  Ln' (complex_of_real x * z) =\n  Ln (complex_of_real x * (- \\<i> * z)) + \\<i> * complex_of_real pi / 2\n\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x * z) = complex_of_real (ln x) + Ln' z", "have \"\\<dots> = of_real (ln x) + Ln' z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln (complex_of_real x * (- \\<i> * z)) + \\<i> * complex_of_real pi / 2 =\n    complex_of_real (ln x) + Ln' z", "using that"], ["proof (prove)\nusing this:\n  0 < x\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Ln (complex_of_real x * (- \\<i> * z)) + \\<i> * complex_of_real pi / 2 =\n    complex_of_real (ln x) + Ln' z", "by (subst Ln_times_of_real) (auto simp: Ln'_def Ln_of_real)"], ["proof (state)\nthis:\n  Ln (complex_of_real x * (- \\<i> * z)) + \\<i> * complex_of_real pi / 2 =\n  complex_of_real (ln x) + Ln' z\n\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x * z) = complex_of_real (ln x) + Ln' z", "finally"], ["proof (chain)\npicking this:\n  Ln' (complex_of_real x * z) = complex_of_real (ln x) + Ln' z", "show ?thesis"], ["proof (prove)\nusing this:\n  Ln' (complex_of_real x * z) = complex_of_real (ln x) + Ln' z\n\ngoal (1 subgoal):\n 1. Ln' (complex_of_real x * z) = complex_of_real (ln x) + Ln' z", "."], ["proof (state)\nthis:\n  Ln' (complex_of_real x * z) = complex_of_real (ln x) + Ln' z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Ln'_cis:\n  assumes \"t \\<in> {-pi / 2<..3 / 2 * pi}\"\n  shows   \"Ln' (cis t) = \\<i> * t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln' (cis t) = \\<i> * complex_of_real t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Ln' (cis t) = \\<i> * complex_of_real t", "have \"exp (\\<i> * pi / 2) = \\<i>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (\\<i> * complex_of_real pi / 2) = \\<i>", "by (simp add: exp_eq_polar)"], ["proof (state)\nthis:\n  exp (\\<i> * complex_of_real pi / 2) = \\<i>\n\ngoal (1 subgoal):\n 1. Ln' (cis t) = \\<i> * complex_of_real t", "hence \"Ln (- (\\<i> * cis t)) = \\<i> * (t - pi / 2)\""], ["proof (prove)\nusing this:\n  exp (\\<i> * complex_of_real pi / 2) = \\<i>\n\ngoal (1 subgoal):\n 1. Ln (- (\\<i> * cis t)) = \\<i> * complex_of_real (t - pi / 2)", "using assms"], ["proof (prove)\nusing this:\n  exp (\\<i> * complex_of_real pi / 2) = \\<i>\n  t \\<in> {- pi / 2<..3 / 2 * pi}\n\ngoal (1 subgoal):\n 1. Ln (- (\\<i> * cis t)) = \\<i> * complex_of_real (t - pi / 2)", "by (intro Ln_unique) (auto simp: algebra_simps exp_diff cis_conv_exp)"], ["proof (state)\nthis:\n  Ln (- (\\<i> * cis t)) = \\<i> * complex_of_real (t - pi / 2)\n\ngoal (1 subgoal):\n 1. Ln' (cis t) = \\<i> * complex_of_real t", "thus ?thesis"], ["proof (prove)\nusing this:\n  Ln (- (\\<i> * cis t)) = \\<i> * complex_of_real (t - pi / 2)\n\ngoal (1 subgoal):\n 1. Ln' (cis t) = \\<i> * complex_of_real t", "by (simp add: Ln'_def algebra_simps)"], ["proof (state)\nthis:\n  Ln' (cis t) = \\<i> * complex_of_real t\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Next, we show that the line and circle integrals are holomorphic using Leibniz's rule:\n\\<close>"], ["", "lemma contour_integral_part_circlepath_h:\n  assumes r: \"r > 0\"\n  shows   \"contour_integral (part_circlepath 0 r 0 pi) (f s) = integral {0..pi} (h r s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. contour_integral (part_circlepath 0 r 0 pi) (f s) =\n    integral {0..pi} (h r s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. contour_integral (part_circlepath 0 r 0 pi) (f s) =\n    integral {0..pi} (h r s)", "have \"contour_integral (part_circlepath 0 r 0 pi) (f s) = \n          integral {0..pi} (\\<lambda>t. f s (r * cis t) * r * \\<i> * cis t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. contour_integral (part_circlepath 0 r 0 pi) (f s) =\n    integral {0..pi}\n     (\\<lambda>t.\n         f s (complex_of_real r * cis t) * complex_of_real r * \\<i> * cis t)", "by (simp add: contour_integral_part_circlepath_eq)"], ["proof (state)\nthis:\n  contour_integral (part_circlepath 0 r 0 pi) (f s) =\n  integral {0..pi}\n   (\\<lambda>t.\n       f s (complex_of_real r * cis t) * complex_of_real r * \\<i> * cis t)\n\ngoal (1 subgoal):\n 1. contour_integral (part_circlepath 0 r 0 pi) (f s) =\n    integral {0..pi} (h r s)", "also"], ["proof (state)\nthis:\n  contour_integral (part_circlepath 0 r 0 pi) (f s) =\n  integral {0..pi}\n   (\\<lambda>t.\n       f s (complex_of_real r * cis t) * complex_of_real r * \\<i> * cis t)\n\ngoal (1 subgoal):\n 1. contour_integral (part_circlepath 0 r 0 pi) (f s) =\n    integral {0..pi} (h r s)", "have \"integral {0..pi} (\\<lambda>t. f s (r * cis t) * r * \\<i> * cis t) = integral {0..pi} (h r s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {0..pi}\n     (\\<lambda>t.\n         f s (complex_of_real r * cis t) * complex_of_real r * \\<i> *\n         cis t) =\n    integral {0..pi} (h r s)", "proof (intro integral_cong)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..pi} \\<Longrightarrow>\n       f s (complex_of_real r * cis x) * complex_of_real r * \\<i> * cis x =\n       h r s x", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..pi} \\<Longrightarrow>\n       f s (complex_of_real r * cis x) * complex_of_real r * \\<i> * cis x =\n       h r s x", "assume t: \"t \\<in> {0..pi}\""], ["proof (state)\nthis:\n  t \\<in> {0..pi}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..pi} \\<Longrightarrow>\n       f s (complex_of_real r * cis x) * complex_of_real r * \\<i> * cis x =\n       h r s x", "have \"-(pi / 2) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (pi / 2) < 0", "by simp"], ["proof (state)\nthis:\n  - (pi / 2) < 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..pi} \\<Longrightarrow>\n       f s (complex_of_real r * cis x) * complex_of_real r * \\<i> * cis x =\n       h r s x", "also"], ["proof (state)\nthis:\n  - (pi / 2) < 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..pi} \\<Longrightarrow>\n       f s (complex_of_real r * cis x) * complex_of_real r * \\<i> * cis x =\n       h r s x", "have \"0 \\<le> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> t", "using t"], ["proof (prove)\nusing this:\n  t \\<in> {0..pi}\n\ngoal (1 subgoal):\n 1. 0 \\<le> t", "by simp"], ["proof (state)\nthis:\n  0 \\<le> t\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..pi} \\<Longrightarrow>\n       f s (complex_of_real r * cis x) * complex_of_real r * \\<i> * cis x =\n       h r s x", "finally"], ["proof (chain)\npicking this:\n  - (pi / 2) < t", "have \"t \\<in> {-(pi/2)<..3/2*pi}\""], ["proof (prove)\nusing this:\n  - (pi / 2) < t\n\ngoal (1 subgoal):\n 1. t \\<in> {- (pi / 2)<..3 / 2 * pi}", "using t"], ["proof (prove)\nusing this:\n  - (pi / 2) < t\n  t \\<in> {0..pi}\n\ngoal (1 subgoal):\n 1. t \\<in> {- (pi / 2)<..3 / 2 * pi}", "by auto"], ["proof (state)\nthis:\n  t \\<in> {- (pi / 2)<..3 / 2 * pi}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..pi} \\<Longrightarrow>\n       f s (complex_of_real r * cis x) * complex_of_real r * \\<i> * cis x =\n       h r s x", "thus \"f s (r * cis t) * r * \\<i> * cis t = h r s t\""], ["proof (prove)\nusing this:\n  t \\<in> {- (pi / 2)<..3 / 2 * pi}\n\ngoal (1 subgoal):\n 1. f s (complex_of_real r * cis t) * complex_of_real r * \\<i> * cis t =\n    h r s t", "using r"], ["proof (prove)\nusing this:\n  t \\<in> {- (pi / 2)<..3 / 2 * pi}\n  0 < r\n\ngoal (1 subgoal):\n 1. f s (complex_of_real r * cis t) * complex_of_real r * \\<i> * cis t =\n    h r s t", "by (simp add: f_def Ln'_times_of_real Ln'_cis h_def Ln_Reals_eq)"], ["proof (state)\nthis:\n  f s (complex_of_real r * cis t) * complex_of_real r * \\<i> * cis t =\n  h r s t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  integral {0..pi}\n   (\\<lambda>t.\n       f s (complex_of_real r * cis t) * complex_of_real r * \\<i> * cis t) =\n  integral {0..pi} (h r s)\n\ngoal (1 subgoal):\n 1. contour_integral (part_circlepath 0 r 0 pi) (f s) =\n    integral {0..pi} (h r s)", "finally"], ["proof (chain)\npicking this:\n  contour_integral (part_circlepath 0 r 0 pi) (f s) =\n  integral {0..pi} (h r s)", "show ?thesis"], ["proof (prove)\nusing this:\n  contour_integral (part_circlepath 0 r 0 pi) (f s) =\n  integral {0..pi} (h r s)\n\ngoal (1 subgoal):\n 1. contour_integral (part_circlepath 0 r 0 pi) (f s) =\n    integral {0..pi} (h r s)", "."], ["proof (state)\nthis:\n  contour_integral (part_circlepath 0 r 0 pi) (f s) =\n  integral {0..pi} (h r s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma integral_g_holomorphic:\n  assumes \"b > 0\"\n  shows   \"(\\<lambda>s. integral {b..c} (g s)) holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral {b..c} (g s)) holomorphic_on A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral {b..c} (g s)) holomorphic_on A", "define g' where \"g' = (\\<lambda>s t. - (of_real t powr (-s)) * complex_of_real (ln t) * \n                          of_real (exp (- (a * t))) / of_real (1 - exp (- t)))\""], ["proof (state)\nthis:\n  g' =\n  (\\<lambda>s t.\n      - (complex_of_real t powr - s) * complex_of_real (ln t) *\n      complex_of_real (exp (- (a * t))) /\n      complex_of_real (1 - exp (- t)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral {b..c} (g s)) holomorphic_on A", "have \"(\\<lambda>s. integral (cbox b c) (g s)) holomorphic_on UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral (cbox b c) (g s)) holomorphic_on UNIV", "proof (rule leibniz_rule_holomorphic)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>s \\<in> UNIV; t \\<in> cbox b c\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. g s t) has_field_derivative ?fx s t)\n                          (at s)\n 2. \\<And>s. s \\<in> UNIV \\<Longrightarrow> g s integrable_on cbox b c\n 3. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). ?fx s t)\n 4. convex UNIV", "fix s :: complex and t :: real"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>s \\<in> UNIV; t \\<in> cbox b c\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. g s t) has_field_derivative ?fx s t)\n                          (at s)\n 2. \\<And>s. s \\<in> UNIV \\<Longrightarrow> g s integrable_on cbox b c\n 3. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). ?fx s t)\n 4. convex UNIV", "assume \"t \\<in> cbox b c\""], ["proof (state)\nthis:\n  t \\<in> cbox b c\n\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>s \\<in> UNIV; t \\<in> cbox b c\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. g s t) has_field_derivative ?fx s t)\n                          (at s)\n 2. \\<And>s. s \\<in> UNIV \\<Longrightarrow> g s integrable_on cbox b c\n 3. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). ?fx s t)\n 4. convex UNIV", "thus \"((\\<lambda>s. g s t) has_field_derivative g' s t) (at s)\""], ["proof (prove)\nusing this:\n  t \\<in> cbox b c\n\ngoal (1 subgoal):\n 1. ((\\<lambda>s. g s t) has_field_derivative g' s t) (at s)", "using assms"], ["proof (prove)\nusing this:\n  t \\<in> cbox b c\n  0 < b\n\ngoal (1 subgoal):\n 1. ((\\<lambda>s. g s t) has_field_derivative g' s t) (at s)", "by (auto simp: g_def g'_def powr_def Ln_Reals_eq intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>s. g s t) has_field_derivative g' s t) (at s)\n\ngoal (3 subgoals):\n 1. \\<And>s. s \\<in> UNIV \\<Longrightarrow> g s integrable_on cbox b c\n 2. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). g' s t)\n 3. convex UNIV", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>s. s \\<in> UNIV \\<Longrightarrow> g s integrable_on cbox b c\n 2. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). g' s t)\n 3. convex UNIV", "fix s"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>s. s \\<in> UNIV \\<Longrightarrow> g s integrable_on cbox b c\n 2. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). g' s t)\n 3. convex UNIV", "show \"g s integrable_on cbox b c\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. g s integrable_on cbox b c", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n        complex_of_real (1 - exp (- x))) integrable_on\n    cbox b c", "using assms"], ["proof (prove)\nusing this:\n  0 < b\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n        complex_of_real (1 - exp (- x))) integrable_on\n    cbox b c", "by (intro integrable_continuous continuous_intros) auto"], ["proof (state)\nthis:\n  g ?s integrable_on cbox b c\n\ngoal (2 subgoals):\n 1. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). g' s t)\n 2. convex UNIV", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). g' s t)\n 2. convex UNIV", "show \"continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). g' s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). g' s t)", "using assms"], ["proof (prove)\nusing this:\n  0 < b\n\ngoal (1 subgoal):\n 1. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). g' s t)", "by (auto simp: g'_def case_prod_unfold intro!: continuous_intros)"], ["proof (state)\nthis:\n  continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). g' s t)\n\ngoal (1 subgoal):\n 1. convex UNIV", "qed auto"], ["proof (state)\nthis:\n  (\\<lambda>s. integral (cbox b c) (g s)) holomorphic_on UNIV\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral {b..c} (g s)) holomorphic_on A", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>s. integral (cbox b c) (g s)) holomorphic_on UNIV\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral {b..c} (g s)) holomorphic_on A", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>s. integral {b..c} (g s)) holomorphic_on A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma integral_h_holomorphic:\n  assumes r: \"r \\<in> {0<..<2}\"\n  shows   \"(\\<lambda>s. integral {b..c} (h r s)) holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral {b..c} (h r s)) holomorphic_on A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral {b..c} (h r s)) holomorphic_on A", "have no_sing: \"exp (r * cis t) \\<noteq> 1\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (complex_of_real r * cis t) \\<noteq> 1", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. exp (complex_of_real r * cis t) = 1 \\<Longrightarrow> False", "define z where \"z = r * cis t\""], ["proof (state)\nthis:\n  z = complex_of_real r * cis t\n\ngoal (1 subgoal):\n 1. exp (complex_of_real r * cis t) = 1 \\<Longrightarrow> False", "assume \"exp z = 1\""], ["proof (state)\nthis:\n  exp z = 1\n\ngoal (1 subgoal):\n 1. exp (complex_of_real r * cis t) = 1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  exp z = 1", "obtain n where \"norm z = 2 * pi * of_int \\<bar>n\\<bar>\""], ["proof (prove)\nusing this:\n  exp z = 1\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        cmod z = 2 * pi * real_of_int \\<bar>n\\<bar> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: exp_eq_1 cmod_def abs_mult)"], ["proof (state)\nthis:\n  cmod z = 2 * pi * real_of_int \\<bar>n\\<bar>\n\ngoal (1 subgoal):\n 1. exp (complex_of_real r * cis t) = 1 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  cmod z = 2 * pi * real_of_int \\<bar>n\\<bar>\n\ngoal (1 subgoal):\n 1. exp (complex_of_real r * cis t) = 1 \\<Longrightarrow> False", "have \"norm z = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod z = r", "using r"], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. cmod z = r", "by (simp add: z_def norm_mult)"], ["proof (state)\nthis:\n  cmod z = r\n\ngoal (1 subgoal):\n 1. exp (complex_of_real r * cis t) = 1 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  cmod z = 2 * pi * real_of_int \\<bar>n\\<bar>\n  cmod z = r", "have r_eq: \"r = 2 * pi * of_int \\<bar>n\\<bar>\""], ["proof (prove)\nusing this:\n  cmod z = 2 * pi * real_of_int \\<bar>n\\<bar>\n  cmod z = r\n\ngoal (1 subgoal):\n 1. r = 2 * pi * real_of_int \\<bar>n\\<bar>", "by simp"], ["proof (state)\nthis:\n  r = 2 * pi * real_of_int \\<bar>n\\<bar>\n\ngoal (1 subgoal):\n 1. exp (complex_of_real r * cis t) = 1 \\<Longrightarrow> False", "with r"], ["proof (chain)\npicking this:\n  r \\<in> {0<..<2}\n  r = 2 * pi * real_of_int \\<bar>n\\<bar>", "have \"n \\<noteq> 0\""], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2}\n  r = 2 * pi * real_of_int \\<bar>n\\<bar>\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. exp (complex_of_real r * cis t) = 1 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. exp (complex_of_real r * cis t) = 1 \\<Longrightarrow> False", "from r"], ["proof (chain)\npicking this:\n  r \\<in> {0<..<2}", "have \"r < 2 * pi\""], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. r < 2 * pi", "using pi_gt3"], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2}\n  3 < pi\n\ngoal (1 subgoal):\n 1. r < 2 * pi", "by simp"], ["proof (state)\nthis:\n  r < 2 * pi\n\ngoal (1 subgoal):\n 1. exp (complex_of_real r * cis t) = 1 \\<Longrightarrow> False", "with r_eq"], ["proof (chain)\npicking this:\n  r = 2 * pi * real_of_int \\<bar>n\\<bar>\n  r < 2 * pi", "have \"\\<bar>n\\<bar> < 1\""], ["proof (prove)\nusing this:\n  r = 2 * pi * real_of_int \\<bar>n\\<bar>\n  r < 2 * pi\n\ngoal (1 subgoal):\n 1. \\<bar>n\\<bar> < 1", "by simp"], ["proof (state)\nthis:\n  \\<bar>n\\<bar> < 1\n\ngoal (1 subgoal):\n 1. exp (complex_of_real r * cis t) = 1 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  n \\<noteq> 0\n  \\<bar>n\\<bar> < 1", "show False"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n  \\<bar>n\\<bar> < 1\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  exp (complex_of_real r * cis ?t) \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral {b..c} (h r s)) holomorphic_on A", "define h' where \"h' = (\\<lambda>s t. exp (a * r * cis t - (ln r + \\<i> * t) * s) *\n                           (-ln r - \\<i> * t) * (r * \\<i> * cis t) / (1 - exp (r * cis t)))\""], ["proof (state)\nthis:\n  h' =\n  (\\<lambda>s t.\n      exp (complex_of_real (a * r) * cis t -\n           (complex_of_real (ln r) + \\<i> * complex_of_real t) * s) *\n      (complex_of_real (- ln r) - \\<i> * complex_of_real t) *\n      (complex_of_real r * \\<i> * cis t) /\n      (1 - exp (complex_of_real r * cis t)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral {b..c} (h r s)) holomorphic_on A", "have \"(\\<lambda>s. integral (cbox b c) (h r s)) holomorphic_on UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral (cbox b c) (h r s)) holomorphic_on UNIV", "proof (rule leibniz_rule_holomorphic)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>s \\<in> UNIV; t \\<in> cbox b c\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. h r s t) has_field_derivative\n                          ?fx s t)\n                          (at s)\n 2. \\<And>s. s \\<in> UNIV \\<Longrightarrow> h r s integrable_on cbox b c\n 3. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). ?fx s t)\n 4. convex UNIV", "fix s t"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>s \\<in> UNIV; t \\<in> cbox b c\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. h r s t) has_field_derivative\n                          ?fx s t)\n                          (at s)\n 2. \\<And>s. s \\<in> UNIV \\<Longrightarrow> h r s integrable_on cbox b c\n 3. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). ?fx s t)\n 4. convex UNIV", "assume \"t \\<in> cbox b c\""], ["proof (state)\nthis:\n  t \\<in> cbox b c\n\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>s \\<in> UNIV; t \\<in> cbox b c\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. h r s t) has_field_derivative\n                          ?fx s t)\n                          (at s)\n 2. \\<And>s. s \\<in> UNIV \\<Longrightarrow> h r s integrable_on cbox b c\n 3. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). ?fx s t)\n 4. convex UNIV", "thus \"((\\<lambda>s. h r s t) has_field_derivative h' s t) (at s)\""], ["proof (prove)\nusing this:\n  t \\<in> cbox b c\n\ngoal (1 subgoal):\n 1. ((\\<lambda>s. h r s t) has_field_derivative h' s t) (at s)", "using no_sing r"], ["proof (prove)\nusing this:\n  t \\<in> cbox b c\n  exp (complex_of_real r * cis ?t) \\<noteq> 1\n  r \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>s. h r s t) has_field_derivative h' s t) (at s)", "by (auto intro!: derivative_eq_intros simp: h_def h'_def mult_ac Ln_Reals_eq)"], ["proof (state)\nthis:\n  ((\\<lambda>s. h r s t) has_field_derivative h' s t) (at s)\n\ngoal (3 subgoals):\n 1. \\<And>s. s \\<in> UNIV \\<Longrightarrow> h r s integrable_on cbox b c\n 2. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). h' s t)\n 3. convex UNIV", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>s. s \\<in> UNIV \\<Longrightarrow> h r s integrable_on cbox b c\n 2. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). h' s t)\n 3. convex UNIV", "fix s"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>s. s \\<in> UNIV \\<Longrightarrow> h r s integrable_on cbox b c\n 2. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). h' s t)\n 3. convex UNIV", "show \"h r s integrable_on cbox b c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h r s integrable_on cbox b c", "using no_sing"], ["proof (prove)\nusing this:\n  exp (complex_of_real r * cis ?t) \\<noteq> 1\n\ngoal (1 subgoal):\n 1. h r s integrable_on cbox b c", "unfolding h_def"], ["proof (prove)\nusing this:\n  exp (complex_of_real r * cis ?t) \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>t.\n        complex_of_real r * \\<i> * cis t *\n        exp (complex_of_real a * (complex_of_real r * cis t) -\n             (Ln (complex_of_real r) + \\<i> * complex_of_real t) * s) /\n        (1 - exp (complex_of_real r * cis t))) integrable_on\n    cbox b c", "by (auto intro!: integrable_continuous_real continuous_intros)"], ["proof (state)\nthis:\n  h r s integrable_on cbox b c\n\ngoal (2 subgoals):\n 1. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). h' s t)\n 2. convex UNIV", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). h' s t)\n 2. convex UNIV", "show \"continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). h' s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). h' s t)", "using no_sing"], ["proof (prove)\nusing this:\n  exp (complex_of_real r * cis ?t) \\<noteq> 1\n\ngoal (1 subgoal):\n 1. continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). h' s t)", "by (auto simp: h'_def case_prod_unfold intro!: continuous_intros)"], ["proof (state)\nthis:\n  continuous_on (UNIV \\<times> cbox b c) (\\<lambda>(s, t). h' s t)\n\ngoal (1 subgoal):\n 1. convex UNIV", "qed auto"], ["proof (state)\nthis:\n  (\\<lambda>s. integral (cbox b c) (h r s)) holomorphic_on UNIV\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral {b..c} (h r s)) holomorphic_on A", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>s. integral (cbox b c) (h r s)) holomorphic_on UNIV\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral {b..c} (h r s)) holomorphic_on A", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>s. integral {b..c} (h r s)) holomorphic_on A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We now move on to the core result, which uses the Residue Theorem to relate a contour integral\n  along a semi-annulus to a partial sum of the periodic zeta function.\n\\<close>"], ["", "lemma hurwitz_formula_integral_semiannulus:\n  fixes N :: nat and r :: real and s :: complex\n  defines \"R \\<equiv> real (2 * N + 1) * pi\"\n  assumes \"r > 0\" and \"r < 2\"\n  shows \"exp (-\\<i> * pi * s) * integral {r..R} (\\<lambda>x. x powr (-s) * exp (-a * x) / (1 - exp (-x))) +\n         integral {r..R} (\\<lambda>x. x powr (-s) * exp (a * x) / (1 - exp x)) +\n         contour_integral (part_circlepath 0 R 0 pi) (f s) +\n         contour_integral (part_circlepath 0 r pi 0) (f s)\n         = -2 * pi * \\<i> * exp (- s * of_real pi * \\<i> / 2) * (\\<Sum>k\\<in>{0<..N}. Res s k)\" (is ?thesis1)\n    and \"f s contour_integrable_on hankel_semiannulus r N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N} &&&\n    f s contour_integrable_on hankel_semiannulus r N", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have \"2 < 1 * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 < 1 * pi", "using pi_gt3"], ["proof (prove)\nusing this:\n  3 < pi\n\ngoal (1 subgoal):\n 1. 2 < 1 * pi", "by simp"], ["proof (state)\nthis:\n  2 < 1 * pi\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "also"], ["proof (state)\nthis:\n  2 < 1 * pi\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have \"\\<dots> \\<le> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 * pi \\<le> R", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 * pi \\<le> real (2 * N + 1) * pi", "by (intro mult_right_mono) auto"], ["proof (state)\nthis:\n  1 * pi \\<le> R\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "finally"], ["proof (chain)\npicking this:\n  2 < R", "have \"R > 2\""], ["proof (prove)\nusing this:\n  2 < R\n\ngoal (1 subgoal):\n 1. 2 < R", "by (auto simp: R_def)"], ["proof (state)\nthis:\n  2 < R\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "note r_R = \\<open>r > 0\\<close> \\<open>r < 2\\<close> this\n\n  \\<comment>\\<open>We integrate along the edge of a semi-annulus in the upper half of the complex plane.\n     It consists of a big semicircle, a small semicircle, and two lines connecting the two\n     circles, one on the positive real axis and one on the negative real axis.\n\n     The integral along the big circle will vanish as the radius of the circle tends to \\<open>\\<infinity>\\<close>,\n     whereas the remaining path becomes a Hankel contour, and the integral along that Hankel\n     contour is what we are interested in, since it is connected to the Hurwitz zeta function.\\<close>"], ["proof (state)\nthis:\n  0 < r\n  r < 2\n  2 < R\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "define big_circle where \"big_circle = part_circlepath 0 R 0 pi\""], ["proof (state)\nthis:\n  big_circle = part_circlepath 0 R 0 pi\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "define small_circle where \"small_circle = part_circlepath 0 r pi 0\""], ["proof (state)\nthis:\n  small_circle = part_circlepath 0 r pi 0\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "define neg_line where \"neg_line = linepath (complex_of_real (-R)) (complex_of_real (-r))\""], ["proof (state)\nthis:\n  neg_line = linepath (complex_of_real (- R)) (complex_of_real (- r))\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "define pos_line where \"pos_line = linepath (complex_of_real r) (complex_of_real R)\""], ["proof (state)\nthis:\n  pos_line = linepath (complex_of_real r) (complex_of_real R)\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "define \\<gamma> where \"\\<gamma> = hankel_semiannulus r N\""], ["proof (state)\nthis:\n  \\<gamma> = hankel_semiannulus r N\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have \\<gamma>_altdef: \"\\<gamma> = big_circle +++ neg_line +++ small_circle +++ pos_line\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gamma> = big_circle +++ neg_line +++ small_circle +++ pos_line", "by (simp add: \\<gamma>_def R_def add_ac hankel_semiannulus_def big_circle_def\n                  neg_line_def small_circle_def pos_line_def)"], ["proof (state)\nthis:\n  \\<gamma> = big_circle +++ neg_line +++ small_circle +++ pos_line\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have [simp]: \"path \\<gamma>\" \"valid_path \\<gamma>\" \"pathfinish \\<gamma> = pathstart \\<gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path \\<gamma> &&&\n    valid_path \\<gamma> &&& pathfinish \\<gamma> = pathstart \\<gamma>", "by (simp_all add: \\<gamma>_def)\n\n  \\<comment>\\<open>The integrand has a branch cut along the non-positive imaginary axis and additional \n     simple poles at $2n\\pi i$ for any \\<open>n \\<in> \\<nat>\\<^sub>>\\<^sub>0\\<close>. The radius of the smaller circle will always\n     be less than $2\\pi$ and the radius of the bigger circle of the form $(2N+1)\\pi$, so we\n     always have precisely the first $N$ poles inside our path.\\<close>"], ["proof (state)\nthis:\n  path \\<gamma>\n  valid_path \\<gamma>\n  pathfinish \\<gamma> = pathstart \\<gamma>\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "define sngs where \"sngs = (\\<lambda>n. of_real (2 * pi * real n) * \\<i>) ` {0<..}\""], ["proof (state)\nthis:\n  sngs = (\\<lambda>n. complex_of_real (2 * pi * real n) * \\<i>) ` {0<..}\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "define sngs' where \"sngs' = (\\<lambda>n. of_real (2 * pi * real n) * \\<i>) ` {0<..N}\""], ["proof (state)\nthis:\n  sngs' = (\\<lambda>n. complex_of_real (2 * pi * real n) * \\<i>) ` {0<..N}\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have sngs_subset: \"sngs' \\<subseteq> sngs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sngs' \\<subseteq> sngs", "unfolding sngs_def sngs'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. complex_of_real (2 * pi * real n) * \\<i>) ` {0<..N}\n    \\<subseteq> (\\<lambda>n. complex_of_real (2 * pi * real n) * \\<i>) `\n                {0<..}", "by (intro image_mono) auto"], ["proof (state)\nthis:\n  sngs' \\<subseteq> sngs\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have closed_sngs [intro]: \"closed (sngs - sngs')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed (sngs - sngs')", "unfolding sngs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. closed\n     ((\\<lambda>n. complex_of_real (2 * pi * real n) * \\<i>) ` {0<..} -\n      sngs')", "proof (rule discrete_imp_closed[of \"2 * pi\"]; safe?)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < 2 * pi\n 2. \\<And>x n y na.\n       \\<lbrakk>complex_of_real (2 * pi * real n) * \\<i> \\<notin> sngs';\n        0 < n; complex_of_real (2 * pi * real na) * \\<i> \\<notin> sngs';\n        0 < na;\n        dist (complex_of_real (2 * pi * real na) * \\<i>)\n         (complex_of_real (2 * pi * real n) * \\<i>)\n        < 2 * pi\\<rbrakk>\n       \\<Longrightarrow> complex_of_real (2 * pi * real na) * \\<i> =\n                         complex_of_real (2 * pi * real n) * \\<i>", "fix m n :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < 2 * pi\n 2. \\<And>x n y na.\n       \\<lbrakk>complex_of_real (2 * pi * real n) * \\<i> \\<notin> sngs';\n        0 < n; complex_of_real (2 * pi * real na) * \\<i> \\<notin> sngs';\n        0 < na;\n        dist (complex_of_real (2 * pi * real na) * \\<i>)\n         (complex_of_real (2 * pi * real n) * \\<i>)\n        < 2 * pi\\<rbrakk>\n       \\<Longrightarrow> complex_of_real (2 * pi * real na) * \\<i> =\n                         complex_of_real (2 * pi * real n) * \\<i>", "assume \"dist (of_real (2 * pi * real m) * \\<i>) (of_real (2 * pi * real n) * \\<i>) < 2 * pi\""], ["proof (state)\nthis:\n  dist (complex_of_real (2 * pi * real m) * \\<i>)\n   (complex_of_real (2 * pi * real n) * \\<i>)\n  < 2 * pi\n\ngoal (2 subgoals):\n 1. 0 < 2 * pi\n 2. \\<And>x n y na.\n       \\<lbrakk>complex_of_real (2 * pi * real n) * \\<i> \\<notin> sngs';\n        0 < n; complex_of_real (2 * pi * real na) * \\<i> \\<notin> sngs';\n        0 < na;\n        dist (complex_of_real (2 * pi * real na) * \\<i>)\n         (complex_of_real (2 * pi * real n) * \\<i>)\n        < 2 * pi\\<rbrakk>\n       \\<Longrightarrow> complex_of_real (2 * pi * real na) * \\<i> =\n                         complex_of_real (2 * pi * real n) * \\<i>", "also"], ["proof (state)\nthis:\n  dist (complex_of_real (2 * pi * real m) * \\<i>)\n   (complex_of_real (2 * pi * real n) * \\<i>)\n  < 2 * pi\n\ngoal (2 subgoals):\n 1. 0 < 2 * pi\n 2. \\<And>x n y na.\n       \\<lbrakk>complex_of_real (2 * pi * real n) * \\<i> \\<notin> sngs';\n        0 < n; complex_of_real (2 * pi * real na) * \\<i> \\<notin> sngs';\n        0 < na;\n        dist (complex_of_real (2 * pi * real na) * \\<i>)\n         (complex_of_real (2 * pi * real n) * \\<i>)\n        < 2 * pi\\<rbrakk>\n       \\<Longrightarrow> complex_of_real (2 * pi * real na) * \\<i> =\n                         complex_of_real (2 * pi * real n) * \\<i>", "have \"dist (of_real (2 * pi * real m) * \\<i>) (of_real (2 * pi * real n) * \\<i>) =\n                norm (of_real (2 * pi * real m) * \\<i> - of_real (2 * pi * real n) * \\<i>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (complex_of_real (2 * pi * real m) * \\<i>)\n     (complex_of_real (2 * pi * real n) * \\<i>) =\n    cmod\n     (complex_of_real (2 * pi * real m) * \\<i> -\n      complex_of_real (2 * pi * real n) * \\<i>)", "by (simp add: dist_norm)"], ["proof (state)\nthis:\n  dist (complex_of_real (2 * pi * real m) * \\<i>)\n   (complex_of_real (2 * pi * real n) * \\<i>) =\n  cmod\n   (complex_of_real (2 * pi * real m) * \\<i> -\n    complex_of_real (2 * pi * real n) * \\<i>)\n\ngoal (2 subgoals):\n 1. 0 < 2 * pi\n 2. \\<And>x n y na.\n       \\<lbrakk>complex_of_real (2 * pi * real n) * \\<i> \\<notin> sngs';\n        0 < n; complex_of_real (2 * pi * real na) * \\<i> \\<notin> sngs';\n        0 < na;\n        dist (complex_of_real (2 * pi * real na) * \\<i>)\n         (complex_of_real (2 * pi * real n) * \\<i>)\n        < 2 * pi\\<rbrakk>\n       \\<Longrightarrow> complex_of_real (2 * pi * real na) * \\<i> =\n                         complex_of_real (2 * pi * real n) * \\<i>", "also"], ["proof (state)\nthis:\n  dist (complex_of_real (2 * pi * real m) * \\<i>)\n   (complex_of_real (2 * pi * real n) * \\<i>) =\n  cmod\n   (complex_of_real (2 * pi * real m) * \\<i> -\n    complex_of_real (2 * pi * real n) * \\<i>)\n\ngoal (2 subgoals):\n 1. 0 < 2 * pi\n 2. \\<And>x n y na.\n       \\<lbrakk>complex_of_real (2 * pi * real n) * \\<i> \\<notin> sngs';\n        0 < n; complex_of_real (2 * pi * real na) * \\<i> \\<notin> sngs';\n        0 < na;\n        dist (complex_of_real (2 * pi * real na) * \\<i>)\n         (complex_of_real (2 * pi * real n) * \\<i>)\n        < 2 * pi\\<rbrakk>\n       \\<Longrightarrow> complex_of_real (2 * pi * real na) * \\<i> =\n                         complex_of_real (2 * pi * real n) * \\<i>", "have \"of_real (2 * pi * real m) * \\<i> - of_real (2 * pi * real n) * \\<i> =\n                 of_real (2 * pi) * \\<i> * of_int (int m - int n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (2 * pi * real m) * \\<i> -\n    complex_of_real (2 * pi * real n) * \\<i> =\n    complex_of_real (2 * pi) * \\<i> * of_int (int m - int n)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  complex_of_real (2 * pi * real m) * \\<i> -\n  complex_of_real (2 * pi * real n) * \\<i> =\n  complex_of_real (2 * pi) * \\<i> * of_int (int m - int n)\n\ngoal (2 subgoals):\n 1. 0 < 2 * pi\n 2. \\<And>x n y na.\n       \\<lbrakk>complex_of_real (2 * pi * real n) * \\<i> \\<notin> sngs';\n        0 < n; complex_of_real (2 * pi * real na) * \\<i> \\<notin> sngs';\n        0 < na;\n        dist (complex_of_real (2 * pi * real na) * \\<i>)\n         (complex_of_real (2 * pi * real n) * \\<i>)\n        < 2 * pi\\<rbrakk>\n       \\<Longrightarrow> complex_of_real (2 * pi * real na) * \\<i> =\n                         complex_of_real (2 * pi * real n) * \\<i>", "also"], ["proof (state)\nthis:\n  complex_of_real (2 * pi * real m) * \\<i> -\n  complex_of_real (2 * pi * real n) * \\<i> =\n  complex_of_real (2 * pi) * \\<i> * of_int (int m - int n)\n\ngoal (2 subgoals):\n 1. 0 < 2 * pi\n 2. \\<And>x n y na.\n       \\<lbrakk>complex_of_real (2 * pi * real n) * \\<i> \\<notin> sngs';\n        0 < n; complex_of_real (2 * pi * real na) * \\<i> \\<notin> sngs';\n        0 < na;\n        dist (complex_of_real (2 * pi * real na) * \\<i>)\n         (complex_of_real (2 * pi * real n) * \\<i>)\n        < 2 * pi\\<rbrakk>\n       \\<Longrightarrow> complex_of_real (2 * pi * real na) * \\<i> =\n                         complex_of_real (2 * pi * real n) * \\<i>", "have \"norm \\<dots> = 2 * pi * of_int \\<bar>int m - int n\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (complex_of_real (2 * pi) * \\<i> * of_int (int m - int n)) =\n    2 * pi * real_of_int \\<bar>int m - int n\\<bar>", "unfolding norm_mult norm_of_int"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (complex_of_real (2 * pi)) * cmod \\<i> *\n    \\<bar>real_of_int (int m - int n)\\<bar> =\n    2 * pi * real_of_int \\<bar>int m - int n\\<bar>", "by (simp add: norm_mult)"], ["proof (state)\nthis:\n  cmod (complex_of_real (2 * pi) * \\<i> * of_int (int m - int n)) =\n  2 * pi * real_of_int \\<bar>int m - int n\\<bar>\n\ngoal (2 subgoals):\n 1. 0 < 2 * pi\n 2. \\<And>x n y na.\n       \\<lbrakk>complex_of_real (2 * pi * real n) * \\<i> \\<notin> sngs';\n        0 < n; complex_of_real (2 * pi * real na) * \\<i> \\<notin> sngs';\n        0 < na;\n        dist (complex_of_real (2 * pi * real na) * \\<i>)\n         (complex_of_real (2 * pi * real n) * \\<i>)\n        < 2 * pi\\<rbrakk>\n       \\<Longrightarrow> complex_of_real (2 * pi * real na) * \\<i> =\n                         complex_of_real (2 * pi * real n) * \\<i>", "finally"], ["proof (chain)\npicking this:\n  2 * pi * real_of_int \\<bar>int m - int n\\<bar> < 2 * pi", "have \"\\<bar>real m - real n\\<bar> < 1\""], ["proof (prove)\nusing this:\n  2 * pi * real_of_int \\<bar>int m - int n\\<bar> < 2 * pi\n\ngoal (1 subgoal):\n 1. \\<bar>real m - real n\\<bar> < 1", "by simp"], ["proof (state)\nthis:\n  \\<bar>real m - real n\\<bar> < 1\n\ngoal (2 subgoals):\n 1. 0 < 2 * pi\n 2. \\<And>x n y na.\n       \\<lbrakk>complex_of_real (2 * pi * real n) * \\<i> \\<notin> sngs';\n        0 < n; complex_of_real (2 * pi * real na) * \\<i> \\<notin> sngs';\n        0 < na;\n        dist (complex_of_real (2 * pi * real na) * \\<i>)\n         (complex_of_real (2 * pi * real n) * \\<i>)\n        < 2 * pi\\<rbrakk>\n       \\<Longrightarrow> complex_of_real (2 * pi * real na) * \\<i> =\n                         complex_of_real (2 * pi * real n) * \\<i>", "hence \"m = n\""], ["proof (prove)\nusing this:\n  \\<bar>real m - real n\\<bar> < 1\n\ngoal (1 subgoal):\n 1. m = n", "by linarith"], ["proof (state)\nthis:\n  m = n\n\ngoal (2 subgoals):\n 1. 0 < 2 * pi\n 2. \\<And>x n y na.\n       \\<lbrakk>complex_of_real (2 * pi * real n) * \\<i> \\<notin> sngs';\n        0 < n; complex_of_real (2 * pi * real na) * \\<i> \\<notin> sngs';\n        0 < na;\n        dist (complex_of_real (2 * pi * real na) * \\<i>)\n         (complex_of_real (2 * pi * real n) * \\<i>)\n        < 2 * pi\\<rbrakk>\n       \\<Longrightarrow> complex_of_real (2 * pi * real na) * \\<i> =\n                         complex_of_real (2 * pi * real n) * \\<i>", "thus \"of_real (2 * pi * real m) * \\<i> = of_real (2 * pi * real n) * \\<i>\""], ["proof (prove)\nusing this:\n  m = n\n\ngoal (1 subgoal):\n 1. complex_of_real (2 * pi * real m) * \\<i> =\n    complex_of_real (2 * pi * real n) * \\<i>", "by simp"], ["proof (state)\nthis:\n  complex_of_real (2 * pi * real m) * \\<i> =\n  complex_of_real (2 * pi * real n) * \\<i>\n\ngoal (1 subgoal):\n 1. 0 < 2 * pi", "qed auto\n\n  \\<comment>\\<open>We define an area within which the integrand is holomorphic. Choosing this area as big as\n     possible makes things easier later on, so we only remove the branch cut and the poles.\\<close>"], ["proof (state)\nthis:\n  closed (sngs - sngs')\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "define S where \"S = - {z. Re z = 0 \\<and> Im z \\<le> 0} - (sngs - sngs')\""], ["proof (state)\nthis:\n  S = - {z. Re z = 0 \\<and> Im z \\<le> 0} - (sngs - sngs')\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "define S' where \"S' = - {z. Re z = 0 \\<and> Im z \\<le> 0}\""], ["proof (state)\nthis:\n  S' = - {z. Re z = 0 \\<and> Im z \\<le> 0}\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have sngs: \"exp z = 1 \\<longleftrightarrow> z \\<in> sngs\" if \"Re z \\<noteq> 0 \\<or> Im z > 0\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. (exp z = 1) = (z \\<in> sngs)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. exp z = 1 \\<Longrightarrow> z \\<in> sngs\n 2. z \\<in> sngs \\<Longrightarrow> exp z = 1", "assume \"exp z = 1\""], ["proof (state)\nthis:\n  exp z = 1\n\ngoal (2 subgoals):\n 1. exp z = 1 \\<Longrightarrow> z \\<in> sngs\n 2. z \\<in> sngs \\<Longrightarrow> exp z = 1", "then"], ["proof (chain)\npicking this:\n  exp z = 1", "obtain n where n: \"z = 2 * pi * of_int n * \\<i>\""], ["proof (prove)\nusing this:\n  exp z = 1\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        z =\n        complex_of_real (2 * pi * real_of_int n) * \\<i> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding exp_eq_1"], ["proof (prove)\nusing this:\n  Re z = 0 \\<and> (\\<exists>n. Im z = real_of_int (2 * n) * pi)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        z =\n        complex_of_real (2 * pi * real_of_int n) * \\<i> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: complex_eq_iff mult_ac)"], ["proof (state)\nthis:\n  z = complex_of_real (2 * pi * real_of_int n) * \\<i>\n\ngoal (2 subgoals):\n 1. exp z = 1 \\<Longrightarrow> z \\<in> sngs\n 2. z \\<in> sngs \\<Longrightarrow> exp z = 1", "moreover"], ["proof (state)\nthis:\n  z = complex_of_real (2 * pi * real_of_int n) * \\<i>\n\ngoal (2 subgoals):\n 1. exp z = 1 \\<Longrightarrow> z \\<in> sngs\n 2. z \\<in> sngs \\<Longrightarrow> exp z = 1", "from n and pi_gt_zero and that"], ["proof (chain)\npicking this:\n  z = complex_of_real (2 * pi * real_of_int n) * \\<i>\n  0 < pi\n  Re z \\<noteq> 0 \\<or> 0 < Im z", "have \"n > 0\""], ["proof (prove)\nusing this:\n  z = complex_of_real (2 * pi * real_of_int n) * \\<i>\n  0 < pi\n  Re z \\<noteq> 0 \\<or> 0 < Im z\n\ngoal (1 subgoal):\n 1. 0 < n", "by (auto simp: zero_less_mult_iff)"], ["proof (state)\nthis:\n  0 < n\n\ngoal (2 subgoals):\n 1. exp z = 1 \\<Longrightarrow> z \\<in> sngs\n 2. z \\<in> sngs \\<Longrightarrow> exp z = 1", "ultimately"], ["proof (chain)\npicking this:\n  z = complex_of_real (2 * pi * real_of_int n) * \\<i>\n  0 < n", "have \"z = of_real (2 * pi * nat n) * \\<i>\" and \"nat n \\<in> {0<..}\""], ["proof (prove)\nusing this:\n  z = complex_of_real (2 * pi * real_of_int n) * \\<i>\n  0 < n\n\ngoal (1 subgoal):\n 1. z = complex_of_real (2 * pi * real (nat n)) * \\<i> &&&\n    nat n \\<in> {0<..}", "by auto"], ["proof (state)\nthis:\n  z = complex_of_real (2 * pi * real (nat n)) * \\<i>\n  nat n \\<in> {0<..}\n\ngoal (2 subgoals):\n 1. exp z = 1 \\<Longrightarrow> z \\<in> sngs\n 2. z \\<in> sngs \\<Longrightarrow> exp z = 1", "thus \"z \\<in> sngs\""], ["proof (prove)\nusing this:\n  z = complex_of_real (2 * pi * real (nat n)) * \\<i>\n  nat n \\<in> {0<..}\n\ngoal (1 subgoal):\n 1. z \\<in> sngs", "unfolding sngs_def"], ["proof (prove)\nusing this:\n  z = complex_of_real (2 * pi * real (nat n)) * \\<i>\n  nat n \\<in> {0<..}\n\ngoal (1 subgoal):\n 1. z \\<in> (\\<lambda>n. complex_of_real (2 * pi * real n) * \\<i>) ` {0<..}", "by blast"], ["proof (state)\nthis:\n  z \\<in> sngs\n\ngoal (1 subgoal):\n 1. z \\<in> sngs \\<Longrightarrow> exp z = 1", "qed (insert that, auto simp: sngs_def exp_eq_polar)\n\n  \\<comment>\\<open>We show that the path stays within the well-behaved area.\\<close>"], ["proof (state)\nthis:\n  Re ?z \\<noteq> 0 \\<or> 0 < Im ?z \\<Longrightarrow>\n  (exp ?z = 1) = (?z \\<in> sngs)\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have \"path_image neg_line = of_real ` {-R..-r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path_image neg_line = complex_of_real ` {- R..- r}", "using r_R"], ["proof (prove)\nusing this:\n  0 < r\n  r < 2\n  2 < R\n\ngoal (1 subgoal):\n 1. path_image neg_line = complex_of_real ` {- R..- r}", "by (auto simp: neg_line_def closed_segment_Reals closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  path_image neg_line = complex_of_real ` {- R..- r}\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "hence \"path_image neg_line \\<subseteq> S - sngs'\""], ["proof (prove)\nusing this:\n  path_image neg_line = complex_of_real ` {- R..- r}\n\ngoal (1 subgoal):\n 1. path_image neg_line \\<subseteq> S - sngs'", "using r_R sngs_subset"], ["proof (prove)\nusing this:\n  path_image neg_line = complex_of_real ` {- R..- r}\n  0 < r\n  r < 2\n  2 < R\n  sngs' \\<subseteq> sngs\n\ngoal (1 subgoal):\n 1. path_image neg_line \\<subseteq> S - sngs'", "by (auto simp: S_def sngs_def complex_eq_iff)"], ["proof (state)\nthis:\n  path_image neg_line \\<subseteq> S - sngs'\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have \"path_image pos_line = of_real ` {r..R}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path_image pos_line = complex_of_real ` {r..R}", "using r_R"], ["proof (prove)\nusing this:\n  0 < r\n  r < 2\n  2 < R\n\ngoal (1 subgoal):\n 1. path_image pos_line = complex_of_real ` {r..R}", "by (auto simp: pos_line_def closed_segment_Reals closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  path_image pos_line = complex_of_real ` {r..R}\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "hence \"path_image pos_line \\<subseteq> S - sngs'\""], ["proof (prove)\nusing this:\n  path_image pos_line = complex_of_real ` {r..R}\n\ngoal (1 subgoal):\n 1. path_image pos_line \\<subseteq> S - sngs'", "using r_R sngs_subset"], ["proof (prove)\nusing this:\n  path_image pos_line = complex_of_real ` {r..R}\n  0 < r\n  r < 2\n  2 < R\n  sngs' \\<subseteq> sngs\n\ngoal (1 subgoal):\n 1. path_image pos_line \\<subseteq> S - sngs'", "by (auto simp: S_def sngs_def complex_eq_iff)"], ["proof (state)\nthis:\n  path_image pos_line \\<subseteq> S - sngs'\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have part_circlepath_in_S: \"z \\<in> S - sngs'\"\n    if \"z \\<in> path_image (part_circlepath 0 r' 0 pi) \\<or> z \\<in> path_image (part_circlepath 0 r' pi 0)\"\n    and \"r' > 0\" \"r' \\<notin> (\\<lambda>n. 2 * pi * real n) ` {0<..}\" for z r'"], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> S - sngs'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<in> S - sngs'", "have z: \"norm z = r' \\<and> Im z \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod z = r' \\<and> 0 \\<le> Im z", "using that"], ["proof (prove)\nusing this:\n  z \\<in> path_image (part_circlepath 0 r' 0 pi) \\<or>\n  z \\<in> path_image (part_circlepath 0 r' pi 0)\n  0 < r'\n  r' \\<notin> (\\<lambda>n. 2 * pi * real n) ` {0<..}\n\ngoal (1 subgoal):\n 1. cmod z = r' \\<and> 0 \\<le> Im z", "by (auto simp: path_image_def part_circlepath_def norm_mult Im_exp linepath_def\n               intro!: mult_nonneg_nonneg sin_ge_zero)"], ["proof (state)\nthis:\n  cmod z = r' \\<and> 0 \\<le> Im z\n\ngoal (1 subgoal):\n 1. z \\<in> S - sngs'", "hence \"Re z \\<noteq> 0 \\<or> Im z > 0\""], ["proof (prove)\nusing this:\n  cmod z = r' \\<and> 0 \\<le> Im z\n\ngoal (1 subgoal):\n 1. Re z \\<noteq> 0 \\<or> 0 < Im z", "using that"], ["proof (prove)\nusing this:\n  cmod z = r' \\<and> 0 \\<le> Im z\n  z \\<in> path_image (part_circlepath 0 r' 0 pi) \\<or>\n  z \\<in> path_image (part_circlepath 0 r' pi 0)\n  0 < r'\n  r' \\<notin> (\\<lambda>n. 2 * pi * real n) ` {0<..}\n\ngoal (1 subgoal):\n 1. Re z \\<noteq> 0 \\<or> 0 < Im z", "by (auto simp: cmod_def)"], ["proof (state)\nthis:\n  Re z \\<noteq> 0 \\<or> 0 < Im z\n\ngoal (1 subgoal):\n 1. z \\<in> S - sngs'", "moreover"], ["proof (state)\nthis:\n  Re z \\<noteq> 0 \\<or> 0 < Im z\n\ngoal (1 subgoal):\n 1. z \\<in> S - sngs'", "from z and that"], ["proof (chain)\npicking this:\n  cmod z = r' \\<and> 0 \\<le> Im z\n  z \\<in> path_image (part_circlepath 0 r' 0 pi) \\<or>\n  z \\<in> path_image (part_circlepath 0 r' pi 0)\n  0 < r'\n  r' \\<notin> (\\<lambda>n. 2 * pi * real n) ` {0<..}", "have \"z \\<notin> sngs\""], ["proof (prove)\nusing this:\n  cmod z = r' \\<and> 0 \\<le> Im z\n  z \\<in> path_image (part_circlepath 0 r' 0 pi) \\<or>\n  z \\<in> path_image (part_circlepath 0 r' pi 0)\n  0 < r'\n  r' \\<notin> (\\<lambda>n. 2 * pi * real n) ` {0<..}\n\ngoal (1 subgoal):\n 1. z \\<notin> sngs", "by (auto simp: sngs_def norm_mult image_iff)"], ["proof (state)\nthis:\n  z \\<notin> sngs\n\ngoal (1 subgoal):\n 1. z \\<in> S - sngs'", "ultimately"], ["proof (chain)\npicking this:\n  Re z \\<noteq> 0 \\<or> 0 < Im z\n  z \\<notin> sngs", "show \"z \\<in> S - sngs'\""], ["proof (prove)\nusing this:\n  Re z \\<noteq> 0 \\<or> 0 < Im z\n  z \\<notin> sngs\n\ngoal (1 subgoal):\n 1. z \\<in> S - sngs'", "using sngs_subset"], ["proof (prove)\nusing this:\n  Re z \\<noteq> 0 \\<or> 0 < Im z\n  z \\<notin> sngs\n  sngs' \\<subseteq> sngs\n\ngoal (1 subgoal):\n 1. z \\<in> S - sngs'", "by (auto simp: S_def)"], ["proof (state)\nthis:\n  z \\<in> S - sngs'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?z \\<in> path_image (part_circlepath 0 ?r' 0 pi) \\<or>\n           ?z \\<in> path_image (part_circlepath 0 ?r' pi 0);\n   0 < ?r'; ?r' \\<notin> (\\<lambda>n. 2 * pi * real n) ` {0<..}\\<rbrakk>\n  \\<Longrightarrow> ?z \\<in> S - sngs'\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?z \\<in> path_image (part_circlepath 0 ?r' 0 pi) \\<or>\n           ?z \\<in> path_image (part_circlepath 0 ?r' pi 0);\n   0 < ?r'; ?r' \\<notin> (\\<lambda>n. 2 * pi * real n) ` {0<..}\\<rbrakk>\n  \\<Longrightarrow> ?z \\<in> S - sngs'\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "fix n :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "assume n: \"n > 0\""], ["proof (state)\nthis:\n  0 < n\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have \"r < 2 * pi * 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r < 2 * pi * 1", "using pi_gt3 r_R"], ["proof (prove)\nusing this:\n  3 < pi\n  0 < r\n  r < 2\n  2 < R\n\ngoal (1 subgoal):\n 1. r < 2 * pi * 1", "by simp"], ["proof (state)\nthis:\n  r < 2 * pi * 1\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "also"], ["proof (state)\nthis:\n  r < 2 * pi * 1\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have \"\\<dots> \\<le> 2 * pi * real n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * pi * 1 \\<le> 2 * pi * real n", "using n"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. 2 * pi * 1 \\<le> 2 * pi * real n", "by (intro mult_left_mono) auto"], ["proof (state)\nthis:\n  2 * pi * 1 \\<le> 2 * pi * real n\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "finally"], ["proof (chain)\npicking this:\n  r < 2 * pi * real n", "have \"r < \\<dots>\""], ["proof (prove)\nusing this:\n  r < 2 * pi * real n\n\ngoal (1 subgoal):\n 1. r < 2 * pi * real n", "."], ["proof (state)\nthis:\n  r < 2 * pi * real n\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "}"], ["proof (state)\nthis:\n  0 < ?n2 \\<Longrightarrow> r < 2 * pi * real ?n2\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "hence \"r \\<notin> (\\<lambda>n. 2 * pi * real n) ` {0<..}\""], ["proof (prove)\nusing this:\n  0 < ?n2 \\<Longrightarrow> r < 2 * pi * real ?n2\n\ngoal (1 subgoal):\n 1. r \\<notin> (\\<lambda>n. 2 * pi * real n) ` {0<..}", "using r_R"], ["proof (prove)\nusing this:\n  0 < ?n2 \\<Longrightarrow> r < 2 * pi * real ?n2\n  0 < r\n  r < 2\n  2 < R\n\ngoal (1 subgoal):\n 1. r \\<notin> (\\<lambda>n. 2 * pi * real n) ` {0<..}", "by auto"], ["proof (state)\nthis:\n  r \\<notin> (\\<lambda>n. 2 * pi * real n) ` {0<..}\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "from part_circlepath_in_S[OF _ _ this] r_R"], ["proof (chain)\npicking this:\n  \\<lbrakk>?z \\<in> path_image (part_circlepath 0 r 0 pi) \\<or>\n           ?z \\<in> path_image (part_circlepath 0 r pi 0);\n   0 < r\\<rbrakk>\n  \\<Longrightarrow> ?z \\<in> S - sngs'\n  0 < r\n  r < 2\n  2 < R", "have \"path_image small_circle \\<subseteq> S - sngs'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?z \\<in> path_image (part_circlepath 0 r 0 pi) \\<or>\n           ?z \\<in> path_image (part_circlepath 0 r pi 0);\n   0 < r\\<rbrakk>\n  \\<Longrightarrow> ?z \\<in> S - sngs'\n  0 < r\n  r < 2\n  2 < R\n\ngoal (1 subgoal):\n 1. path_image small_circle \\<subseteq> S - sngs'", "by (auto simp: small_circle_def)"], ["proof (state)\nthis:\n  path_image small_circle \\<subseteq> S - sngs'\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "{"], ["proof (state)\nthis:\n  path_image small_circle \\<subseteq> S - sngs'\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "fix n :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "assume n: \"n > 0\" \"2 * pi * real n = real (2 * N + 1) * pi\""], ["proof (state)\nthis:\n  0 < n\n  2 * pi * real n = real (2 * N + 1) * pi\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "hence \"real (2 * n) = real (2 * N + 1)\""], ["proof (prove)\nusing this:\n  0 < n\n  2 * pi * real n = real (2 * N + 1) * pi\n\ngoal (1 subgoal):\n 1. real (2 * n) = real (2 * N + 1)", "unfolding of_nat_mult"], ["proof (prove)\nusing this:\n  0 < n\n  2 * pi * real n = real (2 * N + 1) * pi\n\ngoal (1 subgoal):\n 1. real 2 * real n = real (2 * N + 1)", "by simp"], ["proof (state)\nthis:\n  real (2 * n) = real (2 * N + 1)\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "hence False"], ["proof (prove)\nusing this:\n  real (2 * n) = real (2 * N + 1)\n\ngoal (1 subgoal):\n 1. False", "unfolding of_nat_eq_iff"], ["proof (prove)\nusing this:\n  2 * n = 2 * N + 1\n\ngoal (1 subgoal):\n 1. False", "by presburger"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "}"], ["proof (state)\nthis:\n  \\<lbrakk>0 < ?n2; 2 * pi * real ?n2 = real (2 * N + 1) * pi\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "hence \"R \\<notin> (\\<lambda>n. 2 * pi * real n) ` {0<..}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?n2; 2 * pi * real ?n2 = real (2 * N + 1) * pi\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. R \\<notin> (\\<lambda>n. 2 * pi * real n) ` {0<..}", "unfolding R_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?n2; 2 * pi * real ?n2 = real (2 * N + 1) * pi\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. real (2 * N + 1) * pi \\<notin> (\\<lambda>n. 2 * pi * real n) ` {0<..}", "by force"], ["proof (state)\nthis:\n  R \\<notin> (\\<lambda>n. 2 * pi * real n) ` {0<..}\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "from part_circlepath_in_S[OF _ _ this] r_R"], ["proof (chain)\npicking this:\n  \\<lbrakk>?z \\<in> path_image (part_circlepath 0 R 0 pi) \\<or>\n           ?z \\<in> path_image (part_circlepath 0 R pi 0);\n   0 < R\\<rbrakk>\n  \\<Longrightarrow> ?z \\<in> S - sngs'\n  0 < r\n  r < 2\n  2 < R", "have \"path_image big_circle \\<subseteq> S - sngs'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?z \\<in> path_image (part_circlepath 0 R 0 pi) \\<or>\n           ?z \\<in> path_image (part_circlepath 0 R pi 0);\n   0 < R\\<rbrakk>\n  \\<Longrightarrow> ?z \\<in> S - sngs'\n  0 < r\n  r < 2\n  2 < R\n\ngoal (1 subgoal):\n 1. path_image big_circle \\<subseteq> S - sngs'", "by (auto simp: big_circle_def)"], ["proof (state)\nthis:\n  path_image big_circle \\<subseteq> S - sngs'\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "note path_images =\n    \\<open>path_image small_circle \\<subseteq> S - sngs'\\<close> \\<open>path_image big_circle \\<subseteq> S - sngs'\\<close>\n    \\<open>path_image neg_line \\<subseteq> S - sngs'\\<close> \\<open>path_image pos_line \\<subseteq> S - sngs'\\<close>"], ["proof (state)\nthis:\n  path_image small_circle \\<subseteq> S - sngs'\n  path_image big_circle \\<subseteq> S - sngs'\n  path_image neg_line \\<subseteq> S - sngs'\n  path_image pos_line \\<subseteq> S - sngs'\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have \"path_image \\<gamma> \\<subseteq> S - sngs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path_image \\<gamma> \\<subseteq> S - sngs'", "using path_images"], ["proof (prove)\nusing this:\n  path_image small_circle \\<subseteq> S - sngs'\n  path_image big_circle \\<subseteq> S - sngs'\n  path_image neg_line \\<subseteq> S - sngs'\n  path_image pos_line \\<subseteq> S - sngs'\n\ngoal (1 subgoal):\n 1. path_image \\<gamma> \\<subseteq> S - sngs'", "by (auto simp: \\<gamma>_altdef path_image_join big_circle_def neg_line_def \n                   small_circle_def pos_line_def)\n\n  \\<comment>\\<open>We need to show that the complex plane is still connected after we removed the branch cut\n     and the poles. We do this by showing that the complex plane with the branch cut removed\n     is starlike and therefore connected. Then we remove the (countably many) poles, which does not\n     break connectedness either.\\<close>"], ["proof (state)\nthis:\n  path_image \\<gamma> \\<subseteq> S - sngs'\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have \"open S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open S", "using closed_neg_Im_slit"], ["proof (prove)\nusing this:\n  closed {z. Re z = 0 \\<and> Im z \\<le> 0}\n\ngoal (1 subgoal):\n 1. open S", "by (auto simp: S_def)"], ["proof (state)\nthis:\n  open S\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have \"starlike (UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0})\"\n    (is \"starlike ?S'\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. starlike (UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0})", "unfolding starlike_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}.\n       \\<forall>x\\<in>UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}.\n          closed_segment a x\n          \\<subseteq> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}", "proof (rule bexI ballI)+"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0} \\<Longrightarrow>\n       closed_segment ?a x\n       \\<subseteq> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}\n 2. ?a \\<in> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}", "have \"1 \\<le> 1 * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> 1 * pi", "using pi_gt3"], ["proof (prove)\nusing this:\n  3 < pi\n\ngoal (1 subgoal):\n 1. 1 \\<le> 1 * pi", "by simp"], ["proof (state)\nthis:\n  1 \\<le> 1 * pi\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0} \\<Longrightarrow>\n       closed_segment ?a x\n       \\<subseteq> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}\n 2. ?a \\<in> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}", "also"], ["proof (state)\nthis:\n  1 \\<le> 1 * pi\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0} \\<Longrightarrow>\n       closed_segment ?a x\n       \\<subseteq> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}\n 2. ?a \\<in> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}", "have \"\\<dots> < (2 + 2 * real N) * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 * pi < (2 + 2 * real N) * pi", "by (intro mult_strict_right_mono) auto"], ["proof (state)\nthis:\n  1 * pi < (2 + 2 * real N) * pi\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0} \\<Longrightarrow>\n       closed_segment ?a x\n       \\<subseteq> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}\n 2. ?a \\<in> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}", "finally"], ["proof (chain)\npicking this:\n  1 < (2 + 2 * real N) * pi", "show *: \"\\<i> \\<in> ?S'\""], ["proof (prove)\nusing this:\n  1 < (2 + 2 * real N) * pi\n\ngoal (1 subgoal):\n 1. \\<i> \\<in> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}", "by (auto simp: S_def)"], ["proof (state)\nthis:\n  \\<i> \\<in> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0} \\<Longrightarrow>\n       closed_segment \\<i> x\n       \\<subseteq> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0} \\<Longrightarrow>\n       closed_segment \\<i> x\n       \\<subseteq> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}", "assume z: \"z \\<in> ?S'\""], ["proof (state)\nthis:\n  z \\<in> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0} \\<Longrightarrow>\n       closed_segment \\<i> x\n       \\<subseteq> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}", "have \"closed_segment \\<i> z \\<inter> {z. Re z = 0 \\<and> Im z \\<le> 0} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed_segment \\<i> z \\<inter> {z. Re z = 0 \\<and> Im z \\<le> 0} = {}", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> closed_segment \\<i> z; Re x = 0;\n        Im x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> closed_segment \\<i> z; Re x = 0;\n        Im x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "assume s: \"s \\<in> closed_segment \\<i> z\" \"Re s = 0\" \"Im s \\<le> 0\""], ["proof (state)\nthis:\n  s \\<in> closed_segment \\<i> z\n  Re s = 0\n  Im s \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> closed_segment \\<i> z; Re x = 0;\n        Im x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "then"], ["proof (chain)\npicking this:\n  s \\<in> closed_segment \\<i> z\n  Re s = 0\n  Im s \\<le> 0", "obtain t where t: \"t \\<in> {0..1}\" \"s = linepath \\<i> z t\""], ["proof (prove)\nusing this:\n  s \\<in> closed_segment \\<i> z\n  Re s = 0\n  Im s \\<le> 0\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<in> {0..1}; s = linepath \\<i> z t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using linepath_image_01"], ["proof (prove)\nusing this:\n  s \\<in> closed_segment \\<i> z\n  Re s = 0\n  Im s \\<le> 0\n  linepath ?a ?b ` {0..1} = closed_segment ?a ?b\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<in> {0..1}; s = linepath \\<i> z t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t \\<in> {0..1}\n  s = linepath \\<i> z t\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> closed_segment \\<i> z; Re x = 0;\n        Im x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "with z s t"], ["proof (chain)\npicking this:\n  z \\<in> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}\n  s \\<in> closed_segment \\<i> z\n  Re s = 0\n  Im s \\<le> 0\n  t \\<in> {0..1}\n  s = linepath \\<i> z t\n  t \\<in> {0..1}\n  s = linepath \\<i> z t", "have z': \"Re z = 0\" \"Im z > 0\""], ["proof (prove)\nusing this:\n  z \\<in> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}\n  s \\<in> closed_segment \\<i> z\n  Re s = 0\n  Im s \\<le> 0\n  t \\<in> {0..1}\n  s = linepath \\<i> z t\n  t \\<in> {0..1}\n  s = linepath \\<i> z t\n\ngoal (1 subgoal):\n 1. Re z = 0 &&& 0 < Im z", "by (auto simp: Re_linepath' S_def linepath_0')"], ["proof (state)\nthis:\n  Re z = 0\n  0 < Im z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> closed_segment \\<i> z; Re x = 0;\n        Im x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "with s"], ["proof (chain)\npicking this:\n  s \\<in> closed_segment \\<i> z\n  Re s = 0\n  Im s \\<le> 0\n  Re z = 0\n  0 < Im z", "have \"Im s \\<in> closed_segment 1 (Im z) \\<and> Im s \\<le> 0\""], ["proof (prove)\nusing this:\n  s \\<in> closed_segment \\<i> z\n  Re s = 0\n  Im s \\<le> 0\n  Re z = 0\n  0 < Im z\n\ngoal (1 subgoal):\n 1. Im s \\<in> closed_segment 1 (Im z) \\<and> Im s \\<le> 0", "by (subst (asm) closed_segment_same_Re) auto"], ["proof (state)\nthis:\n  Im s \\<in> closed_segment 1 (Im z) \\<and> Im s \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> closed_segment \\<i> z; Re x = 0;\n        Im x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "with z'"], ["proof (chain)\npicking this:\n  Re z = 0\n  0 < Im z\n  Im s \\<in> closed_segment 1 (Im z) \\<and> Im s \\<le> 0", "show \"s \\<in> {}\""], ["proof (prove)\nusing this:\n  Re z = 0\n  0 < Im z\n  Im s \\<in> closed_segment 1 (Im z) \\<and> Im s \\<le> 0\n\ngoal (1 subgoal):\n 1. s \\<in> {}", "by (auto simp: closed_segment_eq_real_ivl split: if_splits)"], ["proof (state)\nthis:\n  s \\<in> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  closed_segment \\<i> z \\<inter> {z. Re z = 0 \\<and> Im z \\<le> 0} = {}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0} \\<Longrightarrow>\n       closed_segment \\<i> x\n       \\<subseteq> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}", "thus \"closed_segment \\<i> z \\<subseteq> ?S'\""], ["proof (prove)\nusing this:\n  closed_segment \\<i> z \\<inter> {z. Re z = 0 \\<and> Im z \\<le> 0} = {}\n\ngoal (1 subgoal):\n 1. closed_segment \\<i> z\n    \\<subseteq> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}", "by (auto simp: S_def)"], ["proof (state)\nthis:\n  closed_segment \\<i> z \\<subseteq> UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  starlike (UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0})\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "hence \"connected ?S'\""], ["proof (prove)\nusing this:\n  starlike (UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0})\n\ngoal (1 subgoal):\n 1. connected (UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0})", "by (rule starlike_imp_connected)"], ["proof (state)\nthis:\n  connected (UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0})\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "hence \"connected S'\""], ["proof (prove)\nusing this:\n  connected (UNIV - {z. Re z = 0 \\<and> Im z \\<le> 0})\n\ngoal (1 subgoal):\n 1. connected S'", "by (simp add: Compl_eq_Diff_UNIV S'_def)"], ["proof (state)\nthis:\n  connected S'\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have \"connected S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected S", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. connected (- {z. Re z = 0 \\<and> Im z \\<le> 0} - (sngs - sngs'))", "by (rule connected_open_diff_countable)\n       (insert \\<open>connected S'\\<close>, auto simp: sngs_def closed_neg_Im_slit S'_def)\n\n  \\<comment>\\<open>The integrand is now clearly holomorphic on @{term \"S - sngs'\"} and we can apply the\n     Residue Theorem.\\<close>"], ["proof (state)\nthis:\n  connected S\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have holo: \"f s holomorphic_on (S - sngs')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f s holomorphic_on S - sngs'", "unfolding f_def Ln'_def S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        exp ((Ln (- \\<i> * z) + \\<i> * complex_of_real pi / 2) * - s +\n             complex_of_real a * z) /\n        (1 - exp z)) holomorphic_on\n    - {z. Re z = 0 \\<and> Im z \\<le> 0} - (sngs - sngs') - sngs'", "using sngs"], ["proof (prove)\nusing this:\n  Re ?z \\<noteq> 0 \\<or> 0 < Im ?z \\<Longrightarrow>\n  (exp ?z = 1) = (?z \\<in> sngs)\n\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        exp ((Ln (- \\<i> * z) + \\<i> * complex_of_real pi / 2) * - s +\n             complex_of_real a * z) /\n        (1 - exp z)) holomorphic_on\n    - {z. Re z = 0 \\<and> Im z \\<le> 0} - (sngs - sngs') - sngs'", "by (auto intro!: holomorphic_intros simp: complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  f s holomorphic_on S - sngs'\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have \"contour_integral \\<gamma> (f s) =\n          of_real (2 * pi) * \\<i> * (\\<Sum>z\\<in>sngs'. winding_number \\<gamma> z * residue (f s) z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. contour_integral \\<gamma> (f s) =\n    complex_of_real (2 * pi) * \\<i> *\n    (\\<Sum>z\\<in>sngs'. winding_number \\<gamma> z * residue (f s) z)", "proof (rule Residue_theorem)"], ["proof (state)\ngoal (8 subgoals):\n 1. open ?s\n 2. connected ?s\n 3. finite sngs'\n 4. f s holomorphic_on ?s - sngs'\n 5. valid_path \\<gamma>\n 6. pathfinish \\<gamma> = pathstart \\<gamma>\n 7. path_image \\<gamma> \\<subseteq> ?s - sngs'\n 8. \\<forall>z.\n       z \\<notin> ?s \\<longrightarrow> winding_number \\<gamma> z = 0", "show \"\\<forall>z. z \\<notin> S \\<longrightarrow> winding_number \\<gamma> z = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>z. z \\<notin> S \\<longrightarrow> winding_number \\<gamma> z = 0", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z. z \\<notin> S \\<Longrightarrow> winding_number \\<gamma> z = 0", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z. z \\<notin> S \\<Longrightarrow> winding_number \\<gamma> z = 0", "assume \"z \\<notin> S\""], ["proof (state)\nthis:\n  z \\<notin> S\n\ngoal (1 subgoal):\n 1. \\<And>z. z \\<notin> S \\<Longrightarrow> winding_number \\<gamma> z = 0", "hence \"Re z = 0 \\<and> Im z \\<le> 0 \\<or> z \\<in> sngs - sngs'\""], ["proof (prove)\nusing this:\n  z \\<notin> S\n\ngoal (1 subgoal):\n 1. Re z = 0 \\<and> Im z \\<le> 0 \\<or> z \\<in> sngs - sngs'", "by (auto simp: S_def)"], ["proof (state)\nthis:\n  Re z = 0 \\<and> Im z \\<le> 0 \\<or> z \\<in> sngs - sngs'\n\ngoal (1 subgoal):\n 1. \\<And>z. z \\<notin> S \\<Longrightarrow> winding_number \\<gamma> z = 0", "thus \"winding_number \\<gamma> z = 0\""], ["proof (prove)\nusing this:\n  Re z = 0 \\<and> Im z \\<le> 0 \\<or> z \\<in> sngs - sngs'\n\ngoal (1 subgoal):\n 1. winding_number \\<gamma> z = 0", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Re z = 0 \\<and> Im z \\<le> 0 \\<Longrightarrow>\n    winding_number \\<gamma> z = 0\n 2. z \\<in> sngs - sngs' \\<Longrightarrow> winding_number \\<gamma> z = 0", "define x where \"x = -Im z\""], ["proof (state)\nthis:\n  x = - Im z\n\ngoal (2 subgoals):\n 1. Re z = 0 \\<and> Im z \\<le> 0 \\<Longrightarrow>\n    winding_number \\<gamma> z = 0\n 2. z \\<in> sngs - sngs' \\<Longrightarrow> winding_number \\<gamma> z = 0", "assume \"Re z = 0 \\<and> Im z \\<le> 0\""], ["proof (state)\nthis:\n  Re z = 0 \\<and> Im z \\<le> 0\n\ngoal (2 subgoals):\n 1. Re z = 0 \\<and> Im z \\<le> 0 \\<Longrightarrow>\n    winding_number \\<gamma> z = 0\n 2. z \\<in> sngs - sngs' \\<Longrightarrow> winding_number \\<gamma> z = 0", "hence x: \"z = -of_real x * \\<i>\" \"x \\<ge> 0\""], ["proof (prove)\nusing this:\n  Re z = 0 \\<and> Im z \\<le> 0\n\ngoal (1 subgoal):\n 1. z = - complex_of_real x * \\<i> &&& 0 \\<le> x", "unfolding complex_eq_iff"], ["proof (prove)\nusing this:\n  Re z = 0 \\<and> Im z \\<le> 0\n\ngoal (1 subgoal):\n 1. Re z = Re (- complex_of_real x * \\<i>) \\<and>\n    Im z = Im (- complex_of_real x * \\<i>) &&&\n    0 \\<le> x", "by (simp_all add: x_def)"], ["proof (state)\nthis:\n  z = - complex_of_real x * \\<i>\n  0 \\<le> x\n\ngoal (2 subgoals):\n 1. Re z = 0 \\<and> Im z \\<le> 0 \\<Longrightarrow>\n    winding_number \\<gamma> z = 0\n 2. z \\<in> sngs - sngs' \\<Longrightarrow> winding_number \\<gamma> z = 0", "obtain B where \"\\<And>z. norm z \\<ge> B \\<Longrightarrow> winding_number \\<gamma> z = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B.\n        (\\<And>z.\n            B \\<le> cmod z \\<Longrightarrow>\n            winding_number \\<gamma> z = 0) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using winding_number_zero_at_infinity[of \\<gamma>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>path \\<gamma>; pathfinish \\<gamma> = pathstart \\<gamma>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B.\n                       \\<forall>z.\n                          B \\<le> cmod z \\<longrightarrow>\n                          winding_number \\<gamma> z = 0\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        (\\<And>z.\n            B \\<le> cmod z \\<Longrightarrow>\n            winding_number \\<gamma> z = 0) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B \\<le> cmod ?z \\<Longrightarrow> winding_number \\<gamma> ?z = 0\n\ngoal (2 subgoals):\n 1. Re z = 0 \\<and> Im z \\<le> 0 \\<Longrightarrow>\n    winding_number \\<gamma> z = 0\n 2. z \\<in> sngs - sngs' \\<Longrightarrow> winding_number \\<gamma> z = 0", "hence \"winding_number \\<gamma> (-of_real (max B 0) * \\<i>) = 0\""], ["proof (prove)\nusing this:\n  B \\<le> cmod ?z \\<Longrightarrow> winding_number \\<gamma> ?z = 0\n\ngoal (1 subgoal):\n 1. winding_number \\<gamma> (- complex_of_real (max B 0) * \\<i>) = 0", "by (auto simp: norm_mult)"], ["proof (state)\nthis:\n  winding_number \\<gamma> (- complex_of_real (max B 0) * \\<i>) = 0\n\ngoal (2 subgoals):\n 1. Re z = 0 \\<and> Im z \\<le> 0 \\<Longrightarrow>\n    winding_number \\<gamma> z = 0\n 2. z \\<in> sngs - sngs' \\<Longrightarrow> winding_number \\<gamma> z = 0", "also"], ["proof (state)\nthis:\n  winding_number \\<gamma> (- complex_of_real (max B 0) * \\<i>) = 0\n\ngoal (2 subgoals):\n 1. Re z = 0 \\<and> Im z \\<le> 0 \\<Longrightarrow>\n    winding_number \\<gamma> z = 0\n 2. z \\<in> sngs - sngs' \\<Longrightarrow> winding_number \\<gamma> z = 0", "have \"winding_number \\<gamma> (-of_real (max B 0) * \\<i>) = winding_number \\<gamma> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. winding_number \\<gamma> (- complex_of_real (max B 0) * \\<i>) =\n    winding_number \\<gamma> z", "proof (rule winding_number_eq)"], ["proof (state)\ngoal (6 subgoals):\n 1. path \\<gamma>\n 2. pathfinish \\<gamma> = pathstart \\<gamma>\n 3. - complex_of_real (max B 0) * \\<i> \\<in> ?S\n 4. z \\<in> ?S\n 5. connected ?S\n 6. ?S \\<inter> path_image \\<gamma> = {}", "from x"], ["proof (chain)\npicking this:\n  z = - complex_of_real x * \\<i>\n  0 \\<le> x", "have \"closed_segment (-of_real (max B 0) * \\<i>) z \\<subseteq> {z. Re z = 0 \\<and> Im z \\<le> 0}\""], ["proof (prove)\nusing this:\n  z = - complex_of_real x * \\<i>\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. closed_segment (- complex_of_real (max B 0) * \\<i>) z\n    \\<subseteq> {z. Re z = 0 \\<and> Im z \\<le> 0}", "by (auto simp: closed_segment_same_Re closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  closed_segment (- complex_of_real (max B 0) * \\<i>) z\n  \\<subseteq> {z. Re z = 0 \\<and> Im z \\<le> 0}\n\ngoal (6 subgoals):\n 1. path \\<gamma>\n 2. pathfinish \\<gamma> = pathstart \\<gamma>\n 3. - complex_of_real (max B 0) * \\<i> \\<in> ?S\n 4. z \\<in> ?S\n 5. connected ?S\n 6. ?S \\<inter> path_image \\<gamma> = {}", "with \\<open>path_image \\<gamma> \\<subseteq> S - sngs'\\<close>"], ["proof (chain)\npicking this:\n  path_image \\<gamma> \\<subseteq> S - sngs'\n  closed_segment (- complex_of_real (max B 0) * \\<i>) z\n  \\<subseteq> {z. Re z = 0 \\<and> Im z \\<le> 0}", "show \"closed_segment (-of_real (max B 0) * \\<i>) z \\<inter> path_image \\<gamma> = {}\""], ["proof (prove)\nusing this:\n  path_image \\<gamma> \\<subseteq> S - sngs'\n  closed_segment (- complex_of_real (max B 0) * \\<i>) z\n  \\<subseteq> {z. Re z = 0 \\<and> Im z \\<le> 0}\n\ngoal (1 subgoal):\n 1. closed_segment (- complex_of_real (max B 0) * \\<i>) z \\<inter>\n    path_image \\<gamma> =\n    {}", "by (auto simp: S_def)"], ["proof (state)\nthis:\n  closed_segment (- complex_of_real (max B 0) * \\<i>) z \\<inter>\n  path_image \\<gamma> =\n  {}\n\ngoal (5 subgoals):\n 1. path \\<gamma>\n 2. pathfinish \\<gamma> = pathstart \\<gamma>\n 3. - complex_of_real (max B 0) * \\<i>\n    \\<in> closed_segment (- complex_of_real (max B 0) * \\<i>) z\n 4. z \\<in> closed_segment (- complex_of_real (max B 0) * \\<i>) z\n 5. connected (closed_segment (- complex_of_real (max B 0) * \\<i>) z)", "qed auto"], ["proof (state)\nthis:\n  winding_number \\<gamma> (- complex_of_real (max B 0) * \\<i>) =\n  winding_number \\<gamma> z\n\ngoal (2 subgoals):\n 1. Re z = 0 \\<and> Im z \\<le> 0 \\<Longrightarrow>\n    winding_number \\<gamma> z = 0\n 2. z \\<in> sngs - sngs' \\<Longrightarrow> winding_number \\<gamma> z = 0", "finally"], ["proof (chain)\npicking this:\n  winding_number \\<gamma> z = 0", "show \"winding_number \\<gamma> z = 0\""], ["proof (prove)\nusing this:\n  winding_number \\<gamma> z = 0\n\ngoal (1 subgoal):\n 1. winding_number \\<gamma> z = 0", "."], ["proof (state)\nthis:\n  winding_number \\<gamma> z = 0\n\ngoal (1 subgoal):\n 1. z \\<in> sngs - sngs' \\<Longrightarrow> winding_number \\<gamma> z = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<in> sngs - sngs' \\<Longrightarrow> winding_number \\<gamma> z = 0", "assume z: \"z \\<in> sngs - sngs'\""], ["proof (state)\nthis:\n  z \\<in> sngs - sngs'\n\ngoal (1 subgoal):\n 1. z \\<in> sngs - sngs' \\<Longrightarrow> winding_number \\<gamma> z = 0", "show \"winding_number \\<gamma> z = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. winding_number \\<gamma> z = 0", "proof (rule winding_number_zero_outside)"], ["proof (state)\ngoal (5 subgoals):\n 1. path \\<gamma>\n 2. convex ?s\n 3. pathfinish \\<gamma> = pathstart \\<gamma>\n 4. z \\<notin> ?s\n 5. path_image \\<gamma> \\<subseteq> ?s", "have \"path_image \\<gamma> = path_image big_circle \\<union> path_image neg_line \\<union>\n                                 path_image small_circle \\<union> path_image pos_line\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path_image \\<gamma> =\n    path_image big_circle \\<union> path_image neg_line \\<union>\n    path_image small_circle \\<union>\n    path_image pos_line", "unfolding \\<gamma>_altdef small_circle_def big_circle_def pos_line_def neg_line_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. path_image\n     (part_circlepath 0 R 0 pi +++\n      linepath (complex_of_real (- R)) (complex_of_real (- r)) +++\n      part_circlepath 0 r pi 0 +++\n      linepath (complex_of_real r) (complex_of_real R)) =\n    path_image (part_circlepath 0 R 0 pi) \\<union>\n    path_image\n     (linepath (complex_of_real (- R)) (complex_of_real (- r))) \\<union>\n    path_image (part_circlepath 0 r pi 0) \\<union>\n    path_image (linepath (complex_of_real r) (complex_of_real R))", "by (simp add: path_image_join Un_assoc)"], ["proof (state)\nthis:\n  path_image \\<gamma> =\n  path_image big_circle \\<union> path_image neg_line \\<union>\n  path_image small_circle \\<union>\n  path_image pos_line\n\ngoal (5 subgoals):\n 1. path \\<gamma>\n 2. convex ?s\n 3. pathfinish \\<gamma> = pathstart \\<gamma>\n 4. z \\<notin> ?s\n 5. path_image \\<gamma> \\<subseteq> ?s", "also"], ["proof (state)\nthis:\n  path_image \\<gamma> =\n  path_image big_circle \\<union> path_image neg_line \\<union>\n  path_image small_circle \\<union>\n  path_image pos_line\n\ngoal (5 subgoals):\n 1. path \\<gamma>\n 2. convex ?s\n 3. pathfinish \\<gamma> = pathstart \\<gamma>\n 4. z \\<notin> ?s\n 5. path_image \\<gamma> \\<subseteq> ?s", "have \"\\<dots> \\<subseteq> cball 0 ((2 * N + 1) * pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path_image big_circle \\<union> path_image neg_line \\<union>\n    path_image small_circle \\<union>\n    path_image pos_line\n    \\<subseteq> cball 0 (real (2 * N + 1) * pi)", "using r_R"], ["proof (prove)\nusing this:\n  0 < r\n  r < 2\n  2 < R\n\ngoal (1 subgoal):\n 1. path_image big_circle \\<union> path_image neg_line \\<union>\n    path_image small_circle \\<union>\n    path_image pos_line\n    \\<subseteq> cball 0 (real (2 * N + 1) * pi)", "by (auto simp: small_circle_def big_circle_def pos_line_def neg_line_def\n                           path_image_join norm_mult R_def path_image_part_circlepath'\n                           in_Reals_norm closed_segment_Reals closed_segment_eq_real_ivl)"], ["proof (state)\nthis:\n  path_image big_circle \\<union> path_image neg_line \\<union>\n  path_image small_circle \\<union>\n  path_image pos_line\n  \\<subseteq> cball 0 (real (2 * N + 1) * pi)\n\ngoal (5 subgoals):\n 1. path \\<gamma>\n 2. convex ?s\n 3. pathfinish \\<gamma> = pathstart \\<gamma>\n 4. z \\<notin> ?s\n 5. path_image \\<gamma> \\<subseteq> ?s", "finally"], ["proof (chain)\npicking this:\n  path_image \\<gamma> \\<subseteq> cball 0 (real (2 * N + 1) * pi)", "show \"path_image \\<gamma> \\<subseteq> \\<dots>\""], ["proof (prove)\nusing this:\n  path_image \\<gamma> \\<subseteq> cball 0 (real (2 * N + 1) * pi)\n\ngoal (1 subgoal):\n 1. path_image \\<gamma> \\<subseteq> cball 0 (real (2 * N + 1) * pi)", "."], ["proof (state)\nthis:\n  path_image \\<gamma> \\<subseteq> cball 0 (real (2 * N + 1) * pi)\n\ngoal (4 subgoals):\n 1. path \\<gamma>\n 2. convex (cball 0 (real (2 * N + 1) * pi))\n 3. pathfinish \\<gamma> = pathstart \\<gamma>\n 4. z \\<notin> cball 0 (real (2 * N + 1) * pi)", "qed (insert z, auto simp: sngs_def sngs'_def norm_mult)"], ["proof (state)\nthis:\n  winding_number \\<gamma> z = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  winding_number \\<gamma> z = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>z. z \\<notin> S \\<longrightarrow> winding_number \\<gamma> z = 0\n\ngoal (7 subgoals):\n 1. open S\n 2. connected S\n 3. finite sngs'\n 4. f s holomorphic_on S - sngs'\n 5. valid_path \\<gamma>\n 6. pathfinish \\<gamma> = pathstart \\<gamma>\n 7. path_image \\<gamma> \\<subseteq> S - sngs'", "qed (insert \\<open>path_image \\<gamma> \\<subseteq> S - sngs'\\<close> \\<open>connected S\\<close> \\<open>open S\\<close> holo, auto simp: sngs'_def)\n\n  \\<comment>\\<open>We can use Wenda Li's framework to compute the winding numbers at the poles and show that\n     they are all 1.\\<close>"], ["proof (state)\nthis:\n  contour_integral \\<gamma> (f s) =\n  complex_of_real (2 * pi) * \\<i> *\n  (\\<Sum>z\\<in>sngs'. winding_number \\<gamma> z * residue (f s) z)\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "also"], ["proof (state)\nthis:\n  contour_integral \\<gamma> (f s) =\n  complex_of_real (2 * pi) * \\<i> *\n  (\\<Sum>z\\<in>sngs'. winding_number \\<gamma> z * residue (f s) z)\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have \"winding_number \\<gamma> z = 1\" if \"z \\<in> sngs'\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. winding_number \\<gamma> z = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. winding_number \\<gamma> z = 1", "have \"r < 2 * pi * 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r < 2 * pi * 1", "using pi_gt3 r_R"], ["proof (prove)\nusing this:\n  3 < pi\n  0 < r\n  r < 2\n  2 < R\n\ngoal (1 subgoal):\n 1. r < 2 * pi * 1", "by simp"], ["proof (state)\nthis:\n  r < 2 * pi * 1\n\ngoal (1 subgoal):\n 1. winding_number \\<gamma> z = 1", "also"], ["proof (state)\nthis:\n  r < 2 * pi * 1\n\ngoal (1 subgoal):\n 1. winding_number \\<gamma> z = 1", "have \"\\<dots> \\<le> 2 * pi * real n\" if \"n > 0\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * pi * 1 \\<le> 2 * pi * real n", "using that"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. 2 * pi * 1 \\<le> 2 * pi * real n", "by (intro mult_left_mono) auto"], ["proof (state)\nthis:\n  0 < ?n \\<Longrightarrow> 2 * pi * 1 \\<le> 2 * pi * real ?n\n\ngoal (1 subgoal):\n 1. winding_number \\<gamma> z = 1", "finally"], ["proof (chain)\npicking this:\n  0 < ?n1 \\<Longrightarrow> r < 2 * pi * real ?n1", "have norm_z: \"norm z > r\" \"norm z < R\""], ["proof (prove)\nusing this:\n  0 < ?n1 \\<Longrightarrow> r < 2 * pi * real ?n1\n\ngoal (1 subgoal):\n 1. r < cmod z &&& cmod z < R", "using that r_R"], ["proof (prove)\nusing this:\n  0 < ?n1 \\<Longrightarrow> r < 2 * pi * real ?n1\n  z \\<in> sngs'\n  0 < r\n  r < 2\n  2 < R\n\ngoal (1 subgoal):\n 1. r < cmod z &&& cmod z < R", "by (auto simp: sngs'_def norm_mult R_def)"], ["proof (state)\nthis:\n  r < cmod z\n  cmod z < R\n\ngoal (1 subgoal):\n 1. winding_number \\<gamma> z = 1", "have \"cindex_pathE big_circle z = -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cindex_pathE big_circle z = - 1", "using r_R that"], ["proof (prove)\nusing this:\n  0 < r\n  r < 2\n  2 < R\n  z \\<in> sngs'\n\ngoal (1 subgoal):\n 1. cindex_pathE big_circle z = - 1", "unfolding big_circle_def"], ["proof (prove)\nusing this:\n  0 < r\n  r < 2\n  2 < R\n  z \\<in> sngs'\n\ngoal (1 subgoal):\n 1. cindex_pathE (part_circlepath 0 R 0 pi) z = - 1", "by (subst cindex_pathE_circlepath_upper(1)) (auto simp: sngs'_def norm_mult R_def)"], ["proof (state)\nthis:\n  cindex_pathE big_circle z = - 1\n\ngoal (1 subgoal):\n 1. winding_number \\<gamma> z = 1", "have \"cindex_pathE small_circle z = -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cindex_pathE small_circle z = - 1", "using r_R that norm_z"], ["proof (prove)\nusing this:\n  0 < r\n  r < 2\n  2 < R\n  z \\<in> sngs'\n  r < cmod z\n  cmod z < R\n\ngoal (1 subgoal):\n 1. cindex_pathE small_circle z = - 1", "unfolding small_circle_def"], ["proof (prove)\nusing this:\n  0 < r\n  r < 2\n  2 < R\n  z \\<in> sngs'\n  r < cmod z\n  cmod z < R\n\ngoal (1 subgoal):\n 1. cindex_pathE (part_circlepath 0 r pi 0) z = - 1", "by (subst cindex_pathE_reversepath', subst reversepath_part_circlepath,\n          subst cindex_pathE_circlepath_upper(2)) (auto simp: sngs'_def norm_mult)"], ["proof (state)\nthis:\n  cindex_pathE small_circle z = - 1\n\ngoal (1 subgoal):\n 1. winding_number \\<gamma> z = 1", "have \"cindex_pathE neg_line z = 0\" \"cindex_pathE pos_line z = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cindex_pathE neg_line z = 0 &&& cindex_pathE pos_line z = 0", "unfolding neg_line_def pos_line_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cindex_pathE (linepath (complex_of_real (- R)) (complex_of_real (- r)))\n     z =\n    0 &&&\n    cindex_pathE (linepath (complex_of_real r) (complex_of_real R)) z = 0", "using r_R that"], ["proof (prove)\nusing this:\n  0 < r\n  r < 2\n  2 < R\n  z \\<in> sngs'\n\ngoal (1 subgoal):\n 1. cindex_pathE (linepath (complex_of_real (- R)) (complex_of_real (- r)))\n     z =\n    0 &&&\n    cindex_pathE (linepath (complex_of_real r) (complex_of_real R)) z = 0", "by (subst cindex_pathE_linepath; force simp: neg_line_def cindex_pathE_linepath\n            closed_segment_Reals closed_segment_eq_real_ivl sngs'_def complex_eq_iff)+"], ["proof (state)\nthis:\n  cindex_pathE neg_line z = 0\n  cindex_pathE pos_line z = 0\n\ngoal (1 subgoal):\n 1. winding_number \\<gamma> z = 1", "note indices = \\<open>cindex_pathE big_circle z = -1\\<close> \\<open>cindex_pathE small_circle z = -1\\<close>\n                   \\<open>cindex_pathE neg_line z = 0\\<close> \\<open>cindex_pathE pos_line z = 0\\<close>"], ["proof (state)\nthis:\n  cindex_pathE big_circle z = - 1\n  cindex_pathE small_circle z = - 1\n  cindex_pathE neg_line z = 0\n  cindex_pathE pos_line z = 0\n\ngoal (1 subgoal):\n 1. winding_number \\<gamma> z = 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. winding_number \\<gamma> z = 1", "unfolding \\<gamma>_altdef big_circle_def small_circle_def pos_line_def neg_line_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. winding_number\n     (part_circlepath 0 R 0 pi +++\n      linepath (complex_of_real (- R)) (complex_of_real (- r)) +++\n      part_circlepath 0 r pi 0 +++\n      linepath (complex_of_real r) (complex_of_real R))\n     z =\n    1", "by eval_winding (insert indices path_images that,\n                       auto simp: big_circle_def small_circle_def pos_line_def neg_line_def)"], ["proof (state)\nthis:\n  winding_number \\<gamma> z = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?z \\<in> sngs' \\<Longrightarrow> winding_number \\<gamma> ?z = 1\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "hence \"(\\<Sum>z\\<in>sngs'. winding_number \\<gamma> z * residue (f s) z) = (\\<Sum>z\\<in>sngs'. residue (f s) z)\""], ["proof (prove)\nusing this:\n  ?z \\<in> sngs' \\<Longrightarrow> winding_number \\<gamma> ?z = 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>sngs'. winding_number \\<gamma> z * residue (f s) z) =\n    sum (residue (f s)) sngs'", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>z\\<in>sngs'. winding_number \\<gamma> z * residue (f s) z) =\n  sum (residue (f s)) sngs'\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "also"], ["proof (state)\nthis:\n  (\\<Sum>z\\<in>sngs'. winding_number \\<gamma> z * residue (f s) z) =\n  sum (residue (f s)) sngs'\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have \"\\<dots> = (\\<Sum>k\\<in>{0<..N}. residue (f s) (2 * pi * of_nat k * \\<i>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (residue (f s)) sngs' =\n    (\\<Sum>k\\<in>{0<..N}.\n       residue (f s) (complex_of_real (2 * pi * real k) * \\<i>))", "unfolding sngs'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (residue (f s))\n     ((\\<lambda>n. complex_of_real (2 * pi * real n) * \\<i>) ` {0<..N}) =\n    (\\<Sum>k\\<in>{0<..N}.\n       residue (f s) (complex_of_real (2 * pi * real k) * \\<i>))", "by (subst sum.reindex) (auto intro!: inj_onI simp: o_def)\n\n  \\<comment>\\<open>Next, we compute the residues at each pole.\\<close>"], ["proof (state)\nthis:\n  sum (residue (f s)) sngs' =\n  (\\<Sum>k\\<in>{0<..N}.\n     residue (f s) (complex_of_real (2 * pi * real k) * \\<i>))\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "also"], ["proof (state)\nthis:\n  sum (residue (f s)) sngs' =\n  (\\<Sum>k\\<in>{0<..N}.\n     residue (f s) (complex_of_real (2 * pi * real k) * \\<i>))\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "have \"residue (f s) (2 * pi * of_nat k * \\<i>) = -exp (- s * of_real pi * \\<i> / 2) * Res s k\"\n    if \"k \\<in> {0<..N}\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (f s) (complex_of_real (2 * pi * real k) * \\<i>) =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. residue\n     (\\<lambda>z. exp (Ln' z * - s + complex_of_real a * z) / (1 - exp z))\n     (complex_of_real (2 * pi * real k) * \\<i>) =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "proof (subst residue_simple_pole_deriv)"], ["proof (state)\ngoal (10 subgoals):\n 1. (\\<lambda>z. exp (Ln' z * - s + complex_of_real a * z)) holomorphic_on\n    ?s\n 2. (\\<lambda>z. 1 - exp z) holomorphic_on ?s\n 3. open ?s\n 4. connected ?s\n 5. complex_of_real (2 * pi * real k) * \\<i> \\<in> ?s\n 6. ((\\<lambda>z. 1 - exp z) has_field_derivative ?g')\n     (at (complex_of_real (2 * pi * real k) * \\<i>))\n 7. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a *\n         (complex_of_real (2 * pi * real k) * \\<i>)) \\<noteq>\n    0\n 8. 1 - exp (complex_of_real (2 * pi * real k) * \\<i>) = 0\n 9. ?g' \\<noteq> 0\n 10. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n          complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n     ?g' =\n     - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "show \"open S'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open S'", "using closed_neg_Im_slit"], ["proof (prove)\nusing this:\n  closed {z. Re z = 0 \\<and> Im z \\<le> 0}\n\ngoal (1 subgoal):\n 1. open S'", "by (auto simp: S'_def)"], ["proof (state)\nthis:\n  open S'\n\ngoal (9 subgoals):\n 1. (\\<lambda>z. exp (Ln' z * - s + complex_of_real a * z)) holomorphic_on\n    S'\n 2. (\\<lambda>z. 1 - exp z) holomorphic_on S'\n 3. connected S'\n 4. complex_of_real (2 * pi * real k) * \\<i> \\<in> S'\n 5. ((\\<lambda>z. 1 - exp z) has_field_derivative ?g')\n     (at (complex_of_real (2 * pi * real k) * \\<i>))\n 6. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a *\n         (complex_of_real (2 * pi * real k) * \\<i>)) \\<noteq>\n    0\n 7. 1 - exp (complex_of_real (2 * pi * real k) * \\<i>) = 0\n 8. ?g' \\<noteq> 0\n 9. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n    ?g' =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "show \"connected S'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected S'", "by fact"], ["proof (state)\nthis:\n  connected S'\n\ngoal (8 subgoals):\n 1. (\\<lambda>z. exp (Ln' z * - s + complex_of_real a * z)) holomorphic_on\n    S'\n 2. (\\<lambda>z. 1 - exp z) holomorphic_on S'\n 3. complex_of_real (2 * pi * real k) * \\<i> \\<in> S'\n 4. ((\\<lambda>z. 1 - exp z) has_field_derivative ?g')\n     (at (complex_of_real (2 * pi * real k) * \\<i>))\n 5. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a *\n         (complex_of_real (2 * pi * real k) * \\<i>)) \\<noteq>\n    0\n 6. 1 - exp (complex_of_real (2 * pi * real k) * \\<i>) = 0\n 7. ?g' \\<noteq> 0\n 8. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n    ?g' =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "show \"(\\<lambda>z. exp (Ln' z * (-s) + of_real a * z)) holomorphic_on S'\"\n         \"(\\<lambda>z. 1 - exp z) holomorphic_on S'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>z. exp (Ln' z * - s + complex_of_real a * z)) holomorphic_on\n    S' &&&\n    (\\<lambda>z. 1 - exp z) holomorphic_on S'", "by (auto simp: S'_def Ln'_def complex_nonpos_Reals_iff intro!: holomorphic_intros)"], ["proof (state)\nthis:\n  (\\<lambda>z. exp (Ln' z * - s + complex_of_real a * z)) holomorphic_on S'\n  (\\<lambda>z. 1 - exp z) holomorphic_on S'\n\ngoal (6 subgoals):\n 1. complex_of_real (2 * pi * real k) * \\<i> \\<in> S'\n 2. ((\\<lambda>z. 1 - exp z) has_field_derivative ?g')\n     (at (complex_of_real (2 * pi * real k) * \\<i>))\n 3. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a *\n         (complex_of_real (2 * pi * real k) * \\<i>)) \\<noteq>\n    0\n 4. 1 - exp (complex_of_real (2 * pi * real k) * \\<i>) = 0\n 5. ?g' \\<noteq> 0\n 6. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n    ?g' =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "have \"((\\<lambda>z. 1 - exp z) has_field_derivative -exp (2 * pi * k * \\<i>))\n            (at (of_real (2 * pi * real k) * \\<i>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>z. 1 - exp z) has_field_derivative\n     - exp (complex_of_real (2 * pi * real k) * \\<i>))\n     (at (complex_of_real (2 * pi * real k) * \\<i>))", "by (auto intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>z. 1 - exp z) has_field_derivative\n   - exp (complex_of_real (2 * pi * real k) * \\<i>))\n   (at (complex_of_real (2 * pi * real k) * \\<i>))\n\ngoal (6 subgoals):\n 1. complex_of_real (2 * pi * real k) * \\<i> \\<in> S'\n 2. ((\\<lambda>z. 1 - exp z) has_field_derivative ?g')\n     (at (complex_of_real (2 * pi * real k) * \\<i>))\n 3. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a *\n         (complex_of_real (2 * pi * real k) * \\<i>)) \\<noteq>\n    0\n 4. 1 - exp (complex_of_real (2 * pi * real k) * \\<i>) = 0\n 5. ?g' \\<noteq> 0\n 6. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n    ?g' =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "also"], ["proof (state)\nthis:\n  ((\\<lambda>z. 1 - exp z) has_field_derivative\n   - exp (complex_of_real (2 * pi * real k) * \\<i>))\n   (at (complex_of_real (2 * pi * real k) * \\<i>))\n\ngoal (6 subgoals):\n 1. complex_of_real (2 * pi * real k) * \\<i> \\<in> S'\n 2. ((\\<lambda>z. 1 - exp z) has_field_derivative ?g')\n     (at (complex_of_real (2 * pi * real k) * \\<i>))\n 3. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a *\n         (complex_of_real (2 * pi * real k) * \\<i>)) \\<noteq>\n    0\n 4. 1 - exp (complex_of_real (2 * pi * real k) * \\<i>) = 0\n 5. ?g' \\<noteq> 0\n 6. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n    ?g' =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "have \"-exp (2 * pi * k * \\<i>) = -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - exp (complex_of_real (2 * pi * real k) * \\<i>) = - 1", "by (simp add: exp_eq_polar)"], ["proof (state)\nthis:\n  - exp (complex_of_real (2 * pi * real k) * \\<i>) = - 1\n\ngoal (6 subgoals):\n 1. complex_of_real (2 * pi * real k) * \\<i> \\<in> S'\n 2. ((\\<lambda>z. 1 - exp z) has_field_derivative ?g')\n     (at (complex_of_real (2 * pi * real k) * \\<i>))\n 3. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a *\n         (complex_of_real (2 * pi * real k) * \\<i>)) \\<noteq>\n    0\n 4. 1 - exp (complex_of_real (2 * pi * real k) * \\<i>) = 0\n 5. ?g' \\<noteq> 0\n 6. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n    ?g' =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>z. 1 - exp z) has_field_derivative - 1)\n   (at (complex_of_real (2 * pi * real k) * \\<i>))", "show \"((\\<lambda>z. 1 - exp z) has_field_derivative -1)\n                    (at (of_real (2 * pi * real k) * \\<i>))\""], ["proof (prove)\nusing this:\n  ((\\<lambda>z. 1 - exp z) has_field_derivative - 1)\n   (at (complex_of_real (2 * pi * real k) * \\<i>))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>z. 1 - exp z) has_field_derivative - 1)\n     (at (complex_of_real (2 * pi * real k) * \\<i>))", "."], ["proof (state)\nthis:\n  ((\\<lambda>z. 1 - exp z) has_field_derivative - 1)\n   (at (complex_of_real (2 * pi * real k) * \\<i>))\n\ngoal (5 subgoals):\n 1. complex_of_real (2 * pi * real k) * \\<i> \\<in> S'\n 2. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a *\n         (complex_of_real (2 * pi * real k) * \\<i>)) \\<noteq>\n    0\n 3. 1 - exp (complex_of_real (2 * pi * real k) * \\<i>) = 0\n 4. - 1 \\<noteq> 0\n 5. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n    - 1 =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "have \"Im (of_real (2 * pi * real k) * \\<i>) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Im (complex_of_real (2 * pi * real k) * \\<i>)", "using pi_gt_zero that"], ["proof (prove)\nusing this:\n  0 < pi\n  k \\<in> {0<..N}\n\ngoal (1 subgoal):\n 1. 0 < Im (complex_of_real (2 * pi * real k) * \\<i>)", "by auto"], ["proof (state)\nthis:\n  0 < Im (complex_of_real (2 * pi * real k) * \\<i>)\n\ngoal (5 subgoals):\n 1. complex_of_real (2 * pi * real k) * \\<i> \\<in> S'\n 2. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a *\n         (complex_of_real (2 * pi * real k) * \\<i>)) \\<noteq>\n    0\n 3. 1 - exp (complex_of_real (2 * pi * real k) * \\<i>) = 0\n 4. - 1 \\<noteq> 0\n 5. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n    - 1 =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "thus \"of_real (2 * pi * real k) * \\<i> \\<in> S'\""], ["proof (prove)\nusing this:\n  0 < Im (complex_of_real (2 * pi * real k) * \\<i>)\n\ngoal (1 subgoal):\n 1. complex_of_real (2 * pi * real k) * \\<i> \\<in> S'", "by (simp add: S'_def)"], ["proof (state)\nthis:\n  complex_of_real (2 * pi * real k) * \\<i> \\<in> S'\n\ngoal (4 subgoals):\n 1. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a *\n         (complex_of_real (2 * pi * real k) * \\<i>)) \\<noteq>\n    0\n 2. 1 - exp (complex_of_real (2 * pi * real k) * \\<i>) = 0\n 3. - 1 \\<noteq> 0\n 4. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n    - 1 =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "have \"exp (\\<i> * pi / 2) = \\<i>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (\\<i> * complex_of_real pi / 2) = \\<i>", "by (simp add: exp_eq_polar)"], ["proof (state)\nthis:\n  exp (\\<i> * complex_of_real pi / 2) = \\<i>\n\ngoal (4 subgoals):\n 1. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a *\n         (complex_of_real (2 * pi * real k) * \\<i>)) \\<noteq>\n    0\n 2. 1 - exp (complex_of_real (2 * pi * real k) * \\<i>) = 0\n 3. - 1 \\<noteq> 0\n 4. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n    - 1 =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "hence \"exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * -s +\n              of_real a * (of_real (2 * pi * real k) * \\<i>)) / -1 = \n            - exp (2 * k * a * pi * \\<i> - s * pi * \\<i> / 2 - s * ln (2 * k * pi))\" (is \"?R = _\")"], ["proof (prove)\nusing this:\n  exp (\\<i> * complex_of_real pi / 2) = \\<i>\n\ngoal (1 subgoal):\n 1. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n    - 1 =\n    - exp (complex_of_real (real (2 * k) * a * pi) * \\<i> -\n           s * complex_of_real pi * \\<i> / 2 -\n           s * complex_of_real (ln (real (2 * k) * pi)))", "using that"], ["proof (prove)\nusing this:\n  exp (\\<i> * complex_of_real pi / 2) = \\<i>\n  k \\<in> {0<..N}\n\ngoal (1 subgoal):\n 1. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n    - 1 =\n    - exp (complex_of_real (real (2 * k) * a * pi) * \\<i> -\n           s * complex_of_real pi * \\<i> / 2 -\n           s * complex_of_real (ln (real (2 * k) * pi)))", "by (subst Ln'_times_of_real) (simp_all add: Ln'_i algebra_simps exp_diff)"], ["proof (state)\nthis:\n  exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n       complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n  - 1 =\n  - exp (complex_of_real (real (2 * k) * a * pi) * \\<i> -\n         s * complex_of_real pi * \\<i> / 2 -\n         s * complex_of_real (ln (real (2 * k) * pi)))\n\ngoal (4 subgoals):\n 1. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a *\n         (complex_of_real (2 * pi * real k) * \\<i>)) \\<noteq>\n    0\n 2. 1 - exp (complex_of_real (2 * pi * real k) * \\<i>) = 0\n 3. - 1 \\<noteq> 0\n 4. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n    - 1 =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "also"], ["proof (state)\nthis:\n  exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n       complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n  - 1 =\n  - exp (complex_of_real (real (2 * k) * a * pi) * \\<i> -\n         s * complex_of_real pi * \\<i> / 2 -\n         s * complex_of_real (ln (real (2 * k) * pi)))\n\ngoal (4 subgoals):\n 1. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a *\n         (complex_of_real (2 * pi * real k) * \\<i>)) \\<noteq>\n    0\n 2. 1 - exp (complex_of_real (2 * pi * real k) * \\<i>) = 0\n 3. - 1 \\<noteq> 0\n 4. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n    - 1 =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "have \"\\<dots> = -exp (- s * of_real pi * \\<i> / 2) * Res s k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - exp (complex_of_real (real (2 * k) * a * pi) * \\<i> -\n           s * complex_of_real pi * \\<i> / 2 -\n           s * complex_of_real (ln (real (2 * k) * pi))) =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "using that"], ["proof (prove)\nusing this:\n  k \\<in> {0<..N}\n\ngoal (1 subgoal):\n 1. - exp (complex_of_real (real (2 * k) * a * pi) * \\<i> -\n           s * complex_of_real pi * \\<i> / 2 -\n           s * complex_of_real (ln (real (2 * k) * pi))) =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "by (simp add: Res_def exp_diff powr_def exp_minus inverse_eq_divide Ln_Reals_eq mult_ac)"], ["proof (state)\nthis:\n  - exp (complex_of_real (real (2 * k) * a * pi) * \\<i> -\n         s * complex_of_real pi * \\<i> / 2 -\n         s * complex_of_real (ln (real (2 * k) * pi))) =\n  - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k\n\ngoal (4 subgoals):\n 1. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a *\n         (complex_of_real (2 * pi * real k) * \\<i>)) \\<noteq>\n    0\n 2. 1 - exp (complex_of_real (2 * pi * real k) * \\<i>) = 0\n 3. - 1 \\<noteq> 0\n 4. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n    - 1 =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "finally"], ["proof (chain)\npicking this:\n  exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n       complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n  - 1 =\n  - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "show \"?R = -exp (- s * of_real pi * \\<i> / 2) * Res s k\""], ["proof (prove)\nusing this:\n  exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n       complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n  - 1 =\n  - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k\n\ngoal (1 subgoal):\n 1. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n    - 1 =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k", "."], ["proof (state)\nthis:\n  exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n       complex_of_real a * (complex_of_real (2 * pi * real k) * \\<i>)) /\n  - 1 =\n  - exp (- s * complex_of_real pi * \\<i> / 2) * Res s k\n\ngoal (3 subgoals):\n 1. exp (Ln' (complex_of_real (2 * pi * real k) * \\<i>) * - s +\n         complex_of_real a *\n         (complex_of_real (2 * pi * real k) * \\<i>)) \\<noteq>\n    0\n 2. 1 - exp (complex_of_real (2 * pi * real k) * \\<i>) = 0\n 3. - 1 \\<noteq> 0", "qed (insert that, auto simp: S'_def exp_eq_polar)"], ["proof (state)\nthis:\n  ?k \\<in> {0<..N} \\<Longrightarrow>\n  residue (f s) (complex_of_real (2 * pi * real ?k) * \\<i>) =\n  - exp (- s * complex_of_real pi * \\<i> / 2) * Res s ?k\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "hence \"(\\<Sum>k\\<in>{0<..N}. residue (f s) (2 * pi * of_nat k * \\<i>)) = \n           -exp (- s * of_real pi * \\<i> / 2) * (\\<Sum>k\\<in>{0<..N}. Res s k)\""], ["proof (prove)\nusing this:\n  ?k \\<in> {0<..N} \\<Longrightarrow>\n  residue (f s) (complex_of_real (2 * pi * real ?k) * \\<i>) =\n  - exp (- s * complex_of_real pi * \\<i> / 2) * Res s ?k\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{0<..N}.\n       residue (f s) (complex_of_real (2 * pi * real k) * \\<i>)) =\n    - exp (- s * complex_of_real pi * \\<i> / 2) * sum (Res s) {0<..N}", "by (simp add: sum_distrib_left)\n\n  \\<comment>\\<open>This gives us the final result:\\<close>"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{0<..N}.\n     residue (f s) (complex_of_real (2 * pi * real k) * \\<i>)) =\n  - exp (- s * complex_of_real pi * \\<i> / 2) * sum (Res s) {0<..N}\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "finally"], ["proof (chain)\npicking this:\n  contour_integral \\<gamma> (f s) =\n  complex_of_real (2 * pi) * \\<i> *\n  (- exp (- s * complex_of_real pi * \\<i> / 2) * sum (Res s) {0<..N})", "have \"contour_integral \\<gamma> (f s) =\n                  -2 * pi * \\<i> * exp (- s * of_real pi * \\<i> / 2) * (\\<Sum>k\\<in>{0<..N}. Res s k)\""], ["proof (prove)\nusing this:\n  contour_integral \\<gamma> (f s) =\n  complex_of_real (2 * pi) * \\<i> *\n  (- exp (- s * complex_of_real pi * \\<i> / 2) * sum (Res s) {0<..N})\n\ngoal (1 subgoal):\n 1. contour_integral \\<gamma> (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}", "by simp\n\n  \\<comment>\\<open>Lastly, we decompose the contour integral into its four constituent integrals because this\n     makes them somewhat nicer to work with later on.\\<close>"], ["proof (state)\nthis:\n  contour_integral \\<gamma> (f s) =\n  complex_of_real (- 2 * pi) * \\<i> *\n  exp (- s * complex_of_real pi * \\<i> / 2) *\n  sum (Res s) {0<..N}\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "also"], ["proof (state)\nthis:\n  contour_integral \\<gamma> (f s) =\n  complex_of_real (- 2 * pi) * \\<i> *\n  exp (- s * complex_of_real pi * \\<i> / 2) *\n  sum (Res s) {0<..N}\n\ngoal (2 subgoals):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}\n 2. f s contour_integrable_on hankel_semiannulus r N", "show \"f s contour_integrable_on \\<gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f s contour_integrable_on \\<gamma>", "proof (rule contour_integrable_holomorphic_simple)"], ["proof (state)\ngoal (4 subgoals):\n 1. f s holomorphic_on ?S\n 2. open ?S\n 3. valid_path \\<gamma>\n 4. path_image \\<gamma> \\<subseteq> ?S", "show \"path_image \\<gamma> \\<subseteq> S - sngs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path_image \\<gamma> \\<subseteq> S - sngs'", "by fact"], ["proof (state)\nthis:\n  path_image \\<gamma> \\<subseteq> S - sngs'\n\ngoal (3 subgoals):\n 1. f s holomorphic_on S - sngs'\n 2. open (S - sngs')\n 3. valid_path \\<gamma>", "have \"closed sngs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed sngs'", "by (intro finite_imp_closed) (auto simp: sngs'_def)"], ["proof (state)\nthis:\n  closed sngs'\n\ngoal (3 subgoals):\n 1. f s holomorphic_on S - sngs'\n 2. open (S - sngs')\n 3. valid_path \\<gamma>", "with \\<open>open S\\<close>"], ["proof (chain)\npicking this:\n  open S\n  closed sngs'", "show \"open (S - sngs')\""], ["proof (prove)\nusing this:\n  open S\n  closed sngs'\n\ngoal (1 subgoal):\n 1. open (S - sngs')", "by auto"], ["proof (state)\nthis:\n  open (S - sngs')\n\ngoal (2 subgoals):\n 1. f s holomorphic_on S - sngs'\n 2. valid_path \\<gamma>", "qed (insert holo, auto)"], ["proof (state)\nthis:\n  f s contour_integrable_on \\<gamma>\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}", "hence eq: \"contour_integral \\<gamma> (f s) = \n               contour_integral big_circle (f s) + contour_integral neg_line (f s) +\n               contour_integral small_circle (f s) + contour_integral pos_line (f s)\""], ["proof (prove)\nusing this:\n  f s contour_integrable_on \\<gamma>\n\ngoal (1 subgoal):\n 1. contour_integral \\<gamma> (f s) =\n    contour_integral big_circle (f s) + contour_integral neg_line (f s) +\n    contour_integral small_circle (f s) +\n    contour_integral pos_line (f s)", "unfolding \\<gamma>_altdef big_circle_def neg_line_def small_circle_def pos_line_def"], ["proof (prove)\nusing this:\n  f s contour_integrable_on\n  part_circlepath 0 R 0 pi +++\n  linepath (complex_of_real (- R)) (complex_of_real (- r)) +++\n  part_circlepath 0 r pi 0 +++\n  linepath (complex_of_real r) (complex_of_real R)\n\ngoal (1 subgoal):\n 1. contour_integral\n     (part_circlepath 0 R 0 pi +++\n      linepath (complex_of_real (- R)) (complex_of_real (- r)) +++\n      part_circlepath 0 r pi 0 +++\n      linepath (complex_of_real r) (complex_of_real R))\n     (f s) =\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral\n     (linepath (complex_of_real (- R)) (complex_of_real (- r))) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) +\n    contour_integral (linepath (complex_of_real r) (complex_of_real R))\n     (f s)", "by simp"], ["proof (state)\nthis:\n  contour_integral \\<gamma> (f s) =\n  contour_integral big_circle (f s) + contour_integral neg_line (f s) +\n  contour_integral small_circle (f s) +\n  contour_integral pos_line (f s)\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}", "also"], ["proof (state)\nthis:\n  contour_integral \\<gamma> (f s) =\n  contour_integral big_circle (f s) + contour_integral neg_line (f s) +\n  contour_integral small_circle (f s) +\n  contour_integral pos_line (f s)\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}", "have \"contour_integral neg_line (f s) = integral {-R..-r} (\\<lambda>x. f s (complex_of_real x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. contour_integral neg_line (f s) =\n    integral {- R..- r} (\\<lambda>x. f s (complex_of_real x))", "unfolding neg_line_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. contour_integral\n     (linepath (complex_of_real (- R)) (complex_of_real (- r))) (f s) =\n    integral {- R..- r} (\\<lambda>x. f s (complex_of_real x))", "using r_R"], ["proof (prove)\nusing this:\n  0 < r\n  r < 2\n  2 < R\n\ngoal (1 subgoal):\n 1. contour_integral\n     (linepath (complex_of_real (- R)) (complex_of_real (- r))) (f s) =\n    integral {- R..- r} (\\<lambda>x. f s (complex_of_real x))", "by (subst contour_integral_linepath_Reals_eq) auto"], ["proof (state)\nthis:\n  contour_integral neg_line (f s) =\n  integral {- R..- r} (\\<lambda>x. f s (complex_of_real x))\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}", "also"], ["proof (state)\nthis:\n  contour_integral neg_line (f s) =\n  integral {- R..- r} (\\<lambda>x. f s (complex_of_real x))\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}", "have \"\\<dots> = exp (- \\<i> * pi * s) * \n                    integral {r..R} (\\<lambda>x. exp (-ln x * s) * exp (-a * x) / (1 - exp (-x)))\"\n    (is \"_ = _ * ?I\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {- R..- r} (\\<lambda>x. f s (complex_of_real x)) =\n    exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         exp (complex_of_real (- ln x) * s) *\n         complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x)))", "unfolding integral_mult_right [symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {- R..- r} (\\<lambda>x. f s (complex_of_real x)) =\n    integral {r..R}\n     (\\<lambda>x.\n         exp (- \\<i> * complex_of_real pi * s) *\n         (exp (complex_of_real (- ln x) * s) *\n          complex_of_real (exp (- a * x)) /\n          complex_of_real (1 - exp (- x))))", "using r_R"], ["proof (prove)\nusing this:\n  0 < r\n  r < 2\n  2 < R\n\ngoal (1 subgoal):\n 1. integral {- R..- r} (\\<lambda>x. f s (complex_of_real x)) =\n    integral {r..R}\n     (\\<lambda>x.\n         exp (- \\<i> * complex_of_real pi * s) *\n         (exp (complex_of_real (- ln x) * s) *\n          complex_of_real (exp (- a * x)) /\n          complex_of_real (1 - exp (- x))))", "by (subst Henstock_Kurzweil_Integration.integral_reflect_real [symmetric], intro integral_cong)\n       (auto simp: f_def exp_of_real Ln'_of_real_neg exp_minus exp_Reals_eq\n                   exp_diff exp_add field_simps)"], ["proof (state)\nthis:\n  integral {- R..- r} (\\<lambda>x. f s (complex_of_real x)) =\n  exp (- \\<i> * complex_of_real pi * s) *\n  integral {r..R}\n   (\\<lambda>x.\n       exp (complex_of_real (- ln x) * s) *\n       complex_of_real (exp (- a * x)) /\n       complex_of_real (1 - exp (- x)))\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}", "also"], ["proof (state)\nthis:\n  integral {- R..- r} (\\<lambda>x. f s (complex_of_real x)) =\n  exp (- \\<i> * complex_of_real pi * s) *\n  integral {r..R}\n   (\\<lambda>x.\n       exp (complex_of_real (- ln x) * s) *\n       complex_of_real (exp (- a * x)) /\n       complex_of_real (1 - exp (- x)))\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}", "have \"?I = integral {r..R} (\\<lambda>x. x powr (-s) * exp (-a * x) / (1 - exp (-x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {r..R}\n     (\\<lambda>x.\n         exp (complex_of_real (- ln x) * s) *\n         complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) =\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x)))", "using r_R"], ["proof (prove)\nusing this:\n  0 < r\n  r < 2\n  2 < R\n\ngoal (1 subgoal):\n 1. integral {r..R}\n     (\\<lambda>x.\n         exp (complex_of_real (- ln x) * s) *\n         complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) =\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x)))", "by (intro integral_cong) (auto simp: powr_def Ln_Reals_eq exp_minus exp_diff field_simps)"], ["proof (state)\nthis:\n  integral {r..R}\n   (\\<lambda>x.\n       exp (complex_of_real (- ln x) * s) *\n       complex_of_real (exp (- a * x)) /\n       complex_of_real (1 - exp (- x))) =\n  integral {r..R}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n       complex_of_real (1 - exp (- x)))\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}", "also"], ["proof (state)\nthis:\n  integral {r..R}\n   (\\<lambda>x.\n       exp (complex_of_real (- ln x) * s) *\n       complex_of_real (exp (- a * x)) /\n       complex_of_real (1 - exp (- x))) =\n  integral {r..R}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n       complex_of_real (1 - exp (- x)))\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}", "have \"contour_integral pos_line (f s) = integral {r..R} (\\<lambda>x. f s (complex_of_real x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. contour_integral pos_line (f s) =\n    integral {r..R} (\\<lambda>x. f s (complex_of_real x))", "unfolding pos_line_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. contour_integral (linepath (complex_of_real r) (complex_of_real R))\n     (f s) =\n    integral {r..R} (\\<lambda>x. f s (complex_of_real x))", "using r_R"], ["proof (prove)\nusing this:\n  0 < r\n  r < 2\n  2 < R\n\ngoal (1 subgoal):\n 1. contour_integral (linepath (complex_of_real r) (complex_of_real R))\n     (f s) =\n    integral {r..R} (\\<lambda>x. f s (complex_of_real x))", "by (subst contour_integral_linepath_Reals_eq) auto"], ["proof (state)\nthis:\n  contour_integral pos_line (f s) =\n  integral {r..R} (\\<lambda>x. f s (complex_of_real x))\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}", "also"], ["proof (state)\nthis:\n  contour_integral pos_line (f s) =\n  integral {r..R} (\\<lambda>x. f s (complex_of_real x))\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}", "have \"\\<dots> = integral {r..R} (\\<lambda>x. x powr (-s) * exp (a * x) / (1 - exp x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {r..R} (\\<lambda>x. f s (complex_of_real x)) =\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x))", "using r_R"], ["proof (prove)\nusing this:\n  0 < r\n  r < 2\n  2 < R\n\ngoal (1 subgoal):\n 1. integral {r..R} (\\<lambda>x. f s (complex_of_real x)) =\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x))", "by (intro integral_cong) (simp add: f_def Ln'_of_real_pos exp_diff exp_minus\n                                                  exp_Reals_eq field_simps powr_def Ln_Reals_eq)"], ["proof (state)\nthis:\n  integral {r..R} (\\<lambda>x. f s (complex_of_real x)) =\n  integral {r..R}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n       complex_of_real (1 - exp x))\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}", "finally"], ["proof (chain)\npicking this:\n  contour_integral big_circle (f s) +\n  exp (- \\<i> * complex_of_real pi * s) *\n  integral {r..R}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n       complex_of_real (1 - exp (- x))) +\n  contour_integral small_circle (f s) +\n  integral {r..R}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n       complex_of_real (1 - exp x)) =\n  complex_of_real (- 2 * pi) * \\<i> *\n  exp (- s * complex_of_real pi * \\<i> / 2) *\n  sum (Res s) {0<..N}", "show ?thesis1"], ["proof (prove)\nusing this:\n  contour_integral big_circle (f s) +\n  exp (- \\<i> * complex_of_real pi * s) *\n  integral {r..R}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n       complex_of_real (1 - exp (- x))) +\n  contour_integral small_circle (f s) +\n  integral {r..R}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n       complex_of_real (1 - exp x)) =\n  complex_of_real (- 2 * pi) * \\<i> *\n  exp (- s * complex_of_real pi * \\<i> / 2) *\n  sum (Res s) {0<..N}\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..R}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 R 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..N}", "by (simp only: add_ac big_circle_def small_circle_def)"], ["proof (state)\nthis:\n  exp (- \\<i> * complex_of_real pi * s) *\n  integral {r..R}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n       complex_of_real (1 - exp (- x))) +\n  integral {r..R}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n       complex_of_real (1 - exp x)) +\n  contour_integral (part_circlepath 0 R 0 pi) (f s) +\n  contour_integral (part_circlepath 0 r pi 0) (f s) =\n  complex_of_real (- 2 * pi) * \\<i> *\n  exp (- s * complex_of_real pi * \\<i> / 2) *\n  sum (Res s) {0<..N}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Next, we need bounds on the integrands of the two semicircles.\n\\<close>"], ["", "lemma hurwitz_formula_bound1:\n  defines \"H \\<equiv> \\<lambda>z. exp (complex_of_real a * z) / (1 - exp z)\"\n  assumes \"r > 0\"\n  obtains C where \"C \\<ge> 0\" and \"\\<And>z. z \\<notin> (\\<Union>n::int. ball (2 * n * pi * \\<i>) r) \\<Longrightarrow> norm (H z) \\<le> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define A where \"A = cbox (-1 - pi * \\<i>) (1 + pi * \\<i>) - ball 0 r\""], ["proof (state)\nthis:\n  A =\n  cbox (- 1 - complex_of_real pi * \\<i>) (1 + complex_of_real pi * \\<i>) -\n  ball 0 r\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  A =\n  cbox (- 1 - complex_of_real pi * \\<i>) (1 + complex_of_real pi * \\<i>) -\n  ball 0 r\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume \"z \\<in> A\""], ["proof (state)\nthis:\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"exp z \\<noteq> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp z \\<noteq> 1", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. exp z = 1 \\<Longrightarrow> False", "assume \"exp z = 1\""], ["proof (state)\nthis:\n  exp z = 1\n\ngoal (1 subgoal):\n 1. exp z = 1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  exp z = 1", "obtain n :: int where [simp]: \"z = 2 * n * pi * \\<i>\""], ["proof (prove)\nusing this:\n  exp z = 1\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        z =\n        complex_of_real (real_of_int (2 * n) * pi) * \\<i> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (subst (asm) exp_eq_1) (auto simp: complex_eq_iff)"], ["proof (state)\nthis:\n  z = complex_of_real (real_of_int (2 * n) * pi) * \\<i>\n\ngoal (1 subgoal):\n 1. exp z = 1 \\<Longrightarrow> False", "from \\<open>z \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  z \\<in> A", "have \"(2 * n) * pi \\<ge> (-1) * pi\" and \"(2 * n) * pi \\<le> 1 * pi\""], ["proof (prove)\nusing this:\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. - 1 * pi \\<le> real_of_int (2 * n) * pi &&&\n    real_of_int (2 * n) * pi \\<le> 1 * pi", "by (auto simp: A_def in_cbox_complex_iff)"], ["proof (state)\nthis:\n  - 1 * pi \\<le> real_of_int (2 * n) * pi\n  real_of_int (2 * n) * pi \\<le> 1 * pi\n\ngoal (1 subgoal):\n 1. exp z = 1 \\<Longrightarrow> False", "hence \"n = 0\""], ["proof (prove)\nusing this:\n  - 1 * pi \\<le> real_of_int (2 * n) * pi\n  real_of_int (2 * n) * pi \\<le> 1 * pi\n\ngoal (1 subgoal):\n 1. n = 0", "by (subst (asm) (1 2) mult_le_cancel_right) auto"], ["proof (state)\nthis:\n  n = 0\n\ngoal (1 subgoal):\n 1. exp z = 1 \\<Longrightarrow> False", "with \\<open>z \\<in> A\\<close> and \\<open>r > 0\\<close>"], ["proof (chain)\npicking this:\n  z \\<in> A\n  0 < r\n  n = 0", "show False"], ["proof (prove)\nusing this:\n  z \\<in> A\n  0 < r\n  n = 0\n\ngoal (1 subgoal):\n 1. False", "by (simp add: A_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  exp z \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  ?z2 \\<in> A \\<Longrightarrow> exp ?z2 \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"continuous_on A H\""], ["proof (prove)\nusing this:\n  ?z2 \\<in> A \\<Longrightarrow> exp ?z2 \\<noteq> 1\n\ngoal (1 subgoal):\n 1. continuous_on A H", "by (auto simp: A_def H_def intro!: continuous_intros)"], ["proof (state)\nthis:\n  continuous_on A H\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  continuous_on A H\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"compact A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact A", "by (auto simp: A_def compact_eq_bounded_closed)"], ["proof (state)\nthis:\n  compact A\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  continuous_on A H\n  compact A", "have \"compact (H ` A)\""], ["proof (prove)\nusing this:\n  continuous_on A H\n  compact A\n\ngoal (1 subgoal):\n 1. compact (H ` A)", "by (rule compact_continuous_image)"], ["proof (state)\nthis:\n  compact (H ` A)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"bounded (H ` A)\""], ["proof (prove)\nusing this:\n  compact (H ` A)\n\ngoal (1 subgoal):\n 1. bounded (H ` A)", "by (rule compact_imp_bounded)"], ["proof (state)\nthis:\n  bounded (H ` A)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  bounded (H ` A)", "obtain C where bound_inside: \"\\<And>z. z \\<in> A \\<Longrightarrow> norm (H z) \\<le> C\""], ["proof (prove)\nusing this:\n  bounded (H ` A)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        (\\<And>z.\n            z \\<in> A \\<Longrightarrow>\n            cmod (H z) \\<le> C) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: bounded_iff)"], ["proof (state)\nthis:\n  ?z \\<in> A \\<Longrightarrow> cmod (H ?z) \\<le> C\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have bound_outside: \"norm (H z) \\<le> exp 1 / (exp 1 - 1)\" if \"\\<bar>Re z\\<bar> > 1\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (H z) \\<le> exp 1 / (exp 1 - 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (H z) \\<le> exp 1 / (exp 1 - 1)", "have \"norm (H z) = exp (a * Re z) / norm (1 - exp z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (H z) = exp (a * Re z) / cmod (1 - exp z)", "by (simp add: H_def norm_divide)"], ["proof (state)\nthis:\n  cmod (H z) = exp (a * Re z) / cmod (1 - exp z)\n\ngoal (1 subgoal):\n 1. cmod (H z) \\<le> exp 1 / (exp 1 - 1)", "also"], ["proof (state)\nthis:\n  cmod (H z) = exp (a * Re z) / cmod (1 - exp z)\n\ngoal (1 subgoal):\n 1. cmod (H z) \\<le> exp 1 / (exp 1 - 1)", "have \"\\<bar>1 - exp (Re z)\\<bar> \\<le> norm (1 - exp z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>1 - exp (Re z)\\<bar> \\<le> cmod (1 - exp z)", "by (rule order.trans[OF _ norm_triangle_ineq3]) simp"], ["proof (state)\nthis:\n  \\<bar>1 - exp (Re z)\\<bar> \\<le> cmod (1 - exp z)\n\ngoal (1 subgoal):\n 1. cmod (H z) \\<le> exp 1 / (exp 1 - 1)", "hence \"exp (a * Re z) / norm (1 - exp z) \\<le> exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar>\""], ["proof (prove)\nusing this:\n  \\<bar>1 - exp (Re z)\\<bar> \\<le> cmod (1 - exp z)\n\ngoal (1 subgoal):\n 1. exp (a * Re z) / cmod (1 - exp z)\n    \\<le> exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar>", "using that"], ["proof (prove)\nusing this:\n  \\<bar>1 - exp (Re z)\\<bar> \\<le> cmod (1 - exp z)\n  1 < \\<bar>Re z\\<bar>\n\ngoal (1 subgoal):\n 1. exp (a * Re z) / cmod (1 - exp z)\n    \\<le> exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar>", "by (intro divide_left_mono mult_pos_pos) auto"], ["proof (state)\nthis:\n  exp (a * Re z) / cmod (1 - exp z)\n  \\<le> exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar>\n\ngoal (1 subgoal):\n 1. cmod (H z) \\<le> exp 1 / (exp 1 - 1)", "also"], ["proof (state)\nthis:\n  exp (a * Re z) / cmod (1 - exp z)\n  \\<le> exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar>\n\ngoal (1 subgoal):\n 1. cmod (H z) \\<le> exp 1 / (exp 1 - 1)", "have \"\\<dots> \\<le> exp 1 / (exp 1 - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "proof (cases \"Re z > 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)\n 2. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "case True"], ["proof (state)\nthis:\n  1 < Re z\n\ngoal (2 subgoals):\n 1. 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)\n 2. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "hence \"exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> = exp (a * Re z) / (exp (Re z) - 1)\""], ["proof (prove)\nusing this:\n  1 < Re z\n\ngoal (1 subgoal):\n 1. exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> =\n    exp (a * Re z) / (exp (Re z) - 1)", "by simp"], ["proof (state)\nthis:\n  exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> =\n  exp (a * Re z) / (exp (Re z) - 1)\n\ngoal (2 subgoals):\n 1. 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)\n 2. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "also"], ["proof (state)\nthis:\n  exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> =\n  exp (a * Re z) / (exp (Re z) - 1)\n\ngoal (2 subgoals):\n 1. 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)\n 2. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "have \"\\<dots> \\<le> exp (Re z) / (exp (Re z) - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (a * Re z) / (exp (Re z) - 1) \\<le> exp (Re z) / (exp (Re z) - 1)", "using a True"], ["proof (prove)\nusing this:\n  a \\<in> {0<..1}\n  1 < Re z\n\ngoal (1 subgoal):\n 1. exp (a * Re z) / (exp (Re z) - 1) \\<le> exp (Re z) / (exp (Re z) - 1)", "by (intro divide_right_mono) auto"], ["proof (state)\nthis:\n  exp (a * Re z) / (exp (Re z) - 1) \\<le> exp (Re z) / (exp (Re z) - 1)\n\ngoal (2 subgoals):\n 1. 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)\n 2. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "also"], ["proof (state)\nthis:\n  exp (a * Re z) / (exp (Re z) - 1) \\<le> exp (Re z) / (exp (Re z) - 1)\n\ngoal (2 subgoals):\n 1. 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)\n 2. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "have \"\\<dots> = 1 / (1 - exp (-Re z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (Re z) / (exp (Re z) - 1) = 1 / (1 - exp (- Re z))", "by (simp add: exp_minus field_simps)"], ["proof (state)\nthis:\n  exp (Re z) / (exp (Re z) - 1) = 1 / (1 - exp (- Re z))\n\ngoal (2 subgoals):\n 1. 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)\n 2. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "also"], ["proof (state)\nthis:\n  exp (Re z) / (exp (Re z) - 1) = 1 / (1 - exp (- Re z))\n\ngoal (2 subgoals):\n 1. 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)\n 2. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "have \"\\<dots> \\<le> 1 / (1 - exp (-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / (1 - exp (- Re z)) \\<le> 1 / (1 - exp (- 1))", "using True"], ["proof (prove)\nusing this:\n  1 < Re z\n\ngoal (1 subgoal):\n 1. 1 / (1 - exp (- Re z)) \\<le> 1 / (1 - exp (- 1))", "by (intro divide_left_mono diff_mono) auto"], ["proof (state)\nthis:\n  1 / (1 - exp (- Re z)) \\<le> 1 / (1 - exp (- 1))\n\ngoal (2 subgoals):\n 1. 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)\n 2. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "also"], ["proof (state)\nthis:\n  1 / (1 - exp (- Re z)) \\<le> 1 / (1 - exp (- 1))\n\ngoal (2 subgoals):\n 1. 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)\n 2. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "have \"\\<dots> = exp 1 / (exp 1 - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / (1 - exp (- 1)) = exp 1 / (exp 1 - 1)", "by (simp add: exp_minus field_simps)"], ["proof (state)\nthis:\n  1 / (1 - exp (- 1)) = exp 1 / (exp 1 - 1)\n\ngoal (2 subgoals):\n 1. 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)\n 2. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "finally"], ["proof (chain)\npicking this:\n  exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)\n\ngoal (1 subgoal):\n 1. exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "."], ["proof (state)\nthis:\n  exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)\n\ngoal (1 subgoal):\n 1. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "case False"], ["proof (state)\nthis:\n  \\<not> 1 < Re z\n\ngoal (1 subgoal):\n 1. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "with that"], ["proof (chain)\npicking this:\n  1 < \\<bar>Re z\\<bar>\n  \\<not> 1 < Re z", "have \"Re z < -1\""], ["proof (prove)\nusing this:\n  1 < \\<bar>Re z\\<bar>\n  \\<not> 1 < Re z\n\ngoal (1 subgoal):\n 1. Re z < - 1", "by simp"], ["proof (state)\nthis:\n  Re z < - 1\n\ngoal (1 subgoal):\n 1. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "hence \"exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> = exp (a * Re z) / (1 - exp (Re z))\""], ["proof (prove)\nusing this:\n  Re z < - 1\n\ngoal (1 subgoal):\n 1. exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> =\n    exp (a * Re z) / (1 - exp (Re z))", "by simp"], ["proof (state)\nthis:\n  exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> =\n  exp (a * Re z) / (1 - exp (Re z))\n\ngoal (1 subgoal):\n 1. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "also"], ["proof (state)\nthis:\n  exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> =\n  exp (a * Re z) / (1 - exp (Re z))\n\ngoal (1 subgoal):\n 1. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "have \"\\<dots> \\<le> 1 / (1 - exp (Re z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (a * Re z) / (1 - exp (Re z)) \\<le> 1 / (1 - exp (Re z))", "using a and \\<open>Re z < -1\\<close>"], ["proof (prove)\nusing this:\n  a \\<in> {0<..1}\n  Re z < - 1\n\ngoal (1 subgoal):\n 1. exp (a * Re z) / (1 - exp (Re z)) \\<le> 1 / (1 - exp (Re z))", "by (intro divide_right_mono) (auto intro: mult_nonneg_nonpos)"], ["proof (state)\nthis:\n  exp (a * Re z) / (1 - exp (Re z)) \\<le> 1 / (1 - exp (Re z))\n\ngoal (1 subgoal):\n 1. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "also"], ["proof (state)\nthis:\n  exp (a * Re z) / (1 - exp (Re z)) \\<le> 1 / (1 - exp (Re z))\n\ngoal (1 subgoal):\n 1. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "have \"\\<dots> \\<le> 1 / (1 - exp (-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / (1 - exp (Re z)) \\<le> 1 / (1 - exp (- 1))", "using \\<open>Re z < -1\\<close>"], ["proof (prove)\nusing this:\n  Re z < - 1\n\ngoal (1 subgoal):\n 1. 1 / (1 - exp (Re z)) \\<le> 1 / (1 - exp (- 1))", "by (intro divide_left_mono) auto"], ["proof (state)\nthis:\n  1 / (1 - exp (Re z)) \\<le> 1 / (1 - exp (- 1))\n\ngoal (1 subgoal):\n 1. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "also"], ["proof (state)\nthis:\n  1 / (1 - exp (Re z)) \\<le> 1 / (1 - exp (- 1))\n\ngoal (1 subgoal):\n 1. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "have \"\\<dots> = exp 1 / (exp 1 - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / (1 - exp (- 1)) = exp 1 / (exp 1 - 1)", "by (simp add: exp_minus field_simps)"], ["proof (state)\nthis:\n  1 / (1 - exp (- 1)) = exp 1 / (exp 1 - 1)\n\ngoal (1 subgoal):\n 1. \\<not> 1 < Re z \\<Longrightarrow>\n    exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "finally"], ["proof (chain)\npicking this:\n  exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)\n\ngoal (1 subgoal):\n 1. exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)", "."], ["proof (state)\nthis:\n  exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  exp (a * Re z) / \\<bar>1 - exp (Re z)\\<bar> \\<le> exp 1 / (exp 1 - 1)\n\ngoal (1 subgoal):\n 1. cmod (H z) \\<le> exp 1 / (exp 1 - 1)", "finally"], ["proof (chain)\npicking this:\n  cmod (H z) \\<le> exp 1 / (exp 1 - 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  cmod (H z) \\<le> exp 1 / (exp 1 - 1)\n\ngoal (1 subgoal):\n 1. cmod (H z) \\<le> exp 1 / (exp 1 - 1)", "."], ["proof (state)\nthis:\n  cmod (H z) \\<le> exp 1 / (exp 1 - 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 < \\<bar>Re ?z\\<bar> \\<Longrightarrow>\n  cmod (H ?z) \\<le> exp 1 / (exp 1 - 1)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define D where \"D = max C (exp 1 / (exp 1 - 1))\""], ["proof (state)\nthis:\n  D = max C (exp 1 / (exp 1 - 1))\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"D \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> D", "by (simp add: D_def max.coboundedI2)"], ["proof (state)\nthis:\n  0 \\<le> D\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"norm (H z) \\<le> D\" if \"z \\<notin> (\\<Union>n::int. ball (2 * n * pi * \\<i>) r)\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (H z) \\<le> D", "proof (cases \"\\<bar>Re z\\<bar> \\<le> 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<bar>Re z\\<bar> \\<le> 1 \\<Longrightarrow> cmod (H z) \\<le> D\n 2. \\<not> \\<bar>Re z\\<bar> \\<le> 1 \\<Longrightarrow> cmod (H z) \\<le> D", "case False"], ["proof (state)\nthis:\n  \\<not> \\<bar>Re z\\<bar> \\<le> 1\n\ngoal (2 subgoals):\n 1. \\<bar>Re z\\<bar> \\<le> 1 \\<Longrightarrow> cmod (H z) \\<le> D\n 2. \\<not> \\<bar>Re z\\<bar> \\<le> 1 \\<Longrightarrow> cmod (H z) \\<le> D", "with bound_outside[of z]"], ["proof (chain)\npicking this:\n  1 < \\<bar>Re z\\<bar> \\<Longrightarrow>\n  cmod (H z) \\<le> exp 1 / (exp 1 - 1)\n  \\<not> \\<bar>Re z\\<bar> \\<le> 1", "show ?thesis"], ["proof (prove)\nusing this:\n  1 < \\<bar>Re z\\<bar> \\<Longrightarrow>\n  cmod (H z) \\<le> exp 1 / (exp 1 - 1)\n  \\<not> \\<bar>Re z\\<bar> \\<le> 1\n\ngoal (1 subgoal):\n 1. cmod (H z) \\<le> D", "by (simp add: D_def)"], ["proof (state)\nthis:\n  cmod (H z) \\<le> D\n\ngoal (1 subgoal):\n 1. \\<bar>Re z\\<bar> \\<le> 1 \\<Longrightarrow> cmod (H z) \\<le> D", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>Re z\\<bar> \\<le> 1 \\<Longrightarrow> cmod (H z) \\<le> D", "case True"], ["proof (state)\nthis:\n  \\<bar>Re z\\<bar> \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<bar>Re z\\<bar> \\<le> 1 \\<Longrightarrow> cmod (H z) \\<le> D", "define n where \"n = \\<lfloor>Im z / (2 * pi) + 1 / 2\\<rfloor>\""], ["proof (state)\nthis:\n  n = \\<lfloor>Im z / (2 * pi) + 1 / 2\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<bar>Re z\\<bar> \\<le> 1 \\<Longrightarrow> cmod (H z) \\<le> D", "have \"Im (z - 2 * n * pi * \\<i>) = frac (Im z / (2 * pi) + 1 / 2) * (2 * pi) - pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (z - complex_of_real (real_of_int (2 * n) * pi) * \\<i>) =\n    frac (Im z / (2 * pi) + 1 / 2) * (2 * pi) - pi", "by (simp add: n_def frac_def algebra_simps)"], ["proof (state)\nthis:\n  Im (z - complex_of_real (real_of_int (2 * n) * pi) * \\<i>) =\n  frac (Im z / (2 * pi) + 1 / 2) * (2 * pi) - pi\n\ngoal (1 subgoal):\n 1. \\<bar>Re z\\<bar> \\<le> 1 \\<Longrightarrow> cmod (H z) \\<le> D", "also"], ["proof (state)\nthis:\n  Im (z - complex_of_real (real_of_int (2 * n) * pi) * \\<i>) =\n  frac (Im z / (2 * pi) + 1 / 2) * (2 * pi) - pi\n\ngoal (1 subgoal):\n 1. \\<bar>Re z\\<bar> \\<le> 1 \\<Longrightarrow> cmod (H z) \\<le> D", "have \"\\<dots> \\<in> {-pi..<pi}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. frac (Im z / (2 * pi) + 1 / 2) * (2 * pi) - pi \\<in> {- pi..<pi}", "using frac_lt_1"], ["proof (prove)\nusing this:\n  frac ?x < (1::?'a)\n\ngoal (1 subgoal):\n 1. frac (Im z / (2 * pi) + 1 / 2) * (2 * pi) - pi \\<in> {- pi..<pi}", "by simp"], ["proof (state)\nthis:\n  frac (Im z / (2 * pi) + 1 / 2) * (2 * pi) - pi \\<in> {- pi..<pi}\n\ngoal (1 subgoal):\n 1. \\<bar>Re z\\<bar> \\<le> 1 \\<Longrightarrow> cmod (H z) \\<le> D", "finally"], ["proof (chain)\npicking this:\n  Im (z - complex_of_real (real_of_int (2 * n) * pi) * \\<i>)\n  \\<in> {- pi..<pi}", "have \"norm (H (z - 2 * n * pi * \\<i>)) \\<le> C\""], ["proof (prove)\nusing this:\n  Im (z - complex_of_real (real_of_int (2 * n) * pi) * \\<i>)\n  \\<in> {- pi..<pi}\n\ngoal (1 subgoal):\n 1. cmod (H (z - complex_of_real (real_of_int (2 * n) * pi) * \\<i>)) \\<le> C", "using True that"], ["proof (prove)\nusing this:\n  Im (z - complex_of_real (real_of_int (2 * n) * pi) * \\<i>)\n  \\<in> {- pi..<pi}\n  \\<bar>Re z\\<bar> \\<le> 1\n  z \\<notin> (\\<Union>n.\n                 ball (complex_of_real (real_of_int (2 * n) * pi) * \\<i>) r)\n\ngoal (1 subgoal):\n 1. cmod (H (z - complex_of_real (real_of_int (2 * n) * pi) * \\<i>)) \\<le> C", "by (intro bound_inside) (auto simp: A_def in_cbox_complex_iff dist_norm n_def)"], ["proof (state)\nthis:\n  cmod (H (z - complex_of_real (real_of_int (2 * n) * pi) * \\<i>)) \\<le> C\n\ngoal (1 subgoal):\n 1. \\<bar>Re z\\<bar> \\<le> 1 \\<Longrightarrow> cmod (H z) \\<le> D", "also"], ["proof (state)\nthis:\n  cmod (H (z - complex_of_real (real_of_int (2 * n) * pi) * \\<i>)) \\<le> C\n\ngoal (1 subgoal):\n 1. \\<bar>Re z\\<bar> \\<le> 1 \\<Longrightarrow> cmod (H z) \\<le> D", "have \"exp (2 * pi * n * \\<i>) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (complex_of_real (2 * pi * real_of_int n) * \\<i>) = 1", "by (simp add: exp_eq_polar)"], ["proof (state)\nthis:\n  exp (complex_of_real (2 * pi * real_of_int n) * \\<i>) = 1\n\ngoal (1 subgoal):\n 1. \\<bar>Re z\\<bar> \\<le> 1 \\<Longrightarrow> cmod (H z) \\<le> D", "hence \"norm (H (z - 2 * n * pi * \\<i>)) = norm (H z)\""], ["proof (prove)\nusing this:\n  exp (complex_of_real (2 * pi * real_of_int n) * \\<i>) = 1\n\ngoal (1 subgoal):\n 1. cmod (H (z - complex_of_real (real_of_int (2 * n) * pi) * \\<i>)) =\n    cmod (H z)", "by (simp add: H_def norm_divide exp_diff mult_ac)"], ["proof (state)\nthis:\n  cmod (H (z - complex_of_real (real_of_int (2 * n) * pi) * \\<i>)) =\n  cmod (H z)\n\ngoal (1 subgoal):\n 1. \\<bar>Re z\\<bar> \\<le> 1 \\<Longrightarrow> cmod (H z) \\<le> D", "also"], ["proof (state)\nthis:\n  cmod (H (z - complex_of_real (real_of_int (2 * n) * pi) * \\<i>)) =\n  cmod (H z)\n\ngoal (1 subgoal):\n 1. \\<bar>Re z\\<bar> \\<le> 1 \\<Longrightarrow> cmod (H z) \\<le> D", "have \"C \\<le> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<le> D", "by (simp add: D_def)"], ["proof (state)\nthis:\n  C \\<le> D\n\ngoal (1 subgoal):\n 1. \\<bar>Re z\\<bar> \\<le> 1 \\<Longrightarrow> cmod (H z) \\<le> D", "finally"], ["proof (chain)\npicking this:\n  cmod (H z) \\<le> D", "show ?thesis"], ["proof (prove)\nusing this:\n  cmod (H z) \\<le> D\n\ngoal (1 subgoal):\n 1. cmod (H z) \\<le> D", "."], ["proof (state)\nthis:\n  cmod (H z) \\<le> D\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?z \\<notin> (\\<Union>n.\n                  ball (complex_of_real (real_of_int (2 * n) * pi) * \\<i>)\n                   r) \\<Longrightarrow>\n  cmod (H ?z) \\<le> D\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>z.\n            z \\<notin> (\\<Union>n.\n                           ball\n                            (complex_of_real (real_of_int (2 * n) * pi) *\n                             \\<i>)\n                            r) \\<Longrightarrow>\n            cmod (H z) \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>D \\<ge> 0\\<close> and this"], ["proof (chain)\npicking this:\n  0 \\<le> D\n  ?z \\<notin> (\\<Union>n.\n                  ball (complex_of_real (real_of_int (2 * n) * pi) * \\<i>)\n                   r) \\<Longrightarrow>\n  cmod (H ?z) \\<le> D", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> D\n  ?z \\<notin> (\\<Union>n.\n                  ball (complex_of_real (real_of_int (2 * n) * pi) * \\<i>)\n                   r) \\<Longrightarrow>\n  cmod (H ?z) \\<le> D\n\ngoal (1 subgoal):\n 1. thesis", "by (rule that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hurwitz_formula_bound2:\n  obtains C where \"C \\<ge> 0\" and \"\\<And>r z. r > 0 \\<Longrightarrow> r < pi \\<Longrightarrow> z \\<in> sphere 0 r \\<Longrightarrow>\n     norm (f s z) \\<le> C * r powr (-Re s - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"2 * pi > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 2 * pi", "by auto"], ["proof (state)\nthis:\n  0 < 2 * pi\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have nz: \"1 - exp z \\<noteq> 0\" if \"z \\<in> ball 0 (2 * pi) - {0}\" for z :: complex"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 - exp z \\<noteq> 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 - exp z = 0 \\<Longrightarrow> False", "assume \"1 - exp z = 0\""], ["proof (state)\nthis:\n  1 - exp z = 0\n\ngoal (1 subgoal):\n 1. 1 - exp z = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  1 - exp z = 0", "obtain n where \"z = 2 * pi * of_int n * \\<i>\""], ["proof (prove)\nusing this:\n  1 - exp z = 0\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        z =\n        complex_of_real (2 * pi * real_of_int n) * \\<i> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: exp_eq_1 complex_eq_iff[of z])"], ["proof (state)\nthis:\n  z = complex_of_real (2 * pi * real_of_int n) * \\<i>\n\ngoal (1 subgoal):\n 1. 1 - exp z = 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  z = complex_of_real (2 * pi * real_of_int n) * \\<i>\n\ngoal (1 subgoal):\n 1. 1 - exp z = 0 \\<Longrightarrow> False", "have \"\\<bar>real_of_int n\\<bar> < 1 \\<longleftrightarrow> n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<bar>real_of_int n\\<bar> < 1) = (n = 0)", "by linarith"], ["proof (state)\nthis:\n  (\\<bar>real_of_int n\\<bar> < 1) = (n = 0)\n\ngoal (1 subgoal):\n 1. 1 - exp z = 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  z = complex_of_real (2 * pi * real_of_int n) * \\<i>\n  (\\<bar>real_of_int n\\<bar> < 1) = (n = 0)", "show False"], ["proof (prove)\nusing this:\n  z = complex_of_real (2 * pi * real_of_int n) * \\<i>\n  (\\<bar>real_of_int n\\<bar> < 1) = (n = 0)\n\ngoal (1 subgoal):\n 1. False", "using that"], ["proof (prove)\nusing this:\n  z = complex_of_real (2 * pi * real_of_int n) * \\<i>\n  (\\<bar>real_of_int n\\<bar> < 1) = (n = 0)\n  z \\<in> ball 0 (2 * pi) - {0}\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: norm_mult)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?z \\<in> ball 0 (2 * pi) - {0} \\<Longrightarrow> 1 - exp ?z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have ev: \"eventually (\\<lambda>z::complex. 1 - exp z \\<noteq> 0) (at 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in at 0. 1 - exp z \\<noteq> 0", "using eventually_at_ball'[OF \\<open>2 * pi > 0\\<close>]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F t in at ?z within ?A.\n     t \\<in> ball ?z (2 * pi) \\<and> t \\<noteq> ?z \\<and> t \\<in> ?A\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in at 0. 1 - exp z \\<noteq> 0", "by eventually_elim (use nz in auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in at 0. 1 - exp z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have [simp]: \"subdegree (1 - fps_exp (1 :: complex)) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subdegree (1 - fps_exp 1) = 1", "by (intro subdegreeI) auto"], ["proof (state)\nthis:\n  subdegree (1 - fps_exp 1) = 1\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"(\\<lambda>z. exp (a * z) * (if z = 0 then -1 else z / (1 - exp z :: complex)))\n            has_fps_expansion fps_exp a * (fps_X / (fps_const 1 - fps_exp 1))\""], ["proof (prove)\nusing this:\n  subdegree (1 - fps_exp 1) = 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        exp (complex_of_real a * z) *\n        (if z = 0 then - 1 else z / (1 - exp z))) has_fps_expansion\n    fps_exp (complex_of_real a) * (fps_X / (fps_const 1 - fps_exp 1))", "by (auto intro!: fps_expansion_intros)"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      exp (complex_of_real a * z) *\n      (if z = 0 then - 1 else z / (1 - exp z))) has_fps_expansion\n  fps_exp (complex_of_real a) * (fps_X / (fps_const 1 - fps_exp 1))\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"(\\<lambda>z::complex. exp (a * z) * (if z = 0 then -1 else z / (1 - exp z))) \\<in> O[at 0](\\<lambda>z. 1)\""], ["proof (prove)\nusing this:\n  (\\<lambda>z.\n      exp (complex_of_real a * z) *\n      (if z = 0 then - 1 else z / (1 - exp z))) has_fps_expansion\n  fps_exp (complex_of_real a) * (fps_X / (fps_const 1 - fps_exp 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        exp (complex_of_real a * z) *\n        (if z = 0 then - 1 else z / (1 - exp z)))\n    \\<in> O[at 0](\\<lambda>z. 1)", "using continuous_imp_bigo_1 has_fps_expansion_imp_continuous"], ["proof (prove)\nusing this:\n  (\\<lambda>z.\n      exp (complex_of_real a * z) *\n      (if z = 0 then - 1 else z / (1 - exp z))) has_fps_expansion\n  fps_exp (complex_of_real a) * (fps_X / (fps_const 1 - fps_exp 1))\n  continuous (at ?x within ?A) ?f \\<Longrightarrow>\n  ?f \\<in> O[at ?x within ?A](\\<lambda>_. 1::?'b)\n  ?f has_fps_expansion ?F \\<Longrightarrow>\n  continuous (at (0::?'a) within ?A) ?f\n\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        exp (complex_of_real a * z) *\n        (if z = 0 then - 1 else z / (1 - exp z)))\n    \\<in> O[at 0](\\<lambda>z. 1)", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      exp (complex_of_real a * z) *\n      (if z = 0 then - 1 else z / (1 - exp z)))\n  \\<in> O[at 0](\\<lambda>z. 1)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      exp (complex_of_real a * z) *\n      (if z = 0 then - 1 else z / (1 - exp z)))\n  \\<in> O[at 0](\\<lambda>z. 1)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"?this \\<longleftrightarrow> (\\<lambda>z::complex. exp (a * z) * (z / (1 - exp z))) \\<in> O[at 0](\\<lambda>z. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>z.\n         exp (complex_of_real a * z) *\n         (if z = 0 then - 1 else z / (1 - exp z)))\n     \\<in> O[at 0](\\<lambda>z. 1)) =\n    ((\\<lambda>z. exp (complex_of_real a * z) * (z / (1 - exp z)))\n     \\<in> O[at 0](\\<lambda>z. 1))", "by (intro landau_o.big.in_cong eventually_mono[OF ev]) auto"], ["proof (state)\nthis:\n  ((\\<lambda>z.\n       exp (complex_of_real a * z) *\n       (if z = 0 then - 1 else z / (1 - exp z)))\n   \\<in> O[at 0](\\<lambda>z. 1)) =\n  ((\\<lambda>z. exp (complex_of_real a * z) * (z / (1 - exp z)))\n   \\<in> O[at 0](\\<lambda>z. 1))\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>z. exp (complex_of_real a * z) * (z / (1 - exp z)))\n  \\<in> O[at 0](\\<lambda>z. 1)", "have \"\\<exists>g. g holomorphic_on ball 0 (2 * pi) \\<and>\n                    (\\<forall>z\\<in>ball 0 (2 * pi) - {0}. g z = exp (of_real a * z) * (z / (1 - exp z)))\""], ["proof (prove)\nusing this:\n  (\\<lambda>z. exp (complex_of_real a * z) * (z / (1 - exp z)))\n  \\<in> O[at 0](\\<lambda>z. 1)\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g holomorphic_on ball 0 (2 * pi) \\<and>\n       (\\<forall>z\\<in>ball 0 (2 * pi) - {0}.\n           g z = exp (complex_of_real a * z) * (z / (1 - exp z)))", "using nz"], ["proof (prove)\nusing this:\n  (\\<lambda>z. exp (complex_of_real a * z) * (z / (1 - exp z)))\n  \\<in> O[at 0](\\<lambda>z. 1)\n  ?z \\<in> ball 0 (2 * pi) - {0} \\<Longrightarrow> 1 - exp ?z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g holomorphic_on ball 0 (2 * pi) \\<and>\n       (\\<forall>z\\<in>ball 0 (2 * pi) - {0}.\n           g z = exp (complex_of_real a * z) * (z / (1 - exp z)))", "by (intro holomorphic_on_extend holomorphic_intros) auto"], ["proof (state)\nthis:\n  \\<exists>g.\n     g holomorphic_on ball 0 (2 * pi) \\<and>\n     (\\<forall>z\\<in>ball 0 (2 * pi) - {0}.\n         g z = exp (complex_of_real a * z) * (z / (1 - exp z)))\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>g.\n     g holomorphic_on ball 0 (2 * pi) \\<and>\n     (\\<forall>z\\<in>ball 0 (2 * pi) - {0}.\n         g z = exp (complex_of_real a * z) * (z / (1 - exp z)))", "guess g"], ["proof (prove)\nusing this:\n  \\<exists>g.\n     g holomorphic_on ball 0 (2 * pi) \\<and>\n     (\\<forall>z\\<in>ball 0 (2 * pi) - {0}.\n         g z = exp (complex_of_real a * z) * (z / (1 - exp z)))\n\ngoal (1 subgoal):\n 1. thesis", "by (elim exE conjE)"], ["proof (state)\nthis:\n  g holomorphic_on ball 0 (2 * pi)\n  \\<forall>z\\<in>ball 0 (2 * pi) - {0}.\n     g z = exp (complex_of_real a * z) * (z / (1 - exp z))\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note g = this"], ["proof (state)\nthis:\n  g holomorphic_on ball 0 (2 * pi)\n  \\<forall>z\\<in>ball 0 (2 * pi) - {0}.\n     g z = exp (complex_of_real a * z) * (z / (1 - exp z))\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"continuous_on (ball 0 (2 * pi)) g\""], ["proof (prove)\nusing this:\n  g holomorphic_on ball 0 (2 * pi)\n  \\<forall>z\\<in>ball 0 (2 * pi) - {0}.\n     g z = exp (complex_of_real a * z) * (z / (1 - exp z))\n\ngoal (1 subgoal):\n 1. continuous_on (ball 0 (2 * pi)) g", "by (auto dest: holomorphic_on_imp_continuous_on)"], ["proof (state)\nthis:\n  continuous_on (ball 0 (2 * pi)) g\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"continuous_on (cball 0 pi) g\""], ["proof (prove)\nusing this:\n  continuous_on (ball 0 (2 * pi)) g\n\ngoal (1 subgoal):\n 1. continuous_on (cball 0 pi) g", "by (rule continuous_on_subset) (subst cball_subset_ball_iff, use pi_gt_zero in auto)"], ["proof (state)\nthis:\n  continuous_on (cball 0 pi) g\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"compact (g ` cball 0 pi)\""], ["proof (prove)\nusing this:\n  continuous_on (cball 0 pi) g\n\ngoal (1 subgoal):\n 1. compact (g ` cball 0 pi)", "by (intro compact_continuous_image) auto"], ["proof (state)\nthis:\n  compact (g ` cball 0 pi)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"bounded (g ` cball 0 pi)\""], ["proof (prove)\nusing this:\n  compact (g ` cball 0 pi)\n\ngoal (1 subgoal):\n 1. bounded (g ` cball 0 pi)", "by (auto simp: compact_imp_bounded)"], ["proof (state)\nthis:\n  bounded (g ` cball 0 pi)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  bounded (g ` cball 0 pi)", "obtain C where C: \"\\<forall>x\\<in>cball 0 pi. norm (g x) \\<le> C\""], ["proof (prove)\nusing this:\n  bounded (g ` cball 0 pi)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<forall>x\\<in>cball 0 pi. cmod (g x) \\<le> C \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: bounded_iff)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>cball 0 pi. cmod (g x) \\<le> C\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  \\<forall>x\\<in>cball 0 pi. cmod (g x) \\<le> C\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "fix r :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume r: \"r > 0\" \"r < pi\""], ["proof (state)\nthis:\n  0 < r\n  r < pi\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "fix z :: complex"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume z: \"z \\<in> sphere 0 r\""], ["proof (state)\nthis:\n  z \\<in> sphere 0 r\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define x where \"x = (if Arg z \\<le> -pi / 2 then Arg z + 2 * pi else Arg z)\""], ["proof (state)\nthis:\n  x = (if Arg z \\<le> - pi / 2 then Arg z + 2 * pi else Arg z)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"exp (\\<i> * (2 * pi)) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (\\<i> * complex_of_real (2 * pi)) = 1", "by (simp add: exp_eq_polar)"], ["proof (state)\nthis:\n  exp (\\<i> * complex_of_real (2 * pi)) = 1\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with z"], ["proof (chain)\npicking this:\n  z \\<in> sphere 0 r\n  exp (\\<i> * complex_of_real (2 * pi)) = 1", "have \"z = r * exp (\\<i> * x)\""], ["proof (prove)\nusing this:\n  z \\<in> sphere 0 r\n  exp (\\<i> * complex_of_real (2 * pi)) = 1\n\ngoal (1 subgoal):\n 1. z = complex_of_real r * exp (\\<i> * complex_of_real x)", "using r pi_gt_zero Arg_eq[of z]"], ["proof (prove)\nusing this:\n  z \\<in> sphere 0 r\n  exp (\\<i> * complex_of_real (2 * pi)) = 1\n  0 < r\n  r < pi\n  0 < pi\n  z \\<noteq> 0 \\<Longrightarrow>\n  z = complex_of_real (cmod z) * exp (\\<i> * complex_of_real (Arg z))\n\ngoal (1 subgoal):\n 1. z = complex_of_real r * exp (\\<i> * complex_of_real x)", "by (auto simp: x_def exp_add distrib_left)"], ["proof (state)\nthis:\n  z = complex_of_real r * exp (\\<i> * complex_of_real x)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"x > - pi / 2\" \"x \\<le> 3 / 2 * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - pi / 2 < x &&& x \\<le> 3 / 2 * pi", "using Arg_le_pi[of z] mpi_less_Arg[of z]"], ["proof (prove)\nusing this:\n  Arg z \\<le> pi\n  - pi < Arg z\n\ngoal (1 subgoal):\n 1. - pi / 2 < x &&& x \\<le> 3 / 2 * pi", "by (auto simp: x_def)"], ["proof (state)\nthis:\n  - pi / 2 < x\n  x \\<le> 3 / 2 * pi\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note x = \\<open>z = r * exp (\\<i> * x)\\<close> this"], ["proof (state)\nthis:\n  z = complex_of_real r * exp (\\<i> * complex_of_real x)\n  - pi / 2 < x\n  x \\<le> 3 / 2 * pi\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from x r"], ["proof (chain)\npicking this:\n  z = complex_of_real r * exp (\\<i> * complex_of_real x)\n  - pi / 2 < x\n  x \\<le> 3 / 2 * pi\n  0 < r\n  r < pi", "have z': \"z \\<in> cball 0 pi - {0}\""], ["proof (prove)\nusing this:\n  z = complex_of_real r * exp (\\<i> * complex_of_real x)\n  - pi / 2 < x\n  x \\<le> 3 / 2 * pi\n  0 < r\n  r < pi\n\ngoal (1 subgoal):\n 1. z \\<in> cball 0 pi - {0}", "using pi_gt3"], ["proof (prove)\nusing this:\n  z = complex_of_real r * exp (\\<i> * complex_of_real x)\n  - pi / 2 < x\n  x \\<le> 3 / 2 * pi\n  0 < r\n  r < pi\n  3 < pi\n\ngoal (1 subgoal):\n 1. z \\<in> cball 0 pi - {0}", "by (auto simp: norm_mult)"], ["proof (state)\nthis:\n  z \\<in> cball 0 pi - {0}\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  z \\<in> cball 0 pi - {0}\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"cball 0 pi \\<subseteq> ball (0::complex) (2 * pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cball 0 pi \\<subseteq> ball 0 (2 * pi)", "by (subst cball_subset_ball_iff) (use pi_gt_zero in auto)"], ["proof (state)\nthis:\n  cball 0 pi \\<subseteq> ball 0 (2 * pi)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"cball 0 pi - {0} \\<subseteq> ball 0 (2 * pi) - {0::complex}\""], ["proof (prove)\nusing this:\n  cball 0 pi \\<subseteq> ball 0 (2 * pi)\n\ngoal (1 subgoal):\n 1. cball 0 pi - {0} \\<subseteq> ball 0 (2 * pi) - {0}", "by blast"], ["proof (state)\nthis:\n  cball 0 pi - {0} \\<subseteq> ball 0 (2 * pi) - {0}\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  z \\<in> ball 0 (2 * pi) - {0}", "have z'': \"z \\<in> ball 0 (2 * pi) - {0}\""], ["proof (prove)\nusing this:\n  z \\<in> ball 0 (2 * pi) - {0}\n\ngoal (1 subgoal):\n 1. z \\<in> ball 0 (2 * pi) - {0}", "."], ["proof (state)\nthis:\n  z \\<in> ball 0 (2 * pi) - {0}\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence bound: \"norm (exp (a * z) * (z / (1 - exp z))) \\<le> C\""], ["proof (prove)\nusing this:\n  z \\<in> ball 0 (2 * pi) - {0}\n\ngoal (1 subgoal):\n 1. cmod (exp (complex_of_real a * z) * (z / (1 - exp z))) \\<le> C", "using C and g and z'"], ["proof (prove)\nusing this:\n  z \\<in> ball 0 (2 * pi) - {0}\n  \\<forall>x\\<in>cball 0 pi. cmod (g x) \\<le> C\n  g holomorphic_on ball 0 (2 * pi)\n  \\<forall>z\\<in>ball 0 (2 * pi) - {0}.\n     g z = exp (complex_of_real a * z) * (z / (1 - exp z))\n  z \\<in> cball 0 pi - {0}\n\ngoal (1 subgoal):\n 1. cmod (exp (complex_of_real a * z) * (z / (1 - exp z))) \\<le> C", "by force"], ["proof (state)\nthis:\n  cmod (exp (complex_of_real a * z) * (z / (1 - exp z))) \\<le> C\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"exp z \\<noteq> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp z \\<noteq> 1", "using nz z''"], ["proof (prove)\nusing this:\n  ?z \\<in> ball 0 (2 * pi) - {0} \\<Longrightarrow> 1 - exp ?z \\<noteq> 0\n  z \\<in> ball 0 (2 * pi) - {0}\n\ngoal (1 subgoal):\n 1. exp z \\<noteq> 1", "by auto"], ["proof (state)\nthis:\n  exp z \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with bound z''"], ["proof (chain)\npicking this:\n  cmod (exp (complex_of_real a * z) * (z / (1 - exp z))) \\<le> C\n  z \\<in> ball 0 (2 * pi) - {0}\n  exp z \\<noteq> 1", "have bound': \"norm (exp (a * z) / (1 - exp z)) \\<le> C / norm z\""], ["proof (prove)\nusing this:\n  cmod (exp (complex_of_real a * z) * (z / (1 - exp z))) \\<le> C\n  z \\<in> ball 0 (2 * pi) - {0}\n  exp z \\<noteq> 1\n\ngoal (1 subgoal):\n 1. cmod (exp (complex_of_real a * z) / (1 - exp z)) \\<le> C / cmod z", "by (simp add: norm_divide field_simps norm_mult)"], ["proof (state)\nthis:\n  cmod (exp (complex_of_real a * z) / (1 - exp z)) \\<le> C / cmod z\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"Ln' z = of_real (ln r) + Ln' (exp (\\<i> * of_real x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln' z = complex_of_real (ln r) + Ln' (exp (\\<i> * complex_of_real x))", "using x r"], ["proof (prove)\nusing this:\n  z = complex_of_real r * exp (\\<i> * complex_of_real x)\n  - pi / 2 < x\n  x \\<le> 3 / 2 * pi\n  0 < r\n  r < pi\n\ngoal (1 subgoal):\n 1. Ln' z = complex_of_real (ln r) + Ln' (exp (\\<i> * complex_of_real x))", "by (simp add: Ln'_times_of_real)"], ["proof (state)\nthis:\n  Ln' z = complex_of_real (ln r) + Ln' (exp (\\<i> * complex_of_real x))\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  Ln' z = complex_of_real (ln r) + Ln' (exp (\\<i> * complex_of_real x))\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"exp (\\<i> * pi / 2) = \\<i>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (\\<i> * complex_of_real pi / 2) = \\<i>", "by (simp add: exp_eq_polar)"], ["proof (state)\nthis:\n  exp (\\<i> * complex_of_real pi / 2) = \\<i>\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"Ln' (exp (\\<i> * of_real x)) = Ln (exp (\\<i> * of_real (x - pi / 2))) + \\<i> * pi / 2\""], ["proof (prove)\nusing this:\n  exp (\\<i> * complex_of_real pi / 2) = \\<i>\n\ngoal (1 subgoal):\n 1. Ln' (exp (\\<i> * complex_of_real x)) =\n    Ln (exp (\\<i> * complex_of_real (x - pi / 2))) +\n    \\<i> * complex_of_real pi / 2", "by (simp add: algebra_simps Ln'_def exp_diff)"], ["proof (state)\nthis:\n  Ln' (exp (\\<i> * complex_of_real x)) =\n  Ln (exp (\\<i> * complex_of_real (x - pi / 2))) +\n  \\<i> * complex_of_real pi / 2\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  Ln' (exp (\\<i> * complex_of_real x)) =\n  Ln (exp (\\<i> * complex_of_real (x - pi / 2))) +\n  \\<i> * complex_of_real pi / 2\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<dots> = \\<i> * x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln (exp (\\<i> * complex_of_real (x - pi / 2))) +\n    \\<i> * complex_of_real pi / 2 =\n    \\<i> * complex_of_real x", "using x pi_gt3"], ["proof (prove)\nusing this:\n  z = complex_of_real r * exp (\\<i> * complex_of_real x)\n  - pi / 2 < x\n  x \\<le> 3 / 2 * pi\n  3 < pi\n\ngoal (1 subgoal):\n 1. Ln (exp (\\<i> * complex_of_real (x - pi / 2))) +\n    \\<i> * complex_of_real pi / 2 =\n    \\<i> * complex_of_real x", "by (subst Ln_exp) (auto simp: algebra_simps)"], ["proof (state)\nthis:\n  Ln (exp (\\<i> * complex_of_real (x - pi / 2))) +\n  \\<i> * complex_of_real pi / 2 =\n  \\<i> * complex_of_real x\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  Ln' z = complex_of_real (ln r) + \\<i> * complex_of_real x", "have \"norm (exp (-Ln' z * s)) = exp (x * Im s - ln r * Re s)\""], ["proof (prove)\nusing this:\n  Ln' z = complex_of_real (ln r) + \\<i> * complex_of_real x\n\ngoal (1 subgoal):\n 1. cmod (exp (- Ln' z * s)) = exp (x * Im s - ln r * Re s)", "by simp"], ["proof (state)\nthis:\n  cmod (exp (- Ln' z * s)) = exp (x * Im s - ln r * Re s)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  cmod (exp (- Ln' z * s)) = exp (x * Im s - ln r * Re s)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  cmod (exp (- Ln' z * s)) = exp (x * Im s - ln r * Re s)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"x * Im s \\<le> \\<bar>x * Im s\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * Im s \\<le> \\<bar>x * Im s\\<bar>", "by (rule abs_ge_self)"], ["proof (state)\nthis:\n  x * Im s \\<le> \\<bar>x * Im s\\<bar>\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  x * Im s \\<le> \\<bar>x * Im s\\<bar>\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<dots> \\<le> (3/2 * pi) * \\<bar>Im s\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>x * Im s\\<bar> \\<le> 3 / 2 * pi * \\<bar>Im s\\<bar>", "unfolding abs_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> * \\<bar>Im s\\<bar> \\<le> 3 / 2 * pi * \\<bar>Im s\\<bar>", "using x"], ["proof (prove)\nusing this:\n  z = complex_of_real r * exp (\\<i> * complex_of_real x)\n  - pi / 2 < x\n  x \\<le> 3 / 2 * pi\n\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> * \\<bar>Im s\\<bar> \\<le> 3 / 2 * pi * \\<bar>Im s\\<bar>", "by (intro mult_right_mono) auto"], ["proof (state)\nthis:\n  \\<bar>x * Im s\\<bar> \\<le> 3 / 2 * pi * \\<bar>Im s\\<bar>\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  x * Im s \\<le> 3 / 2 * pi * \\<bar>Im s\\<bar>", "have \"exp (x * Im s - ln r * Re s) \\<le> exp (3 / 2 * pi * \\<bar>Im s\\<bar> - ln r * Re s)\""], ["proof (prove)\nusing this:\n  x * Im s \\<le> 3 / 2 * pi * \\<bar>Im s\\<bar>\n\ngoal (1 subgoal):\n 1. exp (x * Im s - ln r * Re s)\n    \\<le> exp (3 / 2 * pi * \\<bar>Im s\\<bar> - ln r * Re s)", "by simp"], ["proof (state)\nthis:\n  exp (x * Im s - ln r * Re s)\n  \\<le> exp (3 / 2 * pi * \\<bar>Im s\\<bar> - ln r * Re s)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  exp (x * Im s - ln r * Re s)\n  \\<le> exp (3 / 2 * pi * \\<bar>Im s\\<bar> - ln r * Re s)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  cmod (exp (- Ln' z * s))\n  \\<le> exp (3 / 2 * pi * \\<bar>Im s\\<bar> - ln r * Re s)", "have \"norm (exp (-Ln' z * s) * (exp (a * z) / (1 - exp z))) \\<le>\n                    exp (3 / 2 * pi * \\<bar>Im s\\<bar> - ln r * Re s) * (C / norm z)\""], ["proof (prove)\nusing this:\n  cmod (exp (- Ln' z * s))\n  \\<le> exp (3 / 2 * pi * \\<bar>Im s\\<bar> - ln r * Re s)\n\ngoal (1 subgoal):\n 1. cmod (exp (- Ln' z * s) * (exp (complex_of_real a * z) / (1 - exp z)))\n    \\<le> exp (3 / 2 * pi * \\<bar>Im s\\<bar> - ln r * Re s) * (C / cmod z)", "unfolding norm_mult[of \"exp t\" for t]"], ["proof (prove)\nusing this:\n  cmod (exp (- Ln' z * s))\n  \\<le> exp (3 / 2 * pi * \\<bar>Im s\\<bar> - ln r * Re s)\n\ngoal (1 subgoal):\n 1. cmod (exp (- Ln' z * s)) *\n    cmod (exp (complex_of_real a * z) / (1 - exp z))\n    \\<le> exp (3 / 2 * pi * \\<bar>Im s\\<bar> - ln r * Re s) * (C / cmod z)", "by (intro mult_mono bound') simp_all"], ["proof (state)\nthis:\n  cmod (exp (- Ln' z * s) * (exp (complex_of_real a * z) / (1 - exp z)))\n  \\<le> exp (3 / 2 * pi * \\<bar>Im s\\<bar> - ln r * Re s) * (C / cmod z)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  cmod (exp (- Ln' z * s) * (exp (complex_of_real a * z) / (1 - exp z)))\n  \\<le> exp (3 / 2 * pi * \\<bar>Im s\\<bar> - ln r * Re s) * (C / cmod z)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"norm z = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod z = r", "using \\<open>r > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < r\n\ngoal (1 subgoal):\n 1. cmod z = r", "by (simp add: x norm_mult)"], ["proof (state)\nthis:\n  cmod z = r\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  cmod z = r\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"exp (3 / 2 * pi * \\<bar>Im s\\<bar> - ln r * Re s) = exp (3 / 2 * pi * \\<bar>Im s\\<bar>) * r powr (-Re s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (3 / 2 * pi * \\<bar>Im s\\<bar> - ln r * Re s) =\n    exp (3 / 2 * pi * \\<bar>Im s\\<bar>) * r powr - Re s", "using r"], ["proof (prove)\nusing this:\n  0 < r\n  r < pi\n\ngoal (1 subgoal):\n 1. exp (3 / 2 * pi * \\<bar>Im s\\<bar> - ln r * Re s) =\n    exp (3 / 2 * pi * \\<bar>Im s\\<bar>) * r powr - Re s", "by (simp add: exp_diff powr_def exp_minus inverse_eq_divide)"], ["proof (state)\nthis:\n  exp (3 / 2 * pi * \\<bar>Im s\\<bar> - ln r * Re s) =\n  exp (3 / 2 * pi * \\<bar>Im s\\<bar>) * r powr - Re s\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  cmod (exp (- Ln' z * s) * (exp (complex_of_real a * z) / (1 - exp z)))\n  \\<le> exp (3 / 2 * pi * \\<bar>Im s\\<bar>) * r powr - Re s * (C / r)", "have \"norm (f s z) \\<le> C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>) * r powr (-Re s - 1)\""], ["proof (prove)\nusing this:\n  cmod (exp (- Ln' z * s) * (exp (complex_of_real a * z) / (1 - exp z)))\n  \\<le> exp (3 / 2 * pi * \\<bar>Im s\\<bar>) * r powr - Re s * (C / r)\n\ngoal (1 subgoal):\n 1. cmod (f s z)\n    \\<le> C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>) * r powr (- Re s - 1)", "using r"], ["proof (prove)\nusing this:\n  cmod (exp (- Ln' z * s) * (exp (complex_of_real a * z) / (1 - exp z)))\n  \\<le> exp (3 / 2 * pi * \\<bar>Im s\\<bar>) * r powr - Re s * (C / r)\n  0 < r\n  r < pi\n\ngoal (1 subgoal):\n 1. cmod (f s z)\n    \\<le> C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>) * r powr (- Re s - 1)", "by (simp add: f_def exp_diff exp_minus field_simps powr_diff)"], ["proof (state)\nthis:\n  cmod (f s z)\n  \\<le> C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>) * r powr (- Re s - 1)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  cmod (f s z)\n  \\<le> C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>) * r powr (- Re s - 1)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<dots> \\<le> max 0 (C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>)) * r powr (-Re s - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>) * r powr (- Re s - 1)\n    \\<le> max 0 (C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>)) *\n          r powr (- Re s - 1)", "by (intro mult_right_mono max.coboundedI2) auto"], ["proof (state)\nthis:\n  C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>) * r powr (- Re s - 1)\n  \\<le> max 0 (C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>)) *\n        r powr (- Re s - 1)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  cmod (f s z)\n  \\<le> max 0 (C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>)) *\n        r powr (- Re s - 1)", "have \"norm (f s z) \\<le> \\<dots>\""], ["proof (prove)\nusing this:\n  cmod (f s z)\n  \\<le> max 0 (C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>)) *\n        r powr (- Re s - 1)\n\ngoal (1 subgoal):\n 1. cmod (f s z)\n    \\<le> max 0 (C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>)) *\n          r powr (- Re s - 1)", "."], ["proof (state)\nthis:\n  cmod (f s z)\n  \\<le> max 0 (C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>)) *\n        r powr (- Re s - 1)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>0 < ?r2; ?r2 < pi; ?z2 \\<in> sphere 0 ?r2\\<rbrakk>\n  \\<Longrightarrow> cmod (f s ?z2)\n                    \\<le> max 0 (C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>)) *\n                          ?r2 powr (- Re s - 1)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>0 \\<le> C;\n         \\<And>r z.\n            \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n            \\<Longrightarrow> cmod (f s z)\n                              \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with that[of \"max 0 (C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>))\"]"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 \\<le> max 0 (C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>));\n   \\<And>r z.\n      \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n      \\<Longrightarrow> cmod (f s z)\n                        \\<le> max 0\n                               (C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>)) *\n                              r powr (- Re s - 1)\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>0 < ?r2; ?r2 < pi; ?z2 \\<in> sphere 0 ?r2\\<rbrakk>\n  \\<Longrightarrow> cmod (f s ?z2)\n                    \\<le> max 0 (C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>)) *\n                          ?r2 powr (- Re s - 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> max 0 (C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>));\n   \\<And>r z.\n      \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n      \\<Longrightarrow> cmod (f s z)\n                        \\<le> max 0\n                               (C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>)) *\n                              r powr (- Re s - 1)\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>0 < ?r2; ?r2 < pi; ?z2 \\<in> sphere 0 ?r2\\<rbrakk>\n  \\<Longrightarrow> cmod (f s ?z2)\n                    \\<le> max 0 (C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>)) *\n                          ?r2 powr (- Re s - 1)\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We can now relate the integral along a partial Hankel contour that is cut off at $-\\pi$ to\n  $\\zeta(1 - s, a) / \\Gamma(s)$.\n\\<close>"], ["", "lemma rGamma_hurwitz_zeta_eq_contour_integral:\n  fixes s :: complex and r :: real\n  assumes \"s \\<noteq> 0\" and r: \"r \\<in> {1..<2}\" and a: \"a > 0\"\n  defines \"err1 \\<equiv> (\\<lambda>s r. contour_integral (part_circlepath 0 r pi 0) (f s))\"\n  defines \"err2 \\<equiv> (\\<lambda>s r. cnj (contour_integral (part_circlepath 0 r pi 0) (f (cnj s))))\"\n  shows   \"2 * \\<i> * pi * rGamma s * hurwitz_zeta a (1 - s) =\n             err2 s r - err1 s r + 2 * \\<i> * sin (pi * s) * (CLBINT x:{r..}. g s x)\"\n  (is \"?f s = ?g s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * \\<i> * complex_of_real pi * rGamma s * hurwitz_zeta a (1 - s) =\n    err2 s r - err1 s r +\n    2 * \\<i> * sin (complex_of_real pi * s) *\n    complex_set_lebesgue_integral lborel {r..} (g s)", "proof (rule analytic_continuation_open[where f = ?f])"], ["proof (state)\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "fix s :: complex"], ["proof (state)\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "assume s: \"s \\<in> {s. Re s < 0}\"\n\n  \\<comment>\\<open>We first show that the integrals along the Hankel contour cut off at $-\\pi$ all have the\n     same value, no matter what the radius of the circle is (as long as it is small enough).\n     We call this value \\<open>C\\<close>.\n\n     This argument could be done by a homotopy argument, but it is easier to simply re-use the\n     above result about the contour integral along the annulus where we fix the radius of the \n     outer circle to $\\pi$.\\<close>"], ["proof (state)\nthis:\n  s \\<in> {s. Re s < 0}\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "define C where \"C = -contour_integral (part_circlepath 0 pi 0 pi) (f s) +\n                       cnj (contour_integral (part_circlepath 0 pi 0 pi) (f (cnj s)))\""], ["proof (state)\nthis:\n  C =\n  - contour_integral (part_circlepath 0 pi 0 pi) (f s) +\n  cnj (contour_integral (part_circlepath 0 pi 0 pi) (f (cnj s)))\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "have integrable: \"set_integrable lborel A (g s)\"\n    if \"A \\<in> sets lborel\" \"A \\<subseteq> {0<..}\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_set_integrable lborel A (g s)", "proof (rule set_integrable_subset)"], ["proof (state)\ngoal (3 subgoals):\n 1. complex_set_integrable lborel ?A (g s)\n 2. A \\<in> sets lborel\n 3. A \\<subseteq> ?A", "show \"set_integrable lborel {0<..} (g s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_set_integrable lborel {0<..} (g s)", "using Gamma_times_hurwitz_zeta_integrable[of \"1 - s\" a] s a"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 < Re (1 - s); 0 < a\\<rbrakk>\n  \\<Longrightarrow> complex_set_integrable lebesgue {0<..}\n                     (\\<lambda>x.\n                         complex_of_real x powr (1 - s - 1) *\n                         complex_of_real (exp (- a * x) / (1 - exp (- x))))\n  s \\<in> {s. Re s < 0}\n  0 < a\n\ngoal (1 subgoal):\n 1. complex_set_integrable lborel {0<..} (g s)", "by (simp add: g_def exp_of_real exp_minus integrable_completion set_integrable_def)"], ["proof (state)\nthis:\n  complex_set_integrable lborel {0<..} (g s)\n\ngoal (2 subgoals):\n 1. A \\<in> sets lborel\n 2. A \\<subseteq> {0<..}", "qed (insert that, auto)"], ["proof (state)\nthis:\n  \\<lbrakk>?A \\<in> sets lborel; ?A \\<subseteq> {0<..}\\<rbrakk>\n  \\<Longrightarrow> complex_set_integrable lborel ?A (g s)\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?A \\<in> sets lborel; ?A \\<subseteq> {0<..}\\<rbrakk>\n  \\<Longrightarrow> complex_set_integrable lborel ?A (g s)\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "fix r' :: real"], ["proof (state)\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "assume r': \"r' \\<in> {0<..<2}\""], ["proof (state)\nthis:\n  r' \\<in> {0<..<2}\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "from hurwitz_formula_integral_semiannulus(2)[of r' s 0] and r'"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < r'; r' < 2\\<rbrakk>\n  \\<Longrightarrow> f s contour_integrable_on hankel_semiannulus r' 0\n  r' \\<in> {0<..<2}", "have \"f s contour_integrable_on part_circlepath 0 r' pi 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < r'; r' < 2\\<rbrakk>\n  \\<Longrightarrow> f s contour_integrable_on hankel_semiannulus r' 0\n  r' \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. f s contour_integrable_on part_circlepath 0 r' pi 0", "by (auto simp: hankel_semiannulus_def add_ac)"], ["proof (state)\nthis:\n  f s contour_integrable_on part_circlepath 0 r' pi 0\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "}"], ["proof (state)\nthis:\n  ?r'2 \\<in> {0<..<2} \\<Longrightarrow>\n  f s contour_integrable_on part_circlepath 0 ?r'2 pi 0\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "note integrable_circle = this"], ["proof (state)\nthis:\n  ?r'2 \\<in> {0<..<2} \\<Longrightarrow>\n  f s contour_integrable_on part_circlepath 0 ?r'2 pi 0\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "{"], ["proof (state)\nthis:\n  ?r'2 \\<in> {0<..<2} \\<Longrightarrow>\n  f s contour_integrable_on part_circlepath 0 ?r'2 pi 0\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "fix r' :: real"], ["proof (state)\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "assume r': \"r' \\<in> {0<..<2}\""], ["proof (state)\nthis:\n  r' \\<in> {0<..<2}\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "from hurwitz_formula_integral_semiannulus(2)[of r' \"cnj s\" 0] and r'"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < r'; r' < 2\\<rbrakk>\n  \\<Longrightarrow> f (cnj s) contour_integrable_on hankel_semiannulus r' 0\n  r' \\<in> {0<..<2}", "have \"f (cnj s) contour_integrable_on part_circlepath 0 r' pi 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < r'; r' < 2\\<rbrakk>\n  \\<Longrightarrow> f (cnj s) contour_integrable_on hankel_semiannulus r' 0\n  r' \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. f (cnj s) contour_integrable_on part_circlepath 0 r' pi 0", "by (auto simp: hankel_semiannulus_def add_ac)"], ["proof (state)\nthis:\n  f (cnj s) contour_integrable_on part_circlepath 0 r' pi 0\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "}"], ["proof (state)\nthis:\n  ?r'2 \\<in> {0<..<2} \\<Longrightarrow>\n  f (cnj s) contour_integrable_on part_circlepath 0 ?r'2 pi 0\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "note integrable_circle' = this"], ["proof (state)\nthis:\n  ?r'2 \\<in> {0<..<2} \\<Longrightarrow>\n  f (cnj s) contour_integrable_on part_circlepath 0 ?r'2 pi 0\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "have eq: \"-2 * \\<i> * sin (pi * s) * (CLBINT x:{r..pi}. g s x) + (err1 s r - err2 s r) = C\"\n    if r: \"r \\<in> {0<..<2}\" for r :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. - 2 * \\<i> * sin (complex_of_real pi * s) *\n    complex_set_lebesgue_integral lborel {r..pi} (g s) +\n    (err1 s r - err2 s r) =\n    C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. - 2 * \\<i> * sin (complex_of_real pi * s) *\n    complex_set_lebesgue_integral lborel {r..pi} (g s) +\n    (err1 s r - err2 s r) =\n    C", "have eq1: \"integral {r..pi} (\\<lambda>x. cnj (x powr - cnj s) * (exp (- (a * x))) / (1 - (exp (- x)))) =\n               integral {r..pi} (g s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {r..pi}\n     (\\<lambda>x.\n         cnj (complex_of_real x powr - cnj s) *\n         complex_of_real (exp (- (a * x))) /\n         complex_of_real (1 - exp (- x))) =\n    integral {r..pi} (g s)", "using r"], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. integral {r..pi}\n     (\\<lambda>x.\n         cnj (complex_of_real x powr - cnj s) *\n         complex_of_real (exp (- (a * x))) /\n         complex_of_real (1 - exp (- x))) =\n    integral {r..pi} (g s)", "by (intro integral_cong) (auto simp: cnj_powr g_def exp_of_real exp_minus)"], ["proof (state)\nthis:\n  integral {r..pi}\n   (\\<lambda>x.\n       cnj (complex_of_real x powr - cnj s) *\n       complex_of_real (exp (- (a * x))) /\n       complex_of_real (1 - exp (- x))) =\n  integral {r..pi} (g s)\n\ngoal (1 subgoal):\n 1. - 2 * \\<i> * sin (complex_of_real pi * s) *\n    complex_set_lebesgue_integral lborel {r..pi} (g s) +\n    (err1 s r - err2 s r) =\n    C", "have eq2: \"integral {r..pi} (\\<lambda>x. cnj (x powr - cnj s) * (exp (a * x)) / (1 - (exp x))) =\n               integral {r..pi} (\\<lambda>x. x powr - s * (exp (a * x)) / (1 - (exp x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {r..pi}\n     (\\<lambda>x.\n         cnj (complex_of_real x powr - cnj s) *\n         complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) =\n    integral {r..pi}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x))", "using r"], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. integral {r..pi}\n     (\\<lambda>x.\n         cnj (complex_of_real x powr - cnj s) *\n         complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) =\n    integral {r..pi}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x))", "by (intro integral_cong) (auto simp: cnj_powr)"], ["proof (state)\nthis:\n  integral {r..pi}\n   (\\<lambda>x.\n       cnj (complex_of_real x powr - cnj s) *\n       complex_of_real (exp (a * x)) /\n       complex_of_real (1 - exp x)) =\n  integral {r..pi}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n       complex_of_real (1 - exp x))\n\ngoal (1 subgoal):\n 1. - 2 * \\<i> * sin (complex_of_real pi * s) *\n    complex_set_lebesgue_integral lborel {r..pi} (g s) +\n    (err1 s r - err2 s r) =\n    C", "from hurwitz_formula_integral_semiannulus(1)[of r s 0] hurwitz_formula_integral_semiannulus(1)[of r \"cnj s\" 0]"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < r; r < 2\\<rbrakk>\n  \\<Longrightarrow> exp (- \\<i> * complex_of_real pi * s) *\n                    integral {r..real (2 * 0 + 1) * pi}\n                     (\\<lambda>x.\n                         complex_of_real x powr - s *\n                         complex_of_real (exp (- a * x)) /\n                         complex_of_real (1 - exp (- x))) +\n                    integral {r..real (2 * 0 + 1) * pi}\n                     (\\<lambda>x.\n                         complex_of_real x powr - s *\n                         complex_of_real (exp (a * x)) /\n                         complex_of_real (1 - exp x)) +\n                    contour_integral\n                     (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n                     (f s) +\n                    contour_integral (part_circlepath 0 r pi 0) (f s) =\n                    complex_of_real (- 2 * pi) * \\<i> *\n                    exp (- s * complex_of_real pi * \\<i> / 2) *\n                    sum (Res s) {0<..0}\n  \\<lbrakk>0 < r; r < 2\\<rbrakk>\n  \\<Longrightarrow> exp (- \\<i> * complex_of_real pi * cnj s) *\n                    integral {r..real (2 * 0 + 1) * pi}\n                     (\\<lambda>x.\n                         complex_of_real x powr - cnj s *\n                         complex_of_real (exp (- a * x)) /\n                         complex_of_real (1 - exp (- x))) +\n                    integral {r..real (2 * 0 + 1) * pi}\n                     (\\<lambda>x.\n                         complex_of_real x powr - cnj s *\n                         complex_of_real (exp (a * x)) /\n                         complex_of_real (1 - exp x)) +\n                    contour_integral\n                     (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n                     (f (cnj s)) +\n                    contour_integral (part_circlepath 0 r pi 0)\n                     (f (cnj s)) =\n                    complex_of_real (- 2 * pi) * \\<i> *\n                    exp (- cnj s * complex_of_real pi * \\<i> / 2) *\n                    sum (Res (cnj s)) {0<..0}", "have \"exp (-\\<i>*pi * s) *\n            integral {r..real (2*0+1) * pi} (g s) +\n            integral {r..real (2*0+1) * pi} (\\<lambda>x. x powr -s * exp (a * x) / (1 - exp x)) +\n            contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi) (f s) +\n            contour_integral (part_circlepath 0 r pi 0) (f s) - cnj (\n          exp (-\\<i>*pi * cnj s) *\n            integral {r..real (2*0+1) * pi} (\\<lambda>x. x powr - cnj s * exp (-a*x) / (1 - exp (-x))) +\n            integral {r..real (2*0+1) * pi} (\\<lambda>x. x powr - cnj s * exp (a*x) / (1 - exp x)) +\n            contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi) (f (cnj s)) +\n            contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) = 0\" (is \"?lhs = _\")"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < r; r < 2\\<rbrakk>\n  \\<Longrightarrow> exp (- \\<i> * complex_of_real pi * s) *\n                    integral {r..real (2 * 0 + 1) * pi}\n                     (\\<lambda>x.\n                         complex_of_real x powr - s *\n                         complex_of_real (exp (- a * x)) /\n                         complex_of_real (1 - exp (- x))) +\n                    integral {r..real (2 * 0 + 1) * pi}\n                     (\\<lambda>x.\n                         complex_of_real x powr - s *\n                         complex_of_real (exp (a * x)) /\n                         complex_of_real (1 - exp x)) +\n                    contour_integral\n                     (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n                     (f s) +\n                    contour_integral (part_circlepath 0 r pi 0) (f s) =\n                    complex_of_real (- 2 * pi) * \\<i> *\n                    exp (- s * complex_of_real pi * \\<i> / 2) *\n                    sum (Res s) {0<..0}\n  \\<lbrakk>0 < r; r < 2\\<rbrakk>\n  \\<Longrightarrow> exp (- \\<i> * complex_of_real pi * cnj s) *\n                    integral {r..real (2 * 0 + 1) * pi}\n                     (\\<lambda>x.\n                         complex_of_real x powr - cnj s *\n                         complex_of_real (exp (- a * x)) /\n                         complex_of_real (1 - exp (- x))) +\n                    integral {r..real (2 * 0 + 1) * pi}\n                     (\\<lambda>x.\n                         complex_of_real x powr - cnj s *\n                         complex_of_real (exp (a * x)) /\n                         complex_of_real (1 - exp x)) +\n                    contour_integral\n                     (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n                     (f (cnj s)) +\n                    contour_integral (part_circlepath 0 r pi 0)\n                     (f (cnj s)) =\n                    complex_of_real (- 2 * pi) * \\<i> *\n                    exp (- cnj s * complex_of_real pi * \\<i> / 2) *\n                    sum (Res (cnj s)) {0<..0}\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..real (2 * 0 + 1) * pi} (g s) +\n    integral {r..real (2 * 0 + 1) * pi}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n     (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) -\n    cnj (exp (- \\<i> * complex_of_real pi * cnj s) *\n         integral {r..real (2 * 0 + 1) * pi}\n          (\\<lambda>x.\n              complex_of_real x powr - cnj s *\n              complex_of_real (exp (- a * x)) /\n              complex_of_real (1 - exp (- x))) +\n         integral {r..real (2 * 0 + 1) * pi}\n          (\\<lambda>x.\n              complex_of_real x powr - cnj s *\n              complex_of_real (exp (a * x)) /\n              complex_of_real (1 - exp x)) +\n         contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n          (f (cnj s)) +\n         contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) =\n    0", "unfolding g_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < r; r < 2\\<rbrakk>\n  \\<Longrightarrow> exp (- \\<i> * complex_of_real pi * s) *\n                    integral {r..real (2 * 0 + 1) * pi}\n                     (\\<lambda>x.\n                         complex_of_real x powr - s *\n                         complex_of_real (exp (- a * x)) /\n                         complex_of_real (1 - exp (- x))) +\n                    integral {r..real (2 * 0 + 1) * pi}\n                     (\\<lambda>x.\n                         complex_of_real x powr - s *\n                         complex_of_real (exp (a * x)) /\n                         complex_of_real (1 - exp x)) +\n                    contour_integral\n                     (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n                     (f s) +\n                    contour_integral (part_circlepath 0 r pi 0) (f s) =\n                    complex_of_real (- 2 * pi) * \\<i> *\n                    exp (- s * complex_of_real pi * \\<i> / 2) *\n                    sum (Res s) {0<..0}\n  \\<lbrakk>0 < r; r < 2\\<rbrakk>\n  \\<Longrightarrow> exp (- \\<i> * complex_of_real pi * cnj s) *\n                    integral {r..real (2 * 0 + 1) * pi}\n                     (\\<lambda>x.\n                         complex_of_real x powr - cnj s *\n                         complex_of_real (exp (- a * x)) /\n                         complex_of_real (1 - exp (- x))) +\n                    integral {r..real (2 * 0 + 1) * pi}\n                     (\\<lambda>x.\n                         complex_of_real x powr - cnj s *\n                         complex_of_real (exp (a * x)) /\n                         complex_of_real (1 - exp x)) +\n                    contour_integral\n                     (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n                     (f (cnj s)) +\n                    contour_integral (part_circlepath 0 r pi 0)\n                     (f (cnj s)) =\n                    complex_of_real (- 2 * pi) * \\<i> *\n                    exp (- cnj s * complex_of_real pi * \\<i> / 2) *\n                    sum (Res (cnj s)) {0<..0}\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..real (2 * 0 + 1) * pi}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..real (2 * 0 + 1) * pi}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n     (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) -\n    cnj (exp (- \\<i> * complex_of_real pi * cnj s) *\n         integral {r..real (2 * 0 + 1) * pi}\n          (\\<lambda>x.\n              complex_of_real x powr - cnj s *\n              complex_of_real (exp (- a * x)) /\n              complex_of_real (1 - exp (- x))) +\n         integral {r..real (2 * 0 + 1) * pi}\n          (\\<lambda>x.\n              complex_of_real x powr - cnj s *\n              complex_of_real (exp (a * x)) /\n              complex_of_real (1 - exp x)) +\n         contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n          (f (cnj s)) +\n         contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) =\n    0", "using r"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < r; r < 2\\<rbrakk>\n  \\<Longrightarrow> exp (- \\<i> * complex_of_real pi * s) *\n                    integral {r..real (2 * 0 + 1) * pi}\n                     (\\<lambda>x.\n                         complex_of_real x powr - s *\n                         complex_of_real (exp (- a * x)) /\n                         complex_of_real (1 - exp (- x))) +\n                    integral {r..real (2 * 0 + 1) * pi}\n                     (\\<lambda>x.\n                         complex_of_real x powr - s *\n                         complex_of_real (exp (a * x)) /\n                         complex_of_real (1 - exp x)) +\n                    contour_integral\n                     (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n                     (f s) +\n                    contour_integral (part_circlepath 0 r pi 0) (f s) =\n                    complex_of_real (- 2 * pi) * \\<i> *\n                    exp (- s * complex_of_real pi * \\<i> / 2) *\n                    sum (Res s) {0<..0}\n  \\<lbrakk>0 < r; r < 2\\<rbrakk>\n  \\<Longrightarrow> exp (- \\<i> * complex_of_real pi * cnj s) *\n                    integral {r..real (2 * 0 + 1) * pi}\n                     (\\<lambda>x.\n                         complex_of_real x powr - cnj s *\n                         complex_of_real (exp (- a * x)) /\n                         complex_of_real (1 - exp (- x))) +\n                    integral {r..real (2 * 0 + 1) * pi}\n                     (\\<lambda>x.\n                         complex_of_real x powr - cnj s *\n                         complex_of_real (exp (a * x)) /\n                         complex_of_real (1 - exp x)) +\n                    contour_integral\n                     (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n                     (f (cnj s)) +\n                    contour_integral (part_circlepath 0 r pi 0)\n                     (f (cnj s)) =\n                    complex_of_real (- 2 * pi) * \\<i> *\n                    exp (- cnj s * complex_of_real pi * \\<i> / 2) *\n                    sum (Res (cnj s)) {0<..0}\n  r \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..real (2 * 0 + 1) * pi}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..real (2 * 0 + 1) * pi}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n     (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) -\n    cnj (exp (- \\<i> * complex_of_real pi * cnj s) *\n         integral {r..real (2 * 0 + 1) * pi}\n          (\\<lambda>x.\n              complex_of_real x powr - cnj s *\n              complex_of_real (exp (- a * x)) /\n              complex_of_real (1 - exp (- x))) +\n         integral {r..real (2 * 0 + 1) * pi}\n          (\\<lambda>x.\n              complex_of_real x powr - cnj s *\n              complex_of_real (exp (a * x)) /\n              complex_of_real (1 - exp x)) +\n         contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n          (f (cnj s)) +\n         contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) =\n    0", "by (subst (1 2) hurwitz_formula_integral_semiannulus) auto"], ["proof (state)\nthis:\n  exp (- \\<i> * complex_of_real pi * s) *\n  integral {r..real (2 * 0 + 1) * pi} (g s) +\n  integral {r..real (2 * 0 + 1) * pi}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n       complex_of_real (1 - exp x)) +\n  contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi) (f s) +\n  contour_integral (part_circlepath 0 r pi 0) (f s) -\n  cnj (exp (- \\<i> * complex_of_real pi * cnj s) *\n       integral {r..real (2 * 0 + 1) * pi}\n        (\\<lambda>x.\n            complex_of_real x powr - cnj s *\n            complex_of_real (exp (- a * x)) /\n            complex_of_real (1 - exp (- x))) +\n       integral {r..real (2 * 0 + 1) * pi}\n        (\\<lambda>x.\n            complex_of_real x powr - cnj s * complex_of_real (exp (a * x)) /\n            complex_of_real (1 - exp x)) +\n       contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n        (f (cnj s)) +\n       contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) =\n  0\n\ngoal (1 subgoal):\n 1. - 2 * \\<i> * sin (complex_of_real pi * s) *\n    complex_set_lebesgue_integral lborel {r..pi} (g s) +\n    (err1 s r - err2 s r) =\n    C", "also"], ["proof (state)\nthis:\n  exp (- \\<i> * complex_of_real pi * s) *\n  integral {r..real (2 * 0 + 1) * pi} (g s) +\n  integral {r..real (2 * 0 + 1) * pi}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n       complex_of_real (1 - exp x)) +\n  contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi) (f s) +\n  contour_integral (part_circlepath 0 r pi 0) (f s) -\n  cnj (exp (- \\<i> * complex_of_real pi * cnj s) *\n       integral {r..real (2 * 0 + 1) * pi}\n        (\\<lambda>x.\n            complex_of_real x powr - cnj s *\n            complex_of_real (exp (- a * x)) /\n            complex_of_real (1 - exp (- x))) +\n       integral {r..real (2 * 0 + 1) * pi}\n        (\\<lambda>x.\n            complex_of_real x powr - cnj s * complex_of_real (exp (a * x)) /\n            complex_of_real (1 - exp x)) +\n       contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n        (f (cnj s)) +\n       contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) =\n  0\n\ngoal (1 subgoal):\n 1. - 2 * \\<i> * sin (complex_of_real pi * s) *\n    complex_set_lebesgue_integral lborel {r..pi} (g s) +\n    (err1 s r - err2 s r) =\n    C", "have \"?lhs = -2 * \\<i> * sin (pi * s) * integral {r..pi} (g s) + err1 s r - err2 s r - C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..real (2 * 0 + 1) * pi} (g s) +\n    integral {r..real (2 * 0 + 1) * pi}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n     (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) -\n    cnj (exp (- \\<i> * complex_of_real pi * cnj s) *\n         integral {r..real (2 * 0 + 1) * pi}\n          (\\<lambda>x.\n              complex_of_real x powr - cnj s *\n              complex_of_real (exp (- a * x)) /\n              complex_of_real (1 - exp (- x))) +\n         integral {r..real (2 * 0 + 1) * pi}\n          (\\<lambda>x.\n              complex_of_real x powr - cnj s *\n              complex_of_real (exp (a * x)) /\n              complex_of_real (1 - exp x)) +\n         contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n          (f (cnj s)) +\n         contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) =\n    - 2 * \\<i> * sin (complex_of_real pi * s) * integral {r..pi} (g s) +\n    err1 s r -\n    err2 s r -\n    C", "using eq1 eq2"], ["proof (prove)\nusing this:\n  integral {r..pi}\n   (\\<lambda>x.\n       cnj (complex_of_real x powr - cnj s) *\n       complex_of_real (exp (- (a * x))) /\n       complex_of_real (1 - exp (- x))) =\n  integral {r..pi} (g s)\n  integral {r..pi}\n   (\\<lambda>x.\n       cnj (complex_of_real x powr - cnj s) *\n       complex_of_real (exp (a * x)) /\n       complex_of_real (1 - exp x)) =\n  integral {r..pi}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n       complex_of_real (1 - exp x))\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..real (2 * 0 + 1) * pi} (g s) +\n    integral {r..real (2 * 0 + 1) * pi}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n     (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) -\n    cnj (exp (- \\<i> * complex_of_real pi * cnj s) *\n         integral {r..real (2 * 0 + 1) * pi}\n          (\\<lambda>x.\n              complex_of_real x powr - cnj s *\n              complex_of_real (exp (- a * x)) /\n              complex_of_real (1 - exp (- x))) +\n         integral {r..real (2 * 0 + 1) * pi}\n          (\\<lambda>x.\n              complex_of_real x powr - cnj s *\n              complex_of_real (exp (a * x)) /\n              complex_of_real (1 - exp x)) +\n         contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n          (f (cnj s)) +\n         contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) =\n    - 2 * \\<i> * sin (complex_of_real pi * s) * integral {r..pi} (g s) +\n    err1 s r -\n    err2 s r -\n    C", "by (auto simp: integral_cnj exp_cnj err1_def err2_def sin_exp_eq algebra_simps C_def)"], ["proof (state)\nthis:\n  exp (- \\<i> * complex_of_real pi * s) *\n  integral {r..real (2 * 0 + 1) * pi} (g s) +\n  integral {r..real (2 * 0 + 1) * pi}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n       complex_of_real (1 - exp x)) +\n  contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi) (f s) +\n  contour_integral (part_circlepath 0 r pi 0) (f s) -\n  cnj (exp (- \\<i> * complex_of_real pi * cnj s) *\n       integral {r..real (2 * 0 + 1) * pi}\n        (\\<lambda>x.\n            complex_of_real x powr - cnj s *\n            complex_of_real (exp (- a * x)) /\n            complex_of_real (1 - exp (- x))) +\n       integral {r..real (2 * 0 + 1) * pi}\n        (\\<lambda>x.\n            complex_of_real x powr - cnj s * complex_of_real (exp (a * x)) /\n            complex_of_real (1 - exp x)) +\n       contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n        (f (cnj s)) +\n       contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) =\n  - 2 * \\<i> * sin (complex_of_real pi * s) * integral {r..pi} (g s) +\n  err1 s r -\n  err2 s r -\n  C\n\ngoal (1 subgoal):\n 1. - 2 * \\<i> * sin (complex_of_real pi * s) *\n    complex_set_lebesgue_integral lborel {r..pi} (g s) +\n    (err1 s r - err2 s r) =\n    C", "also"], ["proof (state)\nthis:\n  exp (- \\<i> * complex_of_real pi * s) *\n  integral {r..real (2 * 0 + 1) * pi} (g s) +\n  integral {r..real (2 * 0 + 1) * pi}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n       complex_of_real (1 - exp x)) +\n  contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi) (f s) +\n  contour_integral (part_circlepath 0 r pi 0) (f s) -\n  cnj (exp (- \\<i> * complex_of_real pi * cnj s) *\n       integral {r..real (2 * 0 + 1) * pi}\n        (\\<lambda>x.\n            complex_of_real x powr - cnj s *\n            complex_of_real (exp (- a * x)) /\n            complex_of_real (1 - exp (- x))) +\n       integral {r..real (2 * 0 + 1) * pi}\n        (\\<lambda>x.\n            complex_of_real x powr - cnj s * complex_of_real (exp (a * x)) /\n            complex_of_real (1 - exp x)) +\n       contour_integral (part_circlepath 0 (real (2 * 0 + 1) * pi) 0 pi)\n        (f (cnj s)) +\n       contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) =\n  - 2 * \\<i> * sin (complex_of_real pi * s) * integral {r..pi} (g s) +\n  err1 s r -\n  err2 s r -\n  C\n\ngoal (1 subgoal):\n 1. - 2 * \\<i> * sin (complex_of_real pi * s) *\n    complex_set_lebesgue_integral lborel {r..pi} (g s) +\n    (err1 s r - err2 s r) =\n    C", "have \"integral {r..pi} (g s) = (CLBINT x:{r..pi}. g s x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {r..pi} (g s) =\n    complex_set_lebesgue_integral lborel {r..pi} (g s)", "using r"], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. integral {r..pi} (g s) =\n    complex_set_lebesgue_integral lborel {r..pi} (g s)", "by (intro set_borel_integral_eq_integral(2) [symmetric] integrable) auto"], ["proof (state)\nthis:\n  integral {r..pi} (g s) =\n  complex_set_lebesgue_integral lborel {r..pi} (g s)\n\ngoal (1 subgoal):\n 1. - 2 * \\<i> * sin (complex_of_real pi * s) *\n    complex_set_lebesgue_integral lborel {r..pi} (g s) +\n    (err1 s r - err2 s r) =\n    C", "finally"], ["proof (chain)\npicking this:\n  - 2 * \\<i> * sin (complex_of_real pi * s) *\n  complex_set_lebesgue_integral lborel {r..pi} (g s) +\n  err1 s r -\n  err2 s r -\n  C =\n  0", "show \"-2 * \\<i> * sin (pi * s) * (CLBINT x:{r..pi}. g s x) + (err1 s r - err2 s r) = C\""], ["proof (prove)\nusing this:\n  - 2 * \\<i> * sin (complex_of_real pi * s) *\n  complex_set_lebesgue_integral lborel {r..pi} (g s) +\n  err1 s r -\n  err2 s r -\n  C =\n  0\n\ngoal (1 subgoal):\n 1. - 2 * \\<i> * sin (complex_of_real pi * s) *\n    complex_set_lebesgue_integral lborel {r..pi} (g s) +\n    (err1 s r - err2 s r) =\n    C", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  - 2 * \\<i> * sin (complex_of_real pi * s) *\n  complex_set_lebesgue_integral lborel {r..pi} (g s) +\n  (err1 s r - err2 s r) =\n  C\n\ngoal:\nNo subgoals!", "qed\n\n  \\<comment>\\<open>Next, compute the value of @{term C} by letting the radius tend to 0 so that the contribution\n     of the circle vanishes.\\<close>"], ["proof (state)\nthis:\n  ?r \\<in> {0<..<2} \\<Longrightarrow>\n  - 2 * \\<i> * sin (complex_of_real pi * s) *\n  complex_set_lebesgue_integral lborel {?r..pi} (g s) +\n  (err1 s ?r - err2 s ?r) =\n  C\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "have \"((\\<lambda>r. -2 * \\<i> * sin (pi * s) * (CLBINT x:{r..pi}. g s x)  + (err1 s r - err2 s r)) \\<longlongrightarrow>\n             -2 * \\<i> * sin (pi * s) * (CLBINT x:{0<..pi}. g s x) + 0) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>r.\n         - 2 * \\<i> * sin (complex_of_real pi * s) *\n         complex_set_lebesgue_integral lborel {r..pi} (g s) +\n         (err1 s r - err2 s r)) \\<longlongrightarrow>\n     - 2 * \\<i> * sin (complex_of_real pi * s) *\n     complex_set_lebesgue_integral lborel {0<..pi} (g s) +\n     0)\n     (at_right 0)", "proof (intro tendsto_intros tendsto_set_lebesgue_integral_at_right integrable)"], ["proof (state)\ngoal (5 subgoals):\n 1. 0 < pi\n 2. \\<And>x. x \\<in> {0<..pi} \\<Longrightarrow> {x..pi} \\<in> sets lborel\n 3. {0<..pi} \\<in> sets lborel\n 4. {0<..pi} \\<subseteq> {0<..}\n 5. ((\\<lambda>x. err1 s x - err2 s x) \\<longlongrightarrow> 0) (at_right 0)", "from hurwitz_formula_bound2[of s]"], ["proof (chain)\npicking this:\n  (\\<And>C.\n      \\<lbrakk>0 \\<le> C;\n       \\<And>r z.\n          \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n          \\<Longrightarrow> cmod (f s z)\n                            \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "guess C1"], ["proof (prove)\nusing this:\n  (\\<And>C.\n      \\<lbrakk>0 \\<le> C;\n       \\<And>r z.\n          \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n          \\<Longrightarrow> cmod (f s z)\n                            \\<le> C * r powr (- Re s - 1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  0 \\<le> C1\n  \\<lbrakk>0 < ?r; ?r < pi; ?z \\<in> sphere 0 ?r\\<rbrakk>\n  \\<Longrightarrow> cmod (f s ?z) \\<le> C1 * ?r powr (- Re s - 1)\n\ngoal (5 subgoals):\n 1. 0 < pi\n 2. \\<And>x. x \\<in> {0<..pi} \\<Longrightarrow> {x..pi} \\<in> sets lborel\n 3. {0<..pi} \\<in> sets lborel\n 4. {0<..pi} \\<subseteq> {0<..}\n 5. ((\\<lambda>x. err1 s x - err2 s x) \\<longlongrightarrow> 0) (at_right 0)", "note C1 = this"], ["proof (state)\nthis:\n  0 \\<le> C1\n  \\<lbrakk>0 < ?r; ?r < pi; ?z \\<in> sphere 0 ?r\\<rbrakk>\n  \\<Longrightarrow> cmod (f s ?z) \\<le> C1 * ?r powr (- Re s - 1)\n\ngoal (5 subgoals):\n 1. 0 < pi\n 2. \\<And>x. x \\<in> {0<..pi} \\<Longrightarrow> {x..pi} \\<in> sets lborel\n 3. {0<..pi} \\<in> sets lborel\n 4. {0<..pi} \\<subseteq> {0<..}\n 5. ((\\<lambda>x. err1 s x - err2 s x) \\<longlongrightarrow> 0) (at_right 0)", "from hurwitz_formula_bound2[of \"cnj s\"]"], ["proof (chain)\npicking this:\n  (\\<And>C.\n      \\<lbrakk>0 \\<le> C;\n       \\<And>r z.\n          \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n          \\<Longrightarrow> cmod (f (cnj s) z)\n                            \\<le> C * r powr (- Re (cnj s) - 1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "guess C2"], ["proof (prove)\nusing this:\n  (\\<And>C.\n      \\<lbrakk>0 \\<le> C;\n       \\<And>r z.\n          \\<lbrakk>0 < r; r < pi; z \\<in> sphere 0 r\\<rbrakk>\n          \\<Longrightarrow> cmod (f (cnj s) z)\n                            \\<le> C * r powr (- Re (cnj s) - 1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  0 \\<le> C2\n  \\<lbrakk>0 < ?r; ?r < pi; ?z \\<in> sphere 0 ?r\\<rbrakk>\n  \\<Longrightarrow> cmod (f (cnj s) ?z)\n                    \\<le> C2 * ?r powr (- Re (cnj s) - 1)\n\ngoal (5 subgoals):\n 1. 0 < pi\n 2. \\<And>x. x \\<in> {0<..pi} \\<Longrightarrow> {x..pi} \\<in> sets lborel\n 3. {0<..pi} \\<in> sets lborel\n 4. {0<..pi} \\<subseteq> {0<..}\n 5. ((\\<lambda>x. err1 s x - err2 s x) \\<longlongrightarrow> 0) (at_right 0)", "note C2 = this"], ["proof (state)\nthis:\n  0 \\<le> C2\n  \\<lbrakk>0 < ?r; ?r < pi; ?z \\<in> sphere 0 ?r\\<rbrakk>\n  \\<Longrightarrow> cmod (f (cnj s) ?z)\n                    \\<le> C2 * ?r powr (- Re (cnj s) - 1)\n\ngoal (5 subgoals):\n 1. 0 < pi\n 2. \\<And>x. x \\<in> {0<..pi} \\<Longrightarrow> {x..pi} \\<in> sets lborel\n 3. {0<..pi} \\<in> sets lborel\n 4. {0<..pi} \\<subseteq> {0<..}\n 5. ((\\<lambda>x. err1 s x - err2 s x) \\<longlongrightarrow> 0) (at_right 0)", "have ev: \"eventually (\\<lambda>r::real. r \\<in> {0<..<2}) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F r in at_right 0. r \\<in> {0<..<2}", "by (intro eventually_at_right_real) auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F r in at_right 0. r \\<in> {0<..<2}\n\ngoal (5 subgoals):\n 1. 0 < pi\n 2. \\<And>x. x \\<in> {0<..pi} \\<Longrightarrow> {x..pi} \\<in> sets lborel\n 3. {0<..pi} \\<in> sets lborel\n 4. {0<..pi} \\<subseteq> {0<..}\n 5. ((\\<lambda>x. err1 s x - err2 s x) \\<longlongrightarrow> 0) (at_right 0)", "show \"((\\<lambda>r. err1 s r - err2 s r) \\<longlongrightarrow> 0) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>r. err1 s r - err2 s r) \\<longlongrightarrow> 0) (at_right 0)", "proof (rule Lim_null_comparison[OF eventually_mono[OF ev]])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<2} \\<Longrightarrow>\n       cmod (err1 s x - err2 s x) \\<le> ?g x\n 2. (?g \\<longlongrightarrow> 0) (at_right 0)", "fix r :: real"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<2} \\<Longrightarrow>\n       cmod (err1 s x - err2 s x) \\<le> ?g x\n 2. (?g \\<longlongrightarrow> 0) (at_right 0)", "assume r: \"r \\<in> {0<..<2}\""], ["proof (state)\nthis:\n  r \\<in> {0<..<2}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<2} \\<Longrightarrow>\n       cmod (err1 s x - err2 s x) \\<le> ?g x\n 2. (?g \\<longlongrightarrow> 0) (at_right 0)", "have \"norm (err1 s r - err2 s r) \\<le> norm (err1 s r) + norm (err2 s r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (err1 s r - err2 s r) \\<le> cmod (err1 s r) + cmod (err2 s r)", "by (rule norm_triangle_ineq4)"], ["proof (state)\nthis:\n  cmod (err1 s r - err2 s r) \\<le> cmod (err1 s r) + cmod (err2 s r)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<2} \\<Longrightarrow>\n       cmod (err1 s x - err2 s x) \\<le> ?g x\n 2. (?g \\<longlongrightarrow> 0) (at_right 0)", "also"], ["proof (state)\nthis:\n  cmod (err1 s r - err2 s r) \\<le> cmod (err1 s r) + cmod (err2 s r)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<2} \\<Longrightarrow>\n       cmod (err1 s x - err2 s x) \\<le> ?g x\n 2. (?g \\<longlongrightarrow> 0) (at_right 0)", "have \"norm (err1 s r) \\<le> C1 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (err1 s r) \\<le> C1 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar>", "unfolding err1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (contour_integral (part_circlepath 0 r pi 0) (f s))\n    \\<le> C1 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar>", "using C1(1) C1(2)[of r] pi_gt3 integrable_circle[of r]\n          path_image_part_circlepath_subset'[of r 0 pi 0] r"], ["proof (prove)\nusing this:\n  0 \\<le> C1\n  \\<lbrakk>0 < r; r < pi; ?z \\<in> sphere 0 r\\<rbrakk>\n  \\<Longrightarrow> cmod (f s ?z) \\<le> C1 * r powr (- Re s - 1)\n  3 < pi\n  r \\<in> {0<..<2} \\<Longrightarrow>\n  f s contour_integrable_on part_circlepath 0 r pi 0\n  0 \\<le> r \\<Longrightarrow>\n  path_image (part_circlepath 0 r pi 0) \\<subseteq> sphere 0 r\n  r \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. cmod (contour_integral (part_circlepath 0 r pi 0) (f s))\n    \\<le> C1 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar>", "by (intro contour_integral_bound_part_circlepath) auto"], ["proof (state)\nthis:\n  cmod (err1 s r) \\<le> C1 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<2} \\<Longrightarrow>\n       cmod (err1 s x - err2 s x) \\<le> ?g x\n 2. (?g \\<longlongrightarrow> 0) (at_right 0)", "also"], ["proof (state)\nthis:\n  cmod (err1 s r) \\<le> C1 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<2} \\<Longrightarrow>\n       cmod (err1 s x - err2 s x) \\<le> ?g x\n 2. (?g \\<longlongrightarrow> 0) (at_right 0)", "have \"\\<dots> = C1 * r powr (-Re s) * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C1 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar> =\n    C1 * r powr - Re s * pi", "using r"], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. C1 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar> =\n    C1 * r powr - Re s * pi", "by (simp add: powr_diff field_simps)"], ["proof (state)\nthis:\n  C1 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar> =\n  C1 * r powr - Re s * pi\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<2} \\<Longrightarrow>\n       cmod (err1 s x - err2 s x) \\<le> ?g x\n 2. (?g \\<longlongrightarrow> 0) (at_right 0)", "also"], ["proof (state)\nthis:\n  C1 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar> =\n  C1 * r powr - Re s * pi\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<2} \\<Longrightarrow>\n       cmod (err1 s x - err2 s x) \\<le> ?g x\n 2. (?g \\<longlongrightarrow> 0) (at_right 0)", "have \"norm (err2 s r) \\<le> C2 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (err2 s r) \\<le> C2 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar>", "unfolding err2_def complex_mod_cnj"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (contour_integral (part_circlepath 0 r pi 0) (f (cnj s)))\n    \\<le> C2 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar>", "using C2(1) C2(2)[of r] r\n          pi_gt3 integrable_circle'[of r] path_image_part_circlepath_subset'[of r 0 pi 0]"], ["proof (prove)\nusing this:\n  0 \\<le> C2\n  \\<lbrakk>0 < r; r < pi; ?z \\<in> sphere 0 r\\<rbrakk>\n  \\<Longrightarrow> cmod (f (cnj s) ?z) \\<le> C2 * r powr (- Re (cnj s) - 1)\n  r \\<in> {0<..<2}\n  3 < pi\n  r \\<in> {0<..<2} \\<Longrightarrow>\n  f (cnj s) contour_integrable_on part_circlepath 0 r pi 0\n  0 \\<le> r \\<Longrightarrow>\n  path_image (part_circlepath 0 r pi 0) \\<subseteq> sphere 0 r\n\ngoal (1 subgoal):\n 1. cmod (contour_integral (part_circlepath 0 r pi 0) (f (cnj s)))\n    \\<le> C2 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar>", "by (intro contour_integral_bound_part_circlepath) auto"], ["proof (state)\nthis:\n  cmod (err2 s r) \\<le> C2 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<2} \\<Longrightarrow>\n       cmod (err1 s x - err2 s x) \\<le> ?g x\n 2. (?g \\<longlongrightarrow> 0) (at_right 0)", "also"], ["proof (state)\nthis:\n  cmod (err2 s r) \\<le> C2 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<2} \\<Longrightarrow>\n       cmod (err1 s x - err2 s x) \\<le> ?g x\n 2. (?g \\<longlongrightarrow> 0) (at_right 0)", "have \"\\<dots> = C2 * r powr (-Re s) * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C2 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar> =\n    C2 * r powr - Re s * pi", "using r"], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. C2 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar> =\n    C2 * r powr - Re s * pi", "by (simp add: powr_diff field_simps)"], ["proof (state)\nthis:\n  C2 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar> =\n  C2 * r powr - Re s * pi\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<2} \\<Longrightarrow>\n       cmod (err1 s x - err2 s x) \\<le> ?g x\n 2. (?g \\<longlongrightarrow> 0) (at_right 0)", "also"], ["proof (state)\nthis:\n  C2 * r powr (- Re s - 1) * r * \\<bar>0 - pi\\<bar> =\n  C2 * r powr - Re s * pi\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<2} \\<Longrightarrow>\n       cmod (err1 s x - err2 s x) \\<le> ?g x\n 2. (?g \\<longlongrightarrow> 0) (at_right 0)", "have \"C1 * r powr (-Re s) * pi + C2 * r powr (-Re s) * pi =\n                   (C1 + C2) * pi * r powr (-Re s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C1 * r powr - Re s * pi + C2 * r powr - Re s * pi =\n    (C1 + C2) * pi * r powr - Re s", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  C1 * r powr - Re s * pi + C2 * r powr - Re s * pi =\n  (C1 + C2) * pi * r powr - Re s\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<2} \\<Longrightarrow>\n       cmod (err1 s x - err2 s x) \\<le> ?g x\n 2. (?g \\<longlongrightarrow> 0) (at_right 0)", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x y.\n              x \\<le> y \\<Longrightarrow>\n              x + cmod (err2 s r) \\<le> y + cmod (err2 s r);\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      C1 * r powr - Re s * pi + x \\<le> C1 * r powr - Re s * pi + y\\<rbrakk>\n  \\<Longrightarrow> cmod (err1 s r - err2 s r)\n                    \\<le> (C1 + C2) * pi * r powr - Re s", "show \"norm (err1 s r - err2 s r) \\<le> (C1 + C2) * pi * r powr - Re s\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y.\n              x \\<le> y \\<Longrightarrow>\n              x + cmod (err2 s r) \\<le> y + cmod (err2 s r);\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      C1 * r powr - Re s * pi + x \\<le> C1 * r powr - Re s * pi + y\\<rbrakk>\n  \\<Longrightarrow> cmod (err1 s r - err2 s r)\n                    \\<le> (C1 + C2) * pi * r powr - Re s\n\ngoal (1 subgoal):\n 1. cmod (err1 s r - err2 s r) \\<le> (C1 + C2) * pi * r powr - Re s", "by simp"], ["proof (state)\nthis:\n  cmod (err1 s r - err2 s r) \\<le> (C1 + C2) * pi * r powr - Re s\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (C1 + C2) * pi * x powr - Re s) \\<longlongrightarrow> 0)\n     (at_right 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (C1 + C2) * pi * x powr - Re s) \\<longlongrightarrow> 0)\n     (at_right 0)", "show \"((\\<lambda>x. (C1 + C2) * pi * x powr - Re s) \\<longlongrightarrow> 0) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (C1 + C2) * pi * x powr - Re s) \\<longlongrightarrow> 0)\n     (at_right 0)", "using s"], ["proof (prove)\nusing this:\n  s \\<in> {s. Re s < 0}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (C1 + C2) * pi * x powr - Re s) \\<longlongrightarrow> 0)\n     (at_right 0)", "by (auto intro!: tendsto_eq_intros simp: eventually_at exI[of _ 1])"], ["proof (state)\nthis:\n  ((\\<lambda>x. (C1 + C2) * pi * x powr - Re s) \\<longlongrightarrow> 0)\n   (at_right 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<lambda>r. err1 s r - err2 s r) \\<longlongrightarrow> 0) (at_right 0)\n\ngoal (4 subgoals):\n 1. 0 < pi\n 2. \\<And>x. x \\<in> {0<..pi} \\<Longrightarrow> {x..pi} \\<in> sets lborel\n 3. {0<..pi} \\<in> sets lborel\n 4. {0<..pi} \\<subseteq> {0<..}", "qed auto"], ["proof (state)\nthis:\n  ((\\<lambda>r.\n       - 2 * \\<i> * sin (complex_of_real pi * s) *\n       complex_set_lebesgue_integral lborel {r..pi} (g s) +\n       (err1 s r - err2 s r)) \\<longlongrightarrow>\n   - 2 * \\<i> * sin (complex_of_real pi * s) *\n   complex_set_lebesgue_integral lborel {0<..pi} (g s) +\n   0)\n   (at_right 0)\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>r.\n       - 2 * \\<i> * sin (complex_of_real pi * s) *\n       complex_set_lebesgue_integral lborel {r..pi} (g s) +\n       (err1 s r - err2 s r)) \\<longlongrightarrow>\n   - 2 * \\<i> * sin (complex_of_real pi * s) *\n   complex_set_lebesgue_integral lborel {0<..pi} (g s) +\n   0)\n   (at_right 0)\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "have \"eventually (\\<lambda>r::real. r \\<in> {0<..<2}) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F r in at_right 0. r \\<in> {0<..<2}", "by (intro eventually_at_right_real) auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F r in at_right 0. r \\<in> {0<..<2}\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "hence \"eventually (\\<lambda>r. -2 * \\<i> * sin (pi * s) * (CLBINT x:{r..pi}. g s x) +\n           (err1 s r - err2 s r) = C) (at_right 0)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F r in at_right 0. r \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F r in at_right 0.\n       - 2 * \\<i> * sin (complex_of_real pi * s) *\n       complex_set_lebesgue_integral lborel {r..pi} (g s) +\n       (err1 s r - err2 s r) =\n       C", "by eventually_elim (use eq in auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F r in at_right 0.\n     - 2 * \\<i> * sin (complex_of_real pi * s) *\n     complex_set_lebesgue_integral lborel {r..pi} (g s) +\n     (err1 s r - err2 s r) =\n     C\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "hence \"((\\<lambda>r. -2 * \\<i> * sin (pi * s) * (CLBINT x:{r..pi}. g s x)  + (err1 s r - err2 s r)) \\<longlongrightarrow> C)\n            (at_right 0)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F r in at_right 0.\n     - 2 * \\<i> * sin (complex_of_real pi * s) *\n     complex_set_lebesgue_integral lborel {r..pi} (g s) +\n     (err1 s r - err2 s r) =\n     C\n\ngoal (1 subgoal):\n 1. ((\\<lambda>r.\n         - 2 * \\<i> * sin (complex_of_real pi * s) *\n         complex_set_lebesgue_integral lborel {r..pi} (g s) +\n         (err1 s r - err2 s r)) \\<longlongrightarrow>\n     C)\n     (at_right 0)", "by (rule tendsto_eventually)"], ["proof (state)\nthis:\n  ((\\<lambda>r.\n       - 2 * \\<i> * sin (complex_of_real pi * s) *\n       complex_set_lebesgue_integral lborel {r..pi} (g s) +\n       (err1 s r - err2 s r)) \\<longlongrightarrow>\n   C)\n   (at_right 0)\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>r.\n       - 2 * \\<i> * sin (complex_of_real pi * s) *\n       complex_set_lebesgue_integral lborel {r..pi} (g s) +\n       (err1 s r - err2 s r)) \\<longlongrightarrow>\n   - 2 * \\<i> * sin (complex_of_real pi * s) *\n   complex_set_lebesgue_integral lborel {0<..pi} (g s) +\n   0)\n   (at_right 0)\n  ((\\<lambda>r.\n       - 2 * \\<i> * sin (complex_of_real pi * s) *\n       complex_set_lebesgue_integral lborel {r..pi} (g s) +\n       (err1 s r - err2 s r)) \\<longlongrightarrow>\n   C)\n   (at_right 0)", "have [simp]: \"C = -2 * \\<i> * sin (pi * s) * (CLBINT x:{0<..pi}. g s x)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>r.\n       - 2 * \\<i> * sin (complex_of_real pi * s) *\n       complex_set_lebesgue_integral lborel {r..pi} (g s) +\n       (err1 s r - err2 s r)) \\<longlongrightarrow>\n   - 2 * \\<i> * sin (complex_of_real pi * s) *\n   complex_set_lebesgue_integral lborel {0<..pi} (g s) +\n   0)\n   (at_right 0)\n  ((\\<lambda>r.\n       - 2 * \\<i> * sin (complex_of_real pi * s) *\n       complex_set_lebesgue_integral lborel {r..pi} (g s) +\n       (err1 s r - err2 s r)) \\<longlongrightarrow>\n   C)\n   (at_right 0)\n\ngoal (1 subgoal):\n 1. C =\n    - 2 * \\<i> * sin (complex_of_real pi * s) *\n    complex_set_lebesgue_integral lborel {0<..pi} (g s)", "using tendsto_unique"], ["proof (prove)\nusing this:\n  ((\\<lambda>r.\n       - 2 * \\<i> * sin (complex_of_real pi * s) *\n       complex_set_lebesgue_integral lborel {r..pi} (g s) +\n       (err1 s r - err2 s r)) \\<longlongrightarrow>\n   - 2 * \\<i> * sin (complex_of_real pi * s) *\n   complex_set_lebesgue_integral lborel {0<..pi} (g s) +\n   0)\n   (at_right 0)\n  ((\\<lambda>r.\n       - 2 * \\<i> * sin (complex_of_real pi * s) *\n       complex_set_lebesgue_integral lborel {r..pi} (g s) +\n       (err1 s r - err2 s r)) \\<longlongrightarrow>\n   C)\n   (at_right 0)\n  \\<lbrakk>?F \\<noteq> bot; (?f \\<longlongrightarrow> ?a) ?F;\n   (?f \\<longlongrightarrow> ?b) ?F\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. C =\n    - 2 * \\<i> * sin (complex_of_real pi * s) *\n    complex_set_lebesgue_integral lborel {0<..pi} (g s)", "by force\n\n  \\<comment>\\<open>We now rearrange everything and obtain the result.\\<close>"], ["proof (state)\nthis:\n  C =\n  - 2 * \\<i> * sin (complex_of_real pi * s) *\n  complex_set_lebesgue_integral lborel {0<..pi} (g s)\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "have \"2 * \\<i> * sin (pi * s) * ((CLBINT x:{0<..pi}. g s x) - (CLBINT x:{r..pi}. g s x)) =\n          err2 s r - err1 s r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * \\<i> * sin (complex_of_real pi * s) *\n    (complex_set_lebesgue_integral lborel {0<..pi} (g s) -\n     complex_set_lebesgue_integral lborel {r..pi} (g s)) =\n    err2 s r - err1 s r", "using eq[of r] r"], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2} \\<Longrightarrow>\n  - 2 * \\<i> * sin (complex_of_real pi * s) *\n  complex_set_lebesgue_integral lborel {r..pi} (g s) +\n  (err1 s r - err2 s r) =\n  C\n  r \\<in> {1..<2}\n\ngoal (1 subgoal):\n 1. 2 * \\<i> * sin (complex_of_real pi * s) *\n    (complex_set_lebesgue_integral lborel {0<..pi} (g s) -\n     complex_set_lebesgue_integral lborel {r..pi} (g s)) =\n    err2 s r - err1 s r", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  2 * \\<i> * sin (complex_of_real pi * s) *\n  (complex_set_lebesgue_integral lborel {0<..pi} (g s) -\n   complex_set_lebesgue_integral lborel {r..pi} (g s)) =\n  err2 s r - err1 s r\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "also"], ["proof (state)\nthis:\n  2 * \\<i> * sin (complex_of_real pi * s) *\n  (complex_set_lebesgue_integral lborel {0<..pi} (g s) -\n   complex_set_lebesgue_integral lborel {r..pi} (g s)) =\n  err2 s r - err1 s r\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "have \"{0<..pi} = {0<..<r} \\<union> {r..pi}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0<..pi} = {0<..<r} \\<union> {r..pi}", "using r pi_gt3"], ["proof (prove)\nusing this:\n  r \\<in> {1..<2}\n  3 < pi\n\ngoal (1 subgoal):\n 1. {0<..pi} = {0<..<r} \\<union> {r..pi}", "by auto"], ["proof (state)\nthis:\n  {0<..pi} = {0<..<r} \\<union> {r..pi}\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "also"], ["proof (state)\nthis:\n  {0<..pi} = {0<..<r} \\<union> {r..pi}\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "have \"(CLBINT x:\\<dots>. g s x) - (CLBINT x:{r..pi}. g s x) = (CLBINT x:{0<..<r}. g s x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_set_lebesgue_integral lborel ({0<..<r} \\<union> {r..pi}) (g s) -\n    complex_set_lebesgue_integral lborel {r..pi} (g s) =\n    complex_set_lebesgue_integral lborel {0<..<r} (g s)", "using r pi_gt3"], ["proof (prove)\nusing this:\n  r \\<in> {1..<2}\n  3 < pi\n\ngoal (1 subgoal):\n 1. complex_set_lebesgue_integral lborel ({0<..<r} \\<union> {r..pi}) (g s) -\n    complex_set_lebesgue_integral lborel {r..pi} (g s) =\n    complex_set_lebesgue_integral lborel {0<..<r} (g s)", "by (subst set_integral_Un[OF _ integrable integrable]) auto"], ["proof (state)\nthis:\n  complex_set_lebesgue_integral lborel ({0<..<r} \\<union> {r..pi}) (g s) -\n  complex_set_lebesgue_integral lborel {r..pi} (g s) =\n  complex_set_lebesgue_integral lborel {0<..<r} (g s)\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "also"], ["proof (state)\nthis:\n  complex_set_lebesgue_integral lborel ({0<..<r} \\<union> {r..pi}) (g s) -\n  complex_set_lebesgue_integral lborel {r..pi} (g s) =\n  complex_set_lebesgue_integral lborel {0<..<r} (g s)\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "have \"(CLBINT x:{0<..<r}. g s x) =\n               (CLBINT x:{0<..<r} \\<union> {r..}. g s x) - (CLBINT x:{r..}. g s x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_set_lebesgue_integral lborel {0<..<r} (g s) =\n    complex_set_lebesgue_integral lborel ({0<..<r} \\<union> {r..}) (g s) -\n    complex_set_lebesgue_integral lborel {r..} (g s)", "using r pi_gt3"], ["proof (prove)\nusing this:\n  r \\<in> {1..<2}\n  3 < pi\n\ngoal (1 subgoal):\n 1. complex_set_lebesgue_integral lborel {0<..<r} (g s) =\n    complex_set_lebesgue_integral lborel ({0<..<r} \\<union> {r..}) (g s) -\n    complex_set_lebesgue_integral lborel {r..} (g s)", "by (subst set_integral_Un[OF _ integrable integrable]) auto"], ["proof (state)\nthis:\n  complex_set_lebesgue_integral lborel {0<..<r} (g s) =\n  complex_set_lebesgue_integral lborel ({0<..<r} \\<union> {r..}) (g s) -\n  complex_set_lebesgue_integral lborel {r..} (g s)\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "also"], ["proof (state)\nthis:\n  complex_set_lebesgue_integral lborel {0<..<r} (g s) =\n  complex_set_lebesgue_integral lborel ({0<..<r} \\<union> {r..}) (g s) -\n  complex_set_lebesgue_integral lborel {r..} (g s)\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "have \"{0<..<r} \\<union> {r..} = {0<..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0<..<r} \\<union> {r..} = {0<..}", "using r"], ["proof (prove)\nusing this:\n  r \\<in> {1..<2}\n\ngoal (1 subgoal):\n 1. {0<..<r} \\<union> {r..} = {0<..}", "by auto"], ["proof (state)\nthis:\n  {0<..<r} \\<union> {r..} = {0<..}\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "also"], ["proof (state)\nthis:\n  {0<..<r} \\<union> {r..} = {0<..}\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "have \"(CLBINT x:{0<..}. g s x) = Gamma (1 - s) * hurwitz_zeta a (1 - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_set_lebesgue_integral lborel {0<..} (g s) =\n    Gamma (1 - s) * hurwitz_zeta a (1 - s)", "using Gamma_times_hurwitz_zeta_integral[of \"1 - s\" a] s a"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 < Re (1 - s); 0 < a\\<rbrakk>\n  \\<Longrightarrow> Gamma (1 - s) * hurwitz_zeta a (1 - s) =\n                    CLINT x:{0<..}|lebesgue. complex_of_real x powr\n       (1 - s - 1) *\n       complex_of_real (exp (- a * x) / (1 - exp (- x)))\n  s \\<in> {s. Re s < 0}\n  0 < a\n\ngoal (1 subgoal):\n 1. complex_set_lebesgue_integral lborel {0<..} (g s) =\n    Gamma (1 - s) * hurwitz_zeta a (1 - s)", "by (simp add: g_def exp_of_real exp_minus integral_completion set_lebesgue_integral_def)"], ["proof (state)\nthis:\n  complex_set_lebesgue_integral lborel {0<..} (g s) =\n  Gamma (1 - s) * hurwitz_zeta a (1 - s)\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "finally"], ["proof (chain)\npicking this:\n  2 * \\<i> * sin (complex_of_real pi * s) *\n  (Gamma (1 - s) * hurwitz_zeta a (1 - s) -\n   complex_set_lebesgue_integral lborel {r..} (g s)) =\n  err2 s r - err1 s r", "have \"2 * \\<i> * (sin (pi * s) * Gamma (1 - s)) * hurwitz_zeta a (1 - s) =\n                  err2 s r - err1 s r + 2 * \\<i> * sin (pi * s) * (CLBINT x:{r..}. g s x)\""], ["proof (prove)\nusing this:\n  2 * \\<i> * sin (complex_of_real pi * s) *\n  (Gamma (1 - s) * hurwitz_zeta a (1 - s) -\n   complex_set_lebesgue_integral lborel {r..} (g s)) =\n  err2 s r - err1 s r\n\ngoal (1 subgoal):\n 1. 2 * \\<i> * (sin (complex_of_real pi * s) * Gamma (1 - s)) *\n    hurwitz_zeta a (1 - s) =\n    err2 s r - err1 s r +\n    2 * \\<i> * sin (complex_of_real pi * s) *\n    complex_set_lebesgue_integral lborel {r..} (g s)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  2 * \\<i> * (sin (complex_of_real pi * s) * Gamma (1 - s)) *\n  hurwitz_zeta a (1 - s) =\n  err2 s r - err1 s r +\n  2 * \\<i> * sin (complex_of_real pi * s) *\n  complex_set_lebesgue_integral lborel {r..} (g s)\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "also"], ["proof (state)\nthis:\n  2 * \\<i> * (sin (complex_of_real pi * s) * Gamma (1 - s)) *\n  hurwitz_zeta a (1 - s) =\n  err2 s r - err1 s r +\n  2 * \\<i> * sin (complex_of_real pi * s) *\n  complex_set_lebesgue_integral lborel {r..} (g s)\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "have \"sin (pi * s) * Gamma (1 - s) = pi * rGamma s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sin (complex_of_real pi * s) * Gamma (1 - s) =\n    complex_of_real pi * rGamma s", "proof (cases \"s \\<in> \\<int>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. s \\<in> \\<int> \\<Longrightarrow>\n    sin (complex_of_real pi * s) * Gamma (1 - s) =\n    complex_of_real pi * rGamma s\n 2. s \\<notin> \\<int> \\<Longrightarrow>\n    sin (complex_of_real pi * s) * Gamma (1 - s) =\n    complex_of_real pi * rGamma s", "case False"], ["proof (state)\nthis:\n  s \\<notin> \\<int>\n\ngoal (2 subgoals):\n 1. s \\<in> \\<int> \\<Longrightarrow>\n    sin (complex_of_real pi * s) * Gamma (1 - s) =\n    complex_of_real pi * rGamma s\n 2. s \\<notin> \\<int> \\<Longrightarrow>\n    sin (complex_of_real pi * s) * Gamma (1 - s) =\n    complex_of_real pi * rGamma s", "with Gamma_reflection_complex[of s]"], ["proof (chain)\npicking this:\n  Gamma s * Gamma (1 - s) =\n  complex_of_real pi / sin (complex_of_real pi * s)\n  s \\<notin> \\<int>", "show ?thesis"], ["proof (prove)\nusing this:\n  Gamma s * Gamma (1 - s) =\n  complex_of_real pi / sin (complex_of_real pi * s)\n  s \\<notin> \\<int>\n\ngoal (1 subgoal):\n 1. sin (complex_of_real pi * s) * Gamma (1 - s) =\n    complex_of_real pi * rGamma s", "by (auto simp: divide_simps sin_eq_0 Ints_def rGamma_inverse_Gamma mult_ac split: if_splits)"], ["proof (state)\nthis:\n  sin (complex_of_real pi * s) * Gamma (1 - s) =\n  complex_of_real pi * rGamma s\n\ngoal (1 subgoal):\n 1. s \\<in> \\<int> \\<Longrightarrow>\n    sin (complex_of_real pi * s) * Gamma (1 - s) =\n    complex_of_real pi * rGamma s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<in> \\<int> \\<Longrightarrow>\n    sin (complex_of_real pi * s) * Gamma (1 - s) =\n    complex_of_real pi * rGamma s", "case True"], ["proof (state)\nthis:\n  s \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. s \\<in> \\<int> \\<Longrightarrow>\n    sin (complex_of_real pi * s) * Gamma (1 - s) =\n    complex_of_real pi * rGamma s", "with s"], ["proof (chain)\npicking this:\n  s \\<in> {s. Re s < 0}\n  s \\<in> \\<int>", "have \"rGamma s = 0\""], ["proof (prove)\nusing this:\n  s \\<in> {s. Re s < 0}\n  s \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. rGamma s = 0", "by (auto simp: rGamma_eq_zero_iff nonpos_Ints_def Ints_def)"], ["proof (state)\nthis:\n  rGamma s = 0\n\ngoal (1 subgoal):\n 1. s \\<in> \\<int> \\<Longrightarrow>\n    sin (complex_of_real pi * s) * Gamma (1 - s) =\n    complex_of_real pi * rGamma s", "moreover"], ["proof (state)\nthis:\n  rGamma s = 0\n\ngoal (1 subgoal):\n 1. s \\<in> \\<int> \\<Longrightarrow>\n    sin (complex_of_real pi * s) * Gamma (1 - s) =\n    complex_of_real pi * rGamma s", "from True"], ["proof (chain)\npicking this:\n  s \\<in> \\<int>", "have \"sin (pi * s) = 0\""], ["proof (prove)\nusing this:\n  s \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. sin (complex_of_real pi * s) = 0", "by (subst sin_eq_0) (auto elim!: Ints_cases)"], ["proof (state)\nthis:\n  sin (complex_of_real pi * s) = 0\n\ngoal (1 subgoal):\n 1. s \\<in> \\<int> \\<Longrightarrow>\n    sin (complex_of_real pi * s) * Gamma (1 - s) =\n    complex_of_real pi * rGamma s", "ultimately"], ["proof (chain)\npicking this:\n  rGamma s = 0\n  sin (complex_of_real pi * s) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  rGamma s = 0\n  sin (complex_of_real pi * s) = 0\n\ngoal (1 subgoal):\n 1. sin (complex_of_real pi * s) * Gamma (1 - s) =\n    complex_of_real pi * rGamma s", "by simp"], ["proof (state)\nthis:\n  sin (complex_of_real pi * s) * Gamma (1 - s) =\n  complex_of_real pi * rGamma s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sin (complex_of_real pi * s) * Gamma (1 - s) =\n  complex_of_real pi * rGamma s\n\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       2 * \\<i> * complex_of_real pi * rGamma z * hurwitz_zeta a (1 - z) =\n       err2 z r - err1 z r +\n       2 * \\<i> * sin (complex_of_real pi * z) *\n       complex_set_lebesgue_integral lborel {r..} (g z)\n 9. s \\<in> ?s'", "finally"], ["proof (chain)\npicking this:\n  2 * \\<i> * (complex_of_real pi * rGamma s) * hurwitz_zeta a (1 - s) =\n  err2 s r - err1 s r +\n  2 * \\<i> * sin (complex_of_real pi * s) *\n  complex_set_lebesgue_integral lborel {r..} (g s)", "show \"2 * \\<i> * pi * rGamma s * hurwitz_zeta a (1 - s) =\n                  err2 s r - err1 s r + 2 * \\<i> * sin (pi * s) * (CLBINT x:{r..}. g s x)\""], ["proof (prove)\nusing this:\n  2 * \\<i> * (complex_of_real pi * rGamma s) * hurwitz_zeta a (1 - s) =\n  err2 s r - err1 s r +\n  2 * \\<i> * sin (complex_of_real pi * s) *\n  complex_set_lebesgue_integral lborel {r..} (g s)\n\ngoal (1 subgoal):\n 1. 2 * \\<i> * complex_of_real pi * rGamma s * hurwitz_zeta a (1 - s) =\n    err2 s r - err1 s r +\n    2 * \\<i> * sin (complex_of_real pi * s) *\n    complex_set_lebesgue_integral lborel {r..} (g s)", "by (simp add: mult_ac)"], ["proof (state)\nthis:\n  2 * \\<i> * complex_of_real pi * rGamma s * hurwitz_zeta a (1 - s) =\n  err2 s r - err1 s r +\n  2 * \\<i> * sin (complex_of_real pi * s) *\n  complex_set_lebesgue_integral lborel {r..} (g s)\n\ngoal (8 subgoals):\n 1. open {s. Re s < 0}\n 2. open ?s'\n 3. {s. Re s < 0} \\<noteq> {}\n 4. connected ?s'\n 5. {s. Re s < 0} \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. s \\<in> ?s'", "next\n  \\<comment>\\<open>By analytic continuation, we lift the result to the case of any non-zero @{term s}.\\<close>"], ["proof (state)\ngoal (8 subgoals):\n 1. open {s. Re s < 0}\n 2. open ?s'\n 3. {s. Re s < 0} \\<noteq> {}\n 4. connected ?s'\n 5. {s. Re s < 0} \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        2 * \\<i> * complex_of_real pi * rGamma b *\n        hurwitz_zeta a (1 - b)) holomorphic_on\n    ?s'\n 7. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    ?s'\n 8. s \\<in> ?s'", "show \"(\\<lambda>s. 2 * \\<i> * pi * rGamma s * hurwitz_zeta a (1 - s)) holomorphic_on - {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        2 * \\<i> * complex_of_real pi * rGamma s *\n        hurwitz_zeta a (1 - s)) holomorphic_on\n    - {0}", "using a"], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        2 * \\<i> * complex_of_real pi * rGamma s *\n        hurwitz_zeta a (1 - s)) holomorphic_on\n    - {0}", "by (auto intro!: holomorphic_intros)"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      2 * \\<i> * complex_of_real pi * rGamma s *\n      hurwitz_zeta a (1 - s)) holomorphic_on\n  - {0}\n\ngoal (7 subgoals):\n 1. open {s. Re s < 0}\n 2. open (- {0})\n 3. {s. Re s < 0} \\<noteq> {}\n 4. connected (- {0})\n 5. {s. Re s < 0} \\<subseteq> - {0}\n 6. (\\<lambda>a.\n        err2 a r - err1 a r +\n        2 * \\<i> * sin (complex_of_real pi * a) *\n        complex_set_lebesgue_integral lborel {r..} (g a)) holomorphic_on\n    - {0}\n 7. s \\<in> - {0}", "show \"(\\<lambda>s. err2 s r - err1 s r + 2 * \\<i> * sin (pi * s) * (CLBINT x:{r..}. g s x))\n           holomorphic_on -{0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        err2 s r - err1 s r +\n        2 * \\<i> * sin (complex_of_real pi * s) *\n        complex_set_lebesgue_integral lborel {r..} (g s)) holomorphic_on\n    - {0}", "proof (intro holomorphic_intros)"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>z. err2 z r) holomorphic_on - {0}\n 2. (\\<lambda>z. err1 z r) holomorphic_on - {0}\n 3. (\\<lambda>z.\n        complex_set_lebesgue_integral lborel {r..} (g z)) holomorphic_on\n    - {0}", "have \"(\\<lambda>s. err2 s r) = (\\<lambda>s. - cnj (integral {0..pi} (h r (cnj s))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. err2 s r) =\n    (\\<lambda>s. - cnj (integral {0..pi} (h r (cnj s))))", "using r"], ["proof (prove)\nusing this:\n  r \\<in> {1..<2}\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. err2 s r) =\n    (\\<lambda>s. - cnj (integral {0..pi} (h r (cnj s))))", "by (simp add: err2_def contour_integral_part_circlepath_reverse'\n                    contour_integral_part_circlepath_h)"], ["proof (state)\nthis:\n  (\\<lambda>s. err2 s r) =\n  (\\<lambda>s. - cnj (integral {0..pi} (h r (cnj s))))\n\ngoal (3 subgoals):\n 1. (\\<lambda>z. err2 z r) holomorphic_on - {0}\n 2. (\\<lambda>z. err1 z r) holomorphic_on - {0}\n 3. (\\<lambda>z.\n        complex_set_lebesgue_integral lborel {r..} (g z)) holomorphic_on\n    - {0}", "also"], ["proof (state)\nthis:\n  (\\<lambda>s. err2 s r) =\n  (\\<lambda>s. - cnj (integral {0..pi} (h r (cnj s))))\n\ngoal (3 subgoals):\n 1. (\\<lambda>z. err2 z r) holomorphic_on - {0}\n 2. (\\<lambda>z. err1 z r) holomorphic_on - {0}\n 3. (\\<lambda>z.\n        complex_set_lebesgue_integral lborel {r..} (g z)) holomorphic_on\n    - {0}", "have \"(\\<lambda>s. - cnj (integral {0..pi} (h r (cnj s)))) = \n               (\\<lambda>s. (integral {0..pi} (\\<lambda>x. h r s (-x))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. - cnj (integral {0..pi} (h r (cnj s)))) =\n    (\\<lambda>s. integral {0..pi} (\\<lambda>x. h r s (- x)))", "using r"], ["proof (prove)\nusing this:\n  r \\<in> {1..<2}\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. - cnj (integral {0..pi} (h r (cnj s)))) =\n    (\\<lambda>s. integral {0..pi} (\\<lambda>x. h r s (- x)))", "by (simp add: integral_cnj h_def exp_cnj cis_cnj Ln_Reals_eq)"], ["proof (state)\nthis:\n  (\\<lambda>s. - cnj (integral {0..pi} (h r (cnj s)))) =\n  (\\<lambda>s. integral {0..pi} (\\<lambda>x. h r s (- x)))\n\ngoal (3 subgoals):\n 1. (\\<lambda>z. err2 z r) holomorphic_on - {0}\n 2. (\\<lambda>z. err1 z r) holomorphic_on - {0}\n 3. (\\<lambda>z.\n        complex_set_lebesgue_integral lborel {r..} (g z)) holomorphic_on\n    - {0}", "also"], ["proof (state)\nthis:\n  (\\<lambda>s. - cnj (integral {0..pi} (h r (cnj s)))) =\n  (\\<lambda>s. integral {0..pi} (\\<lambda>x. h r s (- x)))\n\ngoal (3 subgoals):\n 1. (\\<lambda>z. err2 z r) holomorphic_on - {0}\n 2. (\\<lambda>z. err1 z r) holomorphic_on - {0}\n 3. (\\<lambda>z.\n        complex_set_lebesgue_integral lborel {r..} (g z)) holomorphic_on\n    - {0}", "have \"\\<dots> = (\\<lambda>s. integral {-pi..0} (h r s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral {0..pi} (\\<lambda>x. h r s (- x))) =\n    (\\<lambda>s. integral {- pi..0} (h r s))", "by (subst Henstock_Kurzweil_Integration.integral_reflect_real [symmetric]) simp"], ["proof (state)\nthis:\n  (\\<lambda>s. integral {0..pi} (\\<lambda>x. h r s (- x))) =\n  (\\<lambda>s. integral {- pi..0} (h r s))\n\ngoal (3 subgoals):\n 1. (\\<lambda>z. err2 z r) holomorphic_on - {0}\n 2. (\\<lambda>z. err1 z r) holomorphic_on - {0}\n 3. (\\<lambda>z.\n        complex_set_lebesgue_integral lborel {r..} (g z)) holomorphic_on\n    - {0}", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>s. err2 s r) = (\\<lambda>s. integral {- pi..0} (h r s))", "have \"(\\<lambda>s. err2 s r) = \\<dots>\""], ["proof (prove)\nusing this:\n  (\\<lambda>s. err2 s r) = (\\<lambda>s. integral {- pi..0} (h r s))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. err2 s r) = (\\<lambda>s. integral {- pi..0} (h r s))", "."], ["proof (state)\nthis:\n  (\\<lambda>s. err2 s r) = (\\<lambda>s. integral {- pi..0} (h r s))\n\ngoal (3 subgoals):\n 1. (\\<lambda>z. err2 z r) holomorphic_on - {0}\n 2. (\\<lambda>z. err1 z r) holomorphic_on - {0}\n 3. (\\<lambda>z.\n        complex_set_lebesgue_integral lborel {r..} (g z)) holomorphic_on\n    - {0}", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>s. err2 s r) = (\\<lambda>s. integral {- pi..0} (h r s))\n\ngoal (3 subgoals):\n 1. (\\<lambda>z. err2 z r) holomorphic_on - {0}\n 2. (\\<lambda>z. err1 z r) holomorphic_on - {0}\n 3. (\\<lambda>z.\n        complex_set_lebesgue_integral lborel {r..} (g z)) holomorphic_on\n    - {0}", "have \"(\\<lambda>s. integral {-pi..0} (h r s)) holomorphic_on -{0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral {- pi..0} (h r s)) holomorphic_on - {0}", "using r"], ["proof (prove)\nusing this:\n  r \\<in> {1..<2}\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral {- pi..0} (h r s)) holomorphic_on - {0}", "by (intro integral_h_holomorphic) auto"], ["proof (state)\nthis:\n  (\\<lambda>s. integral {- pi..0} (h r s)) holomorphic_on - {0}\n\ngoal (3 subgoals):\n 1. (\\<lambda>z. err2 z r) holomorphic_on - {0}\n 2. (\\<lambda>z. err1 z r) holomorphic_on - {0}\n 3. (\\<lambda>z.\n        complex_set_lebesgue_integral lborel {r..} (g z)) holomorphic_on\n    - {0}", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>s. err2 s r) = (\\<lambda>s. integral {- pi..0} (h r s))\n  (\\<lambda>s. integral {- pi..0} (h r s)) holomorphic_on - {0}", "show \"(\\<lambda>s. err2 s r) holomorphic_on -{0}\""], ["proof (prove)\nusing this:\n  (\\<lambda>s. err2 s r) = (\\<lambda>s. integral {- pi..0} (h r s))\n  (\\<lambda>s. integral {- pi..0} (h r s)) holomorphic_on - {0}\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. err2 s r) holomorphic_on - {0}", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>s. err2 s r) holomorphic_on - {0}\n\ngoal (2 subgoals):\n 1. (\\<lambda>z. err1 z r) holomorphic_on - {0}\n 2. (\\<lambda>z.\n        complex_set_lebesgue_integral lborel {r..} (g z)) holomorphic_on\n    - {0}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>z. err1 z r) holomorphic_on - {0}\n 2. (\\<lambda>z.\n        complex_set_lebesgue_integral lborel {r..} (g z)) holomorphic_on\n    - {0}", "have \"(\\<lambda>s. - integral {0..pi} (h r s)) holomorphic_on -{0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. - integral {0..pi} (h r s)) holomorphic_on - {0}", "using r"], ["proof (prove)\nusing this:\n  r \\<in> {1..<2}\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. - integral {0..pi} (h r s)) holomorphic_on - {0}", "by (intro holomorphic_intros integral_h_holomorphic) auto"], ["proof (state)\nthis:\n  (\\<lambda>s. - integral {0..pi} (h r s)) holomorphic_on - {0}\n\ngoal (2 subgoals):\n 1. (\\<lambda>z. err1 z r) holomorphic_on - {0}\n 2. (\\<lambda>z.\n        complex_set_lebesgue_integral lborel {r..} (g z)) holomorphic_on\n    - {0}", "also"], ["proof (state)\nthis:\n  (\\<lambda>s. - integral {0..pi} (h r s)) holomorphic_on - {0}\n\ngoal (2 subgoals):\n 1. (\\<lambda>z. err1 z r) holomorphic_on - {0}\n 2. (\\<lambda>z.\n        complex_set_lebesgue_integral lborel {r..} (g z)) holomorphic_on\n    - {0}", "have \"(\\<lambda>s. - integral {0..pi} (h r s)) = (\\<lambda>s. err1 s r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. - integral {0..pi} (h r s)) = (\\<lambda>s. err1 s r)", "unfolding err1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. - integral {0..pi} (h r s)) =\n    (\\<lambda>s. contour_integral (part_circlepath 0 r pi 0) (f s))", "using r"], ["proof (prove)\nusing this:\n  r \\<in> {1..<2}\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. - integral {0..pi} (h r s)) =\n    (\\<lambda>s. contour_integral (part_circlepath 0 r pi 0) (f s))", "by (simp add: contour_integral_part_circlepath_reverse' contour_integral_part_circlepath_h)"], ["proof (state)\nthis:\n  (\\<lambda>s. - integral {0..pi} (h r s)) = (\\<lambda>s. err1 s r)\n\ngoal (2 subgoals):\n 1. (\\<lambda>z. err1 z r) holomorphic_on - {0}\n 2. (\\<lambda>z.\n        complex_set_lebesgue_integral lborel {r..} (g z)) holomorphic_on\n    - {0}", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>s. err1 s r) holomorphic_on - {0}", "show \"(\\<lambda>s. err1 s r) holomorphic_on -{0}\""], ["proof (prove)\nusing this:\n  (\\<lambda>s. err1 s r) holomorphic_on - {0}\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. err1 s r) holomorphic_on - {0}", "."], ["proof (state)\nthis:\n  (\\<lambda>s. err1 s r) holomorphic_on - {0}\n\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        complex_set_lebesgue_integral lborel {r..} (g z)) holomorphic_on\n    - {0}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        complex_set_lebesgue_integral lborel {r..} (g z)) holomorphic_on\n    - {0}", "show \"(\\<lambda>s. CLBINT x:{r..}. g s x) holomorphic_on -{0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        complex_set_lebesgue_integral lborel {r..} (g s)) holomorphic_on\n    - {0}", "proof (rule holomorphic_on_balls_imp_entire')"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ra.\n       0 < ra \\<Longrightarrow>\n       (\\<lambda>s.\n           complex_set_lebesgue_integral lborel {r..} (g s)) holomorphic_on\n       ball ?c ra", "fix R :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ra.\n       0 < ra \\<Longrightarrow>\n       (\\<lambda>s.\n           complex_set_lebesgue_integral lborel {r..} (g s)) holomorphic_on\n       ball ?c ra", "have \"eventually (\\<lambda>b. b > r) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually ((<) r) at_top", "by (rule eventually_gt_at_top)"], ["proof (state)\nthis:\n  eventually ((<) r) at_top\n\ngoal (1 subgoal):\n 1. \\<And>ra.\n       0 < ra \\<Longrightarrow>\n       (\\<lambda>s.\n           complex_set_lebesgue_integral lborel {r..} (g s)) holomorphic_on\n       ball ?c ra", "hence 1: \"eventually (\\<lambda>b. continuous_on (cball 0 R) (\\<lambda>s. CLBINT x:{r..b}. g s x) \\<and>\n                                (\\<lambda>s. CLBINT x:{r..b}. g s x) holomorphic_on ball 0 R) at_top\""], ["proof (prove)\nusing this:\n  eventually ((<) r) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F b in at_top.\n       continuous_on (cball 0 R)\n        (\\<lambda>s.\n            complex_set_lebesgue_integral lborel {r..b} (g s)) \\<and>\n       (\\<lambda>s.\n           complex_set_lebesgue_integral lborel {r..b} (g s)) holomorphic_on\n       ball 0 R", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       r < b \\<Longrightarrow>\n       continuous_on (cball 0 R)\n        (\\<lambda>s.\n            complex_set_lebesgue_integral lborel {r..b} (g s)) \\<and>\n       (\\<lambda>s.\n           complex_set_lebesgue_integral lborel {r..b} (g s)) holomorphic_on\n       ball 0 R", "case (elim b)"], ["proof (state)\nthis:\n  r < b\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       r < b \\<Longrightarrow>\n       continuous_on (cball 0 R)\n        (\\<lambda>s.\n            complex_set_lebesgue_integral lborel {r..b} (g s)) \\<and>\n       (\\<lambda>s.\n           complex_set_lebesgue_integral lborel {r..b} (g s)) holomorphic_on\n       ball 0 R", "have integrable: \"set_integrable lborel {r..b} (g s)\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_set_integrable lborel {r..b} (g s)", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_set_integrable lborel {r..b}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x)))", "using r"], ["proof (prove)\nusing this:\n  r \\<in> {1..<2}\n\ngoal (1 subgoal):\n 1. complex_set_integrable lborel {r..b}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x)))", "by (intro borel_integrable_atLeastAtMost' continuous_intros) auto"], ["proof (state)\nthis:\n  complex_set_integrable lborel {r..b} (g ?s)\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       r < b \\<Longrightarrow>\n       continuous_on (cball 0 R)\n        (\\<lambda>s.\n            complex_set_lebesgue_integral lborel {r..b} (g s)) \\<and>\n       (\\<lambda>s.\n           complex_set_lebesgue_integral lborel {r..b} (g s)) holomorphic_on\n       ball 0 R", "have \"(\\<lambda>s. integral {r..b} (g s)) holomorphic_on UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral {r..b} (g s)) holomorphic_on UNIV", "using r"], ["proof (prove)\nusing this:\n  r \\<in> {1..<2}\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral {r..b} (g s)) holomorphic_on UNIV", "by (intro integral_g_holomorphic) auto"], ["proof (state)\nthis:\n  (\\<lambda>s. integral {r..b} (g s)) holomorphic_on UNIV\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       r < b \\<Longrightarrow>\n       continuous_on (cball 0 R)\n        (\\<lambda>s.\n            complex_set_lebesgue_integral lborel {r..b} (g s)) \\<and>\n       (\\<lambda>s.\n           complex_set_lebesgue_integral lborel {r..b} (g s)) holomorphic_on\n       ball 0 R", "also"], ["proof (state)\nthis:\n  (\\<lambda>s. integral {r..b} (g s)) holomorphic_on UNIV\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       r < b \\<Longrightarrow>\n       continuous_on (cball 0 R)\n        (\\<lambda>s.\n            complex_set_lebesgue_integral lborel {r..b} (g s)) \\<and>\n       (\\<lambda>s.\n           complex_set_lebesgue_integral lborel {r..b} (g s)) holomorphic_on\n       ball 0 R", "have \"(\\<lambda>s. integral {r..b} (g s)) = (\\<lambda>s. CLBINT x:{r..b}. g s x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. integral {r..b} (g s)) =\n    (\\<lambda>s. complex_set_lebesgue_integral lborel {r..b} (g s))", "by (intro ext set_borel_integral_eq_integral(2)[symmetric] integrable)"], ["proof (state)\nthis:\n  (\\<lambda>s. integral {r..b} (g s)) =\n  (\\<lambda>s. complex_set_lebesgue_integral lborel {r..b} (g s))\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       r < b \\<Longrightarrow>\n       continuous_on (cball 0 R)\n        (\\<lambda>s.\n            complex_set_lebesgue_integral lborel {r..b} (g s)) \\<and>\n       (\\<lambda>s.\n           complex_set_lebesgue_integral lborel {r..b} (g s)) holomorphic_on\n       ball 0 R", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>s.\n      complex_set_lebesgue_integral lborel {r..b} (g s)) holomorphic_on\n  UNIV", "have \"\\<dots> holomorphic_on UNIV\""], ["proof (prove)\nusing this:\n  (\\<lambda>s.\n      complex_set_lebesgue_integral lborel {r..b} (g s)) holomorphic_on\n  UNIV\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        complex_set_lebesgue_integral lborel {r..b} (g s)) holomorphic_on\n    UNIV", "."], ["proof (state)\nthis:\n  (\\<lambda>s.\n      complex_set_lebesgue_integral lborel {r..b} (g s)) holomorphic_on\n  UNIV\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       r < b \\<Longrightarrow>\n       continuous_on (cball 0 R)\n        (\\<lambda>s.\n            complex_set_lebesgue_integral lborel {r..b} (g s)) \\<and>\n       (\\<lambda>s.\n           complex_set_lebesgue_integral lborel {r..b} (g s)) holomorphic_on\n       ball 0 R", "thus ?case"], ["proof (prove)\nusing this:\n  (\\<lambda>s.\n      complex_set_lebesgue_integral lborel {r..b} (g s)) holomorphic_on\n  UNIV\n\ngoal (1 subgoal):\n 1. continuous_on (cball 0 R)\n     (\\<lambda>s. complex_set_lebesgue_integral lborel {r..b} (g s)) \\<and>\n    (\\<lambda>s.\n        complex_set_lebesgue_integral lborel {r..b} (g s)) holomorphic_on\n    ball 0 R", "by (auto intro!: holomorphic_on_imp_continuous_on)"], ["proof (state)\nthis:\n  continuous_on (cball 0 R)\n   (\\<lambda>s. complex_set_lebesgue_integral lborel {r..b} (g s)) \\<and>\n  (\\<lambda>s.\n      complex_set_lebesgue_integral lborel {r..b} (g s)) holomorphic_on\n  ball 0 R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F b in at_top.\n     continuous_on (cball 0 R)\n      (\\<lambda>s. complex_set_lebesgue_integral lborel {r..b} (g s)) \\<and>\n     (\\<lambda>s.\n         complex_set_lebesgue_integral lborel {r..b} (g s)) holomorphic_on\n     ball 0 R\n\ngoal (1 subgoal):\n 1. \\<And>ra.\n       0 < ra \\<Longrightarrow>\n       (\\<lambda>s.\n           complex_set_lebesgue_integral lborel {r..} (g s)) holomorphic_on\n       ball ?c ra", "have 2: \"uniform_limit (cball 0 R) (\\<lambda>b s. CLBINT x:{r..b}. g s x)\n                 (\\<lambda>s. CLBINT x:{r..}. g s x) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit (cball 0 R)\n     (\\<lambda>b s. complex_set_lebesgue_integral lborel {r..b} (g s))\n     (\\<lambda>s. complex_set_lebesgue_integral lborel {r..} (g s)) at_top", "proof (rule uniform_limit_set_lebesgue_integral_at_top)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>s x.\n       \\<lbrakk>s \\<in> cball 0 R; r \\<le> x\\<rbrakk>\n       \\<Longrightarrow> cmod (g s x) \\<le> ?g x\n 2. set_integrable lborel {r..} ?g\n 3. \\<And>s.\n       s \\<in> cball 0 R \\<Longrightarrow>\n       set_borel_measurable lborel {r..} (g s)\n 4. sets borel \\<subseteq> sets lborel", "fix s :: complex and x :: real"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>s x.\n       \\<lbrakk>s \\<in> cball 0 R; r \\<le> x\\<rbrakk>\n       \\<Longrightarrow> cmod (g s x) \\<le> ?g x\n 2. set_integrable lborel {r..} ?g\n 3. \\<And>s.\n       s \\<in> cball 0 R \\<Longrightarrow>\n       set_borel_measurable lborel {r..} (g s)\n 4. sets borel \\<subseteq> sets lborel", "assume s: \"s \\<in> cball 0 R\" and x: \"x \\<ge> r\""], ["proof (state)\nthis:\n  s \\<in> cball 0 R\n  r \\<le> x\n\ngoal (4 subgoals):\n 1. \\<And>s x.\n       \\<lbrakk>s \\<in> cball 0 R; r \\<le> x\\<rbrakk>\n       \\<Longrightarrow> cmod (g s x) \\<le> ?g x\n 2. set_integrable lborel {r..} ?g\n 3. \\<And>s.\n       s \\<in> cball 0 R \\<Longrightarrow>\n       set_borel_measurable lborel {r..} (g s)\n 4. sets borel \\<subseteq> sets lborel", "have \"norm (g s x) = x powr -Re s * exp (-a * x) / (1 - exp (-x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (g s x) = x powr - Re s * exp (- a * x) / (1 - exp (- x))", "using x r"], ["proof (prove)\nusing this:\n  r \\<le> x\n  r \\<in> {1..<2}\n\ngoal (1 subgoal):\n 1. cmod (g s x) = x powr - Re s * exp (- a * x) / (1 - exp (- x))", "by (simp add: g_def norm_mult norm_divide in_Reals_norm norm_powr_real_powr)"], ["proof (state)\nthis:\n  cmod (g s x) = x powr - Re s * exp (- a * x) / (1 - exp (- x))\n\ngoal (4 subgoals):\n 1. \\<And>s x.\n       \\<lbrakk>s \\<in> cball 0 R; r \\<le> x\\<rbrakk>\n       \\<Longrightarrow> cmod (g s x) \\<le> ?g x\n 2. set_integrable lborel {r..} ?g\n 3. \\<And>s.\n       s \\<in> cball 0 R \\<Longrightarrow>\n       set_borel_measurable lborel {r..} (g s)\n 4. sets borel \\<subseteq> sets lborel", "also"], ["proof (state)\nthis:\n  cmod (g s x) = x powr - Re s * exp (- a * x) / (1 - exp (- x))\n\ngoal (4 subgoals):\n 1. \\<And>s x.\n       \\<lbrakk>s \\<in> cball 0 R; r \\<le> x\\<rbrakk>\n       \\<Longrightarrow> cmod (g s x) \\<le> ?g x\n 2. set_integrable lborel {r..} ?g\n 3. \\<And>s.\n       s \\<in> cball 0 R \\<Longrightarrow>\n       set_borel_measurable lborel {r..} (g s)\n 4. sets borel \\<subseteq> sets lborel", "have \"\\<dots> \\<le> x powr R * exp (-a * x) / (1 - exp (-x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x powr - Re s * exp (- a * x) / (1 - exp (- x))\n    \\<le> x powr R * exp (- a * x) / (1 - exp (- x))", "using r s x abs_Re_le_cmod[of s]"], ["proof (prove)\nusing this:\n  r \\<in> {1..<2}\n  s \\<in> cball 0 R\n  r \\<le> x\n  \\<bar>Re s\\<bar> \\<le> cmod s\n\ngoal (1 subgoal):\n 1. x powr - Re s * exp (- a * x) / (1 - exp (- x))\n    \\<le> x powr R * exp (- a * x) / (1 - exp (- x))", "by (intro mult_right_mono divide_right_mono powr_mono) auto"], ["proof (state)\nthis:\n  x powr - Re s * exp (- a * x) / (1 - exp (- x))\n  \\<le> x powr R * exp (- a * x) / (1 - exp (- x))\n\ngoal (4 subgoals):\n 1. \\<And>s x.\n       \\<lbrakk>s \\<in> cball 0 R; r \\<le> x\\<rbrakk>\n       \\<Longrightarrow> cmod (g s x) \\<le> ?g x\n 2. set_integrable lborel {r..} ?g\n 3. \\<And>s.\n       s \\<in> cball 0 R \\<Longrightarrow>\n       set_borel_measurable lborel {r..} (g s)\n 4. sets borel \\<subseteq> sets lborel", "finally"], ["proof (chain)\npicking this:\n  cmod (g s x) \\<le> x powr R * exp (- a * x) / (1 - exp (- x))", "show \"norm (g s x) \\<le> x powr R * exp (- a * x) / (1 - exp (- x))\""], ["proof (prove)\nusing this:\n  cmod (g s x) \\<le> x powr R * exp (- a * x) / (1 - exp (- x))\n\ngoal (1 subgoal):\n 1. cmod (g s x) \\<le> x powr R * exp (- a * x) / (1 - exp (- x))", "."], ["proof (state)\nthis:\n  cmod (g s x) \\<le> x powr R * exp (- a * x) / (1 - exp (- x))\n\ngoal (3 subgoals):\n 1. set_integrable lborel {r..}\n     (\\<lambda>x. x powr R * exp (- a * x) / (1 - exp (- x)))\n 2. \\<And>s.\n       s \\<in> cball 0 R \\<Longrightarrow>\n       set_borel_measurable lborel {r..} (g s)\n 3. sets borel \\<subseteq> sets lborel", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. set_integrable lborel {r..}\n     (\\<lambda>x. x powr R * exp (- a * x) / (1 - exp (- x)))\n 2. \\<And>s.\n       s \\<in> cball 0 R \\<Longrightarrow>\n       set_borel_measurable lborel {r..} (g s)\n 3. sets borel \\<subseteq> sets lborel", "show \"set_integrable lborel {r..} (\\<lambda>x. x powr R * exp (-a * x) / (1 - exp (-x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_integrable lborel {r..}\n     (\\<lambda>x. x powr R * exp (- a * x) / (1 - exp (- x)))", "using r a"], ["proof (prove)\nusing this:\n  r \\<in> {1..<2}\n  0 < a\n\ngoal (1 subgoal):\n 1. set_integrable lborel {r..}\n     (\\<lambda>x. x powr R * exp (- a * x) / (1 - exp (- x)))", "by (intro set_integrable_Gamma_hurwitz_aux2_real) auto"], ["proof (state)\nthis:\n  set_integrable lborel {r..}\n   (\\<lambda>x. x powr R * exp (- a * x) / (1 - exp (- x)))\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       s \\<in> cball 0 R \\<Longrightarrow>\n       set_borel_measurable lborel {r..} (g s)\n 2. sets borel \\<subseteq> sets lborel", "qed (simp_all add: set_borel_measurable_def g_def)"], ["proof (state)\nthis:\n  uniform_limit (cball 0 R)\n   (\\<lambda>b s. complex_set_lebesgue_integral lborel {r..b} (g s))\n   (\\<lambda>s. complex_set_lebesgue_integral lborel {r..} (g s)) at_top\n\ngoal (1 subgoal):\n 1. \\<And>ra.\n       0 < ra \\<Longrightarrow>\n       (\\<lambda>s.\n           complex_set_lebesgue_integral lborel {r..} (g s)) holomorphic_on\n       ball ?c ra", "show \"(\\<lambda>s. CLBINT x:{r..}. g s x) holomorphic_on ball 0 R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        complex_set_lebesgue_integral lborel {r..} (g s)) holomorphic_on\n    ball 0 R", "using holomorphic_uniform_limit[OF 1 2]"], ["proof (prove)\nusing this:\n  \\<lbrakk>at_top \\<noteq> bot;\n   \\<lbrakk>continuous_on (cball 0 R)\n             (\\<lambda>s. complex_set_lebesgue_integral lborel {r..} (g s));\n    (\\<lambda>s.\n        complex_set_lebesgue_integral lborel {r..} (g s)) holomorphic_on\n    ball 0 R\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        complex_set_lebesgue_integral lborel {r..} (g s)) holomorphic_on\n    ball 0 R", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      complex_set_lebesgue_integral lborel {r..} (g s)) holomorphic_on\n  ball 0 R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      complex_set_lebesgue_integral lborel {r..} (g s)) holomorphic_on\n  - {0}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      err2 s r - err1 s r +\n      2 * \\<i> * sin (complex_of_real pi * s) *\n      complex_set_lebesgue_integral lborel {r..} (g s)) holomorphic_on\n  - {0}\n\ngoal (6 subgoals):\n 1. open {s. Re s < 0}\n 2. open (- {0})\n 3. {s. Re s < 0} \\<noteq> {}\n 4. connected (- {0})\n 5. {s. Re s < 0} \\<subseteq> - {0}\n 6. s \\<in> - {0}", "qed (insert \\<open>s \\<noteq> 0\\<close>, \n     auto simp: connected_punctured_universe open_halfspace_Re_lt intro: exI[of _ \"-1\"])"], ["", "text \\<open>\n  Finally, we obtain Hurwitz's formula by letting the radius of the outer circle tend to \\<open>\\<infinity>\\<close>.\n\\<close>"], ["", "lemma hurwitz_zeta_formula_aux:\n  fixes s :: complex\n  assumes s: \"Re s > 1\"\n  shows   \"rGamma s * hurwitz_zeta a (1 - s) = (2 * pi) powr -s * \n                  (\\<i> powr (-s) * F a s + \\<i> powr s * F (-a) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "from s"], ["proof (chain)\npicking this:\n  1 < Re s", "have [simp]: \"s \\<noteq> 0\""], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. s \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "define r where \"r = (1 :: real)\""], ["proof (state)\nthis:\n  r = 1\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have r: \"r \\<in> {0<..<2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> {0<..<2}", "by (simp add: r_def)"], ["proof (state)\nthis:\n  r \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "define R where \"R = (\\<lambda>n. real (2 * n + 1) * pi)\""], ["proof (state)\nthis:\n  R = (\\<lambda>n. real (2 * n + 1) * pi)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "define bigc where \"bigc = (\\<lambda>n. contour_integral (part_circlepath 0 (R n) 0 pi) (f s) -\n                                 cnj (contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s))))\""], ["proof (state)\nthis:\n  bigc =\n  (\\<lambda>n.\n      contour_integral (part_circlepath 0 (R n) 0 pi) (f s) -\n      cnj (contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s))))\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "define smallc where \"smallc = contour_integral (part_circlepath 0 r pi 0) (f s) - \n                                cnj (contour_integral (part_circlepath 0 r pi 0) (f (cnj s)))\""], ["proof (state)\nthis:\n  smallc =\n  contour_integral (part_circlepath 0 r pi 0) (f s) -\n  cnj (contour_integral (part_circlepath 0 r pi 0) (f (cnj s)))\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "define I where \"I = (\\<lambda>n. CLBINT x:{r..R n}. g s x)\""], ["proof (state)\nthis:\n  I = (\\<lambda>n. complex_set_lebesgue_integral lborel {r..R n} (g s))\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "define F1 and F2 where\n    \"F1 = (\\<lambda>n. exp (-s * pi * \\<i> / 2) * (\\<Sum>k\\<in>{0<..n}. exp (2 * real k * pi * a * \\<i>) * k powr (-s)))\"\n    \"F2 = (\\<lambda>n. exp (s * pi * \\<i> / 2) * (\\<Sum>k\\<in>{0<..n}. exp (2 * real k * pi * (-a) * \\<i>) * k powr (-s)))\""], ["proof (state)\nthis:\n  F1 =\n  (\\<lambda>n.\n      exp (- s * complex_of_real pi * \\<i> / 2) *\n      (\\<Sum>k\\<in>{0<..n}.\n         exp (complex_of_real (2 * real k * pi * a) * \\<i>) *\n         of_nat k powr - s))\n  F2 =\n  (\\<lambda>n.\n      exp (s * complex_of_real pi * \\<i> / 2) *\n      (\\<Sum>k\\<in>{0<..n}.\n         exp (complex_of_real (2 * real k * pi * - a) * \\<i>) *\n         of_nat k powr - s))\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have R: \"R n \\<ge> pi\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. pi \\<le> R n", "using r"], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. pi \\<le> R n", "by (auto simp: R_def field_simps)"], ["proof (state)\nthis:\n  pi \\<le> R ?n\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have [simp]: \"\\<not>(pi \\<le> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> pi \\<le> 0", "using pi_gt_zero"], ["proof (prove)\nusing this:\n  0 < pi\n\ngoal (1 subgoal):\n 1. \\<not> pi \\<le> 0", "by linarith"], ["proof (state)\nthis:\n  \\<not> pi \\<le> 0\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have integrable: \"set_integrable lborel A (g s)\"\n    if \"A \\<in> sets lborel\" \"A \\<subseteq> {r..}\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_set_integrable lborel A (g s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. complex_set_integrable lborel A (g s)", "have \"set_integrable lborel {r..} (g s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_set_integrable lborel {r..} (g s)", "using set_integrable_Gamma_hurwitz_aux2[of r a s] a r"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < r; 0 < a\\<rbrakk>\n  \\<Longrightarrow> complex_set_integrable lborel {r..}\n                     (\\<lambda>x.\n                         complex_of_real x powr - s *\n                         complex_of_real (exp (- a * x)) /\n                         (1 - exp (- complex_of_real x)))\n  a \\<in> {0<..1}\n  r \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. complex_set_integrable lborel {r..} (g s)", "by (simp add: g_def exp_of_real exp_minus)"], ["proof (state)\nthis:\n  complex_set_integrable lborel {r..} (g s)\n\ngoal (1 subgoal):\n 1. complex_set_integrable lborel A (g s)", "thus ?thesis"], ["proof (prove)\nusing this:\n  complex_set_integrable lborel {r..} (g s)\n\ngoal (1 subgoal):\n 1. complex_set_integrable lborel A (g s)", "by (rule set_integrable_subset) (use that in auto)"], ["proof (state)\nthis:\n  complex_set_integrable lborel A (g s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?A \\<in> sets lborel; ?A \\<subseteq> {r..}\\<rbrakk>\n  \\<Longrightarrow> complex_set_integrable lborel ?A (g s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?A \\<in> sets lborel; ?A \\<subseteq> {r..}\\<rbrakk>\n  \\<Longrightarrow> complex_set_integrable lborel ?A (g s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "fix n :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "from hurwitz_formula_integral_semiannulus(2)[of \"r\" s n] and r R[of n]"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < r; r < 2\\<rbrakk>\n  \\<Longrightarrow> f s contour_integrable_on hankel_semiannulus r n\n  r \\<in> {0<..<2}\n  pi \\<le> R n", "have \"f s contour_integrable_on part_circlepath 0 (R n) 0 pi\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < r; r < 2\\<rbrakk>\n  \\<Longrightarrow> f s contour_integrable_on hankel_semiannulus r n\n  r \\<in> {0<..<2}\n  pi \\<le> R n\n\ngoal (1 subgoal):\n 1. f s contour_integrable_on part_circlepath 0 (R n) 0 pi", "by (auto simp: hankel_semiannulus_def R_def add_ac)"], ["proof (state)\nthis:\n  f s contour_integrable_on part_circlepath 0 (R n) 0 pi\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "}"], ["proof (state)\nthis:\n  f s contour_integrable_on part_circlepath 0 (R ?n2) 0 pi\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "note integrable_circle = this"], ["proof (state)\nthis:\n  f s contour_integrable_on part_circlepath 0 (R ?n2) 0 pi\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "{"], ["proof (state)\nthis:\n  f s contour_integrable_on part_circlepath 0 (R ?n2) 0 pi\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "fix n :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "from hurwitz_formula_integral_semiannulus(2)[of \"r\" \"cnj s\" n] and r R[of n]"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < r; r < 2\\<rbrakk>\n  \\<Longrightarrow> f (cnj s) contour_integrable_on hankel_semiannulus r n\n  r \\<in> {0<..<2}\n  pi \\<le> R n", "have \"f (cnj s) contour_integrable_on part_circlepath 0 (R n) 0 pi\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < r; r < 2\\<rbrakk>\n  \\<Longrightarrow> f (cnj s) contour_integrable_on hankel_semiannulus r n\n  r \\<in> {0<..<2}\n  pi \\<le> R n\n\ngoal (1 subgoal):\n 1. f (cnj s) contour_integrable_on part_circlepath 0 (R n) 0 pi", "by (auto simp: hankel_semiannulus_def R_def add_ac)"], ["proof (state)\nthis:\n  f (cnj s) contour_integrable_on part_circlepath 0 (R n) 0 pi\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "}"], ["proof (state)\nthis:\n  f (cnj s) contour_integrable_on part_circlepath 0 (R ?n2) 0 pi\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "note integrable_circle' = this"], ["proof (state)\nthis:\n  f (cnj s) contour_integrable_on part_circlepath 0 (R ?n2) 0 pi\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "{"], ["proof (state)\nthis:\n  f (cnj s) contour_integrable_on part_circlepath 0 (R ?n2) 0 pi\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "fix n :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have \"(exp (-\\<i> * pi * s) * integral {r..R n} (g s) +\n            integral {r..R n} (\\<lambda>x. x powr (-s) * exp (a * x) / (1 - exp x)) +\n            contour_integral (part_circlepath 0 (R n) 0 pi) (f s) +\n            contour_integral (part_circlepath 0 r pi 0) (f s)) - cnj (\n           exp (-\\<i> * pi * cnj s) * integral {r..R n} (g (cnj s)) +\n            integral {r..R n} (\\<lambda>x. x powr (-cnj s) * exp (a * x) / (1 - exp x)) +\n            contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s)) +\n            contour_integral (part_circlepath 0 r pi 0) (f (cnj s)))\n           = -2 * pi * \\<i> * exp (- s * of_real pi * \\<i> / 2) * (\\<Sum>k\\<in>{0<..n}. Res s k) -\n             cnj (-2 * pi * \\<i> * exp (- cnj s * of_real pi * \\<i> / 2) * (\\<Sum>k\\<in>{0<..n}. Res (cnj s) k))\"\n      (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) * integral {r..R n} (g s) +\n    integral {r..R n}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 (R n) 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) -\n    cnj (exp (- \\<i> * complex_of_real pi * cnj s) *\n         integral {r..R n} (g (cnj s)) +\n         integral {r..R n}\n          (\\<lambda>x.\n              complex_of_real x powr - cnj s *\n              complex_of_real (exp (a * x)) /\n              complex_of_real (1 - exp x)) +\n         contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s)) +\n         contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..n} -\n    cnj (complex_of_real (- 2 * pi) * \\<i> *\n         exp (- cnj s * complex_of_real pi * \\<i> / 2) *\n         sum (Res (cnj s)) {0<..n})", "unfolding R_def g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..real (2 * n + 1) * pi}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..real (2 * n + 1) * pi}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 (real (2 * n + 1) * pi) 0 pi)\n     (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) -\n    cnj (exp (- \\<i> * complex_of_real pi * cnj s) *\n         integral {r..real (2 * n + 1) * pi}\n          (\\<lambda>x.\n              complex_of_real x powr - cnj s *\n              complex_of_real (exp (- a * x)) /\n              complex_of_real (1 - exp (- x))) +\n         integral {r..real (2 * n + 1) * pi}\n          (\\<lambda>x.\n              complex_of_real x powr - cnj s *\n              complex_of_real (exp (a * x)) /\n              complex_of_real (1 - exp x)) +\n         contour_integral (part_circlepath 0 (real (2 * n + 1) * pi) 0 pi)\n          (f (cnj s)) +\n         contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..n} -\n    cnj (complex_of_real (- 2 * pi) * \\<i> *\n         exp (- cnj s * complex_of_real pi * \\<i> / 2) *\n         sum (Res (cnj s)) {0<..n})", "using r"], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) *\n    integral {r..real (2 * n + 1) * pi}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (- a * x)) /\n         complex_of_real (1 - exp (- x))) +\n    integral {r..real (2 * n + 1) * pi}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 (real (2 * n + 1) * pi) 0 pi)\n     (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) -\n    cnj (exp (- \\<i> * complex_of_real pi * cnj s) *\n         integral {r..real (2 * n + 1) * pi}\n          (\\<lambda>x.\n              complex_of_real x powr - cnj s *\n              complex_of_real (exp (- a * x)) /\n              complex_of_real (1 - exp (- x))) +\n         integral {r..real (2 * n + 1) * pi}\n          (\\<lambda>x.\n              complex_of_real x powr - cnj s *\n              complex_of_real (exp (a * x)) /\n              complex_of_real (1 - exp x)) +\n         contour_integral (part_circlepath 0 (real (2 * n + 1) * pi) 0 pi)\n          (f (cnj s)) +\n         contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..n} -\n    cnj (complex_of_real (- 2 * pi) * \\<i> *\n         exp (- cnj s * complex_of_real pi * \\<i> / 2) *\n         sum (Res (cnj s)) {0<..n})", "by (subst (1 2) hurwitz_formula_integral_semiannulus) auto"], ["proof (state)\nthis:\n  exp (- \\<i> * complex_of_real pi * s) * integral {r..R n} (g s) +\n  integral {r..R n}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n       complex_of_real (1 - exp x)) +\n  contour_integral (part_circlepath 0 (R n) 0 pi) (f s) +\n  contour_integral (part_circlepath 0 r pi 0) (f s) -\n  cnj (exp (- \\<i> * complex_of_real pi * cnj s) *\n       integral {r..R n} (g (cnj s)) +\n       integral {r..R n}\n        (\\<lambda>x.\n            complex_of_real x powr - cnj s * complex_of_real (exp (a * x)) /\n            complex_of_real (1 - exp x)) +\n       contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s)) +\n       contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) =\n  complex_of_real (- 2 * pi) * \\<i> *\n  exp (- s * complex_of_real pi * \\<i> / 2) *\n  sum (Res s) {0<..n} -\n  cnj (complex_of_real (- 2 * pi) * \\<i> *\n       exp (- cnj s * complex_of_real pi * \\<i> / 2) *\n       sum (Res (cnj s)) {0<..n})\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "also"], ["proof (state)\nthis:\n  exp (- \\<i> * complex_of_real pi * s) * integral {r..R n} (g s) +\n  integral {r..R n}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n       complex_of_real (1 - exp x)) +\n  contour_integral (part_circlepath 0 (R n) 0 pi) (f s) +\n  contour_integral (part_circlepath 0 r pi 0) (f s) -\n  cnj (exp (- \\<i> * complex_of_real pi * cnj s) *\n       integral {r..R n} (g (cnj s)) +\n       integral {r..R n}\n        (\\<lambda>x.\n            complex_of_real x powr - cnj s * complex_of_real (exp (a * x)) /\n            complex_of_real (1 - exp x)) +\n       contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s)) +\n       contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) =\n  complex_of_real (- 2 * pi) * \\<i> *\n  exp (- s * complex_of_real pi * \\<i> / 2) *\n  sum (Res s) {0<..n} -\n  cnj (complex_of_real (- 2 * pi) * \\<i> *\n       exp (- cnj s * complex_of_real pi * \\<i> / 2) *\n       sum (Res (cnj s)) {0<..n})\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have \"?rhs = -2 * pi * \\<i> * (exp (- s * pi * \\<i> / 2) * (\\<Sum>k\\<in>{0<..n}. Res s k) +\n                                     exp (s * pi * \\<i> / 2) * (\\<Sum>k\\<in>{0<..n}. cnj (Res (cnj s) k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (- 2 * pi) * \\<i> *\n    exp (- s * complex_of_real pi * \\<i> / 2) *\n    sum (Res s) {0<..n} -\n    cnj (complex_of_real (- 2 * pi) * \\<i> *\n         exp (- cnj s * complex_of_real pi * \\<i> / 2) *\n         sum (Res (cnj s)) {0<..n}) =\n    complex_of_real (- 2 * pi) * \\<i> *\n    (exp (- s * complex_of_real pi * \\<i> / 2) * sum (Res s) {0<..n} +\n     exp (s * complex_of_real pi * \\<i> / 2) *\n     (\\<Sum>k\\<in>{0<..n}. cnj (Res (cnj s) k)))", "by (simp add: exp_cnj sum.distrib algebra_simps sum_distrib_left sum_distrib_right sum_negf)"], ["proof (state)\nthis:\n  complex_of_real (- 2 * pi) * \\<i> *\n  exp (- s * complex_of_real pi * \\<i> / 2) *\n  sum (Res s) {0<..n} -\n  cnj (complex_of_real (- 2 * pi) * \\<i> *\n       exp (- cnj s * complex_of_real pi * \\<i> / 2) *\n       sum (Res (cnj s)) {0<..n}) =\n  complex_of_real (- 2 * pi) * \\<i> *\n  (exp (- s * complex_of_real pi * \\<i> / 2) * sum (Res s) {0<..n} +\n   exp (s * complex_of_real pi * \\<i> / 2) *\n   (\\<Sum>k\\<in>{0<..n}. cnj (Res (cnj s) k)))\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "also"], ["proof (state)\nthis:\n  complex_of_real (- 2 * pi) * \\<i> *\n  exp (- s * complex_of_real pi * \\<i> / 2) *\n  sum (Res s) {0<..n} -\n  cnj (complex_of_real (- 2 * pi) * \\<i> *\n       exp (- cnj s * complex_of_real pi * \\<i> / 2) *\n       sum (Res (cnj s)) {0<..n}) =\n  complex_of_real (- 2 * pi) * \\<i> *\n  (exp (- s * complex_of_real pi * \\<i> / 2) * sum (Res s) {0<..n} +\n   exp (s * complex_of_real pi * \\<i> / 2) *\n   (\\<Sum>k\\<in>{0<..n}. cnj (Res (cnj s) k)))\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have \"(\\<Sum>k\\<in>{0<..n}. Res s k) = \n                 (2 * pi) powr (-s) * (\\<Sum>k\\<in>{0<..n}. exp (2 * k * pi * a * \\<i>) * k powr (-s))\"\n      (is \"_ = ?S1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (Res s) {0<..n} =\n    complex_of_real (2 * pi) powr - s *\n    (\\<Sum>k\\<in>{0<..n}.\n       exp (complex_of_real (real (2 * k) * pi * a) * \\<i>) *\n       of_nat k powr - s)", "by (simp add: Res_def powr_times_real algebra_simps sum_distrib_left)"], ["proof (state)\nthis:\n  sum (Res s) {0<..n} =\n  complex_of_real (2 * pi) powr - s *\n  (\\<Sum>k\\<in>{0<..n}.\n     exp (complex_of_real (real (2 * k) * pi * a) * \\<i>) *\n     of_nat k powr - s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "also"], ["proof (state)\nthis:\n  sum (Res s) {0<..n} =\n  complex_of_real (2 * pi) powr - s *\n  (\\<Sum>k\\<in>{0<..n}.\n     exp (complex_of_real (real (2 * k) * pi * a) * \\<i>) *\n     of_nat k powr - s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have \"(\\<Sum>k\\<in>{0<..n}. cnj (Res (cnj s) k)) =\n                 (2 * pi) powr (-s) * (\\<Sum>k\\<in>{0<..n}. exp (-2 * k * pi * a * \\<i>) * k powr (-s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{0<..n}. cnj (Res (cnj s) k)) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<Sum>k\\<in>{0<..n}.\n       exp (complex_of_real (real_of_int (- 2 * int k) * pi * a) * \\<i>) *\n       of_nat k powr - s)", "by (simp add: Res_def cnj_powr powr_times_real algebra_simps exp_cnj sum_distrib_left)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{0<..n}. cnj (Res (cnj s) k)) =\n  complex_of_real (2 * pi) powr - s *\n  (\\<Sum>k\\<in>{0<..n}.\n     exp (complex_of_real (real_of_int (- 2 * int k) * pi * a) * \\<i>) *\n     of_nat k powr - s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{0<..n}. cnj (Res (cnj s) k)) =\n  complex_of_real (2 * pi) powr - s *\n  (\\<Sum>k\\<in>{0<..n}.\n     exp (complex_of_real (real_of_int (- 2 * int k) * pi * a) * \\<i>) *\n     of_nat k powr - s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have \"exp (-s * pi * \\<i> / 2) * ?S1 + exp (s * pi * \\<i> / 2) * \\<dots> =\n                 (2 * pi) powr (-s) *\n                   (exp (-s * pi * \\<i> / 2) * (\\<Sum>k\\<in>{0<..n}. exp (2 * k * pi * a * \\<i>) * k powr (-s)) +\n                    exp (s * pi * \\<i> / 2) * (\\<Sum>k\\<in>{0<..n}. exp (-2 * k * pi * a * \\<i>) * k powr (-s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (- s * complex_of_real pi * \\<i> / 2) *\n    (complex_of_real (2 * pi) powr - s *\n     (\\<Sum>k\\<in>{0<..n}.\n        exp (complex_of_real (real (2 * k) * pi * a) * \\<i>) *\n        of_nat k powr - s)) +\n    exp (s * complex_of_real pi * \\<i> / 2) *\n    (complex_of_real (2 * pi) powr - s *\n     (\\<Sum>k\\<in>{0<..n}.\n        exp (complex_of_real (real_of_int (- 2 * int k) * pi * a) * \\<i>) *\n        of_nat k powr - s)) =\n    complex_of_real (2 * pi) powr - s *\n    (exp (- s * complex_of_real pi * \\<i> / 2) *\n     (\\<Sum>k\\<in>{0<..n}.\n        exp (complex_of_real (real (2 * k) * pi * a) * \\<i>) *\n        of_nat k powr - s) +\n     exp (s * complex_of_real pi * \\<i> / 2) *\n     (\\<Sum>k\\<in>{0<..n}.\n        exp (complex_of_real (real_of_int (- 2 * int k) * pi * a) * \\<i>) *\n        of_nat k powr - s))", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  exp (- s * complex_of_real pi * \\<i> / 2) *\n  (complex_of_real (2 * pi) powr - s *\n   (\\<Sum>k\\<in>{0<..n}.\n      exp (complex_of_real (real (2 * k) * pi * a) * \\<i>) *\n      of_nat k powr - s)) +\n  exp (s * complex_of_real pi * \\<i> / 2) *\n  (complex_of_real (2 * pi) powr - s *\n   (\\<Sum>k\\<in>{0<..n}.\n      exp (complex_of_real (real_of_int (- 2 * int k) * pi * a) * \\<i>) *\n      of_nat k powr - s)) =\n  complex_of_real (2 * pi) powr - s *\n  (exp (- s * complex_of_real pi * \\<i> / 2) *\n   (\\<Sum>k\\<in>{0<..n}.\n      exp (complex_of_real (real (2 * k) * pi * a) * \\<i>) *\n      of_nat k powr - s) +\n   exp (s * complex_of_real pi * \\<i> / 2) *\n   (\\<Sum>k\\<in>{0<..n}.\n      exp (complex_of_real (real_of_int (- 2 * int k) * pi * a) * \\<i>) *\n      of_nat k powr - s))\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "also"], ["proof (state)\nthis:\n  exp (- s * complex_of_real pi * \\<i> / 2) *\n  (complex_of_real (2 * pi) powr - s *\n   (\\<Sum>k\\<in>{0<..n}.\n      exp (complex_of_real (real (2 * k) * pi * a) * \\<i>) *\n      of_nat k powr - s)) +\n  exp (s * complex_of_real pi * \\<i> / 2) *\n  (complex_of_real (2 * pi) powr - s *\n   (\\<Sum>k\\<in>{0<..n}.\n      exp (complex_of_real (real_of_int (- 2 * int k) * pi * a) * \\<i>) *\n      of_nat k powr - s)) =\n  complex_of_real (2 * pi) powr - s *\n  (exp (- s * complex_of_real pi * \\<i> / 2) *\n   (\\<Sum>k\\<in>{0<..n}.\n      exp (complex_of_real (real (2 * k) * pi * a) * \\<i>) *\n      of_nat k powr - s) +\n   exp (s * complex_of_real pi * \\<i> / 2) *\n   (\\<Sum>k\\<in>{0<..n}.\n      exp (complex_of_real (real_of_int (- 2 * int k) * pi * a) * \\<i>) *\n      of_nat k powr - s))\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have 1: \"integral {r..R n} (g s) = I n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {r..R n} (g s) = I n", "unfolding I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {r..R n} (g s) =\n    complex_set_lebesgue_integral lborel {r..R n} (g s)", "by (intro set_borel_integral_eq_integral(2) [symmetric] integrable) auto"], ["proof (state)\nthis:\n  integral {r..R n} (g s) = I n\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have 2: \"cnj (integral {r..R n} (g (cnj s))) = integral {r..R n} (g s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj (integral {r..R n} (g (cnj s))) = integral {r..R n} (g s)", "using r"], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. cnj (integral {r..R n} (g (cnj s))) = integral {r..R n} (g s)", "unfolding integral_cnj"], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2}\n\ngoal (1 subgoal):\n 1. integral {r..R n} (\\<lambda>x. cnj (g (cnj s) x)) =\n    integral {r..R n} (g s)", "by (intro integral_cong) (auto simp: g_def cnj_powr)"], ["proof (state)\nthis:\n  cnj (integral {r..R n} (g (cnj s))) = integral {r..R n} (g s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have 3: \"integral {r..R n} (\\<lambda>x. exp (x * a) * cnj (x powr - cnj s) / (1 - exp x)) =\n             integral {r..R n} (\\<lambda>x. exp (x * a) * of_real x powr - s / (1 - exp x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {r..R n}\n     (\\<lambda>x.\n         complex_of_real (exp (x * a)) *\n         cnj (complex_of_real x powr - cnj s) /\n         complex_of_real (1 - exp x)) =\n    integral {r..R n}\n     (\\<lambda>x.\n         complex_of_real (exp (x * a)) * complex_of_real x powr - s /\n         complex_of_real (1 - exp x))", "unfolding I_def g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {r..R n}\n     (\\<lambda>x.\n         complex_of_real (exp (x * a)) *\n         cnj (complex_of_real x powr - cnj s) /\n         complex_of_real (1 - exp x)) =\n    integral {r..R n}\n     (\\<lambda>x.\n         complex_of_real (exp (x * a)) * complex_of_real x powr - s /\n         complex_of_real (1 - exp x))", "using r R[of n]"], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2}\n  pi \\<le> R n\n\ngoal (1 subgoal):\n 1. integral {r..R n}\n     (\\<lambda>x.\n         complex_of_real (exp (x * a)) *\n         cnj (complex_of_real x powr - cnj s) /\n         complex_of_real (1 - exp x)) =\n    integral {r..R n}\n     (\\<lambda>x.\n         complex_of_real (exp (x * a)) * complex_of_real x powr - s /\n         complex_of_real (1 - exp x))", "by (intro integral_cong; force simp: cnj_powr)+"], ["proof (state)\nthis:\n  integral {r..R n}\n   (\\<lambda>x.\n       complex_of_real (exp (x * a)) *\n       cnj (complex_of_real x powr - cnj s) /\n       complex_of_real (1 - exp x)) =\n  integral {r..R n}\n   (\\<lambda>x.\n       complex_of_real (exp (x * a)) * complex_of_real x powr - s /\n       complex_of_real (1 - exp x))\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "from 1 2 3"], ["proof (chain)\npicking this:\n  integral {r..R n} (g s) = I n\n  cnj (integral {r..R n} (g (cnj s))) = integral {r..R n} (g s)\n  integral {r..R n}\n   (\\<lambda>x.\n       complex_of_real (exp (x * a)) *\n       cnj (complex_of_real x powr - cnj s) /\n       complex_of_real (1 - exp x)) =\n  integral {r..R n}\n   (\\<lambda>x.\n       complex_of_real (exp (x * a)) * complex_of_real x powr - s /\n       complex_of_real (1 - exp x))", "have \"?lhs = (exp (-\\<i> * s * pi) - exp (\\<i> * s * pi)) * I n + bigc n + smallc\""], ["proof (prove)\nusing this:\n  integral {r..R n} (g s) = I n\n  cnj (integral {r..R n} (g (cnj s))) = integral {r..R n} (g s)\n  integral {r..R n}\n   (\\<lambda>x.\n       complex_of_real (exp (x * a)) *\n       cnj (complex_of_real x powr - cnj s) /\n       complex_of_real (1 - exp x)) =\n  integral {r..R n}\n   (\\<lambda>x.\n       complex_of_real (exp (x * a)) * complex_of_real x powr - s /\n       complex_of_real (1 - exp x))\n\ngoal (1 subgoal):\n 1. exp (- \\<i> * complex_of_real pi * s) * integral {r..R n} (g s) +\n    integral {r..R n}\n     (\\<lambda>x.\n         complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n         complex_of_real (1 - exp x)) +\n    contour_integral (part_circlepath 0 (R n) 0 pi) (f s) +\n    contour_integral (part_circlepath 0 r pi 0) (f s) -\n    cnj (exp (- \\<i> * complex_of_real pi * cnj s) *\n         integral {r..R n} (g (cnj s)) +\n         integral {r..R n}\n          (\\<lambda>x.\n              complex_of_real x powr - cnj s *\n              complex_of_real (exp (a * x)) /\n              complex_of_real (1 - exp x)) +\n         contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s)) +\n         contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) =\n    (exp (- \\<i> * s * complex_of_real pi) -\n     exp (\\<i> * s * complex_of_real pi)) *\n    I n +\n    bigc n +\n    smallc", "by (simp add: integral_cnj cnj_powr algebra_simps exp_cnj\n                    bigc_def smallc_def g_def)"], ["proof (state)\nthis:\n  exp (- \\<i> * complex_of_real pi * s) * integral {r..R n} (g s) +\n  integral {r..R n}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n       complex_of_real (1 - exp x)) +\n  contour_integral (part_circlepath 0 (R n) 0 pi) (f s) +\n  contour_integral (part_circlepath 0 r pi 0) (f s) -\n  cnj (exp (- \\<i> * complex_of_real pi * cnj s) *\n       integral {r..R n} (g (cnj s)) +\n       integral {r..R n}\n        (\\<lambda>x.\n            complex_of_real x powr - cnj s * complex_of_real (exp (a * x)) /\n            complex_of_real (1 - exp x)) +\n       contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s)) +\n       contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) =\n  (exp (- \\<i> * s * complex_of_real pi) -\n   exp (\\<i> * s * complex_of_real pi)) *\n  I n +\n  bigc n +\n  smallc\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "also"], ["proof (state)\nthis:\n  exp (- \\<i> * complex_of_real pi * s) * integral {r..R n} (g s) +\n  integral {r..R n}\n   (\\<lambda>x.\n       complex_of_real x powr - s * complex_of_real (exp (a * x)) /\n       complex_of_real (1 - exp x)) +\n  contour_integral (part_circlepath 0 (R n) 0 pi) (f s) +\n  contour_integral (part_circlepath 0 r pi 0) (f s) -\n  cnj (exp (- \\<i> * complex_of_real pi * cnj s) *\n       integral {r..R n} (g (cnj s)) +\n       integral {r..R n}\n        (\\<lambda>x.\n            complex_of_real x powr - cnj s * complex_of_real (exp (a * x)) /\n            complex_of_real (1 - exp x)) +\n       contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s)) +\n       contour_integral (part_circlepath 0 r pi 0) (f (cnj s))) =\n  (exp (- \\<i> * s * complex_of_real pi) -\n   exp (\\<i> * s * complex_of_real pi)) *\n  I n +\n  bigc n +\n  smallc\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have \"exp (-\\<i> * s * pi) - exp (\\<i> * s * pi) = -2 * \\<i> * sin (s * pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (- \\<i> * s * complex_of_real pi) -\n    exp (\\<i> * s * complex_of_real pi) =\n    - 2 * \\<i> * sin (s * complex_of_real pi)", "by (simp add: sin_exp_eq' algebra_simps)"], ["proof (state)\nthis:\n  exp (- \\<i> * s * complex_of_real pi) -\n  exp (\\<i> * s * complex_of_real pi) =\n  - 2 * \\<i> * sin (s * complex_of_real pi)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "finally"], ["proof (chain)\npicking this:\n  - 2 * \\<i> * sin (s * complex_of_real pi) * I n + bigc n + smallc =\n  complex_of_real (- 2 * pi) * \\<i> *\n  (complex_of_real (2 * pi) powr - s *\n   (exp (- s * complex_of_real pi * \\<i> / 2) *\n    (\\<Sum>k\\<in>{0<..n}.\n       exp (complex_of_real (real (2 * k) * pi * a) * \\<i>) *\n       of_nat k powr - s) +\n    exp (s * complex_of_real pi * \\<i> / 2) *\n    (\\<Sum>k\\<in>{0<..n}.\n       exp (complex_of_real (real_of_int (- 2 * int k) * pi * a) * \\<i>) *\n       of_nat k powr - s)))", "have \"(- 2 * \\<i> * sin (s * pi) * I n + smallc) + bigc n = \n                    -2 * \\<i> * pi * (2 * pi) powr (-s) * (F1 n + F2 n)\""], ["proof (prove)\nusing this:\n  - 2 * \\<i> * sin (s * complex_of_real pi) * I n + bigc n + smallc =\n  complex_of_real (- 2 * pi) * \\<i> *\n  (complex_of_real (2 * pi) powr - s *\n   (exp (- s * complex_of_real pi * \\<i> / 2) *\n    (\\<Sum>k\\<in>{0<..n}.\n       exp (complex_of_real (real (2 * k) * pi * a) * \\<i>) *\n       of_nat k powr - s) +\n    exp (s * complex_of_real pi * \\<i> / 2) *\n    (\\<Sum>k\\<in>{0<..n}.\n       exp (complex_of_real (real_of_int (- 2 * int k) * pi * a) * \\<i>) *\n       of_nat k powr - s)))\n\ngoal (1 subgoal):\n 1. - 2 * \\<i> * sin (s * complex_of_real pi) * I n + smallc + bigc n =\n    - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n    (F1 n + F2 n)", "by (simp add: F1_F2_def algebra_simps)"], ["proof (state)\nthis:\n  - 2 * \\<i> * sin (s * complex_of_real pi) * I n + smallc + bigc n =\n  - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n  (F1 n + F2 n)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "}"], ["proof (state)\nthis:\n  - 2 * \\<i> * sin (s * complex_of_real pi) * I ?n2 + smallc + bigc ?n2 =\n  - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n  (F1 ?n2 + F2 ?n2)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "note eq = this"], ["proof (state)\nthis:\n  - 2 * \\<i> * sin (s * complex_of_real pi) * I ?n2 + smallc + bigc ?n2 =\n  - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n  (F1 ?n2 + F2 ?n2)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have \"(\\<lambda>n. - 2 * \\<i> * sin (s * pi) * I n + smallc + bigc n) \\<longlonglongrightarrow>\n           (-2 * \\<i> * sin (s * pi)) * (CLBINT x:{r..}. g s x) + smallc + 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - 2 * \\<i> * sin (s * complex_of_real pi) * I n + smallc + bigc n)\n    \\<longlonglongrightarrow> - 2 * \\<i> * sin (s * complex_of_real pi) *\n                              complex_set_lebesgue_integral lborel {r..}\n                               (g s) +\n                              smallc +\n                              0", "unfolding I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - 2 * \\<i> * sin (s * complex_of_real pi) *\n        complex_set_lebesgue_integral lborel {r..R n} (g s) +\n        smallc +\n        bigc n)\n    \\<longlonglongrightarrow> - 2 * \\<i> * sin (s * complex_of_real pi) *\n                              complex_set_lebesgue_integral lborel {r..}\n                               (g s) +\n                              smallc +\n                              0", "proof (intro tendsto_intros filterlim_compose[OF tendsto_set_lebesgue_integral_at_top] integrable)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>b. r \\<le> b \\<Longrightarrow> {r..b} \\<in> sets lborel\n 2. {r..} \\<in> sets lborel\n 3. {r..} \\<subseteq> {r..}\n 4. filterlim R at_top sequentially\n 5. bigc \\<longlonglongrightarrow> 0", "show \"filterlim R at_top sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim R at_top sequentially", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM n sequentially. real (2 * n + 1) * pi :> at_top", "by (intro filterlim_at_top_mult_tendsto_pos[OF tendsto_const] pi_gt_zero\n                filterlim_compose[OF filterlim_real_sequentially] filterlim_subseq) \n         (auto simp: strict_mono_Suc_iff)"], ["proof (state)\nthis:\n  filterlim R at_top sequentially\n\ngoal (4 subgoals):\n 1. \\<And>b. r \\<le> b \\<Longrightarrow> {r..b} \\<in> sets lborel\n 2. {r..} \\<in> sets lborel\n 3. {r..} \\<subseteq> {r..}\n 4. bigc \\<longlonglongrightarrow> 0", "from hurwitz_formula_bound1[OF pi_gt_zero]"], ["proof (chain)\npicking this:\n  (\\<And>C.\n      \\<lbrakk>0 \\<le> C;\n       \\<And>z.\n          z \\<notin> (\\<Union>n.\n                         ball\n                          (complex_of_real (real_of_int (2 * n) * pi) *\n                           \\<i>)\n                          pi) \\<Longrightarrow>\n          cmod (exp (complex_of_real a * z) / (1 - exp z)) \\<le> C\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "guess C"], ["proof (prove)\nusing this:\n  (\\<And>C.\n      \\<lbrakk>0 \\<le> C;\n       \\<And>z.\n          z \\<notin> (\\<Union>n.\n                         ball\n                          (complex_of_real (real_of_int (2 * n) * pi) *\n                           \\<i>)\n                          pi) \\<Longrightarrow>\n          cmod (exp (complex_of_real a * z) / (1 - exp z)) \\<le> C\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  0 \\<le> C\n  ?z \\<notin> (\\<Union>n.\n                  ball (complex_of_real (real_of_int (2 * n) * pi) * \\<i>)\n                   pi) \\<Longrightarrow>\n  cmod (exp (complex_of_real a * ?z) / (1 - exp ?z)) \\<le> C\n\ngoal (4 subgoals):\n 1. \\<And>b. r \\<le> b \\<Longrightarrow> {r..b} \\<in> sets lborel\n 2. {r..} \\<in> sets lborel\n 3. {r..} \\<subseteq> {r..}\n 4. bigc \\<longlonglongrightarrow> 0", "note C = this"], ["proof (state)\nthis:\n  0 \\<le> C\n  ?z \\<notin> (\\<Union>n.\n                  ball (complex_of_real (real_of_int (2 * n) * pi) * \\<i>)\n                   pi) \\<Longrightarrow>\n  cmod (exp (complex_of_real a * ?z) / (1 - exp ?z)) \\<le> C\n\ngoal (4 subgoals):\n 1. \\<And>b. r \\<le> b \\<Longrightarrow> {r..b} \\<in> sets lborel\n 2. {r..} \\<in> sets lborel\n 3. {r..} \\<subseteq> {r..}\n 4. bigc \\<longlonglongrightarrow> 0", "define D where \"D = C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>)\""], ["proof (state)\nthis:\n  D = C * exp (3 / 2 * pi * \\<bar>Im s\\<bar>)\n\ngoal (4 subgoals):\n 1. \\<And>b. r \\<le> b \\<Longrightarrow> {r..b} \\<in> sets lborel\n 2. {r..} \\<in> sets lborel\n 3. {r..} \\<subseteq> {r..}\n 4. bigc \\<longlonglongrightarrow> 0", "from \\<open>C \\<ge> 0\\<close>"], ["proof (chain)\npicking this:\n  0 \\<le> C", "have \"D \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 0 \\<le> D", "by (simp add: D_def)"], ["proof (state)\nthis:\n  0 \\<le> D\n\ngoal (4 subgoals):\n 1. \\<And>b. r \\<le> b \\<Longrightarrow> {r..b} \\<in> sets lborel\n 2. {r..} \\<in> sets lborel\n 3. {r..} \\<subseteq> {r..}\n 4. bigc \\<longlonglongrightarrow> 0", "show \"bigc \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bigc \\<longlonglongrightarrow> 0", "proof (rule Lim_null_comparison[OF always_eventually[OF allI]])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. cmod (bigc x) \\<le> ?g x\n 2. ?g \\<longlonglongrightarrow> 0", "fix n :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. cmod (bigc x) \\<le> ?g x\n 2. ?g \\<longlonglongrightarrow> 0", "have bound: \"norm (f s' z) \\<le> D * R n powr (-Re s')\"\n        if z: \"z \\<in> sphere 0 (R n)\" \"Re s' = Re s\" \"\\<bar>Im s'\\<bar> = \\<bar>Im s\\<bar>\" for z s'"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (f s' z) \\<le> D * R n powr - Re s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (f s' z) \\<le> D * R n powr - Re s'", "from z and r R[of n]"], ["proof (chain)\npicking this:\n  z \\<in> sphere 0 (R n)\n  Re s' = Re s\n  \\<bar>Im s'\\<bar> = \\<bar>Im s\\<bar>\n  r \\<in> {0<..<2}\n  pi \\<le> R n", "have [simp]: \"z \\<noteq> 0\""], ["proof (prove)\nusing this:\n  z \\<in> sphere 0 (R n)\n  Re s' = Re s\n  \\<bar>Im s'\\<bar> = \\<bar>Im s\\<bar>\n  r \\<in> {0<..<2}\n  pi \\<le> R n\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cmod (f s' z) \\<le> D * R n powr - Re s'", "have not_in_ball: \"z \\<notin> ball (2 * m * pi * \\<i>) pi\" for m :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<notin> ball (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) pi", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<notin> ball (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) pi", "have \"dist z (2 * m * pi * \\<i>) \\<ge> \\<bar>dist z 0 - dist 0 (2 * m * pi * \\<i>)\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>dist z 0 -\n          dist 0 (complex_of_real (real_of_int (2 * m) * pi) * \\<i>)\\<bar>\n    \\<le> dist z (complex_of_real (real_of_int (2 * m) * pi) * \\<i>)", "by (rule abs_dist_diff_le)"], ["proof (state)\nthis:\n  \\<bar>dist z 0 -\n        dist 0 (complex_of_real (real_of_int (2 * m) * pi) * \\<i>)\\<bar>\n  \\<le> dist z (complex_of_real (real_of_int (2 * m) * pi) * \\<i>)\n\ngoal (1 subgoal):\n 1. z \\<notin> ball (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) pi", "also"], ["proof (state)\nthis:\n  \\<bar>dist z 0 -\n        dist 0 (complex_of_real (real_of_int (2 * m) * pi) * \\<i>)\\<bar>\n  \\<le> dist z (complex_of_real (real_of_int (2 * m) * pi) * \\<i>)\n\ngoal (1 subgoal):\n 1. z \\<notin> ball (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) pi", "have \"dist 0 (2 * m * pi * \\<i>) = 2 * \\<bar>m\\<bar> * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist 0 (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) =\n    real_of_int (2 * \\<bar>m\\<bar>) * pi", "by (simp add: norm_mult)"], ["proof (state)\nthis:\n  dist 0 (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) =\n  real_of_int (2 * \\<bar>m\\<bar>) * pi\n\ngoal (1 subgoal):\n 1. z \\<notin> ball (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) pi", "also"], ["proof (state)\nthis:\n  dist 0 (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) =\n  real_of_int (2 * \\<bar>m\\<bar>) * pi\n\ngoal (1 subgoal):\n 1. z \\<notin> ball (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) pi", "from z"], ["proof (chain)\npicking this:\n  z \\<in> sphere 0 (R n)\n  Re s' = Re s\n  \\<bar>Im s'\\<bar> = \\<bar>Im s\\<bar>", "have \"dist z 0 = R n\""], ["proof (prove)\nusing this:\n  z \\<in> sphere 0 (R n)\n  Re s' = Re s\n  \\<bar>Im s'\\<bar> = \\<bar>Im s\\<bar>\n\ngoal (1 subgoal):\n 1. dist z 0 = R n", "by simp"], ["proof (state)\nthis:\n  dist z 0 = R n\n\ngoal (1 subgoal):\n 1. z \\<notin> ball (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) pi", "also"], ["proof (state)\nthis:\n  dist z 0 = R n\n\ngoal (1 subgoal):\n 1. z \\<notin> ball (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) pi", "have \"R n - 2 * \\<bar>m\\<bar> * pi = (int (2 * n + 1) - 2 * \\<bar>m\\<bar>) * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R n - real_of_int (2 * \\<bar>m\\<bar>) * pi =\n    real_of_int (int (2 * n + 1) - 2 * \\<bar>m\\<bar>) * pi", "by (simp add: R_def algebra_simps)"], ["proof (state)\nthis:\n  R n - real_of_int (2 * \\<bar>m\\<bar>) * pi =\n  real_of_int (int (2 * n + 1) - 2 * \\<bar>m\\<bar>) * pi\n\ngoal (1 subgoal):\n 1. z \\<notin> ball (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) pi", "also"], ["proof (state)\nthis:\n  R n - real_of_int (2 * \\<bar>m\\<bar>) * pi =\n  real_of_int (int (2 * n + 1) - 2 * \\<bar>m\\<bar>) * pi\n\ngoal (1 subgoal):\n 1. z \\<notin> ball (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) pi", "have \"\\<bar>\\<dots>\\<bar> = \\<bar>int (2 * n + 1) - 2 * \\<bar>m\\<bar>\\<bar> * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>real_of_int (int (2 * n + 1) - 2 * \\<bar>m\\<bar>) * pi\\<bar> =\n    real_of_int \\<bar>int (2 * n + 1) - 2 * \\<bar>m\\<bar>\\<bar> * pi", "by (subst abs_mult) simp_all"], ["proof (state)\nthis:\n  \\<bar>real_of_int (int (2 * n + 1) - 2 * \\<bar>m\\<bar>) * pi\\<bar> =\n  real_of_int \\<bar>int (2 * n + 1) - 2 * \\<bar>m\\<bar>\\<bar> * pi\n\ngoal (1 subgoal):\n 1. z \\<notin> ball (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) pi", "also"], ["proof (state)\nthis:\n  \\<bar>real_of_int (int (2 * n + 1) - 2 * \\<bar>m\\<bar>) * pi\\<bar> =\n  real_of_int \\<bar>int (2 * n + 1) - 2 * \\<bar>m\\<bar>\\<bar> * pi\n\ngoal (1 subgoal):\n 1. z \\<notin> ball (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) pi", "have \"\\<bar>int (2 * n + 1) - 2 * \\<bar>m\\<bar>\\<bar> \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> \\<bar>int (2 * n + 1) - 2 * \\<bar>m\\<bar>\\<bar>", "by presburger"], ["proof (state)\nthis:\n  1 \\<le> \\<bar>int (2 * n + 1) - 2 * \\<bar>m\\<bar>\\<bar>\n\ngoal (1 subgoal):\n 1. z \\<notin> ball (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) pi", "hence \"\\<dots> * pi \\<ge> 1 * pi\""], ["proof (prove)\nusing this:\n  1 \\<le> \\<bar>int (2 * n + 1) - 2 * \\<bar>m\\<bar>\\<bar>\n\ngoal (1 subgoal):\n 1. 1 * pi\n    \\<le> real_of_int \\<bar>int (2 * n + 1) - 2 * \\<bar>m\\<bar>\\<bar> * pi", "by (intro mult_right_mono) auto"], ["proof (state)\nthis:\n  1 * pi\n  \\<le> real_of_int \\<bar>int (2 * n + 1) - 2 * \\<bar>m\\<bar>\\<bar> * pi\n\ngoal (1 subgoal):\n 1. z \\<notin> ball (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) pi", "finally"], ["proof (chain)\npicking this:\n  1 * pi \\<le> dist z (complex_of_real (real_of_int (2 * m) * pi) * \\<i>)", "show ?thesis"], ["proof (prove)\nusing this:\n  1 * pi \\<le> dist z (complex_of_real (real_of_int (2 * m) * pi) * \\<i>)\n\ngoal (1 subgoal):\n 1. z \\<notin> ball (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) pi", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  z \\<notin> ball (complex_of_real (real_of_int (2 * m) * pi) * \\<i>) pi\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<notin> ball (complex_of_real (real_of_int (2 * ?m) * pi) * \\<i>) pi\n\ngoal (1 subgoal):\n 1. cmod (f s' z) \\<le> D * R n powr - Re s'", "have \"norm (f s' z) = norm (exp (-Ln' z * s')) * norm (exp (a * z) / (1 - exp z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (f s' z) =\n    cmod (exp (- Ln' z * s')) *\n    cmod (exp (complex_of_real a * z) / (1 - exp z))", "by (simp add: f_def exp_diff norm_mult norm_divide mult_ac exp_minus norm_inverse\n                        divide_simps del: norm_exp_eq_Re)"], ["proof (state)\nthis:\n  cmod (f s' z) =\n  cmod (exp (- Ln' z * s')) *\n  cmod (exp (complex_of_real a * z) / (1 - exp z))\n\ngoal (1 subgoal):\n 1. cmod (f s' z) \\<le> D * R n powr - Re s'", "also"], ["proof (state)\nthis:\n  cmod (f s' z) =\n  cmod (exp (- Ln' z * s')) *\n  cmod (exp (complex_of_real a * z) / (1 - exp z))\n\ngoal (1 subgoal):\n 1. cmod (f s' z) \\<le> D * R n powr - Re s'", "have \"\\<dots> \\<le> norm (exp (-Ln' z * s')) * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (exp (- Ln' z * s')) *\n    cmod (exp (complex_of_real a * z) / (1 - exp z))\n    \\<le> cmod (exp (- Ln' z * s')) * C", "using not_in_ball"], ["proof (prove)\nusing this:\n  z \\<notin> ball (complex_of_real (real_of_int (2 * ?m) * pi) * \\<i>) pi\n\ngoal (1 subgoal):\n 1. cmod (exp (- Ln' z * s')) *\n    cmod (exp (complex_of_real a * z) / (1 - exp z))\n    \\<le> cmod (exp (- Ln' z * s')) * C", "by (intro mult_left_mono C) auto"], ["proof (state)\nthis:\n  cmod (exp (- Ln' z * s')) *\n  cmod (exp (complex_of_real a * z) / (1 - exp z))\n  \\<le> cmod (exp (- Ln' z * s')) * C\n\ngoal (1 subgoal):\n 1. cmod (f s' z) \\<le> D * R n powr - Re s'", "also"], ["proof (state)\nthis:\n  cmod (exp (- Ln' z * s')) *\n  cmod (exp (complex_of_real a * z) / (1 - exp z))\n  \\<le> cmod (exp (- Ln' z * s')) * C\n\ngoal (1 subgoal):\n 1. cmod (f s' z) \\<le> D * R n powr - Re s'", "have \"norm (exp (-Ln' z * s')) = \n                     exp (Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)) / exp (Re s' * ln (R n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (exp (- Ln' z * s')) =\n    exp (Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)) / exp (Re s' * ln (R n))", "using z r R[of n] pi_gt_zero"], ["proof (prove)\nusing this:\n  z \\<in> sphere 0 (R n)\n  Re s' = Re s\n  \\<bar>Im s'\\<bar> = \\<bar>Im s\\<bar>\n  r \\<in> {0<..<2}\n  pi \\<le> R n\n  0 < pi\n\ngoal (1 subgoal):\n 1. cmod (exp (- Ln' z * s')) =\n    exp (Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)) / exp (Re s' * ln (R n))", "by (simp add: Ln'_def norm_mult norm_divide exp_add exp_diff exp_minus\n                        norm_inverse algebra_simps inverse_eq_divide)"], ["proof (state)\nthis:\n  cmod (exp (- Ln' z * s')) =\n  exp (Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)) / exp (Re s' * ln (R n))\n\ngoal (1 subgoal):\n 1. cmod (f s' z) \\<le> D * R n powr - Re s'", "also"], ["proof (state)\nthis:\n  cmod (exp (- Ln' z * s')) =\n  exp (Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)) / exp (Re s' * ln (R n))\n\ngoal (1 subgoal):\n 1. cmod (f s' z) \\<le> D * R n powr - Re s'", "have \"\\<dots> \\<le> exp (3/2 * pi * \\<bar>Im s'\\<bar>) / exp (Re s' * ln (R n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)) / exp (Re s' * ln (R n))\n    \\<le> exp (3 / 2 * pi * \\<bar>Im s'\\<bar>) / exp (Re s' * ln (R n))", "proof (intro divide_right_mono, subst exp_le_cancel_iff)"], ["proof (state)\ngoal (2 subgoals):\n 1. Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)\n    \\<le> 3 / 2 * pi * \\<bar>Im s'\\<bar>\n 2. 0 \\<le> exp (Re s' * ln (R n))", "have \"Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2) \\<le> \\<bar>Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)\n    \\<le> \\<bar>Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)\\<bar>", "by (rule abs_ge_self)"], ["proof (state)\nthis:\n  Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)\n  \\<le> \\<bar>Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)\\<bar>\n\ngoal (2 subgoals):\n 1. Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)\n    \\<le> 3 / 2 * pi * \\<bar>Im s'\\<bar>\n 2. 0 \\<le> exp (Re s' * ln (R n))", "also"], ["proof (state)\nthis:\n  Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)\n  \\<le> \\<bar>Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)\\<bar>\n\ngoal (2 subgoals):\n 1. Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)\n    \\<le> 3 / 2 * pi * \\<bar>Im s'\\<bar>\n 2. 0 \\<le> exp (Re s' * ln (R n))", "have \"\\<dots> \\<le> \\<bar>Im s'\\<bar> * (pi + pi / 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)\\<bar>\n    \\<le> \\<bar>Im s'\\<bar> * (pi + pi / 2)", "unfolding abs_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>Im s'\\<bar> * \\<bar>Im (Ln (- (\\<i> * z))) + pi / 2\\<bar>\n    \\<le> \\<bar>Im s'\\<bar> * (pi + pi / 2)", "using mpi_less_Im_Ln[of \"- (\\<i> * z)\"] Im_Ln_le_pi[of \"- (\\<i> * z)\"]"], ["proof (prove)\nusing this:\n  - (\\<i> * z) \\<noteq> 0 \\<Longrightarrow> - pi < Im (Ln (- (\\<i> * z)))\n  - (\\<i> * z) \\<noteq> 0 \\<Longrightarrow> Im (Ln (- (\\<i> * z))) \\<le> pi\n\ngoal (1 subgoal):\n 1. \\<bar>Im s'\\<bar> * \\<bar>Im (Ln (- (\\<i> * z))) + pi / 2\\<bar>\n    \\<le> \\<bar>Im s'\\<bar> * (pi + pi / 2)", "by (intro mult_left_mono order.trans[OF abs_triangle_ineq] add_mono) auto"], ["proof (state)\nthis:\n  \\<bar>Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)\\<bar>\n  \\<le> \\<bar>Im s'\\<bar> * (pi + pi / 2)\n\ngoal (2 subgoals):\n 1. Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)\n    \\<le> 3 / 2 * pi * \\<bar>Im s'\\<bar>\n 2. 0 \\<le> exp (Re s' * ln (R n))", "finally"], ["proof (chain)\npicking this:\n  Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)\n  \\<le> \\<bar>Im s'\\<bar> * (pi + pi / 2)", "show \"Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2) \\<le> 3/2 * pi * \\<bar>Im s'\\<bar>\""], ["proof (prove)\nusing this:\n  Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)\n  \\<le> \\<bar>Im s'\\<bar> * (pi + pi / 2)\n\ngoal (1 subgoal):\n 1. Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)\n    \\<le> 3 / 2 * pi * \\<bar>Im s'\\<bar>", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)\n  \\<le> 3 / 2 * pi * \\<bar>Im s'\\<bar>\n\ngoal (1 subgoal):\n 1. 0 \\<le> exp (Re s' * ln (R n))", "qed auto"], ["proof (state)\nthis:\n  exp (Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)) / exp (Re s' * ln (R n))\n  \\<le> exp (3 / 2 * pi * \\<bar>Im s'\\<bar>) / exp (Re s' * ln (R n))\n\ngoal (1 subgoal):\n 1. cmod (f s' z) \\<le> D * R n powr - Re s'", "also"], ["proof (state)\nthis:\n  exp (Im s' * (Im (Ln (- (\\<i> * z))) + pi / 2)) / exp (Re s' * ln (R n))\n  \\<le> exp (3 / 2 * pi * \\<bar>Im s'\\<bar>) / exp (Re s' * ln (R n))\n\ngoal (1 subgoal):\n 1. cmod (f s' z) \\<le> D * R n powr - Re s'", "have \"exp (Re s' * ln (R n)) = R n powr Re s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (Re s' * ln (R n)) = R n powr Re s'", "using r R[of n]"], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2}\n  pi \\<le> R n\n\ngoal (1 subgoal):\n 1. exp (Re s' * ln (R n)) = R n powr Re s'", "by (auto simp: powr_def)"], ["proof (state)\nthis:\n  exp (Re s' * ln (R n)) = R n powr Re s'\n\ngoal (1 subgoal):\n 1. cmod (f s' z) \\<le> D * R n powr - Re s'", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> x * C \\<le> y * C) \\<Longrightarrow>\n  cmod (f s' z)\n  \\<le> exp (3 / 2 * pi * \\<bar>Im s'\\<bar>) / R n powr Re s' * C", "show \"norm (f s' z) \\<le> D * R n powr (-Re s')\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> x * C \\<le> y * C) \\<Longrightarrow>\n  cmod (f s' z)\n  \\<le> exp (3 / 2 * pi * \\<bar>Im s'\\<bar>) / R n powr Re s' * C\n\ngoal (1 subgoal):\n 1. cmod (f s' z) \\<le> D * R n powr - Re s'", "using \\<open>C \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> x * C \\<le> y * C) \\<Longrightarrow>\n  cmod (f s' z)\n  \\<le> exp (3 / 2 * pi * \\<bar>Im s'\\<bar>) / R n powr Re s' * C\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. cmod (f s' z) \\<le> D * R n powr - Re s'", "by (simp add:  that D_def powr_minus mult_right_mono mult_left_mono field_simps)"], ["proof (state)\nthis:\n  cmod (f s' z) \\<le> D * R n powr - Re s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?z \\<in> sphere 0 (R n); Re ?s' = Re s;\n   \\<bar>Im ?s'\\<bar> = \\<bar>Im s\\<bar>\\<rbrakk>\n  \\<Longrightarrow> cmod (f ?s' ?z) \\<le> D * R n powr - Re ?s'\n\ngoal (2 subgoals):\n 1. \\<And>x. cmod (bigc x) \\<le> ?g x\n 2. ?g \\<longlonglongrightarrow> 0", "have \"norm (bigc n) \\<le> norm (contour_integral (part_circlepath 0 (R n) 0 pi) (f s)) +\n              norm (cnj (contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s))))\"\n        (is \"_ \\<le> norm ?err1 + norm ?err2\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (bigc n)\n    \\<le> cmod (contour_integral (part_circlepath 0 (R n) 0 pi) (f s)) +\n          cmod\n           (cnj (contour_integral (part_circlepath 0 (R n) 0 pi)\n                  (f (cnj s))))", "unfolding bigc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (contour_integral (part_circlepath 0 (R n) 0 pi) (f s) -\n      cnj (contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s))))\n    \\<le> cmod (contour_integral (part_circlepath 0 (R n) 0 pi) (f s)) +\n          cmod\n           (cnj (contour_integral (part_circlepath 0 (R n) 0 pi)\n                  (f (cnj s))))", "by (rule norm_triangle_ineq4)"], ["proof (state)\nthis:\n  cmod (bigc n)\n  \\<le> cmod (contour_integral (part_circlepath 0 (R n) 0 pi) (f s)) +\n        cmod\n         (cnj (contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s))))\n\ngoal (2 subgoals):\n 1. \\<And>x. cmod (bigc x) \\<le> ?g x\n 2. ?g \\<longlonglongrightarrow> 0", "also"], ["proof (state)\nthis:\n  cmod (bigc n)\n  \\<le> cmod (contour_integral (part_circlepath 0 (R n) 0 pi) (f s)) +\n        cmod\n         (cnj (contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s))))\n\ngoal (2 subgoals):\n 1. \\<And>x. cmod (bigc x) \\<le> ?g x\n 2. ?g \\<longlonglongrightarrow> 0", "have \"norm ?err1 \\<le> D * R n powr (-Re s) * R n * \\<bar>pi - 0\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (contour_integral (part_circlepath 0 (R n) 0 pi) (f s))\n    \\<le> D * R n powr - Re s * R n * \\<bar>pi - 0\\<bar>", "using \\<open>D \\<ge> 0\\<close> and r R[of n] and pi_gt3 and integrable_circle and\n              path_image_part_circlepath_subset[of 0 pi \"R n\" 0] and bound[of _ s]"], ["proof (prove)\nusing this:\n  0 \\<le> D\n  r \\<in> {0<..<2}\n  pi \\<le> R n\n  3 < pi\n  f s contour_integrable_on part_circlepath 0 (R ?n2) 0 pi\n  \\<lbrakk>0 \\<le> pi; 0 \\<le> R n\\<rbrakk>\n  \\<Longrightarrow> path_image (part_circlepath 0 (R n) 0 pi)\n                    \\<subseteq> sphere 0 (R n)\n  \\<lbrakk>?z \\<in> sphere 0 (R n); Re s = Re s;\n   \\<bar>Im s\\<bar> = \\<bar>Im s\\<bar>\\<rbrakk>\n  \\<Longrightarrow> cmod (f s ?z) \\<le> D * R n powr - Re s\n\ngoal (1 subgoal):\n 1. cmod (contour_integral (part_circlepath 0 (R n) 0 pi) (f s))\n    \\<le> D * R n powr - Re s * R n * \\<bar>pi - 0\\<bar>", "by (intro contour_integral_bound_part_circlepath) auto"], ["proof (state)\nthis:\n  cmod (contour_integral (part_circlepath 0 (R n) 0 pi) (f s))\n  \\<le> D * R n powr - Re s * R n * \\<bar>pi - 0\\<bar>\n\ngoal (2 subgoals):\n 1. \\<And>x. cmod (bigc x) \\<le> ?g x\n 2. ?g \\<longlonglongrightarrow> 0", "also"], ["proof (state)\nthis:\n  cmod (contour_integral (part_circlepath 0 (R n) 0 pi) (f s))\n  \\<le> D * R n powr - Re s * R n * \\<bar>pi - 0\\<bar>\n\ngoal (2 subgoals):\n 1. \\<And>x. cmod (bigc x) \\<le> ?g x\n 2. ?g \\<longlonglongrightarrow> 0", "have \"\\<dots> = D * pi * R n powr (1 - Re s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D * R n powr - Re s * R n * \\<bar>pi - 0\\<bar> =\n    D * pi * R n powr (1 - Re s)", "using r R[of n] pi_gt3"], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2}\n  pi \\<le> R n\n  3 < pi\n\ngoal (1 subgoal):\n 1. D * R n powr - Re s * R n * \\<bar>pi - 0\\<bar> =\n    D * pi * R n powr (1 - Re s)", "by (simp add: powr_diff field_simps powr_minus)"], ["proof (state)\nthis:\n  D * R n powr - Re s * R n * \\<bar>pi - 0\\<bar> =\n  D * pi * R n powr (1 - Re s)\n\ngoal (2 subgoals):\n 1. \\<And>x. cmod (bigc x) \\<le> ?g x\n 2. ?g \\<longlonglongrightarrow> 0", "also"], ["proof (state)\nthis:\n  D * R n powr - Re s * R n * \\<bar>pi - 0\\<bar> =\n  D * pi * R n powr (1 - Re s)\n\ngoal (2 subgoals):\n 1. \\<And>x. cmod (bigc x) \\<le> ?g x\n 2. ?g \\<longlonglongrightarrow> 0", "have \"norm ?err2 \\<le> D * R n powr (-Re s) * R n * \\<bar>pi - 0\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (cnj (contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s))))\n    \\<le> D * R n powr - Re s * R n * \\<bar>pi - 0\\<bar>", "unfolding complex_mod_cnj"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s)))\n    \\<le> D * R n powr - Re s * R n * \\<bar>pi - 0\\<bar>", "using \\<open>D \\<ge> 0\\<close> and r R[of n] and pi_gt3 and integrable_circle'[of n] and\n              path_image_part_circlepath_subset[of 0 pi \"R n\" 0] and bound[of _ \"cnj s\"]"], ["proof (prove)\nusing this:\n  0 \\<le> D\n  r \\<in> {0<..<2}\n  pi \\<le> R n\n  3 < pi\n  f (cnj s) contour_integrable_on part_circlepath 0 (R n) 0 pi\n  \\<lbrakk>0 \\<le> pi; 0 \\<le> R n\\<rbrakk>\n  \\<Longrightarrow> path_image (part_circlepath 0 (R n) 0 pi)\n                    \\<subseteq> sphere 0 (R n)\n  \\<lbrakk>?z \\<in> sphere 0 (R n); Re (cnj s) = Re s;\n   \\<bar>Im (cnj s)\\<bar> = \\<bar>Im s\\<bar>\\<rbrakk>\n  \\<Longrightarrow> cmod (f (cnj s) ?z) \\<le> D * R n powr - Re (cnj s)\n\ngoal (1 subgoal):\n 1. cmod (contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s)))\n    \\<le> D * R n powr - Re s * R n * \\<bar>pi - 0\\<bar>", "by (intro contour_integral_bound_part_circlepath) auto"], ["proof (state)\nthis:\n  cmod (cnj (contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s))))\n  \\<le> D * R n powr - Re s * R n * \\<bar>pi - 0\\<bar>\n\ngoal (2 subgoals):\n 1. \\<And>x. cmod (bigc x) \\<le> ?g x\n 2. ?g \\<longlonglongrightarrow> 0", "also"], ["proof (state)\nthis:\n  cmod (cnj (contour_integral (part_circlepath 0 (R n) 0 pi) (f (cnj s))))\n  \\<le> D * R n powr - Re s * R n * \\<bar>pi - 0\\<bar>\n\ngoal (2 subgoals):\n 1. \\<And>x. cmod (bigc x) \\<le> ?g x\n 2. ?g \\<longlonglongrightarrow> 0", "have \"\\<dots> = D * pi * R n powr (1 - Re s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D * R n powr - Re s * R n * \\<bar>pi - 0\\<bar> =\n    D * pi * R n powr (1 - Re s)", "using r R[of n] pi_gt3"], ["proof (prove)\nusing this:\n  r \\<in> {0<..<2}\n  pi \\<le> R n\n  3 < pi\n\ngoal (1 subgoal):\n 1. D * R n powr - Re s * R n * \\<bar>pi - 0\\<bar> =\n    D * pi * R n powr (1 - Re s)", "by (simp add: powr_diff field_simps powr_minus)"], ["proof (state)\nthis:\n  D * R n powr - Re s * R n * \\<bar>pi - 0\\<bar> =\n  D * pi * R n powr (1 - Re s)\n\ngoal (2 subgoals):\n 1. \\<And>x. cmod (bigc x) \\<le> ?g x\n 2. ?g \\<longlonglongrightarrow> 0", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x y.\n              x \\<le> y \\<Longrightarrow>\n              x +\n              cmod\n               (cnj (contour_integral (part_circlepath 0 (R n) 0 pi)\n                      (f (cnj s))))\n              \\<le> y +\n                    cmod\n                     (cnj (contour_integral (part_circlepath 0 (R n) 0 pi)\n                            (f (cnj s))));\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      D * pi * R n powr (1 - Re s) + x\n      \\<le> D * pi * R n powr (1 - Re s) + y\\<rbrakk>\n  \\<Longrightarrow> cmod (bigc n)\n                    \\<le> D * pi * R n powr (1 - Re s) +\n                          D * pi * R n powr (1 - Re s)", "show \"norm (bigc n) \\<le> 2 * D * pi * R n powr (1 - Re s)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y.\n              x \\<le> y \\<Longrightarrow>\n              x +\n              cmod\n               (cnj (contour_integral (part_circlepath 0 (R n) 0 pi)\n                      (f (cnj s))))\n              \\<le> y +\n                    cmod\n                     (cnj (contour_integral (part_circlepath 0 (R n) 0 pi)\n                            (f (cnj s))));\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      D * pi * R n powr (1 - Re s) + x\n      \\<le> D * pi * R n powr (1 - Re s) + y\\<rbrakk>\n  \\<Longrightarrow> cmod (bigc n)\n                    \\<le> D * pi * R n powr (1 - Re s) +\n                          D * pi * R n powr (1 - Re s)\n\ngoal (1 subgoal):\n 1. cmod (bigc n) \\<le> 2 * D * pi * R n powr (1 - Re s)", "by simp"], ["proof (state)\nthis:\n  cmod (bigc n) \\<le> 2 * D * pi * R n powr (1 - Re s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 2 * D * pi * R x powr (1 - Re s))\n    \\<longlonglongrightarrow> 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. 2 * D * pi * R x powr (1 - Re s))\n    \\<longlonglongrightarrow> 0", "have \"filterlim R at_top at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim R at_top sequentially", "by fact"], ["proof (state)\nthis:\n  filterlim R at_top sequentially\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 2 * D * pi * R x powr (1 - Re s))\n    \\<longlonglongrightarrow> 0", "hence \"(\\<lambda>x. 2 * D * pi * R x powr (1 - Re s)) \\<longlonglongrightarrow> 2 * D * pi * 0\""], ["proof (prove)\nusing this:\n  filterlim R at_top sequentially\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 2 * D * pi * R x powr (1 - Re s))\n    \\<longlonglongrightarrow> 2 * D * pi * 0", "using s"], ["proof (prove)\nusing this:\n  filterlim R at_top sequentially\n  1 < Re s\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 2 * D * pi * R x powr (1 - Re s))\n    \\<longlonglongrightarrow> 2 * D * pi * 0", "unfolding R_def"], ["proof (prove)\nusing this:\n  LIM n sequentially. real (2 * n + 1) * pi :> at_top\n  1 < Re s\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 2 * D * pi * (real (2 * x + 1) * pi) powr (1 - Re s))\n    \\<longlonglongrightarrow> 2 * D * pi * 0", "by (intro tendsto_intros tendsto_neg_powr) auto"], ["proof (state)\nthis:\n  (\\<lambda>x. 2 * D * pi * R x powr (1 - Re s))\n  \\<longlonglongrightarrow> 2 * D * pi * 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 2 * D * pi * R x powr (1 - Re s))\n    \\<longlonglongrightarrow> 0", "thus \"(\\<lambda>x. 2 * D * pi * R x powr (1 - Re s)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. 2 * D * pi * R x powr (1 - Re s))\n  \\<longlonglongrightarrow> 2 * D * pi * 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 2 * D * pi * R x powr (1 - Re s))\n    \\<longlonglongrightarrow> 0", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. 2 * D * pi * R x powr (1 - Re s)) \\<longlonglongrightarrow> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bigc \\<longlonglongrightarrow> 0\n\ngoal (3 subgoals):\n 1. \\<And>b. r \\<le> b \\<Longrightarrow> {r..b} \\<in> sets lborel\n 2. {r..} \\<in> sets lborel\n 3. {r..} \\<subseteq> {r..}", "qed auto"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      - 2 * \\<i> * sin (s * complex_of_real pi) * I n + smallc + bigc n)\n  \\<longlonglongrightarrow> - 2 * \\<i> * sin (s * complex_of_real pi) *\n                            complex_set_lebesgue_integral lborel {r..}\n                             (g s) +\n                            smallc +\n                            0\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      - 2 * \\<i> * sin (s * complex_of_real pi) * I n + smallc + bigc n)\n  \\<longlonglongrightarrow> - 2 * \\<i> * sin (s * complex_of_real pi) *\n                            complex_set_lebesgue_integral lborel {r..}\n                             (g s) +\n                            smallc +\n                            0\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have \"(\\<lambda>n. - 2 * \\<i> * sin (s * pi) * I n + smallc + bigc n) =\n               (\\<lambda>n. -2 * \\<i> * pi * (2 * pi) powr -s * (F1 n + F2 n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - 2 * \\<i> * sin (s * complex_of_real pi) * I n + smallc + bigc n) =\n    (\\<lambda>n.\n        - 2 * \\<i> * complex_of_real pi *\n        complex_of_real (2 * pi) powr - s *\n        (F1 n + F2 n))", "by (subst eq) auto"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      - 2 * \\<i> * sin (s * complex_of_real pi) * I n + smallc + bigc n) =\n  (\\<lambda>n.\n      - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n      (F1 n + F2 n))\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n      (F1 n + F2 n))\n  \\<longlonglongrightarrow> - 2 * \\<i> * sin (s * complex_of_real pi) *\n                            complex_set_lebesgue_integral lborel {r..}\n                             (g s) +\n                            smallc +\n                            0", "have \"\\<dots> \\<longlonglongrightarrow> (-2 * \\<i> * sin (s * pi)) * (CLBINT x:{r..}. g s x) + smallc\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n      (F1 n + F2 n))\n  \\<longlonglongrightarrow> - 2 * \\<i> * sin (s * complex_of_real pi) *\n                            complex_set_lebesgue_integral lborel {r..}\n                             (g s) +\n                            smallc +\n                            0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - 2 * \\<i> * complex_of_real pi *\n        complex_of_real (2 * pi) powr - s *\n        (F1 n + F2 n))\n    \\<longlonglongrightarrow> - 2 * \\<i> * sin (s * complex_of_real pi) *\n                              complex_set_lebesgue_integral lborel {r..}\n                               (g s) +\n                              smallc", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n      (F1 n + F2 n))\n  \\<longlonglongrightarrow> - 2 * \\<i> * sin (s * complex_of_real pi) *\n                            complex_set_lebesgue_integral lborel {r..}\n                             (g s) +\n                            smallc\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n      (F1 n + F2 n))\n  \\<longlonglongrightarrow> - 2 * \\<i> * sin (s * complex_of_real pi) *\n                            complex_set_lebesgue_integral lborel {r..}\n                             (g s) +\n                            smallc\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have \"(\\<lambda>n. -2 * \\<i> * pi * (2 * pi) powr -s * (F1 n + F2 n)) \\<longlonglongrightarrow>\n                   -2 * \\<i> * pi * (2 * pi) powr -s * \n                   (exp (-s * pi * \\<i> / 2) * F a s + exp (s * pi * \\<i> / 2) * F (-a) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - 2 * \\<i> * complex_of_real pi *\n        complex_of_real (2 * pi) powr - s *\n        (F1 n + F2 n))\n    \\<longlonglongrightarrow> - 2 * \\<i> * complex_of_real pi *\n                              complex_of_real (2 * pi) powr - s *\n                              (exp (- s * complex_of_real pi * \\<i> / 2) *\n                               F a s +\n                               exp (s * complex_of_real pi * \\<i> / 2) *\n                               F (- a) s)", "unfolding F1_F2_def F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - 2 * \\<i> * complex_of_real pi *\n        complex_of_real (2 * pi) powr - s *\n        (exp (- s * complex_of_real pi * \\<i> / 2) *\n         (\\<Sum>k\\<in>{0<..n}.\n            exp (complex_of_real (2 * real k * pi * a) * \\<i>) *\n            of_nat k powr - s) +\n         exp (s * complex_of_real pi * \\<i> / 2) *\n         (\\<Sum>k\\<in>{0<..n}.\n            exp (complex_of_real (2 * real k * pi * - a) * \\<i>) *\n            of_nat k powr - s)))\n    \\<longlonglongrightarrow> - 2 * \\<i> * complex_of_real pi *\n                              complex_of_real (2 * pi) powr - s *\n                              (exp (- s * complex_of_real pi * \\<i> / 2) *\n                               eval_fds (fds_perzeta a) s +\n                               exp (s * complex_of_real pi * \\<i> / 2) *\n                               eval_fds (fds_perzeta (- a)) s)", "using s"], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        - 2 * \\<i> * complex_of_real pi *\n        complex_of_real (2 * pi) powr - s *\n        (exp (- s * complex_of_real pi * \\<i> / 2) *\n         (\\<Sum>k\\<in>{0<..n}.\n            exp (complex_of_real (2 * real k * pi * a) * \\<i>) *\n            of_nat k powr - s) +\n         exp (s * complex_of_real pi * \\<i> / 2) *\n         (\\<Sum>k\\<in>{0<..n}.\n            exp (complex_of_real (2 * real k * pi * - a) * \\<i>) *\n            of_nat k powr - s)))\n    \\<longlonglongrightarrow> - 2 * \\<i> * complex_of_real pi *\n                              complex_of_real (2 * pi) powr - s *\n                              (exp (- s * complex_of_real pi * \\<i> / 2) *\n                               eval_fds (fds_perzeta a) s +\n                               exp (s * complex_of_real pi * \\<i> / 2) *\n                               eval_fds (fds_perzeta (- a)) s)", "by (intro tendsto_intros sum_tendsto_fds_perzeta)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n      (F1 n + F2 n))\n  \\<longlonglongrightarrow> - 2 * \\<i> * complex_of_real pi *\n                            complex_of_real (2 * pi) powr - s *\n                            (exp (- s * complex_of_real pi * \\<i> / 2) *\n                             F a s +\n                             exp (s * complex_of_real pi * \\<i> / 2) *\n                             F (- a) s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n      (F1 n + F2 n))\n  \\<longlonglongrightarrow> - 2 * \\<i> * sin (s * complex_of_real pi) *\n                            complex_set_lebesgue_integral lborel {r..}\n                             (g s) +\n                            smallc\n  (\\<lambda>n.\n      - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n      (F1 n + F2 n))\n  \\<longlonglongrightarrow> - 2 * \\<i> * complex_of_real pi *\n                            complex_of_real (2 * pi) powr - s *\n                            (exp (- s * complex_of_real pi * \\<i> / 2) *\n                             F a s +\n                             exp (s * complex_of_real pi * \\<i> / 2) *\n                             F (- a) s)", "have \"-2 * \\<i> * pi * (2 * pi) powr -s * \n                       (exp (-s * pi * \\<i> / 2) * F a s + exp (s * pi * \\<i> / 2) * F (-a) s) =\n                     (-2 * \\<i> * sin (s * pi)) * (CLBINT x:{r..}. g s x) + smallc\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n      (F1 n + F2 n))\n  \\<longlonglongrightarrow> - 2 * \\<i> * sin (s * complex_of_real pi) *\n                            complex_set_lebesgue_integral lborel {r..}\n                             (g s) +\n                            smallc\n  (\\<lambda>n.\n      - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n      (F1 n + F2 n))\n  \\<longlonglongrightarrow> - 2 * \\<i> * complex_of_real pi *\n                            complex_of_real (2 * pi) powr - s *\n                            (exp (- s * complex_of_real pi * \\<i> / 2) *\n                             F a s +\n                             exp (s * complex_of_real pi * \\<i> / 2) *\n                             F (- a) s)\n\ngoal (1 subgoal):\n 1. - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n    (exp (- s * complex_of_real pi * \\<i> / 2) * F a s +\n     exp (s * complex_of_real pi * \\<i> / 2) * F (- a) s) =\n    - 2 * \\<i> * sin (s * complex_of_real pi) *\n    complex_set_lebesgue_integral lborel {r..} (g s) +\n    smallc", "by (force intro: tendsto_unique)"], ["proof (state)\nthis:\n  - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n  (exp (- s * complex_of_real pi * \\<i> / 2) * F a s +\n   exp (s * complex_of_real pi * \\<i> / 2) * F (- a) s) =\n  - 2 * \\<i> * sin (s * complex_of_real pi) *\n  complex_set_lebesgue_integral lborel {r..} (g s) +\n  smallc\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "also"], ["proof (state)\nthis:\n  - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n  (exp (- s * complex_of_real pi * \\<i> / 2) * F a s +\n   exp (s * complex_of_real pi * \\<i> / 2) * F (- a) s) =\n  - 2 * \\<i> * sin (s * complex_of_real pi) *\n  complex_set_lebesgue_integral lborel {r..} (g s) +\n  smallc\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have \"\\<dots> = -2 * \\<i> * pi * rGamma s * hurwitz_zeta a (1 - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 2 * \\<i> * sin (s * complex_of_real pi) *\n    complex_set_lebesgue_integral lborel {r..} (g s) +\n    smallc =\n    - 2 * \\<i> * complex_of_real pi * rGamma s * hurwitz_zeta a (1 - s)", "using s r a"], ["proof (prove)\nusing this:\n  1 < Re s\n  r \\<in> {0<..<2}\n  a \\<in> {0<..1}\n\ngoal (1 subgoal):\n 1. - 2 * \\<i> * sin (s * complex_of_real pi) *\n    complex_set_lebesgue_integral lborel {r..} (g s) +\n    smallc =\n    - 2 * \\<i> * complex_of_real pi * rGamma s * hurwitz_zeta a (1 - s)", "using rGamma_hurwitz_zeta_eq_contour_integral[of s r]"], ["proof (prove)\nusing this:\n  1 < Re s\n  r \\<in> {0<..<2}\n  a \\<in> {0<..1}\n  \\<lbrakk>s \\<noteq> 0; r \\<in> {1..<2}; 0 < a\\<rbrakk>\n  \\<Longrightarrow> 2 * \\<i> * complex_of_real pi * rGamma s *\n                    hurwitz_zeta a (1 - s) =\n                    cnj (contour_integral (part_circlepath 0 r pi 0)\n                          (f (cnj s))) -\n                    contour_integral (part_circlepath 0 r pi 0) (f s) +\n                    2 * \\<i> * sin (complex_of_real pi * s) *\n                    complex_set_lebesgue_integral lborel {r..} (g s)\n\ngoal (1 subgoal):\n 1. - 2 * \\<i> * sin (s * complex_of_real pi) *\n    complex_set_lebesgue_integral lborel {r..} (g s) +\n    smallc =\n    - 2 * \\<i> * complex_of_real pi * rGamma s * hurwitz_zeta a (1 - s)", "by (simp add: r_def smallc_def algebra_simps)"], ["proof (state)\nthis:\n  - 2 * \\<i> * sin (s * complex_of_real pi) *\n  complex_set_lebesgue_integral lborel {r..} (g s) +\n  smallc =\n  - 2 * \\<i> * complex_of_real pi * rGamma s * hurwitz_zeta a (1 - s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "also"], ["proof (state)\nthis:\n  - 2 * \\<i> * sin (s * complex_of_real pi) *\n  complex_set_lebesgue_integral lborel {r..} (g s) +\n  smallc =\n  - 2 * \\<i> * complex_of_real pi * rGamma s * hurwitz_zeta a (1 - s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have \"exp (- s * complex_of_real pi * \\<i> / 2) = \\<i> powr (-s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (- s * complex_of_real pi * \\<i> / 2) = \\<i> powr - s", "by (simp add: powr_def field_simps)"], ["proof (state)\nthis:\n  exp (- s * complex_of_real pi * \\<i> / 2) = \\<i> powr - s\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "also"], ["proof (state)\nthis:\n  exp (- s * complex_of_real pi * \\<i> / 2) = \\<i> powr - s\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "have \"exp (s * complex_of_real pi * \\<i> / 2) = \\<i> powr s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (s * complex_of_real pi * \\<i> / 2) = \\<i> powr s", "by (simp add: powr_def field_simps)"], ["proof (state)\nthis:\n  exp (s * complex_of_real pi * \\<i> / 2) = \\<i> powr s\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "finally"], ["proof (chain)\npicking this:\n  - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n  (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s) =\n  - 2 * \\<i> * complex_of_real pi * rGamma s * hurwitz_zeta a (1 - s)", "show \"rGamma s * hurwitz_zeta a (1 - s) = (2 * pi) powr -s * \n                  (\\<i> powr (-s) * F a s + \\<i> powr s * F (-a) s)\""], ["proof (prove)\nusing this:\n  - 2 * \\<i> * complex_of_real pi * complex_of_real (2 * pi) powr - s *\n  (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s) =\n  - 2 * \\<i> * complex_of_real pi * rGamma s * hurwitz_zeta a (1 - s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)", "by simp"], ["proof (state)\nthis:\n  rGamma s * hurwitz_zeta a (1 - s) =\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> powr - s * F a s + \\<i> powr s * F (- a) s)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>\n  We can now use Hurwitz's formula to prove the following nice formula that expresses the periodic \n  zeta function in terms of the Hurwitz zeta function:\n  \\[F(s, a) = (2\\pi)^{s-1} i \\Gamma(1 - s)\n                \\left(i^{-s} \\zeta(1 - s, a) - i^{s} \\zeta(1 - s, 1 - a)\\right)\\]\n  This holds for all \\<open>s\\<close> with \\<open>\\mathfrak{R}(s) > 0\\<close> as long as \\<open>a \\<notin> \\<int>\\<close>. For convenience, we\n  move the \\<open>\\<Gamma>\\<close> function to the left-hand side in order to avoid having to account for its poles.\n\\<close>"], ["", "lemma perzeta_conv_hurwitz_zeta_aux:\n  fixes a :: real and s :: complex\n  assumes a: \"a \\<in> {0<..<1}\" and s: \"Re s > 0\"\n  shows   \"rGamma (1 - s) * eval_fds (fds_perzeta a) s = (2 * pi) powr (s - 1) * \\<i> *\n             (\\<i> powr -s * hurwitz_zeta a (1 - s) -\n              \\<i> powr s * hurwitz_zeta (1 - a) (1 - s))\" \n  (is \"?lhs s = ?rhs s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. rGamma (1 - s) * eval_fds (fds_perzeta a) s =\n    complex_of_real (2 * pi) powr (s - 1) * \\<i> *\n    (\\<i> powr - s * hurwitz_zeta a (1 - s) -\n     \\<i> powr s * hurwitz_zeta (1 - a) (1 - s))", "proof (rule analytic_continuation_open[where f = ?lhs])"], ["proof (state)\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b. rGamma (1 - b) * eval_fds (fds_perzeta a) b) holomorphic_on\n    ?s'\n 7. (\\<lambda>b.\n        complex_of_real (2 * pi) powr (b - 1) * \\<i> *\n        (\\<i> powr - b * hurwitz_zeta a (1 - b) -\n         \\<i> powr b * hurwitz_zeta (1 - a) (1 - b))) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 9. s \\<in> ?s'", "show \"connected {s. Re s > 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected {s. 0 < Re s}", "by (intro convex_connected convex_halfspace_Re_gt)"], ["proof (state)\nthis:\n  connected {s. 0 < Re s}\n\ngoal (8 subgoals):\n 1. open ?s\n 2. open {s. 0 < Re s}\n 3. ?s \\<noteq> {}\n 4. ?s \\<subseteq> {s. 0 < Re s}\n 5. (\\<lambda>b. rGamma (1 - b) * eval_fds (fds_perzeta a) b) holomorphic_on\n    {s. 0 < Re s}\n 6. (\\<lambda>b.\n        complex_of_real (2 * pi) powr (b - 1) * \\<i> *\n        (\\<i> powr - b * hurwitz_zeta a (1 - b) -\n         \\<i> powr b * hurwitz_zeta (1 - a) (1 - b))) holomorphic_on\n    {s. 0 < Re s}\n 7. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 8. s \\<in> {s. 0 < Re s}", "show \"{s. Re s > 1} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {s. 1 < Re s} \\<noteq> {}", "by (auto intro: exI[of _ 2])"], ["proof (state)\nthis:\n  {s. 1 < Re s} \\<noteq> {}\n\ngoal (7 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. (\\<lambda>b. rGamma (1 - b) * eval_fds (fds_perzeta a) b) holomorphic_on\n    {s. 0 < Re s}\n 5. (\\<lambda>b.\n        complex_of_real (2 * pi) powr (b - 1) * \\<i> *\n        (\\<i> powr - b * hurwitz_zeta a (1 - b) -\n         \\<i> powr b * hurwitz_zeta (1 - a) (1 - b))) holomorphic_on\n    {s. 0 < Re s}\n 6. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 7. s \\<in> {s. 0 < Re s}", "show \"(\\<lambda>s. rGamma (1 - s) * eval_fds (fds_perzeta a) s) holomorphic_on {s. 0 < Re s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. rGamma (1 - s) * eval_fds (fds_perzeta a) s) holomorphic_on\n    {s. 0 < Re s}", "unfolding perzeta_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. rGamma (1 - s) * eval_fds (fds_perzeta a) s) holomorphic_on\n    {s. 0 < Re s}", "using a"], ["proof (prove)\nusing this:\n  a \\<in> {0<..<1}\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. rGamma (1 - s) * eval_fds (fds_perzeta a) s) holomorphic_on\n    {s. 0 < Re s}", "by (auto intro!: holomorphic_intros le_less_trans[OF conv_abscissa_perzeta'] elim!: Ints_cases)"], ["proof (state)\nthis:\n  (\\<lambda>s. rGamma (1 - s) * eval_fds (fds_perzeta a) s) holomorphic_on\n  {s. 0 < Re s}\n\ngoal (6 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. (\\<lambda>b.\n        complex_of_real (2 * pi) powr (b - 1) * \\<i> *\n        (\\<i> powr - b * hurwitz_zeta a (1 - b) -\n         \\<i> powr b * hurwitz_zeta (1 - a) (1 - b))) holomorphic_on\n    {s. 0 < Re s}\n 5. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 6. s \\<in> {s. 0 < Re s}", "show \"?rhs holomorphic_on {s. 0 < Re s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        complex_of_real (2 * pi) powr (b - 1) * \\<i> *\n        (\\<i> powr - b * hurwitz_zeta a (1 - b) -\n         \\<i> powr b * hurwitz_zeta (1 - a) (1 - b))) holomorphic_on\n    {s. 0 < Re s}", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> {0<..<1}\n  0 < Re s\n\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        complex_of_real (2 * pi) powr (b - 1) * \\<i> *\n        (\\<i> powr - b * hurwitz_zeta a (1 - b) -\n         \\<i> powr b * hurwitz_zeta (1 - a) (1 - b))) holomorphic_on\n    {s. 0 < Re s}", "by (auto intro!: holomorphic_intros)"], ["proof (state)\nthis:\n  (\\<lambda>b.\n      complex_of_real (2 * pi) powr (b - 1) * \\<i> *\n      (\\<i> powr - b * hurwitz_zeta a (1 - b) -\n       \\<i> powr b * hurwitz_zeta (1 - a) (1 - b))) holomorphic_on\n  {s. 0 < Re s}\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "fix s"], ["proof (state)\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "assume s: \"s \\<in> {s. Re s > 1}\""], ["proof (state)\nthis:\n  s \\<in> {s. 1 < Re s}\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "have [simp]: \"fds_perzeta (1 - a) = fds_perzeta (-a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_perzeta (1 - a) = fds_perzeta (- a)", "using fds_perzeta.plus_of_nat[of \"-a\" 1]"], ["proof (prove)\nusing this:\n  fds_perzeta (- a + real 1) = fds_perzeta (- a)\n\ngoal (1 subgoal):\n 1. fds_perzeta (1 - a) = fds_perzeta (- a)", "by simp"], ["proof (state)\nthis:\n  fds_perzeta (1 - a) = fds_perzeta (- a)\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "have [simp]: \"fds_perzeta (a - 1) = fds_perzeta a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_perzeta (a - 1) = fds_perzeta a", "using fds_perzeta.minus_of_nat[of a 1]"], ["proof (prove)\nusing this:\n  fds_perzeta (a - real 1) = fds_perzeta a\n\ngoal (1 subgoal):\n 1. fds_perzeta (a - 1) = fds_perzeta a", "by simp"], ["proof (state)\nthis:\n  fds_perzeta (a - 1) = fds_perzeta a\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "from s"], ["proof (chain)\npicking this:\n  s \\<in> {s. 1 < Re s}", "have [simp]: \"Gamma s \\<noteq> 0\""], ["proof (prove)\nusing this:\n  s \\<in> {s. 1 < Re s}\n\ngoal (1 subgoal):\n 1. Gamma s \\<noteq> 0", "by (auto simp: Gamma_eq_zero_iff elim!: nonpos_Ints_cases)"], ["proof (state)\nthis:\n  Gamma s \\<noteq> 0\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "have \"(2 * pi) powr (-s) * (\\<i> * (\\<i> powr (-s) * (rGamma s * hurwitz_zeta a (1 - s)) -\n                              \\<i> powr s * (rGamma s * hurwitz_zeta (1 - a) (1 - s)))) =\n        (2 * pi) powr (-s) * ((\\<i> powr (1 - s) * (rGamma s * hurwitz_zeta a (1 - s)) +\n                               \\<i> powr (s - 1) * (rGamma s * hurwitz_zeta (1 - a) (1 - s))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (2 * pi) powr - s *\n    (\\<i> *\n     (\\<i> powr - s * (rGamma s * hurwitz_zeta a (1 - s)) -\n      \\<i> powr s * (rGamma s * hurwitz_zeta (1 - a) (1 - s)))) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr (1 - s) * (rGamma s * hurwitz_zeta a (1 - s)) +\n     \\<i> powr (s - 1) * (rGamma s * hurwitz_zeta (1 - a) (1 - s)))", "by (simp add: powr_diff field_simps powr_minus)"], ["proof (state)\nthis:\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> *\n   (\\<i> powr - s * (rGamma s * hurwitz_zeta a (1 - s)) -\n    \\<i> powr s * (rGamma s * hurwitz_zeta (1 - a) (1 - s)))) =\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> powr (1 - s) * (rGamma s * hurwitz_zeta a (1 - s)) +\n   \\<i> powr (s - 1) * (rGamma s * hurwitz_zeta (1 - a) (1 - s)))\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "also"], ["proof (state)\nthis:\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> *\n   (\\<i> powr - s * (rGamma s * hurwitz_zeta a (1 - s)) -\n    \\<i> powr s * (rGamma s * hurwitz_zeta (1 - a) (1 - s)))) =\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> powr (1 - s) * (rGamma s * hurwitz_zeta a (1 - s)) +\n   \\<i> powr (s - 1) * (rGamma s * hurwitz_zeta (1 - a) (1 - s)))\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "have \"\\<dots> = ((2 * pi) powr (-s)) ^ 2 * (\n          eval_fds (fds_perzeta a) s * (\\<i> powr s * \\<i> powr (s - 1) + \\<i> powr (-s) * \\<i> powr (1 - s)) +\n          eval_fds (fds_perzeta (-a)) s * (\\<i> powr s * \\<i> powr (1 - s) + \\<i> powr (-s) * \\<i> powr (s - 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (2 * pi) powr - s *\n    (\\<i> powr (1 - s) * (rGamma s * hurwitz_zeta a (1 - s)) +\n     \\<i> powr (s - 1) * (rGamma s * hurwitz_zeta (1 - a) (1 - s))) =\n    (complex_of_real (2 * pi) powr - s)\\<^sup>2 *\n    (eval_fds (fds_perzeta a) s *\n     (\\<i> powr s * \\<i> powr (s - 1) + \\<i> powr - s * \\<i> powr (1 - s)) +\n     eval_fds (fds_perzeta (- a)) s *\n     (\\<i> powr s * \\<i> powr (1 - s) + \\<i> powr - s * \\<i> powr (s - 1)))", "using s a"], ["proof (prove)\nusing this:\n  s \\<in> {s. 1 < Re s}\n  a \\<in> {0<..<1}\n\ngoal (1 subgoal):\n 1. complex_of_real (2 * pi) powr - s *\n    (\\<i> powr (1 - s) * (rGamma s * hurwitz_zeta a (1 - s)) +\n     \\<i> powr (s - 1) * (rGamma s * hurwitz_zeta (1 - a) (1 - s))) =\n    (complex_of_real (2 * pi) powr - s)\\<^sup>2 *\n    (eval_fds (fds_perzeta a) s *\n     (\\<i> powr s * \\<i> powr (s - 1) + \\<i> powr - s * \\<i> powr (1 - s)) +\n     eval_fds (fds_perzeta (- a)) s *\n     (\\<i> powr s * \\<i> powr (1 - s) + \\<i> powr - s * \\<i> powr (s - 1)))", "by (subst (1 2) hurwitz_zeta_formula_aux) (auto simp: algebra_simps power2_eq_square)"], ["proof (state)\nthis:\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> powr (1 - s) * (rGamma s * hurwitz_zeta a (1 - s)) +\n   \\<i> powr (s - 1) * (rGamma s * hurwitz_zeta (1 - a) (1 - s))) =\n  (complex_of_real (2 * pi) powr - s)\\<^sup>2 *\n  (eval_fds (fds_perzeta a) s *\n   (\\<i> powr s * \\<i> powr (s - 1) + \\<i> powr - s * \\<i> powr (1 - s)) +\n   eval_fds (fds_perzeta (- a)) s *\n   (\\<i> powr s * \\<i> powr (1 - s) + \\<i> powr - s * \\<i> powr (s - 1)))\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "also"], ["proof (state)\nthis:\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> powr (1 - s) * (rGamma s * hurwitz_zeta a (1 - s)) +\n   \\<i> powr (s - 1) * (rGamma s * hurwitz_zeta (1 - a) (1 - s))) =\n  (complex_of_real (2 * pi) powr - s)\\<^sup>2 *\n  (eval_fds (fds_perzeta a) s *\n   (\\<i> powr s * \\<i> powr (s - 1) + \\<i> powr - s * \\<i> powr (1 - s)) +\n   eval_fds (fds_perzeta (- a)) s *\n   (\\<i> powr s * \\<i> powr (1 - s) + \\<i> powr - s * \\<i> powr (s - 1)))\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "have \"(\\<i> powr s * \\<i> powr (1 - s) + \\<i> powr (-s) * \\<i> powr (s - 1)) = \n               exp (\\<i> * complex_of_real pi / 2) + exp (- (\\<i> * complex_of_real pi / 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<i> powr s * \\<i> powr (1 - s) + \\<i> powr - s * \\<i> powr (s - 1) =\n    exp (\\<i> * complex_of_real pi / 2) +\n    exp (- (\\<i> * complex_of_real pi / 2))", "by (simp add: powr_def exp_add [symmetric] field_simps)"], ["proof (state)\nthis:\n  \\<i> powr s * \\<i> powr (1 - s) + \\<i> powr - s * \\<i> powr (s - 1) =\n  exp (\\<i> * complex_of_real pi / 2) +\n  exp (- (\\<i> * complex_of_real pi / 2))\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "also"], ["proof (state)\nthis:\n  \\<i> powr s * \\<i> powr (1 - s) + \\<i> powr - s * \\<i> powr (s - 1) =\n  exp (\\<i> * complex_of_real pi / 2) +\n  exp (- (\\<i> * complex_of_real pi / 2))\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "have \"\\<dots> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (\\<i> * complex_of_real pi / 2) +\n    exp (- (\\<i> * complex_of_real pi / 2)) =\n    0", "by (simp add: exp_eq_polar)"], ["proof (state)\nthis:\n  exp (\\<i> * complex_of_real pi / 2) +\n  exp (- (\\<i> * complex_of_real pi / 2)) =\n  0\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "also"], ["proof (state)\nthis:\n  exp (\\<i> * complex_of_real pi / 2) +\n  exp (- (\\<i> * complex_of_real pi / 2)) =\n  0\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "have \"\\<i> powr s * \\<i> powr (s - 1) = \\<i> powr (2 * s - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<i> powr s * \\<i> powr (s - 1) = \\<i> powr (2 * s - 1)", "by (simp add: powr_def exp_add [symmetric] field_simps)"], ["proof (state)\nthis:\n  \\<i> powr s * \\<i> powr (s - 1) = \\<i> powr (2 * s - 1)\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "also"], ["proof (state)\nthis:\n  \\<i> powr s * \\<i> powr (s - 1) = \\<i> powr (2 * s - 1)\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "have \"\\<i> powr (-s) * \\<i> powr (1 - s) = \\<i> powr (1 - 2 * s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<i> powr - s * \\<i> powr (1 - s) = \\<i> powr (1 - 2 * s)", "by (simp add: powr_def exp_add [symmetric] field_simps)"], ["proof (state)\nthis:\n  \\<i> powr - s * \\<i> powr (1 - s) = \\<i> powr (1 - 2 * s)\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "also"], ["proof (state)\nthis:\n  \\<i> powr - s * \\<i> powr (1 - s) = \\<i> powr (1 - 2 * s)\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "have \"\\<i> powr (2 * s - 1) + \\<i> powr (1 - 2 * s) = 2 * cos ((2 * s - 1) * pi / 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<i> powr (2 * s - 1) + \\<i> powr (1 - 2 * s) =\n    2 * cos ((2 * s - 1) * complex_of_real pi / 2)", "by (simp add: powr_def cos_exp_eq algebra_simps minus_divide_left cos_sin_eq)"], ["proof (state)\nthis:\n  \\<i> powr (2 * s - 1) + \\<i> powr (1 - 2 * s) =\n  2 * cos ((2 * s - 1) * complex_of_real pi / 2)\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "also"], ["proof (state)\nthis:\n  \\<i> powr (2 * s - 1) + \\<i> powr (1 - 2 * s) =\n  2 * cos ((2 * s - 1) * complex_of_real pi / 2)\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "have \"\\<dots> = 2 * sin (pi - s * pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * cos ((2 * s - 1) * complex_of_real pi / 2) =\n    2 * sin (complex_of_real pi - s * complex_of_real pi)", "by (simp add: cos_sin_eq field_simps)"], ["proof (state)\nthis:\n  2 * cos ((2 * s - 1) * complex_of_real pi / 2) =\n  2 * sin (complex_of_real pi - s * complex_of_real pi)\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "also"], ["proof (state)\nthis:\n  2 * cos ((2 * s - 1) * complex_of_real pi / 2) =\n  2 * sin (complex_of_real pi - s * complex_of_real pi)\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "have \"\\<dots> = 2 * sin (s * pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * sin (complex_of_real pi - s * complex_of_real pi) =\n    2 * sin (s * complex_of_real pi)", "by (simp add: sin_diff)"], ["proof (state)\nthis:\n  2 * sin (complex_of_real pi - s * complex_of_real pi) =\n  2 * sin (s * complex_of_real pi)\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "finally"], ["proof (chain)\npicking this:\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> *\n   (\\<i> powr - s * (rGamma s * hurwitz_zeta a (1 - s)) -\n    \\<i> powr s * (rGamma s * hurwitz_zeta (1 - a) (1 - s)))) =\n  (complex_of_real (2 * pi) powr - s)\\<^sup>2 *\n  (eval_fds (fds_perzeta a) s * (2 * sin (s * complex_of_real pi)) +\n   eval_fds (fds_perzeta (- a)) s * 0)", "have \"\\<i> * (rGamma s * \\<i> powr (-s) * hurwitz_zeta a (1 - s) -\n                     rGamma s * \\<i> powr s * hurwitz_zeta (1 - a) (1 - s)) =\n                2 * (2 * pi) powr -s * sin (s * pi) * eval_fds (fds_perzeta a) s\""], ["proof (prove)\nusing this:\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> *\n   (\\<i> powr - s * (rGamma s * hurwitz_zeta a (1 - s)) -\n    \\<i> powr s * (rGamma s * hurwitz_zeta (1 - a) (1 - s)))) =\n  (complex_of_real (2 * pi) powr - s)\\<^sup>2 *\n  (eval_fds (fds_perzeta a) s * (2 * sin (s * complex_of_real pi)) +\n   eval_fds (fds_perzeta (- a)) s * 0)\n\ngoal (1 subgoal):\n 1. \\<i> *\n    (rGamma s * \\<i> powr - s * hurwitz_zeta a (1 - s) -\n     rGamma s * \\<i> powr s * hurwitz_zeta (1 - a) (1 - s)) =\n    2 * complex_of_real (2 * pi) powr - s * sin (s * complex_of_real pi) *\n    eval_fds (fds_perzeta a) s", "by (simp add: power2_eq_square mult_ac)"], ["proof (state)\nthis:\n  \\<i> *\n  (rGamma s * \\<i> powr - s * hurwitz_zeta a (1 - s) -\n   rGamma s * \\<i> powr s * hurwitz_zeta (1 - a) (1 - s)) =\n  2 * complex_of_real (2 * pi) powr - s * sin (s * complex_of_real pi) *\n  eval_fds (fds_perzeta a) s\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "hence \"(2 * pi) powr s / 2 * \\<i> *\n           (\\<i> powr (-s) * hurwitz_zeta a (1 - s) -\n            \\<i> powr s * hurwitz_zeta (1 - a) (1 - s)) =\n         Gamma s * sin (s * pi) * eval_fds (fds_perzeta a) s\""], ["proof (prove)\nusing this:\n  \\<i> *\n  (rGamma s * \\<i> powr - s * hurwitz_zeta a (1 - s) -\n   rGamma s * \\<i> powr s * hurwitz_zeta (1 - a) (1 - s)) =\n  2 * complex_of_real (2 * pi) powr - s * sin (s * complex_of_real pi) *\n  eval_fds (fds_perzeta a) s\n\ngoal (1 subgoal):\n 1. complex_of_real (2 * pi) powr s / 2 * \\<i> *\n    (\\<i> powr - s * hurwitz_zeta a (1 - s) -\n     \\<i> powr s * hurwitz_zeta (1 - a) (1 - s)) =\n    Gamma s * sin (s * complex_of_real pi) * eval_fds (fds_perzeta a) s", "by (subst (asm) (2) powr_minus) (simp add: field_simps rGamma_inverse_Gamma)"], ["proof (state)\nthis:\n  complex_of_real (2 * pi) powr s / 2 * \\<i> *\n  (\\<i> powr - s * hurwitz_zeta a (1 - s) -\n   \\<i> powr s * hurwitz_zeta (1 - a) (1 - s)) =\n  Gamma s * sin (s * complex_of_real pi) * eval_fds (fds_perzeta a) s\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "also"], ["proof (state)\nthis:\n  complex_of_real (2 * pi) powr s / 2 * \\<i> *\n  (\\<i> powr - s * hurwitz_zeta a (1 - s) -\n   \\<i> powr s * hurwitz_zeta (1 - a) (1 - s)) =\n  Gamma s * sin (s * complex_of_real pi) * eval_fds (fds_perzeta a) s\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "have \"Gamma s * sin (s * pi) = pi * rGamma (1 - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gamma s * sin (s * complex_of_real pi) =\n    complex_of_real pi * rGamma (1 - s)", "using Gamma_reflection_complex[of s]"], ["proof (prove)\nusing this:\n  Gamma s * Gamma (1 - s) =\n  complex_of_real pi / sin (complex_of_real pi * s)\n\ngoal (1 subgoal):\n 1. Gamma s * sin (s * complex_of_real pi) =\n    complex_of_real pi * rGamma (1 - s)", "by (auto simp: divide_simps rGamma_inverse_Gamma mult_ac split: if_splits)"], ["proof (state)\nthis:\n  Gamma s * sin (s * complex_of_real pi) =\n  complex_of_real pi * rGamma (1 - s)\n\ngoal (5 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       rGamma (1 - z) * eval_fds (fds_perzeta a) z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 5. s \\<in> {s. 0 < Re s}", "finally"], ["proof (chain)\npicking this:\n  complex_of_real (2 * pi) powr s / 2 * \\<i> *\n  (\\<i> powr - s * hurwitz_zeta a (1 - s) -\n   \\<i> powr s * hurwitz_zeta (1 - a) (1 - s)) =\n  complex_of_real pi * rGamma (1 - s) * eval_fds (fds_perzeta a) s", "show \"?lhs s = ?rhs s\""], ["proof (prove)\nusing this:\n  complex_of_real (2 * pi) powr s / 2 * \\<i> *\n  (\\<i> powr - s * hurwitz_zeta a (1 - s) -\n   \\<i> powr s * hurwitz_zeta (1 - a) (1 - s)) =\n  complex_of_real pi * rGamma (1 - s) * eval_fds (fds_perzeta a) s\n\ngoal (1 subgoal):\n 1. rGamma (1 - s) * eval_fds (fds_perzeta a) s =\n    complex_of_real (2 * pi) powr (s - 1) * \\<i> *\n    (\\<i> powr - s * hurwitz_zeta a (1 - s) -\n     \\<i> powr s * hurwitz_zeta (1 - a) (1 - s))", "by (simp add: powr_diff)"], ["proof (state)\nthis:\n  rGamma (1 - s) * eval_fds (fds_perzeta a) s =\n  complex_of_real (2 * pi) powr (s - 1) * \\<i> *\n  (\\<i> powr - s * hurwitz_zeta a (1 - s) -\n   \\<i> powr s * hurwitz_zeta (1 - a) (1 - s))\n\ngoal (4 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 4. s \\<in> {s. 0 < Re s}", "qed (insert s, auto simp: open_halfspace_Re_gt)"], ["", "text \\<open>\n  We can now use the above equation as a defining equation to continue the periodic\n  zeta function $F$ to the entire complex plane except at non-negative integer values for \\<open>s\\<close>.\n  However, the positive integers are already covered by the original Dirichlet series definition\n  of $F$, so we only need to take care of \\<open>s = 0\\<close>. We do this by cancelling the pole of \\<open>\\<Gamma>\\<close> at \\<open>0\\<close>\n  with the zero of $i^{-s} \\zeta(1 - s, a) - i^s \\zeta(1 - s, 1 - a)$.\n\\<close>"], ["", "lemma\n  assumes \"q' \\<notin> \\<int>\"\n  shows   holomorphic_perzeta': \"perzeta q' holomorphic_on A\"\n    and   perzeta_altdef2:   \"Re s > 0 \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perzeta q' holomorphic_on A &&&\n    (0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "define q where \"q = frac q'\""], ["proof (state)\nthis:\n  q = frac q'\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "from assms"], ["proof (chain)\npicking this:\n  q' \\<notin> \\<int>", "have q: \"q \\<in> {0<..<1}\""], ["proof (prove)\nusing this:\n  q' \\<notin> \\<int>\n\ngoal (1 subgoal):\n 1. q \\<in> {0<..<1}", "by (auto simp: q_def frac_lt_1)"], ["proof (state)\nthis:\n  q \\<in> {0<..<1}\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "hence [simp]: \"q \\<notin> \\<int>\""], ["proof (prove)\nusing this:\n  q \\<in> {0<..<1}\n\ngoal (1 subgoal):\n 1. q \\<notin> \\<int>", "by (auto elim!: Ints_cases)"], ["proof (state)\nthis:\n  q \\<notin> \\<int>\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "have [simp]: \"frac q = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. frac q = q", "by (simp add: q_def frac_def)"], ["proof (state)\nthis:\n  frac q = q\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "define f where \"f = (\\<lambda>s. complex_of_real (2 * pi) powr (s - 1) * \\<i> * Gamma (1 - s) *\n                        (\\<i> powr (-s) * hurwitz_zeta q (1 - s) -\n                         \\<i> powr s * hurwitz_zeta (1 - q) (1 - s)))\""], ["proof (state)\nthis:\n  f =\n  (\\<lambda>s.\n      complex_of_real (2 * pi) powr (s - 1) * \\<i> * Gamma (1 - s) *\n      (\\<i> powr - s * hurwitz_zeta q (1 - s) -\n       \\<i> powr s * hurwitz_zeta (1 - q) (1 - s)))\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "{"], ["proof (state)\nthis:\n  f =\n  (\\<lambda>s.\n      complex_of_real (2 * pi) powr (s - 1) * \\<i> * Gamma (1 - s) *\n      (\\<i> powr - s * hurwitz_zeta q (1 - s) -\n       \\<i> powr s * hurwitz_zeta (1 - q) (1 - s)))\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "fix s :: complex"], ["proof (state)\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "assume \"1 - s \\<in> \\<int>\\<^sub>\\<le>\\<^sub>0\""], ["proof (state)\nthis:\n  1 - s \\<in> \\<int>\\<^sub>\\<le>\\<^sub>0\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "then"], ["proof (chain)\npicking this:\n  1 - s \\<in> \\<int>\\<^sub>\\<le>\\<^sub>0", "obtain n where \"1 - s = of_int n\" \"n \\<le> 0\""], ["proof (prove)\nusing this:\n  1 - s \\<in> \\<int>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>1 - s = of_int n; n \\<le> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim!: nonpos_Ints_cases)"], ["proof (state)\nthis:\n  1 - s = of_int n\n  n \\<le> 0\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "hence \"s = 1 - of_int n\""], ["proof (prove)\nusing this:\n  1 - s = of_int n\n  n \\<le> 0\n\ngoal (1 subgoal):\n 1. s = 1 - of_int n", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  s = 1 - of_int n\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "also"], ["proof (state)\nthis:\n  s = 1 - of_int n\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "have \"\\<dots> \\<in> \\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 - of_int n \\<in> \\<nat>", "using \\<open>n \\<le> 0\\<close>"], ["proof (prove)\nusing this:\n  n \\<le> 0\n\ngoal (1 subgoal):\n 1. 1 - of_int n \\<in> \\<nat>", "by (auto simp: Nats_altdef1 intro: exI[of _ \"1 - n\"])"], ["proof (state)\nthis:\n  1 - of_int n \\<in> \\<nat>\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "finally"], ["proof (chain)\npicking this:\n  s \\<in> \\<nat>", "have \"s \\<in> \\<nat>\""], ["proof (prove)\nusing this:\n  s \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. s \\<in> \\<nat>", "."], ["proof (state)\nthis:\n  s \\<in> \\<nat>\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "}"], ["proof (state)\nthis:\n  1 - ?sa2 \\<in> \\<int>\\<^sub>\\<le>\\<^sub>0 \\<Longrightarrow>\n  ?sa2 \\<in> \\<nat>\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "note * = this"], ["proof (state)\nthis:\n  1 - ?sa2 \\<in> \\<int>\\<^sub>\\<le>\\<^sub>0 \\<Longrightarrow>\n  ?sa2 \\<in> \\<nat>\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "hence \"f holomorphic_on -\\<nat>\""], ["proof (prove)\nusing this:\n  1 - ?sa2 \\<in> \\<int>\\<^sub>\\<le>\\<^sub>0 \\<Longrightarrow>\n  ?sa2 \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. f holomorphic_on - \\<nat>", "using q"], ["proof (prove)\nusing this:\n  1 - ?sa2 \\<in> \\<int>\\<^sub>\\<le>\\<^sub>0 \\<Longrightarrow>\n  ?sa2 \\<in> \\<nat>\n  q \\<in> {0<..<1}\n\ngoal (1 subgoal):\n 1. f holomorphic_on - \\<nat>", "by (auto simp: f_def Nats_altdef2 nonpos_Ints_altdef not_le intro!: holomorphic_intros)"], ["proof (state)\nthis:\n  f holomorphic_on - \\<nat>\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "also"], ["proof (state)\nthis:\n  f holomorphic_on - \\<nat>\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "have \"?this \\<longleftrightarrow> perzeta q holomorphic_on -\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f holomorphic_on - \\<nat>) = (perzeta q holomorphic_on - \\<nat>)", "using assms"], ["proof (prove)\nusing this:\n  q' \\<notin> \\<int>\n\ngoal (1 subgoal):\n 1. (f holomorphic_on - \\<nat>) = (perzeta q holomorphic_on - \\<nat>)", "by (intro holomorphic_cong refl) (auto simp: perzeta_def Let_def f_def)"], ["proof (state)\nthis:\n  (f holomorphic_on - \\<nat>) = (perzeta q holomorphic_on - \\<nat>)\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "finally"], ["proof (chain)\npicking this:\n  perzeta q holomorphic_on - \\<nat>", "have holo: \"perzeta q holomorphic_on -\\<nat>\""], ["proof (prove)\nusing this:\n  perzeta q holomorphic_on - \\<nat>\n\ngoal (1 subgoal):\n 1. perzeta q holomorphic_on - \\<nat>", "."], ["proof (state)\nthis:\n  perzeta q holomorphic_on - \\<nat>\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "have f_altdef: \"f s = eval_fds (fds_perzeta q) s\" if \"Re s > 0\" and \"s \\<notin> \\<nat>\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. f s = eval_fds (fds_perzeta q) s", "using perzeta_conv_hurwitz_zeta_aux[OF q, of s] that *"], ["proof (prove)\nusing this:\n  0 < Re s \\<Longrightarrow>\n  rGamma (1 - s) * eval_fds (fds_perzeta q) s =\n  complex_of_real (2 * pi) powr (s - 1) * \\<i> *\n  (\\<i> powr - s * hurwitz_zeta q (1 - s) -\n   \\<i> powr s * hurwitz_zeta (1 - q) (1 - s))\n  0 < Re s\n  s \\<notin> \\<nat>\n  1 - ?sa2 \\<in> \\<int>\\<^sub>\\<le>\\<^sub>0 \\<Longrightarrow>\n  ?sa2 \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. f s = eval_fds (fds_perzeta q) s", "by (auto simp: rGamma_inverse_Gamma Gamma_eq_zero_iff divide_simps f_def perzeta_def\n             split: if_splits)"], ["proof (state)\nthis:\n  \\<lbrakk>0 < Re ?s; ?s \\<notin> \\<nat>\\<rbrakk>\n  \\<Longrightarrow> f ?s = eval_fds (fds_perzeta q) ?s\n\ngoal (2 subgoals):\n 1. perzeta q' holomorphic_on A\n 2. 0 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "show \"perzeta q' s = eval_fds (fds_perzeta q') s\" if \"Re s > 0\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. perzeta q' s = eval_fds (fds_perzeta q') s", "using f_altdef[of s] that assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < Re s; s \\<notin> \\<nat>\\<rbrakk>\n  \\<Longrightarrow> f s = eval_fds (fds_perzeta q) s\n  0 < Re s\n  q' \\<notin> \\<int>\n\ngoal (1 subgoal):\n 1. perzeta q' s = eval_fds (fds_perzeta q') s", "by (auto simp: f_def perzeta_def Let_def q_def)"], ["proof (state)\nthis:\n  0 < Re ?s \\<Longrightarrow> perzeta q' ?s = eval_fds (fds_perzeta q') ?s\n\ngoal (1 subgoal):\n 1. perzeta q' holomorphic_on A", "have cont: \"isCont (perzeta q) s\" if \"s \\<in> \\<nat>\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (perzeta q) s", "proof (cases \"s = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s\n 2. s \\<noteq> 0 \\<Longrightarrow> isCont (perzeta q) s", "case False"], ["proof (state)\nthis:\n  s \\<noteq> 0\n\ngoal (2 subgoals):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s\n 2. s \\<noteq> 0 \\<Longrightarrow> isCont (perzeta q) s", "with that"], ["proof (chain)\npicking this:\n  s \\<in> \\<nat>\n  s \\<noteq> 0", "obtain n where [simp]: \"s = of_nat n\" and n: \"n > 0\""], ["proof (prove)\nusing this:\n  s \\<in> \\<nat>\n  s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>s = of_nat n; 0 < n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim!: Nats_cases)"], ["proof (state)\nthis:\n  s = of_nat n\n  0 < n\n\ngoal (2 subgoals):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s\n 2. s \\<noteq> 0 \\<Longrightarrow> isCont (perzeta q) s", "have *: \"open ({s. Re s > 0} - (\\<nat> - {of_nat n}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open ({s. 0 < Re s} - (\\<nat> - {of_nat n}))", "using Nats_subset_Ints"], ["proof (prove)\nusing this:\n  \\<nat> \\<subseteq> \\<int>\n\ngoal (1 subgoal):\n 1. open ({s. 0 < Re s} - (\\<nat> - {of_nat n}))", "by (intro open_Diff closed_subset_Ints open_halfspace_Re_gt) auto"], ["proof (state)\nthis:\n  open ({s. 0 < Re s} - (\\<nat> - {of_nat n}))\n\ngoal (2 subgoals):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s\n 2. s \\<noteq> 0 \\<Longrightarrow> isCont (perzeta q) s", "have \"eventually (\\<lambda>s. s \\<in> {s. Re s > 0} - (\\<nat> - {of_nat n})) (nhds (of_nat n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in nhds (of_nat n).\n       s \\<in> {s. 0 < Re s} - (\\<nat> - {of_nat n})", "using \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in nhds (of_nat n).\n       s \\<in> {s. 0 < Re s} - (\\<nat> - {of_nat n})", "by (intro eventually_nhds_in_open *) auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in nhds (of_nat n).\n     s \\<in> {s. 0 < Re s} - (\\<nat> - {of_nat n})\n\ngoal (2 subgoals):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s\n 2. s \\<noteq> 0 \\<Longrightarrow> isCont (perzeta q) s", "hence ev: \"eventually (\\<lambda>s. eval_fds (fds_perzeta q) s = perzeta q s) (nhds (of_nat n))\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s in nhds (of_nat n).\n     s \\<in> {s. 0 < Re s} - (\\<nat> - {of_nat n})\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in nhds (of_nat n).\n       eval_fds (fds_perzeta q) s = perzeta q s", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {s. 0 < Re s} - (\\<nat> - {of_nat n}) \\<Longrightarrow>\n       eval_fds (fds_perzeta q) s = perzeta q s", "case (elim s)"], ["proof (state)\nthis:\n  s \\<in> {s. 0 < Re s} - (\\<nat> - {of_nat n})\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {s. 0 < Re s} - (\\<nat> - {of_nat n}) \\<Longrightarrow>\n       eval_fds (fds_perzeta q) s = perzeta q s", "thus ?case"], ["proof (prove)\nusing this:\n  s \\<in> {s. 0 < Re s} - (\\<nat> - {of_nat n})\n\ngoal (1 subgoal):\n 1. eval_fds (fds_perzeta q) s = perzeta q s", "using q f_altdef[of s]"], ["proof (prove)\nusing this:\n  s \\<in> {s. 0 < Re s} - (\\<nat> - {of_nat n})\n  q \\<in> {0<..<1}\n  \\<lbrakk>0 < Re s; s \\<notin> \\<nat>\\<rbrakk>\n  \\<Longrightarrow> f s = eval_fds (fds_perzeta q) s\n\ngoal (1 subgoal):\n 1. eval_fds (fds_perzeta q) s = perzeta q s", "by (auto simp: perzeta_def dist_of_nat f_def elim!: Nats_cases Ints_cases)"], ["proof (state)\nthis:\n  eval_fds (fds_perzeta q) s = perzeta q s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in nhds (of_nat n).\n     eval_fds (fds_perzeta q) s = perzeta q s\n\ngoal (2 subgoals):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s\n 2. s \\<noteq> 0 \\<Longrightarrow> isCont (perzeta q) s", "have \"isCont (eval_fds (fds_perzeta q)) (of_nat n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (eval_fds (fds_perzeta q)) (of_nat n)", "using q and \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  q \\<in> {0<..<1}\n  0 < n\n\ngoal (1 subgoal):\n 1. isCont (eval_fds (fds_perzeta q)) (of_nat n)", "by (intro continuous_eval_fds le_less_trans[OF conv_abscissa_perzeta'])\n         (auto elim!: Ints_cases)"], ["proof (state)\nthis:\n  isCont (eval_fds (fds_perzeta q)) (of_nat n)\n\ngoal (2 subgoals):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s\n 2. s \\<noteq> 0 \\<Longrightarrow> isCont (perzeta q) s", "also"], ["proof (state)\nthis:\n  isCont (eval_fds (fds_perzeta q)) (of_nat n)\n\ngoal (2 subgoals):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s\n 2. s \\<noteq> 0 \\<Longrightarrow> isCont (perzeta q) s", "have \"?this \\<longleftrightarrow> isCont (perzeta q) (of_nat n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (eval_fds (fds_perzeta q)) (of_nat n) =\n    isCont (perzeta q) (of_nat n)", "using ev"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s in nhds (of_nat n).\n     eval_fds (fds_perzeta q) s = perzeta q s\n\ngoal (1 subgoal):\n 1. isCont (eval_fds (fds_perzeta q)) (of_nat n) =\n    isCont (perzeta q) (of_nat n)", "by (intro isCont_cong ev)"], ["proof (state)\nthis:\n  isCont (eval_fds (fds_perzeta q)) (of_nat n) =\n  isCont (perzeta q) (of_nat n)\n\ngoal (2 subgoals):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s\n 2. s \\<noteq> 0 \\<Longrightarrow> isCont (perzeta q) s", "finally"], ["proof (chain)\npicking this:\n  isCont (perzeta q) (of_nat n)", "show ?thesis"], ["proof (prove)\nusing this:\n  isCont (perzeta q) (of_nat n)\n\ngoal (1 subgoal):\n 1. isCont (perzeta q) s", "by simp"], ["proof (state)\nthis:\n  isCont (perzeta q) s\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "assume [simp]: \"s = 0\""], ["proof (state)\nthis:\n  s = 0\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "define a where \"a = Complex (ln q) (-pi / 2)\""], ["proof (state)\nthis:\n  a = Complex (ln q) (- pi / 2)\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "define b where \"b = Complex (ln (1 - q)) (pi / 2)\""], ["proof (state)\nthis:\n  b = Complex (ln (1 - q)) (pi / 2)\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "have \"eventually (\\<lambda>s::complex. s \\<notin> \\<nat>) (at 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0. s \\<notin> \\<nat>", "unfolding eventually_at_topological"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>S.\n       open S \\<and>\n       0 \\<in> S \\<and>\n       (\\<forall>x\\<in>S.\n           x \\<noteq> 0 \\<longrightarrow>\n           x \\<in> UNIV \\<longrightarrow> x \\<notin> \\<nat>)", "using Nats_subset_Ints"], ["proof (prove)\nusing this:\n  \\<nat> \\<subseteq> \\<int>\n\ngoal (1 subgoal):\n 1. \\<exists>S.\n       open S \\<and>\n       0 \\<in> S \\<and>\n       (\\<forall>x\\<in>S.\n           x \\<noteq> 0 \\<longrightarrow>\n           x \\<in> UNIV \\<longrightarrow> x \\<notin> \\<nat>)", "by (intro exI[of _ \"-(\\<nat>-{0})\"] conjI open_Compl closed_subset_Ints) auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at 0. s \\<notin> \\<nat>\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "hence ev: \"eventually (\\<lambda>s. perzeta q s = (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n                 (\\<i> powr - s * pre_zeta q (1 - s) -\\<i> powr s * pre_zeta (1 - q) (1 - s) +\n                 (exp (b * s) - exp (a * s)) / s)) (at (0::complex))\"\n      (is \"eventually (\\<lambda>s. _ = ?f s) _\")"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s in at 0. s \\<notin> \\<nat>\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0.\n       perzeta q s =\n       complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n       (\\<i> powr - s * pre_zeta q (1 - s) -\n        \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n        (exp (b * s) - exp (a * s)) / s)", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<notin> \\<nat> \\<Longrightarrow>\n       perzeta q s =\n       complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n       (\\<i> powr - s * pre_zeta q (1 - s) -\n        \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n        (exp (b * s) - exp (a * s)) / s)", "case (elim s)"], ["proof (state)\nthis:\n  s \\<notin> \\<nat>\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<notin> \\<nat> \\<Longrightarrow>\n       perzeta q s =\n       complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n       (\\<i> powr - s * pre_zeta q (1 - s) -\n        \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n        (exp (b * s) - exp (a * s)) / s)", "have \"perzeta q s = (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n              (\\<i> powr (-s) * hurwitz_zeta q (1 - s) -\n               \\<i> powr s * hurwitz_zeta (1 - q) (1 - s))\" (is \"_ = _ * ?T\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. perzeta q s =\n    complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n    (\\<i> powr - s * hurwitz_zeta q (1 - s) -\n     \\<i> powr s * hurwitz_zeta (1 - q) (1 - s))", "using elim"], ["proof (prove)\nusing this:\n  s \\<notin> \\<nat>\n\ngoal (1 subgoal):\n 1. perzeta q s =\n    complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n    (\\<i> powr - s * hurwitz_zeta q (1 - s) -\n     \\<i> powr s * hurwitz_zeta (1 - q) (1 - s))", "by (auto simp: perzeta_def powr_diff powr_minus field_simps)"], ["proof (state)\nthis:\n  perzeta q s =\n  complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n  (\\<i> powr - s * hurwitz_zeta q (1 - s) -\n   \\<i> powr s * hurwitz_zeta (1 - q) (1 - s))\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<notin> \\<nat> \\<Longrightarrow>\n       perzeta q s =\n       complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n       (\\<i> powr - s * pre_zeta q (1 - s) -\n        \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n        (exp (b * s) - exp (a * s)) / s)", "also"], ["proof (state)\nthis:\n  perzeta q s =\n  complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n  (\\<i> powr - s * hurwitz_zeta q (1 - s) -\n   \\<i> powr s * hurwitz_zeta (1 - q) (1 - s))\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<notin> \\<nat> \\<Longrightarrow>\n       perzeta q s =\n       complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n       (\\<i> powr - s * pre_zeta q (1 - s) -\n        \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n        (exp (b * s) - exp (a * s)) / s)", "have \"?T = \\<i> powr (-s) * pre_zeta q (1 - s) - \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n                      (\\<i> powr s * (1 - q) powr s - \\<i> powr (-s) * q powr s) / s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<i> powr - s * hurwitz_zeta q (1 - s) -\n    \\<i> powr s * hurwitz_zeta (1 - q) (1 - s) =\n    \\<i> powr - s * pre_zeta q (1 - s) -\n    \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n    (\\<i> powr s * complex_of_real (1 - q) powr s -\n     \\<i> powr - s * complex_of_real q powr s) /\n    s", "using elim"], ["proof (prove)\nusing this:\n  s \\<notin> \\<nat>\n\ngoal (1 subgoal):\n 1. \\<i> powr - s * hurwitz_zeta q (1 - s) -\n    \\<i> powr s * hurwitz_zeta (1 - q) (1 - s) =\n    \\<i> powr - s * pre_zeta q (1 - s) -\n    \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n    (\\<i> powr s * complex_of_real (1 - q) powr s -\n     \\<i> powr - s * complex_of_real q powr s) /\n    s", "by (auto simp: hurwitz_zeta_def field_simps)"], ["proof (state)\nthis:\n  \\<i> powr - s * hurwitz_zeta q (1 - s) -\n  \\<i> powr s * hurwitz_zeta (1 - q) (1 - s) =\n  \\<i> powr - s * pre_zeta q (1 - s) -\n  \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n  (\\<i> powr s * complex_of_real (1 - q) powr s -\n   \\<i> powr - s * complex_of_real q powr s) /\n  s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<notin> \\<nat> \\<Longrightarrow>\n       perzeta q s =\n       complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n       (\\<i> powr - s * pre_zeta q (1 - s) -\n        \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n        (exp (b * s) - exp (a * s)) / s)", "also"], ["proof (state)\nthis:\n  \\<i> powr - s * hurwitz_zeta q (1 - s) -\n  \\<i> powr s * hurwitz_zeta (1 - q) (1 - s) =\n  \\<i> powr - s * pre_zeta q (1 - s) -\n  \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n  (\\<i> powr s * complex_of_real (1 - q) powr s -\n   \\<i> powr - s * complex_of_real q powr s) /\n  s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<notin> \\<nat> \\<Longrightarrow>\n       perzeta q s =\n       complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n       (\\<i> powr - s * pre_zeta q (1 - s) -\n        \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n        (exp (b * s) - exp (a * s)) / s)", "have \"\\<i> powr s * (1 - q) powr s = exp (b * s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<i> powr s * complex_of_real (1 - q) powr s = exp (b * s)", "using q"], ["proof (prove)\nusing this:\n  q \\<in> {0<..<1}\n\ngoal (1 subgoal):\n 1. \\<i> powr s * complex_of_real (1 - q) powr s = exp (b * s)", "by (simp add: powr_def exp_add algebra_simps Ln_Reals_eq Complex_eq b_def)"], ["proof (state)\nthis:\n  \\<i> powr s * complex_of_real (1 - q) powr s = exp (b * s)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<notin> \\<nat> \\<Longrightarrow>\n       perzeta q s =\n       complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n       (\\<i> powr - s * pre_zeta q (1 - s) -\n        \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n        (exp (b * s) - exp (a * s)) / s)", "also"], ["proof (state)\nthis:\n  \\<i> powr s * complex_of_real (1 - q) powr s = exp (b * s)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<notin> \\<nat> \\<Longrightarrow>\n       perzeta q s =\n       complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n       (\\<i> powr - s * pre_zeta q (1 - s) -\n        \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n        (exp (b * s) - exp (a * s)) / s)", "have \"\\<i> powr (-s) * q powr s = exp (a * s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<i> powr - s * complex_of_real q powr s = exp (a * s)", "using q"], ["proof (prove)\nusing this:\n  q \\<in> {0<..<1}\n\ngoal (1 subgoal):\n 1. \\<i> powr - s * complex_of_real q powr s = exp (a * s)", "by (simp add: powr_def exp_add Ln_Reals_eq exp_diff exp_minus diff_divide_distrib \n                      ring_distribs inverse_eq_divide mult_ac Complex_eq a_def)"], ["proof (state)\nthis:\n  \\<i> powr - s * complex_of_real q powr s = exp (a * s)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<notin> \\<nat> \\<Longrightarrow>\n       perzeta q s =\n       complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n       (\\<i> powr - s * pre_zeta q (1 - s) -\n        \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n        (exp (b * s) - exp (a * s)) / s)", "finally"], ["proof (chain)\npicking this:\n  perzeta q s =\n  complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n  (\\<i> powr - s * pre_zeta q (1 - s) -\n   \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n   (exp (b * s) - exp (a * s)) / s)", "show ?case"], ["proof (prove)\nusing this:\n  perzeta q s =\n  complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n  (\\<i> powr - s * pre_zeta q (1 - s) -\n   \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n   (exp (b * s) - exp (a * s)) / s)\n\ngoal (1 subgoal):\n 1. perzeta q s =\n    complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n    (\\<i> powr - s * pre_zeta q (1 - s) -\n     \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n     (exp (b * s) - exp (a * s)) / s)", "."], ["proof (state)\nthis:\n  perzeta q s =\n  complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n  (\\<i> powr - s * pre_zeta q (1 - s) -\n   \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n   (exp (b * s) - exp (a * s)) / s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at 0.\n     perzeta q s =\n     complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n     (\\<i> powr - s * pre_zeta q (1 - s) -\n      \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n      (exp (b * s) - exp (a * s)) / s)\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "have [simp]: \"\\<not>(pi \\<le> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> pi \\<le> 0", "using pi_gt_zero"], ["proof (prove)\nusing this:\n  0 < pi\n\ngoal (1 subgoal):\n 1. \\<not> pi \\<le> 0", "by (simp add: not_le)"], ["proof (state)\nthis:\n  \\<not> pi \\<le> 0\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "have \"(\\<lambda>s::complex. if s = 0 then b - a else (exp (b * s) - exp (a * s)) / s)\n                has_fps_expansion (fps_exp b - fps_exp a) / fps_X\" (is \"?f' has_fps_expansion _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        if s = 0 then b - a\n        else (exp (b * s) - exp (a * s)) / s) has_fps_expansion\n    (fps_exp b - fps_exp a) / fps_X", "by (rule fps_expansion_intros)+ (auto intro!: subdegree_geI simp: Ln_Reals_eq a_def b_def)"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      if s = 0 then b - a\n      else (exp (b * s) - exp (a * s)) / s) has_fps_expansion\n  (fps_exp b - fps_exp a) / fps_X\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "hence \"isCont ?f' 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>s.\n      if s = 0 then b - a\n      else (exp (b * s) - exp (a * s)) / s) has_fps_expansion\n  (fps_exp b - fps_exp a) / fps_X\n\ngoal (1 subgoal):\n 1. isCont\n     (\\<lambda>s. if s = 0 then b - a else (exp (b * s) - exp (a * s)) / s)\n     0", "by (rule has_fps_expansion_imp_continuous)"], ["proof (state)\nthis:\n  isCont\n   (\\<lambda>s. if s = 0 then b - a else (exp (b * s) - exp (a * s)) / s) 0\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "hence \"?f' \\<midarrow>0\\<rightarrow> b - a\""], ["proof (prove)\nusing this:\n  isCont\n   (\\<lambda>s. if s = 0 then b - a else (exp (b * s) - exp (a * s)) / s) 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. if s = 0 then b - a else (exp (b * s) - exp (a * s)) / s)\n    \\<midarrow>0\\<rightarrow> b - a", "by (simp add: isCont_def)"], ["proof (state)\nthis:\n  (\\<lambda>s. if s = 0 then b - a else (exp (b * s) - exp (a * s)) / s)\n  \\<midarrow>0\\<rightarrow> b - a\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "also"], ["proof (state)\nthis:\n  (\\<lambda>s. if s = 0 then b - a else (exp (b * s) - exp (a * s)) / s)\n  \\<midarrow>0\\<rightarrow> b - a\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "have \"?this \\<longleftrightarrow> (\\<lambda>s. (exp (b * s) - exp (a * s)) / s) \\<midarrow>0\\<rightarrow> b - a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. if s = 0 then b - a else (exp (b * s) - exp (a * s)) / s)\n    \\<midarrow>0\\<rightarrow> b - a =\n    (\\<lambda>s. (exp (b * s) - exp (a * s)) / s) \\<midarrow>0\n    \\<rightarrow> b - a", "by (intro filterlim_cong refl) (auto simp: eventually_at intro: exI[of _ 1])"], ["proof (state)\nthis:\n  (\\<lambda>s. if s = 0 then b - a else (exp (b * s) - exp (a * s)) / s)\n  \\<midarrow>0\\<rightarrow> b - a =\n  (\\<lambda>s. (exp (b * s) - exp (a * s)) / s) \\<midarrow>0\n  \\<rightarrow> b - a\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>s. (exp (b * s) - exp (a * s)) / s) \\<midarrow>0\n  \\<rightarrow> b - a", "have \"?f \\<midarrow>0\\<rightarrow> of_real (2 * pi) powr (0 - 1) * Gamma (1 - 0) * \\<i> *\n                    (\\<i> powr -0 * pre_zeta q (1 - 0) -\\<i> powr 0 * pre_zeta (1 - q) (1 - 0) + (b - a))\"\n      (is \"filterlim _ (nhds ?c) _\")"], ["proof (prove)\nusing this:\n  (\\<lambda>s. (exp (b * s) - exp (a * s)) / s) \\<midarrow>0\n  \\<rightarrow> b - a\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n        (\\<i> powr - s * pre_zeta q (1 - s) -\n         \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n         (exp (b * s) - exp (a * s)) / s))\n    \\<midarrow>0\n    \\<rightarrow> complex_of_real (2 * pi) powr (0 - 1) * Gamma (1 - 0) *\n                  \\<i> *\n                  (\\<i> powr - 0 * pre_zeta q (1 - 0) -\n                   \\<i> powr 0 * pre_zeta (1 - q) (1 - 0) +\n                   (b - a))", "using q"], ["proof (prove)\nusing this:\n  (\\<lambda>s. (exp (b * s) - exp (a * s)) / s) \\<midarrow>0\n  \\<rightarrow> b - a\n  q \\<in> {0<..<1}\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n        (\\<i> powr - s * pre_zeta q (1 - s) -\n         \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n         (exp (b * s) - exp (a * s)) / s))\n    \\<midarrow>0\n    \\<rightarrow> complex_of_real (2 * pi) powr (0 - 1) * Gamma (1 - 0) *\n                  \\<i> *\n                  (\\<i> powr - 0 * pre_zeta q (1 - 0) -\n                   \\<i> powr 0 * pre_zeta (1 - q) (1 - 0) +\n                   (b - a))", "by (intro tendsto_intros isContD)\n                 (auto simp: complex_nonpos_Reals_iff intro!: continuous_intros)"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n      (\\<i> powr - s * pre_zeta q (1 - s) -\n       \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n       (exp (b * s) - exp (a * s)) / s))\n  \\<midarrow>0\n  \\<rightarrow> complex_of_real (2 * pi) powr (0 - 1) * Gamma (1 - 0) *\n                \\<i> *\n                (\\<i> powr - 0 * pre_zeta q (1 - 0) -\n                 \\<i> powr 0 * pre_zeta (1 - q) (1 - 0) +\n                 (b - a))\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "also"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n      (\\<i> powr - s * pre_zeta q (1 - s) -\n       \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n       (exp (b * s) - exp (a * s)) / s))\n  \\<midarrow>0\n  \\<rightarrow> complex_of_real (2 * pi) powr (0 - 1) * Gamma (1 - 0) *\n                \\<i> *\n                (\\<i> powr - 0 * pre_zeta q (1 - 0) -\n                 \\<i> powr 0 * pre_zeta (1 - q) (1 - 0) +\n                 (b - a))\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "have \"?c = perzeta q 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (2 * pi) powr (0 - 1) * Gamma (1 - 0) * \\<i> *\n    (\\<i> powr - 0 * pre_zeta q (1 - 0) -\n     \\<i> powr 0 * pre_zeta (1 - q) (1 - 0) +\n     (b - a)) =\n    perzeta q 0", "using q"], ["proof (prove)\nusing this:\n  q \\<in> {0<..<1}\n\ngoal (1 subgoal):\n 1. complex_of_real (2 * pi) powr (0 - 1) * Gamma (1 - 0) * \\<i> *\n    (\\<i> powr - 0 * pre_zeta q (1 - 0) -\n     \\<i> powr 0 * pre_zeta (1 - q) (1 - 0) +\n     (b - a)) =\n    perzeta q 0", "by (simp add: powr_minus perzeta_def Ln_Reals_eq a_def b_def\n                    Complex_eq mult_ac inverse_eq_divide)"], ["proof (state)\nthis:\n  complex_of_real (2 * pi) powr (0 - 1) * Gamma (1 - 0) * \\<i> *\n  (\\<i> powr - 0 * pre_zeta q (1 - 0) -\n   \\<i> powr 0 * pre_zeta (1 - q) (1 - 0) +\n   (b - a)) =\n  perzeta q 0\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "also"], ["proof (state)\nthis:\n  complex_of_real (2 * pi) powr (0 - 1) * Gamma (1 - 0) * \\<i> *\n  (\\<i> powr - 0 * pre_zeta q (1 - 0) -\n   \\<i> powr 0 * pre_zeta (1 - q) (1 - 0) +\n   (b - a)) =\n  perzeta q 0\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "have \"?f \\<midarrow>0\\<rightarrow> \\<dots> \\<longleftrightarrow> perzeta q \\<midarrow>0\\<rightarrow> \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n        (\\<i> powr - s * pre_zeta q (1 - s) -\n         \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n         (exp (b * s) - exp (a * s)) / s))\n    \\<midarrow>0\\<rightarrow> perzeta q 0 =\n    perzeta q \\<midarrow>0\\<rightarrow> perzeta q 0", "by (rule sym, intro filterlim_cong refl ev)"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      complex_of_real (2 * pi) powr (s - 1) * Gamma (1 - s) * \\<i> *\n      (\\<i> powr - s * pre_zeta q (1 - s) -\n       \\<i> powr s * pre_zeta (1 - q) (1 - s) +\n       (exp (b * s) - exp (a * s)) / s))\n  \\<midarrow>0\\<rightarrow> perzeta q 0 =\n  perzeta q \\<midarrow>0\\<rightarrow> perzeta q 0\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> isCont (perzeta q) s", "finally"], ["proof (chain)\npicking this:\n  perzeta q \\<midarrow>0\\<rightarrow> perzeta q 0", "show \"isCont (perzeta q) s\""], ["proof (prove)\nusing this:\n  perzeta q \\<midarrow>0\\<rightarrow> perzeta q 0\n\ngoal (1 subgoal):\n 1. isCont (perzeta q) s", "by (simp add: isCont_def)"], ["proof (state)\nthis:\n  isCont (perzeta q) s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?s \\<in> \\<nat> \\<Longrightarrow> isCont (perzeta q) ?s\n\ngoal (1 subgoal):\n 1. perzeta q' holomorphic_on A", "have \"perzeta q field_differentiable at s\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. perzeta q field_differentiable at s", "proof (cases \"s \\<in> \\<nat>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. s \\<in> \\<nat> \\<Longrightarrow> perzeta q field_differentiable at s\n 2. s \\<notin> \\<nat> \\<Longrightarrow> perzeta q field_differentiable at s", "case False"], ["proof (state)\nthis:\n  s \\<notin> \\<nat>\n\ngoal (2 subgoals):\n 1. s \\<in> \\<nat> \\<Longrightarrow> perzeta q field_differentiable at s\n 2. s \\<notin> \\<nat> \\<Longrightarrow> perzeta q field_differentiable at s", "with holo"], ["proof (chain)\npicking this:\n  perzeta q holomorphic_on - \\<nat>\n  s \\<notin> \\<nat>", "have \"perzeta q field_differentiable at s within -\\<nat>\""], ["proof (prove)\nusing this:\n  perzeta q holomorphic_on - \\<nat>\n  s \\<notin> \\<nat>\n\ngoal (1 subgoal):\n 1. perzeta q field_differentiable at s within - \\<nat>", "unfolding holomorphic_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>- \\<nat>.\n     perzeta q field_differentiable at x within - \\<nat>\n  s \\<notin> \\<nat>\n\ngoal (1 subgoal):\n 1. perzeta q field_differentiable at s within - \\<nat>", "by blast"], ["proof (state)\nthis:\n  perzeta q field_differentiable at s within - \\<nat>\n\ngoal (2 subgoals):\n 1. s \\<in> \\<nat> \\<Longrightarrow> perzeta q field_differentiable at s\n 2. s \\<notin> \\<nat> \\<Longrightarrow> perzeta q field_differentiable at s", "also"], ["proof (state)\nthis:\n  perzeta q field_differentiable at s within - \\<nat>\n\ngoal (2 subgoals):\n 1. s \\<in> \\<nat> \\<Longrightarrow> perzeta q field_differentiable at s\n 2. s \\<notin> \\<nat> \\<Longrightarrow> perzeta q field_differentiable at s", "have \"at s within -\\<nat> = at s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at s within - \\<nat> = at s", "using False"], ["proof (prove)\nusing this:\n  s \\<notin> \\<nat>\n\ngoal (1 subgoal):\n 1. at s within - \\<nat> = at s", "by (intro at_within_open) auto"], ["proof (state)\nthis:\n  at s within - \\<nat> = at s\n\ngoal (2 subgoals):\n 1. s \\<in> \\<nat> \\<Longrightarrow> perzeta q field_differentiable at s\n 2. s \\<notin> \\<nat> \\<Longrightarrow> perzeta q field_differentiable at s", "finally"], ["proof (chain)\npicking this:\n  perzeta q field_differentiable at s", "show ?thesis"], ["proof (prove)\nusing this:\n  perzeta q field_differentiable at s\n\ngoal (1 subgoal):\n 1. perzeta q field_differentiable at s", "."], ["proof (state)\nthis:\n  perzeta q field_differentiable at s\n\ngoal (1 subgoal):\n 1. s \\<in> \\<nat> \\<Longrightarrow> perzeta q field_differentiable at s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<in> \\<nat> \\<Longrightarrow> perzeta q field_differentiable at s", "case True"], ["proof (state)\nthis:\n  s \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. s \\<in> \\<nat> \\<Longrightarrow> perzeta q field_differentiable at s", "hence *: \"perzeta q holomorphic_on (ball s 1 - {s})\""], ["proof (prove)\nusing this:\n  s \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. perzeta q holomorphic_on ball s 1 - {s}", "by (intro holomorphic_on_subset[OF holo]) (auto elim!: Nats_cases simp: dist_of_nat)"], ["proof (state)\nthis:\n  perzeta q holomorphic_on ball s 1 - {s}\n\ngoal (1 subgoal):\n 1. s \\<in> \\<nat> \\<Longrightarrow> perzeta q field_differentiable at s", "have \"perzeta q holomorphic_on ball s 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perzeta q holomorphic_on ball s 1", "using cont True"], ["proof (prove)\nusing this:\n  ?s \\<in> \\<nat> \\<Longrightarrow> isCont (perzeta q) ?s\n  s \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. perzeta q holomorphic_on ball s 1", "by (intro no_isolated_singularity'[OF _ *])\n         (auto simp: at_within_open[of _ \"ball s 1\"] isCont_def)"], ["proof (state)\nthis:\n  perzeta q holomorphic_on ball s 1\n\ngoal (1 subgoal):\n 1. s \\<in> \\<nat> \\<Longrightarrow> perzeta q field_differentiable at s", "hence \"perzeta q field_differentiable at s within ball s 1\""], ["proof (prove)\nusing this:\n  perzeta q holomorphic_on ball s 1\n\ngoal (1 subgoal):\n 1. perzeta q field_differentiable at s within ball s 1", "unfolding holomorphic_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>ball s 1.\n     perzeta q field_differentiable at x within ball s 1\n\ngoal (1 subgoal):\n 1. perzeta q field_differentiable at s within ball s 1", "by auto"], ["proof (state)\nthis:\n  perzeta q field_differentiable at s within ball s 1\n\ngoal (1 subgoal):\n 1. s \\<in> \\<nat> \\<Longrightarrow> perzeta q field_differentiable at s", "thus ?thesis"], ["proof (prove)\nusing this:\n  perzeta q field_differentiable at s within ball s 1\n\ngoal (1 subgoal):\n 1. perzeta q field_differentiable at s", "by (simp add: at_within_open[of _ \"ball s 1\"])"], ["proof (state)\nthis:\n  perzeta q field_differentiable at s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  perzeta q field_differentiable at ?s\n\ngoal (1 subgoal):\n 1. perzeta q' holomorphic_on A", "hence \"perzeta q holomorphic_on UNIV\""], ["proof (prove)\nusing this:\n  perzeta q field_differentiable at ?s\n\ngoal (1 subgoal):\n 1. perzeta q holomorphic_on UNIV", "by (auto simp: holomorphic_on_def)"], ["proof (state)\nthis:\n  perzeta q holomorphic_on UNIV\n\ngoal (1 subgoal):\n 1. perzeta q' holomorphic_on A", "also"], ["proof (state)\nthis:\n  perzeta q holomorphic_on UNIV\n\ngoal (1 subgoal):\n 1. perzeta q' holomorphic_on A", "have \"perzeta q = perzeta q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perzeta q = perzeta q'", "by (simp add: q_def)"], ["proof (state)\nthis:\n  perzeta q = perzeta q'\n\ngoal (1 subgoal):\n 1. perzeta q' holomorphic_on A", "finally"], ["proof (chain)\npicking this:\n  perzeta q' holomorphic_on UNIV", "show \"perzeta q' holomorphic_on A\""], ["proof (prove)\nusing this:\n  perzeta q' holomorphic_on UNIV\n\ngoal (1 subgoal):\n 1. perzeta q' holomorphic_on A", "by auto"], ["proof (state)\nthis:\n  perzeta q' holomorphic_on A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perzeta_altdef1: \"Re s > 1 \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < Re s \\<Longrightarrow> perzeta q' s = eval_fds (fds_perzeta q') s", "by (cases \"q' \\<in> \\<int>\") (auto simp: perzeta_int eval_fds_zeta fds_perzeta_int perzeta_altdef2)"], ["", "lemma holomorphic_perzeta: \"q \\<notin> \\<int> \\<or> 1 \\<notin> A \\<Longrightarrow> perzeta q holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<notin> \\<int> \\<or> 1 \\<notin> A \\<Longrightarrow>\n    perzeta q holomorphic_on A", "by (cases \"q \\<in> \\<int>\") (auto simp: perzeta_int intro: holomorphic_perzeta' holomorphic_zeta)"], ["", "lemma holomorphic_perzeta'' [holomorphic_intros]:\n  assumes \"f holomorphic_on A\" and \"q \\<notin> \\<int> \\<or> (\\<forall>x\\<in>A. f x \\<noteq> 1)\"\n  shows   \"(\\<lambda>x. perzeta q (f x)) holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. perzeta q (f x)) holomorphic_on A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. perzeta q (f x)) holomorphic_on A", "have \"perzeta q \\<circ> f holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perzeta q \\<circ> f holomorphic_on A", "using assms"], ["proof (prove)\nusing this:\n  f holomorphic_on A\n  q \\<notin> \\<int> \\<or> (\\<forall>x\\<in>A. f x \\<noteq> 1)\n\ngoal (1 subgoal):\n 1. perzeta q \\<circ> f holomorphic_on A", "by (intro holomorphic_on_compose holomorphic_perzeta) auto"], ["proof (state)\nthis:\n  perzeta q \\<circ> f holomorphic_on A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. perzeta q (f x)) holomorphic_on A", "thus ?thesis"], ["proof (prove)\nusing this:\n  perzeta q \\<circ> f holomorphic_on A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. perzeta q (f x)) holomorphic_on A", "by (simp add: o_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. perzeta q (f x)) holomorphic_on A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Using this analytic continuation of the periodic zeta function, Hurwitz's formula now\n  holds (almost) on the entire complex plane.\n\\<close>"], ["", "theorem hurwitz_zeta_formula:\n  fixes a :: real and s :: complex\n  assumes \"a \\<in> {0<..1}\" and \"s \\<noteq> 0\" and \"a \\<noteq> 1 \\<or> s \\<noteq> 1\"\n  shows   \"rGamma s * hurwitz_zeta a (1 - s) =\n             (2 * pi) powr - s * (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (-a) s)\"\n  (is \"?f s = ?g s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (- a) s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (- a) s)", "define A where \"A = UNIV - (if a \\<in> \\<int> then {0, 1} else {0 :: complex})\""], ["proof (state)\nthis:\n  A = UNIV - (if a \\<in> \\<int> then {0, 1} else {0})\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (- a) s)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (- a) s)", "proof (rule analytic_continuation_open[where f = ?f])"], ["proof (state)\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b. rGamma b * hurwitz_zeta a (1 - b)) holomorphic_on ?s'\n 7. (\\<lambda>b.\n        complex_of_real (2 * pi) powr - b *\n        (\\<i> powr - b * perzeta a b +\n         \\<i> powr b * perzeta (- a) b)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       rGamma z * hurwitz_zeta a (1 - z) =\n       complex_of_real (2 * pi) powr - z *\n       (\\<i> powr - z * perzeta a z + \\<i> powr z * perzeta (- a) z)\n 9. s \\<in> ?s'", "show \"?f holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. rGamma b * hurwitz_zeta a (1 - b)) holomorphic_on A", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> {0<..1}\n  s \\<noteq> 0\n  a \\<noteq> 1 \\<or> s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. rGamma b * hurwitz_zeta a (1 - b)) holomorphic_on A", "by (auto intro!: holomorphic_intros simp: A_def)"], ["proof (state)\nthis:\n  (\\<lambda>b. rGamma b * hurwitz_zeta a (1 - b)) holomorphic_on A\n\ngoal (8 subgoals):\n 1. open ?s\n 2. open A\n 3. ?s \\<noteq> {}\n 4. connected A\n 5. ?s \\<subseteq> A\n 6. (\\<lambda>b.\n        complex_of_real (2 * pi) powr - b *\n        (\\<i> powr - b * perzeta a b +\n         \\<i> powr b * perzeta (- a) b)) holomorphic_on\n    A\n 7. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       rGamma z * hurwitz_zeta a (1 - z) =\n       complex_of_real (2 * pi) powr - z *\n       (\\<i> powr - z * perzeta a z + \\<i> powr z * perzeta (- a) z)\n 8. s \\<in> A", "show \"?g holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        complex_of_real (2 * pi) powr - b *\n        (\\<i> powr - b * perzeta a b +\n         \\<i> powr b * perzeta (- a) b)) holomorphic_on\n    A", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> {0<..1}\n  s \\<noteq> 0\n  a \\<noteq> 1 \\<or> s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        complex_of_real (2 * pi) powr - b *\n        (\\<i> powr - b * perzeta a b +\n         \\<i> powr b * perzeta (- a) b)) holomorphic_on\n    A", "by (auto intro!: holomorphic_intros simp: A_def minus_in_Ints_iff)"], ["proof (state)\nthis:\n  (\\<lambda>b.\n      complex_of_real (2 * pi) powr - b *\n      (\\<i> powr - b * perzeta a b +\n       \\<i> powr b * perzeta (- a) b)) holomorphic_on\n  A\n\ngoal (7 subgoals):\n 1. open ?s\n 2. open A\n 3. ?s \\<noteq> {}\n 4. connected A\n 5. ?s \\<subseteq> A\n 6. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       rGamma z * hurwitz_zeta a (1 - z) =\n       complex_of_real (2 * pi) powr - z *\n       (\\<i> powr - z * perzeta a z + \\<i> powr z * perzeta (- a) z)\n 7. s \\<in> A", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. open ?s\n 2. open A\n 3. ?s \\<noteq> {}\n 4. connected A\n 5. ?s \\<subseteq> A\n 6. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       rGamma z * hurwitz_zeta a (1 - z) =\n       complex_of_real (2 * pi) powr - z *\n       (\\<i> powr - z * perzeta a z + \\<i> powr z * perzeta (- a) z)\n 7. s \\<in> A", "fix s"], ["proof (state)\ngoal (7 subgoals):\n 1. open ?s\n 2. open A\n 3. ?s \\<noteq> {}\n 4. connected A\n 5. ?s \\<subseteq> A\n 6. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       rGamma z * hurwitz_zeta a (1 - z) =\n       complex_of_real (2 * pi) powr - z *\n       (\\<i> powr - z * perzeta a z + \\<i> powr z * perzeta (- a) z)\n 7. s \\<in> A", "assume \"s \\<in> {s. Re s > 1}\""], ["proof (state)\nthis:\n  s \\<in> {s. 1 < Re s}\n\ngoal (7 subgoals):\n 1. open ?s\n 2. open A\n 3. ?s \\<noteq> {}\n 4. connected A\n 5. ?s \\<subseteq> A\n 6. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       rGamma z * hurwitz_zeta a (1 - z) =\n       complex_of_real (2 * pi) powr - z *\n       (\\<i> powr - z * perzeta a z + \\<i> powr z * perzeta (- a) z)\n 7. s \\<in> A", "thus \"?f s = ?g s\""], ["proof (prove)\nusing this:\n  s \\<in> {s. 1 < Re s}\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (- a) s)", "using hurwitz_zeta_formula_aux[of a s] assms"], ["proof (prove)\nusing this:\n  s \\<in> {s. 1 < Re s}\n  \\<lbrakk>a \\<in> {0<..1}; 1 < Re s\\<rbrakk>\n  \\<Longrightarrow> rGamma s * hurwitz_zeta a (1 - s) =\n                    complex_of_real (2 * pi) powr - s *\n                    (\\<i> powr - s * eval_fds (fds_perzeta a) s +\n                     \\<i> powr s * eval_fds (fds_perzeta (- a)) s)\n  a \\<in> {0<..1}\n  s \\<noteq> 0\n  a \\<noteq> 1 \\<or> s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (- a) s)", "by (simp add: perzeta_altdef1)"], ["proof (state)\nthis:\n  rGamma s * hurwitz_zeta a (1 - s) =\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (- a) s)\n\ngoal (6 subgoals):\n 1. open {s. 1 < Re s}\n 2. open A\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected A\n 5. {s. 1 < Re s} \\<subseteq> A\n 6. s \\<in> A", "qed (insert assms, auto simp: open_halfspace_Re_gt A_def elim!: Ints_cases\n                           intro: connected_open_delete_finite exI[of _ 2])"], ["proof (state)\nthis:\n  rGamma s * hurwitz_zeta a (1 - s) =\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (- a) s)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The equation expressing the periodic zeta function in terms of the Hurwitz zeta function\n  can be extened similarly.\n\\<close>"], ["", "theorem perzeta_conv_hurwitz_zeta:\n  fixes a :: real and s :: complex\n  assumes \"a \\<in> {0<..<1}\" and \"s \\<noteq> 0\"\n  shows   \"rGamma (1 - s) * perzeta a s =\n             (2 * pi) powr (s - 1) * \\<i> * (\\<i> powr (-s) * hurwitz_zeta a (1 - s) -\n                                         \\<i> powr s * hurwitz_zeta (1 - a) (1 - s))\"\n  (is \"?f s = ?g s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. rGamma (1 - s) * perzeta a s =\n    complex_of_real (2 * pi) powr (s - 1) * \\<i> *\n    (\\<i> powr - s * hurwitz_zeta a (1 - s) -\n     \\<i> powr s * hurwitz_zeta (1 - a) (1 - s))", "proof (rule analytic_continuation_open[where f = ?f])"], ["proof (state)\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b. rGamma (1 - b) * perzeta a b) holomorphic_on ?s'\n 7. (\\<lambda>b.\n        complex_of_real (2 * pi) powr (b - 1) * \\<i> *\n        (\\<i> powr - b * hurwitz_zeta a (1 - b) -\n         \\<i> powr b * hurwitz_zeta (1 - a) (1 - b))) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       rGamma (1 - z) * perzeta a z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 9. s \\<in> ?s'", "show \"?f holomorphic_on -{0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. rGamma (1 - b) * perzeta a b) holomorphic_on - {0}", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> {0<..<1}\n  s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. rGamma (1 - b) * perzeta a b) holomorphic_on - {0}", "by (auto intro!: holomorphic_intros elim: Ints_cases)"], ["proof (state)\nthis:\n  (\\<lambda>b. rGamma (1 - b) * perzeta a b) holomorphic_on - {0}\n\ngoal (8 subgoals):\n 1. open ?s\n 2. open (- {0})\n 3. ?s \\<noteq> {}\n 4. connected (- {0})\n 5. ?s \\<subseteq> - {0}\n 6. (\\<lambda>b.\n        complex_of_real (2 * pi) powr (b - 1) * \\<i> *\n        (\\<i> powr - b * hurwitz_zeta a (1 - b) -\n         \\<i> powr b * hurwitz_zeta (1 - a) (1 - b))) holomorphic_on\n    - {0}\n 7. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       rGamma (1 - z) * perzeta a z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 8. s \\<in> - {0}", "show \"?g holomorphic_on -{0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        complex_of_real (2 * pi) powr (b - 1) * \\<i> *\n        (\\<i> powr - b * hurwitz_zeta a (1 - b) -\n         \\<i> powr b * hurwitz_zeta (1 - a) (1 - b))) holomorphic_on\n    - {0}", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> {0<..<1}\n  s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        complex_of_real (2 * pi) powr (b - 1) * \\<i> *\n        (\\<i> powr - b * hurwitz_zeta a (1 - b) -\n         \\<i> powr b * hurwitz_zeta (1 - a) (1 - b))) holomorphic_on\n    - {0}", "by (auto intro!: holomorphic_intros)"], ["proof (state)\nthis:\n  (\\<lambda>b.\n      complex_of_real (2 * pi) powr (b - 1) * \\<i> *\n      (\\<i> powr - b * hurwitz_zeta a (1 - b) -\n       \\<i> powr b * hurwitz_zeta (1 - a) (1 - b))) holomorphic_on\n  - {0}\n\ngoal (7 subgoals):\n 1. open ?s\n 2. open (- {0})\n 3. ?s \\<noteq> {}\n 4. connected (- {0})\n 5. ?s \\<subseteq> - {0}\n 6. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       rGamma (1 - z) * perzeta a z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 7. s \\<in> - {0}", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. open ?s\n 2. open (- {0})\n 3. ?s \\<noteq> {}\n 4. connected (- {0})\n 5. ?s \\<subseteq> - {0}\n 6. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       rGamma (1 - z) * perzeta a z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 7. s \\<in> - {0}", "fix s"], ["proof (state)\ngoal (7 subgoals):\n 1. open ?s\n 2. open (- {0})\n 3. ?s \\<noteq> {}\n 4. connected (- {0})\n 5. ?s \\<subseteq> - {0}\n 6. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       rGamma (1 - z) * perzeta a z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 7. s \\<in> - {0}", "assume \"s \\<in> {s. Re s > 1}\""], ["proof (state)\nthis:\n  s \\<in> {s. 1 < Re s}\n\ngoal (7 subgoals):\n 1. open ?s\n 2. open (- {0})\n 3. ?s \\<noteq> {}\n 4. connected (- {0})\n 5. ?s \\<subseteq> - {0}\n 6. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       rGamma (1 - z) * perzeta a z =\n       complex_of_real (2 * pi) powr (z - 1) * \\<i> *\n       (\\<i> powr - z * hurwitz_zeta a (1 - z) -\n        \\<i> powr z * hurwitz_zeta (1 - a) (1 - z))\n 7. s \\<in> - {0}", "thus \"?f s = ?g s\""], ["proof (prove)\nusing this:\n  s \\<in> {s. 1 < Re s}\n\ngoal (1 subgoal):\n 1. rGamma (1 - s) * perzeta a s =\n    complex_of_real (2 * pi) powr (s - 1) * \\<i> *\n    (\\<i> powr - s * hurwitz_zeta a (1 - s) -\n     \\<i> powr s * hurwitz_zeta (1 - a) (1 - s))", "using perzeta_conv_hurwitz_zeta_aux[of a s] assms"], ["proof (prove)\nusing this:\n  s \\<in> {s. 1 < Re s}\n  \\<lbrakk>a \\<in> {0<..<1}; 0 < Re s\\<rbrakk>\n  \\<Longrightarrow> rGamma (1 - s) * eval_fds (fds_perzeta a) s =\n                    complex_of_real (2 * pi) powr (s - 1) * \\<i> *\n                    (\\<i> powr - s * hurwitz_zeta a (1 - s) -\n                     \\<i> powr s * hurwitz_zeta (1 - a) (1 - s))\n  a \\<in> {0<..<1}\n  s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. rGamma (1 - s) * perzeta a s =\n    complex_of_real (2 * pi) powr (s - 1) * \\<i> *\n    (\\<i> powr - s * hurwitz_zeta a (1 - s) -\n     \\<i> powr s * hurwitz_zeta (1 - a) (1 - s))", "by (simp add: perzeta_altdef1)"], ["proof (state)\nthis:\n  rGamma (1 - s) * perzeta a s =\n  complex_of_real (2 * pi) powr (s - 1) * \\<i> *\n  (\\<i> powr - s * hurwitz_zeta a (1 - s) -\n   \\<i> powr s * hurwitz_zeta (1 - a) (1 - s))\n\ngoal (6 subgoals):\n 1. open {s. 1 < Re s}\n 2. open (- {0})\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected (- {0})\n 5. {s. 1 < Re s} \\<subseteq> - {0}\n 6. s \\<in> - {0}", "qed (insert assms, auto simp: open_halfspace_Re_gt connected_punctured_universe intro: exI[of _ 2])"], ["", "text \\<open>\n  As a simple corollary, we derive the reflection formula for the Riemann zeta function:\n\\<close>"], ["", "corollary zeta_reflect:\n  fixes s :: complex\n  assumes \"s \\<noteq> 0\" \"s \\<noteq> 1\"\n  shows   \"rGamma s * zeta (1 - s) = 2 * (2 * pi) powr -s * cos (s * pi / 2) * zeta s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rGamma s * zeta (1 - s) =\n    2 * complex_of_real (2 * pi) powr - s *\n    cos (s * complex_of_real pi / 2) *\n    zeta s", "using hurwitz_zeta_formula[of 1 s] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 \\<in> {0<..1}; s \\<noteq> 0;\n   1 \\<noteq> 1 \\<or> s \\<noteq> 1\\<rbrakk>\n  \\<Longrightarrow> rGamma s * hurwitz_zeta 1 (1 - s) =\n                    complex_of_real (2 * pi) powr - s *\n                    (\\<i> powr - s * perzeta 1 s +\n                     \\<i> powr s * perzeta (- 1) s)\n  s \\<noteq> 0\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. rGamma s * zeta (1 - s) =\n    2 * complex_of_real (2 * pi) powr - s *\n    cos (s * complex_of_real pi / 2) *\n    zeta s", "by (simp add: zeta_def cos_exp_eq powr_def perzeta_int algebra_simps)"], ["", "corollary zeta_reflect':\n  fixes s :: complex\n  assumes \"s \\<noteq> 0\" \"s \\<noteq> 1\"\n  shows   \"rGamma (1 - s) * zeta s = 2 * (2 * pi) powr (s - 1) * sin (s * pi / 2) * zeta (1 - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rGamma (1 - s) * zeta s =\n    2 * complex_of_real (2 * pi) powr (s - 1) *\n    sin (s * complex_of_real pi / 2) *\n    zeta (1 - s)", "using zeta_reflect[of \"1 - s\"] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 - s \\<noteq> 0; 1 - s \\<noteq> 1\\<rbrakk>\n  \\<Longrightarrow> rGamma (1 - s) * zeta (1 - (1 - s)) =\n                    2 * complex_of_real (2 * pi) powr - (1 - s) *\n                    cos ((1 - s) * complex_of_real pi / 2) *\n                    zeta (1 - s)\n  s \\<noteq> 0\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. rGamma (1 - s) * zeta s =\n    2 * complex_of_real (2 * pi) powr (s - 1) *\n    sin (s * complex_of_real pi / 2) *\n    zeta (1 - s)", "by (simp add: cos_sin_eq field_simps)"], ["", "text \\<open>\n  It is now easy to see that all the non-trivial zeroes of the Riemann zeta function must lie\n  the critical strip $(0;1)$, and they must be symmetric around the\n  $\\mathfrak{R}(z) = \\frac{1}{2}$ line.\n\\<close>"], ["", "corollary zeta_zeroD:\n  assumes \"zeta s = 0\" \"s \\<noteq> 1\"\n  shows   \"Re s \\<in> {0<..<1} \\<or> (\\<exists>n::nat. n > 0 \\<and> even n \\<and> s = -real n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "proof (cases \"Re s \\<le> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))\n 2. \\<not> Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "case False"], ["proof (state)\nthis:\n  \\<not> Re s \\<le> 0\n\ngoal (2 subgoals):\n 1. Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))\n 2. \\<not> Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "with zeta_Re_ge_1_nonzero[of s] assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>1 \\<le> Re s; s \\<noteq> 1\\<rbrakk>\n  \\<Longrightarrow> zeta s \\<noteq> 0\n  zeta s = 0\n  s \\<noteq> 1\n  \\<not> Re s \\<le> 0", "have \"Re s < 1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>1 \\<le> Re s; s \\<noteq> 1\\<rbrakk>\n  \\<Longrightarrow> zeta s \\<noteq> 0\n  zeta s = 0\n  s \\<noteq> 1\n  \\<not> Re s \\<le> 0\n\ngoal (1 subgoal):\n 1. Re s < 1", "by (cases \"Re s < 1\") auto"], ["proof (state)\nthis:\n  Re s < 1\n\ngoal (2 subgoals):\n 1. Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))\n 2. \\<not> Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "with False"], ["proof (chain)\npicking this:\n  \\<not> Re s \\<le> 0\n  Re s < 1", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> Re s \\<le> 0\n  Re s < 1\n\ngoal (1 subgoal):\n 1. Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "by simp"], ["proof (state)\nthis:\n  Re s \\<in> {0<..<1} \\<or>\n  (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))\n\ngoal (1 subgoal):\n 1. Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "case True"], ["proof (state)\nthis:\n  Re s \\<le> 0\n\ngoal (1 subgoal):\n 1. Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "{"], ["proof (state)\nthis:\n  Re s \\<le> 0\n\ngoal (1 subgoal):\n 1. Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "assume *: \"\\<And>n. n > 0 \\<Longrightarrow> even n \\<Longrightarrow> s \\<noteq> -real n\""], ["proof (state)\nthis:\n  \\<lbrakk>0 < ?n; even ?n\\<rbrakk>\n  \\<Longrightarrow> s \\<noteq> complex_of_real (- real ?n)\n\ngoal (1 subgoal):\n 1. Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "have \"s \\<noteq> of_int n\" for n :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<noteq> of_int n", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. s = of_int n \\<Longrightarrow> False", "assume [simp]: \"s = of_int n\""], ["proof (state)\nthis:\n  s = of_int n\n\ngoal (1 subgoal):\n 1. s = of_int n \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases n \"0::int\" rule: linorder_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. n < 0 \\<Longrightarrow> False\n 2. n = 0 \\<Longrightarrow> False\n 3. 0 < n \\<Longrightarrow> False", "assume \"n < 0\""], ["proof (state)\nthis:\n  n < 0\n\ngoal (3 subgoals):\n 1. n < 0 \\<Longrightarrow> False\n 2. n = 0 \\<Longrightarrow> False\n 3. 0 < n \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"even n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow> False\n 2. odd n \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  even n\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow> False\n 2. odd n \\<Longrightarrow> False", "hence \"nat (-n) > 0\" \"even (nat (-n))\""], ["proof (prove)\nusing this:\n  even n\n\ngoal (1 subgoal):\n 1. 0 < nat (- n) &&& even (nat (- n))", "using \\<open>n < 0\\<close>"], ["proof (prove)\nusing this:\n  even n\n  n < 0\n\ngoal (1 subgoal):\n 1. 0 < nat (- n) &&& even (nat (- n))", "by (auto simp: even_nat_iff)"], ["proof (state)\nthis:\n  0 < nat (- n)\n  even (nat (- n))\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow> False\n 2. odd n \\<Longrightarrow> False", "with *"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < ?n; even ?n\\<rbrakk>\n  \\<Longrightarrow> s \\<noteq> complex_of_real (- real ?n)\n  0 < nat (- n)\n  even (nat (- n))", "have \"s \\<noteq> -real (nat (-n))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?n; even ?n\\<rbrakk>\n  \\<Longrightarrow> s \\<noteq> complex_of_real (- real ?n)\n  0 < nat (- n)\n  even (nat (- n))\n\ngoal (1 subgoal):\n 1. s \\<noteq> complex_of_real (- real (nat (- n)))", "."], ["proof (state)\nthis:\n  s \\<noteq> complex_of_real (- real (nat (- n)))\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow> False\n 2. odd n \\<Longrightarrow> False", "with \\<open>n < 0\\<close> and True"], ["proof (chain)\npicking this:\n  n < 0\n  even n\n  s \\<noteq> complex_of_real (- real (nat (- n)))", "show False"], ["proof (prove)\nusing this:\n  n < 0\n  even n\n  s \\<noteq> complex_of_real (- real (nat (- n)))\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  odd n\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> False", "with \\<open>n < 0\\<close>"], ["proof (chain)\npicking this:\n  n < 0\n  odd n", "have \"of_int n = (-of_nat (nat (-n)) :: complex)\""], ["proof (prove)\nusing this:\n  n < 0\n  odd n\n\ngoal (1 subgoal):\n 1. of_int n = - of_nat (nat (- n))", "by simp"], ["proof (state)\nthis:\n  of_int n = - of_nat (nat (- n))\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  of_int n = - of_nat (nat (- n))\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> False", "have \"zeta \\<dots> = -(bernoulli' (Suc (nat (-n)))) / of_nat (Suc (nat (-n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta (- of_nat (nat (- n))) =\n    complex_of_real\n     (- bernoulli' (Suc (nat (- n))) / real (Suc (nat (- n))))", "using \\<open>n < 0\\<close>"], ["proof (prove)\nusing this:\n  n < 0\n\ngoal (1 subgoal):\n 1. zeta (- of_nat (nat (- n))) =\n    complex_of_real\n     (- bernoulli' (Suc (nat (- n))) / real (Suc (nat (- n))))", "by (subst zeta_neg_of_nat) (auto)"], ["proof (state)\nthis:\n  zeta (- of_nat (nat (- n))) =\n  complex_of_real (- bernoulli' (Suc (nat (- n))) / real (Suc (nat (- n))))\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  zeta (of_int n) =\n  complex_of_real (- bernoulli' (Suc (nat (- n))) / real (Suc (nat (- n))))", "have \"bernoulli' (Suc (nat (-n))) = 0\""], ["proof (prove)\nusing this:\n  zeta (of_int n) =\n  complex_of_real (- bernoulli' (Suc (nat (- n))) / real (Suc (nat (- n))))\n\ngoal (1 subgoal):\n 1. bernoulli' (Suc (nat (- n))) = 0", "using assms"], ["proof (prove)\nusing this:\n  zeta (of_int n) =\n  complex_of_real (- bernoulli' (Suc (nat (- n))) / real (Suc (nat (- n))))\n  zeta s = 0\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. bernoulli' (Suc (nat (- n))) = 0", "by (auto simp del: of_nat_Suc)"], ["proof (state)\nthis:\n  bernoulli' (Suc (nat (- n))) = 0\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> False", "with False and \\<open>n < 0\\<close>"], ["proof (chain)\npicking this:\n  odd n\n  n < 0\n  bernoulli' (Suc (nat (- n))) = 0", "show False"], ["proof (prove)\nusing this:\n  odd n\n  n < 0\n  bernoulli' (Suc (nat (- n))) = 0\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: bernoulli'_zero_iff even_nat_iff)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> False\n 2. 0 < n \\<Longrightarrow> False", "qed (insert assms True, auto)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<noteq> of_int ?n\n\ngoal (1 subgoal):\n 1. Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "hence \"rGamma s \\<noteq> 0\""], ["proof (prove)\nusing this:\n  s \\<noteq> of_int ?n\n\ngoal (1 subgoal):\n 1. rGamma s \\<noteq> 0", "by (auto simp: rGamma_eq_zero_iff nonpos_Ints_def)"], ["proof (state)\nthis:\n  rGamma s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "moreover"], ["proof (state)\nthis:\n  rGamma s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "from assms"], ["proof (chain)\npicking this:\n  zeta s = 0\n  s \\<noteq> 1", "have [simp]: \"s \\<noteq> 0\""], ["proof (prove)\nusing this:\n  zeta s = 0\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. s \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "ultimately"], ["proof (chain)\npicking this:\n  rGamma s \\<noteq> 0\n  s \\<noteq> 0", "have \"zeta (1 - s) = 0\""], ["proof (prove)\nusing this:\n  rGamma s \\<noteq> 0\n  s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. zeta (1 - s) = 0", "using zeta_reflect[of s] and assms"], ["proof (prove)\nusing this:\n  rGamma s \\<noteq> 0\n  s \\<noteq> 0\n  \\<lbrakk>s \\<noteq> 0; s \\<noteq> 1\\<rbrakk>\n  \\<Longrightarrow> rGamma s * zeta (1 - s) =\n                    2 * complex_of_real (2 * pi) powr - s *\n                    cos (s * complex_of_real pi / 2) *\n                    zeta s\n  zeta s = 0\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. zeta (1 - s) = 0", "by auto"], ["proof (state)\nthis:\n  zeta (1 - s) = 0\n\ngoal (1 subgoal):\n 1. Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "with True zeta_Re_ge_1_nonzero[of \"1 - s\"]"], ["proof (chain)\npicking this:\n  Re s \\<le> 0\n  \\<lbrakk>1 \\<le> Re (1 - s); 1 - s \\<noteq> 1\\<rbrakk>\n  \\<Longrightarrow> zeta (1 - s) \\<noteq> 0\n  zeta (1 - s) = 0", "have \"Re s > 0\""], ["proof (prove)\nusing this:\n  Re s \\<le> 0\n  \\<lbrakk>1 \\<le> Re (1 - s); 1 - s \\<noteq> 1\\<rbrakk>\n  \\<Longrightarrow> zeta (1 - s) \\<noteq> 0\n  zeta (1 - s) = 0\n\ngoal (1 subgoal):\n 1. 0 < Re s", "by auto"], ["proof (state)\nthis:\n  0 < Re s\n\ngoal (1 subgoal):\n 1. Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "}"], ["proof (state)\nthis:\n  (\\<And>n.\n      \\<lbrakk>0 < n; even n\\<rbrakk>\n      \\<Longrightarrow> s \\<noteq>\n                        complex_of_real (- real n)) \\<Longrightarrow>\n  0 < Re s\n\ngoal (1 subgoal):\n 1. Re s \\<le> 0 \\<Longrightarrow>\n    Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "with True"], ["proof (chain)\npicking this:\n  Re s \\<le> 0\n  (\\<And>n.\n      \\<lbrakk>0 < n; even n\\<rbrakk>\n      \\<Longrightarrow> s \\<noteq>\n                        complex_of_real (- real n)) \\<Longrightarrow>\n  0 < Re s", "show ?thesis"], ["proof (prove)\nusing this:\n  Re s \\<le> 0\n  (\\<And>n.\n      \\<lbrakk>0 < n; even n\\<rbrakk>\n      \\<Longrightarrow> s \\<noteq>\n                        complex_of_real (- real n)) \\<Longrightarrow>\n  0 < Re s\n\ngoal (1 subgoal):\n 1. Re s \\<in> {0<..<1} \\<or>\n    (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))", "by auto"], ["proof (state)\nthis:\n  Re s \\<in> {0<..<1} \\<or>\n  (\\<exists>n>0. even n \\<and> s = complex_of_real (- real n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma zeta_zero_reflect:\n  assumes \"Re s \\<in> {0<..<1}\" and \"zeta s = 0\"\n  shows   \"zeta (1 - s) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zeta (1 - s) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. zeta (1 - s) = 0", "from assms"], ["proof (chain)\npicking this:\n  Re s \\<in> {0<..<1}\n  zeta s = 0", "have \"rGamma s \\<noteq> 0\""], ["proof (prove)\nusing this:\n  Re s \\<in> {0<..<1}\n  zeta s = 0\n\ngoal (1 subgoal):\n 1. rGamma s \\<noteq> 0", "by (auto simp: rGamma_eq_zero_iff elim!: nonpos_Ints_cases)"], ["proof (state)\nthis:\n  rGamma s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. zeta (1 - s) = 0", "moreover"], ["proof (state)\nthis:\n  rGamma s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. zeta (1 - s) = 0", "from assms"], ["proof (chain)\npicking this:\n  Re s \\<in> {0<..<1}\n  zeta s = 0", "have \"s \\<noteq> 0\" and \"s \\<noteq> 1\""], ["proof (prove)\nusing this:\n  Re s \\<in> {0<..<1}\n  zeta s = 0\n\ngoal (1 subgoal):\n 1. s \\<noteq> 0 &&& s \\<noteq> 1", "by auto"], ["proof (state)\nthis:\n  s \\<noteq> 0\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. zeta (1 - s) = 0", "ultimately"], ["proof (chain)\npicking this:\n  rGamma s \\<noteq> 0\n  s \\<noteq> 0\n  s \\<noteq> 1", "show ?thesis"], ["proof (prove)\nusing this:\n  rGamma s \\<noteq> 0\n  s \\<noteq> 0\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. zeta (1 - s) = 0", "using zeta_reflect[of s] and assms"], ["proof (prove)\nusing this:\n  rGamma s \\<noteq> 0\n  s \\<noteq> 0\n  s \\<noteq> 1\n  \\<lbrakk>s \\<noteq> 0; s \\<noteq> 1\\<rbrakk>\n  \\<Longrightarrow> rGamma s * zeta (1 - s) =\n                    2 * complex_of_real (2 * pi) powr - s *\n                    cos (s * complex_of_real pi / 2) *\n                    zeta s\n  Re s \\<in> {0<..<1}\n  zeta s = 0\n\ngoal (1 subgoal):\n 1. zeta (1 - s) = 0", "by auto"], ["proof (state)\nthis:\n  zeta (1 - s) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary zeta_zero_reflect_iff:\n  assumes \"Re s \\<in> {0<..<1}\"\n  shows   \"zeta (1 - s) = 0 \\<longleftrightarrow> zeta s = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (zeta (1 - s) = 0) = (zeta s = 0)", "using zeta_zero_reflect[of s] zeta_zero_reflect[of \"1 - s\"] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>Re s \\<in> {0<..<1}; zeta s = 0\\<rbrakk>\n  \\<Longrightarrow> zeta (1 - s) = 0\n  \\<lbrakk>Re (1 - s) \\<in> {0<..<1}; zeta (1 - s) = 0\\<rbrakk>\n  \\<Longrightarrow> zeta (1 - (1 - s)) = 0\n  Re s \\<in> {0<..<1}\n\ngoal (1 subgoal):\n 1. (zeta (1 - s) = 0) = (zeta s = 0)", "by auto"], ["", "subsection \\<open>More functional equations\\<close>"], ["", "lemma perzeta_conv_hurwitz_zeta_multiplication:\n  fixes k :: nat and a :: int and s :: complex\n  assumes \"k > 0\" \"s \\<noteq> 1\"\n  shows   \"k powr s * perzeta (a / k) s =\n             (\\<Sum>n=1..k. exp (2 * pi * n * a / k * \\<i>) * hurwitz_zeta (n / k) s)\"\n  (is \"?lhs s = ?rhs s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat k powr s * perzeta (real_of_int a / real k) s =\n    (\\<Sum>n = 1..k.\n        exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n             \\<i>) *\n        hurwitz_zeta (real n / real k) s)", "proof (rule analytic_continuation_open[where ?f = ?lhs and ?g = ?rhs])"], ["proof (state)\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. (\\<lambda>b.\n        of_nat k powr b * perzeta (real_of_int a / real k) b) holomorphic_on\n    ?s'\n 7. (\\<lambda>b.\n        \\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           hurwitz_zeta (real n / real k) b) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       of_nat k powr z * perzeta (real_of_int a / real k) z =\n       (\\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           hurwitz_zeta (real n / real k) z)\n 9. s \\<in> ?s'", "show \"connected (-{1::complex})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected (- {1})", "by (rule connected_punctured_universe) auto"], ["proof (state)\nthis:\n  connected (- {1})\n\ngoal (8 subgoals):\n 1. open ?s\n 2. open (- {1})\n 3. ?s \\<noteq> {}\n 4. ?s \\<subseteq> - {1}\n 5. (\\<lambda>b.\n        of_nat k powr b * perzeta (real_of_int a / real k) b) holomorphic_on\n    - {1}\n 6. (\\<lambda>b.\n        \\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           hurwitz_zeta (real n / real k) b) holomorphic_on\n    - {1}\n 7. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       of_nat k powr z * perzeta (real_of_int a / real k) z =\n       (\\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           hurwitz_zeta (real n / real k) z)\n 8. s \\<in> - {1}", "show \"{s. Re s > 1} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {s. 1 < Re s} \\<noteq> {}", "by (auto intro!: exI[of _ 2])"], ["proof (state)\nthis:\n  {s. 1 < Re s} \\<noteq> {}\n\ngoal (7 subgoals):\n 1. open {s. 1 < Re s}\n 2. open (- {1})\n 3. {s. 1 < Re s} \\<subseteq> - {1}\n 4. (\\<lambda>b.\n        of_nat k powr b * perzeta (real_of_int a / real k) b) holomorphic_on\n    - {1}\n 5. (\\<lambda>b.\n        \\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           hurwitz_zeta (real n / real k) b) holomorphic_on\n    - {1}\n 6. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       of_nat k powr z * perzeta (real_of_int a / real k) z =\n       (\\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           hurwitz_zeta (real n / real k) z)\n 7. s \\<in> - {1}", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. open {s. 1 < Re s}\n 2. open (- {1})\n 3. {s. 1 < Re s} \\<subseteq> - {1}\n 4. (\\<lambda>b.\n        of_nat k powr b * perzeta (real_of_int a / real k) b) holomorphic_on\n    - {1}\n 5. (\\<lambda>b.\n        \\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           hurwitz_zeta (real n / real k) b) holomorphic_on\n    - {1}\n 6. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       of_nat k powr z * perzeta (real_of_int a / real k) z =\n       (\\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           hurwitz_zeta (real n / real k) z)\n 7. s \\<in> - {1}", "fix s"], ["proof (state)\ngoal (7 subgoals):\n 1. open {s. 1 < Re s}\n 2. open (- {1})\n 3. {s. 1 < Re s} \\<subseteq> - {1}\n 4. (\\<lambda>b.\n        of_nat k powr b * perzeta (real_of_int a / real k) b) holomorphic_on\n    - {1}\n 5. (\\<lambda>b.\n        \\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           hurwitz_zeta (real n / real k) b) holomorphic_on\n    - {1}\n 6. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       of_nat k powr z * perzeta (real_of_int a / real k) z =\n       (\\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           hurwitz_zeta (real n / real k) z)\n 7. s \\<in> - {1}", "assume s: \"s \\<in> {s. Re s > 1}\""], ["proof (state)\nthis:\n  s \\<in> {s. 1 < Re s}\n\ngoal (7 subgoals):\n 1. open {s. 1 < Re s}\n 2. open (- {1})\n 3. {s. 1 < Re s} \\<subseteq> - {1}\n 4. (\\<lambda>b.\n        of_nat k powr b * perzeta (real_of_int a / real k) b) holomorphic_on\n    - {1}\n 5. (\\<lambda>b.\n        \\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           hurwitz_zeta (real n / real k) b) holomorphic_on\n    - {1}\n 6. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       of_nat k powr z * perzeta (real_of_int a / real k) z =\n       (\\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           hurwitz_zeta (real n / real k) z)\n 7. s \\<in> - {1}", "let ?f = \"\\<lambda>n. exp (2 * pi * n * a / k * \\<i>)\""], ["proof (state)\ngoal (7 subgoals):\n 1. open {s. 1 < Re s}\n 2. open (- {1})\n 3. {s. 1 < Re s} \\<subseteq> - {1}\n 4. (\\<lambda>b.\n        of_nat k powr b * perzeta (real_of_int a / real k) b) holomorphic_on\n    - {1}\n 5. (\\<lambda>b.\n        \\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           hurwitz_zeta (real n / real k) b) holomorphic_on\n    - {1}\n 6. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       of_nat k powr z * perzeta (real_of_int a / real k) z =\n       (\\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           hurwitz_zeta (real n / real k) z)\n 7. s \\<in> - {1}", "show \"?lhs s = ?rhs s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat k powr s * perzeta (real_of_int a / real k) s =\n    (\\<Sum>n = 1..k.\n        exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n             \\<i>) *\n        hurwitz_zeta (real n / real k) s)", "proof (rule sums_unique2)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?f sums (of_nat k powr s * perzeta (real_of_int a / real k) s)\n 2. ?f sums\n    (\\<Sum>n = 1..k.\n        exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n             \\<i>) *\n        hurwitz_zeta (real n / real k) s)", "have \"(\\<lambda>m. \\<Sum>n=1..k. ?f n * (of_nat m + of_real (real n / real k)) powr -s) sums\n            (\\<Sum>n=1..k. ?f n * hurwitz_zeta (real n / real k) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        \\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           (of_nat m + complex_of_real (real n / real k)) powr - s) sums\n    (\\<Sum>n = 1..k.\n        exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n             \\<i>) *\n        hurwitz_zeta (real n / real k) s)", "using assms s"], ["proof (prove)\nusing this:\n  0 < k\n  s \\<noteq> 1\n  s \\<in> {s. 1 < Re s}\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        \\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           (of_nat m + complex_of_real (real n / real k)) powr - s) sums\n    (\\<Sum>n = 1..k.\n        exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n             \\<i>) *\n        hurwitz_zeta (real n / real k) s)", "by (intro sums_sum sums_mult sums_hurwitz_zeta) auto"], ["proof (state)\nthis:\n  (\\<lambda>m.\n      \\<Sum>n = 1..k.\n         exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n              \\<i>) *\n         (of_nat m + complex_of_real (real n / real k)) powr - s) sums\n  (\\<Sum>n = 1..k.\n      exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n           \\<i>) *\n      hurwitz_zeta (real n / real k) s)\n\ngoal (2 subgoals):\n 1. ?f sums (of_nat k powr s * perzeta (real_of_int a / real k) s)\n 2. ?f sums\n    (\\<Sum>n = 1..k.\n        exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n             \\<i>) *\n        hurwitz_zeta (real n / real k) s)", "also"], ["proof (state)\nthis:\n  (\\<lambda>m.\n      \\<Sum>n = 1..k.\n         exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n              \\<i>) *\n         (of_nat m + complex_of_real (real n / real k)) powr - s) sums\n  (\\<Sum>n = 1..k.\n      exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n           \\<i>) *\n      hurwitz_zeta (real n / real k) s)\n\ngoal (2 subgoals):\n 1. ?f sums (of_nat k powr s * perzeta (real_of_int a / real k) s)\n 2. ?f sums\n    (\\<Sum>n = 1..k.\n        exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n             \\<i>) *\n        hurwitz_zeta (real n / real k) s)", "have \"(\\<lambda>m. \\<Sum>n=1..k. ?f n * (of_nat m + of_real (real n / real k)) powr -s) =\n                 (\\<lambda>m. of_nat k powr s * (\\<Sum>n=1..k. ?f n * of_nat (m * k + n) powr -s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        \\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           (of_nat m + complex_of_real (real n / real k)) powr - s) =\n    (\\<lambda>m.\n        of_nat k powr s *\n        (\\<Sum>n = 1..k.\n            exp (complex_of_real\n                  (2 * pi * real n * real_of_int a / real k) *\n                 \\<i>) *\n            of_nat (m * k + n) powr - s))", "unfolding sum_distrib_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        \\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           (of_nat m + complex_of_real (real n / real k)) powr - s) =\n    (\\<lambda>m.\n        \\<Sum>n = 1..k.\n           of_nat k powr s *\n           (exp (complex_of_real\n                  (2 * pi * real n * real_of_int a / real k) *\n                 \\<i>) *\n            of_nat (m * k + n) powr - s))", "proof (intro ext sum.cong, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>m. {1..k} = {1..k}\n 2. \\<And>m x.\n       x \\<in> {1..k} \\<Longrightarrow>\n       exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n            \\<i>) *\n       (of_nat m + complex_of_real (real x / real k)) powr - s =\n       of_nat k powr s *\n       (exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n             \\<i>) *\n        of_nat (m * k + x) powr - s)", "case (2 m n)"], ["proof (state)\nthis:\n  n \\<in> {1..k}\n\ngoal (2 subgoals):\n 1. \\<And>m. {1..k} = {1..k}\n 2. \\<And>m x.\n       x \\<in> {1..k} \\<Longrightarrow>\n       exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n            \\<i>) *\n       (of_nat m + complex_of_real (real x / real k)) powr - s =\n       of_nat k powr s *\n       (exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n             \\<i>) *\n        of_nat (m * k + x) powr - s)", "hence \"m * k + n > 0\""], ["proof (prove)\nusing this:\n  n \\<in> {1..k}\n\ngoal (1 subgoal):\n 1. 0 < m * k + n", "by (intro add_nonneg_pos) auto"], ["proof (state)\nthis:\n  0 < m * k + n\n\ngoal (2 subgoals):\n 1. \\<And>m. {1..k} = {1..k}\n 2. \\<And>m x.\n       x \\<in> {1..k} \\<Longrightarrow>\n       exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n            \\<i>) *\n       (of_nat m + complex_of_real (real x / real k)) powr - s =\n       of_nat k powr s *\n       (exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n             \\<i>) *\n        of_nat (m * k + x) powr - s)", "hence \"of_nat 0 \\<noteq> (of_nat (m * k + n) :: complex)\""], ["proof (prove)\nusing this:\n  0 < m * k + n\n\ngoal (1 subgoal):\n 1. of_nat 0 \\<noteq> of_nat (m * k + n)", "by (simp only: of_nat_eq_iff)"], ["proof (state)\nthis:\n  of_nat 0 \\<noteq> of_nat (m * k + n)\n\ngoal (2 subgoals):\n 1. \\<And>m. {1..k} = {1..k}\n 2. \\<And>m x.\n       x \\<in> {1..k} \\<Longrightarrow>\n       exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n            \\<i>) *\n       (of_nat m + complex_of_real (real x / real k)) powr - s =\n       of_nat k powr s *\n       (exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n             \\<i>) *\n        of_nat (m * k + x) powr - s)", "also"], ["proof (state)\nthis:\n  of_nat 0 \\<noteq> of_nat (m * k + n)\n\ngoal (2 subgoals):\n 1. \\<And>m. {1..k} = {1..k}\n 2. \\<And>m x.\n       x \\<in> {1..k} \\<Longrightarrow>\n       exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n            \\<i>) *\n       (of_nat m + complex_of_real (real x / real k)) powr - s =\n       of_nat k powr s *\n       (exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n             \\<i>) *\n        of_nat (m * k + x) powr - s)", "have \"of_nat (m * k + n) = of_nat m * of_nat k + (of_nat n :: complex)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat (m * k + n) = of_nat m * of_nat k + of_nat n", "by simp"], ["proof (state)\nthis:\n  of_nat (m * k + n) = of_nat m * of_nat k + of_nat n\n\ngoal (2 subgoals):\n 1. \\<And>m. {1..k} = {1..k}\n 2. \\<And>m x.\n       x \\<in> {1..k} \\<Longrightarrow>\n       exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n            \\<i>) *\n       (of_nat m + complex_of_real (real x / real k)) powr - s =\n       of_nat k powr s *\n       (exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n             \\<i>) *\n        of_nat (m * k + x) powr - s)", "finally"], ["proof (chain)\npicking this:\n  of_nat 0 \\<noteq> of_nat m * of_nat k + of_nat n", "have nz: \"\\<dots> \\<noteq> 0\""], ["proof (prove)\nusing this:\n  of_nat 0 \\<noteq> of_nat m * of_nat k + of_nat n\n\ngoal (1 subgoal):\n 1. of_nat m * of_nat k + of_nat n \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  of_nat m * of_nat k + of_nat n \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<And>m. {1..k} = {1..k}\n 2. \\<And>m x.\n       x \\<in> {1..k} \\<Longrightarrow>\n       exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n            \\<i>) *\n       (of_nat m + complex_of_real (real x / real k)) powr - s =\n       of_nat k powr s *\n       (exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n             \\<i>) *\n        of_nat (m * k + x) powr - s)", "have \"of_nat m + of_real (real n / real k) = \n              (inverse (of_nat k) * of_nat (m * k + n) :: complex)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat m + complex_of_real (real n / real k) =\n    inverse (of_nat k) * of_nat (m * k + n)", "using assms"], ["proof (prove)\nusing this:\n  0 < k\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. of_nat m + complex_of_real (real n / real k) =\n    inverse (of_nat k) * of_nat (m * k + n)", "(* TODO: Field_as_Ring messing up things again *)"], ["proof (prove)\nusing this:\n  0 < k\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. of_nat m + complex_of_real (real n / real k) =\n    inverse (of_nat k) * of_nat (m * k + n)", "by (simp add: field_simps del: div_mult_self1 div_mult_self2 div_mult_self3 div_mult_self4)"], ["proof (state)\nthis:\n  of_nat m + complex_of_real (real n / real k) =\n  inverse (of_nat k) * of_nat (m * k + n)\n\ngoal (2 subgoals):\n 1. \\<And>m. {1..k} = {1..k}\n 2. \\<And>m x.\n       x \\<in> {1..k} \\<Longrightarrow>\n       exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n            \\<i>) *\n       (of_nat m + complex_of_real (real x / real k)) powr - s =\n       of_nat k powr s *\n       (exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n             \\<i>) *\n        of_nat (m * k + x) powr - s)", "also"], ["proof (state)\nthis:\n  of_nat m + complex_of_real (real n / real k) =\n  inverse (of_nat k) * of_nat (m * k + n)\n\ngoal (2 subgoals):\n 1. \\<And>m. {1..k} = {1..k}\n 2. \\<And>m x.\n       x \\<in> {1..k} \\<Longrightarrow>\n       exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n            \\<i>) *\n       (of_nat m + complex_of_real (real x / real k)) powr - s =\n       of_nat k powr s *\n       (exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n             \\<i>) *\n        of_nat (m * k + x) powr - s)", "from nz"], ["proof (chain)\npicking this:\n  of_nat m * of_nat k + of_nat n \\<noteq> 0", "have \"\\<dots> powr -s = of_nat k powr s * of_nat (m * k + n) powr -s\""], ["proof (prove)\nusing this:\n  of_nat m * of_nat k + of_nat n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (inverse (of_nat k) * of_nat (m * k + n)) powr - s =\n    of_nat k powr s * of_nat (m * k + n) powr - s", "by (subst powr_times_real) (auto simp: add_eq_0_iff powr_def exp_minus Ln_inverse)"], ["proof (state)\nthis:\n  (inverse (of_nat k) * of_nat (m * k + n)) powr - s =\n  of_nat k powr s * of_nat (m * k + n) powr - s\n\ngoal (2 subgoals):\n 1. \\<And>m. {1..k} = {1..k}\n 2. \\<And>m x.\n       x \\<in> {1..k} \\<Longrightarrow>\n       exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n            \\<i>) *\n       (of_nat m + complex_of_real (real x / real k)) powr - s =\n       of_nat k powr s *\n       (exp (complex_of_real (2 * pi * real x * real_of_int a / real k) *\n             \\<i>) *\n        of_nat (m * k + x) powr - s)", "finally"], ["proof (chain)\npicking this:\n  (of_nat m + complex_of_real (real n / real k)) powr - s =\n  of_nat k powr s * of_nat (m * k + n) powr - s", "show ?case"], ["proof (prove)\nusing this:\n  (of_nat m + complex_of_real (real n / real k)) powr - s =\n  of_nat k powr s * of_nat (m * k + n) powr - s\n\ngoal (1 subgoal):\n 1. exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n         \\<i>) *\n    (of_nat m + complex_of_real (real n / real k)) powr - s =\n    of_nat k powr s *\n    (exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n          \\<i>) *\n     of_nat (m * k + n) powr - s)", "by simp"], ["proof (state)\nthis:\n  exp (complex_of_real (2 * pi * real n * real_of_int a / real k) * \\<i>) *\n  (of_nat m + complex_of_real (real n / real k)) powr - s =\n  of_nat k powr s *\n  (exp (complex_of_real (2 * pi * real n * real_of_int a / real k) * \\<i>) *\n   of_nat (m * k + n) powr - s)\n\ngoal (1 subgoal):\n 1. \\<And>m. {1..k} = {1..k}", "qed auto"], ["proof (state)\nthis:\n  (\\<lambda>m.\n      \\<Sum>n = 1..k.\n         exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n              \\<i>) *\n         (of_nat m + complex_of_real (real n / real k)) powr - s) =\n  (\\<lambda>m.\n      of_nat k powr s *\n      (\\<Sum>n = 1..k.\n          exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n               \\<i>) *\n          of_nat (m * k + n) powr - s))\n\ngoal (2 subgoals):\n 1. ?f sums (of_nat k powr s * perzeta (real_of_int a / real k) s)\n 2. ?f sums\n    (\\<Sum>n = 1..k.\n        exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n             \\<i>) *\n        hurwitz_zeta (real n / real k) s)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>m.\n      of_nat k powr s *\n      (\\<Sum>n = 1..k.\n          exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n               \\<i>) *\n          of_nat (m * k + n) powr - s)) sums\n  (\\<Sum>n = 1..k.\n      exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n           \\<i>) *\n      hurwitz_zeta (real n / real k) s)", "show \"\\<dots> sums (\\<Sum>n=1..k. ?f n * hurwitz_zeta (real n / real k) s)\""], ["proof (prove)\nusing this:\n  (\\<lambda>m.\n      of_nat k powr s *\n      (\\<Sum>n = 1..k.\n          exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n               \\<i>) *\n          of_nat (m * k + n) powr - s)) sums\n  (\\<Sum>n = 1..k.\n      exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n           \\<i>) *\n      hurwitz_zeta (real n / real k) s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat k powr s *\n        (\\<Sum>n = 1..k.\n            exp (complex_of_real\n                  (2 * pi * real n * real_of_int a / real k) *\n                 \\<i>) *\n            of_nat (m * k + n) powr - s)) sums\n    (\\<Sum>n = 1..k.\n        exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n             \\<i>) *\n        hurwitz_zeta (real n / real k) s)", "."], ["proof (state)\nthis:\n  (\\<lambda>m.\n      of_nat k powr s *\n      (\\<Sum>n = 1..k.\n          exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n               \\<i>) *\n          of_nat (m * k + n) powr - s)) sums\n  (\\<Sum>n = 1..k.\n      exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n           \\<i>) *\n      hurwitz_zeta (real n / real k) s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat k powr s *\n        (\\<Sum>n = 1..k.\n            exp (complex_of_real\n                  (2 * pi * real n * real_of_int a / real k) *\n                 \\<i>) *\n            of_nat (m * k + n) powr - s)) sums\n    (of_nat k powr s * perzeta (real_of_int a / real k) s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat k powr s *\n        (\\<Sum>n = 1..k.\n            exp (complex_of_real\n                  (2 * pi * real n * real_of_int a / real k) *\n                 \\<i>) *\n            of_nat (m * k + n) powr - s)) sums\n    (of_nat k powr s * perzeta (real_of_int a / real k) s)", "define g where \"g = (\\<lambda>m. exp (2 * pi * \\<i> * m * (real_of_int a / real k)))\""], ["proof (state)\nthis:\n  g =\n  (\\<lambda>m.\n      exp (complex_of_real (2 * pi) * \\<i> * m *\n           complex_of_real (real_of_int a / real k)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat k powr s *\n        (\\<Sum>n = 1..k.\n            exp (complex_of_real\n                  (2 * pi * real n * real_of_int a / real k) *\n                 \\<i>) *\n            of_nat (m * k + n) powr - s)) sums\n    (of_nat k powr s * perzeta (real_of_int a / real k) s)", "have \"(\\<lambda>m. g (Suc m) / (Suc m) powr s) sums eval_fds (fds_perzeta (a / k)) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>m. g (of_nat (Suc m)) / of_nat (Suc m) powr s) sums\n    eval_fds (fds_perzeta (real_of_int a / real k)) s", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        exp (complex_of_real (2 * pi) * \\<i> * of_nat (Suc m) *\n             complex_of_real (real_of_int a / real k)) /\n        of_nat (Suc m) powr s) sums\n    eval_fds (fds_perzeta (real_of_int a / real k)) s", "using s"], ["proof (prove)\nusing this:\n  s \\<in> {s. 1 < Re s}\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        exp (complex_of_real (2 * pi) * \\<i> * of_nat (Suc m) *\n             complex_of_real (real_of_int a / real k)) /\n        of_nat (Suc m) powr s) sums\n    eval_fds (fds_perzeta (real_of_int a / real k)) s", "by (intro sums_fds_perzeta) auto"], ["proof (state)\nthis:\n  (\\<lambda>m. g (of_nat (Suc m)) / of_nat (Suc m) powr s) sums\n  eval_fds (fds_perzeta (real_of_int a / real k)) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat k powr s *\n        (\\<Sum>n = 1..k.\n            exp (complex_of_real\n                  (2 * pi * real n * real_of_int a / real k) *\n                 \\<i>) *\n            of_nat (m * k + n) powr - s)) sums\n    (of_nat k powr s * perzeta (real_of_int a / real k) s)", "also"], ["proof (state)\nthis:\n  (\\<lambda>m. g (of_nat (Suc m)) / of_nat (Suc m) powr s) sums\n  eval_fds (fds_perzeta (real_of_int a / real k)) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat k powr s *\n        (\\<Sum>n = 1..k.\n            exp (complex_of_real\n                  (2 * pi * real n * real_of_int a / real k) *\n                 \\<i>) *\n            of_nat (m * k + n) powr - s)) sums\n    (of_nat k powr s * perzeta (real_of_int a / real k) s)", "have \"(\\<lambda>m. g (Suc m) / (Suc m) powr s) = (\\<lambda>m. ?f (Suc m) * (Suc m) powr -s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>m. g (of_nat (Suc m)) / of_nat (Suc m) powr s) =\n    (\\<lambda>m.\n        exp (complex_of_real\n              (2 * pi * real (Suc m) * real_of_int a / real k) *\n             \\<i>) *\n        of_nat (Suc m) powr - s)", "by (simp add: powr_minus field_simps g_def)"], ["proof (state)\nthis:\n  (\\<lambda>m. g (of_nat (Suc m)) / of_nat (Suc m) powr s) =\n  (\\<lambda>m.\n      exp (complex_of_real\n            (2 * pi * real (Suc m) * real_of_int a / real k) *\n           \\<i>) *\n      of_nat (Suc m) powr - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat k powr s *\n        (\\<Sum>n = 1..k.\n            exp (complex_of_real\n                  (2 * pi * real n * real_of_int a / real k) *\n                 \\<i>) *\n            of_nat (m * k + n) powr - s)) sums\n    (of_nat k powr s * perzeta (real_of_int a / real k) s)", "also"], ["proof (state)\nthis:\n  (\\<lambda>m. g (of_nat (Suc m)) / of_nat (Suc m) powr s) =\n  (\\<lambda>m.\n      exp (complex_of_real\n            (2 * pi * real (Suc m) * real_of_int a / real k) *\n           \\<i>) *\n      of_nat (Suc m) powr - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat k powr s *\n        (\\<Sum>n = 1..k.\n            exp (complex_of_real\n                  (2 * pi * real n * real_of_int a / real k) *\n                 \\<i>) *\n            of_nat (m * k + n) powr - s)) sums\n    (of_nat k powr s * perzeta (real_of_int a / real k) s)", "have \"eval_fds (fds_perzeta (a / k)) s = perzeta (a / k) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds (fds_perzeta (real_of_int a / real k)) s =\n    perzeta (real_of_int a / real k) s", "using s"], ["proof (prove)\nusing this:\n  s \\<in> {s. 1 < Re s}\n\ngoal (1 subgoal):\n 1. eval_fds (fds_perzeta (real_of_int a / real k)) s =\n    perzeta (real_of_int a / real k) s", "by (simp add: perzeta_altdef1)"], ["proof (state)\nthis:\n  eval_fds (fds_perzeta (real_of_int a / real k)) s =\n  perzeta (real_of_int a / real k) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat k powr s *\n        (\\<Sum>n = 1..k.\n            exp (complex_of_real\n                  (2 * pi * real n * real_of_int a / real k) *\n                 \\<i>) *\n            of_nat (m * k + n) powr - s)) sums\n    (of_nat k powr s * perzeta (real_of_int a / real k) s)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>m.\n      exp (complex_of_real\n            (2 * pi * real (Suc m) * real_of_int a / real k) *\n           \\<i>) *\n      of_nat (Suc m) powr - s) sums\n  perzeta (real_of_int a / real k) s", "have \"(\\<lambda>m. \\<Sum>n=m*k..<m*k+k. ?f (Suc n) * of_nat (Suc n) powr -s) sums perzeta (a / k) s\""], ["proof (prove)\nusing this:\n  (\\<lambda>m.\n      exp (complex_of_real\n            (2 * pi * real (Suc m) * real_of_int a / real k) *\n           \\<i>) *\n      of_nat (Suc m) powr - s) sums\n  perzeta (real_of_int a / real k) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        \\<Sum>n = m * k..<m * k + k.\n           exp (complex_of_real\n                 (2 * pi * real (Suc n) * real_of_int a / real k) *\n                \\<i>) *\n           of_nat (Suc n) powr - s) sums\n    perzeta (real_of_int a / real k) s", "using \\<open>k > 0\\<close>"], ["proof (prove)\nusing this:\n  (\\<lambda>m.\n      exp (complex_of_real\n            (2 * pi * real (Suc m) * real_of_int a / real k) *\n           \\<i>) *\n      of_nat (Suc m) powr - s) sums\n  perzeta (real_of_int a / real k) s\n  0 < k\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        \\<Sum>n = m * k..<m * k + k.\n           exp (complex_of_real\n                 (2 * pi * real (Suc n) * real_of_int a / real k) *\n                \\<i>) *\n           of_nat (Suc n) powr - s) sums\n    perzeta (real_of_int a / real k) s", "by (rule sums_group)"], ["proof (state)\nthis:\n  (\\<lambda>m.\n      \\<Sum>n = m * k..<m * k + k.\n         exp (complex_of_real\n               (2 * pi * real (Suc n) * real_of_int a / real k) *\n              \\<i>) *\n         of_nat (Suc n) powr - s) sums\n  perzeta (real_of_int a / real k) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat k powr s *\n        (\\<Sum>n = 1..k.\n            exp (complex_of_real\n                  (2 * pi * real n * real_of_int a / real k) *\n                 \\<i>) *\n            of_nat (m * k + n) powr - s)) sums\n    (of_nat k powr s * perzeta (real_of_int a / real k) s)", "also"], ["proof (state)\nthis:\n  (\\<lambda>m.\n      \\<Sum>n = m * k..<m * k + k.\n         exp (complex_of_real\n               (2 * pi * real (Suc n) * real_of_int a / real k) *\n              \\<i>) *\n         of_nat (Suc n) powr - s) sums\n  perzeta (real_of_int a / real k) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat k powr s *\n        (\\<Sum>n = 1..k.\n            exp (complex_of_real\n                  (2 * pi * real n * real_of_int a / real k) *\n                 \\<i>) *\n            of_nat (m * k + n) powr - s)) sums\n    (of_nat k powr s * perzeta (real_of_int a / real k) s)", "have \"(\\<lambda>m. \\<Sum>n=m*k..<m*k+k. ?f (Suc n) * of_nat (Suc n) powr -s) = \n                 (\\<lambda>m. \\<Sum>n=1..k. ?f (m * k + n) * of_nat (m * k + n) powr -s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        \\<Sum>n = m * k..<m * k + k.\n           exp (complex_of_real\n                 (2 * pi * real (Suc n) * real_of_int a / real k) *\n                \\<i>) *\n           of_nat (Suc n) powr - s) =\n    (\\<lambda>m.\n        \\<Sum>n = 1..k.\n           exp (complex_of_real\n                 (2 * pi * real (m * k + n) * real_of_int a / real k) *\n                \\<i>) *\n           of_nat (m * k + n) powr - s)", "proof (rule ext, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>n = m * k..<m * k + k.\n           exp (complex_of_real\n                 (2 * pi * real (Suc n) * real_of_int a / real k) *\n                \\<i>) *\n           of_nat (Suc n) powr - s) =\n       (\\<Sum>n = 1..k.\n           exp (complex_of_real\n                 (2 * pi * real (m * k + n) * real_of_int a / real k) *\n                \\<i>) *\n           of_nat (m * k + n) powr - s)", "case (1 m)"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>n = m * k..<m * k + k.\n           exp (complex_of_real\n                 (2 * pi * real (Suc n) * real_of_int a / real k) *\n                \\<i>) *\n           of_nat (Suc n) powr - s) =\n       (\\<Sum>n = 1..k.\n           exp (complex_of_real\n                 (2 * pi * real (m * k + n) * real_of_int a / real k) *\n                \\<i>) *\n           of_nat (m * k + n) powr - s)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n = m * k..<m * k + k.\n        exp (complex_of_real\n              (2 * pi * real (Suc n) * real_of_int a / real k) *\n             \\<i>) *\n        of_nat (Suc n) powr - s) =\n    (\\<Sum>n = 1..k.\n        exp (complex_of_real\n              (2 * pi * real (m * k + n) * real_of_int a / real k) *\n             \\<i>) *\n        of_nat (m * k + n) powr - s)", "using assms"], ["proof (prove)\nusing this:\n  0 < k\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>n = m * k..<m * k + k.\n        exp (complex_of_real\n              (2 * pi * real (Suc n) * real_of_int a / real k) *\n             \\<i>) *\n        of_nat (Suc n) powr - s) =\n    (\\<Sum>n = 1..k.\n        exp (complex_of_real\n              (2 * pi * real (m * k + n) * real_of_int a / real k) *\n             \\<i>) *\n        of_nat (m * k + n) powr - s)", "by (intro ext sum.reindex_bij_witness[of _ \"\\<lambda>n. m * k + n - 1\" \"\\<lambda>n. Suc n - m * k\"]) auto"], ["proof (state)\nthis:\n  (\\<Sum>n = m * k..<m * k + k.\n      exp (complex_of_real\n            (2 * pi * real (Suc n) * real_of_int a / real k) *\n           \\<i>) *\n      of_nat (Suc n) powr - s) =\n  (\\<Sum>n = 1..k.\n      exp (complex_of_real\n            (2 * pi * real (m * k + n) * real_of_int a / real k) *\n           \\<i>) *\n      of_nat (m * k + n) powr - s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>m.\n      \\<Sum>n = m * k..<m * k + k.\n         exp (complex_of_real\n               (2 * pi * real (Suc n) * real_of_int a / real k) *\n              \\<i>) *\n         of_nat (Suc n) powr - s) =\n  (\\<lambda>m.\n      \\<Sum>n = 1..k.\n         exp (complex_of_real\n               (2 * pi * real (m * k + n) * real_of_int a / real k) *\n              \\<i>) *\n         of_nat (m * k + n) powr - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat k powr s *\n        (\\<Sum>n = 1..k.\n            exp (complex_of_real\n                  (2 * pi * real n * real_of_int a / real k) *\n                 \\<i>) *\n            of_nat (m * k + n) powr - s)) sums\n    (of_nat k powr s * perzeta (real_of_int a / real k) s)", "also"], ["proof (state)\nthis:\n  (\\<lambda>m.\n      \\<Sum>n = m * k..<m * k + k.\n         exp (complex_of_real\n               (2 * pi * real (Suc n) * real_of_int a / real k) *\n              \\<i>) *\n         of_nat (Suc n) powr - s) =\n  (\\<lambda>m.\n      \\<Sum>n = 1..k.\n         exp (complex_of_real\n               (2 * pi * real (m * k + n) * real_of_int a / real k) *\n              \\<i>) *\n         of_nat (m * k + n) powr - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat k powr s *\n        (\\<Sum>n = 1..k.\n            exp (complex_of_real\n                  (2 * pi * real n * real_of_int a / real k) *\n                 \\<i>) *\n            of_nat (m * k + n) powr - s)) sums\n    (of_nat k powr s * perzeta (real_of_int a / real k) s)", "have \"(\\<lambda>m n. ?f (m * k + n)) = (\\<lambda>m n. ?f n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>m n.\n        exp (complex_of_real\n              (2 * pi * real (m * k + n) * real_of_int a / real k) *\n             \\<i>)) =\n    (\\<lambda>x xa.\n        exp (complex_of_real (2 * pi * real xa * real_of_int a / real k) *\n             \\<i>))", "proof (intro ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n.\n       exp (complex_of_real\n             (2 * pi * real (m * k + n) * real_of_int a / real k) *\n            \\<i>) =\n       exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n            \\<i>)", "fix m n :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n.\n       exp (complex_of_real\n             (2 * pi * real (m * k + n) * real_of_int a / real k) *\n            \\<i>) =\n       exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n            \\<i>)", "have \"?f (m * k + n) / ?f n = exp (2 * pi * m * a * \\<i>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (complex_of_real\n          (2 * pi * real (m * k + n) * real_of_int a / real k) *\n         \\<i>) /\n    exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n         \\<i>) =\n    exp (complex_of_real (2 * pi * real m * real_of_int a) * \\<i>)", "using \\<open>k > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. exp (complex_of_real\n          (2 * pi * real (m * k + n) * real_of_int a / real k) *\n         \\<i>) /\n    exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n         \\<i>) =\n    exp (complex_of_real (2 * pi * real m * real_of_int a) * \\<i>)", "by (auto simp: ring_distribs add_divide_distrib exp_add mult_ac)"], ["proof (state)\nthis:\n  exp (complex_of_real\n        (2 * pi * real (m * k + n) * real_of_int a / real k) *\n       \\<i>) /\n  exp (complex_of_real (2 * pi * real n * real_of_int a / real k) * \\<i>) =\n  exp (complex_of_real (2 * pi * real m * real_of_int a) * \\<i>)\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       exp (complex_of_real\n             (2 * pi * real (m * k + n) * real_of_int a / real k) *\n            \\<i>) =\n       exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n            \\<i>)", "also"], ["proof (state)\nthis:\n  exp (complex_of_real\n        (2 * pi * real (m * k + n) * real_of_int a / real k) *\n       \\<i>) /\n  exp (complex_of_real (2 * pi * real n * real_of_int a / real k) * \\<i>) =\n  exp (complex_of_real (2 * pi * real m * real_of_int a) * \\<i>)\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       exp (complex_of_real\n             (2 * pi * real (m * k + n) * real_of_int a / real k) *\n            \\<i>) =\n       exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n            \\<i>)", "have \"\\<dots> = cis (2 * pi * (m * a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (complex_of_real (2 * pi * real m * real_of_int a) * \\<i>) =\n    cis (2 * pi * real_of_int (int m * a))", "by (simp add: exp_eq_polar mult_ac)"], ["proof (state)\nthis:\n  exp (complex_of_real (2 * pi * real m * real_of_int a) * \\<i>) =\n  cis (2 * pi * real_of_int (int m * a))\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       exp (complex_of_real\n             (2 * pi * real (m * k + n) * real_of_int a / real k) *\n            \\<i>) =\n       exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n            \\<i>)", "also"], ["proof (state)\nthis:\n  exp (complex_of_real (2 * pi * real m * real_of_int a) * \\<i>) =\n  cis (2 * pi * real_of_int (int m * a))\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       exp (complex_of_real\n             (2 * pi * real (m * k + n) * real_of_int a / real k) *\n            \\<i>) =\n       exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n            \\<i>)", "have \"\\<dots> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cis (2 * pi * real_of_int (int m * a)) = 1", "by (rule cis_multiple_2pi) auto"], ["proof (state)\nthis:\n  cis (2 * pi * real_of_int (int m * a)) = 1\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       exp (complex_of_real\n             (2 * pi * real (m * k + n) * real_of_int a / real k) *\n            \\<i>) =\n       exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n            \\<i>)", "finally"], ["proof (chain)\npicking this:\n  exp (complex_of_real\n        (2 * pi * real (m * k + n) * real_of_int a / real k) *\n       \\<i>) /\n  exp (complex_of_real (2 * pi * real n * real_of_int a / real k) * \\<i>) =\n  1", "show \"?f (m * k + n) = ?f n\""], ["proof (prove)\nusing this:\n  exp (complex_of_real\n        (2 * pi * real (m * k + n) * real_of_int a / real k) *\n       \\<i>) /\n  exp (complex_of_real (2 * pi * real n * real_of_int a / real k) * \\<i>) =\n  1\n\ngoal (1 subgoal):\n 1. exp (complex_of_real\n          (2 * pi * real (m * k + n) * real_of_int a / real k) *\n         \\<i>) =\n    exp (complex_of_real (2 * pi * real n * real_of_int a / real k) * \\<i>)", "by simp"], ["proof (state)\nthis:\n  exp (complex_of_real\n        (2 * pi * real (m * k + n) * real_of_int a / real k) *\n       \\<i>) =\n  exp (complex_of_real (2 * pi * real n * real_of_int a / real k) * \\<i>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>m n.\n      exp (complex_of_real\n            (2 * pi * real (m * k + n) * real_of_int a / real k) *\n           \\<i>)) =\n  (\\<lambda>x xa.\n      exp (complex_of_real (2 * pi * real xa * real_of_int a / real k) *\n           \\<i>))\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat k powr s *\n        (\\<Sum>n = 1..k.\n            exp (complex_of_real\n                  (2 * pi * real n * real_of_int a / real k) *\n                 \\<i>) *\n            of_nat (m * k + n) powr - s)) sums\n    (of_nat k powr s * perzeta (real_of_int a / real k) s)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>m.\n      \\<Sum>n = 1..k.\n         exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n              \\<i>) *\n         of_nat (m * k + n) powr - s) sums\n  perzeta (real_of_int a / real k) s", "show \"(\\<lambda>m. of_nat k powr s * (\\<Sum>n=1..k. ?f n * of_nat (m * k + n) powr -s)) sums\n                    (of_nat k powr s * perzeta (a / k) s)\""], ["proof (prove)\nusing this:\n  (\\<lambda>m.\n      \\<Sum>n = 1..k.\n         exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n              \\<i>) *\n         of_nat (m * k + n) powr - s) sums\n  perzeta (real_of_int a / real k) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat k powr s *\n        (\\<Sum>n = 1..k.\n            exp (complex_of_real\n                  (2 * pi * real n * real_of_int a / real k) *\n                 \\<i>) *\n            of_nat (m * k + n) powr - s)) sums\n    (of_nat k powr s * perzeta (real_of_int a / real k) s)", "by (rule sums_mult)"], ["proof (state)\nthis:\n  (\\<lambda>m.\n      of_nat k powr s *\n      (\\<Sum>n = 1..k.\n          exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n               \\<i>) *\n          of_nat (m * k + n) powr - s)) sums\n  (of_nat k powr s * perzeta (real_of_int a / real k) s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  of_nat k powr s * perzeta (real_of_int a / real k) s =\n  (\\<Sum>n = 1..k.\n      exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n           \\<i>) *\n      hurwitz_zeta (real n / real k) s)\n\ngoal (6 subgoals):\n 1. open {s. 1 < Re s}\n 2. open (- {1})\n 3. {s. 1 < Re s} \\<subseteq> - {1}\n 4. (\\<lambda>b.\n        of_nat k powr b * perzeta (real_of_int a / real k) b) holomorphic_on\n    - {1}\n 5. (\\<lambda>b.\n        \\<Sum>n = 1..k.\n           exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n                \\<i>) *\n           hurwitz_zeta (real n / real k) b) holomorphic_on\n    - {1}\n 6. s \\<in> - {1}", "qed (use assms in \\<open>auto intro!: holomorphic_intros simp: finite_imp_closed open_halfspace_Re_gt\\<close>)"], ["", "lemma perzeta_conv_hurwitz_zeta_multiplication':\n  fixes k :: nat and a :: int and s :: complex\n  assumes \"k > 0\" \"s \\<noteq> 1\"\n  shows   \"perzeta (a / k) s = k powr -s *\n             (\\<Sum>n=1..k. exp (2 * pi * n * a / k * \\<i>) * hurwitz_zeta (n / k) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perzeta (real_of_int a / real k) s =\n    of_nat k powr - s *\n    (\\<Sum>n = 1..k.\n        exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n             \\<i>) *\n        hurwitz_zeta (real n / real k) s)", "using perzeta_conv_hurwitz_zeta_multiplication[of k s a] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < k; s \\<noteq> 1\\<rbrakk>\n  \\<Longrightarrow> of_nat k powr s * perzeta (real_of_int a / real k) s =\n                    (\\<Sum>n = 1..k.\n                        exp (complex_of_real\n                              (2 * pi * real n * real_of_int a / real k) *\n                             \\<i>) *\n                        hurwitz_zeta (real n / real k) s)\n  0 < k\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. perzeta (real_of_int a / real k) s =\n    of_nat k powr - s *\n    (\\<Sum>n = 1..k.\n        exp (complex_of_real (2 * pi * real n * real_of_int a / real k) *\n             \\<i>) *\n        hurwitz_zeta (real n / real k) s)", "by (simp add: powr_minus field_simps)"], ["", "lemma zeta_conv_hurwitz_zeta_multiplication:\n  fixes k a :: nat and s :: complex\n  assumes \"k > 0\" \"s \\<noteq> 1\"\n  shows   \"k powr s * zeta s = (\\<Sum>n=1..k. hurwitz_zeta (n / k) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat k powr s * zeta s =\n    (\\<Sum>n = 1..k. hurwitz_zeta (real n / real k) s)", "using perzeta_conv_hurwitz_zeta_multiplication[of k s 0]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < k; s \\<noteq> 1\\<rbrakk>\n  \\<Longrightarrow> of_nat k powr s * perzeta (real_of_int 0 / real k) s =\n                    (\\<Sum>n = 1..k.\n                        exp (complex_of_real\n                              (2 * pi * real n * real_of_int 0 / real k) *\n                             \\<i>) *\n                        hurwitz_zeta (real n / real k) s)\n\ngoal (1 subgoal):\n 1. of_nat k powr s * zeta s =\n    (\\<Sum>n = 1..k. hurwitz_zeta (real n / real k) s)", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < k; s \\<noteq> 1\\<rbrakk>\n  \\<Longrightarrow> of_nat k powr s * perzeta (real_of_int 0 / real k) s =\n                    (\\<Sum>n = 1..k.\n                        exp (complex_of_real\n                              (2 * pi * real n * real_of_int 0 / real k) *\n                             \\<i>) *\n                        hurwitz_zeta (real n / real k) s)\n  0 < k\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. of_nat k powr s * zeta s =\n    (\\<Sum>n = 1..k. hurwitz_zeta (real n / real k) s)", "by (simp add: perzeta_int)"], ["", "lemma hurwitz_zeta_one_half_left:\n  assumes \"s \\<noteq> 1\"\n  shows   \"hurwitz_zeta (1 / 2) s = (2 powr s - 1) * zeta s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hurwitz_zeta (1 / 2) s = (2 powr s - 1) * zeta s", "using zeta_conv_hurwitz_zeta_multiplication[of 2 s] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < 2; s \\<noteq> 1\\<rbrakk>\n  \\<Longrightarrow> of_nat 2 powr s * zeta s =\n                    (\\<Sum>n = 1..2. hurwitz_zeta (real n / real 2) s)\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. hurwitz_zeta (1 / 2) s = (2 powr s - 1) * zeta s", "by (simp add: eval_nat_numeral zeta_def field_simps)"], ["", "theorem hurwitz_zeta_functional_equation:\n  fixes h k :: nat and s :: complex\n  assumes hk: \"k > 0\" \"h \\<in> {0<..k}\" and s: \"s \\<notin> {0, 1}\"\n  defines \"a \\<equiv> real h / real k\"\n  shows \"rGamma s * hurwitz_zeta a (1 - s) =\n           2 * (2 * pi * k) powr -s *\n             (\\<Sum>n=1..k. cos (s*pi/2 - 2*pi*n*h/k) * hurwitz_zeta (n / k) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "from hk"], ["proof (chain)\npicking this:\n  0 < k\n  h \\<in> {0<..k}", "have a: \"a \\<in> {0<..1}\""], ["proof (prove)\nusing this:\n  0 < k\n  h \\<in> {0<..k}\n\ngoal (1 subgoal):\n 1. a \\<in> {0<..1}", "by (auto simp: a_def)"], ["proof (state)\nthis:\n  a \\<in> {0<..1}\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "have \"rGamma s * hurwitz_zeta a (1 - s) =\n          (2 * pi) powr - s * (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (- a) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (- a) s)", "using s a"], ["proof (prove)\nusing this:\n  s \\<notin> {0, 1}\n  a \\<in> {0<..1}\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (- a) s)", "by (intro hurwitz_zeta_formula) auto"], ["proof (state)\nthis:\n  rGamma s * hurwitz_zeta a (1 - s) =\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (- a) s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "also"], ["proof (state)\nthis:\n  rGamma s * hurwitz_zeta a (1 - s) =\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (- a) s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "have \"\\<dots> = (2 * pi) powr - s * (\\<i> powr - s * perzeta (of_int (int h) / k) s +\n                                       \\<i> powr s * perzeta (of_int (-int h) / k) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (- a) s) =\n    complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * perzeta (real_of_int (int h) / real k) s +\n     \\<i> powr s * perzeta (real_of_int (- int h) / real k) s)", "by (simp add: a_def)"], ["proof (state)\nthis:\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (- a) s) =\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> powr - s * perzeta (real_of_int (int h) / real k) s +\n   \\<i> powr s * perzeta (real_of_int (- int h) / real k) s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "also"], ["proof (state)\nthis:\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> powr - s * perzeta a s + \\<i> powr s * perzeta (- a) s) =\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> powr - s * perzeta (real_of_int (int h) / real k) s +\n   \\<i> powr s * perzeta (real_of_int (- int h) / real k) s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "have \"\\<dots> = (2 * pi) powr -s * k powr -s *\n     ((\\<Sum>n=1..k. \\<i> powr -s * cis (2 * pi * n * h / k) * hurwitz_zeta (n / k) s) +\n       (\\<Sum>n=1..k. \\<i> powr s  * cis (-2 * pi * n * h / k) * hurwitz_zeta (n / k) s))\"\n    (is \"_ = _ * (?S1 + ?S2)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * perzeta (real_of_int (int h) / real k) s +\n     \\<i> powr s * perzeta (real_of_int (- int h) / real k) s) =\n    complex_of_real (2 * pi) powr - s * of_nat k powr - s *\n    ((\\<Sum>n = 1..k.\n         \\<i> powr - s * cis (2 * pi * real n * real h / real k) *\n         hurwitz_zeta (real n / real k) s) +\n     (\\<Sum>n = 1..k.\n         \\<i> powr s * cis (- 2 * pi * real n * real h / real k) *\n         hurwitz_zeta (real n / real k) s))", "using hk a s"], ["proof (prove)\nusing this:\n  0 < k\n  h \\<in> {0<..k}\n  a \\<in> {0<..1}\n  s \\<notin> {0, 1}\n\ngoal (1 subgoal):\n 1. complex_of_real (2 * pi) powr - s *\n    (\\<i> powr - s * perzeta (real_of_int (int h) / real k) s +\n     \\<i> powr s * perzeta (real_of_int (- int h) / real k) s) =\n    complex_of_real (2 * pi) powr - s * of_nat k powr - s *\n    ((\\<Sum>n = 1..k.\n         \\<i> powr - s * cis (2 * pi * real n * real h / real k) *\n         hurwitz_zeta (real n / real k) s) +\n     (\\<Sum>n = 1..k.\n         \\<i> powr s * cis (- 2 * pi * real n * real h / real k) *\n         hurwitz_zeta (real n / real k) s))", "by (subst (1 2) perzeta_conv_hurwitz_zeta_multiplication')\n       (auto simp: field_simps sum_distrib_left sum_distrib_right exp_eq_polar)"], ["proof (state)\nthis:\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> powr - s * perzeta (real_of_int (int h) / real k) s +\n   \\<i> powr s * perzeta (real_of_int (- int h) / real k) s) =\n  complex_of_real (2 * pi) powr - s * of_nat k powr - s *\n  ((\\<Sum>n = 1..k.\n       \\<i> powr - s * cis (2 * pi * real n * real h / real k) *\n       hurwitz_zeta (real n / real k) s) +\n   (\\<Sum>n = 1..k.\n       \\<i> powr s * cis (- 2 * pi * real n * real h / real k) *\n       hurwitz_zeta (real n / real k) s))\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "also"], ["proof (state)\nthis:\n  complex_of_real (2 * pi) powr - s *\n  (\\<i> powr - s * perzeta (real_of_int (int h) / real k) s +\n   \\<i> powr s * perzeta (real_of_int (- int h) / real k) s) =\n  complex_of_real (2 * pi) powr - s * of_nat k powr - s *\n  ((\\<Sum>n = 1..k.\n       \\<i> powr - s * cis (2 * pi * real n * real h / real k) *\n       hurwitz_zeta (real n / real k) s) +\n   (\\<Sum>n = 1..k.\n       \\<i> powr s * cis (- 2 * pi * real n * real h / real k) *\n       hurwitz_zeta (real n / real k) s))\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "have \"(2 * pi) powr -s * k powr -s = (2 * k * pi) powr -s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (2 * pi) powr - s * of_nat k powr - s =\n    complex_of_real (real (2 * k) * pi) powr - s", "using hk pi_gt_zero"], ["proof (prove)\nusing this:\n  0 < k\n  h \\<in> {0<..k}\n  0 < pi\n\ngoal (1 subgoal):\n 1. complex_of_real (2 * pi) powr - s * of_nat k powr - s =\n    complex_of_real (real (2 * k) * pi) powr - s", "by (simp add: powr_def Ln_times_Reals field_simps exp_add exp_diff exp_minus)"], ["proof (state)\nthis:\n  complex_of_real (2 * pi) powr - s * of_nat k powr - s =\n  complex_of_real (real (2 * k) * pi) powr - s\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "also"], ["proof (state)\nthis:\n  complex_of_real (2 * pi) powr - s * of_nat k powr - s =\n  complex_of_real (real (2 * k) * pi) powr - s\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "have \"?S1 + ?S2 = (\\<Sum>n=1..k. (\\<i> powr -s * cis (2*pi*n*h/k) + \\<i> powr s * cis (-2*pi*n*h/k)) *\n                                    hurwitz_zeta (n / k) s)\"\n    (is \"_ = (\\<Sum>n\\<in>_. ?c n * _)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..k.\n        \\<i> powr - s * cis (2 * pi * real n * real h / real k) *\n        hurwitz_zeta (real n / real k) s) +\n    (\\<Sum>n = 1..k.\n        \\<i> powr s * cis (- 2 * pi * real n * real h / real k) *\n        hurwitz_zeta (real n / real k) s) =\n    (\\<Sum>n = 1..k.\n        (\\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n         \\<i> powr s * cis (- 2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "by (simp add: algebra_simps sum.distrib)"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..k.\n      \\<i> powr - s * cis (2 * pi * real n * real h / real k) *\n      hurwitz_zeta (real n / real k) s) +\n  (\\<Sum>n = 1..k.\n      \\<i> powr s * cis (- 2 * pi * real n * real h / real k) *\n      hurwitz_zeta (real n / real k) s) =\n  (\\<Sum>n = 1..k.\n      (\\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n       \\<i> powr s * cis (- 2 * pi * real n * real h / real k)) *\n      hurwitz_zeta (real n / real k) s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "also"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..k.\n      \\<i> powr - s * cis (2 * pi * real n * real h / real k) *\n      hurwitz_zeta (real n / real k) s) +\n  (\\<Sum>n = 1..k.\n      \\<i> powr s * cis (- 2 * pi * real n * real h / real k) *\n      hurwitz_zeta (real n / real k) s) =\n  (\\<Sum>n = 1..k.\n      (\\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n       \\<i> powr s * cis (- 2 * pi * real n * real h / real k)) *\n      hurwitz_zeta (real n / real k) s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "have \"?c = (\\<lambda>n. 2 * cos (s*pi/2 - 2*pi*n*h/k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n        \\<i> powr s * cis (- 2 * pi * real n * real h / real k)) =\n    (\\<lambda>x.\n        2 *\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real x * real h / real k)))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n       \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n       2 *\n       cos (s * complex_of_real pi / 2 -\n            complex_of_real (2 * pi * real n * real h / real k))", "fix n :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n       \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n       2 *\n       cos (s * complex_of_real pi / 2 -\n            complex_of_real (2 * pi * real n * real h / real k))", "have \"\\<i> powr -s * cis (2*pi*n*h/k) = exp (-s*pi/2*\\<i> + 2*pi*n*h/k*\\<i>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<i> powr - s * cis (2 * pi * real n * real h / real k) =\n    exp (- s * complex_of_real pi / 2 * \\<i> +\n         complex_of_real (2 * pi * real n * real h / real k) * \\<i>)", "unfolding exp_add"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<i> powr - s * cis (2 * pi * real n * real h / real k) =\n    exp (- s * complex_of_real pi / 2 * \\<i>) *\n    exp (complex_of_real (2 * pi * real n * real h / real k) * \\<i>)", "by (simp add: powr_def cis_conv_exp mult_ac)"], ["proof (state)\nthis:\n  \\<i> powr - s * cis (2 * pi * real n * real h / real k) =\n  exp (- s * complex_of_real pi / 2 * \\<i> +\n       complex_of_real (2 * pi * real n * real h / real k) * \\<i>)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n       \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n       2 *\n       cos (s * complex_of_real pi / 2 -\n            complex_of_real (2 * pi * real n * real h / real k))", "moreover"], ["proof (state)\nthis:\n  \\<i> powr - s * cis (2 * pi * real n * real h / real k) =\n  exp (- s * complex_of_real pi / 2 * \\<i> +\n       complex_of_real (2 * pi * real n * real h / real k) * \\<i>)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n       \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n       2 *\n       cos (s * complex_of_real pi / 2 -\n            complex_of_real (2 * pi * real n * real h / real k))", "have \"\\<i> powr s * cis (-2*pi*n*h/k) = exp (s*pi/2*\\<i> + -2*pi*n*h/k*\\<i>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n    exp (s * complex_of_real pi / 2 * \\<i> +\n         complex_of_real (- 2 * pi * real n * real h / real k) * \\<i>)", "unfolding exp_add"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n    exp (s * complex_of_real pi / 2 * \\<i>) *\n    exp (complex_of_real (- 2 * pi * real n * real h / real k) * \\<i>)", "by (simp add: powr_def cis_conv_exp mult_ac)"], ["proof (state)\nthis:\n  \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n  exp (s * complex_of_real pi / 2 * \\<i> +\n       complex_of_real (- 2 * pi * real n * real h / real k) * \\<i>)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n       \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n       2 *\n       cos (s * complex_of_real pi / 2 -\n            complex_of_real (2 * pi * real n * real h / real k))", "ultimately"], ["proof (chain)\npicking this:\n  \\<i> powr - s * cis (2 * pi * real n * real h / real k) =\n  exp (- s * complex_of_real pi / 2 * \\<i> +\n       complex_of_real (2 * pi * real n * real h / real k) * \\<i>)\n  \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n  exp (s * complex_of_real pi / 2 * \\<i> +\n       complex_of_real (- 2 * pi * real n * real h / real k) * \\<i>)", "have \"?c n = exp (\\<i> * (s*pi/2 - 2*pi*n*h/k)) + exp (-(\\<i> * (s*pi/2 - 2*pi*n*h/k)))\""], ["proof (prove)\nusing this:\n  \\<i> powr - s * cis (2 * pi * real n * real h / real k) =\n  exp (- s * complex_of_real pi / 2 * \\<i> +\n       complex_of_real (2 * pi * real n * real h / real k) * \\<i>)\n  \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n  exp (s * complex_of_real pi / 2 * \\<i> +\n       complex_of_real (- 2 * pi * real n * real h / real k) * \\<i>)\n\ngoal (1 subgoal):\n 1. \\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n    \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n    exp (\\<i> *\n         (s * complex_of_real pi / 2 -\n          complex_of_real (2 * pi * real n * real h / real k))) +\n    exp (- (\\<i> *\n            (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k))))", "by (simp add: mult_ac ring_distribs)"], ["proof (state)\nthis:\n  \\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n  \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n  exp (\\<i> *\n       (s * complex_of_real pi / 2 -\n        complex_of_real (2 * pi * real n * real h / real k))) +\n  exp (- (\\<i> *\n          (s * complex_of_real pi / 2 -\n           complex_of_real (2 * pi * real n * real h / real k))))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n       \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n       2 *\n       cos (s * complex_of_real pi / 2 -\n            complex_of_real (2 * pi * real n * real h / real k))", "also"], ["proof (state)\nthis:\n  \\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n  \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n  exp (\\<i> *\n       (s * complex_of_real pi / 2 -\n        complex_of_real (2 * pi * real n * real h / real k))) +\n  exp (- (\\<i> *\n          (s * complex_of_real pi / 2 -\n           complex_of_real (2 * pi * real n * real h / real k))))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n       \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n       2 *\n       cos (s * complex_of_real pi / 2 -\n            complex_of_real (2 * pi * real n * real h / real k))", "have \"\\<dots> / 2 = cos (s*pi/2 - 2*pi*n*h/k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (exp (\\<i> *\n          (s * complex_of_real pi / 2 -\n           complex_of_real (2 * pi * real n * real h / real k))) +\n     exp (- (\\<i> *\n             (s * complex_of_real pi / 2 -\n              complex_of_real (2 * pi * real n * real h / real k))))) /\n    2 =\n    cos (s * complex_of_real pi / 2 -\n         complex_of_real (2 * pi * real n * real h / real k))", "by (rule cos_exp_eq [symmetric])"], ["proof (state)\nthis:\n  (exp (\\<i> *\n        (s * complex_of_real pi / 2 -\n         complex_of_real (2 * pi * real n * real h / real k))) +\n   exp (- (\\<i> *\n           (s * complex_of_real pi / 2 -\n            complex_of_real (2 * pi * real n * real h / real k))))) /\n  2 =\n  cos (s * complex_of_real pi / 2 -\n       complex_of_real (2 * pi * real n * real h / real k))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n       \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n       2 *\n       cos (s * complex_of_real pi / 2 -\n            complex_of_real (2 * pi * real n * real h / real k))", "finally"], ["proof (chain)\npicking this:\n  (\\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n   \\<i> powr s * cis (- 2 * pi * real n * real h / real k)) /\n  2 =\n  cos (s * complex_of_real pi / 2 -\n       complex_of_real (2 * pi * real n * real h / real k))", "show \"?c n = 2 * cos (s*pi/2 - 2*pi*n*h/k)\""], ["proof (prove)\nusing this:\n  (\\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n   \\<i> powr s * cis (- 2 * pi * real n * real h / real k)) /\n  2 =\n  cos (s * complex_of_real pi / 2 -\n       complex_of_real (2 * pi * real n * real h / real k))\n\ngoal (1 subgoal):\n 1. \\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n    \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n    2 *\n    cos (s * complex_of_real pi / 2 -\n         complex_of_real (2 * pi * real n * real h / real k))", "by simp"], ["proof (state)\nthis:\n  \\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n  \\<i> powr s * cis (- 2 * pi * real n * real h / real k) =\n  2 *\n  cos (s * complex_of_real pi / 2 -\n       complex_of_real (2 * pi * real n * real h / real k))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n      \\<i> powr s * cis (- 2 * pi * real n * real h / real k)) =\n  (\\<lambda>x.\n      2 *\n      cos (s * complex_of_real pi / 2 -\n           complex_of_real (2 * pi * real x * real h / real k)))\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<i> powr - s * cis (2 * pi * real n * real h / real k) +\n      \\<i> powr s * cis (- 2 * pi * real n * real h / real k)) =\n  (\\<lambda>x.\n      2 *\n      cos (s * complex_of_real pi / 2 -\n           complex_of_real (2 * pi * real x * real h / real k)))\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "have \"(2 * k * pi) powr -s * (\\<Sum>n=1..k. \\<dots> n * hurwitz_zeta (n / k) s) =\n               2 * (2 * pi * k) powr -s *\n               (\\<Sum>n=1..k. cos (s*pi/2 - 2*pi*n*h/k) * hurwitz_zeta (n / k) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (real (2 * k) * pi) powr - s *\n    (\\<Sum>n = 1..k.\n        2 *\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "by (simp add: sum_distrib_left sum_distrib_right mult_ac)"], ["proof (state)\nthis:\n  complex_of_real (real (2 * k) * pi) powr - s *\n  (\\<Sum>n = 1..k.\n      2 *\n      cos (s * complex_of_real pi / 2 -\n           complex_of_real (2 * pi * real n * real h / real k)) *\n      hurwitz_zeta (real n / real k) s) =\n  2 * complex_of_real (2 * pi * real k) powr - s *\n  (\\<Sum>n = 1..k.\n      cos (s * complex_of_real pi / 2 -\n           complex_of_real (2 * pi * real n * real h / real k)) *\n      hurwitz_zeta (real n / real k) s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "finally"], ["proof (chain)\npicking this:\n  rGamma s * hurwitz_zeta a (1 - s) =\n  2 * complex_of_real (2 * pi * real k) powr - s *\n  (\\<Sum>n = 1..k.\n      cos (s * complex_of_real pi / 2 -\n           complex_of_real (2 * pi * real n * real h / real k)) *\n      hurwitz_zeta (real n / real k) s)", "show ?thesis"], ["proof (prove)\nusing this:\n  rGamma s * hurwitz_zeta a (1 - s) =\n  2 * complex_of_real (2 * pi * real k) powr - s *\n  (\\<Sum>n = 1..k.\n      cos (s * complex_of_real pi / 2 -\n           complex_of_real (2 * pi * real n * real h / real k)) *\n      hurwitz_zeta (real n / real k) s)\n\ngoal (1 subgoal):\n 1. rGamma s * hurwitz_zeta a (1 - s) =\n    2 * complex_of_real (2 * pi * real k) powr - s *\n    (\\<Sum>n = 1..k.\n        cos (s * complex_of_real pi / 2 -\n             complex_of_real (2 * pi * real n * real h / real k)) *\n        hurwitz_zeta (real n / real k) s)", "."], ["proof (state)\nthis:\n  rGamma s * hurwitz_zeta a (1 - s) =\n  2 * complex_of_real (2 * pi * real k) powr - s *\n  (\\<Sum>n = 1..k.\n      cos (s * complex_of_real pi / 2 -\n           complex_of_real (2 * pi * real n * real h / real k)) *\n      hurwitz_zeta (real n / real k) s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perzeta_one_half_left: \"s \\<noteq> 1 \\<Longrightarrow> perzeta (1 / 2) s = (2 powr (1-s) - 1) * zeta s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<noteq> 1 \\<Longrightarrow>\n    perzeta (1 / 2) s = (2 powr (1 - s) - 1) * zeta s", "using perzeta_conv_hurwitz_zeta_multiplication'[of 2 s 1]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < 2; s \\<noteq> 1\\<rbrakk>\n  \\<Longrightarrow> perzeta (real_of_int 1 / real 2) s =\n                    of_nat 2 powr - s *\n                    (\\<Sum>n = 1..2.\n                        exp (complex_of_real\n                              (2 * pi * real n * real_of_int 1 / real 2) *\n                             \\<i>) *\n                        hurwitz_zeta (real n / real 2) s)\n\ngoal (1 subgoal):\n 1. s \\<noteq> 1 \\<Longrightarrow>\n    perzeta (1 / 2) s = (2 powr (1 - s) - 1) * zeta s", "by (simp add: eval_nat_numeral hurwitz_zeta_one_half_left powr_minus\n                field_simps zeta_def powr_diff)"], ["", "lemma perzeta_one_half_left':\n  \"perzeta (1 / 2) s =\n         (if s = 1 then -ln 2 else (2 powr (1 - s) - 1) / (s - 1)) * ((s - 1) * pre_zeta 1 s + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perzeta (1 / 2) s =\n    (if s = 1 then - Ln 2 else (2 powr (1 - s) - 1) / (s - 1)) *\n    ((s - 1) * pre_zeta 1 s + 1)", "by (cases \"s = 1\") (auto simp: perzeta_one_half_left field_simps zeta_def hurwitz_zeta_def)"], ["", "end"]]}