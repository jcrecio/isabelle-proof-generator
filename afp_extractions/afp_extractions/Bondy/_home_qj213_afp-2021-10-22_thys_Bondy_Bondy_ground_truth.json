{"file_name": "/home/qj213/afp-2021-10-22/thys/Bondy/Bondy.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Bondy", "problem_names": ["lemma card_less_if_surj_not_inj:\n  \"\\<lbrakk> finite A; f ` A = B; \\<not> inj_on f A \\<rbrakk> \\<Longrightarrow> card B < card A\"", "theorem Bondy : \n  assumes \"\\<forall>A \\<in> F. A \\<subseteq> X\" and \"card X \\<ge> 1\" and \"card F = card X\"\n  shows \"\\<exists>D. D \\<subseteq> X & card D < card X & card (inter D ` F) = card F\""], "translations": [["", "lemma card_less_if_surj_not_inj:\n  \"\\<lbrakk> finite A; f ` A = B; \\<not> inj_on f A \\<rbrakk> \\<Longrightarrow> card B < card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; f ` A = B; \\<not> inj_on f A\\<rbrakk>\n    \\<Longrightarrow> card B < card A", "by (metis card_image_le inj_on_iff_eq_card order_le_neq_trans)"], ["", "theorem Bondy : \n  assumes \"\\<forall>A \\<in> F. A \\<subseteq> X\" and \"card X \\<ge> 1\" and \"card F = card X\"\n  shows \"\\<exists>D. D \\<subseteq> X & card D < card X & card (inter D ` F) = card F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D < card X \\<and> card ((\\<inter>) D ` F) = card F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D < card X \\<and> card ((\\<inter>) D ` F) = card F", "from assms(2,3)"], ["proof (chain)\npicking this:\n  1 \\<le> card X\n  card F = card X", "have \"finite F\" and \"finite X\""], ["proof (prove)\nusing this:\n  1 \\<le> card X\n  card F = card X\n\ngoal (1 subgoal):\n 1. finite F &&& finite X", "by (metis card.infinite not_one_le_zero)+"], ["proof (state)\nthis:\n  finite F\n  finite X\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D < card X \\<and> card ((\\<inter>) D ` F) = card F", "{"], ["proof (state)\nthis:\n  finite F\n  finite X\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D < card X \\<and> card ((\\<inter>) D ` F) = card F", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D < card X \\<and> card ((\\<inter>) D ` F) = card F", "have \"m < card F \\<Longrightarrow> \\<exists>D. D \\<subseteq> X & card D \\<le> m & card (inter D ` F) \\<ge> m + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m < card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> m \\<and> m + 1 \\<le> card ((\\<inter>) D ` F)", "proof (induction m)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> 0 \\<and> 0 + 1 \\<le> card ((\\<inter>) D ` F)\n 2. \\<And>m.\n       \\<lbrakk>m < card F \\<Longrightarrow>\n                \\<exists>D\\<subseteq>X.\n                   card D \\<le> m \\<and>\n                   m + 1 \\<le> card ((\\<inter>) D ` F);\n        Suc m < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D\\<subseteq>X.\n                            card D \\<le> Suc m \\<and>\n                            Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "case 0"], ["proof (state)\nthis:\n  0 < card F\n\ngoal (2 subgoals):\n 1. 0 < card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> 0 \\<and> 0 + 1 \\<le> card ((\\<inter>) D ` F)\n 2. \\<And>m.\n       \\<lbrakk>m < card F \\<Longrightarrow>\n                \\<exists>D\\<subseteq>X.\n                   card D \\<le> m \\<and>\n                   m + 1 \\<le> card ((\\<inter>) D ` F);\n        Suc m < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D\\<subseteq>X.\n                            card D \\<le> Suc m \\<and>\n                            Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "hence \"{} \\<subseteq> X & card {} \\<le> 0 & card (inter {} ` F) \\<ge> 0 + 1\""], ["proof (prove)\nusing this:\n  0 < card F\n\ngoal (1 subgoal):\n 1. {} \\<subseteq> X \\<and>\n    card {} \\<le> 0 \\<and> 0 + 1 \\<le> card ((\\<inter>) {} ` F)", "by auto (metis Suc_leI card_eq_0_iff empty_is_image finite_imageI gr0I)"], ["proof (state)\nthis:\n  {} \\<subseteq> X \\<and>\n  card {} \\<le> 0 \\<and> 0 + 1 \\<le> card ((\\<inter>) {} ` F)\n\ngoal (2 subgoals):\n 1. 0 < card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> 0 \\<and> 0 + 1 \\<le> card ((\\<inter>) D ` F)\n 2. \\<And>m.\n       \\<lbrakk>m < card F \\<Longrightarrow>\n                \\<exists>D\\<subseteq>X.\n                   card D \\<le> m \\<and>\n                   m + 1 \\<le> card ((\\<inter>) D ` F);\n        Suc m < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D\\<subseteq>X.\n                            card D \\<le> Suc m \\<and>\n                            Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "thus \"\\<exists>D. (D \\<subseteq> X & card D \\<le> 0 & card (inter D ` F) \\<ge> 0 + 1)\""], ["proof (prove)\nusing this:\n  {} \\<subseteq> X \\<and>\n  card {} \\<le> 0 \\<and> 0 + 1 \\<le> card ((\\<inter>) {} ` F)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D \\<le> 0 \\<and> 0 + 1 \\<le> card ((\\<inter>) D ` F)", "by blast"], ["proof (state)\nthis:\n  \\<exists>D\\<subseteq>X.\n     card D \\<le> 0 \\<and> 0 + 1 \\<le> card ((\\<inter>) D ` F)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>m < card F \\<Longrightarrow>\n                \\<exists>D\\<subseteq>X.\n                   card D \\<le> m \\<and>\n                   m + 1 \\<le> card ((\\<inter>) D ` F);\n        Suc m < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D\\<subseteq>X.\n                            card D \\<le> Suc m \\<and>\n                            Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>m < card F \\<Longrightarrow>\n                \\<exists>D\\<subseteq>X.\n                   card D \\<le> m \\<and>\n                   m + 1 \\<le> card ((\\<inter>) D ` F);\n        Suc m < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D\\<subseteq>X.\n                            card D \\<le> Suc m \\<and>\n                            Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "case (Suc m)"], ["proof (state)\nthis:\n  m < card F \\<Longrightarrow>\n  \\<exists>D\\<subseteq>X.\n     card D \\<le> m \\<and> m + 1 \\<le> card ((\\<inter>) D ` F)\n  Suc m < card F\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>m < card F \\<Longrightarrow>\n                \\<exists>D\\<subseteq>X.\n                   card D \\<le> m \\<and>\n                   m + 1 \\<le> card ((\\<inter>) D ` F);\n        Suc m < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D\\<subseteq>X.\n                            card D \\<le> Suc m \\<and>\n                            Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "hence \"m < card F\""], ["proof (prove)\nusing this:\n  m < card F \\<Longrightarrow>\n  \\<exists>D\\<subseteq>X.\n     card D \\<le> m \\<and> m + 1 \\<le> card ((\\<inter>) D ` F)\n  Suc m < card F\n\ngoal (1 subgoal):\n 1. m < card F", "by arith"], ["proof (state)\nthis:\n  m < card F\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>m < card F \\<Longrightarrow>\n                \\<exists>D\\<subseteq>X.\n                   card D \\<le> m \\<and>\n                   m + 1 \\<le> card ((\\<inter>) D ` F);\n        Suc m < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D\\<subseteq>X.\n                            card D \\<le> Suc m \\<and>\n                            Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "with Suc.IH"], ["proof (chain)\npicking this:\n  m < card F \\<Longrightarrow>\n  \\<exists>D\\<subseteq>X.\n     card D \\<le> m \\<and> m + 1 \\<le> card ((\\<inter>) D ` F)\n  m < card F", "obtain D\n        where D: \"D \\<subseteq> X \\<and> card D \\<le> m \\<and> m + 1 \\<le> card (inter D ` F)\""], ["proof (prove)\nusing this:\n  m < card F \\<Longrightarrow>\n  \\<exists>D\\<subseteq>X.\n     card D \\<le> m \\<and> m + 1 \\<le> card ((\\<inter>) D ` F)\n  m < card F\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        D \\<subseteq> X \\<and>\n        card D \\<le> m \\<and>\n        m + 1 \\<le> card ((\\<inter>) D ` F) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  D \\<subseteq> X \\<and>\n  card D \\<le> m \\<and> m + 1 \\<le> card ((\\<inter>) D ` F)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>m < card F \\<Longrightarrow>\n                \\<exists>D\\<subseteq>X.\n                   card D \\<le> m \\<and>\n                   m + 1 \\<le> card ((\\<inter>) D ` F);\n        Suc m < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D\\<subseteq>X.\n                            card D \\<le> Suc m \\<and>\n                            Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "with \\<open>finite X\\<close>"], ["proof (chain)\npicking this:\n  finite X\n  D \\<subseteq> X \\<and>\n  card D \\<le> m \\<and> m + 1 \\<le> card ((\\<inter>) D ` F)", "have \"finite D\""], ["proof (prove)\nusing this:\n  finite X\n  D \\<subseteq> X \\<and>\n  card D \\<le> m \\<and> m + 1 \\<le> card ((\\<inter>) D ` F)\n\ngoal (1 subgoal):\n 1. finite D", "by (auto intro: finite_subset)"], ["proof (state)\nthis:\n  finite D\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>m < card F \\<Longrightarrow>\n                \\<exists>D\\<subseteq>X.\n                   card D \\<le> m \\<and>\n                   m + 1 \\<le> card ((\\<inter>) D ` F);\n        Suc m < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D\\<subseteq>X.\n                            card D \\<le> Suc m \\<and>\n                            Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "proof (cases \"card (inter D ` F) = card F\")"], ["proof (state)\ngoal (2 subgoals):\n 1. card ((\\<inter>) D ` F) = card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)\n 2. card ((\\<inter>) D ` F) \\<noteq> card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "case True"], ["proof (state)\nthis:\n  card ((\\<inter>) D ` F) = card F\n\ngoal (2 subgoals):\n 1. card ((\\<inter>) D ` F) = card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)\n 2. card ((\\<inter>) D ` F) \\<noteq> card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "hence \"D \\<subseteq> X \\<and> card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card(inter D ` F)\""], ["proof (prove)\nusing this:\n  card ((\\<inter>) D ` F) = card F\n\ngoal (1 subgoal):\n 1. D \\<subseteq> X \\<and>\n    card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "using D Suc.prems"], ["proof (prove)\nusing this:\n  card ((\\<inter>) D ` F) = card F\n  D \\<subseteq> X \\<and>\n  card D \\<le> m \\<and> m + 1 \\<le> card ((\\<inter>) D ` F)\n  Suc m < card F\n\ngoal (1 subgoal):\n 1. D \\<subseteq> X \\<and>\n    card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "by auto"], ["proof (state)\nthis:\n  D \\<subseteq> X \\<and>\n  card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)\n\ngoal (2 subgoals):\n 1. card ((\\<inter>) D ` F) = card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)\n 2. card ((\\<inter>) D ` F) \\<noteq> card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "thus ?thesis"], ["proof (prove)\nusing this:\n  D \\<subseteq> X \\<and>\n  card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "by blast"], ["proof (state)\nthis:\n  \\<exists>D\\<subseteq>X.\n     card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)\n\ngoal (1 subgoal):\n 1. card ((\\<inter>) D ` F) \\<noteq> card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. card ((\\<inter>) D ` F) \\<noteq> card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "case False"], ["proof (state)\nthis:\n  card ((\\<inter>) D ` F) \\<noteq> card F\n\ngoal (1 subgoal):\n 1. card ((\\<inter>) D ` F) \\<noteq> card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "hence \"~ inj_on (inter D) F\""], ["proof (prove)\nusing this:\n  card ((\\<inter>) D ` F) \\<noteq> card F\n\ngoal (1 subgoal):\n 1. \\<not> inj_on ((\\<inter>) D) F", "by (auto simp: card_image)"], ["proof (state)\nthis:\n  \\<not> inj_on ((\\<inter>) D) F\n\ngoal (1 subgoal):\n 1. card ((\\<inter>) D ` F) \\<noteq> card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "then"], ["proof (chain)\npicking this:\n  \\<not> inj_on ((\\<inter>) D) F", "obtain A1 A2 where \"A1 \\<in> F\" and \"A2 \\<in> F\" and \n          \"D \\<inter> A1 = D \\<inter> A2\" and \"A1 \\<noteq> A2\""], ["proof (prove)\nusing this:\n  \\<not> inj_on ((\\<inter>) D) F\n\ngoal (1 subgoal):\n 1. (\\<And>A1 A2.\n        \\<lbrakk>A1 \\<in> F; A2 \\<in> F; D \\<inter> A1 = D \\<inter> A2;\n         A1 \\<noteq> A2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: inj_on_def)"], ["proof (state)\nthis:\n  A1 \\<in> F\n  A2 \\<in> F\n  D \\<inter> A1 = D \\<inter> A2\n  A1 \\<noteq> A2\n\ngoal (1 subgoal):\n 1. card ((\\<inter>) D ` F) \\<noteq> card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "then"], ["proof (chain)\npicking this:\n  A1 \\<in> F\n  A2 \\<in> F\n  D \\<inter> A1 = D \\<inter> A2\n  A1 \\<noteq> A2", "obtain x where x: \"x : (A1 - A2) \\<union> (A2 - A1)\""], ["proof (prove)\nusing this:\n  A1 \\<in> F\n  A2 \\<in> F\n  D \\<inter> A1 = D \\<inter> A2\n  A1 \\<noteq> A2\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> A1 - A2 \\<union> (A2 - A1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> A1 - A2 \\<union> (A2 - A1)\n\ngoal (1 subgoal):\n 1. card ((\\<inter>) D ` F) \\<noteq> card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "from \\<open>\\<forall>A \\<in> F. A \\<subseteq> X\\<close> \\<open>A1 \\<in> F\\<close> \\<open>A2 \\<in> F\\<close> x"], ["proof (chain)\npicking this:\n  \\<forall>A\\<in>F. A \\<subseteq> X\n  A1 \\<in> F\n  A2 \\<in> F\n  x \\<in> A1 - A2 \\<union> (A2 - A1)", "have \"x : X\""], ["proof (prove)\nusing this:\n  \\<forall>A\\<in>F. A \\<subseteq> X\n  A1 \\<in> F\n  A2 \\<in> F\n  x \\<in> A1 - A2 \\<union> (A2 - A1)\n\ngoal (1 subgoal):\n 1. x \\<in> X", "by auto"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. card ((\\<inter>) D ` F) \\<noteq> card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "let ?E = \"insert x D\""], ["proof (state)\ngoal (1 subgoal):\n 1. card ((\\<inter>) D ` F) \\<noteq> card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "from D \\<open>finite D\\<close>"], ["proof (chain)\npicking this:\n  D \\<subseteq> X \\<and>\n  card D \\<le> m \\<and> m + 1 \\<le> card ((\\<inter>) D ` F)\n  finite D", "have \"card ?E \\<le> Suc m\""], ["proof (prove)\nusing this:\n  D \\<subseteq> X \\<and>\n  card D \\<le> m \\<and> m + 1 \\<le> card ((\\<inter>) D ` F)\n  finite D\n\ngoal (1 subgoal):\n 1. card (insert x D) \\<le> Suc m", "by (metis (full_types) Suc_le_mono card_insert_if le_Suc_eq)"], ["proof (state)\nthis:\n  card (insert x D) \\<le> Suc m\n\ngoal (1 subgoal):\n 1. card ((\\<inter>) D ` F) \\<noteq> card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "moreover"], ["proof (state)\nthis:\n  card (insert x D) \\<le> Suc m\n\ngoal (1 subgoal):\n 1. card ((\\<inter>) D ` F) \\<noteq> card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "with D \\<open>x:X\\<close>"], ["proof (chain)\npicking this:\n  D \\<subseteq> X \\<and>\n  card D \\<le> m \\<and> m + 1 \\<le> card ((\\<inter>) D ` F)\n  x \\<in> X\n  card (insert x D) \\<le> Suc m", "have \"?E \\<subseteq> X\""], ["proof (prove)\nusing this:\n  D \\<subseteq> X \\<and>\n  card D \\<le> m \\<and> m + 1 \\<le> card ((\\<inter>) D ` F)\n  x \\<in> X\n  card (insert x D) \\<le> Suc m\n\ngoal (1 subgoal):\n 1. insert x D \\<subseteq> X", "by auto"], ["proof (state)\nthis:\n  insert x D \\<subseteq> X\n\ngoal (1 subgoal):\n 1. card ((\\<inter>) D ` F) \\<noteq> card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "moreover"], ["proof (state)\nthis:\n  insert x D \\<subseteq> X\n\ngoal (1 subgoal):\n 1. card ((\\<inter>) D ` F) \\<noteq> card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "have \"Suc m < card (inter ?E ` F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc m < card ((\\<inter>) (insert x D) ` F)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Suc m < card ((\\<inter>) (insert x D) ` F)", "from \\<open>D \\<inter> A1 = D \\<inter> A2\\<close>"], ["proof (chain)\npicking this:\n  D \\<inter> A1 = D \\<inter> A2", "have 1: \"(D \\<inter> (?E \\<inter> A1)) = (D \\<inter> (?E \\<inter> A2))\""], ["proof (prove)\nusing this:\n  D \\<inter> A1 = D \\<inter> A2\n\ngoal (1 subgoal):\n 1. D \\<inter> (insert x D \\<inter> A1) =\n    D \\<inter> (insert x D \\<inter> A2)", "by auto"], ["proof (state)\nthis:\n  D \\<inter> (insert x D \\<inter> A1) = D \\<inter> (insert x D \\<inter> A2)\n\ngoal (1 subgoal):\n 1. Suc m < card ((\\<inter>) (insert x D) ` F)", "from x"], ["proof (chain)\npicking this:\n  x \\<in> A1 - A2 \\<union> (A2 - A1)", "have 2: \"?E Int A1 \\<noteq> ?E Int A2\""], ["proof (prove)\nusing this:\n  x \\<in> A1 - A2 \\<union> (A2 - A1)\n\ngoal (1 subgoal):\n 1. insert x D \\<inter> A1 \\<noteq> insert x D \\<inter> A2", "by auto"], ["proof (state)\nthis:\n  insert x D \\<inter> A1 \\<noteq> insert x D \\<inter> A2\n\ngoal (1 subgoal):\n 1. Suc m < card ((\\<inter>) (insert x D) ` F)", "have 3: \"inter D \\<circ> inter ?E = inter D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<inter>) D \\<circ> (\\<inter>) (insert x D) = (\\<inter>) D", "by auto"], ["proof (state)\nthis:\n  (\\<inter>) D \\<circ> (\\<inter>) (insert x D) = (\\<inter>) D\n\ngoal (1 subgoal):\n 1. Suc m < card ((\\<inter>) (insert x D) ` F)", "have 4: \"~ inj_on (inter D) (inter ?E ` F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> inj_on ((\\<inter>) D) ((\\<inter>) (insert x D) ` F)", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>xa\\<in>(\\<inter>) (insert x D) ` F.\n               \\<forall>y\\<in>(\\<inter>) (insert x D) ` F.\n                  D \\<inter> xa = D \\<inter> y \\<longrightarrow> xa = y)", "using 1 2 \\<open>A1 \\<in> F\\<close> \\<open>A2 \\<in> F\\<close>"], ["proof (prove)\nusing this:\n  D \\<inter> (insert x D \\<inter> A1) = D \\<inter> (insert x D \\<inter> A2)\n  insert x D \\<inter> A1 \\<noteq> insert x D \\<inter> A2\n  A1 \\<in> F\n  A2 \\<in> F\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>xa\\<in>(\\<inter>) (insert x D) ` F.\n               \\<forall>y\\<in>(\\<inter>) (insert x D) ` F.\n                  D \\<inter> xa = D \\<inter> y \\<longrightarrow> xa = y)", "by blast"], ["proof (state)\nthis:\n  \\<not> inj_on ((\\<inter>) D) ((\\<inter>) (insert x D) ` F)\n\ngoal (1 subgoal):\n 1. Suc m < card ((\\<inter>) (insert x D) ` F)", "from D"], ["proof (chain)\npicking this:\n  D \\<subseteq> X \\<and>\n  card D \\<le> m \\<and> m + 1 \\<le> card ((\\<inter>) D ` F)", "have \"Suc m \\<le> card (inter D ` F)\""], ["proof (prove)\nusing this:\n  D \\<subseteq> X \\<and>\n  card D \\<le> m \\<and> m + 1 \\<le> card ((\\<inter>) D ` F)\n\ngoal (1 subgoal):\n 1. Suc m \\<le> card ((\\<inter>) D ` F)", "by auto"], ["proof (state)\nthis:\n  Suc m \\<le> card ((\\<inter>) D ` F)\n\ngoal (1 subgoal):\n 1. Suc m < card ((\\<inter>) (insert x D) ` F)", "also"], ["proof (state)\nthis:\n  Suc m \\<le> card ((\\<inter>) D ` F)\n\ngoal (1 subgoal):\n 1. Suc m < card ((\\<inter>) (insert x D) ` F)", "have \"... < card (inter ?E ` F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card ((\\<inter>) D ` F) < card ((\\<inter>) (insert x D) ` F)", "by (rule card_less_if_surj_not_inj[of _ \"inter D\"])\n              (auto simp add: image_image 3 4 \\<open>finite F\\<close>)"], ["proof (state)\nthis:\n  card ((\\<inter>) D ` F) < card ((\\<inter>) (insert x D) ` F)\n\ngoal (1 subgoal):\n 1. Suc m < card ((\\<inter>) (insert x D) ` F)", "finally"], ["proof (chain)\npicking this:\n  Suc m < card ((\\<inter>) (insert x D) ` F)", "show ?thesis"], ["proof (prove)\nusing this:\n  Suc m < card ((\\<inter>) (insert x D) ` F)\n\ngoal (1 subgoal):\n 1. Suc m < card ((\\<inter>) (insert x D) ` F)", "."], ["proof (state)\nthis:\n  Suc m < card ((\\<inter>) (insert x D) ` F)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Suc m < card ((\\<inter>) (insert x D) ` F)\n\ngoal (1 subgoal):\n 1. card ((\\<inter>) D ` F) \\<noteq> card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "ultimately"], ["proof (chain)\npicking this:\n  card (insert x D) \\<le> Suc m\n  insert x D \\<subseteq> X\n  Suc m < card ((\\<inter>) (insert x D) ` F)", "have \"?E\\<subseteq>X \\<and> card ?E \\<le> Suc m \\<and> Suc m + 1 \\<le> card (inter ?E ` F)\""], ["proof (prove)\nusing this:\n  card (insert x D) \\<le> Suc m\n  insert x D \\<subseteq> X\n  Suc m < card ((\\<inter>) (insert x D) ` F)\n\ngoal (1 subgoal):\n 1. insert x D \\<subseteq> X \\<and>\n    card (insert x D) \\<le> Suc m \\<and>\n    Suc m + 1 \\<le> card ((\\<inter>) (insert x D) ` F)", "by auto"], ["proof (state)\nthis:\n  insert x D \\<subseteq> X \\<and>\n  card (insert x D) \\<le> Suc m \\<and>\n  Suc m + 1 \\<le> card ((\\<inter>) (insert x D) ` F)\n\ngoal (1 subgoal):\n 1. card ((\\<inter>) D ` F) \\<noteq> card F \\<Longrightarrow>\n    \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "thus \"\\<exists>D\\<subseteq>X. card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card (inter D ` F)\""], ["proof (prove)\nusing this:\n  insert x D \\<subseteq> X \\<and>\n  card (insert x D) \\<le> Suc m \\<and>\n  Suc m + 1 \\<le> card ((\\<inter>) (insert x D) ` F)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)", "by blast"], ["proof (state)\nthis:\n  \\<exists>D\\<subseteq>X.\n     card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>D\\<subseteq>X.\n     card D \\<le> Suc m \\<and> Suc m + 1 \\<le> card ((\\<inter>) D ` F)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m < card F \\<Longrightarrow>\n  \\<exists>D\\<subseteq>X.\n     card D \\<le> m \\<and> m + 1 \\<le> card ((\\<inter>) D ` F)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D < card X \\<and> card ((\\<inter>) D ` F) = card F", "}"], ["proof (state)\nthis:\n  ?m2 < card F \\<Longrightarrow>\n  \\<exists>D\\<subseteq>X.\n     card D \\<le> ?m2 \\<and> ?m2 + 1 \\<le> card ((\\<inter>) D ` F)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D < card X \\<and> card ((\\<inter>) D ` F) = card F", "moreover"], ["proof (state)\nthis:\n  ?m2 < card F \\<Longrightarrow>\n  \\<exists>D\\<subseteq>X.\n     card D \\<le> ?m2 \\<and> ?m2 + 1 \\<le> card ((\\<inter>) D ` F)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D < card X \\<and> card ((\\<inter>) D ` F) = card F", "from assms(2,3)"], ["proof (chain)\npicking this:\n  1 \\<le> card X\n  card F = card X", "have \"card X - 1 < card F\""], ["proof (prove)\nusing this:\n  1 \\<le> card X\n  card F = card X\n\ngoal (1 subgoal):\n 1. card X - 1 < card F", "by auto"], ["proof (state)\nthis:\n  card X - 1 < card F\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D < card X \\<and> card ((\\<inter>) D ` F) = card F", "ultimately"], ["proof (chain)\npicking this:\n  ?m2 < card F \\<Longrightarrow>\n  \\<exists>D\\<subseteq>X.\n     card D \\<le> ?m2 \\<and> ?m2 + 1 \\<le> card ((\\<inter>) D ` F)\n  card X - 1 < card F", "obtain D where \n    \"D \\<subseteq> X & card D \\<le> card X - 1 & card (inter D ` F) \\<ge> (card X - 1) + 1\""], ["proof (prove)\nusing this:\n  ?m2 < card F \\<Longrightarrow>\n  \\<exists>D\\<subseteq>X.\n     card D \\<le> ?m2 \\<and> ?m2 + 1 \\<le> card ((\\<inter>) D ` F)\n  card X - 1 < card F\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        D \\<subseteq> X \\<and>\n        card D \\<le> card X - 1 \\<and>\n        card X - 1 + 1 \\<le> card ((\\<inter>) D ` F) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  D \\<subseteq> X \\<and>\n  card D \\<le> card X - 1 \\<and>\n  card X - 1 + 1 \\<le> card ((\\<inter>) D ` F)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D < card X \\<and> card ((\\<inter>) D ` F) = card F", "moreover"], ["proof (state)\nthis:\n  D \\<subseteq> X \\<and>\n  card D \\<le> card X - 1 \\<and>\n  card X - 1 + 1 \\<le> card ((\\<inter>) D ` F)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D < card X \\<and> card ((\\<inter>) D ` F) = card F", "with \\<open>finite F\\<close>"], ["proof (chain)\npicking this:\n  finite F\n  D \\<subseteq> X \\<and>\n  card D \\<le> card X - 1 \\<and>\n  card X - 1 + 1 \\<le> card ((\\<inter>) D ` F)", "have \"card (inter D ` F) \\<le> card F\""], ["proof (prove)\nusing this:\n  finite F\n  D \\<subseteq> X \\<and>\n  card D \\<le> card X - 1 \\<and>\n  card X - 1 + 1 \\<le> card ((\\<inter>) D ` F)\n\ngoal (1 subgoal):\n 1. card ((\\<inter>) D ` F) \\<le> card F", "by (elim card_image_le)"], ["proof (state)\nthis:\n  card ((\\<inter>) D ` F) \\<le> card F\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D < card X \\<and> card ((\\<inter>) D ` F) = card F", "ultimately"], ["proof (chain)\npicking this:\n  D \\<subseteq> X \\<and>\n  card D \\<le> card X - 1 \\<and>\n  card X - 1 + 1 \\<le> card ((\\<inter>) D ` F)\n  card ((\\<inter>) D ` F) \\<le> card F", "have \"D \\<subseteq> X & card D < card X & card (inter D ` F) = card F\""], ["proof (prove)\nusing this:\n  D \\<subseteq> X \\<and>\n  card D \\<le> card X - 1 \\<and>\n  card X - 1 + 1 \\<le> card ((\\<inter>) D ` F)\n  card ((\\<inter>) D ` F) \\<le> card F\n\ngoal (1 subgoal):\n 1. D \\<subseteq> X \\<and>\n    card D < card X \\<and> card ((\\<inter>) D ` F) = card F", "using \\<open>card F = card X\\<close>"], ["proof (prove)\nusing this:\n  D \\<subseteq> X \\<and>\n  card D \\<le> card X - 1 \\<and>\n  card X - 1 + 1 \\<le> card ((\\<inter>) D ` F)\n  card ((\\<inter>) D ` F) \\<le> card F\n  card F = card X\n\ngoal (1 subgoal):\n 1. D \\<subseteq> X \\<and>\n    card D < card X \\<and> card ((\\<inter>) D ` F) = card F", "by auto"], ["proof (state)\nthis:\n  D \\<subseteq> X \\<and>\n  card D < card X \\<and> card ((\\<inter>) D ` F) = card F\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D < card X \\<and> card ((\\<inter>) D ` F) = card F", "thus ?thesis"], ["proof (prove)\nusing this:\n  D \\<subseteq> X \\<and>\n  card D < card X \\<and> card ((\\<inter>) D ` F) = card F\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<subseteq>X.\n       card D < card X \\<and> card ((\\<inter>) D ` F) = card F", "by auto"], ["proof (state)\nthis:\n  \\<exists>D\\<subseteq>X.\n     card D < card X \\<and> card ((\\<inter>) D ` F) = card F\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}