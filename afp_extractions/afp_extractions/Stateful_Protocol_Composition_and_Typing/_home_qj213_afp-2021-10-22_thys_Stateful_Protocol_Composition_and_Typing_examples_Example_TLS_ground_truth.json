{"file_name": "/home/qj213/afp-2021-10-22/thys/Stateful_Protocol_Composition_and_Typing/examples/Example_TLS.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Stateful_Protocol_Composition_and_Typing", "problem_names": ["lemma assm1:\n  \"Ana t = (K,M) \\<Longrightarrow> fv\\<^sub>s\\<^sub>e\\<^sub>t (set K) \\<subseteq> fv t\"\n  \"Ana t = (K,M) \\<Longrightarrow> (\\<And>g S'. Fun g S' \\<sqsubseteq> t \\<Longrightarrow> length S' = arity g)\n                \\<Longrightarrow> k \\<in> set K \\<Longrightarrow> Fun f T' \\<sqsubseteq> k \\<Longrightarrow> length T' = arity f\"\n  \"Ana t = (K,M) \\<Longrightarrow> K \\<noteq> [] \\<or> M \\<noteq> [] \\<Longrightarrow> Ana (t \\<cdot> \\<delta>) = (K \\<cdot>\\<^sub>l\\<^sub>i\\<^sub>s\\<^sub>t \\<delta>, M \\<cdot>\\<^sub>l\\<^sub>i\\<^sub>s\\<^sub>t \\<delta>)\"", "lemma assm2: \"Ana (Fun f T) = (K, M) \\<Longrightarrow> set M \\<subseteq> set T\"", "lemma assm6: \"0 < arity f \\<Longrightarrow> public f\"", "lemma assm7: \"arity c = 0 \\<Longrightarrow> \\<exists>a. \\<forall>X. \\<Gamma> (Fun c X) = TAtom a\"", "lemma assm8: \"0 < arity f \\<Longrightarrow> \\<Gamma> (Fun f X) = TComp f (map \\<Gamma> X)\"", "lemma assm9: \"infinite {c. \\<Gamma> (Fun c []) = TAtom a \\<and> public c}\"", "lemma assm10: \"TComp f T \\<sqsubseteq> \\<Gamma> t \\<Longrightarrow> arity f > 0\"", "lemma assm11: \"im.wf\\<^sub>t\\<^sub>r\\<^sub>m (\\<Gamma> (Var x))\"", "lemma assm12: \"\\<Gamma> (Var (\\<tau>, n)) = \\<Gamma> (Var (\\<tau>, m))\"", "lemma Ana_const: \"arity c = 0 \\<Longrightarrow> Ana (Fun c T) = ([],[])\"", "lemma Ana_keys_subterm: \"Ana t = (K,T) \\<Longrightarrow> k \\<in> set K \\<Longrightarrow> k \\<sqsubset> t\"", "theorem \"tm.tfr\\<^sub>s\\<^sub>e\\<^sub>t (set M\\<^sub>T\\<^sub>L\\<^sub>S)\""], "translations": [["", "lemma assm1:\n  \"Ana t = (K,M) \\<Longrightarrow> fv\\<^sub>s\\<^sub>e\\<^sub>t (set K) \\<subseteq> fv t\"\n  \"Ana t = (K,M) \\<Longrightarrow> (\\<And>g S'. Fun g S' \\<sqsubseteq> t \\<Longrightarrow> length S' = arity g)\n                \\<Longrightarrow> k \\<in> set K \\<Longrightarrow> Fun f T' \\<sqsubseteq> k \\<Longrightarrow> length T' = arity f\"\n  \"Ana t = (K,M) \\<Longrightarrow> K \\<noteq> [] \\<or> M \\<noteq> [] \\<Longrightarrow> Ana (t \\<cdot> \\<delta>) = (K \\<cdot>\\<^sub>l\\<^sub>i\\<^sub>s\\<^sub>t \\<delta>, M \\<cdot>\\<^sub>l\\<^sub>i\\<^sub>s\\<^sub>t \\<delta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Ana t = (K, M) \\<Longrightarrow>\n     fv\\<^sub>s\\<^sub>e\\<^sub>t (set K) \\<subseteq> fv t) &&&\n    (\\<lbrakk>Ana t = (K, M);\n      \\<And>g S'.\n         Fun g S' \\<sqsubseteq> t \\<Longrightarrow> length S' = arity g;\n      k \\<in> set K; Fun f T' \\<sqsubseteq> k\\<rbrakk>\n     \\<Longrightarrow> length T' = arity f) &&&\n    (\\<lbrakk>Ana t = (K, M); K \\<noteq> [] \\<or> M \\<noteq> []\\<rbrakk>\n     \\<Longrightarrow> Ana (t \\<cdot> \\<delta>) =\n                       (K \\<cdot>\\<^sub>l\\<^sub>i\\<^sub>s\\<^sub>t \\<delta>,\n                        M \\<cdot>\\<^sub>l\\<^sub>i\\<^sub>s\\<^sub>t \\<delta>))", "by (rule Ana.cases[of \"t\"], auto elim!: Ana\\<^sub>c\\<^sub>r\\<^sub>y\\<^sub>p\\<^sub>t.elims Ana\\<^sub>s\\<^sub>i\\<^sub>g\\<^sub>n.elims)+"], ["", "lemma assm2: \"Ana (Fun f T) = (K, M) \\<Longrightarrow> set M \\<subseteq> set T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ana (Fun f T) = (K, M) \\<Longrightarrow> set M \\<subseteq> set T", "by (rule Ana.cases[of \"Fun f T\"]) (auto elim!: Ana\\<^sub>c\\<^sub>r\\<^sub>y\\<^sub>p\\<^sub>t.elims Ana\\<^sub>s\\<^sub>i\\<^sub>g\\<^sub>n.elims)"], ["", "lemma assm6: \"0 < arity f \\<Longrightarrow> public f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < arity f \\<Longrightarrow> public f", "by (cases f) simp_all"], ["", "global_interpretation im: intruder_model arity public Ana\n  defines wf\\<^sub>t\\<^sub>r\\<^sub>m = \"im.wf\\<^sub>t\\<^sub>r\\<^sub>m\"\n    and wf\\<^sub>t\\<^sub>r\\<^sub>m\\<^sub>s = \"im.wf\\<^sub>t\\<^sub>r\\<^sub>m\\<^sub>s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. intruder_model arity Ana", "by unfold_locales (metis assm1(1), metis assm1(2), rule Ana.simps, metis assm2, metis assm1(3))"], ["", "subsection \\<open>TLS Example: Typing function\\<close>"], ["", "definition \\<Gamma>\\<^sub>v::\"ex_var \\<Rightarrow> ex_type\" where\n  \"\\<Gamma>\\<^sub>v v = (if (\\<forall>t \\<in> subterms (fst v). case t of\n                (TComp f T) \\<Rightarrow> arity f > 0 \\<and> arity f = length T\n              | _ \\<Rightarrow> True)\n           then fst v else TAtom Bot)\""], ["", "fun \\<Gamma>::\"ex_term \\<Rightarrow> ex_type\" where\n  \"\\<Gamma> (Var v) = \\<Gamma>\\<^sub>v v\"\n| \"\\<Gamma> (Fun (privkey _) _) = TAtom PrivKey\"\n| \"\\<Gamma> (Fun changeCipher _) = TAtom PubConst\"\n| \"\\<Gamma> (Fun serverHelloDone _) = TAtom PubConst\"\n| \"\\<Gamma> (Fun (pubconst \\<tau> _) _) = TAtom \\<tau>\"\n| \"\\<Gamma> (Fun f T) = TComp f (map \\<Gamma> T)\""], ["", "subsection \\<open>TLS Example: Locale interpretation (typed model)\\<close>"], ["", "lemma assm7: \"arity c = 0 \\<Longrightarrow> \\<exists>a. \\<forall>X. \\<Gamma> (Fun c X) = TAtom a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arity c = 0 \\<Longrightarrow>\n    \\<exists>a. \\<forall>X. \\<Gamma> (Fun c X) = Var a", "by (cases c) simp_all"], ["", "lemma assm8: \"0 < arity f \\<Longrightarrow> \\<Gamma> (Fun f X) = TComp f (map \\<Gamma> X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < arity f \\<Longrightarrow>\n    \\<Gamma> (Fun f X) = Fun f (map \\<Gamma> X)", "by (cases f) simp_all"], ["", "lemma assm9: \"infinite {c. \\<Gamma> (Fun c []) = TAtom a \\<and> public c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite {c. \\<Gamma> (Fun c []) = Var a \\<and> public c}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite {c. \\<Gamma> (Fun c []) = Var a \\<and> public c}", "let ?T = \"(range (pubconst a))::ex_fun set\""], ["proof (state)\ngoal (1 subgoal):\n 1. infinite {c. \\<Gamma> (Fun c []) = Var a \\<and> public c}", "have *:\n      \"\\<And>x y::nat. x \\<in> UNIV \\<Longrightarrow> y \\<in> UNIV \\<Longrightarrow> (pubconst a x = pubconst a y) = (x = y)\"\n      \"\\<And>x::nat. x \\<in> UNIV \\<Longrightarrow> pubconst a x \\<in> ?T\"\n      \"\\<And>y::ex_fun. y \\<in> ?T \\<Longrightarrow> \\<exists>x \\<in> UNIV. y = pubconst a x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV\\<rbrakk>\n        \\<Longrightarrow> (pubconst a x = pubconst a y) = (x = y)) &&&\n    (\\<And>x.\n        x \\<in> UNIV \\<Longrightarrow>\n        pubconst a x \\<in> range (pubconst a)) &&&\n    (\\<And>y.\n        y \\<in> range (pubconst a) \\<Longrightarrow>\n        \\<exists>x\\<in>UNIV. y = pubconst a x)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> UNIV; ?y \\<in> UNIV\\<rbrakk>\n  \\<Longrightarrow> (pubconst a ?x = pubconst a ?y) = (?x = ?y)\n  ?x \\<in> UNIV \\<Longrightarrow> pubconst a ?x \\<in> range (pubconst a)\n  ?y \\<in> range (pubconst a) \\<Longrightarrow>\n  \\<exists>x\\<in>UNIV. ?y = pubconst a x\n\ngoal (1 subgoal):\n 1. infinite {c. \\<Gamma> (Fun c []) = Var a \\<and> public c}", "have \"?T \\<subseteq> {c. \\<Gamma> (Fun c []) = TAtom a \\<and> public c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (pubconst a)\n    \\<subseteq> {c. \\<Gamma> (Fun c []) = Var a \\<and> public c}", "by auto"], ["proof (state)\nthis:\n  range (pubconst a)\n  \\<subseteq> {c. \\<Gamma> (Fun c []) = Var a \\<and> public c}\n\ngoal (1 subgoal):\n 1. infinite {c. \\<Gamma> (Fun c []) = Var a \\<and> public c}", "moreover"], ["proof (state)\nthis:\n  range (pubconst a)\n  \\<subseteq> {c. \\<Gamma> (Fun c []) = Var a \\<and> public c}\n\ngoal (1 subgoal):\n 1. infinite {c. \\<Gamma> (Fun c []) = Var a \\<and> public c}", "have \"\\<exists>f::nat \\<Rightarrow> ex_fun. bij_betw f UNIV ?T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f. bij_betw f UNIV (range (pubconst a))", "using bij_betwI'[OF *]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y.\n              \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV\\<rbrakk>\n              \\<Longrightarrow> x \\<in> UNIV;\n   \\<And>x y.\n      \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV\\<rbrakk>\n      \\<Longrightarrow> y \\<in> UNIV;\n   \\<And>x. x \\<in> UNIV \\<Longrightarrow> x \\<in> UNIV;\n   \\<And>y.\n      y \\<in> range (pubconst a) \\<Longrightarrow>\n      y \\<in> range (pubconst a)\\<rbrakk>\n  \\<Longrightarrow> bij_betw (pubconst a) UNIV (range (pubconst a))\n\ngoal (1 subgoal):\n 1. \\<exists>f. bij_betw f UNIV (range (pubconst a))", "by blast"], ["proof (state)\nthis:\n  \\<exists>f. bij_betw f UNIV (range (pubconst a))\n\ngoal (1 subgoal):\n 1. infinite {c. \\<Gamma> (Fun c []) = Var a \\<and> public c}", "hence \"infinite ?T\""], ["proof (prove)\nusing this:\n  \\<exists>f. bij_betw f UNIV (range (pubconst a))\n\ngoal (1 subgoal):\n 1. infinite (range (pubconst a))", "by (metis nat_not_finite bij_betw_finite)"], ["proof (state)\nthis:\n  infinite (range (pubconst a))\n\ngoal (1 subgoal):\n 1. infinite {c. \\<Gamma> (Fun c []) = Var a \\<and> public c}", "ultimately"], ["proof (chain)\npicking this:\n  range (pubconst a)\n  \\<subseteq> {c. \\<Gamma> (Fun c []) = Var a \\<and> public c}\n  infinite (range (pubconst a))", "show ?thesis"], ["proof (prove)\nusing this:\n  range (pubconst a)\n  \\<subseteq> {c. \\<Gamma> (Fun c []) = Var a \\<and> public c}\n  infinite (range (pubconst a))\n\ngoal (1 subgoal):\n 1. infinite {c. \\<Gamma> (Fun c []) = Var a \\<and> public c}", "using infinite_super"], ["proof (prove)\nusing this:\n  range (pubconst a)\n  \\<subseteq> {c. \\<Gamma> (Fun c []) = Var a \\<and> public c}\n  infinite (range (pubconst a))\n  \\<lbrakk>?S \\<subseteq> ?T; infinite ?S\\<rbrakk>\n  \\<Longrightarrow> infinite ?T\n\ngoal (1 subgoal):\n 1. infinite {c. \\<Gamma> (Fun c []) = Var a \\<and> public c}", "by blast"], ["proof (state)\nthis:\n  infinite {c. \\<Gamma> (Fun c []) = Var a \\<and> public c}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma assm10: \"TComp f T \\<sqsubseteq> \\<Gamma> t \\<Longrightarrow> arity f > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fun f T \\<sqsubseteq> \\<Gamma> t \\<Longrightarrow> 0 < arity f", "proof (induction rule: \\<Gamma>.induct)"], ["proof (state)\ngoal (20 subgoals):\n 1. \\<And>v.\n       Fun f T \\<sqsubseteq> \\<Gamma> (Var v) \\<Longrightarrow> 0 < arity f\n 2. \\<And>uu_ uv_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun (privkey uu_) uv_) \\<Longrightarrow>\n       0 < arity f\n 3. \\<And>uw_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun changeCipher uw_) \\<Longrightarrow>\n       0 < arity f\n 4. \\<And>ux_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun serverHelloDone ux_) \\<Longrightarrow>\n       0 < arity f\n 5. \\<And>\\<tau> uy_ uz_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun (pubconst \\<tau> uy_) uz_) \\<Longrightarrow>\n       0 < arity f\n 6. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientHello Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 7. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientKeyExchange Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 8. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientFinished Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 9. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun serverHello Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 10. \\<And>Ta.\n        \\<lbrakk>\\<And>x.\n                    \\<lbrakk>x \\<in> set Ta;\n                     Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                    \\<Longrightarrow> 0 < arity f;\n         Fun f T \\<sqsubseteq> \\<Gamma> (Fun serverCert Ta)\\<rbrakk>\n        \\<Longrightarrow> 0 < arity f\nA total of 20 subgoals...", "case (1 x)"], ["proof (state)\nthis:\n  Fun f T \\<sqsubseteq> \\<Gamma> (Var x)\n\ngoal (20 subgoals):\n 1. \\<And>v.\n       Fun f T \\<sqsubseteq> \\<Gamma> (Var v) \\<Longrightarrow> 0 < arity f\n 2. \\<And>uu_ uv_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun (privkey uu_) uv_) \\<Longrightarrow>\n       0 < arity f\n 3. \\<And>uw_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun changeCipher uw_) \\<Longrightarrow>\n       0 < arity f\n 4. \\<And>ux_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun serverHelloDone ux_) \\<Longrightarrow>\n       0 < arity f\n 5. \\<And>\\<tau> uy_ uz_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun (pubconst \\<tau> uy_) uz_) \\<Longrightarrow>\n       0 < arity f\n 6. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientHello Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 7. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientKeyExchange Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 8. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientFinished Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 9. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun serverHello Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 10. \\<And>Ta.\n        \\<lbrakk>\\<And>x.\n                    \\<lbrakk>x \\<in> set Ta;\n                     Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                    \\<Longrightarrow> 0 < arity f;\n         Fun f T \\<sqsubseteq> \\<Gamma> (Fun serverCert Ta)\\<rbrakk>\n        \\<Longrightarrow> 0 < arity f\nA total of 20 subgoals...", "hence *: \"TComp f T \\<sqsubseteq> \\<Gamma>\\<^sub>v x\""], ["proof (prove)\nusing this:\n  Fun f T \\<sqsubseteq> \\<Gamma> (Var x)\n\ngoal (1 subgoal):\n 1. Fun f T \\<sqsubseteq> \\<Gamma>\\<^sub>v x", "by simp"], ["proof (state)\nthis:\n  Fun f T \\<sqsubseteq> \\<Gamma>\\<^sub>v x\n\ngoal (20 subgoals):\n 1. \\<And>v.\n       Fun f T \\<sqsubseteq> \\<Gamma> (Var v) \\<Longrightarrow> 0 < arity f\n 2. \\<And>uu_ uv_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun (privkey uu_) uv_) \\<Longrightarrow>\n       0 < arity f\n 3. \\<And>uw_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun changeCipher uw_) \\<Longrightarrow>\n       0 < arity f\n 4. \\<And>ux_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun serverHelloDone ux_) \\<Longrightarrow>\n       0 < arity f\n 5. \\<And>\\<tau> uy_ uz_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun (pubconst \\<tau> uy_) uz_) \\<Longrightarrow>\n       0 < arity f\n 6. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientHello Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 7. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientKeyExchange Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 8. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientFinished Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 9. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun serverHello Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 10. \\<And>Ta.\n        \\<lbrakk>\\<And>x.\n                    \\<lbrakk>x \\<in> set Ta;\n                     Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                    \\<Longrightarrow> 0 < arity f;\n         Fun f T \\<sqsubseteq> \\<Gamma> (Fun serverCert Ta)\\<rbrakk>\n        \\<Longrightarrow> 0 < arity f\nA total of 20 subgoals...", "hence \"\\<Gamma>\\<^sub>v x \\<noteq> TAtom Bot\""], ["proof (prove)\nusing this:\n  Fun f T \\<sqsubseteq> \\<Gamma>\\<^sub>v x\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<^sub>v x \\<noteq> Var Bot", "unfolding \\<Gamma>\\<^sub>v_def"], ["proof (prove)\nusing this:\n  Fun f T \\<sqsubseteq>\n  (if Ball (subterms (fst x))\n       (Term.term.case_term (\\<lambda>v. True)\n         (\\<lambda>f T. 0 < arity f \\<and> arity f = length T))\n   then fst x else Var Bot)\n\ngoal (1 subgoal):\n 1. (if Ball (subterms (fst x))\n         (Term.term.case_term (\\<lambda>v. True)\n           (\\<lambda>f T. 0 < arity f \\<and> arity f = length T))\n     then fst x else Var Bot) \\<noteq>\n    Var Bot", "by force"], ["proof (state)\nthis:\n  \\<Gamma>\\<^sub>v x \\<noteq> Var Bot\n\ngoal (20 subgoals):\n 1. \\<And>v.\n       Fun f T \\<sqsubseteq> \\<Gamma> (Var v) \\<Longrightarrow> 0 < arity f\n 2. \\<And>uu_ uv_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun (privkey uu_) uv_) \\<Longrightarrow>\n       0 < arity f\n 3. \\<And>uw_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun changeCipher uw_) \\<Longrightarrow>\n       0 < arity f\n 4. \\<And>ux_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun serverHelloDone ux_) \\<Longrightarrow>\n       0 < arity f\n 5. \\<And>\\<tau> uy_ uz_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun (pubconst \\<tau> uy_) uz_) \\<Longrightarrow>\n       0 < arity f\n 6. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientHello Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 7. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientKeyExchange Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 8. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientFinished Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 9. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun serverHello Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 10. \\<And>Ta.\n        \\<lbrakk>\\<And>x.\n                    \\<lbrakk>x \\<in> set Ta;\n                     Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                    \\<Longrightarrow> 0 < arity f;\n         Fun f T \\<sqsubseteq> \\<Gamma> (Fun serverCert Ta)\\<rbrakk>\n        \\<Longrightarrow> 0 < arity f\nA total of 20 subgoals...", "hence \"\\<forall>t \\<in> subterms (fst x). case t of\n                (TComp f T) \\<Rightarrow> arity f > 0 \\<and> arity f = length T\n              | _ \\<Rightarrow> True\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<^sub>v x \\<noteq> Var Bot\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>subterms (fst x).\n       case t of Var v \\<Rightarrow> True\n       | Fun f T \\<Rightarrow> 0 < arity f \\<and> arity f = length T", "unfolding \\<Gamma>\\<^sub>v_def"], ["proof (prove)\nusing this:\n  (if Ball (subterms (fst x))\n       (Term.term.case_term (\\<lambda>v. True)\n         (\\<lambda>f T. 0 < arity f \\<and> arity f = length T))\n   then fst x else Var Bot) \\<noteq>\n  Var Bot\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>subterms (fst x).\n       case t of Var v \\<Rightarrow> True\n       | Fun f T \\<Rightarrow> 0 < arity f \\<and> arity f = length T", "by argo"], ["proof (state)\nthis:\n  \\<forall>t\\<in>subterms (fst x).\n     case t of Var v \\<Rightarrow> True\n     | Fun f T \\<Rightarrow> 0 < arity f \\<and> arity f = length T\n\ngoal (20 subgoals):\n 1. \\<And>v.\n       Fun f T \\<sqsubseteq> \\<Gamma> (Var v) \\<Longrightarrow> 0 < arity f\n 2. \\<And>uu_ uv_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun (privkey uu_) uv_) \\<Longrightarrow>\n       0 < arity f\n 3. \\<And>uw_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun changeCipher uw_) \\<Longrightarrow>\n       0 < arity f\n 4. \\<And>ux_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun serverHelloDone ux_) \\<Longrightarrow>\n       0 < arity f\n 5. \\<And>\\<tau> uy_ uz_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun (pubconst \\<tau> uy_) uz_) \\<Longrightarrow>\n       0 < arity f\n 6. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientHello Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 7. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientKeyExchange Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 8. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientFinished Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 9. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun serverHello Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 10. \\<And>Ta.\n        \\<lbrakk>\\<And>x.\n                    \\<lbrakk>x \\<in> set Ta;\n                     Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                    \\<Longrightarrow> 0 < arity f;\n         Fun f T \\<sqsubseteq> \\<Gamma> (Fun serverCert Ta)\\<rbrakk>\n        \\<Longrightarrow> 0 < arity f\nA total of 20 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>subterms (fst x).\n     case t of Var v \\<Rightarrow> True\n     | Fun f T \\<Rightarrow> 0 < arity f \\<and> arity f = length T\n\ngoal (1 subgoal):\n 1. 0 < arity f", "using *"], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>subterms (fst x).\n     case t of Var v \\<Rightarrow> True\n     | Fun f T \\<Rightarrow> 0 < arity f \\<and> arity f = length T\n  Fun f T \\<sqsubseteq> \\<Gamma>\\<^sub>v x\n\ngoal (1 subgoal):\n 1. 0 < arity f", "unfolding \\<Gamma>\\<^sub>v_def"], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>subterms (fst x).\n     case t of Var v \\<Rightarrow> True\n     | Fun f T \\<Rightarrow> 0 < arity f \\<and> arity f = length T\n  Fun f T \\<sqsubseteq>\n  (if Ball (subterms (fst x))\n       (Term.term.case_term (\\<lambda>v. True)\n         (\\<lambda>f T. 0 < arity f \\<and> arity f = length T))\n   then fst x else Var Bot)\n\ngoal (1 subgoal):\n 1. 0 < arity f", "by fastforce"], ["proof (state)\nthis:\n  0 < arity f\n\ngoal (19 subgoals):\n 1. \\<And>uu_ uv_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun (privkey uu_) uv_) \\<Longrightarrow>\n       0 < arity f\n 2. \\<And>uw_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun changeCipher uw_) \\<Longrightarrow>\n       0 < arity f\n 3. \\<And>ux_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun serverHelloDone ux_) \\<Longrightarrow>\n       0 < arity f\n 4. \\<And>\\<tau> uy_ uz_.\n       Fun f T \\<sqsubseteq>\n       \\<Gamma> (Fun (pubconst \\<tau> uy_) uz_) \\<Longrightarrow>\n       0 < arity f\n 5. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientHello Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 6. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientKeyExchange Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 7. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun clientFinished Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 8. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun serverHello Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 9. \\<And>Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta;\n                    Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                   \\<Longrightarrow> 0 < arity f;\n        Fun f T \\<sqsubseteq> \\<Gamma> (Fun serverCert Ta)\\<rbrakk>\n       \\<Longrightarrow> 0 < arity f\n 10. \\<And>Ta.\n        \\<lbrakk>\\<And>x.\n                    \\<lbrakk>x \\<in> set Ta;\n                     Fun f T \\<sqsubseteq> \\<Gamma> x\\<rbrakk>\n                    \\<Longrightarrow> 0 < arity f;\n         Fun f T \\<sqsubseteq> \\<Gamma> (Fun finished Ta)\\<rbrakk>\n        \\<Longrightarrow> 0 < arity f\nA total of 19 subgoals...", "qed auto"], ["", "lemma assm11: \"im.wf\\<^sub>t\\<^sub>r\\<^sub>m (\\<Gamma> (Var x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf\\<^sub>t\\<^sub>r\\<^sub>m (\\<Gamma> (Var x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. wf\\<^sub>t\\<^sub>r\\<^sub>m (\\<Gamma> (Var x))", "have \"im.wf\\<^sub>t\\<^sub>r\\<^sub>m (\\<Gamma>\\<^sub>v x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf\\<^sub>t\\<^sub>r\\<^sub>m (\\<Gamma>\\<^sub>v x)", "unfolding \\<Gamma>\\<^sub>v_def im.wf\\<^sub>t\\<^sub>r\\<^sub>m_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f T.\n       Fun f T \\<sqsubseteq>\n       (if Ball (subterms (fst x))\n            (Term.term.case_term (\\<lambda>v. True)\n              (\\<lambda>f T. 0 < arity f \\<and> arity f = length T))\n        then fst x else Var Bot) \\<longrightarrow>\n       length T = arity f", "by auto"], ["proof (state)\nthis:\n  wf\\<^sub>t\\<^sub>r\\<^sub>m (\\<Gamma>\\<^sub>v x)\n\ngoal (1 subgoal):\n 1. wf\\<^sub>t\\<^sub>r\\<^sub>m (\\<Gamma> (Var x))", "thus ?thesis"], ["proof (prove)\nusing this:\n  wf\\<^sub>t\\<^sub>r\\<^sub>m (\\<Gamma>\\<^sub>v x)\n\ngoal (1 subgoal):\n 1. wf\\<^sub>t\\<^sub>r\\<^sub>m (\\<Gamma> (Var x))", "by simp"], ["proof (state)\nthis:\n  wf\\<^sub>t\\<^sub>r\\<^sub>m (\\<Gamma> (Var x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma assm12: \"\\<Gamma> (Var (\\<tau>, n)) = \\<Gamma> (Var (\\<tau>, m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> (Var (\\<tau>, n)) = \\<Gamma> (Var (\\<tau>, m))", "apply (cases \"\\<forall>t \\<in> subterms \\<tau>. case t of\n                (TComp f T) \\<Rightarrow> arity f > 0 \\<and> arity f = length T\n              | _ \\<Rightarrow> True\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>t\\<in>subterms \\<tau>.\n       case t of Var v \\<Rightarrow> True\n       | Fun f T \\<Rightarrow>\n           0 < arity f \\<and> arity f = length T \\<Longrightarrow>\n    \\<Gamma> (Var (\\<tau>, n)) = \\<Gamma> (Var (\\<tau>, m))\n 2. \\<not> (\\<forall>t\\<in>subterms \\<tau>.\n               case t of Var v \\<Rightarrow> True\n               | Fun f T \\<Rightarrow>\n                   0 < arity f \\<and> arity f = length T) \\<Longrightarrow>\n    \\<Gamma> (Var (\\<tau>, n)) = \\<Gamma> (Var (\\<tau>, m))", "by (auto simp add: \\<Gamma>\\<^sub>v_def)"], ["", "lemma Ana_const: \"arity c = 0 \\<Longrightarrow> Ana (Fun c T) = ([],[])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arity c = 0 \\<Longrightarrow> Ana (Fun c T) = ([], [])", "by (cases c) simp_all"], ["", "lemma Ana_keys_subterm: \"Ana t = (K,T) \\<Longrightarrow> k \\<in> set K \\<Longrightarrow> k \\<sqsubset> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ana t = (K, T); k \\<in> set K\\<rbrakk>\n    \\<Longrightarrow> k \\<sqsubset> t", "proof (induct t rule: Ana.induct)"], ["proof (state)\ngoal (20 subgoals):\n 1. \\<And>Ta.\n       \\<lbrakk>Ana (Fun crypt Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun crypt Ta\n 2. \\<And>Ta.\n       \\<lbrakk>Ana (Fun finished Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun finished Ta\n 3. \\<And>Ta.\n       \\<lbrakk>Ana (Fun master Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun master Ta\n 4. \\<And>Ta.\n       \\<lbrakk>Ana (Fun pmsForm Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun pmsForm Ta\n 5. \\<And>Ta.\n       \\<lbrakk>Ana (Fun serverCert Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun serverCert Ta\n 6. \\<And>Ta.\n       \\<lbrakk>Ana (Fun serverHello Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun serverHello Ta\n 7. \\<And>Ta.\n       \\<lbrakk>Ana (Fun sign Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun sign Ta\n 8. \\<And>Ta.\n       \\<lbrakk>Ana (Fun x509 Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun x509 Ta\n 9. \\<And>v.\n       \\<lbrakk>Ana (Var v) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Var v\n 10. \\<And>va.\n        \\<lbrakk>Ana (Fun clientHello va) = (K, T); k \\<in> set K\\<rbrakk>\n        \\<Longrightarrow> k \\<sqsubset> Fun clientHello va\nA total of 20 subgoals...", "case (1 U)"], ["proof (state)\nthis:\n  Ana (Fun crypt U) = (K, T)\n  k \\<in> set K\n\ngoal (20 subgoals):\n 1. \\<And>Ta.\n       \\<lbrakk>Ana (Fun crypt Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun crypt Ta\n 2. \\<And>Ta.\n       \\<lbrakk>Ana (Fun finished Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun finished Ta\n 3. \\<And>Ta.\n       \\<lbrakk>Ana (Fun master Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun master Ta\n 4. \\<And>Ta.\n       \\<lbrakk>Ana (Fun pmsForm Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun pmsForm Ta\n 5. \\<And>Ta.\n       \\<lbrakk>Ana (Fun serverCert Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun serverCert Ta\n 6. \\<And>Ta.\n       \\<lbrakk>Ana (Fun serverHello Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun serverHello Ta\n 7. \\<And>Ta.\n       \\<lbrakk>Ana (Fun sign Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun sign Ta\n 8. \\<And>Ta.\n       \\<lbrakk>Ana (Fun x509 Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun x509 Ta\n 9. \\<And>v.\n       \\<lbrakk>Ana (Var v) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Var v\n 10. \\<And>va.\n        \\<lbrakk>Ana (Fun clientHello va) = (K, T); k \\<in> set K\\<rbrakk>\n        \\<Longrightarrow> k \\<sqsubset> Fun clientHello va\nA total of 20 subgoals...", "then"], ["proof (chain)\npicking this:\n  Ana (Fun crypt U) = (K, T)\n  k \\<in> set K", "obtain m where \"U = [Fun pub [k], m]\" \"K = [k]\" \"T = [m]\""], ["proof (prove)\nusing this:\n  Ana (Fun crypt U) = (K, T)\n  k \\<in> set K\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>U = [Fun pub [k], m]; K = [k]; T = [m]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim!: Ana\\<^sub>c\\<^sub>r\\<^sub>y\\<^sub>p\\<^sub>t.elims Ana\\<^sub>s\\<^sub>i\\<^sub>g\\<^sub>n.elims)"], ["proof (state)\nthis:\n  U = [Fun pub [k], m]\n  K = [k]\n  T = [m]\n\ngoal (20 subgoals):\n 1. \\<And>Ta.\n       \\<lbrakk>Ana (Fun crypt Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun crypt Ta\n 2. \\<And>Ta.\n       \\<lbrakk>Ana (Fun finished Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun finished Ta\n 3. \\<And>Ta.\n       \\<lbrakk>Ana (Fun master Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun master Ta\n 4. \\<And>Ta.\n       \\<lbrakk>Ana (Fun pmsForm Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun pmsForm Ta\n 5. \\<And>Ta.\n       \\<lbrakk>Ana (Fun serverCert Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun serverCert Ta\n 6. \\<And>Ta.\n       \\<lbrakk>Ana (Fun serverHello Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun serverHello Ta\n 7. \\<And>Ta.\n       \\<lbrakk>Ana (Fun sign Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun sign Ta\n 8. \\<And>Ta.\n       \\<lbrakk>Ana (Fun x509 Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun x509 Ta\n 9. \\<And>v.\n       \\<lbrakk>Ana (Var v) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Var v\n 10. \\<And>va.\n        \\<lbrakk>Ana (Fun clientHello va) = (K, T); k \\<in> set K\\<rbrakk>\n        \\<Longrightarrow> k \\<sqsubset> Fun clientHello va\nA total of 20 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  U = [Fun pub [k], m]\n  K = [k]\n  T = [m]\n\ngoal (1 subgoal):\n 1. k \\<sqsubset> Fun crypt U", "using Fun_subterm_inside_params[of k crypt U]"], ["proof (prove)\nusing this:\n  U = [Fun pub [k], m]\n  K = [k]\n  T = [m]\n  (k \\<sqsubset> Fun crypt U) =\n  (k \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t set U)\n\ngoal (1 subgoal):\n 1. k \\<sqsubset> Fun crypt U", "by auto"], ["proof (state)\nthis:\n  k \\<sqsubset> Fun crypt U\n\ngoal (19 subgoals):\n 1. \\<And>Ta.\n       \\<lbrakk>Ana (Fun finished Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun finished Ta\n 2. \\<And>Ta.\n       \\<lbrakk>Ana (Fun master Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun master Ta\n 3. \\<And>Ta.\n       \\<lbrakk>Ana (Fun pmsForm Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun pmsForm Ta\n 4. \\<And>Ta.\n       \\<lbrakk>Ana (Fun serverCert Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun serverCert Ta\n 5. \\<And>Ta.\n       \\<lbrakk>Ana (Fun serverHello Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun serverHello Ta\n 6. \\<And>Ta.\n       \\<lbrakk>Ana (Fun sign Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun sign Ta\n 7. \\<And>Ta.\n       \\<lbrakk>Ana (Fun x509 Ta) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun x509 Ta\n 8. \\<And>v.\n       \\<lbrakk>Ana (Var v) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Var v\n 9. \\<And>va.\n       \\<lbrakk>Ana (Fun clientHello va) = (K, T); k \\<in> set K\\<rbrakk>\n       \\<Longrightarrow> k \\<sqsubset> Fun clientHello va\n 10. \\<And>va.\n        \\<lbrakk>Ana (Fun clientKeyExchange va) = (K, T);\n         k \\<in> set K\\<rbrakk>\n        \\<Longrightarrow> k \\<sqsubset> Fun clientKeyExchange va\nA total of 19 subgoals...", "qed (auto elim!: Ana\\<^sub>c\\<^sub>r\\<^sub>y\\<^sub>p\\<^sub>t.elims Ana\\<^sub>s\\<^sub>i\\<^sub>g\\<^sub>n.elims)"], ["", "global_interpretation tm: typed_model' arity public Ana \\<Gamma>"], ["proof (prove)\ngoal (1 subgoal):\n 1. typed_model' arity public Ana \\<Gamma>", "by (unfold_locales, unfold wf\\<^sub>t\\<^sub>r\\<^sub>m_def[symmetric],\n    metis assm7, metis assm8, metis assm9, metis assm10, metis assm11, metis assm6,\n    metis assm12, metis Ana_const, metis Ana_keys_subterm)"], ["", "subsection \\<open>TLS example: Proving type-flaw resistance\\<close>"], ["", "abbreviation \\<Gamma>\\<^sub>v_clientHello where\n  \"\\<Gamma>\\<^sub>v_clientHello \\<equiv>\n    TComp clientHello [TAtom Nonce, TAtom Nonce, TAtom Nonce, TAtom Nonce, TAtom Nonce]\""], ["", "abbreviation \\<Gamma>\\<^sub>v_serverHello where\n  \"\\<Gamma>\\<^sub>v_serverHello \\<equiv>\n    TComp serverHello [TAtom Nonce, TAtom Nonce, TAtom Nonce, TAtom Nonce, TAtom Nonce]\""], ["", "abbreviation \\<Gamma>\\<^sub>v_pub where\n  \"\\<Gamma>\\<^sub>v_pub \\<equiv> TComp pub [TAtom PrivKey]\""], ["", "abbreviation \\<Gamma>\\<^sub>v_x509 where\n  \"\\<Gamma>\\<^sub>v_x509 \\<equiv> TComp x509 [TAtom Agent, \\<Gamma>\\<^sub>v_pub]\""], ["", "abbreviation \\<Gamma>\\<^sub>v_sign where\n  \"\\<Gamma>\\<^sub>v_sign \\<equiv> TComp sign [TAtom PrivKey, \\<Gamma>\\<^sub>v_x509]\""], ["", "abbreviation \\<Gamma>\\<^sub>v_serverCert where\n  \"\\<Gamma>\\<^sub>v_serverCert \\<equiv> TComp serverCert [\\<Gamma>\\<^sub>v_sign]\""], ["", "abbreviation \\<Gamma>\\<^sub>v_pmsForm where\n  \"\\<Gamma>\\<^sub>v_pmsForm \\<equiv> TComp pmsForm [TAtom SymKey]\""], ["", "abbreviation \\<Gamma>\\<^sub>v_crypt where\n  \"\\<Gamma>\\<^sub>v_crypt \\<equiv> TComp crypt [\\<Gamma>\\<^sub>v_pub, \\<Gamma>\\<^sub>v_pmsForm]\""], ["", "abbreviation \\<Gamma>\\<^sub>v_clientKeyExchange where\n  \"\\<Gamma>\\<^sub>v_clientKeyExchange \\<equiv>\n    TComp clientKeyExchange [\\<Gamma>\\<^sub>v_crypt]\""], ["", "abbreviation \\<Gamma>\\<^sub>v_HSMsgs where\n  \"\\<Gamma>\\<^sub>v_HSMsgs \\<equiv> TComp concat [\n    \\<Gamma>\\<^sub>v_clientHello,\n    \\<Gamma>\\<^sub>v_serverHello,\n    \\<Gamma>\\<^sub>v_serverCert,\n    TAtom PubConst,\n    \\<Gamma>\\<^sub>v_clientKeyExchange]\""], ["", "(* Variables from TLS *)"], ["", "abbreviation \"T\\<^sub>1 n \\<equiv> Var (TAtom Nonce,n)\""], ["", "abbreviation \"T\\<^sub>2 n \\<equiv> Var (TAtom Nonce,n)\""], ["", "abbreviation \"R\\<^sub>A n \\<equiv> Var (TAtom Nonce,n)\""], ["", "abbreviation \"R\\<^sub>B n \\<equiv> Var (TAtom Nonce,n)\""], ["", "abbreviation \"S n \\<equiv> Var (TAtom Nonce,n)\""], ["", "abbreviation \"Cipher n \\<equiv> Var (TAtom Nonce,n)\""], ["", "abbreviation \"Comp n \\<equiv> Var (TAtom Nonce,n)\""], ["", "abbreviation \"B n \\<equiv> Var (TAtom Agent,n)\""], ["", "abbreviation \"Pr\\<^sub>c\\<^sub>a n \\<equiv> Var (TAtom PrivKey,n)\""], ["", "abbreviation \"PMS n \\<equiv> Var (TAtom SymKey,n)\""], ["", "abbreviation \"P\\<^sub>B n \\<equiv> Var (TComp pub [TAtom PrivKey],n)\""], ["", "abbreviation \"HSMsgs n \\<equiv> Var (\\<Gamma>\\<^sub>v_HSMsgs,n)\""], ["", "subsubsection \\<open>Defining the over-approximation set\\<close>"], ["", "abbreviation clientHello\\<^sub>t\\<^sub>r\\<^sub>m where\n  \"clientHello\\<^sub>t\\<^sub>r\\<^sub>m \\<equiv> Fun clientHello [T\\<^sub>1 0, R\\<^sub>A 1, S 2, Cipher 3, Comp 4]\""], ["", "abbreviation serverHello\\<^sub>t\\<^sub>r\\<^sub>m where\n  \"serverHello\\<^sub>t\\<^sub>r\\<^sub>m \\<equiv> Fun serverHello [T\\<^sub>2 0, R\\<^sub>B 1, S 2, Cipher 3, Comp 4]\""], ["", "abbreviation serverCert\\<^sub>t\\<^sub>r\\<^sub>m where\n  \"serverCert\\<^sub>t\\<^sub>r\\<^sub>m \\<equiv> Fun serverCert [Fun sign [Pr\\<^sub>c\\<^sub>a 0, Fun x509 [B 1, P\\<^sub>B 2]]]\""], ["", "abbreviation serverHelloDone\\<^sub>t\\<^sub>r\\<^sub>m where\n  \"serverHelloDone\\<^sub>t\\<^sub>r\\<^sub>m \\<equiv> Fun serverHelloDone []\""], ["", "abbreviation clientKeyExchange\\<^sub>t\\<^sub>r\\<^sub>m where\n  \"clientKeyExchange\\<^sub>t\\<^sub>r\\<^sub>m \\<equiv> Fun clientKeyExchange [Fun crypt [P\\<^sub>B 0, Fun pmsForm [PMS 1]]]\""], ["", "abbreviation changeCipher\\<^sub>t\\<^sub>r\\<^sub>m where\n  \"changeCipher\\<^sub>t\\<^sub>r\\<^sub>m \\<equiv> Fun changeCipher []\""], ["", "abbreviation finished\\<^sub>t\\<^sub>r\\<^sub>m where\n  \"finished\\<^sub>t\\<^sub>r\\<^sub>m \\<equiv> Fun finished [Fun prfun [\n      Fun clientFinished [\n          Fun prfun [Fun master [PMS 0, R\\<^sub>A 1, R\\<^sub>B 2]],\n          R\\<^sub>A 3, R\\<^sub>B 4, Fun hash [HSMsgs 5]\n      ]\n  ]]\""], ["", "definition M\\<^sub>T\\<^sub>L\\<^sub>S::\"ex_term list\" where\n  \"M\\<^sub>T\\<^sub>L\\<^sub>S \\<equiv> [\n    clientHello\\<^sub>t\\<^sub>r\\<^sub>m,\n    serverHello\\<^sub>t\\<^sub>r\\<^sub>m,\n    serverCert\\<^sub>t\\<^sub>r\\<^sub>m,\n    serverHelloDone\\<^sub>t\\<^sub>r\\<^sub>m,\n    clientKeyExchange\\<^sub>t\\<^sub>r\\<^sub>m,\n    changeCipher\\<^sub>t\\<^sub>r\\<^sub>m,\n    finished\\<^sub>t\\<^sub>r\\<^sub>m\n]\""], ["", "subsection \\<open>Theorem: The TLS handshake protocol is type-flaw resistant\\<close>"], ["", "theorem \"tm.tfr\\<^sub>s\\<^sub>e\\<^sub>t (set M\\<^sub>T\\<^sub>L\\<^sub>S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tm.tfr\\<^sub>s\\<^sub>e\\<^sub>t (set M\\<^sub>T\\<^sub>L\\<^sub>S)", "by (rule tm.tfr\\<^sub>s\\<^sub>e\\<^sub>t_if_comp_tfr\\<^sub>s\\<^sub>e\\<^sub>t') eval"], ["", "end"]]}