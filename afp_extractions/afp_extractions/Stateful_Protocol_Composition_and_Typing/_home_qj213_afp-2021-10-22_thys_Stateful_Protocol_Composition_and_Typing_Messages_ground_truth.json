{"file_name": "/home/qj213/afp-2021-10-22/thys/Stateful_Protocol_Composition_and_Typing/Messages.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Stateful_Protocol_Composition_and_Typing", "problem_names": ["lemmas the_Fun_def = un_Fun1_def", "lemmas fv_simps = term.simps(17,18)", "lemma fv_list_is_fv: \"fv t = set (fv_list t)\"", "lemma fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_is_fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s: \"fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F = set (fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F)\"", "lemma subterms_list_is_subterms: \"subterms t = set (subterms_list t)\"", "lemma subterm_of_iff_subtermeq[code_unfold]: \"t \\<sqsubseteq> t' = subterm_of t t'\"", "lemma subterm_of_ex_set_iff_subtermeqset[code_unfold]: \"t \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M = (\\<exists>t' \\<in> M. subterm_of t t')\"", "lemma fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_append: \"fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s (F@G) = fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F@fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s G\"", "lemma distinct_fv_list_idx_fv_disjoint:\n  assumes t: \"distinct (fv_list t)\" \"Fun f T \\<sqsubseteq> t\"\n    and ij: \"i < length T\" \"j < length T\" \"i < j\"\n  shows \"fv (T ! i) \\<inter> fv (T ! j) = {}\"", "lemmas subtermeqI'[intro] = term.eq_refl", "lemma subtermeqI''[intro]: \"t \\<in> set T \\<Longrightarrow> t \\<sqsubseteq> Fun f T\"", "lemma finite_fv_set[intro]: \"finite M \\<Longrightarrow> finite (fv\\<^sub>s\\<^sub>e\\<^sub>t M)\"", "lemma finite_fun_symbols[simp]: \"finite (funs_term t)\"", "lemma fv_set_mono: \"M \\<subseteq> N \\<Longrightarrow> fv\\<^sub>s\\<^sub>e\\<^sub>t M \\<subseteq> fv\\<^sub>s\\<^sub>e\\<^sub>t N\"", "lemma subterms\\<^sub>s\\<^sub>e\\<^sub>t_mono: \"M \\<subseteq> N \\<Longrightarrow> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<subseteq> subterms\\<^sub>s\\<^sub>e\\<^sub>t N\"", "lemma ground_empty[simp]: \"ground {}\"", "lemma ground_subset: \"M \\<subseteq> N \\<Longrightarrow> ground N \\<Longrightarrow> ground M\"", "lemma fv_map_fv_set: \"\\<Union>(set (map fv L)) = fv\\<^sub>s\\<^sub>e\\<^sub>t (set L)\"", "lemma fv\\<^sub>s\\<^sub>e\\<^sub>t_union: \"fv\\<^sub>s\\<^sub>e\\<^sub>t (M \\<union> N) = fv\\<^sub>s\\<^sub>e\\<^sub>t M \\<union> fv\\<^sub>s\\<^sub>e\\<^sub>t N\"", "lemma finite_subset_Union:\n  fixes A::\"'a set\" and f::\"'a \\<Rightarrow> 'b set\"\n  assumes \"finite (\\<Union>a \\<in> A. f a)\"\n  shows \"\\<exists>B. finite B \\<and> B \\<subseteq> A \\<and> (\\<Union>b \\<in> B. f b) = (\\<Union>a \\<in> A. f a)\"", "lemma inv_set_fv: \"finite M \\<Longrightarrow> \\<Union>(set (map fv (inv set M))) = fv\\<^sub>s\\<^sub>e\\<^sub>t M\"", "lemma ground_subterm: \"fv t = {} \\<Longrightarrow> t' \\<sqsubseteq> t \\<Longrightarrow> fv t' = {}\"", "lemma empty_fv_not_var: \"fv t = {} \\<Longrightarrow> t \\<noteq> Var x\"", "lemma empty_fv_exists_fun: \"fv t = {} \\<Longrightarrow> \\<exists>f X. t = Fun f X\"", "lemma vars_iff_subtermeq: \"x \\<in> fv t \\<longleftrightarrow> Var x \\<sqsubseteq> t\"", "lemma vars_iff_subtermeq_set: \"x \\<in> fv\\<^sub>s\\<^sub>e\\<^sub>t M \\<longleftrightarrow> Var x \\<in> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\"", "lemma vars_if_subtermeq_set: \"Var x \\<in> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow> x \\<in> fv\\<^sub>s\\<^sub>e\\<^sub>t M\"", "lemma subtermeq_set_if_vars: \"x \\<in> fv\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow> Var x \\<in> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\"", "lemma vars_iff_subterm_or_eq: \"x \\<in> fv t \\<longleftrightarrow> Var x \\<sqsubset> t \\<or> Var x = t\"", "lemma var_is_subterm: \"x \\<in> fv t \\<Longrightarrow> Var x \\<in> subterms t\"", "lemma subterm_is_var: \"Var x \\<in> subterms t \\<Longrightarrow> x \\<in> fv t\"", "lemma no_var_subterm: \"\\<not>t \\<sqsubset> Var v\"", "lemma fun_if_subterm: \"t \\<sqsubset> u \\<Longrightarrow> \\<exists>f X. u = Fun f X\"", "lemma subtermeq_vars_subset: \"M \\<sqsubseteq> N \\<Longrightarrow> fv M \\<subseteq> fv N\"", "lemma fv_subterms[simp]: \"fv\\<^sub>s\\<^sub>e\\<^sub>t (subterms t) = fv t\"", "lemma fv_subterms_set[simp]: \"fv\\<^sub>s\\<^sub>e\\<^sub>t (subterms\\<^sub>s\\<^sub>e\\<^sub>t M) = fv\\<^sub>s\\<^sub>e\\<^sub>t M\"", "lemma fv_subset: \"t \\<in> M \\<Longrightarrow> fv t \\<subseteq> fv\\<^sub>s\\<^sub>e\\<^sub>t M\"", "lemma fv_subset_subterms: \"t \\<in> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow> fv t \\<subseteq> fv\\<^sub>s\\<^sub>e\\<^sub>t M\"", "lemma subterms_finite[simp]: \"finite (subterms t)\"", "lemma subterms_union_finite: \"finite M \\<Longrightarrow> finite (\\<Union>t \\<in> M. subterms t)\"", "lemma subterms_subset: \"t' \\<sqsubseteq> t \\<Longrightarrow> subterms t' \\<subseteq> subterms t\"", "lemma subterms_subset_set: \"M \\<subseteq> subterms t \\<Longrightarrow> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<subseteq> subterms t\"", "lemma subset_subterms_Union[simp]: \"M \\<subseteq> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\"", "lemma in_subterms_Union: \"t \\<in> M \\<Longrightarrow> t \\<in> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\"", "lemma in_subterms_subset_Union: \"t \\<in> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow> subterms t \\<subseteq> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\"", "lemma subterm_param_split: \n  assumes \"t \\<sqsubset> Fun f X\"\n  shows \"\\<exists>pre x suf. t \\<sqsubseteq> x \\<and> X = pre@x#suf\"", "lemma ground_iff_no_vars: \"ground (M::('a,'b) terms) \\<longleftrightarrow> (\\<forall>v. Var v \\<notin> (\\<Union>m \\<in> M. subterms m))\"", "lemma index_Fun_subterms_subset[simp]: \"i < length T \\<Longrightarrow> subterms (T ! i) \\<subseteq> subterms (Fun f T)\"", "lemma index_Fun_fv_subset[simp]: \"i < length T \\<Longrightarrow> fv (T ! i) \\<subseteq> fv (Fun f T)\"", "lemma subterms_union_ground:\n  assumes \"ground M\"\n  shows \"ground (subterms\\<^sub>s\\<^sub>e\\<^sub>t M)\"", "lemma Var_subtermeq: \"t \\<sqsubseteq> Var v \\<Longrightarrow> t = Var v\"", "lemma subtermeq_imp_funs_term_subset: \"s \\<sqsubseteq> t \\<Longrightarrow> funs_term s \\<subseteq> funs_term t\"", "lemma subterms_const: \"subterms (Fun f []) = {Fun f []}\"", "lemma subterm_subtermeq_neq: \"\\<lbrakk>t \\<sqsubset> u; u \\<sqsubseteq> v\\<rbrakk> \\<Longrightarrow> t \\<noteq> v\"", "lemma subtermeq_subterm_neq: \"\\<lbrakk>t \\<sqsubseteq> u; u \\<sqsubset> v\\<rbrakk> \\<Longrightarrow> t \\<noteq> v\"", "lemma subterm_size_lt: \"x \\<sqsubset> y \\<Longrightarrow> size x < size y\"", "lemma in_subterms_eq: \"\\<lbrakk>x \\<in> subterms y; y \\<in> subterms x\\<rbrakk> \\<Longrightarrow> subterms x = subterms y\"", "lemma Fun_gt_params: \"Fun f X \\<notin> (\\<Union>x \\<in> set X. subterms x)\"", "lemma params_subterms[simp]: \"set X \\<subseteq> subterms (Fun f X)\"", "lemma params_subterms_Union[simp]: \"subterms\\<^sub>s\\<^sub>e\\<^sub>t (set X) \\<subseteq> subterms (Fun f X)\"", "lemma Fun_subterm_inside_params: \"t \\<sqsubset> Fun f X \\<longleftrightarrow> t \\<in> (\\<Union>x \\<in> (set X). subterms x)\"", "lemma Fun_param_is_subterm: \"x \\<in> set X \\<Longrightarrow> x \\<sqsubset> Fun f X\"", "lemma Fun_param_in_subterms: \"x \\<in> set X \\<Longrightarrow> x \\<in> subterms (Fun f X)\"", "lemma Fun_not_in_param: \"x \\<in> set X \\<Longrightarrow> \\<not>Fun f X \\<sqsubset> x\"", "lemma Fun_ex_if_subterm: \"t \\<sqsubset> s \\<Longrightarrow> \\<exists>f T. Fun f T \\<sqsubseteq> s \\<and> t \\<in> set T\"", "lemma const_subterm_obtain:\n  assumes \"fv t = {}\"\n  obtains c where \"Fun c [] \\<sqsubseteq> t\"", "lemma const_subterm_obtain': \"fv t = {} \\<Longrightarrow> \\<exists>c. Fun c [] \\<sqsubseteq> t\"", "lemma subterms_singleton:\n  assumes \"(\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])\"\n  shows \"subterms t = {t}\"", "lemma subtermeq_Var_const:\n  assumes \"s \\<sqsubseteq> t\"\n  shows \"t = Var v \\<Longrightarrow> s = Var v\" \"t = Fun f [] \\<Longrightarrow> s = Fun f []\"", "lemma subterms_singleton':\n  assumes \"subterms t = {t}\"\n  shows \"(\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])\"", "lemma funs_term_subterms_eq[simp]:\n  \"(\\<Union>s \\<in> subterms t. funs_term s) = funs_term t\" \n  \"(\\<Union>s \\<in> subterms\\<^sub>s\\<^sub>e\\<^sub>t M. funs_term s) = \\<Union>(funs_term ` M)\"", "lemmas subtermI'[intro] = Fun_param_is_subterm", "lemma funs_term_Fun_subterm: \"f \\<in> funs_term t \\<Longrightarrow> \\<exists>T. Fun f T \\<in> subterms t\"", "lemma funs_term_Fun_subterm': \"Fun f T \\<in> subterms t \\<Longrightarrow> f \\<in> funs_term t\"", "lemma zip_arg_subterm:\n  assumes \"(s,t) \\<in> set (zip X Y)\"\n  shows \"s \\<sqsubset> Fun f X\" \"t \\<sqsubset> Fun g Y\"", "lemma fv_disj_Fun_subterm_param_cases:\n  assumes \"fv t \\<inter> X = {}\" \"Fun f T \\<in> subterms t\"\n  shows \"T = [] \\<or> (\\<exists>s\\<in>set T. s \\<notin> Var ` X)\"", "lemma fv_eq_FunI:\n  assumes \"length T = length S\" \"\\<And>i. i < length T \\<Longrightarrow> fv (T ! i) = fv (S ! i)\"\n  shows \"fv (Fun f T) = fv (Fun g S)\"", "lemma fv_eq_FunI':\n  assumes \"length T = length S\" \"\\<And>i. i < length T \\<Longrightarrow> x \\<in> fv (T ! i) \\<longleftrightarrow> x \\<in> fv (S ! i)\"\n  shows \"x \\<in> fv (Fun f T) \\<longleftrightarrow> x \\<in> fv (Fun g S)\"", "lemma finite_fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s[simp]: \"finite (fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s x)\"", "lemma fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_Nil[simp]: \"fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s [] = {}\"", "lemma fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_singleton[simp]: \"fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s [(t,s)] = fv t \\<union> fv s\"", "lemma fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_Cons: \"fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s ((s,t)#F) = fv s \\<union> fv t \\<union> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F\"", "lemma fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_append: \"fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s (F@G) = fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F \\<union> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s G\"", "lemma fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_mono: \"set M \\<subseteq> set N \\<Longrightarrow> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s M \\<subseteq> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s N\"", "lemma fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_inI[intro]:\n  \"f \\<in> set F \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r f \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F\"\n  \"f \\<in> set F \\<Longrightarrow> x \\<in> fv (fst f) \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F\"\n  \"f \\<in> set F \\<Longrightarrow> x \\<in> fv (snd f) \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F\"\n  \"(t,s) \\<in> set F \\<Longrightarrow> x \\<in> fv t \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F\"\n  \"(t,s) \\<in> set F \\<Longrightarrow> x \\<in> fv s \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F\"", "lemma fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_cons_subset: \"fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F \\<subseteq> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s (f#F)\"", "lemma nonvar_term_has_composed_shallow_term:\n  fixes t::\"('f,'v) term\"\n  assumes \"\\<not>(\\<exists>x. t = Var x)\"\n  shows \"\\<exists>f T. Fun f T \\<sqsubseteq> t \\<and> (\\<forall>s \\<in> set T. (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x))\""], "translations": [["", "lemmas the_Fun_def = un_Fun1_def"], ["", "fun subterms::\"('a,'b) term \\<Rightarrow> ('a,'b) terms\" where\n  \"subterms (Var x) = {Var x}\"\n| \"subterms (Fun f T) = {Fun f T} \\<union> (\\<Union>t \\<in> set T. subterms t)\""], ["", "abbreviation subtermeq (infix \"\\<sqsubseteq>\" 50) where \"t' \\<sqsubseteq> t \\<equiv> (t' \\<in> subterms t)\""], ["", "abbreviation subterm (infix \"\\<sqsubset>\" 50) where \"t' \\<sqsubset> t \\<equiv> (t' \\<sqsubseteq> t \\<and> t' \\<noteq> t)\""], ["", "abbreviation \"subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<equiv> \\<Union>(subterms ` M)\""], ["", "abbreviation subtermeqset (infix \"\\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t\" 50) where \"t \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M \\<equiv> (t \\<in> subterms\\<^sub>s\\<^sub>e\\<^sub>t M)\""], ["", "abbreviation fv where \"fv \\<equiv> vars_term\""], ["", "lemmas fv_simps = term.simps(17,18)"], ["", "fun fv\\<^sub>s\\<^sub>e\\<^sub>t where \"fv\\<^sub>s\\<^sub>e\\<^sub>t M = \\<Union>(fv ` M)\""], ["", "abbreviation fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r where \"fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r p \\<equiv> case p of (t,t') \\<Rightarrow> fv t \\<union> fv t'\""], ["", "fun fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s where \"fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F = \\<Union>(fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r ` set F)\""], ["", "abbreviation ground where \"ground M \\<equiv> fv\\<^sub>s\\<^sub>e\\<^sub>t M = {}\""], ["", "subsection \\<open>Variants that return lists insteads of sets\\<close>"], ["", "fun fv_list where\n  \"fv_list (Var x) = [x]\"\n| \"fv_list (Fun f T) = concat (map fv_list T)\""], ["", "definition fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s where\n  \"fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F \\<equiv> concat (map (\\<lambda>(t,t'). fv_list t@fv_list t') F)\""], ["", "fun subterms_list::\"('a,'b) term \\<Rightarrow> ('a,'b) term list\" where\n  \"subterms_list (Var x) = [Var x]\"\n| \"subterms_list (Fun f T) = remdups (Fun f T#concat (map subterms_list T))\""], ["", "lemma fv_list_is_fv: \"fv t = set (fv_list t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv t = set (fv_list t)", "by (induct t) auto"], ["", "lemma fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_is_fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s: \"fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F = set (fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F =\n    set (fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F)", "by (induct F) (auto simp add: fv_list_is_fv fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_def)"], ["", "lemma subterms_list_is_subterms: \"subterms t = set (subterms_list t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms t = set (subterms_list t)", "by (induct t) auto"], ["", "subsection \\<open>The subterm relation defined as a function\\<close>"], ["", "fun subterm_of where\n  \"subterm_of t (Var y) = (t = Var y)\"\n| \"subterm_of t (Fun f T) = (t = Fun f T \\<or> list_ex (subterm_of t) T)\""], ["", "lemma subterm_of_iff_subtermeq[code_unfold]: \"t \\<sqsubseteq> t' = subterm_of t t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<sqsubseteq> t') = subterm_of t t'", "proof (induction t')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. (t \\<sqsubseteq> Var x) = subterm_of t (Var x)\n 2. \\<And>x1a x2.\n       (\\<And>x2a.\n           x2a \\<in> set x2 \\<Longrightarrow>\n           (t \\<sqsubseteq> x2a) = subterm_of t x2a) \\<Longrightarrow>\n       (t \\<sqsubseteq> Fun x1a x2) = subterm_of t (Fun x1a x2)", "case (Fun f T)"], ["proof (state)\nthis:\n  ?x2a \\<in> set T \\<Longrightarrow>\n  (t \\<sqsubseteq> ?x2a) = subterm_of t ?x2a\n\ngoal (2 subgoals):\n 1. \\<And>x. (t \\<sqsubseteq> Var x) = subterm_of t (Var x)\n 2. \\<And>x1a x2.\n       (\\<And>x2a.\n           x2a \\<in> set x2 \\<Longrightarrow>\n           (t \\<sqsubseteq> x2a) = subterm_of t x2a) \\<Longrightarrow>\n       (t \\<sqsubseteq> Fun x1a x2) = subterm_of t (Fun x1a x2)", "thus ?case"], ["proof (prove)\nusing this:\n  ?x2a \\<in> set T \\<Longrightarrow>\n  (t \\<sqsubseteq> ?x2a) = subterm_of t ?x2a\n\ngoal (1 subgoal):\n 1. (t \\<sqsubseteq> Fun f T) = subterm_of t (Fun f T)", "proof (cases \"t = Fun f T\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x2a.\n                x2a \\<in> set T \\<Longrightarrow>\n                (t \\<sqsubseteq> x2a) = subterm_of t x2a;\n     t = Fun f T\\<rbrakk>\n    \\<Longrightarrow> (t \\<sqsubseteq> Fun f T) = subterm_of t (Fun f T)\n 2. \\<lbrakk>\\<And>x2a.\n                x2a \\<in> set T \\<Longrightarrow>\n                (t \\<sqsubseteq> x2a) = subterm_of t x2a;\n     t \\<noteq> Fun f T\\<rbrakk>\n    \\<Longrightarrow> (t \\<sqsubseteq> Fun f T) = subterm_of t (Fun f T)", "case False"], ["proof (state)\nthis:\n  t \\<noteq> Fun f T\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x2a.\n                x2a \\<in> set T \\<Longrightarrow>\n                (t \\<sqsubseteq> x2a) = subterm_of t x2a;\n     t = Fun f T\\<rbrakk>\n    \\<Longrightarrow> (t \\<sqsubseteq> Fun f T) = subterm_of t (Fun f T)\n 2. \\<lbrakk>\\<And>x2a.\n                x2a \\<in> set T \\<Longrightarrow>\n                (t \\<sqsubseteq> x2a) = subterm_of t x2a;\n     t \\<noteq> Fun f T\\<rbrakk>\n    \\<Longrightarrow> (t \\<sqsubseteq> Fun f T) = subterm_of t (Fun f T)", "thus ?thesis"], ["proof (prove)\nusing this:\n  t \\<noteq> Fun f T\n\ngoal (1 subgoal):\n 1. (t \\<sqsubseteq> Fun f T) = subterm_of t (Fun f T)", "using Fun.IH subterm_of.simps(2)[of t f T]"], ["proof (prove)\nusing this:\n  t \\<noteq> Fun f T\n  ?x2a \\<in> set T \\<Longrightarrow>\n  (t \\<sqsubseteq> ?x2a) = subterm_of t ?x2a\n  subterm_of t (Fun f T) = (t = Fun f T \\<or> list_ex (subterm_of t) T)\n\ngoal (1 subgoal):\n 1. (t \\<sqsubseteq> Fun f T) = subterm_of t (Fun f T)", "unfolding list_ex_iff"], ["proof (prove)\nusing this:\n  t \\<noteq> Fun f T\n  ?x2a \\<in> set T \\<Longrightarrow>\n  (t \\<sqsubseteq> ?x2a) = subterm_of t ?x2a\n  subterm_of t (Fun f T) = (t = Fun f T \\<or> Bex (set T) (subterm_of t))\n\ngoal (1 subgoal):\n 1. (t \\<sqsubseteq> Fun f T) = subterm_of t (Fun f T)", "by fastforce"], ["proof (state)\nthis:\n  (t \\<sqsubseteq> Fun f T) = subterm_of t (Fun f T)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x2a.\n                x2a \\<in> set T \\<Longrightarrow>\n                (t \\<sqsubseteq> x2a) = subterm_of t x2a;\n     t = Fun f T\\<rbrakk>\n    \\<Longrightarrow> (t \\<sqsubseteq> Fun f T) = subterm_of t (Fun f T)", "qed simp"], ["proof (state)\nthis:\n  (t \\<sqsubseteq> Fun f T) = subterm_of t (Fun f T)\n\ngoal (1 subgoal):\n 1. \\<And>x. (t \\<sqsubseteq> Var x) = subterm_of t (Var x)", "qed simp"], ["", "lemma subterm_of_ex_set_iff_subtermeqset[code_unfold]: \"t \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M = (\\<exists>t' \\<in> M. subterm_of t t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M) =\n    (\\<exists>t'\\<in>M. subterm_of t t')", "using subterm_of_iff_subtermeq"], ["proof (prove)\nusing this:\n  (?t \\<sqsubseteq> ?t') = subterm_of ?t ?t'\n\ngoal (1 subgoal):\n 1. (t \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M) =\n    (\\<exists>t'\\<in>M. subterm_of t t')", "by blast"], ["", "subsection \\<open>The subterm relation is a partial order on terms\\<close>"], ["", "interpretation \"term\": order \"(\\<sqsubseteq>)\" \"(\\<sqsubset>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.order (\\<sqsubseteq>) (\\<sqsubset>)", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       (x \\<sqsubset> y) = (x \\<sqsubseteq> y \\<and> y \\<notin> subterms x)\n 2. \\<And>x. x \\<sqsubseteq> x\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq> z\n 4. \\<And>x y.\n       \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n       \\<Longrightarrow> x = y", "show \"s \\<sqsubseteq> s\" for s :: \"('a,'b) term\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<sqsubseteq> s", "by (induct s rule: subterms.induct) auto"], ["proof (state)\nthis:\n  ?s \\<sqsubseteq> ?s\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       (x \\<sqsubset> y) = (x \\<sqsubseteq> y \\<and> y \\<notin> subterms x)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq> z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n       \\<Longrightarrow> x = y", "show trans: \"s \\<sqsubseteq> t \\<Longrightarrow> t \\<sqsubseteq> u \\<Longrightarrow> s \\<sqsubseteq> u\" for s t u :: \"('a,'b) term\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<sqsubseteq> t; t \\<sqsubseteq> u\\<rbrakk>\n    \\<Longrightarrow> s \\<sqsubseteq> u", "by (induct u rule: subterms.induct) auto"], ["proof (state)\nthis:\n  \\<lbrakk>?s \\<sqsubseteq> ?t; ?t \\<sqsubseteq> ?u\\<rbrakk>\n  \\<Longrightarrow> ?s \\<sqsubseteq> ?u\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (x \\<sqsubset> y) = (x \\<sqsubseteq> y \\<and> y \\<notin> subterms x)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n       \\<Longrightarrow> x = y", "show \"s \\<sqsubseteq> t \\<Longrightarrow> t \\<sqsubseteq> s \\<Longrightarrow> s = t\" for s t :: \"('a,'b) term\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<sqsubseteq> t; t \\<sqsubseteq> s\\<rbrakk>\n    \\<Longrightarrow> s = t", "proof (induction s arbitrary: t rule: subterms.induct[case_names Var Fun])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>Var x \\<sqsubseteq> t; t \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> Var x = t\n 2. \\<And>f T t.\n       \\<lbrakk>\\<And>x t.\n                   \\<lbrakk>x \\<in> set T; x \\<sqsubseteq> t;\n                    t \\<sqsubseteq> x\\<rbrakk>\n                   \\<Longrightarrow> x = t;\n        Fun f T \\<sqsubseteq> t; t \\<sqsubseteq> Fun f T\\<rbrakk>\n       \\<Longrightarrow> Fun f T = t", "case (Fun f T)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> set T; ?x \\<sqsubseteq> ?t; ?t \\<sqsubseteq> ?x\\<rbrakk>\n  \\<Longrightarrow> ?x = ?t\n  Fun f T \\<sqsubseteq> t\n  t \\<sqsubseteq> Fun f T\n\ngoal (2 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>Var x \\<sqsubseteq> t; t \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> Var x = t\n 2. \\<And>f T t.\n       \\<lbrakk>\\<And>x t.\n                   \\<lbrakk>x \\<in> set T; x \\<sqsubseteq> t;\n                    t \\<sqsubseteq> x\\<rbrakk>\n                   \\<Longrightarrow> x = t;\n        Fun f T \\<sqsubseteq> t; t \\<sqsubseteq> Fun f T\\<rbrakk>\n       \\<Longrightarrow> Fun f T = t", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> set T; ?x \\<sqsubseteq> ?t; ?t \\<sqsubseteq> ?x\\<rbrakk>\n  \\<Longrightarrow> ?x = ?t\n  Fun f T \\<sqsubseteq> t\n  t \\<sqsubseteq> Fun f T\n\ngoal (2 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>Var x \\<sqsubseteq> t; t \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> Var x = t\n 2. \\<And>f T t.\n       \\<lbrakk>\\<And>x t.\n                   \\<lbrakk>x \\<in> set T; x \\<sqsubseteq> t;\n                    t \\<sqsubseteq> x\\<rbrakk>\n                   \\<Longrightarrow> x = t;\n        Fun f T \\<sqsubseteq> t; t \\<sqsubseteq> Fun f T\\<rbrakk>\n       \\<Longrightarrow> Fun f T = t", "assume 0: \"t \\<noteq> Fun f T\""], ["proof (state)\nthis:\n  t \\<noteq> Fun f T\n\ngoal (2 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>Var x \\<sqsubseteq> t; t \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> Var x = t\n 2. \\<And>f T t.\n       \\<lbrakk>\\<And>x t.\n                   \\<lbrakk>x \\<in> set T; x \\<sqsubseteq> t;\n                    t \\<sqsubseteq> x\\<rbrakk>\n                   \\<Longrightarrow> x = t;\n        Fun f T \\<sqsubseteq> t; t \\<sqsubseteq> Fun f T\\<rbrakk>\n       \\<Longrightarrow> Fun f T = t", "then"], ["proof (chain)\npicking this:\n  t \\<noteq> Fun f T", "obtain u::\"('a,'b) term\" where u: \"u \\<in> set T\" \"t \\<sqsubseteq> u\""], ["proof (prove)\nusing this:\n  t \\<noteq> Fun f T\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> set T; t \\<sqsubseteq> u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Fun.prems(2)"], ["proof (prove)\nusing this:\n  t \\<noteq> Fun f T\n  t \\<sqsubseteq> Fun f T\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> set T; t \\<sqsubseteq> u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u \\<in> set T\n  t \\<sqsubseteq> u\n\ngoal (2 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>Var x \\<sqsubseteq> t; t \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> Var x = t\n 2. \\<And>f T t.\n       \\<lbrakk>\\<And>x t.\n                   \\<lbrakk>x \\<in> set T; x \\<sqsubseteq> t;\n                    t \\<sqsubseteq> x\\<rbrakk>\n                   \\<Longrightarrow> x = t;\n        Fun f T \\<sqsubseteq> t; t \\<sqsubseteq> Fun f T\\<rbrakk>\n       \\<Longrightarrow> Fun f T = t", "hence 1: \"Fun f T \\<sqsubseteq> u\""], ["proof (prove)\nusing this:\n  u \\<in> set T\n  t \\<sqsubseteq> u\n\ngoal (1 subgoal):\n 1. Fun f T \\<sqsubseteq> u", "using trans[OF Fun.prems(1)]"], ["proof (prove)\nusing this:\n  u \\<in> set T\n  t \\<sqsubseteq> u\n  t \\<sqsubseteq> ?u \\<Longrightarrow> Fun f T \\<sqsubseteq> ?u\n\ngoal (1 subgoal):\n 1. Fun f T \\<sqsubseteq> u", "by simp"], ["proof (state)\nthis:\n  Fun f T \\<sqsubseteq> u\n\ngoal (2 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>Var x \\<sqsubseteq> t; t \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> Var x = t\n 2. \\<And>f T t.\n       \\<lbrakk>\\<And>x t.\n                   \\<lbrakk>x \\<in> set T; x \\<sqsubseteq> t;\n                    t \\<sqsubseteq> x\\<rbrakk>\n                   \\<Longrightarrow> x = t;\n        Fun f T \\<sqsubseteq> t; t \\<sqsubseteq> Fun f T\\<rbrakk>\n       \\<Longrightarrow> Fun f T = t", "have 2: \"u \\<sqsubseteq> Fun f T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<sqsubseteq> Fun f T", "by (cases u) (use u(1) in force, use u(1) subterms.simps(2)[of f T] in fastforce)"], ["proof (state)\nthis:\n  u \\<sqsubseteq> Fun f T\n\ngoal (2 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>Var x \\<sqsubseteq> t; t \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> Var x = t\n 2. \\<And>f T t.\n       \\<lbrakk>\\<And>x t.\n                   \\<lbrakk>x \\<in> set T; x \\<sqsubseteq> t;\n                    t \\<sqsubseteq> x\\<rbrakk>\n                   \\<Longrightarrow> x = t;\n        Fun f T \\<sqsubseteq> t; t \\<sqsubseteq> Fun f T\\<rbrakk>\n       \\<Longrightarrow> Fun f T = t", "hence 3: \"u = Fun f T\""], ["proof (prove)\nusing this:\n  u \\<sqsubseteq> Fun f T\n\ngoal (1 subgoal):\n 1. u = Fun f T", "using Fun.IH[OF u(1) _ 1]"], ["proof (prove)\nusing this:\n  u \\<sqsubseteq> Fun f T\n  u \\<sqsubseteq> Fun f T \\<Longrightarrow> u = Fun f T\n\ngoal (1 subgoal):\n 1. u = Fun f T", "by simp"], ["proof (state)\nthis:\n  u = Fun f T\n\ngoal (2 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>Var x \\<sqsubseteq> t; t \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> Var x = t\n 2. \\<And>f T t.\n       \\<lbrakk>\\<And>x t.\n                   \\<lbrakk>x \\<in> set T; x \\<sqsubseteq> t;\n                    t \\<sqsubseteq> x\\<rbrakk>\n                   \\<Longrightarrow> x = t;\n        Fun f T \\<sqsubseteq> t; t \\<sqsubseteq> Fun f T\\<rbrakk>\n       \\<Longrightarrow> Fun f T = t", "have \"u \\<sqsubseteq> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<sqsubseteq> t", "using trans[OF 2 Fun.prems(1)]"], ["proof (prove)\nusing this:\n  u \\<sqsubseteq> t\n\ngoal (1 subgoal):\n 1. u \\<sqsubseteq> t", "by simp"], ["proof (state)\nthis:\n  u \\<sqsubseteq> t\n\ngoal (2 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>Var x \\<sqsubseteq> t; t \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> Var x = t\n 2. \\<And>f T t.\n       \\<lbrakk>\\<And>x t.\n                   \\<lbrakk>x \\<in> set T; x \\<sqsubseteq> t;\n                    t \\<sqsubseteq> x\\<rbrakk>\n                   \\<Longrightarrow> x = t;\n        Fun f T \\<sqsubseteq> t; t \\<sqsubseteq> Fun f T\\<rbrakk>\n       \\<Longrightarrow> Fun f T = t", "hence 4: \"u = t\""], ["proof (prove)\nusing this:\n  u \\<sqsubseteq> t\n\ngoal (1 subgoal):\n 1. u = t", "using Fun.IH[OF u(1) _ u(2)]"], ["proof (prove)\nusing this:\n  u \\<sqsubseteq> t\n  u \\<sqsubseteq> t \\<Longrightarrow> u = t\n\ngoal (1 subgoal):\n 1. u = t", "by simp"], ["proof (state)\nthis:\n  u = t\n\ngoal (2 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>Var x \\<sqsubseteq> t; t \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> Var x = t\n 2. \\<And>f T t.\n       \\<lbrakk>\\<And>x t.\n                   \\<lbrakk>x \\<in> set T; x \\<sqsubseteq> t;\n                    t \\<sqsubseteq> x\\<rbrakk>\n                   \\<Longrightarrow> x = t;\n        Fun f T \\<sqsubseteq> t; t \\<sqsubseteq> Fun f T\\<rbrakk>\n       \\<Longrightarrow> Fun f T = t", "have \"t = Fun f T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = Fun f T", "using 3 4"], ["proof (prove)\nusing this:\n  u = Fun f T\n  u = t\n\ngoal (1 subgoal):\n 1. t = Fun f T", "by simp"], ["proof (state)\nthis:\n  t = Fun f T\n\ngoal (2 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>Var x \\<sqsubseteq> t; t \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> Var x = t\n 2. \\<And>f T t.\n       \\<lbrakk>\\<And>x t.\n                   \\<lbrakk>x \\<in> set T; x \\<sqsubseteq> t;\n                    t \\<sqsubseteq> x\\<rbrakk>\n                   \\<Longrightarrow> x = t;\n        Fun f T \\<sqsubseteq> t; t \\<sqsubseteq> Fun f T\\<rbrakk>\n       \\<Longrightarrow> Fun f T = t", "hence False"], ["proof (prove)\nusing this:\n  t = Fun f T\n\ngoal (1 subgoal):\n 1. False", "using 0"], ["proof (prove)\nusing this:\n  t = Fun f T\n  t \\<noteq> Fun f T\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>Var x \\<sqsubseteq> t; t \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> Var x = t\n 2. \\<And>f T t.\n       \\<lbrakk>\\<And>x t.\n                   \\<lbrakk>x \\<in> set T; x \\<sqsubseteq> t;\n                    t \\<sqsubseteq> x\\<rbrakk>\n                   \\<Longrightarrow> x = t;\n        Fun f T \\<sqsubseteq> t; t \\<sqsubseteq> Fun f T\\<rbrakk>\n       \\<Longrightarrow> Fun f T = t", "}"], ["proof (state)\nthis:\n  t \\<noteq> Fun f T \\<Longrightarrow> False\n\ngoal (2 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>Var x \\<sqsubseteq> t; t \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> Var x = t\n 2. \\<And>f T t.\n       \\<lbrakk>\\<And>x t.\n                   \\<lbrakk>x \\<in> set T; x \\<sqsubseteq> t;\n                    t \\<sqsubseteq> x\\<rbrakk>\n                   \\<Longrightarrow> x = t;\n        Fun f T \\<sqsubseteq> t; t \\<sqsubseteq> Fun f T\\<rbrakk>\n       \\<Longrightarrow> Fun f T = t", "thus ?case"], ["proof (prove)\nusing this:\n  t \\<noteq> Fun f T \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. Fun f T = t", "by auto"], ["proof (state)\nthis:\n  Fun f T = t\n\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>Var x \\<sqsubseteq> t; t \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> Var x = t", "qed simp"], ["proof (state)\nthis:\n  \\<lbrakk>?s \\<sqsubseteq> ?t; ?t \\<sqsubseteq> ?s\\<rbrakk>\n  \\<Longrightarrow> ?s = ?t\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x \\<sqsubset> y) = (x \\<sqsubseteq> y \\<and> y \\<notin> subterms x)", "thus \"(s \\<sqsubset> t) = (s \\<sqsubseteq> t \\<and> \\<not>(t \\<sqsubseteq> s))\" for s t :: \"('a,'b) term\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?s \\<sqsubseteq> ?t; ?t \\<sqsubseteq> ?s\\<rbrakk>\n  \\<Longrightarrow> ?s = ?t\n\ngoal (1 subgoal):\n 1. (s \\<sqsubset> t) = (s \\<sqsubseteq> t \\<and> t \\<notin> subterms s)", "by blast"], ["proof (state)\nthis:\n  (?s \\<sqsubset> ?t) = (?s \\<sqsubseteq> ?t \\<and> ?t \\<notin> subterms ?s)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Lemmata concerning subterms and free variables\\<close>"], ["", "lemma fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_append: \"fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s (F@G) = fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F@fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s (F @ G) =\n    fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F @\n    fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s G", "by (simp add: fv_list\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_def)"], ["", "lemma distinct_fv_list_idx_fv_disjoint:\n  assumes t: \"distinct (fv_list t)\" \"Fun f T \\<sqsubseteq> t\"\n    and ij: \"i < length T\" \"j < length T\" \"i < j\"\n  shows \"fv (T ! i) \\<inter> fv (T ! j) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv (T ! i) \\<inter> fv (T ! j) = {}", "using t"], ["proof (prove)\nusing this:\n  distinct (fv_list t)\n  Fun f T \\<sqsubseteq> t\n\ngoal (1 subgoal):\n 1. fv (T ! i) \\<inter> fv (T ! j) = {}", "proof (induction t rule: fv_list.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>distinct (fv_list (Var x));\n        Fun f T \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {}\n 2. \\<And>fa Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta; distinct (fv_list x);\n                    Fun f T \\<sqsubseteq> x\\<rbrakk>\n                   \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {};\n        distinct (fv_list (Fun fa Ta));\n        Fun f T \\<sqsubseteq> Fun fa Ta\\<rbrakk>\n       \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {}", "case (2 g S)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> set S; distinct (fv_list ?x);\n   Fun f T \\<sqsubseteq> ?x\\<rbrakk>\n  \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {}\n  distinct (fv_list (Fun g S))\n  Fun f T \\<sqsubseteq> Fun g S\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>distinct (fv_list (Var x));\n        Fun f T \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {}\n 2. \\<And>fa Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta; distinct (fv_list x);\n                    Fun f T \\<sqsubseteq> x\\<rbrakk>\n                   \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {};\n        distinct (fv_list (Fun fa Ta));\n        Fun f T \\<sqsubseteq> Fun fa Ta\\<rbrakk>\n       \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {}", "have \"distinct (fv_list s)\" when s: \"s \\<in> set S\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (fv_list s)", "by (metis (no_types, lifting) s \"2.prems\"(1) concat_append distinct_append \n          map_append split_list fv_list.simps(2) concat.simps(2) list.simps(9))"], ["proof (state)\nthis:\n  ?s \\<in> set S \\<Longrightarrow> distinct (fv_list ?s)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>distinct (fv_list (Var x));\n        Fun f T \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {}\n 2. \\<And>fa Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta; distinct (fv_list x);\n                    Fun f T \\<sqsubseteq> x\\<rbrakk>\n                   \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {};\n        distinct (fv_list (Fun fa Ta));\n        Fun f T \\<sqsubseteq> Fun fa Ta\\<rbrakk>\n       \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {}", "hence IH: \"fv (T ! i) \\<inter> fv (T ! j) = {}\"\n    when s: \"s \\<in> set S\" \"Fun f T \\<sqsubseteq> s\" for s"], ["proof (prove)\nusing this:\n  ?s \\<in> set S \\<Longrightarrow> distinct (fv_list ?s)\n\ngoal (1 subgoal):\n 1. fv (T ! i) \\<inter> fv (T ! j) = {}", "using \"2.IH\" s"], ["proof (prove)\nusing this:\n  ?s \\<in> set S \\<Longrightarrow> distinct (fv_list ?s)\n  \\<lbrakk>?x \\<in> set S; distinct (fv_list ?x);\n   Fun f T \\<sqsubseteq> ?x\\<rbrakk>\n  \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {}\n  s \\<in> set S\n  Fun f T \\<sqsubseteq> s\n\ngoal (1 subgoal):\n 1. fv (T ! i) \\<inter> fv (T ! j) = {}", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>?s \\<in> set S; Fun f T \\<sqsubseteq> ?s\\<rbrakk>\n  \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>distinct (fv_list (Var x));\n        Fun f T \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {}\n 2. \\<And>fa Ta.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>x \\<in> set Ta; distinct (fv_list x);\n                    Fun f T \\<sqsubseteq> x\\<rbrakk>\n                   \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {};\n        distinct (fv_list (Fun fa Ta));\n        Fun f T \\<sqsubseteq> Fun fa Ta\\<rbrakk>\n       \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fv (T ! i) \\<inter> fv (T ! j) = {}", "proof (cases \"Fun f T = Fun g S\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Fun f T = Fun g S \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {}\n 2. Fun f T \\<noteq> Fun g S \\<Longrightarrow>\n    fv (T ! i) \\<inter> fv (T ! j) = {}", "case True"], ["proof (state)\nthis:\n  Fun f T = Fun g S\n\ngoal (2 subgoals):\n 1. Fun f T = Fun g S \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {}\n 2. Fun f T \\<noteq> Fun g S \\<Longrightarrow>\n    fv (T ! i) \\<inter> fv (T ! j) = {}", "define U where \"U \\<equiv> map fv_list T\""], ["proof (state)\nthis:\n  U \\<equiv> map fv_list T\n\ngoal (2 subgoals):\n 1. Fun f T = Fun g S \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {}\n 2. Fun f T \\<noteq> Fun g S \\<Longrightarrow>\n    fv (T ! i) \\<inter> fv (T ! j) = {}", "have a: \"distinct (concat U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (concat U)", "using \"2.prems\"(1) True"], ["proof (prove)\nusing this:\n  distinct (fv_list (Fun g S))\n  Fun f T = Fun g S\n\ngoal (1 subgoal):\n 1. distinct (concat U)", "unfolding U_def"], ["proof (prove)\nusing this:\n  distinct (fv_list (Fun g S))\n  Fun f T = Fun g S\n\ngoal (1 subgoal):\n 1. distinct (concat (map fv_list T))", "by auto"], ["proof (state)\nthis:\n  distinct (concat U)\n\ngoal (2 subgoals):\n 1. Fun f T = Fun g S \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {}\n 2. Fun f T \\<noteq> Fun g S \\<Longrightarrow>\n    fv (T ! i) \\<inter> fv (T ! j) = {}", "have b: \"i < length U\" \"j < length U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < length U &&& j < length U", "using ij(1,2)"], ["proof (prove)\nusing this:\n  i < length T\n  j < length T\n\ngoal (1 subgoal):\n 1. i < length U &&& j < length U", "unfolding U_def"], ["proof (prove)\nusing this:\n  i < length T\n  j < length T\n\ngoal (1 subgoal):\n 1. i < length (map fv_list T) &&& j < length (map fv_list T)", "by simp_all"], ["proof (state)\nthis:\n  i < length U\n  j < length U\n\ngoal (2 subgoals):\n 1. Fun f T = Fun g S \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {}\n 2. Fun f T \\<noteq> Fun g S \\<Longrightarrow>\n    fv (T ! i) \\<inter> fv (T ! j) = {}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. fv (T ! i) \\<inter> fv (T ! j) = {}", "using b distinct_concat_idx_disjoint[OF a b ij(3)]\n            fv_list_is_fv[of \"T ! i\"] fv_list_is_fv[of \"T ! j\"]"], ["proof (prove)\nusing this:\n  i < length U\n  j < length U\n  set (U ! i) \\<inter> set (U ! j) = {}\n  fv (T ! i) = set (fv_list (T ! i))\n  fv (T ! j) = set (fv_list (T ! j))\n\ngoal (1 subgoal):\n 1. fv (T ! i) \\<inter> fv (T ! j) = {}", "unfolding U_def"], ["proof (prove)\nusing this:\n  i < length (map fv_list T)\n  j < length (map fv_list T)\n  set (map fv_list T ! i) \\<inter> set (map fv_list T ! j) = {}\n  fv (T ! i) = set (fv_list (T ! i))\n  fv (T ! j) = set (fv_list (T ! j))\n\ngoal (1 subgoal):\n 1. fv (T ! i) \\<inter> fv (T ! j) = {}", "by force"], ["proof (state)\nthis:\n  fv (T ! i) \\<inter> fv (T ! j) = {}\n\ngoal (1 subgoal):\n 1. Fun f T \\<noteq> Fun g S \\<Longrightarrow>\n    fv (T ! i) \\<inter> fv (T ! j) = {}", "qed (use IH \"2.prems\"(2) in auto)"], ["proof (state)\nthis:\n  fv (T ! i) \\<inter> fv (T ! j) = {}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>distinct (fv_list (Var x));\n        Fun f T \\<sqsubseteq> Var x\\<rbrakk>\n       \\<Longrightarrow> fv (T ! i) \\<inter> fv (T ! j) = {}", "qed force"], ["", "lemmas subtermeqI'[intro] = term.eq_refl"], ["", "lemma subtermeqI''[intro]: \"t \\<in> set T \\<Longrightarrow> t \\<sqsubseteq> Fun f T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> set T \\<Longrightarrow> t \\<sqsubseteq> Fun f T", "by force"], ["", "lemma finite_fv_set[intro]: \"finite M \\<Longrightarrow> finite (fv\\<^sub>s\\<^sub>e\\<^sub>t M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite M \\<Longrightarrow> finite (fv\\<^sub>s\\<^sub>e\\<^sub>t M)", "by auto"], ["", "lemma finite_fun_symbols[simp]: \"finite (funs_term t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (funs_term t)", "by (induct t) simp_all"], ["", "lemma fv_set_mono: \"M \\<subseteq> N \\<Longrightarrow> fv\\<^sub>s\\<^sub>e\\<^sub>t M \\<subseteq> fv\\<^sub>s\\<^sub>e\\<^sub>t N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<subseteq> N \\<Longrightarrow>\n    fv\\<^sub>s\\<^sub>e\\<^sub>t M \\<subseteq> fv\\<^sub>s\\<^sub>e\\<^sub>t N", "by auto"], ["", "lemma subterms\\<^sub>s\\<^sub>e\\<^sub>t_mono: \"M \\<subseteq> N \\<Longrightarrow> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<subseteq> subterms\\<^sub>s\\<^sub>e\\<^sub>t N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<subseteq> N \\<Longrightarrow>\n    subterms\\<^sub>s\\<^sub>e\\<^sub>t M\n    \\<subseteq> subterms\\<^sub>s\\<^sub>e\\<^sub>t N", "by auto"], ["", "lemma ground_empty[simp]: \"ground {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground {}", "by simp"], ["", "lemma ground_subset: \"M \\<subseteq> N \\<Longrightarrow> ground N \\<Longrightarrow> ground M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>M \\<subseteq> N; ground N\\<rbrakk> \\<Longrightarrow> ground M", "by auto"], ["", "lemma fv_map_fv_set: \"\\<Union>(set (map fv L)) = fv\\<^sub>s\\<^sub>e\\<^sub>t (set L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (set (map fv L)) = fv\\<^sub>s\\<^sub>e\\<^sub>t (set L)", "by (induct L) auto"], ["", "lemma fv\\<^sub>s\\<^sub>e\\<^sub>t_union: \"fv\\<^sub>s\\<^sub>e\\<^sub>t (M \\<union> N) = fv\\<^sub>s\\<^sub>e\\<^sub>t M \\<union> fv\\<^sub>s\\<^sub>e\\<^sub>t N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv\\<^sub>s\\<^sub>e\\<^sub>t (M \\<union> N) =\n    fv\\<^sub>s\\<^sub>e\\<^sub>t M \\<union> fv\\<^sub>s\\<^sub>e\\<^sub>t N", "by auto"], ["", "lemma finite_subset_Union:\n  fixes A::\"'a set\" and f::\"'a \\<Rightarrow> 'b set\"\n  assumes \"finite (\\<Union>a \\<in> A. f a)\"\n  shows \"\\<exists>B. finite B \\<and> B \\<subseteq> A \\<and> (\\<Union>b \\<in> B. f b) = (\\<Union>a \\<in> A. f a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B.\n       finite B \\<and>\n       B \\<subseteq> A \\<and> \\<Union> (f ` B) = \\<Union> (f ` A)", "by (metis assms eq_iff finite_subset_image finite_UnionD)"], ["", "lemma inv_set_fv: \"finite M \\<Longrightarrow> \\<Union>(set (map fv (inv set M))) = fv\\<^sub>s\\<^sub>e\\<^sub>t M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite M \\<Longrightarrow>\n    \\<Union> (set (map fv (inv set M))) = fv\\<^sub>s\\<^sub>e\\<^sub>t M", "using fv_map_fv_set[of \"inv set M\"] inv_set_fset"], ["proof (prove)\nusing this:\n  \\<Union> (set (map fv (inv set M))) =\n  fv\\<^sub>s\\<^sub>e\\<^sub>t (set (inv set M))\n  finite ?M \\<Longrightarrow> set (inv set ?M) = ?M\n\ngoal (1 subgoal):\n 1. finite M \\<Longrightarrow>\n    \\<Union> (set (map fv (inv set M))) = fv\\<^sub>s\\<^sub>e\\<^sub>t M", "by auto"], ["", "lemma ground_subterm: \"fv t = {} \\<Longrightarrow> t' \\<sqsubseteq> t \\<Longrightarrow> fv t' = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fv t = {}; t' \\<sqsubseteq> t\\<rbrakk>\n    \\<Longrightarrow> fv t' = {}", "by (induct t) auto"], ["", "lemma empty_fv_not_var: \"fv t = {} \\<Longrightarrow> t \\<noteq> Var x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv t = {} \\<Longrightarrow> t \\<noteq> Var x", "by auto"], ["", "lemma empty_fv_exists_fun: \"fv t = {} \\<Longrightarrow> \\<exists>f X. t = Fun f X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv t = {} \\<Longrightarrow> \\<exists>f X. t = Fun f X", "by (cases t) auto"], ["", "lemma vars_iff_subtermeq: \"x \\<in> fv t \\<longleftrightarrow> Var x \\<sqsubseteq> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> fv t) = (Var x \\<sqsubseteq> t)", "by (induct t) auto"], ["", "lemma vars_iff_subtermeq_set: \"x \\<in> fv\\<^sub>s\\<^sub>e\\<^sub>t M \\<longleftrightarrow> Var x \\<in> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> fv\\<^sub>s\\<^sub>e\\<^sub>t M) =\n    (Var x \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M)", "using vars_iff_subtermeq[of x]"], ["proof (prove)\nusing this:\n  (x \\<in> fv ?t) = (Var x \\<sqsubseteq> ?t)\n\ngoal (1 subgoal):\n 1. (x \\<in> fv\\<^sub>s\\<^sub>e\\<^sub>t M) =\n    (Var x \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M)", "by auto"], ["", "lemma vars_if_subtermeq_set: \"Var x \\<in> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow> x \\<in> fv\\<^sub>s\\<^sub>e\\<^sub>t M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var x \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    x \\<in> fv\\<^sub>s\\<^sub>e\\<^sub>t M", "by (metis vars_iff_subtermeq_set)"], ["", "lemma subtermeq_set_if_vars: \"x \\<in> fv\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow> Var x \\<in> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> fv\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    Var x \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M", "by (metis vars_iff_subtermeq_set)"], ["", "lemma vars_iff_subterm_or_eq: \"x \\<in> fv t \\<longleftrightarrow> Var x \\<sqsubset> t \\<or> Var x = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> fv t) = (Var x \\<sqsubset> t \\<or> Var x = t)", "by (induct t) (auto simp add: vars_iff_subtermeq)"], ["", "lemma var_is_subterm: \"x \\<in> fv t \\<Longrightarrow> Var x \\<in> subterms t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> fv t \\<Longrightarrow> Var x \\<sqsubseteq> t", "by (simp add: vars_iff_subtermeq)"], ["", "lemma subterm_is_var: \"Var x \\<in> subterms t \\<Longrightarrow> x \\<in> fv t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var x \\<sqsubseteq> t \\<Longrightarrow> x \\<in> fv t", "by (simp add: vars_iff_subtermeq)"], ["", "lemma no_var_subterm: \"\\<not>t \\<sqsubset> Var v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> t \\<sqsubset> Var v", "by auto"], ["", "lemma fun_if_subterm: \"t \\<sqsubset> u \\<Longrightarrow> \\<exists>f X. u = Fun f X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqsubset> u \\<Longrightarrow> \\<exists>f X. u = Fun f X", "by (induct u) simp_all"], ["", "lemma subtermeq_vars_subset: \"M \\<sqsubseteq> N \\<Longrightarrow> fv M \\<subseteq> fv N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<sqsubseteq> N \\<Longrightarrow> fv M \\<subseteq> fv N", "by (induct N) auto"], ["", "lemma fv_subterms[simp]: \"fv\\<^sub>s\\<^sub>e\\<^sub>t (subterms t) = fv t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv\\<^sub>s\\<^sub>e\\<^sub>t (subterms t) = fv t", "by (induct t) auto"], ["", "lemma fv_subterms_set[simp]: \"fv\\<^sub>s\\<^sub>e\\<^sub>t (subterms\\<^sub>s\\<^sub>e\\<^sub>t M) = fv\\<^sub>s\\<^sub>e\\<^sub>t M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv\\<^sub>s\\<^sub>e\\<^sub>t (subterms\\<^sub>s\\<^sub>e\\<^sub>t M) =\n    fv\\<^sub>s\\<^sub>e\\<^sub>t M", "using subtermeq_vars_subset"], ["proof (prove)\nusing this:\n  ?M \\<sqsubseteq> ?N \\<Longrightarrow> fv ?M \\<subseteq> fv ?N\n\ngoal (1 subgoal):\n 1. fv\\<^sub>s\\<^sub>e\\<^sub>t (subterms\\<^sub>s\\<^sub>e\\<^sub>t M) =\n    fv\\<^sub>s\\<^sub>e\\<^sub>t M", "by auto"], ["", "lemma fv_subset: \"t \\<in> M \\<Longrightarrow> fv t \\<subseteq> fv\\<^sub>s\\<^sub>e\\<^sub>t M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> M \\<Longrightarrow>\n    fv t \\<subseteq> fv\\<^sub>s\\<^sub>e\\<^sub>t M", "by auto"], ["", "lemma fv_subset_subterms: \"t \\<in> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow> fv t \\<subseteq> fv\\<^sub>s\\<^sub>e\\<^sub>t M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    fv t \\<subseteq> fv\\<^sub>s\\<^sub>e\\<^sub>t M", "using fv_subset fv_subterms_set"], ["proof (prove)\nusing this:\n  ?t \\<in> ?M \\<Longrightarrow>\n  fv ?t \\<subseteq> fv\\<^sub>s\\<^sub>e\\<^sub>t ?M\n  fv\\<^sub>s\\<^sub>e\\<^sub>t (subterms\\<^sub>s\\<^sub>e\\<^sub>t ?M) =\n  fv\\<^sub>s\\<^sub>e\\<^sub>t ?M\n\ngoal (1 subgoal):\n 1. t \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    fv t \\<subseteq> fv\\<^sub>s\\<^sub>e\\<^sub>t M", "by metis"], ["", "lemma subterms_finite[simp]: \"finite (subterms t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (subterms t)", "by (induction rule: subterms.induct) auto"], ["", "lemma subterms_union_finite: \"finite M \\<Longrightarrow> finite (\\<Union>t \\<in> M. subterms t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite M \\<Longrightarrow> finite (subterms\\<^sub>s\\<^sub>e\\<^sub>t M)", "by (induction rule: subterms.induct) auto"], ["", "lemma subterms_subset: \"t' \\<sqsubseteq> t \\<Longrightarrow> subterms t' \\<subseteq> subterms t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t' \\<sqsubseteq> t \\<Longrightarrow> subterms t' \\<subseteq> subterms t", "by (induction rule: subterms.induct) auto"], ["", "lemma subterms_subset_set: \"M \\<subseteq> subterms t \\<Longrightarrow> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<subseteq> subterms t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<subseteq> subterms t \\<Longrightarrow>\n    subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<subseteq> subterms t", "by (metis SUP_least contra_subsetD subterms_subset)"], ["", "lemma subset_subterms_Union[simp]: \"M \\<subseteq> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<subseteq> subterms\\<^sub>s\\<^sub>e\\<^sub>t M", "by auto"], ["", "lemma in_subterms_Union: \"t \\<in> M \\<Longrightarrow> t \\<in> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> M \\<Longrightarrow> t \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M", "using subset_subterms_Union"], ["proof (prove)\nusing this:\n  ?M \\<subseteq> subterms\\<^sub>s\\<^sub>e\\<^sub>t ?M\n\ngoal (1 subgoal):\n 1. t \\<in> M \\<Longrightarrow> t \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M", "by blast"], ["", "lemma in_subterms_subset_Union: \"t \\<in> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow> subterms t \\<subseteq> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    subterms t \\<subseteq> subterms\\<^sub>s\\<^sub>e\\<^sub>t M", "using subterms_subset"], ["proof (prove)\nusing this:\n  ?t' \\<sqsubseteq> ?t \\<Longrightarrow>\n  subterms ?t' \\<subseteq> subterms ?t\n\ngoal (1 subgoal):\n 1. t \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    subterms t \\<subseteq> subterms\\<^sub>s\\<^sub>e\\<^sub>t M", "by auto"], ["", "lemma subterm_param_split: \n  assumes \"t \\<sqsubset> Fun f X\"\n  shows \"\\<exists>pre x suf. t \\<sqsubseteq> x \\<and> X = pre@x#suf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>pre x suf. t \\<sqsubseteq> x \\<and> X = pre @ x # suf", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>pre x suf. t \\<sqsubseteq> x \\<and> X = pre @ x # suf", "obtain x where \"t \\<sqsubseteq> x\" \"x \\<in> set X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>t \\<sqsubseteq> x; x \\<in> set X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  t \\<sqsubset> Fun f X\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>t \\<sqsubseteq> x; x \\<in> set X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t \\<sqsubseteq> x\n  x \\<in> set X\n\ngoal (1 subgoal):\n 1. \\<exists>pre x suf. t \\<sqsubseteq> x \\<and> X = pre @ x # suf", "then"], ["proof (chain)\npicking this:\n  t \\<sqsubseteq> x\n  x \\<in> set X", "obtain pre suf where \"X = pre@x#suf\" \"x \\<notin> set pre \\<or> x \\<notin> set suf\""], ["proof (prove)\nusing this:\n  t \\<sqsubseteq> x\n  x \\<in> set X\n\ngoal (1 subgoal):\n 1. (\\<And>pre suf.\n        \\<lbrakk>X = pre @ x # suf;\n         x \\<notin> set pre \\<or> x \\<notin> set suf\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson split_list_first split_list_last)"], ["proof (state)\nthis:\n  X = pre @ x # suf\n  x \\<notin> set pre \\<or> x \\<notin> set suf\n\ngoal (1 subgoal):\n 1. \\<exists>pre x suf. t \\<sqsubseteq> x \\<and> X = pre @ x # suf", "thus ?thesis"], ["proof (prove)\nusing this:\n  X = pre @ x # suf\n  x \\<notin> set pre \\<or> x \\<notin> set suf\n\ngoal (1 subgoal):\n 1. \\<exists>pre x suf. t \\<sqsubseteq> x \\<and> X = pre @ x # suf", "using \\<open>t \\<sqsubseteq> x\\<close>"], ["proof (prove)\nusing this:\n  X = pre @ x # suf\n  x \\<notin> set pre \\<or> x \\<notin> set suf\n  t \\<sqsubseteq> x\n\ngoal (1 subgoal):\n 1. \\<exists>pre x suf. t \\<sqsubseteq> x \\<and> X = pre @ x # suf", "by auto"], ["proof (state)\nthis:\n  \\<exists>pre x suf. t \\<sqsubseteq> x \\<and> X = pre @ x # suf\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ground_iff_no_vars: \"ground (M::('a,'b) terms) \\<longleftrightarrow> (\\<forall>v. Var v \\<notin> (\\<Union>m \\<in> M. subterms m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground M =\n    (\\<forall>v. Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ground M \\<Longrightarrow>\n    \\<forall>v. Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\n 2. \\<forall>v.\n       Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    ground M", "assume \"ground M\""], ["proof (state)\nthis:\n  ground M\n\ngoal (2 subgoals):\n 1. ground M \\<Longrightarrow>\n    \\<forall>v. Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\n 2. \\<forall>v.\n       Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    ground M", "hence \"\\<forall>v. \\<forall>m \\<in> M. v \\<notin> fv m\""], ["proof (prove)\nusing this:\n  ground M\n\ngoal (1 subgoal):\n 1. \\<forall>v. \\<forall>m\\<in>M. v \\<notin> fv m", "by auto"], ["proof (state)\nthis:\n  \\<forall>v. \\<forall>m\\<in>M. v \\<notin> fv m\n\ngoal (2 subgoals):\n 1. ground M \\<Longrightarrow>\n    \\<forall>v. Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\n 2. \\<forall>v.\n       Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    ground M", "hence \"\\<forall>v. \\<forall>m \\<in> M. Var v \\<notin> subterms m\""], ["proof (prove)\nusing this:\n  \\<forall>v. \\<forall>m\\<in>M. v \\<notin> fv m\n\ngoal (1 subgoal):\n 1. \\<forall>v. \\<forall>m\\<in>M. Var v \\<notin> subterms m", "by (simp add: vars_iff_subtermeq)"], ["proof (state)\nthis:\n  \\<forall>v. \\<forall>m\\<in>M. Var v \\<notin> subterms m\n\ngoal (2 subgoals):\n 1. ground M \\<Longrightarrow>\n    \\<forall>v. Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\n 2. \\<forall>v.\n       Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    ground M", "thus \"(\\<forall>v. Var v \\<notin> (\\<Union>m \\<in> M. subterms m))\""], ["proof (prove)\nusing this:\n  \\<forall>v. \\<forall>m\\<in>M. Var v \\<notin> subterms m\n\ngoal (1 subgoal):\n 1. \\<forall>v. Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M", "by simp"], ["proof (state)\nthis:\n  \\<forall>v. Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    ground M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>v.\n       Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    ground M", "assume no_vars: \"\\<forall>v. Var v \\<notin> (\\<Union>m \\<in> M. subterms m)\""], ["proof (state)\nthis:\n  \\<forall>v. Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    ground M", "moreover"], ["proof (state)\nthis:\n  \\<forall>v. Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    ground M", "{"], ["proof (state)\nthis:\n  \\<forall>v. Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    ground M", "assume \"\\<not>ground M\""], ["proof (state)\nthis:\n  fv\\<^sub>s\\<^sub>e\\<^sub>t M \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    ground M", "then"], ["proof (chain)\npicking this:\n  fv\\<^sub>s\\<^sub>e\\<^sub>t M \\<noteq> {}", "obtain v and m::\"('a,'b) term\" where \"m \\<in> M\" \"fv m \\<noteq> {}\" \"v \\<in> fv m\""], ["proof (prove)\nusing this:\n  fv\\<^sub>s\\<^sub>e\\<^sub>t M \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>m v.\n        \\<lbrakk>m \\<in> M; fv m \\<noteq> {}; v \\<in> fv m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  m \\<in> M\n  fv m \\<noteq> {}\n  v \\<in> fv m\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    ground M", "hence \"Var v \\<in> (subterms m)\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  fv m \\<noteq> {}\n  v \\<in> fv m\n\ngoal (1 subgoal):\n 1. Var v \\<sqsubseteq> m", "by (simp add: vars_iff_subtermeq)"], ["proof (state)\nthis:\n  Var v \\<sqsubseteq> m\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    ground M", "hence \"\\<exists>v. Var v \\<in> (\\<Union>t \\<in> M. subterms t)\""], ["proof (prove)\nusing this:\n  Var v \\<sqsubseteq> m\n\ngoal (1 subgoal):\n 1. \\<exists>v. Var v \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M", "using \\<open>m \\<in> M\\<close>"], ["proof (prove)\nusing this:\n  Var v \\<sqsubseteq> m\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. \\<exists>v. Var v \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M", "by auto"], ["proof (state)\nthis:\n  \\<exists>v. Var v \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    ground M", "hence False"], ["proof (prove)\nusing this:\n  \\<exists>v. Var v \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M\n\ngoal (1 subgoal):\n 1. False", "using no_vars"], ["proof (prove)\nusing this:\n  \\<exists>v. Var v \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t M\n  \\<forall>v. Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    ground M", "}"], ["proof (state)\nthis:\n  fv\\<^sub>s\\<^sub>e\\<^sub>t M \\<noteq> {} \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M \\<Longrightarrow>\n    ground M", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>v. Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\n  fv\\<^sub>s\\<^sub>e\\<^sub>t M \\<noteq> {} \\<Longrightarrow> False", "show \"ground M\""], ["proof (prove)\nusing this:\n  \\<forall>v. Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M\n  fv\\<^sub>s\\<^sub>e\\<^sub>t M \\<noteq> {} \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. ground M", "by blast"], ["proof (state)\nthis:\n  ground M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma index_Fun_subterms_subset[simp]: \"i < length T \\<Longrightarrow> subterms (T ! i) \\<subseteq> subterms (Fun f T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < length T \\<Longrightarrow>\n    subterms (T ! i) \\<subseteq> subterms (Fun f T)", "by auto"], ["", "lemma index_Fun_fv_subset[simp]: \"i < length T \\<Longrightarrow> fv (T ! i) \\<subseteq> fv (Fun f T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < length T \\<Longrightarrow> fv (T ! i) \\<subseteq> fv (Fun f T)", "using subtermeq_vars_subset"], ["proof (prove)\nusing this:\n  ?M \\<sqsubseteq> ?N \\<Longrightarrow> fv ?M \\<subseteq> fv ?N\n\ngoal (1 subgoal):\n 1. i < length T \\<Longrightarrow> fv (T ! i) \\<subseteq> fv (Fun f T)", "by fastforce"], ["", "lemma subterms_union_ground:\n  assumes \"ground M\"\n  shows \"ground (subterms\\<^sub>s\\<^sub>e\\<^sub>t M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground (subterms\\<^sub>s\\<^sub>e\\<^sub>t M)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ground (subterms\\<^sub>s\\<^sub>e\\<^sub>t M)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. ground (subterms\\<^sub>s\\<^sub>e\\<^sub>t M)", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. ground (subterms\\<^sub>s\\<^sub>e\\<^sub>t M)", "assume \"t \\<in> M\""], ["proof (state)\nthis:\n  t \\<in> M\n\ngoal (1 subgoal):\n 1. ground (subterms\\<^sub>s\\<^sub>e\\<^sub>t M)", "hence \"fv t = {}\""], ["proof (prove)\nusing this:\n  t \\<in> M\n\ngoal (1 subgoal):\n 1. fv t = {}", "using ground_iff_no_vars[of M] assms"], ["proof (prove)\nusing this:\n  t \\<in> M\n  ground M = (\\<forall>v. Var v \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t M)\n  ground M\n\ngoal (1 subgoal):\n 1. fv t = {}", "by auto"], ["proof (state)\nthis:\n  fv t = {}\n\ngoal (1 subgoal):\n 1. ground (subterms\\<^sub>s\\<^sub>e\\<^sub>t M)", "hence \"\\<forall>t' \\<in> subterms t. fv t' = {}\""], ["proof (prove)\nusing this:\n  fv t = {}\n\ngoal (1 subgoal):\n 1. \\<forall>t'\\<in>subterms t. fv t' = {}", "using subtermeq_vars_subset[of _ t]"], ["proof (prove)\nusing this:\n  fv t = {}\n  ?M \\<sqsubseteq> t \\<Longrightarrow> fv ?M \\<subseteq> fv t\n\ngoal (1 subgoal):\n 1. \\<forall>t'\\<in>subterms t. fv t' = {}", "by simp"], ["proof (state)\nthis:\n  \\<forall>t'\\<in>subterms t. fv t' = {}\n\ngoal (1 subgoal):\n 1. ground (subterms\\<^sub>s\\<^sub>e\\<^sub>t M)", "hence \"ground (subterms t)\""], ["proof (prove)\nusing this:\n  \\<forall>t'\\<in>subterms t. fv t' = {}\n\ngoal (1 subgoal):\n 1. ground (subterms t)", "by auto"], ["proof (state)\nthis:\n  ground (subterms t)\n\ngoal (1 subgoal):\n 1. ground (subterms\\<^sub>s\\<^sub>e\\<^sub>t M)", "}"], ["proof (state)\nthis:\n  ?t2 \\<in> M \\<Longrightarrow> ground (subterms ?t2)\n\ngoal (1 subgoal):\n 1. ground (subterms\\<^sub>s\\<^sub>e\\<^sub>t M)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?t2 \\<in> M \\<Longrightarrow> ground (subterms ?t2)\n\ngoal (1 subgoal):\n 1. ground (subterms\\<^sub>s\\<^sub>e\\<^sub>t M)", "by auto"], ["proof (state)\nthis:\n  ground (subterms\\<^sub>s\\<^sub>e\\<^sub>t M)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Var_subtermeq: \"t \\<sqsubseteq> Var v \\<Longrightarrow> t = Var v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqsubseteq> Var v \\<Longrightarrow> t = Var v", "by simp"], ["", "lemma subtermeq_imp_funs_term_subset: \"s \\<sqsubseteq> t \\<Longrightarrow> funs_term s \\<subseteq> funs_term t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<sqsubseteq> t \\<Longrightarrow> funs_term s \\<subseteq> funs_term t", "by (induct t arbitrary: s) auto"], ["", "lemma subterms_const: \"subterms (Fun f []) = {Fun f []}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Fun f []) = {Fun f []}", "by simp"], ["", "lemma subterm_subtermeq_neq: \"\\<lbrakk>t \\<sqsubset> u; u \\<sqsubseteq> v\\<rbrakk> \\<Longrightarrow> t \\<noteq> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<sqsubset> u; u \\<sqsubseteq> v\\<rbrakk>\n    \\<Longrightarrow> t \\<noteq> v", "by (metis term.eq_iff)"], ["", "lemma subtermeq_subterm_neq: \"\\<lbrakk>t \\<sqsubseteq> u; u \\<sqsubset> v\\<rbrakk> \\<Longrightarrow> t \\<noteq> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<sqsubseteq> u; u \\<sqsubset> v\\<rbrakk>\n    \\<Longrightarrow> t \\<noteq> v", "by (metis term.eq_iff)"], ["", "lemma subterm_size_lt: \"x \\<sqsubset> y \\<Longrightarrow> size x < size y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqsubset> y \\<Longrightarrow> size x < size y", "using not_less_eq size_list_estimation"], ["proof (prove)\nusing this:\n  (\\<not> ?m < ?n) = (?n < Suc ?m)\n  \\<lbrakk>?x \\<in> set ?xs; ?y < ?f ?x\\<rbrakk>\n  \\<Longrightarrow> ?y < size_list ?f ?xs\n\ngoal (1 subgoal):\n 1. x \\<sqsubset> y \\<Longrightarrow> size x < size y", "by (induct y, simp, fastforce)"], ["", "lemma in_subterms_eq: \"\\<lbrakk>x \\<in> subterms y; y \\<in> subterms x\\<rbrakk> \\<Longrightarrow> subterms x = subterms y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n    \\<Longrightarrow> subterms x = subterms y", "using term.antisym"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<sqsubseteq> ?y; ?y \\<sqsubseteq> ?x\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n    \\<Longrightarrow> subterms x = subterms y", "by auto"], ["", "lemma Fun_gt_params: \"Fun f X \\<notin> (\\<Union>x \\<in> set X. subterms x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fun f X \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t (set X)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Fun f X \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t (set X)", "have \"size_list size X < size (Fun f X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size_list size X < size (Fun f X)", "by simp"], ["proof (state)\nthis:\n  size_list size X < size (Fun f X)\n\ngoal (1 subgoal):\n 1. Fun f X \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t (set X)", "hence \"Fun f X \\<notin> set X\""], ["proof (prove)\nusing this:\n  size_list size X < size (Fun f X)\n\ngoal (1 subgoal):\n 1. Fun f X \\<notin> set X", "by (meson less_not_refl size_list_estimation)"], ["proof (state)\nthis:\n  Fun f X \\<notin> set X\n\ngoal (1 subgoal):\n 1. Fun f X \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t (set X)", "hence \"\\<forall>x \\<in> set X. Fun f X \\<notin> subterms x \\<or> x \\<notin> subterms (Fun f X)\""], ["proof (prove)\nusing this:\n  Fun f X \\<notin> set X\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set X.\n       Fun f X \\<notin> subterms x \\<or> x \\<notin> subterms (Fun f X)", "by (metis term.antisym[of \"Fun f X\" _])"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set X.\n     Fun f X \\<notin> subterms x \\<or> x \\<notin> subterms (Fun f X)\n\ngoal (1 subgoal):\n 1. Fun f X \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t (set X)", "moreover"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set X.\n     Fun f X \\<notin> subterms x \\<or> x \\<notin> subterms (Fun f X)\n\ngoal (1 subgoal):\n 1. Fun f X \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t (set X)", "have \"\\<forall>x \\<in> set X. x \\<in> subterms (Fun f X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set X. x \\<sqsubseteq> Fun f X", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set X. x \\<sqsubseteq> Fun f X\n\ngoal (1 subgoal):\n 1. Fun f X \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t (set X)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>set X.\n     Fun f X \\<notin> subterms x \\<or> x \\<notin> subterms (Fun f X)\n  \\<forall>x\\<in>set X. x \\<sqsubseteq> Fun f X", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set X.\n     Fun f X \\<notin> subterms x \\<or> x \\<notin> subterms (Fun f X)\n  \\<forall>x\\<in>set X. x \\<sqsubseteq> Fun f X\n\ngoal (1 subgoal):\n 1. Fun f X \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t (set X)", "by auto"], ["proof (state)\nthis:\n  Fun f X \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t (set X)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma params_subterms[simp]: \"set X \\<subseteq> subterms (Fun f X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set X \\<subseteq> subterms (Fun f X)", "by auto"], ["", "lemma params_subterms_Union[simp]: \"subterms\\<^sub>s\\<^sub>e\\<^sub>t (set X) \\<subseteq> subterms (Fun f X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms\\<^sub>s\\<^sub>e\\<^sub>t (set X) \\<subseteq> subterms (Fun f X)", "by auto"], ["", "lemma Fun_subterm_inside_params: \"t \\<sqsubset> Fun f X \\<longleftrightarrow> t \\<in> (\\<Union>x \\<in> (set X). subterms x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<sqsubset> Fun f X) =\n    (t \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t set X)", "using Fun_gt_params"], ["proof (prove)\nusing this:\n  Fun ?f ?X \\<notin> subterms\\<^sub>s\\<^sub>e\\<^sub>t (set ?X)\n\ngoal (1 subgoal):\n 1. (t \\<sqsubset> Fun f X) =\n    (t \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t set X)", "by fastforce"], ["", "lemma Fun_param_is_subterm: \"x \\<in> set X \\<Longrightarrow> x \\<sqsubset> Fun f X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set X \\<Longrightarrow> x \\<sqsubset> Fun f X", "using Fun_subterm_inside_params"], ["proof (prove)\nusing this:\n  (?t \\<sqsubset> Fun ?f ?X) =\n  (?t \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t set ?X)\n\ngoal (1 subgoal):\n 1. x \\<in> set X \\<Longrightarrow> x \\<sqsubset> Fun f X", "by fastforce"], ["", "lemma Fun_param_in_subterms: \"x \\<in> set X \\<Longrightarrow> x \\<in> subterms (Fun f X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set X \\<Longrightarrow> x \\<sqsubseteq> Fun f X", "using Fun_subterm_inside_params"], ["proof (prove)\nusing this:\n  (?t \\<sqsubset> Fun ?f ?X) =\n  (?t \\<sqsubseteq>\\<^sub>s\\<^sub>e\\<^sub>t set ?X)\n\ngoal (1 subgoal):\n 1. x \\<in> set X \\<Longrightarrow> x \\<sqsubseteq> Fun f X", "by fastforce"], ["", "lemma Fun_not_in_param: \"x \\<in> set X \\<Longrightarrow> \\<not>Fun f X \\<sqsubset> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set X \\<Longrightarrow> \\<not> Fun f X \\<sqsubset> x", "using term.antisym"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<sqsubseteq> ?y; ?y \\<sqsubseteq> ?x\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. x \\<in> set X \\<Longrightarrow> \\<not> Fun f X \\<sqsubset> x", "by fast"], ["", "lemma Fun_ex_if_subterm: \"t \\<sqsubset> s \\<Longrightarrow> \\<exists>f T. Fun f T \\<sqsubseteq> s \\<and> t \\<in> set T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqsubset> s \\<Longrightarrow>\n    \\<exists>f T. Fun f T \\<sqsubseteq> s \\<and> t \\<in> set T", "proof (induction s)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       t \\<sqsubset> Var x \\<Longrightarrow>\n       \\<exists>f T. Fun f T \\<sqsubseteq> Var x \\<and> t \\<in> set T\n 2. \\<And>x1a x2.\n       \\<lbrakk>\\<And>x2a.\n                   \\<lbrakk>x2a \\<in> set x2; t \\<sqsubset> x2a\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>f T.\n  Fun f T \\<sqsubseteq> x2a \\<and> t \\<in> set T;\n        t \\<sqsubset> Fun x1a x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f T.\n                            Fun f T \\<sqsubseteq> Fun x1a x2 \\<and>\n                            t \\<in> set T", "case (Fun f T)"], ["proof (state)\nthis:\n  \\<lbrakk>?x2a \\<in> set T; t \\<sqsubset> ?x2a\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f T.\n                       Fun f T \\<sqsubseteq> ?x2a \\<and> t \\<in> set T\n  t \\<sqsubset> Fun f T\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       t \\<sqsubset> Var x \\<Longrightarrow>\n       \\<exists>f T. Fun f T \\<sqsubseteq> Var x \\<and> t \\<in> set T\n 2. \\<And>x1a x2.\n       \\<lbrakk>\\<And>x2a.\n                   \\<lbrakk>x2a \\<in> set x2; t \\<sqsubset> x2a\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>f T.\n  Fun f T \\<sqsubseteq> x2a \\<and> t \\<in> set T;\n        t \\<sqsubset> Fun x1a x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f T.\n                            Fun f T \\<sqsubseteq> Fun x1a x2 \\<and>\n                            t \\<in> set T", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x2a \\<in> set T; t \\<sqsubset> ?x2a\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f T.\n                       Fun f T \\<sqsubseteq> ?x2a \\<and> t \\<in> set T\n  t \\<sqsubset> Fun f T", "obtain s' where s': \"s' \\<in> set T\" \"t \\<sqsubseteq> s'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x2a \\<in> set T; t \\<sqsubset> ?x2a\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f T.\n                       Fun f T \\<sqsubseteq> ?x2a \\<and> t \\<in> set T\n  t \\<sqsubset> Fun f T\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>s' \\<in> set T; t \\<sqsubseteq> s'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s' \\<in> set T\n  t \\<sqsubseteq> s'\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       t \\<sqsubset> Var x \\<Longrightarrow>\n       \\<exists>f T. Fun f T \\<sqsubseteq> Var x \\<and> t \\<in> set T\n 2. \\<And>x1a x2.\n       \\<lbrakk>\\<And>x2a.\n                   \\<lbrakk>x2a \\<in> set x2; t \\<sqsubset> x2a\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>f T.\n  Fun f T \\<sqsubseteq> x2a \\<and> t \\<in> set T;\n        t \\<sqsubset> Fun x1a x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f T.\n                            Fun f T \\<sqsubseteq> Fun x1a x2 \\<and>\n                            t \\<in> set T", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fa Ta. Fun fa Ta \\<sqsubseteq> Fun f T \\<and> t \\<in> set Ta", "proof (cases \"t = s'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t = s' \\<Longrightarrow>\n    \\<exists>fa Ta. Fun fa Ta \\<sqsubseteq> Fun f T \\<and> t \\<in> set Ta\n 2. t \\<noteq> s' \\<Longrightarrow>\n    \\<exists>fa Ta. Fun fa Ta \\<sqsubseteq> Fun f T \\<and> t \\<in> set Ta", "case True"], ["proof (state)\nthis:\n  t = s'\n\ngoal (2 subgoals):\n 1. t = s' \\<Longrightarrow>\n    \\<exists>fa Ta. Fun fa Ta \\<sqsubseteq> Fun f T \\<and> t \\<in> set Ta\n 2. t \\<noteq> s' \\<Longrightarrow>\n    \\<exists>fa Ta. Fun fa Ta \\<sqsubseteq> Fun f T \\<and> t \\<in> set Ta", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = s'\n\ngoal (1 subgoal):\n 1. \\<exists>fa Ta. Fun fa Ta \\<sqsubseteq> Fun f T \\<and> t \\<in> set Ta", "using s'"], ["proof (prove)\nusing this:\n  t = s'\n  s' \\<in> set T\n  t \\<sqsubseteq> s'\n\ngoal (1 subgoal):\n 1. \\<exists>fa Ta. Fun fa Ta \\<sqsubseteq> Fun f T \\<and> t \\<in> set Ta", "by blast"], ["proof (state)\nthis:\n  \\<exists>fa Ta. Fun fa Ta \\<sqsubseteq> Fun f T \\<and> t \\<in> set Ta\n\ngoal (1 subgoal):\n 1. t \\<noteq> s' \\<Longrightarrow>\n    \\<exists>fa Ta. Fun fa Ta \\<sqsubseteq> Fun f T \\<and> t \\<in> set Ta", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<noteq> s' \\<Longrightarrow>\n    \\<exists>fa Ta. Fun fa Ta \\<sqsubseteq> Fun f T \\<and> t \\<in> set Ta", "case False"], ["proof (state)\nthis:\n  t \\<noteq> s'\n\ngoal (1 subgoal):\n 1. t \\<noteq> s' \\<Longrightarrow>\n    \\<exists>fa Ta. Fun fa Ta \\<sqsubseteq> Fun f T \\<and> t \\<in> set Ta", "thus ?thesis"], ["proof (prove)\nusing this:\n  t \\<noteq> s'\n\ngoal (1 subgoal):\n 1. \\<exists>fa Ta. Fun fa Ta \\<sqsubseteq> Fun f T \\<and> t \\<in> set Ta", "using Fun.IH[OF s'(1)] s'(2) term.order_trans[OF _ Fun_param_in_subterms[OF s'(1), of f]]"], ["proof (prove)\nusing this:\n  t \\<noteq> s'\n  t \\<sqsubset> s' \\<Longrightarrow>\n  \\<exists>f T. Fun f T \\<sqsubseteq> s' \\<and> t \\<in> set T\n  t \\<sqsubseteq> s'\n  ?x \\<sqsubseteq> s' \\<Longrightarrow> ?x \\<sqsubseteq> Fun f T\n\ngoal (1 subgoal):\n 1. \\<exists>fa Ta. Fun fa Ta \\<sqsubseteq> Fun f T \\<and> t \\<in> set Ta", "by metis"], ["proof (state)\nthis:\n  \\<exists>fa Ta. Fun fa Ta \\<sqsubseteq> Fun f T \\<and> t \\<in> set Ta\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>fa Ta. Fun fa Ta \\<sqsubseteq> Fun f T \\<and> t \\<in> set Ta\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       t \\<sqsubset> Var x \\<Longrightarrow>\n       \\<exists>f T. Fun f T \\<sqsubseteq> Var x \\<and> t \\<in> set T", "qed simp"], ["", "lemma const_subterm_obtain:\n  assumes \"fv t = {}\"\n  obtains c where \"Fun c [] \\<sqsubseteq> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        Fun c [] \\<sqsubseteq> t \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  fv t = {}\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        Fun c [] \\<sqsubseteq> t \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (induction t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>c.\n                   Fun c [] \\<sqsubseteq> Var x \\<Longrightarrow> thesis;\n        fv (Var x) = {}\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x1a x2.\n       \\<lbrakk>\\<And>x2a.\n                   \\<lbrakk>x2a \\<in> set x2;\n                    \\<And>c.\n                       Fun c [] \\<sqsubseteq> x2a \\<Longrightarrow> thesis;\n                    fv x2a = {}\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>c. Fun c [] \\<sqsubseteq> Fun x1a x2 \\<Longrightarrow> thesis;\n        fv (Fun x1a x2) = {}\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (Fun f T)"], ["proof (state)\nthis:\n  \\<lbrakk>?x2a \\<in> set T;\n   \\<And>c. Fun c [] \\<sqsubseteq> ?x2a \\<Longrightarrow> thesis;\n   fv ?x2a = {}\\<rbrakk>\n  \\<Longrightarrow> thesis\n  Fun ?c [] \\<sqsubseteq> Fun f T \\<Longrightarrow> thesis\n  fv (Fun f T) = {}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>c.\n                   Fun c [] \\<sqsubseteq> Var x \\<Longrightarrow> thesis;\n        fv (Var x) = {}\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x1a x2.\n       \\<lbrakk>\\<And>x2a.\n                   \\<lbrakk>x2a \\<in> set x2;\n                    \\<And>c.\n                       Fun c [] \\<sqsubseteq> x2a \\<Longrightarrow> thesis;\n                    fv x2a = {}\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>c. Fun c [] \\<sqsubseteq> Fun x1a x2 \\<Longrightarrow> thesis;\n        fv (Fun x1a x2) = {}\\<rbrakk>\n       \\<Longrightarrow> thesis", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x2a \\<in> set T;\n   \\<And>c. Fun c [] \\<sqsubseteq> ?x2a \\<Longrightarrow> thesis;\n   fv ?x2a = {}\\<rbrakk>\n  \\<Longrightarrow> thesis\n  Fun ?c [] \\<sqsubseteq> Fun f T \\<Longrightarrow> thesis\n  fv (Fun f T) = {}\n\ngoal (1 subgoal):\n 1. thesis", "by (cases \"T = []\") force+"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>c.\n                   Fun c [] \\<sqsubseteq> Var x \\<Longrightarrow> thesis;\n        fv (Var x) = {}\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed simp"], ["", "lemma const_subterm_obtain': \"fv t = {} \\<Longrightarrow> \\<exists>c. Fun c [] \\<sqsubseteq> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv t = {} \\<Longrightarrow> \\<exists>c. Fun c [] \\<sqsubseteq> t", "by (metis const_subterm_obtain)"], ["", "lemma subterms_singleton:\n  assumes \"(\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])\"\n  shows \"subterms t = {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms t = {t}", "using assms"], ["proof (prove)\nusing this:\n  (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])\n\ngoal (1 subgoal):\n 1. subterms t = {t}", "by (cases t) auto"], ["", "lemma subtermeq_Var_const:\n  assumes \"s \\<sqsubseteq> t\"\n  shows \"t = Var v \\<Longrightarrow> s = Var v\" \"t = Fun f [] \\<Longrightarrow> s = Fun f []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t = Var v \\<Longrightarrow> s = Var v) &&&\n    (t = Fun f [] \\<Longrightarrow> s = Fun f [])", "using assms"], ["proof (prove)\nusing this:\n  s \\<sqsubseteq> t\n\ngoal (1 subgoal):\n 1. (t = Var v \\<Longrightarrow> s = Var v) &&&\n    (t = Fun f [] \\<Longrightarrow> s = Fun f [])", "by fastforce+"], ["", "lemma subterms_singleton':\n  assumes \"subterms t = {t}\"\n  shows \"(\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])", "proof (cases t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Var x1 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])\n 2. \\<And>x21 x22.\n       t = Fun x21 x22 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])", "case (Fun f T)"], ["proof (state)\nthis:\n  t = Fun f T\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Var x1 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])\n 2. \\<And>x21 x22.\n       t = Fun x21 x22 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])", "{"], ["proof (state)\nthis:\n  t = Fun f T\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Var x1 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])\n 2. \\<And>x21 x22.\n       t = Fun x21 x22 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])", "fix s S"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Var x1 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])\n 2. \\<And>x21 x22.\n       t = Fun x21 x22 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])", "assume \"T = s#S\""], ["proof (state)\nthis:\n  T = s # S\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Var x1 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])\n 2. \\<And>x21 x22.\n       t = Fun x21 x22 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])", "hence \"s \\<in> subterms t\""], ["proof (prove)\nusing this:\n  T = s # S\n\ngoal (1 subgoal):\n 1. s \\<sqsubseteq> t", "using Fun"], ["proof (prove)\nusing this:\n  T = s # S\n  t = Fun f T\n\ngoal (1 subgoal):\n 1. s \\<sqsubseteq> t", "by auto"], ["proof (state)\nthis:\n  s \\<sqsubseteq> t\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Var x1 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])\n 2. \\<And>x21 x22.\n       t = Fun x21 x22 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])", "hence \"s = t\""], ["proof (prove)\nusing this:\n  s \\<sqsubseteq> t\n\ngoal (1 subgoal):\n 1. s = t", "using assms"], ["proof (prove)\nusing this:\n  s \\<sqsubseteq> t\n  subterms t = {t}\n\ngoal (1 subgoal):\n 1. s = t", "by auto"], ["proof (state)\nthis:\n  s = t\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Var x1 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])\n 2. \\<And>x21 x22.\n       t = Fun x21 x22 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])", "hence False"], ["proof (prove)\nusing this:\n  s = t\n\ngoal (1 subgoal):\n 1. False", "using Fun_param_is_subterm[of s \"s#S\" f] \\<open>T = s#S\\<close> Fun"], ["proof (prove)\nusing this:\n  s = t\n  s \\<in> set (s # S) \\<Longrightarrow> s \\<sqsubset> Fun f (s # S)\n  T = s # S\n  t = Fun f T\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Var x1 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])\n 2. \\<And>x21 x22.\n       t = Fun x21 x22 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])", "}"], ["proof (state)\nthis:\n  T = ?s2 # ?S2 \\<Longrightarrow> False\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Var x1 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])\n 2. \\<And>x21 x22.\n       t = Fun x21 x22 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])", "hence \"T = []\""], ["proof (prove)\nusing this:\n  T = ?s2 # ?S2 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. T = []", "by (cases T) auto"], ["proof (state)\nthis:\n  T = []\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Var x1 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])\n 2. \\<And>x21 x22.\n       t = Fun x21 x22 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])", "thus ?thesis"], ["proof (prove)\nusing this:\n  T = []\n\ngoal (1 subgoal):\n 1. (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])", "using Fun"], ["proof (prove)\nusing this:\n  T = []\n  t = Fun f T\n\ngoal (1 subgoal):\n 1. (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])", "by simp"], ["proof (state)\nthis:\n  (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Var x1 \\<Longrightarrow>\n       (\\<exists>v. t = Var v) \\<or> (\\<exists>f. t = Fun f [])", "qed (simp add: assms)"], ["", "lemma funs_term_subterms_eq[simp]:\n  \"(\\<Union>s \\<in> subterms t. funs_term s) = funs_term t\" \n  \"(\\<Union>s \\<in> subterms\\<^sub>s\\<^sub>e\\<^sub>t M. funs_term s) = \\<Union>(funs_term ` M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (funs_term ` subterms t) = funs_term t &&&\n    \\<Union> (funs_term ` subterms\\<^sub>s\\<^sub>e\\<^sub>t M) =\n    \\<Union> (funs_term ` M)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Union> (funs_term ` subterms t) = funs_term t\n 2. \\<Union> (funs_term ` subterms\\<^sub>s\\<^sub>e\\<^sub>t M) =\n    \\<Union> (funs_term ` M)", "show \"\\<And>t. \\<Union>(funs_term ` subterms t) = funs_term t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t. \\<Union> (funs_term ` subterms t) = funs_term t", "using term.order_refl subtermeq_imp_funs_term_subset"], ["proof (prove)\nusing this:\n  ?x \\<sqsubseteq> ?x\n  ?s \\<sqsubseteq> ?t \\<Longrightarrow>\n  funs_term ?s \\<subseteq> funs_term ?t\n\ngoal (1 subgoal):\n 1. \\<And>t. \\<Union> (funs_term ` subterms t) = funs_term t", "by blast"], ["proof (state)\nthis:\n  \\<Union> (funs_term ` subterms ?t) = funs_term ?t\n\ngoal (1 subgoal):\n 1. \\<Union> (funs_term ` subterms\\<^sub>s\\<^sub>e\\<^sub>t M) =\n    \\<Union> (funs_term ` M)", "thus \"\\<Union>(funs_term ` (subterms\\<^sub>s\\<^sub>e\\<^sub>t M)) = \\<Union>(funs_term ` M)\""], ["proof (prove)\nusing this:\n  \\<Union> (funs_term ` subterms ?t) = funs_term ?t\n\ngoal (1 subgoal):\n 1. \\<Union> (funs_term ` subterms\\<^sub>s\\<^sub>e\\<^sub>t M) =\n    \\<Union> (funs_term ` M)", "by force"], ["proof (state)\nthis:\n  \\<Union> (funs_term ` subterms\\<^sub>s\\<^sub>e\\<^sub>t M) =\n  \\<Union> (funs_term ` M)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas subtermI'[intro] = Fun_param_is_subterm"], ["", "lemma funs_term_Fun_subterm: \"f \\<in> funs_term t \\<Longrightarrow> \\<exists>T. Fun f T \\<in> subterms t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> funs_term t \\<Longrightarrow>\n    \\<exists>T. Fun f T \\<sqsubseteq> t", "proof (induction t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       f \\<in> funs_term (Var x) \\<Longrightarrow>\n       \\<exists>T. Fun f T \\<sqsubseteq> Var x\n 2. \\<And>x1a x2.\n       \\<lbrakk>\\<And>x2a.\n                   \\<lbrakk>x2a \\<in> set x2; f \\<in> funs_term x2a\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>T. Fun f T \\<sqsubseteq> x2a;\n        f \\<in> funs_term (Fun x1a x2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T. Fun f T \\<sqsubseteq> Fun x1a x2", "case (Fun g T)"], ["proof (state)\nthis:\n  \\<lbrakk>?x2a \\<in> set T; f \\<in> funs_term ?x2a\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T. Fun f T \\<sqsubseteq> ?x2a\n  f \\<in> funs_term (Fun g T)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       f \\<in> funs_term (Var x) \\<Longrightarrow>\n       \\<exists>T. Fun f T \\<sqsubseteq> Var x\n 2. \\<And>x1a x2.\n       \\<lbrakk>\\<And>x2a.\n                   \\<lbrakk>x2a \\<in> set x2; f \\<in> funs_term x2a\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>T. Fun f T \\<sqsubseteq> x2a;\n        f \\<in> funs_term (Fun x1a x2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T. Fun f T \\<sqsubseteq> Fun x1a x2", "hence \"f = g \\<or> (\\<exists>s \\<in> set T. f \\<in> funs_term s)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x2a \\<in> set T; f \\<in> funs_term ?x2a\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T. Fun f T \\<sqsubseteq> ?x2a\n  f \\<in> funs_term (Fun g T)\n\ngoal (1 subgoal):\n 1. f = g \\<or> (\\<exists>s\\<in>set T. f \\<in> funs_term s)", "by simp"], ["proof (state)\nthis:\n  f = g \\<or> (\\<exists>s\\<in>set T. f \\<in> funs_term s)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       f \\<in> funs_term (Var x) \\<Longrightarrow>\n       \\<exists>T. Fun f T \\<sqsubseteq> Var x\n 2. \\<And>x1a x2.\n       \\<lbrakk>\\<And>x2a.\n                   \\<lbrakk>x2a \\<in> set x2; f \\<in> funs_term x2a\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>T. Fun f T \\<sqsubseteq> x2a;\n        f \\<in> funs_term (Fun x1a x2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T. Fun f T \\<sqsubseteq> Fun x1a x2", "thus ?case"], ["proof (prove)\nusing this:\n  f = g \\<or> (\\<exists>s\\<in>set T. f \\<in> funs_term s)\n\ngoal (1 subgoal):\n 1. \\<exists>Ta. Fun f Ta \\<sqsubseteq> Fun g T", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. f = g \\<Longrightarrow> \\<exists>Ta. Fun f Ta \\<sqsubseteq> Fun g T\n 2. \\<exists>s\\<in>set T. f \\<in> funs_term s \\<Longrightarrow>\n    \\<exists>Ta. Fun f Ta \\<sqsubseteq> Fun g T", "assume \"\\<exists>s \\<in> set T. f \\<in> funs_term s\""], ["proof (state)\nthis:\n  \\<exists>s\\<in>set T. f \\<in> funs_term s\n\ngoal (2 subgoals):\n 1. f = g \\<Longrightarrow> \\<exists>Ta. Fun f Ta \\<sqsubseteq> Fun g T\n 2. \\<exists>s\\<in>set T. f \\<in> funs_term s \\<Longrightarrow>\n    \\<exists>Ta. Fun f Ta \\<sqsubseteq> Fun g T", "then"], ["proof (chain)\npicking this:\n  \\<exists>s\\<in>set T. f \\<in> funs_term s", "obtain s where \"s \\<in> set T\" \"\\<exists>T. Fun f T \\<in> subterms s\""], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>set T. f \\<in> funs_term s\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> set T; \\<exists>T. Fun f T \\<sqsubseteq> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Fun.IH"], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>set T. f \\<in> funs_term s\n  \\<lbrakk>?x2a \\<in> set T; f \\<in> funs_term ?x2a\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T. Fun f T \\<sqsubseteq> ?x2a\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> set T; \\<exists>T. Fun f T \\<sqsubseteq> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<in> set T\n  \\<exists>T. Fun f T \\<sqsubseteq> s\n\ngoal (2 subgoals):\n 1. f = g \\<Longrightarrow> \\<exists>Ta. Fun f Ta \\<sqsubseteq> Fun g T\n 2. \\<exists>s\\<in>set T. f \\<in> funs_term s \\<Longrightarrow>\n    \\<exists>Ta. Fun f Ta \\<sqsubseteq> Fun g T", "thus ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> set T\n  \\<exists>T. Fun f T \\<sqsubseteq> s\n\ngoal (1 subgoal):\n 1. \\<exists>Ta. Fun f Ta \\<sqsubseteq> Fun g T", "by auto"], ["proof (state)\nthis:\n  \\<exists>Ta. Fun f Ta \\<sqsubseteq> Fun g T\n\ngoal (1 subgoal):\n 1. f = g \\<Longrightarrow> \\<exists>Ta. Fun f Ta \\<sqsubseteq> Fun g T", "qed (auto simp add: Fun)"], ["proof (state)\nthis:\n  \\<exists>Ta. Fun f Ta \\<sqsubseteq> Fun g T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       f \\<in> funs_term (Var x) \\<Longrightarrow>\n       \\<exists>T. Fun f T \\<sqsubseteq> Var x", "qed simp"], ["", "lemma funs_term_Fun_subterm': \"Fun f T \\<in> subterms t \\<Longrightarrow> f \\<in> funs_term t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fun f T \\<sqsubseteq> t \\<Longrightarrow> f \\<in> funs_term t", "by (induct t) auto"], ["", "lemma zip_arg_subterm:\n  assumes \"(s,t) \\<in> set (zip X Y)\"\n  shows \"s \\<sqsubset> Fun f X\" \"t \\<sqsubset> Fun g Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<sqsubset> Fun f X &&& t \\<sqsubset> Fun g Y", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. s \\<sqsubset> Fun f X\n 2. t \\<sqsubset> Fun g Y", "from assms"], ["proof (chain)\npicking this:\n  (s, t) \\<in> set (zip X Y)", "have *: \"s \\<in> set X\" \"t \\<in> set Y\""], ["proof (prove)\nusing this:\n  (s, t) \\<in> set (zip X Y)\n\ngoal (1 subgoal):\n 1. s \\<in> set X &&& t \\<in> set Y", "by (meson in_set_zipE)+"], ["proof (state)\nthis:\n  s \\<in> set X\n  t \\<in> set Y\n\ngoal (2 subgoals):\n 1. s \\<sqsubset> Fun f X\n 2. t \\<sqsubset> Fun g Y", "show \"s \\<sqsubset> Fun f X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<sqsubset> Fun f X", "by (metis Fun_param_is_subterm[OF *(1)])"], ["proof (state)\nthis:\n  s \\<sqsubset> Fun f X\n\ngoal (1 subgoal):\n 1. t \\<sqsubset> Fun g Y", "show \"t \\<sqsubset> Fun g Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqsubset> Fun g Y", "by (metis Fun_param_is_subterm[OF *(2)])"], ["proof (state)\nthis:\n  t \\<sqsubset> Fun g Y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fv_disj_Fun_subterm_param_cases:\n  assumes \"fv t \\<inter> X = {}\" \"Fun f T \\<in> subterms t\"\n  shows \"T = [] \\<or> (\\<exists>s\\<in>set T. s \\<notin> Var ` X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T = [] \\<or> (\\<exists>s\\<in>set T. s \\<notin> Var ` X)", "proof (cases T)"], ["proof (state)\ngoal (2 subgoals):\n 1. T = [] \\<Longrightarrow>\n    T = [] \\<or> (\\<exists>s\\<in>set T. s \\<notin> Var ` X)\n 2. \\<And>a list.\n       T = a # list \\<Longrightarrow>\n       T = [] \\<or> (\\<exists>s\\<in>set T. s \\<notin> Var ` X)", "case (Cons s S)"], ["proof (state)\nthis:\n  T = s # S\n\ngoal (2 subgoals):\n 1. T = [] \\<Longrightarrow>\n    T = [] \\<or> (\\<exists>s\\<in>set T. s \\<notin> Var ` X)\n 2. \\<And>a list.\n       T = a # list \\<Longrightarrow>\n       T = [] \\<or> (\\<exists>s\\<in>set T. s \\<notin> Var ` X)", "hence \"s \\<in> subterms t\""], ["proof (prove)\nusing this:\n  T = s # S\n\ngoal (1 subgoal):\n 1. s \\<sqsubseteq> t", "using assms(2) term.order_trans[of _ \"Fun f T\" t]"], ["proof (prove)\nusing this:\n  T = s # S\n  Fun f T \\<sqsubseteq> t\n  \\<lbrakk>?x \\<sqsubseteq> Fun f T; Fun f T \\<sqsubseteq> t\\<rbrakk>\n  \\<Longrightarrow> ?x \\<sqsubseteq> t\n\ngoal (1 subgoal):\n 1. s \\<sqsubseteq> t", "by auto"], ["proof (state)\nthis:\n  s \\<sqsubseteq> t\n\ngoal (2 subgoals):\n 1. T = [] \\<Longrightarrow>\n    T = [] \\<or> (\\<exists>s\\<in>set T. s \\<notin> Var ` X)\n 2. \\<And>a list.\n       T = a # list \\<Longrightarrow>\n       T = [] \\<or> (\\<exists>s\\<in>set T. s \\<notin> Var ` X)", "hence \"fv s \\<inter> X = {}\""], ["proof (prove)\nusing this:\n  s \\<sqsubseteq> t\n\ngoal (1 subgoal):\n 1. fv s \\<inter> X = {}", "using assms(1) fv_subterms"], ["proof (prove)\nusing this:\n  s \\<sqsubseteq> t\n  fv t \\<inter> X = {}\n  fv\\<^sub>s\\<^sub>e\\<^sub>t (subterms ?t) = fv ?t\n\ngoal (1 subgoal):\n 1. fv s \\<inter> X = {}", "by force"], ["proof (state)\nthis:\n  fv s \\<inter> X = {}\n\ngoal (2 subgoals):\n 1. T = [] \\<Longrightarrow>\n    T = [] \\<or> (\\<exists>s\\<in>set T. s \\<notin> Var ` X)\n 2. \\<And>a list.\n       T = a # list \\<Longrightarrow>\n       T = [] \\<or> (\\<exists>s\\<in>set T. s \\<notin> Var ` X)", "thus ?thesis"], ["proof (prove)\nusing this:\n  fv s \\<inter> X = {}\n\ngoal (1 subgoal):\n 1. T = [] \\<or> (\\<exists>s\\<in>set T. s \\<notin> Var ` X)", "using Cons"], ["proof (prove)\nusing this:\n  fv s \\<inter> X = {}\n  T = s # S\n\ngoal (1 subgoal):\n 1. T = [] \\<or> (\\<exists>s\\<in>set T. s \\<notin> Var ` X)", "by auto"], ["proof (state)\nthis:\n  T = [] \\<or> (\\<exists>s\\<in>set T. s \\<notin> Var ` X)\n\ngoal (1 subgoal):\n 1. T = [] \\<Longrightarrow>\n    T = [] \\<or> (\\<exists>s\\<in>set T. s \\<notin> Var ` X)", "qed simp"], ["", "lemma fv_eq_FunI:\n  assumes \"length T = length S\" \"\\<And>i. i < length T \\<Longrightarrow> fv (T ! i) = fv (S ! i)\"\n  shows \"fv (Fun f T) = fv (Fun g S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv (Fun f T) = fv (Fun g S)", "using assms"], ["proof (prove)\nusing this:\n  length T = length S\n  ?i < length T \\<Longrightarrow> fv (T ! ?i) = fv (S ! ?i)\n\ngoal (1 subgoal):\n 1. fv (Fun f T) = fv (Fun g S)", "proof (induction T arbitrary: S)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S.\n       \\<lbrakk>length [] = length S;\n        \\<And>i.\n           i < length [] \\<Longrightarrow> fv ([] ! i) = fv (S ! i)\\<rbrakk>\n       \\<Longrightarrow> fv (Fun f []) = fv (Fun g S)\n 2. \\<And>a T S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>length T = length S;\n                    \\<And>i.\n                       i < length T \\<Longrightarrow>\n                       fv (T ! i) = fv (S ! i)\\<rbrakk>\n                   \\<Longrightarrow> fv (Fun f T) = fv (Fun g S);\n        length (a # T) = length S;\n        \\<And>i.\n           i < length (a # T) \\<Longrightarrow>\n           fv ((a # T) ! i) = fv (S ! i)\\<rbrakk>\n       \\<Longrightarrow> fv (Fun f (a # T)) = fv (Fun g S)", "case (Cons t T S')"], ["proof (state)\nthis:\n  \\<lbrakk>length T = length ?S;\n   \\<And>i. i < length T \\<Longrightarrow> fv (T ! i) = fv (?S ! i)\\<rbrakk>\n  \\<Longrightarrow> fv (Fun f T) = fv (Fun g ?S)\n  length (t # T) = length S'\n  ?i < length (t # T) \\<Longrightarrow> fv ((t # T) ! ?i) = fv (S' ! ?i)\n\ngoal (2 subgoals):\n 1. \\<And>S.\n       \\<lbrakk>length [] = length S;\n        \\<And>i.\n           i < length [] \\<Longrightarrow> fv ([] ! i) = fv (S ! i)\\<rbrakk>\n       \\<Longrightarrow> fv (Fun f []) = fv (Fun g S)\n 2. \\<And>a T S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>length T = length S;\n                    \\<And>i.\n                       i < length T \\<Longrightarrow>\n                       fv (T ! i) = fv (S ! i)\\<rbrakk>\n                   \\<Longrightarrow> fv (Fun f T) = fv (Fun g S);\n        length (a # T) = length S;\n        \\<And>i.\n           i < length (a # T) \\<Longrightarrow>\n           fv ((a # T) ! i) = fv (S ! i)\\<rbrakk>\n       \\<Longrightarrow> fv (Fun f (a # T)) = fv (Fun g S)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>length T = length ?S;\n   \\<And>i. i < length T \\<Longrightarrow> fv (T ! i) = fv (?S ! i)\\<rbrakk>\n  \\<Longrightarrow> fv (Fun f T) = fv (Fun g ?S)\n  length (t # T) = length S'\n  ?i < length (t # T) \\<Longrightarrow> fv ((t # T) ! ?i) = fv (S' ! ?i)", "obtain s S where S': \"S' = s#S\""], ["proof (prove)\nusing this:\n  \\<lbrakk>length T = length ?S;\n   \\<And>i. i < length T \\<Longrightarrow> fv (T ! i) = fv (?S ! i)\\<rbrakk>\n  \\<Longrightarrow> fv (Fun f T) = fv (Fun g ?S)\n  length (t # T) = length S'\n  ?i < length (t # T) \\<Longrightarrow> fv ((t # T) ! ?i) = fv (S' ! ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>s S. S' = s # S \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases S') simp_all"], ["proof (state)\nthis:\n  S' = s # S\n\ngoal (2 subgoals):\n 1. \\<And>S.\n       \\<lbrakk>length [] = length S;\n        \\<And>i.\n           i < length [] \\<Longrightarrow> fv ([] ! i) = fv (S ! i)\\<rbrakk>\n       \\<Longrightarrow> fv (Fun f []) = fv (Fun g S)\n 2. \\<And>a T S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>length T = length S;\n                    \\<And>i.\n                       i < length T \\<Longrightarrow>\n                       fv (T ! i) = fv (S ! i)\\<rbrakk>\n                   \\<Longrightarrow> fv (Fun f T) = fv (Fun g S);\n        length (a # T) = length S;\n        \\<And>i.\n           i < length (a # T) \\<Longrightarrow>\n           fv ((a # T) ! i) = fv (S ! i)\\<rbrakk>\n       \\<Longrightarrow> fv (Fun f (a # T)) = fv (Fun g S)", "thus ?case"], ["proof (prove)\nusing this:\n  S' = s # S\n\ngoal (1 subgoal):\n 1. fv (Fun f (t # T)) = fv (Fun g S')", "using Cons"], ["proof (prove)\nusing this:\n  S' = s # S\n  \\<lbrakk>length T = length ?S;\n   \\<And>i. i < length T \\<Longrightarrow> fv (T ! i) = fv (?S ! i)\\<rbrakk>\n  \\<Longrightarrow> fv (Fun f T) = fv (Fun g ?S)\n  length (t # T) = length S'\n  ?i < length (t # T) \\<Longrightarrow> fv ((t # T) ! ?i) = fv (S' ! ?i)\n\ngoal (1 subgoal):\n 1. fv (Fun f (t # T)) = fv (Fun g S')", "by fastforce"], ["proof (state)\nthis:\n  fv (Fun f (t # T)) = fv (Fun g S')\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>length [] = length S;\n        \\<And>i.\n           i < length [] \\<Longrightarrow> fv ([] ! i) = fv (S ! i)\\<rbrakk>\n       \\<Longrightarrow> fv (Fun f []) = fv (Fun g S)", "qed simp"], ["", "lemma fv_eq_FunI':\n  assumes \"length T = length S\" \"\\<And>i. i < length T \\<Longrightarrow> x \\<in> fv (T ! i) \\<longleftrightarrow> x \\<in> fv (S ! i)\"\n  shows \"x \\<in> fv (Fun f T) \\<longleftrightarrow> x \\<in> fv (Fun g S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> fv (Fun f T)) = (x \\<in> fv (Fun g S))", "using assms"], ["proof (prove)\nusing this:\n  length T = length S\n  ?i < length T \\<Longrightarrow>\n  (x \\<in> fv (T ! ?i)) = (x \\<in> fv (S ! ?i))\n\ngoal (1 subgoal):\n 1. (x \\<in> fv (Fun f T)) = (x \\<in> fv (Fun g S))", "proof (induction T arbitrary: S)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S.\n       \\<lbrakk>length [] = length S;\n        \\<And>i.\n           i < length [] \\<Longrightarrow>\n           (x \\<in> fv ([] ! i)) = (x \\<in> fv (S ! i))\\<rbrakk>\n       \\<Longrightarrow> (x \\<in> fv (Fun f [])) = (x \\<in> fv (Fun g S))\n 2. \\<And>a T S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>length T = length S;\n                    \\<And>i.\n                       i < length T \\<Longrightarrow>\n                       (x \\<in> fv (T ! i)) = (x \\<in> fv (S ! i))\\<rbrakk>\n                   \\<Longrightarrow> (x \\<in> fv (Fun f T)) =\n                                     (x \\<in> fv (Fun g S));\n        length (a # T) = length S;\n        \\<And>i.\n           i < length (a # T) \\<Longrightarrow>\n           (x \\<in> fv ((a # T) ! i)) = (x \\<in> fv (S ! i))\\<rbrakk>\n       \\<Longrightarrow> (x \\<in> fv (Fun f (a # T))) =\n                         (x \\<in> fv (Fun g S))", "case (Cons t T S')"], ["proof (state)\nthis:\n  \\<lbrakk>length T = length ?S;\n   \\<And>i.\n      i < length T \\<Longrightarrow>\n      (x \\<in> fv (T ! i)) = (x \\<in> fv (?S ! i))\\<rbrakk>\n  \\<Longrightarrow> (x \\<in> fv (Fun f T)) = (x \\<in> fv (Fun g ?S))\n  length (t # T) = length S'\n  ?i < length (t # T) \\<Longrightarrow>\n  (x \\<in> fv ((t # T) ! ?i)) = (x \\<in> fv (S' ! ?i))\n\ngoal (2 subgoals):\n 1. \\<And>S.\n       \\<lbrakk>length [] = length S;\n        \\<And>i.\n           i < length [] \\<Longrightarrow>\n           (x \\<in> fv ([] ! i)) = (x \\<in> fv (S ! i))\\<rbrakk>\n       \\<Longrightarrow> (x \\<in> fv (Fun f [])) = (x \\<in> fv (Fun g S))\n 2. \\<And>a T S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>length T = length S;\n                    \\<And>i.\n                       i < length T \\<Longrightarrow>\n                       (x \\<in> fv (T ! i)) = (x \\<in> fv (S ! i))\\<rbrakk>\n                   \\<Longrightarrow> (x \\<in> fv (Fun f T)) =\n                                     (x \\<in> fv (Fun g S));\n        length (a # T) = length S;\n        \\<And>i.\n           i < length (a # T) \\<Longrightarrow>\n           (x \\<in> fv ((a # T) ! i)) = (x \\<in> fv (S ! i))\\<rbrakk>\n       \\<Longrightarrow> (x \\<in> fv (Fun f (a # T))) =\n                         (x \\<in> fv (Fun g S))", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>length T = length ?S;\n   \\<And>i.\n      i < length T \\<Longrightarrow>\n      (x \\<in> fv (T ! i)) = (x \\<in> fv (?S ! i))\\<rbrakk>\n  \\<Longrightarrow> (x \\<in> fv (Fun f T)) = (x \\<in> fv (Fun g ?S))\n  length (t # T) = length S'\n  ?i < length (t # T) \\<Longrightarrow>\n  (x \\<in> fv ((t # T) ! ?i)) = (x \\<in> fv (S' ! ?i))", "obtain s S where S': \"S' = s#S\""], ["proof (prove)\nusing this:\n  \\<lbrakk>length T = length ?S;\n   \\<And>i.\n      i < length T \\<Longrightarrow>\n      (x \\<in> fv (T ! i)) = (x \\<in> fv (?S ! i))\\<rbrakk>\n  \\<Longrightarrow> (x \\<in> fv (Fun f T)) = (x \\<in> fv (Fun g ?S))\n  length (t # T) = length S'\n  ?i < length (t # T) \\<Longrightarrow>\n  (x \\<in> fv ((t # T) ! ?i)) = (x \\<in> fv (S' ! ?i))\n\ngoal (1 subgoal):\n 1. (\\<And>s S. S' = s # S \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases S') simp_all"], ["proof (state)\nthis:\n  S' = s # S\n\ngoal (2 subgoals):\n 1. \\<And>S.\n       \\<lbrakk>length [] = length S;\n        \\<And>i.\n           i < length [] \\<Longrightarrow>\n           (x \\<in> fv ([] ! i)) = (x \\<in> fv (S ! i))\\<rbrakk>\n       \\<Longrightarrow> (x \\<in> fv (Fun f [])) = (x \\<in> fv (Fun g S))\n 2. \\<And>a T S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>length T = length S;\n                    \\<And>i.\n                       i < length T \\<Longrightarrow>\n                       (x \\<in> fv (T ! i)) = (x \\<in> fv (S ! i))\\<rbrakk>\n                   \\<Longrightarrow> (x \\<in> fv (Fun f T)) =\n                                     (x \\<in> fv (Fun g S));\n        length (a # T) = length S;\n        \\<And>i.\n           i < length (a # T) \\<Longrightarrow>\n           (x \\<in> fv ((a # T) ! i)) = (x \\<in> fv (S ! i))\\<rbrakk>\n       \\<Longrightarrow> (x \\<in> fv (Fun f (a # T))) =\n                         (x \\<in> fv (Fun g S))", "thus ?case"], ["proof (prove)\nusing this:\n  S' = s # S\n\ngoal (1 subgoal):\n 1. (x \\<in> fv (Fun f (t # T))) = (x \\<in> fv (Fun g S'))", "using Cons"], ["proof (prove)\nusing this:\n  S' = s # S\n  \\<lbrakk>length T = length ?S;\n   \\<And>i.\n      i < length T \\<Longrightarrow>\n      (x \\<in> fv (T ! i)) = (x \\<in> fv (?S ! i))\\<rbrakk>\n  \\<Longrightarrow> (x \\<in> fv (Fun f T)) = (x \\<in> fv (Fun g ?S))\n  length (t # T) = length S'\n  ?i < length (t # T) \\<Longrightarrow>\n  (x \\<in> fv ((t # T) ! ?i)) = (x \\<in> fv (S' ! ?i))\n\ngoal (1 subgoal):\n 1. (x \\<in> fv (Fun f (t # T))) = (x \\<in> fv (Fun g S'))", "by fastforce"], ["proof (state)\nthis:\n  (x \\<in> fv (Fun f (t # T))) = (x \\<in> fv (Fun g S'))\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>length [] = length S;\n        \\<And>i.\n           i < length [] \\<Longrightarrow>\n           (x \\<in> fv ([] ! i)) = (x \\<in> fv (S ! i))\\<rbrakk>\n       \\<Longrightarrow> (x \\<in> fv (Fun f [])) = (x \\<in> fv (Fun g S))", "qed simp"], ["", "lemma finite_fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s[simp]: \"finite (fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s x)", "by auto"], ["", "lemma fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_Nil[simp]: \"fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s [] = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s [] = {}", "by simp"], ["", "lemma fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_singleton[simp]: \"fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s [(t,s)] = fv t \\<union> fv s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s [(t, s)] = fv t \\<union> fv s", "by simp"], ["", "lemma fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_Cons: \"fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s ((s,t)#F) = fv s \\<union> fv t \\<union> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s ((s, t) # F) =\n    fv s \\<union> fv t \\<union> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F", "by simp"], ["", "lemma fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_append: \"fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s (F@G) = fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F \\<union> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s (F @ G) =\n    fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F \\<union>\n    fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s G", "by simp"], ["", "lemma fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_mono: \"set M \\<subseteq> set N \\<Longrightarrow> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s M \\<subseteq> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set M \\<subseteq> set N \\<Longrightarrow>\n    fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s M\n    \\<subseteq> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s N", "by auto"], ["", "lemma fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_inI[intro]:\n  \"f \\<in> set F \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r f \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F\"\n  \"f \\<in> set F \\<Longrightarrow> x \\<in> fv (fst f) \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F\"\n  \"f \\<in> set F \\<Longrightarrow> x \\<in> fv (snd f) \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F\"\n  \"(t,s) \\<in> set F \\<Longrightarrow> x \\<in> fv t \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F\"\n  \"(t,s) \\<in> set F \\<Longrightarrow> x \\<in> fv s \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lbrakk>f \\<in> set F;\n       x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r f\\<rbrakk>\n      \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s\n                                 F) &&&\n     (\\<lbrakk>f \\<in> set F; x \\<in> fv (fst f)\\<rbrakk>\n      \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s\n                                 F)) &&&\n    (\\<lbrakk>f \\<in> set F; x \\<in> fv (snd f)\\<rbrakk>\n     \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s\n                                F) &&&\n    (\\<lbrakk>(t, s) \\<in> set F; x \\<in> fv t\\<rbrakk>\n     \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s\n                                F) &&&\n    (\\<lbrakk>(t, s) \\<in> set F; x \\<in> fv s\\<rbrakk>\n     \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F)", "using UN_I"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> ?A; ?b \\<in> ?B ?a\\<rbrakk>\n  \\<Longrightarrow> ?b \\<in> \\<Union> (?B ` ?A)\n\ngoal (1 subgoal):\n 1. ((\\<lbrakk>f \\<in> set F;\n       x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r f\\<rbrakk>\n      \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s\n                                 F) &&&\n     (\\<lbrakk>f \\<in> set F; x \\<in> fv (fst f)\\<rbrakk>\n      \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s\n                                 F)) &&&\n    (\\<lbrakk>f \\<in> set F; x \\<in> fv (snd f)\\<rbrakk>\n     \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s\n                                F) &&&\n    (\\<lbrakk>(t, s) \\<in> set F; x \\<in> fv t\\<rbrakk>\n     \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s\n                                F) &&&\n    (\\<lbrakk>(t, s) \\<in> set F; x \\<in> fv s\\<rbrakk>\n     \\<Longrightarrow> x \\<in> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F)", "by fastforce+"], ["", "lemma fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s_cons_subset: \"fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F \\<subseteq> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s (f#F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s F\n    \\<subseteq> fv\\<^sub>p\\<^sub>a\\<^sub>i\\<^sub>r\\<^sub>s (f # F)", "by auto"], ["", "subsection \\<open>Other lemmata\\<close>"], ["", "lemma nonvar_term_has_composed_shallow_term:\n  fixes t::\"('f,'v) term\"\n  assumes \"\\<not>(\\<exists>x. t = Var x)\"\n  shows \"\\<exists>f T. Fun f T \\<sqsubseteq> t \\<and> (\\<forall>s \\<in> set T. (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f T.\n       Fun f T \\<sqsubseteq> t \\<and>\n       (\\<forall>s\\<in>set T.\n           (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f T.\n       Fun f T \\<sqsubseteq> t \\<and>\n       (\\<forall>s\\<in>set T.\n           (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x))", "let ?Q = \"\\<lambda>S. \\<forall>s \\<in> set S. (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f T.\n       Fun f T \\<sqsubseteq> t \\<and>\n       (\\<forall>s\\<in>set T.\n           (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x))", "let ?P = \"\\<lambda>t. \\<exists>g S. Fun g S \\<sqsubseteq> t \\<and> ?Q S\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f T.\n       Fun f T \\<sqsubseteq> t \\<and>\n       (\\<forall>s\\<in>set T.\n           (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f T.\n       Fun f T \\<sqsubseteq> t \\<and>\n       (\\<forall>s\\<in>set T.\n           (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x))", "fix t::\"('f,'v) term\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f T.\n       Fun f T \\<sqsubseteq> t \\<and>\n       (\\<forall>s\\<in>set T.\n           (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x))", "have \"(\\<exists>x. t = Var x) \\<or> ?P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x. t = Var x) \\<or>\n    (\\<exists>g S.\n        Fun g S \\<sqsubseteq> t \\<and>\n        (\\<forall>s\\<in>set S.\n            (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))", "proof (induction t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       (\\<exists>xa. Var x = Var xa) \\<or>\n       (\\<exists>g S.\n           Fun g S \\<sqsubseteq> Var x \\<and>\n           (\\<forall>s\\<in>set S.\n               (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))\n 2. \\<And>x1a x2.\n       (\\<And>x2a.\n           x2a \\<in> set x2 \\<Longrightarrow>\n           (\\<exists>x. x2a = Var x) \\<or>\n           (\\<exists>g S.\n               Fun g S \\<sqsubseteq> x2a \\<and>\n               (\\<forall>s\\<in>set S.\n                   (\\<exists>c. s = Fun c []) \\<or>\n                   (\\<exists>x. s = Var x)))) \\<Longrightarrow>\n       (\\<exists>x. Fun x1a x2 = Var x) \\<or>\n       (\\<exists>g S.\n           Fun g S \\<sqsubseteq> Fun x1a x2 \\<and>\n           (\\<forall>s\\<in>set S.\n               (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))", "case (Fun h R)"], ["proof (state)\nthis:\n  ?x2a2 \\<in> set R \\<Longrightarrow>\n  (\\<exists>x. ?x2a2 = Var x) \\<or>\n  (\\<exists>g S.\n      Fun g S \\<sqsubseteq> ?x2a2 \\<and>\n      (\\<forall>s\\<in>set S.\n          (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       (\\<exists>xa. Var x = Var xa) \\<or>\n       (\\<exists>g S.\n           Fun g S \\<sqsubseteq> Var x \\<and>\n           (\\<forall>s\\<in>set S.\n               (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))\n 2. \\<And>x1a x2.\n       (\\<And>x2a.\n           x2a \\<in> set x2 \\<Longrightarrow>\n           (\\<exists>x. x2a = Var x) \\<or>\n           (\\<exists>g S.\n               Fun g S \\<sqsubseteq> x2a \\<and>\n               (\\<forall>s\\<in>set S.\n                   (\\<exists>c. s = Fun c []) \\<or>\n                   (\\<exists>x. s = Var x)))) \\<Longrightarrow>\n       (\\<exists>x. Fun x1a x2 = Var x) \\<or>\n       (\\<exists>g S.\n           Fun g S \\<sqsubseteq> Fun x1a x2 \\<and>\n           (\\<forall>s\\<in>set S.\n               (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x. Fun h R = Var x) \\<or>\n    (\\<exists>g S.\n        Fun g S \\<sqsubseteq> Fun h R \\<and>\n        (\\<forall>s\\<in>set S.\n            (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))", "proof (cases \"R = [] \\<or> (\\<forall>r \\<in> set R. \\<exists>x. r = Var x)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. R = [] \\<or>\n    (\\<forall>r\\<in>set R. \\<exists>x. r = Var x) \\<Longrightarrow>\n    (\\<exists>x. Fun h R = Var x) \\<or>\n    (\\<exists>g S.\n        Fun g S \\<sqsubseteq> Fun h R \\<and>\n        (\\<forall>s\\<in>set S.\n            (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))\n 2. \\<not> (R = [] \\<or>\n            (\\<forall>r\\<in>set R. \\<exists>x. r = Var x)) \\<Longrightarrow>\n    (\\<exists>x. Fun h R = Var x) \\<or>\n    (\\<exists>g S.\n        Fun g S \\<sqsubseteq> Fun h R \\<and>\n        (\\<forall>s\\<in>set S.\n            (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))", "case False"], ["proof (state)\nthis:\n  \\<not> (R = [] \\<or> (\\<forall>r\\<in>set R. \\<exists>x. r = Var x))\n\ngoal (2 subgoals):\n 1. R = [] \\<or>\n    (\\<forall>r\\<in>set R. \\<exists>x. r = Var x) \\<Longrightarrow>\n    (\\<exists>x. Fun h R = Var x) \\<or>\n    (\\<exists>g S.\n        Fun g S \\<sqsubseteq> Fun h R \\<and>\n        (\\<forall>s\\<in>set S.\n            (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))\n 2. \\<not> (R = [] \\<or>\n            (\\<forall>r\\<in>set R. \\<exists>x. r = Var x)) \\<Longrightarrow>\n    (\\<exists>x. Fun h R = Var x) \\<or>\n    (\\<exists>g S.\n        Fun g S \\<sqsubseteq> Fun h R \\<and>\n        (\\<forall>s\\<in>set S.\n            (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))", "then"], ["proof (chain)\npicking this:\n  \\<not> (R = [] \\<or> (\\<forall>r\\<in>set R. \\<exists>x. r = Var x))", "obtain r g S where \"r \\<in> set R\" \"?P r\" \"Fun g S \\<sqsubseteq> r\" \"?Q S\""], ["proof (prove)\nusing this:\n  \\<not> (R = [] \\<or> (\\<forall>r\\<in>set R. \\<exists>x. r = Var x))\n\ngoal (1 subgoal):\n 1. (\\<And>r g S.\n        \\<lbrakk>r \\<in> set R;\n         \\<exists>g S.\n            Fun g S \\<sqsubseteq> r \\<and>\n            (\\<forall>s\\<in>set S.\n                (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x));\n         Fun g S \\<sqsubseteq> r;\n         \\<forall>s\\<in>set S.\n            (\\<exists>c. s = Fun c []) \\<or>\n            (\\<exists>x. s = Var x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Fun.IH"], ["proof (prove)\nusing this:\n  \\<not> (R = [] \\<or> (\\<forall>r\\<in>set R. \\<exists>x. r = Var x))\n  ?x2a2 \\<in> set R \\<Longrightarrow>\n  (\\<exists>x. ?x2a2 = Var x) \\<or>\n  (\\<exists>g S.\n      Fun g S \\<sqsubseteq> ?x2a2 \\<and>\n      (\\<forall>s\\<in>set S.\n          (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))\n\ngoal (1 subgoal):\n 1. (\\<And>r g S.\n        \\<lbrakk>r \\<in> set R;\n         \\<exists>g S.\n            Fun g S \\<sqsubseteq> r \\<and>\n            (\\<forall>s\\<in>set S.\n                (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x));\n         Fun g S \\<sqsubseteq> r;\n         \\<forall>s\\<in>set S.\n            (\\<exists>c. s = Fun c []) \\<or>\n            (\\<exists>x. s = Var x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  r \\<in> set R\n  \\<exists>g S.\n     Fun g S \\<sqsubseteq> r \\<and>\n     (\\<forall>s\\<in>set S.\n         (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x))\n  Fun g S \\<sqsubseteq> r\n  \\<forall>s\\<in>set S.\n     (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)\n\ngoal (2 subgoals):\n 1. R = [] \\<or>\n    (\\<forall>r\\<in>set R. \\<exists>x. r = Var x) \\<Longrightarrow>\n    (\\<exists>x. Fun h R = Var x) \\<or>\n    (\\<exists>g S.\n        Fun g S \\<sqsubseteq> Fun h R \\<and>\n        (\\<forall>s\\<in>set S.\n            (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))\n 2. \\<not> (R = [] \\<or>\n            (\\<forall>r\\<in>set R. \\<exists>x. r = Var x)) \\<Longrightarrow>\n    (\\<exists>x. Fun h R = Var x) \\<or>\n    (\\<exists>g S.\n        Fun g S \\<sqsubseteq> Fun h R \\<and>\n        (\\<forall>s\\<in>set S.\n            (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))", "thus ?thesis"], ["proof (prove)\nusing this:\n  r \\<in> set R\n  \\<exists>g S.\n     Fun g S \\<sqsubseteq> r \\<and>\n     (\\<forall>s\\<in>set S.\n         (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x))\n  Fun g S \\<sqsubseteq> r\n  \\<forall>s\\<in>set S.\n     (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)\n\ngoal (1 subgoal):\n 1. (\\<exists>x. Fun h R = Var x) \\<or>\n    (\\<exists>g S.\n        Fun g S \\<sqsubseteq> Fun h R \\<and>\n        (\\<forall>s\\<in>set S.\n            (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))", "by auto"], ["proof (state)\nthis:\n  (\\<exists>x. Fun h R = Var x) \\<or>\n  (\\<exists>g S.\n      Fun g S \\<sqsubseteq> Fun h R \\<and>\n      (\\<forall>s\\<in>set S.\n          (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))\n\ngoal (1 subgoal):\n 1. R = [] \\<or>\n    (\\<forall>r\\<in>set R. \\<exists>x. r = Var x) \\<Longrightarrow>\n    (\\<exists>x. Fun h R = Var x) \\<or>\n    (\\<exists>g S.\n        Fun g S \\<sqsubseteq> Fun h R \\<and>\n        (\\<forall>s\\<in>set S.\n            (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))", "qed force"], ["proof (state)\nthis:\n  (\\<exists>x. Fun h R = Var x) \\<or>\n  (\\<exists>g S.\n      Fun g S \\<sqsubseteq> Fun h R \\<and>\n      (\\<forall>s\\<in>set S.\n          (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<exists>xa. Var x = Var xa) \\<or>\n       (\\<exists>g S.\n           Fun g S \\<sqsubseteq> Var x \\<and>\n           (\\<forall>s\\<in>set S.\n               (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))", "qed simp"], ["proof (state)\nthis:\n  (\\<exists>x. t = Var x) \\<or>\n  (\\<exists>g S.\n      Fun g S \\<sqsubseteq> t \\<and>\n      (\\<forall>s\\<in>set S.\n          (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))\n\ngoal (1 subgoal):\n 1. \\<exists>f T.\n       Fun f T \\<sqsubseteq> t \\<and>\n       (\\<forall>s\\<in>set T.\n           (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x))", "}"], ["proof (state)\nthis:\n  (\\<exists>x. ?ta4 = Var x) \\<or>\n  (\\<exists>g S.\n      Fun g S \\<sqsubseteq> ?ta4 \\<and>\n      (\\<forall>s\\<in>set S.\n          (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))\n\ngoal (1 subgoal):\n 1. \\<exists>f T.\n       Fun f T \\<sqsubseteq> t \\<and>\n       (\\<forall>s\\<in>set T.\n           (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<exists>x. ?ta4 = Var x) \\<or>\n  (\\<exists>g S.\n      Fun g S \\<sqsubseteq> ?ta4 \\<and>\n      (\\<forall>s\\<in>set S.\n          (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))\n\ngoal (1 subgoal):\n 1. \\<exists>f T.\n       Fun f T \\<sqsubseteq> t \\<and>\n       (\\<forall>s\\<in>set T.\n           (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x))", "using assms"], ["proof (prove)\nusing this:\n  (\\<exists>x. ?ta4 = Var x) \\<or>\n  (\\<exists>g S.\n      Fun g S \\<sqsubseteq> ?ta4 \\<and>\n      (\\<forall>s\\<in>set S.\n          (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x)))\n  \\<nexists>x. t = Var x\n\ngoal (1 subgoal):\n 1. \\<exists>f T.\n       Fun f T \\<sqsubseteq> t \\<and>\n       (\\<forall>s\\<in>set T.\n           (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x))", "by blast"], ["proof (state)\nthis:\n  \\<exists>f T.\n     Fun f T \\<sqsubseteq> t \\<and>\n     (\\<forall>s\\<in>set T.\n         (\\<exists>c. s = Fun c []) \\<or> (\\<exists>x. s = Var x))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}