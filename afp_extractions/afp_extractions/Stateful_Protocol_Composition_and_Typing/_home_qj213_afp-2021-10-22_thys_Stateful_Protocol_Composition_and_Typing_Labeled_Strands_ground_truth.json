{"file_name": "/home/qj213/afp-2021-10-22/thys/Stateful_Protocol_Composition_and_Typing/Labeled_Strands.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Stateful_Protocol_Composition_and_Typing", "problem_names": ["lemma is_LabelS_proj_iff_not_is_LabelN:\n  \"list_all is_LabelS (proj l A) \\<longleftrightarrow> \\<not>list_ex (is_LabelN l) A\"", "lemma proj_subset_if_no_label:\n  assumes \"\\<not>list_ex (is_LabelN l) A\"\n  shows \"set (proj l A) \\<subseteq> set (proj l' A)\"\n    and \"set (proj_unl l A) \\<subseteq> set (proj_unl l' A)\"", "lemma proj_in_setD:\n  assumes a: \"a \\<in> set (proj l A)\"\n  obtains k b where \"a = (k, b)\" \"k = (ln l) \\<or> k = \\<star>\"", "lemma proj_set_mono:\n  assumes \"set A \\<subseteq> set B\"\n  shows \"set (proj n A) \\<subseteq> set (proj n B)\"\n    and \"set (proj_unl n A) \\<subseteq> set (proj_unl n B)\"", "lemma unlabel_nil[simp]: \"unlabel [] = []\"", "lemma unlabel_mono: \"set A \\<subseteq> set B \\<Longrightarrow> set (unlabel A) \\<subseteq> set (unlabel B)\"", "lemma unlabel_in: \"(l,x) \\<in> set A \\<Longrightarrow> x \\<in> set (unlabel A)\"", "lemma unlabel_mem_has_label: \"x \\<in> set (unlabel A) \\<Longrightarrow> \\<exists>l. (l,x) \\<in> set A\"", "lemma proj_nil[simp]: \"proj n [] = []\" \"proj_unl n [] = []\"", "lemma singleton_lst_proj[simp]:\n  \"proj_unl l [(ln l, a)] = [a]\"\n  \"l \\<noteq> l' \\<Longrightarrow> proj_unl l' [(ln l, a)] = []\"\n  \"proj_unl l [(\\<star>, a)] = [a]\"\n  \"unlabel [(l'', a)] = [a]\"", "lemma unlabel_nil_only_if_nil[simp]: \"unlabel A = [] \\<Longrightarrow> A = []\"", "lemma unlabel_Cons[simp]:\n  \"unlabel ((l,a)#A) = a#unlabel A\"\n  \"unlabel (b#A) = snd b#unlabel A\"", "lemma unlabel_append[simp]: \"unlabel (A@B) = unlabel A@unlabel B\"", "lemma proj_Cons[simp]:\n  \"proj n ((ln n,a)#A) = (ln n,a)#proj n A\"\n  \"proj n ((\\<star>,a)#A) = (\\<star>,a)#proj n A\"\n  \"m \\<noteq> n \\<Longrightarrow> proj n ((ln m,a)#A) = proj n A\"\n  \"l = (ln n) \\<Longrightarrow> proj n ((l,a)#A) = (l,a)#proj n A\"\n  \"l = \\<star> \\<Longrightarrow> proj n ((l,a)#A) = (l,a)#proj n A\"\n  \"fst b \\<noteq> \\<star> \\<Longrightarrow> fst b \\<noteq> (ln n) \\<Longrightarrow> proj n (b#A) = proj n A\"", "lemma proj_append[simp]:\n  \"proj l (A'@B') = proj l A'@proj l B'\"\n  \"proj_unl l (A@B) = proj_unl l A@proj_unl l B\"", "lemma proj_unl_cons[simp]:\n  \"proj_unl l ((ln l, a)#A) = a#proj_unl l A\"\n  \"l \\<noteq> l' \\<Longrightarrow> proj_unl l' ((ln l, a)#A) = proj_unl l' A\"\n  \"proj_unl l ((\\<star>, a)#A) = a#proj_unl l A\"", "lemma trms_unlabel_proj[simp]:\n  \"trms\\<^sub>s\\<^sub>t\\<^sub>p (snd (ln l, x)) \\<subseteq> trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l [(ln l, x)]\"", "lemma trms_unlabel_star[simp]:\n  \"trms\\<^sub>s\\<^sub>t\\<^sub>p (snd (\\<star>, x)) \\<subseteq> trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l [(\\<star>, x)]\"", "lemma trms\\<^sub>l\\<^sub>s\\<^sub>t_union[simp]: \"trms\\<^sub>l\\<^sub>s\\<^sub>t A = (\\<Union>l. trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l A)\"", "lemma trms\\<^sub>l\\<^sub>s\\<^sub>t_append[simp]: \"trms\\<^sub>l\\<^sub>s\\<^sub>t (A@B) = trms\\<^sub>l\\<^sub>s\\<^sub>t A \\<union> trms\\<^sub>l\\<^sub>s\\<^sub>t B\"", "lemma trms_proj\\<^sub>l\\<^sub>s\\<^sub>t_append[simp]: \"trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l (A@B) = trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l A \\<union> trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l B\"", "lemma trms_proj\\<^sub>l\\<^sub>s\\<^sub>t_subset[simp]:\n  \"trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l A \\<subseteq> trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l (A@B)\"\n  \"trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l B \\<subseteq> trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l (A@B)\"", "lemma trms\\<^sub>l\\<^sub>s\\<^sub>t_subset[simp]:\n  \"trms\\<^sub>l\\<^sub>s\\<^sub>t A \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A@B)\"\n  \"trms\\<^sub>l\\<^sub>s\\<^sub>t B \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A@B)\"", "lemma vars\\<^sub>l\\<^sub>s\\<^sub>t_union: \"vars\\<^sub>l\\<^sub>s\\<^sub>t A = (\\<Union>l. vars_proj\\<^sub>l\\<^sub>s\\<^sub>t l A)\"", "lemma unlabel_Cons_inv:\n  \"unlabel A = b#B \\<Longrightarrow> \\<exists>A'. (\\<exists>n. A = (ln n, b)#A') \\<or> A = (\\<star>, b)#A'\"", "lemma unlabel_snoc_inv:\n  \"unlabel A = B@[b] \\<Longrightarrow> \\<exists>A'. (\\<exists>n. A = A'@[(ln n, b)]) \\<or> A = A'@[(\\<star>, b)]\"", "lemma proj_idem[simp]: \"proj l (proj l A) = proj l A\"", "lemma proj_ik\\<^sub>s\\<^sub>t_is_proj_rcv_set:\n  \"ik\\<^sub>s\\<^sub>t (proj_unl n A) = {t. (ln n, Receive t) \\<in> set A \\<or> (\\<star>, Receive t) \\<in> set A} \"", "lemma unlabel_ik\\<^sub>s\\<^sub>t_is_rcv_set:\n  \"ik\\<^sub>s\\<^sub>t (unlabel A) = {t | l t. (l, Receive t) \\<in> set A}\"", "lemma proj_ik_union_is_unlabel_ik:\n  \"ik\\<^sub>s\\<^sub>t (unlabel A) = (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))\"", "lemma proj_ik_append[simp]:\n  \"ik\\<^sub>s\\<^sub>t (proj_unl l (A@B)) = ik\\<^sub>s\\<^sub>t (proj_unl l A) \\<union> ik\\<^sub>s\\<^sub>t (proj_unl l B)\"", "lemma proj_ik_append_subst_all:\n  \"ik\\<^sub>s\\<^sub>t (proj_unl l (A@B)) \\<cdot>\\<^sub>s\\<^sub>e\\<^sub>t I = (ik\\<^sub>s\\<^sub>t (proj_unl l A) \\<cdot>\\<^sub>s\\<^sub>e\\<^sub>t I) \\<union> (ik\\<^sub>s\\<^sub>t (proj_unl l B) \\<cdot>\\<^sub>s\\<^sub>e\\<^sub>t I)\"", "lemma ik_proj_subset[simp]: \"ik\\<^sub>s\\<^sub>t (proj_unl n A) \\<subseteq> trms_proj\\<^sub>l\\<^sub>s\\<^sub>t n A\"", "lemma prefix_proj:\n  \"prefix A B \\<Longrightarrow> prefix (unlabel A) (unlabel B)\"\n  \"prefix A B \\<Longrightarrow> prefix (proj n A) (proj n B)\"\n  \"prefix A B \\<Longrightarrow> prefix (proj_unl n A) (proj_unl n B)\"", "lemma wfvarsoccs\\<^sub>s\\<^sub>t_proj_union:\n  \"wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) = (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A))\"", "lemma wf_if_wf_proj:\n  assumes \"\\<forall>l. wf\\<^sub>s\\<^sub>t V (proj_unl l A)\"\n  shows \"wf\\<^sub>s\\<^sub>t V (unlabel A)\""], "translations": [["", "lemma is_LabelS_proj_iff_not_is_LabelN:\n  \"list_all is_LabelS (proj l A) \\<longleftrightarrow> \\<not>list_ex (is_LabelN l) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_all is_LabelS (proj l A) = (\\<not> list_ex (is_LabelN l) A)", "by (induct A) (auto simp add: proj_def)"], ["", "lemma proj_subset_if_no_label:\n  assumes \"\\<not>list_ex (is_LabelN l) A\"\n  shows \"set (proj l A) \\<subseteq> set (proj l' A)\"\n    and \"set (proj_unl l A) \\<subseteq> set (proj_unl l' A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (proj l A) \\<subseteq> set (proj l' A) &&&\n    set (proj_unl l A) \\<subseteq> set (proj_unl l' A)", "using assms"], ["proof (prove)\nusing this:\n  \\<not> list_ex (is_LabelN l) A\n\ngoal (1 subgoal):\n 1. set (proj l A) \\<subseteq> set (proj l' A) &&&\n    set (proj_unl l A) \\<subseteq> set (proj_unl l' A)", "by (induct A) (auto simp add: unlabel_def proj_def)"], ["", "lemma proj_in_setD:\n  assumes a: \"a \\<in> set (proj l A)\"\n  obtains k b where \"a = (k, b)\" \"k = (ln l) \\<or> k = \\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k b.\n        \\<lbrakk>a = (k, b); k = ln l \\<or> k = \\<star>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using that a"], ["proof (prove)\nusing this:\n  \\<lbrakk>a = (?k, ?b); ?k = ln l \\<or> ?k = \\<star>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  a \\<in> set (proj l A)\n\ngoal (1 subgoal):\n 1. (\\<And>k b.\n        \\<lbrakk>a = (k, b); k = ln l \\<or> k = \\<star>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding proj_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>a = (?k, ?b); ?k = ln l \\<or> ?k = \\<star>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  a \\<in> set (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) A)\n\ngoal (1 subgoal):\n 1. (\\<And>k b.\n        \\<lbrakk>a = (k, b); k = ln l \\<or> k = \\<star>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases a) auto"], ["", "lemma proj_set_mono:\n  assumes \"set A \\<subseteq> set B\"\n  shows \"set (proj n A) \\<subseteq> set (proj n B)\"\n    and \"set (proj_unl n A) \\<subseteq> set (proj_unl n B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (proj n A) \\<subseteq> set (proj n B) &&&\n    set (proj_unl n A) \\<subseteq> set (proj_unl n B)", "using assms"], ["proof (prove)\nusing this:\n  set A \\<subseteq> set B\n\ngoal (1 subgoal):\n 1. set (proj n A) \\<subseteq> set (proj n B) &&&\n    set (proj_unl n A) \\<subseteq> set (proj_unl n B)", "unfolding proj_def unlabel_def"], ["proof (prove)\nusing this:\n  set A \\<subseteq> set B\n\ngoal (1 subgoal):\n 1. set (filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) A)\n    \\<subseteq> set (filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s)\n                      B) &&&\n    set (map snd (filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) A))\n    \\<subseteq> set (map snd\n                      (filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s)\n                        B))", "by auto"], ["", "lemma unlabel_nil[simp]: \"unlabel [] = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unlabel [] = []", "by (simp add: unlabel_def)"], ["", "lemma unlabel_mono: \"set A \\<subseteq> set B \\<Longrightarrow> set (unlabel A) \\<subseteq> set (unlabel B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set A \\<subseteq> set B \\<Longrightarrow>\n    set (unlabel A) \\<subseteq> set (unlabel B)", "by (auto simp add: unlabel_def)"], ["", "lemma unlabel_in: \"(l,x) \\<in> set A \\<Longrightarrow> x \\<in> set (unlabel A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (l, x) \\<in> set A \\<Longrightarrow> x \\<in> set (unlabel A)", "unfolding unlabel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (l, x) \\<in> set A \\<Longrightarrow> x \\<in> set (map snd A)", "by force"], ["", "lemma unlabel_mem_has_label: \"x \\<in> set (unlabel A) \\<Longrightarrow> \\<exists>l. (l,x) \\<in> set A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set (unlabel A) \\<Longrightarrow> \\<exists>l. (l, x) \\<in> set A", "unfolding unlabel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set (map snd A) \\<Longrightarrow> \\<exists>l. (l, x) \\<in> set A", "by auto"], ["", "lemma proj_nil[simp]: \"proj n [] = []\" \"proj_unl n [] = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj n [] = [] &&& proj_unl n [] = []", "unfolding unlabel_def proj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) [] = [] &&&\n    map snd (filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) []) = []", "by auto"], ["", "lemma singleton_lst_proj[simp]:\n  \"proj_unl l [(ln l, a)] = [a]\"\n  \"l \\<noteq> l' \\<Longrightarrow> proj_unl l' [(ln l, a)] = []\"\n  \"proj_unl l [(\\<star>, a)] = [a]\"\n  \"unlabel [(l'', a)] = [a]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (proj_unl l [(ln l, a)] = [a] &&&\n     (l \\<noteq> l' \\<Longrightarrow> proj_unl l' [(ln l, a)] = [])) &&&\n    proj_unl l [(\\<star>, a)] = [a] &&& unlabel [(l'', a)] = [a]", "unfolding proj_def unlabel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (map snd\n      (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) [(ln l, a)]) =\n     [a] &&&\n     (l \\<noteq> l' \\<Longrightarrow>\n      map snd\n       (filter (\\<lambda>s. is_LabelN l' s \\<or> is_LabelS s) [(ln l, a)]) =\n      [])) &&&\n    map snd\n     (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) [(\\<star>, a)]) =\n    [a] &&&\n    map snd [(l'', a)] = [a]", "by simp_all"], ["", "lemma unlabel_nil_only_if_nil[simp]: \"unlabel A = [] \\<Longrightarrow> A = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unlabel A = [] \\<Longrightarrow> A = []", "unfolding unlabel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. map snd A = [] \\<Longrightarrow> A = []", "by auto"], ["", "lemma unlabel_Cons[simp]:\n  \"unlabel ((l,a)#A) = a#unlabel A\"\n  \"unlabel (b#A) = snd b#unlabel A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unlabel ((l, a) # A) = a # unlabel A &&&\n    unlabel (b # A) = snd b # unlabel A", "unfolding unlabel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. map snd ((l, a) # A) = a # map snd A &&&\n    map snd (b # A) = snd b # map snd A", "by simp_all"], ["", "lemma unlabel_append[simp]: \"unlabel (A@B) = unlabel A@unlabel B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unlabel (A @ B) = unlabel A @ unlabel B", "unfolding unlabel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. map snd (A @ B) = map snd A @ map snd B", "by auto"], ["", "lemma proj_Cons[simp]:\n  \"proj n ((ln n,a)#A) = (ln n,a)#proj n A\"\n  \"proj n ((\\<star>,a)#A) = (\\<star>,a)#proj n A\"\n  \"m \\<noteq> n \\<Longrightarrow> proj n ((ln m,a)#A) = proj n A\"\n  \"l = (ln n) \\<Longrightarrow> proj n ((l,a)#A) = (l,a)#proj n A\"\n  \"l = \\<star> \\<Longrightarrow> proj n ((l,a)#A) = (l,a)#proj n A\"\n  \"fst b \\<noteq> \\<star> \\<Longrightarrow> fst b \\<noteq> (ln n) \\<Longrightarrow> proj n (b#A) = proj n A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (proj n ((ln n, a) # A) = (ln n, a) # proj n A &&&\n     proj n ((\\<star>, a) # A) = (\\<star>, a) # proj n A &&&\n     (m \\<noteq> n \\<Longrightarrow> proj n ((ln m, a) # A) = proj n A)) &&&\n    (l = ln n \\<Longrightarrow> proj n ((l, a) # A) = (l, a) # proj n A) &&&\n    (l = \\<star> \\<Longrightarrow>\n     proj n ((l, a) # A) = (l, a) # proj n A) &&&\n    (\\<lbrakk>fst b \\<noteq> \\<star>; fst b \\<noteq> ln n\\<rbrakk>\n     \\<Longrightarrow> proj n (b # A) = proj n A)", "unfolding proj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) ((ln n, a) # A) =\n     (ln n, a) # filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) A &&&\n     filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s)\n      ((\\<star>, a) # A) =\n     (\\<star>, a) #\n     filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) A &&&\n     (m \\<noteq> n \\<Longrightarrow>\n      filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) ((ln m, a) # A) =\n      filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) A)) &&&\n    (l = ln n \\<Longrightarrow>\n     filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) ((l, a) # A) =\n     (l, a) # filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) A) &&&\n    (l = \\<star> \\<Longrightarrow>\n     filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) ((l, a) # A) =\n     (l, a) # filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) A) &&&\n    (\\<lbrakk>fst b \\<noteq> \\<star>; fst b \\<noteq> ln n\\<rbrakk>\n     \\<Longrightarrow> filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s)\n                        (b # A) =\n                       filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s)\n                        A)", "by auto"], ["", "lemma proj_append[simp]:\n  \"proj l (A'@B') = proj l A'@proj l B'\"\n  \"proj_unl l (A@B) = proj_unl l A@proj_unl l B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj l (A' @ B') = proj l A' @ proj l B' &&&\n    proj_unl l (A @ B) = proj_unl l A @ proj_unl l B", "unfolding proj_def unlabel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) (A' @ B') =\n    filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) A' @\n    filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) B' &&&\n    map snd (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) (A @ B)) =\n    map snd (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) A) @\n    map snd (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) B)", "by auto"], ["", "lemma proj_unl_cons[simp]:\n  \"proj_unl l ((ln l, a)#A) = a#proj_unl l A\"\n  \"l \\<noteq> l' \\<Longrightarrow> proj_unl l' ((ln l, a)#A) = proj_unl l' A\"\n  \"proj_unl l ((\\<star>, a)#A) = a#proj_unl l A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_unl l ((ln l, a) # A) = a # proj_unl l A &&&\n    (l \\<noteq> l' \\<Longrightarrow>\n     proj_unl l' ((ln l, a) # A) = proj_unl l' A) &&&\n    proj_unl l ((\\<star>, a) # A) = a # proj_unl l A", "unfolding proj_def unlabel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. map snd\n     (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s)\n       ((ln l, a) # A)) =\n    a # map snd (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) A) &&&\n    (l \\<noteq> l' \\<Longrightarrow>\n     map snd\n      (filter (\\<lambda>s. is_LabelN l' s \\<or> is_LabelS s)\n        ((ln l, a) # A)) =\n     map snd (filter (\\<lambda>s. is_LabelN l' s \\<or> is_LabelS s) A)) &&&\n    map snd\n     (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s)\n       ((\\<star>, a) # A)) =\n    a # map snd (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) A)", "by simp_all"], ["", "lemma trms_unlabel_proj[simp]:\n  \"trms\\<^sub>s\\<^sub>t\\<^sub>p (snd (ln l, x)) \\<subseteq> trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l [(ln l, x)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trms\\<^sub>s\\<^sub>t\\<^sub>p (snd (ln l, x))\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [(ln l, x)])", "by auto"], ["", "lemma trms_unlabel_star[simp]:\n  \"trms\\<^sub>s\\<^sub>t\\<^sub>p (snd (\\<star>, x)) \\<subseteq> trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l [(\\<star>, x)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trms\\<^sub>s\\<^sub>t\\<^sub>p (snd (\\<star>, x))\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [(\\<star>, x)])", "by auto"], ["", "lemma trms\\<^sub>l\\<^sub>s\\<^sub>t_union[simp]: \"trms\\<^sub>l\\<^sub>s\\<^sub>t A = (\\<Union>l. trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t A =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A))", "proof (induction A)"], ["proof (state)\ngoal (2 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l []))\n 2. \\<And>a A.\n       trms\\<^sub>l\\<^sub>s\\<^sub>t A =\n       (\\<Union>l.\n           trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)) \\<Longrightarrow>\n       trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n       (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "case (Cons a A)"], ["proof (state)\nthis:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t A =\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A))\n\ngoal (2 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l []))\n 2. \\<And>a A.\n       trms\\<^sub>l\\<^sub>s\\<^sub>t A =\n       (\\<Union>l.\n           trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)) \\<Longrightarrow>\n       trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n       (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "obtain l s where ls: \"a = (l,s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l s. a = (l, s) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  a = (l, s)\n\ngoal (2 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l []))\n 2. \\<And>a A.\n       trms\\<^sub>l\\<^sub>s\\<^sub>t A =\n       (\\<Union>l.\n           trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)) \\<Longrightarrow>\n       trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n       (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "have \"trms\\<^sub>l\\<^sub>s\\<^sub>t [a] = (\\<Union>l. trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l [a])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "have *: \"trms\\<^sub>l\\<^sub>s\\<^sub>t [a] = trms\\<^sub>s\\<^sub>t\\<^sub>p s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [a] = trms\\<^sub>s\\<^sub>t\\<^sub>p s", "using ls"], ["proof (prove)\nusing this:\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [a] = trms\\<^sub>s\\<^sub>t\\<^sub>p s", "by simp"], ["proof (state)\nthis:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t [a] = trms\\<^sub>s\\<^sub>t\\<^sub>p s\n\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "proof (cases l)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       l = ln x1 \\<Longrightarrow>\n       trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n       (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n 2. l = \\<star> \\<Longrightarrow>\n    trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "case (LabelN n)"], ["proof (state)\nthis:\n  l = ln n\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       l = ln x1 \\<Longrightarrow>\n       trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n       (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n 2. l = \\<star> \\<Longrightarrow>\n    trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "hence \"trms_proj\\<^sub>l\\<^sub>s\\<^sub>t n [a] = trms\\<^sub>s\\<^sub>t\\<^sub>p s\""], ["proof (prove)\nusing this:\n  l = ln n\n\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj n [a]) =\n    trms\\<^sub>s\\<^sub>t\\<^sub>p s", "using ls"], ["proof (prove)\nusing this:\n  l = ln n\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj n [a]) =\n    trms\\<^sub>s\\<^sub>t\\<^sub>p s", "by simp"], ["proof (state)\nthis:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t (proj n [a]) = trms\\<^sub>s\\<^sub>t\\<^sub>p s\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       l = ln x1 \\<Longrightarrow>\n       trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n       (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n 2. l = \\<star> \\<Longrightarrow>\n    trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "moreover"], ["proof (state)\nthis:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t (proj n [a]) = trms\\<^sub>s\\<^sub>t\\<^sub>p s\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       l = ln x1 \\<Longrightarrow>\n       trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n       (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n 2. l = \\<star> \\<Longrightarrow>\n    trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "have \"\\<forall>m. n \\<noteq> m \\<longrightarrow> trms_proj\\<^sub>l\\<^sub>s\\<^sub>t m [a] = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m.\n       n \\<noteq> m \\<longrightarrow>\n       trms\\<^sub>l\\<^sub>s\\<^sub>t (proj m [a]) = {}", "using ls LabelN"], ["proof (prove)\nusing this:\n  a = (l, s)\n  l = ln n\n\ngoal (1 subgoal):\n 1. \\<forall>m.\n       n \\<noteq> m \\<longrightarrow>\n       trms\\<^sub>l\\<^sub>s\\<^sub>t (proj m [a]) = {}", "by auto"], ["proof (state)\nthis:\n  \\<forall>m.\n     n \\<noteq> m \\<longrightarrow>\n     trms\\<^sub>l\\<^sub>s\\<^sub>t (proj m [a]) = {}\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       l = ln x1 \\<Longrightarrow>\n       trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n       (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n 2. l = \\<star> \\<Longrightarrow>\n    trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "ultimately"], ["proof (chain)\npicking this:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t (proj n [a]) = trms\\<^sub>s\\<^sub>t\\<^sub>p s\n  \\<forall>m.\n     n \\<noteq> m \\<longrightarrow>\n     trms\\<^sub>l\\<^sub>s\\<^sub>t (proj m [a]) = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t (proj n [a]) = trms\\<^sub>s\\<^sub>t\\<^sub>p s\n  \\<forall>m.\n     n \\<noteq> m \\<longrightarrow>\n     trms\\<^sub>l\\<^sub>s\\<^sub>t (proj m [a]) = {}\n\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "using * ls"], ["proof (prove)\nusing this:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t (proj n [a]) = trms\\<^sub>s\\<^sub>t\\<^sub>p s\n  \\<forall>m.\n     n \\<noteq> m \\<longrightarrow>\n     trms\\<^sub>l\\<^sub>s\\<^sub>t (proj m [a]) = {}\n  trms\\<^sub>l\\<^sub>s\\<^sub>t [a] = trms\\<^sub>s\\<^sub>t\\<^sub>p s\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "by fastforce"], ["proof (state)\nthis:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n\ngoal (1 subgoal):\n 1. l = \\<star> \\<Longrightarrow>\n    trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l = \\<star> \\<Longrightarrow>\n    trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "case LabelS"], ["proof (state)\nthis:\n  l = \\<star>\n\ngoal (1 subgoal):\n 1. l = \\<star> \\<Longrightarrow>\n    trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "hence \"\\<forall>l. trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l [a] = trms\\<^sub>s\\<^sub>t\\<^sub>p s\""], ["proof (prove)\nusing this:\n  l = \\<star>\n\ngoal (1 subgoal):\n 1. \\<forall>l.\n       trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]) =\n       trms\\<^sub>s\\<^sub>t\\<^sub>p s", "using ls"], ["proof (prove)\nusing this:\n  l = \\<star>\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. \\<forall>l.\n       trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]) =\n       trms\\<^sub>s\\<^sub>t\\<^sub>p s", "by auto"], ["proof (state)\nthis:\n  \\<forall>l.\n     trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]) =\n     trms\\<^sub>s\\<^sub>t\\<^sub>p s\n\ngoal (1 subgoal):\n 1. l = \\<star> \\<Longrightarrow>\n    trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>l.\n     trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]) =\n     trms\\<^sub>s\\<^sub>t\\<^sub>p s\n\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "using * ls"], ["proof (prove)\nusing this:\n  \\<forall>l.\n     trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]) =\n     trms\\<^sub>s\\<^sub>t\\<^sub>p s\n  trms\\<^sub>l\\<^sub>s\\<^sub>t [a] = trms\\<^sub>s\\<^sub>t\\<^sub>p s\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "by fastforce"], ["proof (state)\nthis:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n\ngoal (2 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l []))\n 2. \\<And>a A.\n       trms\\<^sub>l\\<^sub>s\\<^sub>t A =\n       (\\<Union>l.\n           trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)) \\<Longrightarrow>\n       trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n       (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "moreover"], ["proof (state)\nthis:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n\ngoal (2 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l []))\n 2. \\<And>a A.\n       trms\\<^sub>l\\<^sub>s\\<^sub>t A =\n       (\\<Union>l.\n           trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)) \\<Longrightarrow>\n       trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n       (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "have \"\\<forall>l. trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l (a#A) = trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l [a] \\<union> trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l.\n       trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)) =\n       trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]) \\<union>\n       trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)", "unfolding unlabel_def proj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l.\n       trms\\<^sub>s\\<^sub>t\n        (map snd\n          (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) (a # A))) =\n       trms\\<^sub>s\\<^sub>t\n        (map snd\n          (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s)\n            [a])) \\<union>\n       trms\\<^sub>s\\<^sub>t\n        (map snd (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) A))", "by auto"], ["proof (state)\nthis:\n  \\<forall>l.\n     trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)) =\n     trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]) \\<union>\n     trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)\n\ngoal (2 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l []))\n 2. \\<And>a A.\n       trms\\<^sub>l\\<^sub>s\\<^sub>t A =\n       (\\<Union>l.\n           trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)) \\<Longrightarrow>\n       trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n       (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "hence \"(\\<Union>l. trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l (a#A)) = (\\<Union>l. trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l [a]) \\<union> (\\<Union>l. trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l A)\""], ["proof (prove)\nusing this:\n  \\<forall>l.\n     trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)) =\n     trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]) \\<union>\n     trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)\n\ngoal (1 subgoal):\n 1. (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A))) =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a])) \\<union>\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A))", "by auto"], ["proof (state)\nthis:\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A))) =\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a])) \\<union>\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A))\n\ngoal (2 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l []))\n 2. \\<And>a A.\n       trms\\<^sub>l\\<^sub>s\\<^sub>t A =\n       (\\<Union>l.\n           trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)) \\<Longrightarrow>\n       trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n       (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "ultimately"], ["proof (chain)\npicking this:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A))) =\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a])) \\<union>\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A))", "show ?case"], ["proof (prove)\nusing this:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A))) =\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a])) \\<union>\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A))\n\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "using Cons.IH ls"], ["proof (prove)\nusing this:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A))) =\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a])) \\<union>\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A))\n  trms\\<^sub>l\\<^sub>s\\<^sub>t A =\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A))\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "by auto"], ["proof (state)\nthis:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n  (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))\n\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t [] =\n    (\\<Union>l. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l []))", "qed simp"], ["", "lemma trms\\<^sub>l\\<^sub>s\\<^sub>t_append[simp]: \"trms\\<^sub>l\\<^sub>s\\<^sub>t (A@B) = trms\\<^sub>l\\<^sub>s\\<^sub>t A \\<union> trms\\<^sub>l\\<^sub>s\\<^sub>t B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B) =\n    trms\\<^sub>l\\<^sub>s\\<^sub>t A \\<union> trms\\<^sub>l\\<^sub>s\\<^sub>t B", "by (metis trms\\<^sub>s\\<^sub>t_append unlabel_append)"], ["", "lemma trms_proj\\<^sub>l\\<^sub>s\\<^sub>t_append[simp]: \"trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l (A@B) = trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l A \\<union> trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (A @ B)) =\n    trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A) \\<union>\n    trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l B)", "by (metis (no_types, lifting) filter_append proj_def trms\\<^sub>l\\<^sub>s\\<^sub>t_append)"], ["", "lemma trms_proj\\<^sub>l\\<^sub>s\\<^sub>t_subset[simp]:\n  \"trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l A \\<subseteq> trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l (A@B)\"\n  \"trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l B \\<subseteq> trms_proj\\<^sub>l\\<^sub>s\\<^sub>t l (A@B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (A @ B)) &&&\n    trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l B)\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (A @ B))", "using trms_proj\\<^sub>l\\<^sub>s\\<^sub>t_append[of l]"], ["proof (prove)\nusing this:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (?A @ ?B)) =\n  trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l ?A) \\<union>\n  trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l ?B)\n\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (A @ B)) &&&\n    trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l B)\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (proj l (A @ B))", "by blast+"], ["", "lemma trms\\<^sub>l\\<^sub>s\\<^sub>t_subset[simp]:\n  \"trms\\<^sub>l\\<^sub>s\\<^sub>t A \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A@B)\"\n  \"trms\\<^sub>l\\<^sub>s\\<^sub>t B \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A@B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t A\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B) &&&\n    trms\\<^sub>l\\<^sub>s\\<^sub>t B\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)", "proof (induction A)"], ["proof (state)\ngoal (4 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t []\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 2. trms\\<^sub>l\\<^sub>s\\<^sub>t B\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 3. \\<And>a A.\n       \\<lbrakk>trms\\<^sub>l\\<^sub>s\\<^sub>t A\n                \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B);\n        trms\\<^sub>l\\<^sub>s\\<^sub>t B\n        \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\\<rbrakk>\n       \\<Longrightarrow> trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A)\n                         \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t\n((a # A) @ B)\n 4. \\<And>a A.\n       \\<lbrakk>trms\\<^sub>l\\<^sub>s\\<^sub>t A\n                \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B);\n        trms\\<^sub>l\\<^sub>s\\<^sub>t B\n        \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\\<rbrakk>\n       \\<Longrightarrow> trms\\<^sub>l\\<^sub>s\\<^sub>t B\n                         \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t\n((a # A) @ B)", "case (Cons a A)"], ["proof (state)\nthis:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t A\n  \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\n  trms\\<^sub>l\\<^sub>s\\<^sub>t B\n  \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\n\ngoal (4 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t []\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 2. trms\\<^sub>l\\<^sub>s\\<^sub>t B\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 3. \\<And>a A.\n       \\<lbrakk>trms\\<^sub>l\\<^sub>s\\<^sub>t A\n                \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B);\n        trms\\<^sub>l\\<^sub>s\\<^sub>t B\n        \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\\<rbrakk>\n       \\<Longrightarrow> trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A)\n                         \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t\n((a # A) @ B)\n 4. \\<And>a A.\n       \\<lbrakk>trms\\<^sub>l\\<^sub>s\\<^sub>t A\n                \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B);\n        trms\\<^sub>l\\<^sub>s\\<^sub>t B\n        \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\\<rbrakk>\n       \\<Longrightarrow> trms\\<^sub>l\\<^sub>s\\<^sub>t B\n                         \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t\n((a # A) @ B)", "obtain l s where *: \"a = (l,s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l s. a = (l, s) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  a = (l, s)\n\ngoal (4 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t []\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 2. trms\\<^sub>l\\<^sub>s\\<^sub>t B\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 3. \\<And>a A.\n       \\<lbrakk>trms\\<^sub>l\\<^sub>s\\<^sub>t A\n                \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B);\n        trms\\<^sub>l\\<^sub>s\\<^sub>t B\n        \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\\<rbrakk>\n       \\<Longrightarrow> trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A)\n                         \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t\n((a # A) @ B)\n 4. \\<And>a A.\n       \\<lbrakk>trms\\<^sub>l\\<^sub>s\\<^sub>t A\n                \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B);\n        trms\\<^sub>l\\<^sub>s\\<^sub>t B\n        \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\\<rbrakk>\n       \\<Longrightarrow> trms\\<^sub>l\\<^sub>s\\<^sub>t B\n                         \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t\n((a # A) @ B)", "{"], ["proof (state)\nthis:\n  a = (l, s)\n\ngoal (4 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t []\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 2. trms\\<^sub>l\\<^sub>s\\<^sub>t B\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 3. \\<And>a A.\n       \\<lbrakk>trms\\<^sub>l\\<^sub>s\\<^sub>t A\n                \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B);\n        trms\\<^sub>l\\<^sub>s\\<^sub>t B\n        \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\\<rbrakk>\n       \\<Longrightarrow> trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A)\n                         \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t\n((a # A) @ B)\n 4. \\<And>a A.\n       \\<lbrakk>trms\\<^sub>l\\<^sub>s\\<^sub>t A\n                \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B);\n        trms\\<^sub>l\\<^sub>s\\<^sub>t B\n        \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\\<rbrakk>\n       \\<Longrightarrow> trms\\<^sub>l\\<^sub>s\\<^sub>t B\n                         \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t\n((a # A) @ B)", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t []\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 2. trms\\<^sub>l\\<^sub>s\\<^sub>t B\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 3. \\<And>a A.\n       \\<lbrakk>trms\\<^sub>l\\<^sub>s\\<^sub>t A\n                \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B);\n        trms\\<^sub>l\\<^sub>s\\<^sub>t B\n        \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\\<rbrakk>\n       \\<Longrightarrow> trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A)\n                         \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t\n((a # A) @ B)\n 4. \\<And>a A.\n       \\<lbrakk>trms\\<^sub>l\\<^sub>s\\<^sub>t A\n                \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B);\n        trms\\<^sub>l\\<^sub>s\\<^sub>t B\n        \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\\<rbrakk>\n       \\<Longrightarrow> trms\\<^sub>l\\<^sub>s\\<^sub>t B\n                         \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t\n((a # A) @ B)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A)\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ((a # A) @ B)", "using Cons *"], ["proof (prove)\nusing this:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t A\n  \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\n  trms\\<^sub>l\\<^sub>s\\<^sub>t B\n  \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A)\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ((a # A) @ B)", "by auto"], ["proof (state)\nthis:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A)\n  \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ((a # A) @ B)\n\ngoal (3 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t []\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 2. trms\\<^sub>l\\<^sub>s\\<^sub>t B\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 3. \\<And>a A.\n       \\<lbrakk>trms\\<^sub>l\\<^sub>s\\<^sub>t A\n                \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B);\n        trms\\<^sub>l\\<^sub>s\\<^sub>t B\n        \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\\<rbrakk>\n       \\<Longrightarrow> trms\\<^sub>l\\<^sub>s\\<^sub>t B\n                         \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t\n((a # A) @ B)", "}"], ["proof (state)\nthis:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A)\n  \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ((a # A) @ B)\n\ngoal (3 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t []\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 2. trms\\<^sub>l\\<^sub>s\\<^sub>t B\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 3. \\<And>a A.\n       \\<lbrakk>trms\\<^sub>l\\<^sub>s\\<^sub>t A\n                \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B);\n        trms\\<^sub>l\\<^sub>s\\<^sub>t B\n        \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\\<rbrakk>\n       \\<Longrightarrow> trms\\<^sub>l\\<^sub>s\\<^sub>t B\n                         \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t\n((a # A) @ B)", "{"], ["proof (state)\nthis:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t (a # A)\n  \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ((a # A) @ B)\n\ngoal (3 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t []\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 2. trms\\<^sub>l\\<^sub>s\\<^sub>t B\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 3. \\<And>a A.\n       \\<lbrakk>trms\\<^sub>l\\<^sub>s\\<^sub>t A\n                \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B);\n        trms\\<^sub>l\\<^sub>s\\<^sub>t B\n        \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\\<rbrakk>\n       \\<Longrightarrow> trms\\<^sub>l\\<^sub>s\\<^sub>t B\n                         \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t\n((a # A) @ B)", "case 2"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t []\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 2. trms\\<^sub>l\\<^sub>s\\<^sub>t B\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 3. \\<And>a A.\n       \\<lbrakk>trms\\<^sub>l\\<^sub>s\\<^sub>t A\n                \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B);\n        trms\\<^sub>l\\<^sub>s\\<^sub>t B\n        \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\\<rbrakk>\n       \\<Longrightarrow> trms\\<^sub>l\\<^sub>s\\<^sub>t B\n                         \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t\n((a # A) @ B)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t B\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ((a # A) @ B)", "using Cons *"], ["proof (prove)\nusing this:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t A\n  \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\n  trms\\<^sub>l\\<^sub>s\\<^sub>t B\n  \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (A @ B)\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t B\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ((a # A) @ B)", "by auto"], ["proof (state)\nthis:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t B\n  \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ((a # A) @ B)\n\ngoal (2 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t []\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 2. trms\\<^sub>l\\<^sub>s\\<^sub>t B\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)", "}"], ["proof (state)\nthis:\n  trms\\<^sub>l\\<^sub>s\\<^sub>t B\n  \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ((a # A) @ B)\n\ngoal (2 subgoals):\n 1. trms\\<^sub>l\\<^sub>s\\<^sub>t []\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)\n 2. trms\\<^sub>l\\<^sub>s\\<^sub>t B\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t ([] @ B)", "qed simp_all"], ["", "lemma vars\\<^sub>l\\<^sub>s\\<^sub>t_union: \"vars\\<^sub>l\\<^sub>s\\<^sub>t A = (\\<Union>l. vars_proj\\<^sub>l\\<^sub>s\\<^sub>t l A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t A =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A))", "proof (induction A)"], ["proof (state)\ngoal (2 subgoals):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l []))\n 2. \\<And>a A.\n       vars\\<^sub>l\\<^sub>s\\<^sub>t A =\n       (\\<Union>l.\n           vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)) \\<Longrightarrow>\n       vars\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n       (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "case (Cons a A)"], ["proof (state)\nthis:\n  vars\\<^sub>l\\<^sub>s\\<^sub>t A =\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A))\n\ngoal (2 subgoals):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l []))\n 2. \\<And>a A.\n       vars\\<^sub>l\\<^sub>s\\<^sub>t A =\n       (\\<Union>l.\n           vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)) \\<Longrightarrow>\n       vars\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n       (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "obtain l s where ls: \"a = (l,s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l s. a = (l, s) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  a = (l, s)\n\ngoal (2 subgoals):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l []))\n 2. \\<And>a A.\n       vars\\<^sub>l\\<^sub>s\\<^sub>t A =\n       (\\<Union>l.\n           vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)) \\<Longrightarrow>\n       vars\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n       (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "have \"vars\\<^sub>l\\<^sub>s\\<^sub>t [a] = (\\<Union>l. vars_proj\\<^sub>l\\<^sub>s\\<^sub>t l [a])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "have *: \"vars\\<^sub>l\\<^sub>s\\<^sub>t [a] = vars\\<^sub>s\\<^sub>t\\<^sub>p s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [a] = vars\\<^sub>s\\<^sub>t\\<^sub>p s", "using ls"], ["proof (prove)\nusing this:\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [a] = vars\\<^sub>s\\<^sub>t\\<^sub>p s", "by auto"], ["proof (state)\nthis:\n  vars\\<^sub>l\\<^sub>s\\<^sub>t [a] = vars\\<^sub>s\\<^sub>t\\<^sub>p s\n\ngoal (1 subgoal):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "proof (cases l)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       l = ln x1 \\<Longrightarrow>\n       vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n       (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n 2. l = \\<star> \\<Longrightarrow>\n    vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "case (LabelN n)"], ["proof (state)\nthis:\n  l = ln n\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       l = ln x1 \\<Longrightarrow>\n       vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n       (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n 2. l = \\<star> \\<Longrightarrow>\n    vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "hence \"vars_proj\\<^sub>l\\<^sub>s\\<^sub>t n [a] = vars\\<^sub>s\\<^sub>t\\<^sub>p s\""], ["proof (prove)\nusing this:\n  l = ln n\n\ngoal (1 subgoal):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj n [a]) =\n    vars\\<^sub>s\\<^sub>t\\<^sub>p s", "using ls"], ["proof (prove)\nusing this:\n  l = ln n\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj n [a]) =\n    vars\\<^sub>s\\<^sub>t\\<^sub>p s", "by simp"], ["proof (state)\nthis:\n  vars\\<^sub>l\\<^sub>s\\<^sub>t (proj n [a]) = vars\\<^sub>s\\<^sub>t\\<^sub>p s\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       l = ln x1 \\<Longrightarrow>\n       vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n       (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n 2. l = \\<star> \\<Longrightarrow>\n    vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "moreover"], ["proof (state)\nthis:\n  vars\\<^sub>l\\<^sub>s\\<^sub>t (proj n [a]) = vars\\<^sub>s\\<^sub>t\\<^sub>p s\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       l = ln x1 \\<Longrightarrow>\n       vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n       (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n 2. l = \\<star> \\<Longrightarrow>\n    vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "have \"\\<forall>m. n \\<noteq> m \\<longrightarrow> vars_proj\\<^sub>l\\<^sub>s\\<^sub>t m [a] = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m.\n       n \\<noteq> m \\<longrightarrow>\n       vars\\<^sub>l\\<^sub>s\\<^sub>t (proj m [a]) = {}", "using ls LabelN"], ["proof (prove)\nusing this:\n  a = (l, s)\n  l = ln n\n\ngoal (1 subgoal):\n 1. \\<forall>m.\n       n \\<noteq> m \\<longrightarrow>\n       vars\\<^sub>l\\<^sub>s\\<^sub>t (proj m [a]) = {}", "by auto"], ["proof (state)\nthis:\n  \\<forall>m.\n     n \\<noteq> m \\<longrightarrow>\n     vars\\<^sub>l\\<^sub>s\\<^sub>t (proj m [a]) = {}\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       l = ln x1 \\<Longrightarrow>\n       vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n       (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n 2. l = \\<star> \\<Longrightarrow>\n    vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "ultimately"], ["proof (chain)\npicking this:\n  vars\\<^sub>l\\<^sub>s\\<^sub>t (proj n [a]) = vars\\<^sub>s\\<^sub>t\\<^sub>p s\n  \\<forall>m.\n     n \\<noteq> m \\<longrightarrow>\n     vars\\<^sub>l\\<^sub>s\\<^sub>t (proj m [a]) = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  vars\\<^sub>l\\<^sub>s\\<^sub>t (proj n [a]) = vars\\<^sub>s\\<^sub>t\\<^sub>p s\n  \\<forall>m.\n     n \\<noteq> m \\<longrightarrow>\n     vars\\<^sub>l\\<^sub>s\\<^sub>t (proj m [a]) = {}\n\ngoal (1 subgoal):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "using * ls"], ["proof (prove)\nusing this:\n  vars\\<^sub>l\\<^sub>s\\<^sub>t (proj n [a]) = vars\\<^sub>s\\<^sub>t\\<^sub>p s\n  \\<forall>m.\n     n \\<noteq> m \\<longrightarrow>\n     vars\\<^sub>l\\<^sub>s\\<^sub>t (proj m [a]) = {}\n  vars\\<^sub>l\\<^sub>s\\<^sub>t [a] = vars\\<^sub>s\\<^sub>t\\<^sub>p s\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "by fast"], ["proof (state)\nthis:\n  vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n\ngoal (1 subgoal):\n 1. l = \\<star> \\<Longrightarrow>\n    vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l = \\<star> \\<Longrightarrow>\n    vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "case LabelS"], ["proof (state)\nthis:\n  l = \\<star>\n\ngoal (1 subgoal):\n 1. l = \\<star> \\<Longrightarrow>\n    vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "hence \"\\<forall>l. vars_proj\\<^sub>l\\<^sub>s\\<^sub>t l [a] = vars\\<^sub>s\\<^sub>t\\<^sub>p s\""], ["proof (prove)\nusing this:\n  l = \\<star>\n\ngoal (1 subgoal):\n 1. \\<forall>l.\n       vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]) =\n       vars\\<^sub>s\\<^sub>t\\<^sub>p s", "using ls"], ["proof (prove)\nusing this:\n  l = \\<star>\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. \\<forall>l.\n       vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]) =\n       vars\\<^sub>s\\<^sub>t\\<^sub>p s", "by auto"], ["proof (state)\nthis:\n  \\<forall>l.\n     vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]) =\n     vars\\<^sub>s\\<^sub>t\\<^sub>p s\n\ngoal (1 subgoal):\n 1. l = \\<star> \\<Longrightarrow>\n    vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>l.\n     vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]) =\n     vars\\<^sub>s\\<^sub>t\\<^sub>p s\n\ngoal (1 subgoal):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "using * ls"], ["proof (prove)\nusing this:\n  \\<forall>l.\n     vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]) =\n     vars\\<^sub>s\\<^sub>t\\<^sub>p s\n  vars\\<^sub>l\\<^sub>s\\<^sub>t [a] = vars\\<^sub>s\\<^sub>t\\<^sub>p s\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))", "by fast"], ["proof (state)\nthis:\n  vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n\ngoal (2 subgoals):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l []))\n 2. \\<And>a A.\n       vars\\<^sub>l\\<^sub>s\\<^sub>t A =\n       (\\<Union>l.\n           vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)) \\<Longrightarrow>\n       vars\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n       (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "moreover"], ["proof (state)\nthis:\n  vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n\ngoal (2 subgoals):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l []))\n 2. \\<And>a A.\n       vars\\<^sub>l\\<^sub>s\\<^sub>t A =\n       (\\<Union>l.\n           vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)) \\<Longrightarrow>\n       vars\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n       (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "have \"\\<forall>l. vars_proj\\<^sub>l\\<^sub>s\\<^sub>t l (a#A) = vars_proj\\<^sub>l\\<^sub>s\\<^sub>t l [a] \\<union> vars_proj\\<^sub>l\\<^sub>s\\<^sub>t l A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l.\n       vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)) =\n       vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]) \\<union>\n       vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)", "unfolding unlabel_def proj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l.\n       vars\\<^sub>s\\<^sub>t\n        (map snd\n          (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) (a # A))) =\n       vars\\<^sub>s\\<^sub>t\n        (map snd\n          (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s)\n            [a])) \\<union>\n       vars\\<^sub>s\\<^sub>t\n        (map snd (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) A))", "by auto"], ["proof (state)\nthis:\n  \\<forall>l.\n     vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)) =\n     vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]) \\<union>\n     vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)\n\ngoal (2 subgoals):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l []))\n 2. \\<And>a A.\n       vars\\<^sub>l\\<^sub>s\\<^sub>t A =\n       (\\<Union>l.\n           vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)) \\<Longrightarrow>\n       vars\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n       (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "hence \"(\\<Union>l. vars_proj\\<^sub>l\\<^sub>s\\<^sub>t l (a#A)) = (\\<Union>l. vars_proj\\<^sub>l\\<^sub>s\\<^sub>t l [a]) \\<union> (\\<Union>l. vars_proj\\<^sub>l\\<^sub>s\\<^sub>t l A)\""], ["proof (prove)\nusing this:\n  \\<forall>l.\n     vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)) =\n     vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]) \\<union>\n     vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)\n\ngoal (1 subgoal):\n 1. (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A))) =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a])) \\<union>\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A))", "using strand_vars_split(1)"], ["proof (prove)\nusing this:\n  \\<forall>l.\n     vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)) =\n     vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]) \\<union>\n     vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)\n  vars\\<^sub>s\\<^sub>t (?S @ ?S') =\n  vars\\<^sub>s\\<^sub>t ?S \\<union> vars\\<^sub>s\\<^sub>t ?S'\n\ngoal (1 subgoal):\n 1. (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A))) =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a])) \\<union>\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A))", "by auto"], ["proof (state)\nthis:\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A))) =\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a])) \\<union>\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A))\n\ngoal (2 subgoals):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l []))\n 2. \\<And>a A.\n       vars\\<^sub>l\\<^sub>s\\<^sub>t A =\n       (\\<Union>l.\n           vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A)) \\<Longrightarrow>\n       vars\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n       (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "ultimately"], ["proof (chain)\npicking this:\n  vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A))) =\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a])) \\<union>\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A))", "show ?case"], ["proof (prove)\nusing this:\n  vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A))) =\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a])) \\<union>\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A))\n\ngoal (1 subgoal):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "using Cons.IH ls strand_vars_split(1)"], ["proof (prove)\nusing this:\n  vars\\<^sub>l\\<^sub>s\\<^sub>t [a] =\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a]))\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A))) =\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l [a])) \\<union>\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A))\n  vars\\<^sub>l\\<^sub>s\\<^sub>t A =\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l A))\n  a = (l, s)\n  vars\\<^sub>s\\<^sub>t (?S @ ?S') =\n  vars\\<^sub>s\\<^sub>t ?S \\<union> vars\\<^sub>s\\<^sub>t ?S'\n\ngoal (1 subgoal):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))", "by auto"], ["proof (state)\nthis:\n  vars\\<^sub>l\\<^sub>s\\<^sub>t (a # A) =\n  (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l (a # A)))\n\ngoal (1 subgoal):\n 1. vars\\<^sub>l\\<^sub>s\\<^sub>t [] =\n    (\\<Union>l. vars\\<^sub>l\\<^sub>s\\<^sub>t (proj l []))", "qed simp"], ["", "lemma unlabel_Cons_inv:\n  \"unlabel A = b#B \\<Longrightarrow> \\<exists>A'. (\\<exists>n. A = (ln n, b)#A') \\<or> A = (\\<star>, b)#A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unlabel A = b # B \\<Longrightarrow>\n    \\<exists>A'.\n       (\\<exists>n. A = (ln n, b) # A') \\<or> A = (\\<star>, b) # A'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. unlabel A = b # B \\<Longrightarrow>\n    \\<exists>A'.\n       (\\<exists>n. A = (ln n, b) # A') \\<or> A = (\\<star>, b) # A'", "assume *: \"unlabel A = b#B\""], ["proof (state)\nthis:\n  unlabel A = b # B\n\ngoal (1 subgoal):\n 1. unlabel A = b # B \\<Longrightarrow>\n    \\<exists>A'.\n       (\\<exists>n. A = (ln n, b) # A') \\<or> A = (\\<star>, b) # A'", "then"], ["proof (chain)\npicking this:\n  unlabel A = b # B", "obtain l A' where \"A = (l,b)#A'\""], ["proof (prove)\nusing this:\n  unlabel A = b # B\n\ngoal (1 subgoal):\n 1. (\\<And>l A'. A = (l, b) # A' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding unlabel_def"], ["proof (prove)\nusing this:\n  map snd A = b # B\n\ngoal (1 subgoal):\n 1. (\\<And>l A'. A = (l, b) # A' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  A = (l, b) # A'\n\ngoal (1 subgoal):\n 1. unlabel A = b # B \\<Longrightarrow>\n    \\<exists>A'.\n       (\\<exists>n. A = (ln n, b) # A') \\<or> A = (\\<star>, b) # A'", "thus \"\\<exists>A'. (\\<exists>l. A = (ln l, b)#A') \\<or> A = (\\<star>, b)#A'\""], ["proof (prove)\nusing this:\n  A = (l, b) # A'\n\ngoal (1 subgoal):\n 1. \\<exists>A'.\n       (\\<exists>l. A = (ln l, b) # A') \\<or> A = (\\<star>, b) # A'", "by (metis strand_label.exhaust)"], ["proof (state)\nthis:\n  \\<exists>A'. (\\<exists>l. A = (ln l, b) # A') \\<or> A = (\\<star>, b) # A'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unlabel_snoc_inv:\n  \"unlabel A = B@[b] \\<Longrightarrow> \\<exists>A'. (\\<exists>n. A = A'@[(ln n, b)]) \\<or> A = A'@[(\\<star>, b)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unlabel A = B @ [b] \\<Longrightarrow>\n    \\<exists>A'.\n       (\\<exists>n. A = A' @ [(ln n, b)]) \\<or> A = A' @ [(\\<star>, b)]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. unlabel A = B @ [b] \\<Longrightarrow>\n    \\<exists>A'.\n       (\\<exists>n. A = A' @ [(ln n, b)]) \\<or> A = A' @ [(\\<star>, b)]", "assume *: \"unlabel A = B@[b]\""], ["proof (state)\nthis:\n  unlabel A = B @ [b]\n\ngoal (1 subgoal):\n 1. unlabel A = B @ [b] \\<Longrightarrow>\n    \\<exists>A'.\n       (\\<exists>n. A = A' @ [(ln n, b)]) \\<or> A = A' @ [(\\<star>, b)]", "then"], ["proof (chain)\npicking this:\n  unlabel A = B @ [b]", "obtain A' l where \"A = A'@[(l,b)]\""], ["proof (prove)\nusing this:\n  unlabel A = B @ [b]\n\ngoal (1 subgoal):\n 1. (\\<And>A' l.\n        A = A' @ [(l, b)] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding unlabel_def"], ["proof (prove)\nusing this:\n  map snd A = B @ [b]\n\ngoal (1 subgoal):\n 1. (\\<And>A' l.\n        A = A' @ [(l, b)] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (induct A rule: List.rev_induct) auto"], ["proof (state)\nthis:\n  A = A' @ [(l, b)]\n\ngoal (1 subgoal):\n 1. unlabel A = B @ [b] \\<Longrightarrow>\n    \\<exists>A'.\n       (\\<exists>n. A = A' @ [(ln n, b)]) \\<or> A = A' @ [(\\<star>, b)]", "thus \"\\<exists>A'. (\\<exists>n. A = A'@[(ln n, b)]) \\<or> A = A'@[(\\<star>, b)]\""], ["proof (prove)\nusing this:\n  A = A' @ [(l, b)]\n\ngoal (1 subgoal):\n 1. \\<exists>A'.\n       (\\<exists>n. A = A' @ [(ln n, b)]) \\<or> A = A' @ [(\\<star>, b)]", "by (cases l) auto"], ["proof (state)\nthis:\n  \\<exists>A'.\n     (\\<exists>n. A = A' @ [(ln n, b)]) \\<or> A = A' @ [(\\<star>, b)]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_idem[simp]: \"proj l (proj l A) = proj l A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj l (proj l A) = proj l A", "unfolding proj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s)\n     (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) A) =\n    filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) A", "by auto"], ["", "lemma proj_ik\\<^sub>s\\<^sub>t_is_proj_rcv_set:\n  \"ik\\<^sub>s\\<^sub>t (proj_unl n A) = {t. (ln n, Receive t) \\<in> set A \\<or> (\\<star>, Receive t) \\<in> set A} \""], ["proof (prove)\ngoal (1 subgoal):\n 1. ik\\<^sub>s\\<^sub>t (proj_unl n A) =\n    {t. (ln n, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t) \\<in> set A \\<or>\n        (\\<star>, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t) \\<in> set A}", "using ik\\<^sub>s\\<^sub>t_is_rcv_set"], ["proof (prove)\nusing this:\n  ik\\<^sub>s\\<^sub>t ?A =\n  {t. receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t \\<in> set ?A}\n\ngoal (1 subgoal):\n 1. ik\\<^sub>s\\<^sub>t (proj_unl n A) =\n    {t. (ln n, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t) \\<in> set A \\<or>\n        (\\<star>, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t) \\<in> set A}", "unfolding unlabel_def proj_def"], ["proof (prove)\nusing this:\n  ik\\<^sub>s\\<^sub>t ?A =\n  {t. receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t \\<in> set ?A}\n\ngoal (1 subgoal):\n 1. ik\\<^sub>s\\<^sub>t\n     (map snd (filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) A)) =\n    {t. (ln n, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t) \\<in> set A \\<or>\n        (\\<star>, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t) \\<in> set A}", "by force"], ["", "lemma unlabel_ik\\<^sub>s\\<^sub>t_is_rcv_set:\n  \"ik\\<^sub>s\\<^sub>t (unlabel A) = {t | l t. (l, Receive t) \\<in> set A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ik\\<^sub>s\\<^sub>t (unlabel A) =\n    {uu_.\n     \\<exists>l t.\n        uu_ = t \\<and>\n        (l, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t) \\<in> set A}", "using ik\\<^sub>s\\<^sub>t_is_rcv_set"], ["proof (prove)\nusing this:\n  ik\\<^sub>s\\<^sub>t ?A =\n  {t. receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t \\<in> set ?A}\n\ngoal (1 subgoal):\n 1. ik\\<^sub>s\\<^sub>t (unlabel A) =\n    {uu_.\n     \\<exists>l t.\n        uu_ = t \\<and>\n        (l, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t) \\<in> set A}", "unfolding unlabel_def"], ["proof (prove)\nusing this:\n  ik\\<^sub>s\\<^sub>t ?A =\n  {t. receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t \\<in> set ?A}\n\ngoal (1 subgoal):\n 1. ik\\<^sub>s\\<^sub>t (map snd A) =\n    {uu_.\n     \\<exists>l t.\n        uu_ = t \\<and>\n        (l, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t) \\<in> set A}", "by force"], ["", "lemma proj_ik_union_is_unlabel_ik:\n  \"ik\\<^sub>s\\<^sub>t (unlabel A) = (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ik\\<^sub>s\\<^sub>t (unlabel A) =\n    (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ik\\<^sub>s\\<^sub>t (unlabel A)\n    \\<subseteq> (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))\n 2. (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))\n    \\<subseteq> ik\\<^sub>s\\<^sub>t (unlabel A)", "show \"(\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A)) \\<subseteq> ik\\<^sub>s\\<^sub>t (unlabel A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))\n    \\<subseteq> ik\\<^sub>s\\<^sub>t (unlabel A)", "using unlabel_ik\\<^sub>s\\<^sub>t_is_rcv_set[of A] proj_ik\\<^sub>s\\<^sub>t_is_proj_rcv_set[of _ A]"], ["proof (prove)\nusing this:\n  ik\\<^sub>s\\<^sub>t (unlabel A) =\n  {uu_.\n   \\<exists>l t.\n      uu_ = t \\<and>\n      (l, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t) \\<in> set A}\n  ik\\<^sub>s\\<^sub>t (proj_unl ?n A) =\n  {t. (ln ?n, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t) \\<in> set A \\<or>\n      (\\<star>, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t) \\<in> set A}\n\ngoal (1 subgoal):\n 1. (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))\n    \\<subseteq> ik\\<^sub>s\\<^sub>t (unlabel A)", "by auto"], ["proof (state)\nthis:\n  (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))\n  \\<subseteq> ik\\<^sub>s\\<^sub>t (unlabel A)\n\ngoal (1 subgoal):\n 1. ik\\<^sub>s\\<^sub>t (unlabel A)\n    \\<subseteq> (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))", "show \"ik\\<^sub>s\\<^sub>t (unlabel A) \\<subseteq> (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ik\\<^sub>s\\<^sub>t (unlabel A)\n    \\<subseteq> (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ik\\<^sub>s\\<^sub>t (unlabel A) \\<Longrightarrow>\n       x \\<in> (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ik\\<^sub>s\\<^sub>t (unlabel A) \\<Longrightarrow>\n       x \\<in> (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))", "assume \"t \\<in> ik\\<^sub>s\\<^sub>t (unlabel A)\""], ["proof (state)\nthis:\n  t \\<in> ik\\<^sub>s\\<^sub>t (unlabel A)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ik\\<^sub>s\\<^sub>t (unlabel A) \\<Longrightarrow>\n       x \\<in> (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))", "then"], ["proof (chain)\npicking this:\n  t \\<in> ik\\<^sub>s\\<^sub>t (unlabel A)", "obtain l where \"(l, Receive t) \\<in> set A\""], ["proof (prove)\nusing this:\n  t \\<in> ik\\<^sub>s\\<^sub>t (unlabel A)\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        (l, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t)\n        \\<in> set A \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using ik\\<^sub>s\\<^sub>t_is_rcv_set unlabel_mem_has_label[of _ A]"], ["proof (prove)\nusing this:\n  t \\<in> ik\\<^sub>s\\<^sub>t (unlabel A)\n  ik\\<^sub>s\\<^sub>t ?A =\n  {t. receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t \\<in> set ?A}\n  ?x \\<in> set (unlabel A) \\<Longrightarrow> \\<exists>l. (l, ?x) \\<in> set A\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        (l, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t)\n        \\<in> set A \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  (l, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t) \\<in> set A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ik\\<^sub>s\\<^sub>t (unlabel A) \\<Longrightarrow>\n       x \\<in> (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))", "thus \"t \\<in> (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))\""], ["proof (prove)\nusing this:\n  (l, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t) \\<in> set A\n\ngoal (1 subgoal):\n 1. t \\<in> (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))", "using proj_ik\\<^sub>s\\<^sub>t_is_proj_rcv_set[of _ A]"], ["proof (prove)\nusing this:\n  (l, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t) \\<in> set A\n  ik\\<^sub>s\\<^sub>t (proj_unl ?n A) =\n  {t. (ln ?n, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t) \\<in> set A \\<or>\n      (\\<star>, receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t) \\<in> set A}\n\ngoal (1 subgoal):\n 1. t \\<in> (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))", "by (cases l) auto"], ["proof (state)\nthis:\n  t \\<in> (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ik\\<^sub>s\\<^sub>t (unlabel A)\n  \\<subseteq> (\\<Union>l. ik\\<^sub>s\\<^sub>t (proj_unl l A))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_ik_append[simp]:\n  \"ik\\<^sub>s\\<^sub>t (proj_unl l (A@B)) = ik\\<^sub>s\\<^sub>t (proj_unl l A) \\<union> ik\\<^sub>s\\<^sub>t (proj_unl l B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ik\\<^sub>s\\<^sub>t (proj_unl l (A @ B)) =\n    ik\\<^sub>s\\<^sub>t (proj_unl l A) \\<union>\n    ik\\<^sub>s\\<^sub>t (proj_unl l B)", "using proj_append(2)[of l A B] ik_append"], ["proof (prove)\nusing this:\n  proj_unl l (A @ B) = proj_unl l A @ proj_unl l B\n  ik\\<^sub>s\\<^sub>t (?S @ ?S') =\n  ik\\<^sub>s\\<^sub>t ?S \\<union> ik\\<^sub>s\\<^sub>t ?S'\n\ngoal (1 subgoal):\n 1. ik\\<^sub>s\\<^sub>t (proj_unl l (A @ B)) =\n    ik\\<^sub>s\\<^sub>t (proj_unl l A) \\<union>\n    ik\\<^sub>s\\<^sub>t (proj_unl l B)", "by auto"], ["", "lemma proj_ik_append_subst_all:\n  \"ik\\<^sub>s\\<^sub>t (proj_unl l (A@B)) \\<cdot>\\<^sub>s\\<^sub>e\\<^sub>t I = (ik\\<^sub>s\\<^sub>t (proj_unl l A) \\<cdot>\\<^sub>s\\<^sub>e\\<^sub>t I) \\<union> (ik\\<^sub>s\\<^sub>t (proj_unl l B) \\<cdot>\\<^sub>s\\<^sub>e\\<^sub>t I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ik\\<^sub>s\\<^sub>t (proj_unl l (A @ B)) \\<cdot>\\<^sub>s\\<^sub>e\\<^sub>t\n    I =\n    (ik\\<^sub>s\\<^sub>t (proj_unl l A) \\<cdot>\\<^sub>s\\<^sub>e\\<^sub>t\n     I) \\<union>\n    (ik\\<^sub>s\\<^sub>t (proj_unl l B) \\<cdot>\\<^sub>s\\<^sub>e\\<^sub>t I)", "using proj_ik_append[of l]"], ["proof (prove)\nusing this:\n  ik\\<^sub>s\\<^sub>t (proj_unl l (?A @ ?B)) =\n  ik\\<^sub>s\\<^sub>t (proj_unl l ?A) \\<union>\n  ik\\<^sub>s\\<^sub>t (proj_unl l ?B)\n\ngoal (1 subgoal):\n 1. ik\\<^sub>s\\<^sub>t (proj_unl l (A @ B)) \\<cdot>\\<^sub>s\\<^sub>e\\<^sub>t\n    I =\n    (ik\\<^sub>s\\<^sub>t (proj_unl l A) \\<cdot>\\<^sub>s\\<^sub>e\\<^sub>t\n     I) \\<union>\n    (ik\\<^sub>s\\<^sub>t (proj_unl l B) \\<cdot>\\<^sub>s\\<^sub>e\\<^sub>t I)", "by auto"], ["", "lemma ik_proj_subset[simp]: \"ik\\<^sub>s\\<^sub>t (proj_unl n A) \\<subseteq> trms_proj\\<^sub>l\\<^sub>s\\<^sub>t n A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ik\\<^sub>s\\<^sub>t (proj_unl n A)\n    \\<subseteq> trms\\<^sub>l\\<^sub>s\\<^sub>t (proj n A)", "by auto"], ["", "lemma prefix_proj:\n  \"prefix A B \\<Longrightarrow> prefix (unlabel A) (unlabel B)\"\n  \"prefix A B \\<Longrightarrow> prefix (proj n A) (proj n B)\"\n  \"prefix A B \\<Longrightarrow> prefix (proj_unl n A) (proj_unl n B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (prefix A B \\<Longrightarrow> prefix (unlabel A) (unlabel B)) &&&\n    (prefix A B \\<Longrightarrow> prefix (proj n A) (proj n B)) &&&\n    (prefix A B \\<Longrightarrow> prefix (proj_unl n A) (proj_unl n B))", "unfolding prefix_def unlabel_def proj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>zs. B = A @ zs \\<Longrightarrow>\n     \\<exists>zs. map snd B = map snd A @ zs) &&&\n    (\\<exists>zs. B = A @ zs \\<Longrightarrow>\n     \\<exists>zs.\n        filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) B =\n        filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) A @ zs) &&&\n    (\\<exists>zs. B = A @ zs \\<Longrightarrow>\n     \\<exists>zs.\n        map snd (filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) B) =\n        map snd (filter (\\<lambda>s. is_LabelN n s \\<or> is_LabelS s) A) @\n        zs)", "by auto"], ["", "subsection \\<open>Lemmata: Well-formedness\\<close>"], ["", "lemma wfvarsoccs\\<^sub>s\\<^sub>t_proj_union:\n  \"wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) = (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A))", "proof (induction A)"], ["proof (state)\ngoal (2 subgoals):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel []) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l []))\n 2. \\<And>a A.\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) =\n       (\\<Union>l.\n           wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)) \\<Longrightarrow>\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel (a # A)) =\n       (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a # A)))", "case (Cons a A)"], ["proof (state)\nthis:\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) =\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A))\n\ngoal (2 subgoals):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel []) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l []))\n 2. \\<And>a A.\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) =\n       (\\<Union>l.\n           wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)) \\<Longrightarrow>\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel (a # A)) =\n       (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a # A)))", "obtain l s where ls: \"a = (l,s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l s. a = (l, s) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  a = (l, s)\n\ngoal (2 subgoals):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel []) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l []))\n 2. \\<And>a A.\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) =\n       (\\<Union>l.\n           wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)) \\<Longrightarrow>\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel (a # A)) =\n       (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a # A)))", "have \"wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) = (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))", "have *: \"wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) = wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s", "using ls"], ["proof (prove)\nusing this:\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s", "by auto"], ["proof (state)\nthis:\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n  wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s\n\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))", "proof (cases l)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       l = ln x1 \\<Longrightarrow>\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n       (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))\n 2. l = \\<star> \\<Longrightarrow>\n    wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))", "case (LabelN n)"], ["proof (state)\nthis:\n  l = ln n\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       l = ln x1 \\<Longrightarrow>\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n       (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))\n 2. l = \\<star> \\<Longrightarrow>\n    wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))", "hence \"wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl n [a]) = wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s\""], ["proof (prove)\nusing this:\n  l = ln n\n\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl n [a]) =\n    wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s", "using ls"], ["proof (prove)\nusing this:\n  l = ln n\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl n [a]) =\n    wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s", "by simp"], ["proof (state)\nthis:\n  wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl n [a]) =\n  wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       l = ln x1 \\<Longrightarrow>\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n       (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))\n 2. l = \\<star> \\<Longrightarrow>\n    wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))", "moreover"], ["proof (state)\nthis:\n  wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl n [a]) =\n  wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       l = ln x1 \\<Longrightarrow>\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n       (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))\n 2. l = \\<star> \\<Longrightarrow>\n    wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))", "have \"\\<forall>m. n \\<noteq> m \\<longrightarrow> wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl m [a]) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m.\n       n \\<noteq> m \\<longrightarrow>\n       wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl m [a]) = {}", "using ls LabelN"], ["proof (prove)\nusing this:\n  a = (l, s)\n  l = ln n\n\ngoal (1 subgoal):\n 1. \\<forall>m.\n       n \\<noteq> m \\<longrightarrow>\n       wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl m [a]) = {}", "by auto"], ["proof (state)\nthis:\n  \\<forall>m.\n     n \\<noteq> m \\<longrightarrow>\n     wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl m [a]) = {}\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       l = ln x1 \\<Longrightarrow>\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n       (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))\n 2. l = \\<star> \\<Longrightarrow>\n    wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))", "ultimately"], ["proof (chain)\npicking this:\n  wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl n [a]) =\n  wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s\n  \\<forall>m.\n     n \\<noteq> m \\<longrightarrow>\n     wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl m [a]) = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl n [a]) =\n  wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s\n  \\<forall>m.\n     n \\<noteq> m \\<longrightarrow>\n     wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl m [a]) = {}\n\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))", "using * ls"], ["proof (prove)\nusing this:\n  wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl n [a]) =\n  wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s\n  \\<forall>m.\n     n \\<noteq> m \\<longrightarrow>\n     wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl m [a]) = {}\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n  wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))", "by fast"], ["proof (state)\nthis:\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))\n\ngoal (1 subgoal):\n 1. l = \\<star> \\<Longrightarrow>\n    wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l = \\<star> \\<Longrightarrow>\n    wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))", "case LabelS"], ["proof (state)\nthis:\n  l = \\<star>\n\ngoal (1 subgoal):\n 1. l = \\<star> \\<Longrightarrow>\n    wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))", "hence \"\\<forall>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]) = wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s\""], ["proof (prove)\nusing this:\n  l = \\<star>\n\ngoal (1 subgoal):\n 1. \\<forall>l.\n       wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]) =\n       wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s", "using ls"], ["proof (prove)\nusing this:\n  l = \\<star>\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. \\<forall>l.\n       wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]) =\n       wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s", "by auto"], ["proof (state)\nthis:\n  \\<forall>l.\n     wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]) =\n     wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s\n\ngoal (1 subgoal):\n 1. l = \\<star> \\<Longrightarrow>\n    wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>l.\n     wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]) =\n     wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s\n\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))", "using * ls"], ["proof (prove)\nusing this:\n  \\<forall>l.\n     wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]) =\n     wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n  wfvarsoccs\\<^sub>s\\<^sub>t\\<^sub>p s\n  a = (l, s)\n\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))", "by fast"], ["proof (state)\nthis:\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))\n\ngoal (2 subgoals):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel []) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l []))\n 2. \\<And>a A.\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) =\n       (\\<Union>l.\n           wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)) \\<Longrightarrow>\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel (a # A)) =\n       (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a # A)))", "moreover"], ["proof (state)\nthis:\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))\n\ngoal (2 subgoals):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel []) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l []))\n 2. \\<And>a A.\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) =\n       (\\<Union>l.\n           wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)) \\<Longrightarrow>\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel (a # A)) =\n       (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a # A)))", "have\n      \"wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a#A)) =\n       wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]) \\<union> wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)\"\n    for l"], ["proof (prove)\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a # A)) =\n    wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]) \\<union>\n    wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)", "unfolding unlabel_def proj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t\n     (map snd\n       (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) (a # A))) =\n    wfvarsoccs\\<^sub>s\\<^sub>t\n     (map snd\n       (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) [a])) \\<union>\n    wfvarsoccs\\<^sub>s\\<^sub>t\n     (map snd (filter (\\<lambda>s. is_LabelN l s \\<or> is_LabelS s) A))", "by auto"], ["proof (state)\nthis:\n  wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl ?l (a # A)) =\n  wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl ?l [a]) \\<union>\n  wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl ?l A)\n\ngoal (2 subgoals):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel []) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l []))\n 2. \\<And>a A.\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) =\n       (\\<Union>l.\n           wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)) \\<Longrightarrow>\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel (a # A)) =\n       (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a # A)))", "hence \"(\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a#A))) =\n         (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a])) \\<union> (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A))\""], ["proof (prove)\nusing this:\n  wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl ?l (a # A)) =\n  wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl ?l [a]) \\<union>\n  wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl ?l A)\n\ngoal (1 subgoal):\n 1. (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a # A))) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a])) \\<union>\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A))", "using strand_vars_split(1)"], ["proof (prove)\nusing this:\n  wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl ?l (a # A)) =\n  wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl ?l [a]) \\<union>\n  wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl ?l A)\n  vars\\<^sub>s\\<^sub>t (?S @ ?S') =\n  vars\\<^sub>s\\<^sub>t ?S \\<union> vars\\<^sub>s\\<^sub>t ?S'\n\ngoal (1 subgoal):\n 1. (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a # A))) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a])) \\<union>\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A))", "by auto"], ["proof (state)\nthis:\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a # A))) =\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a])) \\<union>\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A))\n\ngoal (2 subgoals):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel []) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l []))\n 2. \\<And>a A.\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) =\n       (\\<Union>l.\n           wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)) \\<Longrightarrow>\n       wfvarsoccs\\<^sub>s\\<^sub>t (unlabel (a # A)) =\n       (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a # A)))", "ultimately"], ["proof (chain)\npicking this:\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a # A))) =\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a])) \\<union>\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A))", "show ?case"], ["proof (prove)\nusing this:\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a # A))) =\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a])) \\<union>\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A))\n\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel (a # A)) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a # A)))", "using Cons.IH ls strand_vars_split(1)"], ["proof (prove)\nusing this:\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel [a]) =\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a]))\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a # A))) =\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l [a])) \\<union>\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A))\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) =\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A))\n  a = (l, s)\n  vars\\<^sub>s\\<^sub>t (?S @ ?S') =\n  vars\\<^sub>s\\<^sub>t ?S \\<union> vars\\<^sub>s\\<^sub>t ?S'\n\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel (a # A)) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a # A)))", "by auto"], ["proof (state)\nthis:\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel (a # A)) =\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l (a # A)))\n\ngoal (1 subgoal):\n 1. wfvarsoccs\\<^sub>s\\<^sub>t (unlabel []) =\n    (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l []))", "qed simp"], ["", "lemma wf_if_wf_proj:\n  assumes \"\\<forall>l. wf\\<^sub>s\\<^sub>t V (proj_unl l A)\"\n  shows \"wf\\<^sub>s\\<^sub>t V (unlabel A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf\\<^sub>l\\<^sub>s\\<^sub>t V A", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l A)\n\ngoal (1 subgoal):\n 1. wf\\<^sub>l\\<^sub>s\\<^sub>t V A", "proof (induction A arbitrary: V rule: List.rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>V.\n       \\<forall>l.\n          wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l []) \\<Longrightarrow>\n       wf\\<^sub>l\\<^sub>s\\<^sub>t V []\n 2. \\<And>x xs V.\n       \\<lbrakk>\\<And>V.\n                   \\<forall>l.\n                      wf\\<^sub>l\\<^sub>s\\<^sub>t V\n                       (proj l xs) \\<Longrightarrow>\n                   wf\\<^sub>l\\<^sub>s\\<^sub>t V xs;\n        \\<forall>l.\n           wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (xs @ [x]))\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (xs @ [x])", "case (snoc a A)"], ["proof (state)\nthis:\n  \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t ?V (proj l A) \\<Longrightarrow>\n  wf\\<^sub>l\\<^sub>s\\<^sub>t ?V A\n  \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]))\n\ngoal (2 subgoals):\n 1. \\<And>V.\n       \\<forall>l.\n          wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l []) \\<Longrightarrow>\n       wf\\<^sub>l\\<^sub>s\\<^sub>t V []\n 2. \\<And>x xs V.\n       \\<lbrakk>\\<And>V.\n                   \\<forall>l.\n                      wf\\<^sub>l\\<^sub>s\\<^sub>t V\n                       (proj l xs) \\<Longrightarrow>\n                   wf\\<^sub>l\\<^sub>s\\<^sub>t V xs;\n        \\<forall>l.\n           wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (xs @ [x]))\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (xs @ [x])", "hence IH: \"wf\\<^sub>s\\<^sub>t V (unlabel A)\""], ["proof (prove)\nusing this:\n  \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t ?V (proj l A) \\<Longrightarrow>\n  wf\\<^sub>l\\<^sub>s\\<^sub>t ?V A\n  \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]))\n\ngoal (1 subgoal):\n 1. wf\\<^sub>l\\<^sub>s\\<^sub>t V A", "using proj_append(2)[of _ A]"], ["proof (prove)\nusing this:\n  \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t ?V (proj l A) \\<Longrightarrow>\n  wf\\<^sub>l\\<^sub>s\\<^sub>t ?V A\n  \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]))\n  proj_unl ?l (A @ ?B) = proj_unl ?l A @ proj_unl ?l ?B\n\ngoal (1 subgoal):\n 1. wf\\<^sub>l\\<^sub>s\\<^sub>t V A", "by auto"], ["proof (state)\nthis:\n  wf\\<^sub>l\\<^sub>s\\<^sub>t V A\n\ngoal (2 subgoals):\n 1. \\<And>V.\n       \\<forall>l.\n          wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l []) \\<Longrightarrow>\n       wf\\<^sub>l\\<^sub>s\\<^sub>t V []\n 2. \\<And>x xs V.\n       \\<lbrakk>\\<And>V.\n                   \\<forall>l.\n                      wf\\<^sub>l\\<^sub>s\\<^sub>t V\n                       (proj l xs) \\<Longrightarrow>\n                   wf\\<^sub>l\\<^sub>s\\<^sub>t V xs;\n        \\<forall>l.\n           wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (xs @ [x]))\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (xs @ [x])", "obtain b l where b: \"a = (ln l, b) \\<or> a = (\\<star>, b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l b.\n        a = (ln l, b) \\<or> a = (\\<star>, b) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases a, metis strand_label.exhaust)"], ["proof (state)\nthis:\n  a = (ln l, b) \\<or> a = (\\<star>, b)\n\ngoal (2 subgoals):\n 1. \\<And>V.\n       \\<forall>l.\n          wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l []) \\<Longrightarrow>\n       wf\\<^sub>l\\<^sub>s\\<^sub>t V []\n 2. \\<And>x xs V.\n       \\<lbrakk>\\<And>V.\n                   \\<forall>l.\n                      wf\\<^sub>l\\<^sub>s\\<^sub>t V\n                       (proj l xs) \\<Longrightarrow>\n                   wf\\<^sub>l\\<^sub>s\\<^sub>t V xs;\n        \\<forall>l.\n           wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (xs @ [x]))\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (xs @ [x])", "hence *: \"wf\\<^sub>s\\<^sub>t V (proj_unl l A@[b])\""], ["proof (prove)\nusing this:\n  a = (ln l, b) \\<or> a = (\\<star>, b)\n\ngoal (1 subgoal):\n 1. wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b])", "by (metis snoc.prems proj_append(2) singleton_lst_proj(1) proj_unl_cons(1,3))"], ["proof (state)\nthis:\n  wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b])\n\ngoal (2 subgoals):\n 1. \\<And>V.\n       \\<forall>l.\n          wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l []) \\<Longrightarrow>\n       wf\\<^sub>l\\<^sub>s\\<^sub>t V []\n 2. \\<And>x xs V.\n       \\<lbrakk>\\<And>V.\n                   \\<forall>l.\n                      wf\\<^sub>l\\<^sub>s\\<^sub>t V\n                       (proj l xs) \\<Longrightarrow>\n                   wf\\<^sub>l\\<^sub>s\\<^sub>t V xs;\n        \\<forall>l.\n           wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (xs @ [x]))\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (xs @ [x])", "thus ?case"], ["proof (prove)\nusing this:\n  wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b])\n\ngoal (1 subgoal):\n 1. wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "using IH b snoc.prems proj_append(2)[of l A \"[a]\"] unlabel_append[of A \"[a]\"]"], ["proof (prove)\nusing this:\n  wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b])\n  wf\\<^sub>l\\<^sub>s\\<^sub>t V A\n  a = (ln l, b) \\<or> a = (\\<star>, b)\n  \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]))\n  proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a]\n  unlabel (A @ [a]) = unlabel A @ unlabel [a]\n\ngoal (1 subgoal):\n 1. wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "proof (cases b)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = send\\<langle>x1\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 2. \\<And>x2.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = receive\\<langle>x2\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 3. \\<And>x31 x32 x33.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = \\<langle>x31: x32 \\<doteq> x33\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 4. \\<And>x41 x42.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b =\n        \\<forall>x41\\<langle>\\<or>\\<noteq>: x42\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "case (Receive t)"], ["proof (state)\nthis:\n  b = receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = send\\<langle>x1\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 2. \\<And>x2.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = receive\\<langle>x2\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 3. \\<And>x31 x32 x33.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = \\<langle>x31: x32 \\<doteq> x33\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 4. \\<And>x41 x42.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b =\n        \\<forall>x41\\<langle>\\<or>\\<noteq>: x42\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "have \"fv t \\<subseteq> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv t \\<subseteq> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> fv t \\<Longrightarrow>\n       x \\<in> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> fv t \\<Longrightarrow>\n       x \\<in> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V", "assume \"x \\<in> fv t\""], ["proof (state)\nthis:\n  x \\<in> fv t\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> fv t \\<Longrightarrow>\n       x \\<in> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V", "hence \"x \\<in> V \\<union> wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)\""], ["proof (prove)\nusing this:\n  x \\<in> fv t\n\ngoal (1 subgoal):\n 1. x \\<in> V \\<union> wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)", "using wf_append_exec[OF *] b Receive"], ["proof (prove)\nusing this:\n  x \\<in> fv t\n  wf\\<^sub>s\\<^sub>t (V \\<union> wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A))\n   [b]\n  a = (ln l, b) \\<or> a = (\\<star>, b)\n  b = receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t\n\ngoal (1 subgoal):\n 1. x \\<in> V \\<union> wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)", "by auto"], ["proof (state)\nthis:\n  x \\<in> V \\<union> wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> fv t \\<Longrightarrow>\n       x \\<in> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V", "thus \"x \\<in> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V\""], ["proof (prove)\nusing this:\n  x \\<in> V \\<union> wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)\n\ngoal (1 subgoal):\n 1. x \\<in> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V", "using wfvarsoccs\\<^sub>s\\<^sub>t_proj_union[of A]"], ["proof (prove)\nusing this:\n  x \\<in> V \\<union> wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) =\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A))\n\ngoal (1 subgoal):\n 1. x \\<in> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V", "by auto"], ["proof (state)\nthis:\n  x \\<in> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fv t \\<subseteq> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = send\\<langle>x1\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 2. \\<And>x2.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = receive\\<langle>x2\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 3. \\<And>x31 x32 x33.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = \\<langle>x31: x32 \\<doteq> x33\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 4. \\<And>x41 x42.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b =\n        \\<forall>x41\\<langle>\\<or>\\<noteq>: x42\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "hence \"fv t \\<subseteq> wfrestrictedvars\\<^sub>s\\<^sub>t (unlabel A) \\<union> V\""], ["proof (prove)\nusing this:\n  fv t \\<subseteq> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V\n\ngoal (1 subgoal):\n 1. fv t \\<subseteq> wfrestrictedvars\\<^sub>l\\<^sub>s\\<^sub>t A \\<union> V", "using vars_snd_rcv_strand_subset2(4)[of \"unlabel A\"]"], ["proof (prove)\nusing this:\n  fv t \\<subseteq> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A)\n  \\<subseteq> wfrestrictedvars\\<^sub>l\\<^sub>s\\<^sub>t A\n\ngoal (1 subgoal):\n 1. fv t \\<subseteq> wfrestrictedvars\\<^sub>l\\<^sub>s\\<^sub>t A \\<union> V", "by blast"], ["proof (state)\nthis:\n  fv t \\<subseteq> wfrestrictedvars\\<^sub>l\\<^sub>s\\<^sub>t A \\<union> V\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = send\\<langle>x1\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 2. \\<And>x2.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = receive\\<langle>x2\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 3. \\<And>x31 x32 x33.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = \\<langle>x31: x32 \\<doteq> x33\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 4. \\<And>x41 x42.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b =\n        \\<forall>x41\\<langle>\\<or>\\<noteq>: x42\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "hence \"wf\\<^sub>s\\<^sub>t V (unlabel A@[Receive t])\""], ["proof (prove)\nusing this:\n  fv t \\<subseteq> wfrestrictedvars\\<^sub>l\\<^sub>s\\<^sub>t A \\<union> V\n\ngoal (1 subgoal):\n 1. wf\\<^sub>s\\<^sub>t V\n     (unlabel A @ [receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t])", "by (rule wf_rcv_append'''[OF IH])"], ["proof (state)\nthis:\n  wf\\<^sub>s\\<^sub>t V\n   (unlabel A @ [receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t])\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = send\\<langle>x1\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 2. \\<And>x2.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = receive\\<langle>x2\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 3. \\<And>x31 x32 x33.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = \\<langle>x31: x32 \\<doteq> x33\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 4. \\<And>x41 x42.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b =\n        \\<forall>x41\\<langle>\\<or>\\<noteq>: x42\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "thus ?thesis"], ["proof (prove)\nusing this:\n  wf\\<^sub>s\\<^sub>t V\n   (unlabel A @ [receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t])\n\ngoal (1 subgoal):\n 1. wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "using b Receive unlabel_append[of A \"[a]\"]"], ["proof (prove)\nusing this:\n  wf\\<^sub>s\\<^sub>t V\n   (unlabel A @ [receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t])\n  a = (ln l, b) \\<or> a = (\\<star>, b)\n  b = receive\\<langle>t\\<rangle>\\<^sub>s\\<^sub>t\n  unlabel (A @ [a]) = unlabel A @ unlabel [a]\n\ngoal (1 subgoal):\n 1. wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "by auto"], ["proof (state)\nthis:\n  wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = send\\<langle>x1\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 2. \\<And>x31 x32 x33.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = \\<langle>x31: x32 \\<doteq> x33\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 3. \\<And>x41 x42.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b =\n        \\<forall>x41\\<langle>\\<or>\\<noteq>: x42\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = send\\<langle>x1\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 2. \\<And>x31 x32 x33.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = \\<langle>x31: x32 \\<doteq> x33\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 3. \\<And>x41 x42.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b =\n        \\<forall>x41\\<langle>\\<or>\\<noteq>: x42\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "case (Equality ac s t)"], ["proof (state)\nthis:\n  b = \\<langle>ac: s \\<doteq> t\\<rangle>\\<^sub>s\\<^sub>t\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = send\\<langle>x1\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 2. \\<And>x31 x32 x33.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = \\<langle>x31: x32 \\<doteq> x33\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 3. \\<And>x41 x42.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b =\n        \\<forall>x41\\<langle>\\<or>\\<noteq>: x42\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "have \"fv t \\<subseteq> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V\" when \"ac = Assign\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv t \\<subseteq> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> fv t \\<Longrightarrow>\n       x \\<in> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> fv t \\<Longrightarrow>\n       x \\<in> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V", "assume \"x \\<in> fv t\""], ["proof (state)\nthis:\n  x \\<in> fv t\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> fv t \\<Longrightarrow>\n       x \\<in> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V", "hence \"x \\<in> V \\<union> wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)\""], ["proof (prove)\nusing this:\n  x \\<in> fv t\n\ngoal (1 subgoal):\n 1. x \\<in> V \\<union> wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)", "using wf_append_exec[OF *] b Equality that"], ["proof (prove)\nusing this:\n  x \\<in> fv t\n  wf\\<^sub>s\\<^sub>t (V \\<union> wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A))\n   [b]\n  a = (ln l, b) \\<or> a = (\\<star>, b)\n  b = \\<langle>ac: s \\<doteq> t\\<rangle>\\<^sub>s\\<^sub>t\n  ac = assign\n\ngoal (1 subgoal):\n 1. x \\<in> V \\<union> wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)", "by auto"], ["proof (state)\nthis:\n  x \\<in> V \\<union> wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> fv t \\<Longrightarrow>\n       x \\<in> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V", "thus \"x \\<in> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V\""], ["proof (prove)\nusing this:\n  x \\<in> V \\<union> wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)\n\ngoal (1 subgoal):\n 1. x \\<in> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V", "using wfvarsoccs\\<^sub>s\\<^sub>t_proj_union[of A]"], ["proof (prove)\nusing this:\n  x \\<in> V \\<union> wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A)\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) =\n  (\\<Union>l. wfvarsoccs\\<^sub>s\\<^sub>t (proj_unl l A))\n\ngoal (1 subgoal):\n 1. x \\<in> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V", "by auto"], ["proof (state)\nthis:\n  x \\<in> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ac = assign \\<Longrightarrow>\n  fv t \\<subseteq> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = send\\<langle>x1\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 2. \\<And>x31 x32 x33.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = \\<langle>x31: x32 \\<doteq> x33\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 3. \\<And>x41 x42.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b =\n        \\<forall>x41\\<langle>\\<or>\\<noteq>: x42\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "hence \"fv t \\<subseteq> wfrestrictedvars\\<^sub>l\\<^sub>s\\<^sub>t A \\<union> V\" when \"ac = Assign\""], ["proof (prove)\nusing this:\n  ac = assign \\<Longrightarrow>\n  fv t \\<subseteq> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V\n\ngoal (1 subgoal):\n 1. fv t \\<subseteq> wfrestrictedvars\\<^sub>l\\<^sub>s\\<^sub>t A \\<union> V", "using vars_snd_rcv_strand_subset2(4)[of \"unlabel A\"] that"], ["proof (prove)\nusing this:\n  ac = assign \\<Longrightarrow>\n  fv t \\<subseteq> wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A) \\<union> V\n  wfvarsoccs\\<^sub>s\\<^sub>t (unlabel A)\n  \\<subseteq> wfrestrictedvars\\<^sub>l\\<^sub>s\\<^sub>t A\n  ac = assign\n\ngoal (1 subgoal):\n 1. fv t \\<subseteq> wfrestrictedvars\\<^sub>l\\<^sub>s\\<^sub>t A \\<union> V", "by blast"], ["proof (state)\nthis:\n  ac = assign \\<Longrightarrow>\n  fv t \\<subseteq> wfrestrictedvars\\<^sub>l\\<^sub>s\\<^sub>t A \\<union> V\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = send\\<langle>x1\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 2. \\<And>x31 x32 x33.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = \\<langle>x31: x32 \\<doteq> x33\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 3. \\<And>x41 x42.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b =\n        \\<forall>x41\\<langle>\\<or>\\<noteq>: x42\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "hence \"wf\\<^sub>s\\<^sub>t V (unlabel A@[Equality ac s t])\""], ["proof (prove)\nusing this:\n  ac = assign \\<Longrightarrow>\n  fv t \\<subseteq> wfrestrictedvars\\<^sub>l\\<^sub>s\\<^sub>t A \\<union> V\n\ngoal (1 subgoal):\n 1. wf\\<^sub>s\\<^sub>t V\n     (unlabel A @ [\\<langle>ac: s \\<doteq> t\\<rangle>\\<^sub>s\\<^sub>t])", "by (cases ac) (metis wf_eq_append'''[OF IH], metis wf_eq_check_append''[OF IH])"], ["proof (state)\nthis:\n  wf\\<^sub>s\\<^sub>t V\n   (unlabel A @ [\\<langle>ac: s \\<doteq> t\\<rangle>\\<^sub>s\\<^sub>t])\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = send\\<langle>x1\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 2. \\<And>x31 x32 x33.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = \\<langle>x31: x32 \\<doteq> x33\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 3. \\<And>x41 x42.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b =\n        \\<forall>x41\\<langle>\\<or>\\<noteq>: x42\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "thus ?thesis"], ["proof (prove)\nusing this:\n  wf\\<^sub>s\\<^sub>t V\n   (unlabel A @ [\\<langle>ac: s \\<doteq> t\\<rangle>\\<^sub>s\\<^sub>t])\n\ngoal (1 subgoal):\n 1. wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "using b Equality unlabel_append[of A \"[a]\"]"], ["proof (prove)\nusing this:\n  wf\\<^sub>s\\<^sub>t V\n   (unlabel A @ [\\<langle>ac: s \\<doteq> t\\<rangle>\\<^sub>s\\<^sub>t])\n  a = (ln l, b) \\<or> a = (\\<star>, b)\n  b = \\<langle>ac: s \\<doteq> t\\<rangle>\\<^sub>s\\<^sub>t\n  unlabel (A @ [a]) = unlabel A @ unlabel [a]\n\ngoal (1 subgoal):\n 1. wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "by auto"], ["proof (state)\nthis:\n  wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b = send\\<langle>x1\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n 2. \\<And>x41 x42.\n       \\<lbrakk>wf\\<^sub>s\\<^sub>t V (proj_unl l A @ [b]);\n        wf\\<^sub>l\\<^sub>s\\<^sub>t V A;\n        a = (ln l, b) \\<or> a = (\\<star>, b);\n        \\<forall>l. wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l (A @ [a]));\n        proj_unl l (A @ [a]) = proj_unl l A @ proj_unl l [a];\n        unlabel (A @ [a]) = unlabel A @ unlabel [a];\n        b =\n        \\<forall>x41\\<langle>\\<or>\\<noteq>: x42\\<rangle>\\<^sub>s\\<^sub>t\\<rbrakk>\n       \\<Longrightarrow> wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])", "qed auto"], ["proof (state)\nthis:\n  wf\\<^sub>l\\<^sub>s\\<^sub>t V (A @ [a])\n\ngoal (1 subgoal):\n 1. \\<And>V.\n       \\<forall>l.\n          wf\\<^sub>l\\<^sub>s\\<^sub>t V (proj l []) \\<Longrightarrow>\n       wf\\<^sub>l\\<^sub>s\\<^sub>t V []", "qed simp"], ["", "end"]]}