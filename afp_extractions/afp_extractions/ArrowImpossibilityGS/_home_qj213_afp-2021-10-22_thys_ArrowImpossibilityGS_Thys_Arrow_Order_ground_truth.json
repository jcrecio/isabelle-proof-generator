{"file_name": "/home/qj213/afp-2021-10-22/thys/ArrowImpossibilityGS/Thys/Arrow_Order.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/ArrowImpossibilityGS", "problem_names": ["lemma third_alt: \"a \\<noteq> b \\<Longrightarrow> \\<exists>c::alt. distinct[a,b,c]\"", "lemma alt2: \"\\<exists>b::alt. b \\<noteq> a\"", "lemmas slo_defs = Lin_def strict_linear_order_on_def total_on_def irrefl_def", "lemma notin_Lin_iff: \"L : Lin \\<Longrightarrow> x\\<noteq>y \\<Longrightarrow> (x,y) \\<notin> L \\<longleftrightarrow> (y,x) : L\"", "lemma converse_in_Lin[simp]: \"L\\<inverse> : Lin \\<longleftrightarrow> L : Lin\"", "lemma Lin_irrefl: \"L:Lin \\<Longrightarrow> (a,b):L \\<Longrightarrow> (b,a):L \\<Longrightarrow> False\"", "lemma in_mktop: \"(x,y) \\<in> mktop L z \\<longleftrightarrow> x\\<noteq>z \\<and> (if y=z then x\\<noteq>y else (x,y) \\<in> L)\"", "lemma in_mkbot: \"(x,y) \\<in> mkbot L z \\<longleftrightarrow> y\\<noteq>z \\<and> (if x=z then x\\<noteq>y else (x,y) \\<in> L)\"", "lemma in_above: \"a\\<noteq>b \\<Longrightarrow> L:Lin \\<Longrightarrow>\n  (x,y) : above L a b \\<longleftrightarrow> x\\<noteq>y \\<and>\n  (if x=b then (a,y) : L else\n   if y=b then x=a | (x,a) : L else (x,y) : L)\"", "lemma in_below: \"a\\<noteq>b \\<Longrightarrow> L:Lin \\<Longrightarrow>\n  (x,y) : below L a b \\<longleftrightarrow> x\\<noteq>y \\<and>\n  (if y=a then (x,b) : L else\n   if x=a then y=b | (b,y) : L else (x,y) : L)\"", "lemma mktop_Lin: \"L : Lin \\<Longrightarrow> mktop L x : Lin\"", "lemma mkbot_Lin: \"L : Lin \\<Longrightarrow> mkbot L x : Lin\"", "lemma below_Lin: \"x\\<noteq>y \\<Longrightarrow> L : Lin \\<Longrightarrow> below L x y : Lin\"", "lemma above_Lin: \"x\\<noteq>y \\<Longrightarrow> L : Lin \\<Longrightarrow> above L x y : Lin\"", "lemma dictatorI: \"F : SWF \\<Longrightarrow>\n  \\<forall>P\\<in>Prof. \\<forall>a b. a \\<noteq> b \\<longrightarrow> (a,b) : P i \\<longrightarrow> (a,b) : F P \\<Longrightarrow> dictator F i\"", "lemma const_Lin_Prof: \"L:Lin \\<Longrightarrow> (%p. L) : Prof\"", "lemma complete_Lin: assumes \"a\\<noteq>b\" shows \"\\<exists>L\\<in>Lin. (a,b) : L\"", "theorem Arrow: assumes \"F : SWF\" and u: \"unanimity F\" and \"IIA F\"\nshows \"\\<exists>i. dictator F i\""], "translations": [["", "lemma third_alt: \"a \\<noteq> b \\<Longrightarrow> \\<exists>c::alt. distinct[a,b,c]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> \\<exists>c. distinct [a, b, c]", "using alt3"], ["proof (prove)\nusing this:\n  \\<exists>a b c. distinct [a, b, c]\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> \\<exists>c. distinct [a, b, c]", "by simp metis"], ["", "lemma alt2: \"\\<exists>b::alt. b \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b. b \\<noteq> a", "using alt3"], ["proof (prove)\nusing this:\n  \\<exists>a b c. distinct [a, b, c]\n\ngoal (1 subgoal):\n 1. \\<exists>b. b \\<noteq> a", "by simp metis"], ["", "type_synonym pref = \"(alt * alt)set\""], ["", "definition \"Lin == {L::pref. strict_linear_order L}\""], ["", "lemmas slo_defs = Lin_def strict_linear_order_on_def total_on_def irrefl_def"], ["", "lemma notin_Lin_iff: \"L : Lin \\<Longrightarrow> x\\<noteq>y \\<Longrightarrow> (x,y) \\<notin> L \\<longleftrightarrow> (y,x) : L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>L \\<in> Lin; x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((x, y) \\<notin> L) = ((y, x) \\<in> L)", "apply(auto simp add: slo_defs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y; trans L; \\<forall>a. (a, a) \\<notin> L;\n     \\<forall>x y.\n        x \\<noteq> y \\<longrightarrow> (x, y) \\<in> L \\<or> (y, x) \\<in> L;\n     (y, x) \\<in> L; (x, y) \\<in> L\\<rbrakk>\n    \\<Longrightarrow> False", "apply(metis trans_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma converse_in_Lin[simp]: \"L\\<inverse> : Lin \\<longleftrightarrow> L : Lin\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (L\\<inverse> \\<in> Lin) = (L \\<in> Lin)", "apply (simp add: slo_defs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (trans L \\<and>\n     (\\<forall>a. (a, a) \\<notin> L) \\<and>\n     (\\<forall>x y.\n         x \\<noteq> y \\<longrightarrow>\n         (y, x) \\<in> L \\<or> (x, y) \\<in> L)) =\n    (trans L \\<and>\n     (\\<forall>a. (a, a) \\<notin> L) \\<and>\n     (\\<forall>x y.\n         x \\<noteq> y \\<longrightarrow>\n         (x, y) \\<in> L \\<or> (y, x) \\<in> L))", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Lin_irrefl: \"L:Lin \\<Longrightarrow> (a,b):L \\<Longrightarrow> (b,a):L \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>L \\<in> Lin; (a, b) \\<in> L; (b, a) \\<in> L\\<rbrakk>\n    \\<Longrightarrow> False", "by(simp add:slo_defs)(metis trans_def)"], ["", "corollary linear_alt: \"\\<exists>L::pref. L : Lin\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>L. L \\<in> Lin", "using well_order_on[where 'a = \"alt\", of UNIV]"], ["proof (prove)\nusing this:\n  \\<exists>r. well_order r\n\ngoal (1 subgoal):\n 1. \\<exists>L. L \\<in> Lin", "apply (auto simp:well_order_on_def Lin_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>linear_order r; wf (r - Id)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>L. strict_linear_order L", "apply (metis strict_linear_order_on_diff_Id)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "abbreviation\n rem :: \"pref \\<Rightarrow> alt \\<Rightarrow> pref\" where\n\"rem L a \\<equiv> {(x,y). (x,y) \\<in> L \\<and> x\\<noteq>a \\<and> y\\<noteq>a}\""], ["", "definition\n mktop :: \"pref \\<Rightarrow> alt \\<Rightarrow> pref\" where\n\"mktop L b \\<equiv> rem L b \\<union> {(x,b)|x. x\\<noteq>b}\""], ["", "definition\n mkbot :: \"pref \\<Rightarrow> alt \\<Rightarrow> pref\" where\n\"mkbot L b \\<equiv> rem L b \\<union> {(b,y)|y. y\\<noteq>b}\""], ["", "definition\n below :: \"pref \\<Rightarrow> alt \\<Rightarrow> alt \\<Rightarrow> pref\" where\n\"below L a b \\<equiv> rem L a \\<union>\n  {(a,b)} \\<union> {(x,a)|x. (x,b) : L \\<and> x\\<noteq>a} \\<union> {(a,y)|y. (b,y) : L \\<and> y\\<noteq>a}\""], ["", "definition\n above :: \"pref \\<Rightarrow> alt \\<Rightarrow> alt \\<Rightarrow> pref\" where\n\"above L a b \\<equiv> rem L b \\<union>\n  {(a,b)} \\<union> {(x,b)|x. (x,a) : L \\<and> x\\<noteq>b} \\<union> {(b,y)|y. (a,y) : L \\<and> y\\<noteq>b}\""], ["", "lemma in_mktop: \"(x,y) \\<in> mktop L z \\<longleftrightarrow> x\\<noteq>z \\<and> (if y=z then x\\<noteq>y else (x,y) \\<in> L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> mktop L z) =\n    (x \\<noteq> z \\<and> (if y = z then x \\<noteq> y else (x, y) \\<in> L))", "by(auto simp:mktop_def)"], ["", "lemma in_mkbot: \"(x,y) \\<in> mkbot L z \\<longleftrightarrow> y\\<noteq>z \\<and> (if x=z then x\\<noteq>y else (x,y) \\<in> L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> mkbot L z) =\n    (y \\<noteq> z \\<and> (if x = z then x \\<noteq> y else (x, y) \\<in> L))", "by(auto simp:mkbot_def)"], ["", "lemma in_above: \"a\\<noteq>b \\<Longrightarrow> L:Lin \\<Longrightarrow>\n  (x,y) : above L a b \\<longleftrightarrow> x\\<noteq>y \\<and>\n  (if x=b then (a,y) : L else\n   if y=b then x=a | (x,a) : L else (x,y) : L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> b; L \\<in> Lin\\<rbrakk>\n    \\<Longrightarrow> ((x, y) \\<in> Arrow_Order.above L a b) =\n                      (x \\<noteq> y \\<and>\n                       (if x = b then (a, y) \\<in> L\n                        else if y = b then x = a \\<or> (x, a) \\<in> L\n                             else (x, y) \\<in> L))", "by(auto simp:above_def slo_defs)"], ["", "lemma in_below: \"a\\<noteq>b \\<Longrightarrow> L:Lin \\<Longrightarrow>\n  (x,y) : below L a b \\<longleftrightarrow> x\\<noteq>y \\<and>\n  (if y=a then (x,b) : L else\n   if x=a then y=b | (b,y) : L else (x,y) : L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> b; L \\<in> Lin\\<rbrakk>\n    \\<Longrightarrow> ((x, y) \\<in> below L a b) =\n                      (x \\<noteq> y \\<and>\n                       (if y = a then (x, b) \\<in> L\n                        else if x = a then y = b \\<or> (b, y) \\<in> L\n                             else (x, y) \\<in> L))", "by(auto simp:below_def slo_defs)"], ["", "declare [[simp_depth_limit = 2]]"], ["", "lemma mktop_Lin: \"L : Lin \\<Longrightarrow> mktop L x : Lin\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<in> Lin \\<Longrightarrow> mktop L x \\<in> Lin", "by(auto simp add:slo_defs mktop_def trans_def)"], ["", "lemma mkbot_Lin: \"L : Lin \\<Longrightarrow> mkbot L x : Lin\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<in> Lin \\<Longrightarrow> mkbot L x \\<in> Lin", "by(auto simp add:slo_defs trans_def mkbot_def)"], ["", "lemma below_Lin: \"x\\<noteq>y \\<Longrightarrow> L : Lin \\<Longrightarrow> below L x y : Lin\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y; L \\<in> Lin\\<rbrakk>\n    \\<Longrightarrow> below L x y \\<in> Lin", "unfolding slo_defs below_def trans_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y;\n     L \\<in> {L. (\\<forall>x y z.\n                     (x, y) \\<in> L \\<longrightarrow>\n                     (y, z) \\<in> L \\<longrightarrow> (x, z) \\<in> L) \\<and>\n                 (\\<forall>a. (a, a) \\<notin> L) \\<and>\n                 (\\<forall>x\\<in>UNIV.\n                     \\<forall>y\\<in>UNIV.\n                        x \\<noteq> y \\<longrightarrow>\n                        (x, y) \\<in> L \\<or> (y, x) \\<in> L)}\\<rbrakk>\n    \\<Longrightarrow> rem L x \\<union> {(x, y)} \\<union>\n                      {(xa, x) |xa.\n                       (xa, y) \\<in> L \\<and> xa \\<noteq> x} \\<union>\n                      {(x, ya) |ya. (y, ya) \\<in> L \\<and> ya \\<noteq> x}\n                      \\<in> {L. (\\<forall>x y z.\n                                    (x, y) \\<in> L \\<longrightarrow>\n                                    (y, z) \\<in> L \\<longrightarrow>\n                                    (x, z) \\<in> L) \\<and>\n                                (\\<forall>a. (a, a) \\<notin> L) \\<and>\n                                (\\<forall>x\\<in>UNIV.\n                                    \\<forall>y\\<in>UNIV.\n x \\<noteq> y \\<longrightarrow> (x, y) \\<in> L \\<or> (y, x) \\<in> L)}", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y;\n     (\\<forall>x y.\n         (x, y) \\<in> L \\<longrightarrow>\n         (\\<forall>z.\n             (y, z) \\<in> L \\<longrightarrow> (x, z) \\<in> L)) \\<and>\n     (\\<forall>a. (a, a) \\<notin> L) \\<and>\n     (\\<forall>x y.\n         x \\<noteq> y \\<longrightarrow>\n         (x, y) \\<in> L \\<or> (y, x) \\<in> L)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>xa ya.\n                          ((xa, ya) \\<in> L \\<and>\n                           xa \\<noteq> x \\<and>\n                           ya \\<noteq> x \\<longrightarrow>\n                           (\\<forall>z.\n                               ((ya, z) \\<in> L \\<and>\n                                z \\<noteq> x \\<longrightarrow>\n                                (xa, z) \\<in> L) \\<and>\n                               (z = x \\<and>\n                                (ya, y) \\<in> L \\<longrightarrow>\n                                (xa, y) \\<in> L))) \\<and>\n                          (ya = x \\<and>\n                           (xa, y) \\<in> L \\<and>\n                           xa \\<noteq> x \\<longrightarrow>\n                           (\\<forall>z.\n                               (y, z) \\<in> L \\<and>\n                               z \\<noteq> x \\<longrightarrow>\n                               (xa, z) \\<in> L)) \\<and>\n                          (xa = x \\<and>\n                           (y, ya) \\<in> L \\<and>\n                           ya \\<noteq> x \\<longrightarrow>\n                           (\\<forall>z.\n                               ((ya, z) \\<in> L \\<and>\n                                z \\<noteq> x \\<longrightarrow>\n                                z = y \\<or> (y, z) \\<in> L) \\<and>\n                               (z = x \\<longrightarrow>\n                                (ya, y) \\<notin> L)))) \\<and>\n                      (\\<forall>xa ya.\n                          xa \\<noteq> ya \\<longrightarrow>\n                          xa = x \\<and> ya = y \\<or>\n                          (xa, ya) \\<in> L \\<and>\n                          xa \\<noteq> x \\<and> ya \\<noteq> x \\<or>\n                          ya = x \\<and>\n                          (xa, y) \\<in> L \\<and> xa \\<noteq> x \\<or>\n                          xa = x \\<and>\n                          (y, ya) \\<in> L \\<and> ya \\<noteq> x \\<or>\n                          ya = x \\<and> xa = y \\<or>\n                          (ya, xa) \\<in> L \\<and>\n                          ya \\<noteq> x \\<and> xa \\<noteq> x \\<or>\n                          xa = x \\<and>\n                          (ya, y) \\<in> L \\<and> ya \\<noteq> x \\<or>\n                          ya = x \\<and>\n                          (y, xa) \\<in> L \\<and> xa \\<noteq> x)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma above_Lin: \"x\\<noteq>y \\<Longrightarrow> L : Lin \\<Longrightarrow> above L x y : Lin\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y; L \\<in> Lin\\<rbrakk>\n    \\<Longrightarrow> Arrow_Order.above L x y \\<in> Lin", "unfolding slo_defs above_def trans_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y;\n     L \\<in> {L. (\\<forall>x y z.\n                     (x, y) \\<in> L \\<longrightarrow>\n                     (y, z) \\<in> L \\<longrightarrow> (x, z) \\<in> L) \\<and>\n                 (\\<forall>a. (a, a) \\<notin> L) \\<and>\n                 (\\<forall>x\\<in>UNIV.\n                     \\<forall>y\\<in>UNIV.\n                        x \\<noteq> y \\<longrightarrow>\n                        (x, y) \\<in> L \\<or> (y, x) \\<in> L)}\\<rbrakk>\n    \\<Longrightarrow> rem L y \\<union> {(x, y)} \\<union>\n                      {(xa, y) |xa.\n                       (xa, x) \\<in> L \\<and> xa \\<noteq> y} \\<union>\n                      {(y, ya) |ya. (x, ya) \\<in> L \\<and> ya \\<noteq> y}\n                      \\<in> {L. (\\<forall>x y z.\n                                    (x, y) \\<in> L \\<longrightarrow>\n                                    (y, z) \\<in> L \\<longrightarrow>\n                                    (x, z) \\<in> L) \\<and>\n                                (\\<forall>a. (a, a) \\<notin> L) \\<and>\n                                (\\<forall>x\\<in>UNIV.\n                                    \\<forall>y\\<in>UNIV.\n x \\<noteq> y \\<longrightarrow> (x, y) \\<in> L \\<or> (y, x) \\<in> L)}", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y;\n     (\\<forall>x y.\n         (x, y) \\<in> L \\<longrightarrow>\n         (\\<forall>z.\n             (y, z) \\<in> L \\<longrightarrow> (x, z) \\<in> L)) \\<and>\n     (\\<forall>a. (a, a) \\<notin> L) \\<and>\n     (\\<forall>x y.\n         x \\<noteq> y \\<longrightarrow>\n         (x, y) \\<in> L \\<or> (y, x) \\<in> L)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>xa ya.\n                          ((xa, ya) \\<in> L \\<and>\n                           xa \\<noteq> y \\<and>\n                           ya \\<noteq> y \\<longrightarrow>\n                           (\\<forall>z.\n                               (ya = x \\<and> z = y \\<longrightarrow>\n                                xa = x \\<or> (xa, x) \\<in> L) \\<and>\n                               ((ya, z) \\<in> L \\<and>\n                                z \\<noteq> y \\<longrightarrow>\n                                (xa, z) \\<in> L) \\<and>\n                               (z = y \\<and>\n                                (ya, x) \\<in> L \\<longrightarrow>\n                                xa = x \\<or> (xa, x) \\<in> L))) \\<and>\n                          (ya = y \\<and>\n                           (xa, x) \\<in> L \\<and>\n                           xa \\<noteq> y \\<longrightarrow>\n                           (\\<forall>z.\n                               (x, z) \\<in> L \\<and>\n                               z \\<noteq> y \\<longrightarrow>\n                               (xa, z) \\<in> L)) \\<and>\n                          (xa = y \\<and>\n                           (x, ya) \\<in> L \\<and>\n                           ya \\<noteq> y \\<longrightarrow>\n                           (\\<forall>z.\n                               (ya = x \\<longrightarrow>\n                                z \\<noteq> y) \\<and>\n                               ((ya, z) \\<in> L \\<and>\n                                z \\<noteq> y \\<longrightarrow>\n                                (x, z) \\<in> L) \\<and>\n                               (z = y \\<longrightarrow>\n                                (ya, x) \\<notin> L)))) \\<and>\n                      (\\<forall>xa ya.\n                          xa \\<noteq> ya \\<longrightarrow>\n                          xa = x \\<and> ya = y \\<or>\n                          (xa, ya) \\<in> L \\<and>\n                          xa \\<noteq> y \\<and> ya \\<noteq> y \\<or>\n                          ya = y \\<and>\n                          (xa, x) \\<in> L \\<and> xa \\<noteq> y \\<or>\n                          xa = y \\<and>\n                          (x, ya) \\<in> L \\<and> ya \\<noteq> y \\<or>\n                          ya = x \\<and> xa = y \\<or>\n                          (ya, xa) \\<in> L \\<and>\n                          ya \\<noteq> y \\<and> xa \\<noteq> y \\<or>\n                          xa = y \\<and>\n                          (ya, x) \\<in> L \\<and> ya \\<noteq> y \\<or>\n                          ya = y \\<and>\n                          (x, xa) \\<in> L \\<and> xa \\<noteq> y)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "declare [[simp_depth_limit = 50]]"], ["", "abbreviation lessLin :: \"alt \\<Rightarrow> pref \\<Rightarrow> alt \\<Rightarrow> bool\" (\"(_ <\\<^bsub>_\\<^esub> _)\" [51, 51] 50)\nwhere \"a <\\<^bsub>L\\<^esub> b == (a,b) : L\""], ["", "definition \"Prof = I \\<rightarrow> Lin\""], ["", "abbreviation \"SWF == Prof \\<rightarrow> Lin\""], ["", "definition \"unanimity F == \\<forall>P\\<in>Prof.\\<forall>a b. (\\<forall>i. a <\\<^bsub>P i\\<^esub> b) \\<longrightarrow>  a <\\<^bsub>F P\\<^esub> b\""], ["", "definition \"IIA F == \\<forall>P\\<in>Prof.\\<forall>P'\\<in>Prof.\\<forall>a b.\n   (\\<forall>i. a <\\<^bsub>P i\\<^esub> b \\<longleftrightarrow> a <\\<^bsub>P' i\\<^esub> b) \\<longrightarrow> (a <\\<^bsub>F P\\<^esub> b \\<longleftrightarrow> a <\\<^bsub>F P'\\<^esub> b)\""], ["", "definition \"dictator F i == \\<forall>P\\<in>Prof. F P = P i\""], ["", "lemma dictatorI: \"F : SWF \\<Longrightarrow>\n  \\<forall>P\\<in>Prof. \\<forall>a b. a \\<noteq> b \\<longrightarrow> (a,b) : P i \\<longrightarrow> (a,b) : F P \\<Longrightarrow> dictator F i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<in> SWF;\n     \\<forall>P\\<in>Prof.\n        \\<forall>a b.\n           a \\<noteq> b \\<longrightarrow>\n           a <\\<^bsub>P i\\<^esub> b \\<longrightarrow>\n           a <\\<^bsub>F P\\<^esub> b\\<rbrakk>\n    \\<Longrightarrow> dictator F i", "apply(simp add:dictator_def Prof_def Pi_def Lin_def strict_linear_order_on_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x.\n                (\\<forall>xa.\n                    trans (x xa) \\<and>\n                    irrefl (x xa) \\<and> total (x xa)) \\<longrightarrow>\n                trans (F x) \\<and> irrefl (F x) \\<and> total (F x);\n     \\<forall>P.\n        (\\<forall>x.\n            trans (P x) \\<and>\n            irrefl (P x) \\<and> total (P x)) \\<longrightarrow>\n        (\\<forall>a b.\n            a \\<noteq> b \\<longrightarrow>\n            a <\\<^bsub>P i\\<^esub> b \\<longrightarrow>\n            a <\\<^bsub>F P\\<^esub> b)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>P.\n                         (\\<forall>x.\n                             trans (P x) \\<and>\n                             irrefl (P x) \\<and>\n                             total (P x)) \\<longrightarrow>\n                         F P = P i", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P a b.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>xa.\n                       trans (x xa) \\<and>\n                       irrefl (x xa) \\<and> total (x xa)) \\<longrightarrow>\n                   trans (F x) \\<and> irrefl (F x) \\<and> total (F x);\n        \\<forall>P.\n           (\\<forall>x.\n               trans (P x) \\<and>\n               irrefl (P x) \\<and> total (P x)) \\<longrightarrow>\n           (\\<forall>a b.\n               a \\<noteq> b \\<longrightarrow>\n               a <\\<^bsub>P i\\<^esub> b \\<longrightarrow>\n               a <\\<^bsub>F P\\<^esub> b);\n        \\<forall>x. trans (P x) \\<and> irrefl (P x) \\<and> total (P x);\n        a <\\<^bsub>F P\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>P i\\<^esub> b\n 2. \\<And>P a b.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>xa.\n                       trans (x xa) \\<and>\n                       irrefl (x xa) \\<and> total (x xa)) \\<longrightarrow>\n                   trans (F x) \\<and> irrefl (F x) \\<and> total (F x);\n        \\<forall>P.\n           (\\<forall>x.\n               trans (P x) \\<and>\n               irrefl (P x) \\<and> total (P x)) \\<longrightarrow>\n           (\\<forall>a b.\n               a \\<noteq> b \\<longrightarrow>\n               a <\\<^bsub>P i\\<^esub> b \\<longrightarrow>\n               a <\\<^bsub>F P\\<^esub> b);\n        \\<forall>x. trans (P x) \\<and> irrefl (P x) \\<and> total (P x);\n        a <\\<^bsub>P i\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "apply(erule_tac x=P in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P a b.\n       \\<lbrakk>\\<forall>P.\n                   (\\<forall>x.\n                       trans (P x) \\<and>\n                       irrefl (P x) \\<and> total (P x)) \\<longrightarrow>\n                   (\\<forall>a b.\n                       a \\<noteq> b \\<longrightarrow>\n                       a <\\<^bsub>P i\\<^esub> b \\<longrightarrow>\n                       a <\\<^bsub>F P\\<^esub> b);\n        \\<forall>x. trans (P x) \\<and> irrefl (P x) \\<and> total (P x);\n        a <\\<^bsub>F P\\<^esub> b;\n        (\\<forall>x.\n            trans (P x) \\<and>\n            irrefl (P x) \\<and> total (P x)) \\<longrightarrow>\n        trans (F P) \\<and> irrefl (F P) \\<and> total (F P)\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>P i\\<^esub> b\n 2. \\<And>P a b.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>xa.\n                       trans (x xa) \\<and>\n                       irrefl (x xa) \\<and> total (x xa)) \\<longrightarrow>\n                   trans (F x) \\<and> irrefl (F x) \\<and> total (F x);\n        \\<forall>P.\n           (\\<forall>x.\n               trans (P x) \\<and>\n               irrefl (P x) \\<and> total (P x)) \\<longrightarrow>\n           (\\<forall>a b.\n               a \\<noteq> b \\<longrightarrow>\n               a <\\<^bsub>P i\\<^esub> b \\<longrightarrow>\n               a <\\<^bsub>F P\\<^esub> b);\n        \\<forall>x. trans (P x) \\<and> irrefl (P x) \\<and> total (P x);\n        a <\\<^bsub>P i\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "apply(erule_tac x=P in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P a b.\n       \\<lbrakk>\\<forall>x.\n                   trans (P x) \\<and> irrefl (P x) \\<and> total (P x);\n        a <\\<^bsub>F P\\<^esub> b;\n        (\\<forall>x.\n            trans (P x) \\<and>\n            irrefl (P x) \\<and> total (P x)) \\<longrightarrow>\n        trans (F P) \\<and> irrefl (F P) \\<and> total (F P);\n        (\\<forall>x.\n            trans (P x) \\<and>\n            irrefl (P x) \\<and> total (P x)) \\<longrightarrow>\n        (\\<forall>a b.\n            a \\<noteq> b \\<longrightarrow>\n            a <\\<^bsub>P i\\<^esub> b \\<longrightarrow>\n            a <\\<^bsub>F P\\<^esub> b)\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>P i\\<^esub> b\n 2. \\<And>P a b.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>xa.\n                       trans (x xa) \\<and>\n                       irrefl (x xa) \\<and> total (x xa)) \\<longrightarrow>\n                   trans (F x) \\<and> irrefl (F x) \\<and> total (F x);\n        \\<forall>P.\n           (\\<forall>x.\n               trans (P x) \\<and>\n               irrefl (P x) \\<and> total (P x)) \\<longrightarrow>\n           (\\<forall>a b.\n               a \\<noteq> b \\<longrightarrow>\n               a <\\<^bsub>P i\\<^esub> b \\<longrightarrow>\n               a <\\<^bsub>F P\\<^esub> b);\n        \\<forall>x. trans (P x) \\<and> irrefl (P x) \\<and> total (P x);\n        a <\\<^bsub>P i\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "apply(simp add:total_on_def irrefl_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P a b.\n       \\<lbrakk>\\<forall>x.\n                   trans (P x) \\<and>\n                   (\\<forall>a. (a, a) \\<notin> P x) \\<and>\n                   (\\<forall>xa y.\n                       xa \\<noteq> y \\<longrightarrow>\n                       xa <\\<^bsub>P x\\<^esub> y \\<or>\n                       y <\\<^bsub>P x\\<^esub> xa);\n        a <\\<^bsub>F P\\<^esub> b;\n        trans (F P) \\<and>\n        (\\<forall>a. (a, a) \\<notin> F P) \\<and>\n        (\\<forall>x y.\n            x \\<noteq> y \\<longrightarrow>\n            x <\\<^bsub>F P\\<^esub> y \\<or> y <\\<^bsub>F P\\<^esub> x);\n        \\<forall>a b.\n           a \\<noteq> b \\<longrightarrow>\n           a <\\<^bsub>P i\\<^esub> b \\<longrightarrow>\n           a <\\<^bsub>F P\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>P i\\<^esub> b\n 2. \\<And>P a b.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>xa.\n                       trans (x xa) \\<and>\n                       irrefl (x xa) \\<and> total (x xa)) \\<longrightarrow>\n                   trans (F x) \\<and> irrefl (F x) \\<and> total (F x);\n        \\<forall>P.\n           (\\<forall>x.\n               trans (P x) \\<and>\n               irrefl (P x) \\<and> total (P x)) \\<longrightarrow>\n           (\\<forall>a b.\n               a \\<noteq> b \\<longrightarrow>\n               a <\\<^bsub>P i\\<^esub> b \\<longrightarrow>\n               a <\\<^bsub>F P\\<^esub> b);\n        \\<forall>x. trans (P x) \\<and> irrefl (P x) \\<and> total (P x);\n        a <\\<^bsub>P i\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "apply (metis trans_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P a b.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>xa.\n                       trans (x xa) \\<and>\n                       irrefl (x xa) \\<and> total (x xa)) \\<longrightarrow>\n                   trans (F x) \\<and> irrefl (F x) \\<and> total (F x);\n        \\<forall>P.\n           (\\<forall>x.\n               trans (P x) \\<and>\n               irrefl (P x) \\<and> total (P x)) \\<longrightarrow>\n           (\\<forall>a b.\n               a \\<noteq> b \\<longrightarrow>\n               a <\\<^bsub>P i\\<^esub> b \\<longrightarrow>\n               a <\\<^bsub>F P\\<^esub> b);\n        \\<forall>x. trans (P x) \\<and> irrefl (P x) \\<and> total (P x);\n        a <\\<^bsub>P i\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "apply (metis irrefl_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma const_Lin_Prof: \"L:Lin \\<Longrightarrow> (%p. L) : Prof\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<in> Lin \\<Longrightarrow> (\\<lambda>p. L) \\<in> Prof", "by(simp add:Prof_def Pi_def)"], ["", "lemma complete_Lin: assumes \"a\\<noteq>b\" shows \"\\<exists>L\\<in>Lin. (a,b) : L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>L\\<in>Lin. a <\\<^bsub>L\\<^esub> b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>L\\<in>Lin. a <\\<^bsub>L\\<^esub> b", "from linear_alt"], ["proof (chain)\npicking this:\n  \\<exists>L. L \\<in> Lin", "obtain R where \"R:Lin\""], ["proof (prove)\nusing this:\n  \\<exists>L. L \\<in> Lin\n\ngoal (1 subgoal):\n 1. (\\<And>R. R \\<in> Lin \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  R \\<in> Lin\n\ngoal (1 subgoal):\n 1. \\<exists>L\\<in>Lin. a <\\<^bsub>L\\<^esub> b", "thus ?thesis"], ["proof (prove)\nusing this:\n  R \\<in> Lin\n\ngoal (1 subgoal):\n 1. \\<exists>L\\<in>Lin. a <\\<^bsub>L\\<^esub> b", "by (metis assms in_mkbot mkbot_Lin)"], ["proof (state)\nthis:\n  \\<exists>L\\<in>Lin. a <\\<^bsub>L\\<^esub> b\n\ngoal:\nNo subgoals!", "qed"], ["", "declare Let_def[simp]"], ["", "theorem Arrow: assumes \"F : SWF\" and u: \"unanimity F\" and \"IIA F\"\nshows \"\\<exists>i. dictator F i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "fix a b a' b' and P P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "assume d1: \"a\\<noteq>b\" \"a'\\<noteq>b'\" and d2: \"a\\<noteq>b'\" \"b\\<noteq>a'\" and\n      \"P : Prof\" \"P' : Prof\" and 1: \"\\<forall>i. (a,b) : P i \\<longleftrightarrow> (a',b') : P' i\""], ["proof (state)\nthis:\n  a \\<noteq> b\n  a' \\<noteq> b'\n  a \\<noteq> b'\n  b \\<noteq> a'\n  P \\<in> Prof\n  P' \\<in> Prof\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (a' <\\<^bsub>P' i\\<^esub> b')\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "assume \"(a,b) : F P\""], ["proof (state)\nthis:\n  a <\\<^bsub>F P\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "define Q where\n      \"Q i = (let L = (if a=a' then P i else below (P i) a' a)\n              in if b=b' then L else above L b b')\" for i"], ["proof (state)\nthis:\n  Q ?i =\n  (let L = if a = a' then P ?i else below (P ?i) a' a\n   in if b = b' then L else Arrow_Order.above L b b')\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "have \"Q : Prof\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> Prof", "using \\<open>P : Prof\\<close>"], ["proof (prove)\nusing this:\n  P \\<in> Prof\n\ngoal (1 subgoal):\n 1. Q \\<in> Prof", "by(simp add:Q_def Prof_def Pi_def above_Lin below_Lin)"], ["proof (state)\nthis:\n  Q \\<in> Prof\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "hence \"F Q : Lin\""], ["proof (prove)\nusing this:\n  Q \\<in> Prof\n\ngoal (1 subgoal):\n 1. F Q \\<in> Lin", "using \\<open>F : SWF\\<close>"], ["proof (prove)\nusing this:\n  Q \\<in> Prof\n  F \\<in> SWF\n\ngoal (1 subgoal):\n 1. F Q \\<in> Lin", "by(simp add:Pi_def)"], ["proof (state)\nthis:\n  F Q \\<in> Lin\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "have \"\\<forall>i. (a,b) : P i \\<longleftrightarrow> (a,b) : Q i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (a <\\<^bsub>Q i\\<^esub> b)", "using d1 d2 \\<open>P : Prof\\<close>"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a' \\<noteq> b'\n  a \\<noteq> b'\n  b \\<noteq> a'\n  P \\<in> Prof\n\ngoal (1 subgoal):\n 1. \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (a <\\<^bsub>Q i\\<^esub> b)", "by(simp add:in_above in_below Q_def Prof_def Pi_def below_Lin)"], ["proof (state)\nthis:\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (a <\\<^bsub>Q i\\<^esub> b)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "hence \"(a,b) : F Q\""], ["proof (prove)\nusing this:\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (a <\\<^bsub>Q i\\<^esub> b)\n\ngoal (1 subgoal):\n 1. a <\\<^bsub>F Q\\<^esub> b", "using \\<open>(a,b) : F P\\<close> \\<open>IIA F\\<close> \\<open>P:Prof\\<close> \\<open>Q : Prof\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (a <\\<^bsub>Q i\\<^esub> b)\n  a <\\<^bsub>F P\\<^esub> b\n  IIA F\n  P \\<in> Prof\n  Q \\<in> Prof\n\ngoal (1 subgoal):\n 1. a <\\<^bsub>F Q\\<^esub> b", "unfolding IIA_def"], ["proof (prove)\nusing this:\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (a <\\<^bsub>Q i\\<^esub> b)\n  a <\\<^bsub>F P\\<^esub> b\n  \\<forall>P\\<in>Prof.\n     \\<forall>P'\\<in>Prof.\n        \\<forall>a b.\n           (\\<forall>i.\n               (a <\\<^bsub>P i\\<^esub> b) =\n               (a <\\<^bsub>P' i\\<^esub> b)) \\<longrightarrow>\n           (a <\\<^bsub>F P\\<^esub> b) = (a <\\<^bsub>F P'\\<^esub> b)\n  P \\<in> Prof\n  Q \\<in> Prof\n\ngoal (1 subgoal):\n 1. a <\\<^bsub>F Q\\<^esub> b", "by blast"], ["proof (state)\nthis:\n  a <\\<^bsub>F Q\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "moreover"], ["proof (state)\nthis:\n  a <\\<^bsub>F Q\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "{"], ["proof (state)\nthis:\n  a <\\<^bsub>F Q\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "assume \"a\\<noteq>a'\""], ["proof (state)\nthis:\n  a \\<noteq> a'\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "hence \"!!i. (a',a) : Q i\""], ["proof (prove)\nusing this:\n  a \\<noteq> a'\n\ngoal (1 subgoal):\n 1. \\<And>i. a' <\\<^bsub>Q i\\<^esub> a", "using d1 d2 \\<open>P : Prof\\<close>"], ["proof (prove)\nusing this:\n  a \\<noteq> a'\n  a \\<noteq> b\n  a' \\<noteq> b'\n  a \\<noteq> b'\n  b \\<noteq> a'\n  P \\<in> Prof\n\ngoal (1 subgoal):\n 1. \\<And>i. a' <\\<^bsub>Q i\\<^esub> a", "by(simp add:in_above in_below Q_def Prof_def Pi_def below_Lin)"], ["proof (state)\nthis:\n  a' <\\<^bsub>Q ?i\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "hence \"(a',a) : F Q\""], ["proof (prove)\nusing this:\n  a' <\\<^bsub>Q ?i\\<^esub> a\n\ngoal (1 subgoal):\n 1. a' <\\<^bsub>F Q\\<^esub> a", "using u \\<open>Q : Prof\\<close>"], ["proof (prove)\nusing this:\n  a' <\\<^bsub>Q ?i\\<^esub> a\n  unanimity F\n  Q \\<in> Prof\n\ngoal (1 subgoal):\n 1. a' <\\<^bsub>F Q\\<^esub> a", "by(simp add:unanimity_def)"], ["proof (state)\nthis:\n  a' <\\<^bsub>F Q\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "}"], ["proof (state)\nthis:\n  a \\<noteq> a' \\<Longrightarrow> a' <\\<^bsub>F Q\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "moreover"], ["proof (state)\nthis:\n  a \\<noteq> a' \\<Longrightarrow> a' <\\<^bsub>F Q\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "{"], ["proof (state)\nthis:\n  a \\<noteq> a' \\<Longrightarrow> a' <\\<^bsub>F Q\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "assume \"b\\<noteq>b'\""], ["proof (state)\nthis:\n  b \\<noteq> b'\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "hence \"!!i. (b,b') : Q i\""], ["proof (prove)\nusing this:\n  b \\<noteq> b'\n\ngoal (1 subgoal):\n 1. \\<And>i. b <\\<^bsub>Q i\\<^esub> b'", "using d1 d2 \\<open>P : Prof\\<close>"], ["proof (prove)\nusing this:\n  b \\<noteq> b'\n  a \\<noteq> b\n  a' \\<noteq> b'\n  a \\<noteq> b'\n  b \\<noteq> a'\n  P \\<in> Prof\n\ngoal (1 subgoal):\n 1. \\<And>i. b <\\<^bsub>Q i\\<^esub> b'", "by(simp add:in_above in_below Q_def Prof_def Pi_def below_Lin)"], ["proof (state)\nthis:\n  b <\\<^bsub>Q ?i\\<^esub> b'\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "hence \"(b,b') : F Q\""], ["proof (prove)\nusing this:\n  b <\\<^bsub>Q ?i\\<^esub> b'\n\ngoal (1 subgoal):\n 1. b <\\<^bsub>F Q\\<^esub> b'", "using u \\<open>Q : Prof\\<close>"], ["proof (prove)\nusing this:\n  b <\\<^bsub>Q ?i\\<^esub> b'\n  unanimity F\n  Q \\<in> Prof\n\ngoal (1 subgoal):\n 1. b <\\<^bsub>F Q\\<^esub> b'", "by(simp add:unanimity_def)"], ["proof (state)\nthis:\n  b <\\<^bsub>F Q\\<^esub> b'\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "}"], ["proof (state)\nthis:\n  b \\<noteq> b' \\<Longrightarrow> b <\\<^bsub>F Q\\<^esub> b'\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "ultimately"], ["proof (chain)\npicking this:\n  a <\\<^bsub>F Q\\<^esub> b\n  a \\<noteq> a' \\<Longrightarrow> a' <\\<^bsub>F Q\\<^esub> a\n  b \\<noteq> b' \\<Longrightarrow> b <\\<^bsub>F Q\\<^esub> b'", "have \"(a',b') : F Q\""], ["proof (prove)\nusing this:\n  a <\\<^bsub>F Q\\<^esub> b\n  a \\<noteq> a' \\<Longrightarrow> a' <\\<^bsub>F Q\\<^esub> a\n  b \\<noteq> b' \\<Longrightarrow> b <\\<^bsub>F Q\\<^esub> b'\n\ngoal (1 subgoal):\n 1. a' <\\<^bsub>F Q\\<^esub> b'", "using \\<open>F Q : Lin\\<close>"], ["proof (prove)\nusing this:\n  a <\\<^bsub>F Q\\<^esub> b\n  a \\<noteq> a' \\<Longrightarrow> a' <\\<^bsub>F Q\\<^esub> a\n  b \\<noteq> b' \\<Longrightarrow> b <\\<^bsub>F Q\\<^esub> b'\n  F Q \\<in> Lin\n\ngoal (1 subgoal):\n 1. a' <\\<^bsub>F Q\\<^esub> b'", "unfolding slo_defs trans_def"], ["proof (prove)\nusing this:\n  a <\\<^bsub>F Q\\<^esub> b\n  a \\<noteq> a' \\<Longrightarrow> a' <\\<^bsub>F Q\\<^esub> a\n  b \\<noteq> b' \\<Longrightarrow> b <\\<^bsub>F Q\\<^esub> b'\n  F Q\n  \\<in> {L. (\\<forall>x y z.\n                x <\\<^bsub>L\\<^esub> y \\<longrightarrow>\n                y <\\<^bsub>L\\<^esub> z \\<longrightarrow>\n                x <\\<^bsub>L\\<^esub> z) \\<and>\n            (\\<forall>a. (a, a) \\<notin> L) \\<and>\n            (\\<forall>x\\<in>UNIV.\n                \\<forall>y\\<in>UNIV.\n                   x \\<noteq> y \\<longrightarrow>\n                   x <\\<^bsub>L\\<^esub> y \\<or> y <\\<^bsub>L\\<^esub> x)}\n\ngoal (1 subgoal):\n 1. a' <\\<^bsub>F Q\\<^esub> b'", "by safe metis"], ["proof (state)\nthis:\n  a' <\\<^bsub>F Q\\<^esub> b'\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "moreover"], ["proof (state)\nthis:\n  a' <\\<^bsub>F Q\\<^esub> b'\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "have \"\\<forall>i. (a',b') : Q i \\<longleftrightarrow> (a',b') : P' i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i. (a' <\\<^bsub>Q i\\<^esub> b') = (a' <\\<^bsub>P' i\\<^esub> b')", "using d1 d2 \\<open>P : Prof\\<close> 1"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a' \\<noteq> b'\n  a \\<noteq> b'\n  b \\<noteq> a'\n  P \\<in> Prof\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (a' <\\<^bsub>P' i\\<^esub> b')\n\ngoal (1 subgoal):\n 1. \\<forall>i. (a' <\\<^bsub>Q i\\<^esub> b') = (a' <\\<^bsub>P' i\\<^esub> b')", "by(simp add:Q_def in_below in_above Prof_def Pi_def below_Lin) blast"], ["proof (state)\nthis:\n  \\<forall>i. (a' <\\<^bsub>Q i\\<^esub> b') = (a' <\\<^bsub>P' i\\<^esub> b')\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "ultimately"], ["proof (chain)\npicking this:\n  a' <\\<^bsub>F Q\\<^esub> b'\n  \\<forall>i. (a' <\\<^bsub>Q i\\<^esub> b') = (a' <\\<^bsub>P' i\\<^esub> b')", "have \"(a',b') : F P'\""], ["proof (prove)\nusing this:\n  a' <\\<^bsub>F Q\\<^esub> b'\n  \\<forall>i. (a' <\\<^bsub>Q i\\<^esub> b') = (a' <\\<^bsub>P' i\\<^esub> b')\n\ngoal (1 subgoal):\n 1. a' <\\<^bsub>F P'\\<^esub> b'", "using \\<open>IIA F\\<close> \\<open>P' : Prof\\<close> \\<open>Q : Prof\\<close>"], ["proof (prove)\nusing this:\n  a' <\\<^bsub>F Q\\<^esub> b'\n  \\<forall>i. (a' <\\<^bsub>Q i\\<^esub> b') = (a' <\\<^bsub>P' i\\<^esub> b')\n  IIA F\n  P' \\<in> Prof\n  Q \\<in> Prof\n\ngoal (1 subgoal):\n 1. a' <\\<^bsub>F P'\\<^esub> b'", "unfolding IIA_def"], ["proof (prove)\nusing this:\n  a' <\\<^bsub>F Q\\<^esub> b'\n  \\<forall>i. (a' <\\<^bsub>Q i\\<^esub> b') = (a' <\\<^bsub>P' i\\<^esub> b')\n  \\<forall>P\\<in>Prof.\n     \\<forall>P'\\<in>Prof.\n        \\<forall>a b.\n           (\\<forall>i.\n               (a <\\<^bsub>P i\\<^esub> b) =\n               (a <\\<^bsub>P' i\\<^esub> b)) \\<longrightarrow>\n           (a <\\<^bsub>F P\\<^esub> b) = (a <\\<^bsub>F P'\\<^esub> b)\n  P' \\<in> Prof\n  Q \\<in> Prof\n\ngoal (1 subgoal):\n 1. a' <\\<^bsub>F P'\\<^esub> b'", "by blast"], ["proof (state)\nthis:\n  a' <\\<^bsub>F P'\\<^esub> b'\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?a'2 \\<noteq> ?b'2; ?a2 \\<noteq> ?b'2;\n   ?b2 \\<noteq> ?a'2; ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?a'2 <\\<^bsub>?P'2 i\\<^esub> ?b'2);\n   ?a2 <\\<^bsub>F ?P2\\<^esub> ?b2\\<rbrakk>\n  \\<Longrightarrow> ?a'2 <\\<^bsub>F ?P'2\\<^esub> ?b'2\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "note 1 = this"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?a'2 \\<noteq> ?b'2; ?a2 \\<noteq> ?b'2;\n   ?b2 \\<noteq> ?a'2; ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?a'2 <\\<^bsub>?P'2 i\\<^esub> ?b'2);\n   ?a2 <\\<^bsub>F ?P2\\<^esub> ?b2\\<rbrakk>\n  \\<Longrightarrow> ?a'2 <\\<^bsub>F ?P'2\\<^esub> ?b'2\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?a'2 \\<noteq> ?b'2; ?a2 \\<noteq> ?b'2;\n   ?b2 \\<noteq> ?a'2; ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?a'2 <\\<^bsub>?P'2 i\\<^esub> ?b'2);\n   ?a2 <\\<^bsub>F ?P2\\<^esub> ?b2\\<rbrakk>\n  \\<Longrightarrow> ?a'2 <\\<^bsub>F ?P'2\\<^esub> ?b'2\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "fix a b a' b' and P P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "assume \"a\\<noteq>b\" \"a'\\<noteq>b'\" \"a\\<noteq>b'\" \"b\\<noteq>a'\" \"P : Prof\" \"P' : Prof\"\n           \"\\<forall>i. (a,b) : P i \\<longleftrightarrow> (a',b') : P' i\""], ["proof (state)\nthis:\n  a \\<noteq> b\n  a' \\<noteq> b'\n  a \\<noteq> b'\n  b \\<noteq> a'\n  P \\<in> Prof\n  P' \\<in> Prof\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (a' <\\<^bsub>P' i\\<^esub> b')\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "hence \"(a,b) : F P \\<longleftrightarrow> (a',b') : F P'\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a' \\<noteq> b'\n  a \\<noteq> b'\n  b \\<noteq> a'\n  P \\<in> Prof\n  P' \\<in> Prof\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (a' <\\<^bsub>P' i\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "using 1"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a' \\<noteq> b'\n  a \\<noteq> b'\n  b \\<noteq> a'\n  P \\<in> Prof\n  P' \\<in> Prof\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (a' <\\<^bsub>P' i\\<^esub> b')\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?a'2 \\<noteq> ?b'2; ?a2 \\<noteq> ?b'2;\n   ?b2 \\<noteq> ?a'2; ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?a'2 <\\<^bsub>?P'2 i\\<^esub> ?b'2);\n   ?a2 <\\<^bsub>F ?P2\\<^esub> ?b2\\<rbrakk>\n  \\<Longrightarrow> ?a'2 <\\<^bsub>F ?P'2\\<^esub> ?b'2\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "by blast"], ["proof (state)\nthis:\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?a'2 \\<noteq> ?b'2; ?a2 \\<noteq> ?b'2;\n   ?b2 \\<noteq> ?a'2; ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?a'2 <\\<^bsub>?P'2 i\\<^esub> ?b'2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?a'2 <\\<^bsub>F ?P'2\\<^esub> ?b'2)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "note 2 = this"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?a'2 \\<noteq> ?b'2; ?a2 \\<noteq> ?b'2;\n   ?b2 \\<noteq> ?a'2; ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?a'2 <\\<^bsub>?P'2 i\\<^esub> ?b'2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?a'2 <\\<^bsub>F ?P'2\\<^esub> ?b'2)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?a'2 \\<noteq> ?b'2; ?a2 \\<noteq> ?b'2;\n   ?b2 \\<noteq> ?a'2; ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?a'2 <\\<^bsub>?P'2 i\\<^esub> ?b'2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?a'2 <\\<^bsub>F ?P'2\\<^esub> ?b'2)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "fix a b P P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "assume \"a\\<noteq>b\" \"P : Prof\" \"P' : Prof\" and\n      iff: \"\\<forall>i. (a,b) : P i \\<longleftrightarrow> (b,a) : P' i\""], ["proof (state)\nthis:\n  a \\<noteq> b\n  P \\<in> Prof\n  P' \\<in> Prof\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (b <\\<^bsub>P' i\\<^esub> a)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "from \\<open>a\\<noteq>b\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b", "obtain c where dist: \"distinct[a,b,c]\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<And>c. distinct [a, b, c] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using third_alt"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  ?a \\<noteq> ?b \\<Longrightarrow> \\<exists>c. distinct [?a, ?b, c]\n\ngoal (1 subgoal):\n 1. (\\<And>c. distinct [a, b, c] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  distinct [a, b, c]\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "let ?Q = \"%p. below (P p) c b\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "let ?R = \"%p. below (?Q p) b a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "let ?S = \"%p. below (?R p) a c\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "have \"?Q : Prof\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>p. below (P p) c b) \\<in> Prof", "using \\<open>P : Prof\\<close> dist"], ["proof (prove)\nusing this:\n  P \\<in> Prof\n  distinct [a, b, c]\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. below (P p) c b) \\<in> Prof", "by(auto simp add:Prof_def Pi_def below_Lin)"], ["proof (state)\nthis:\n  (\\<lambda>p. below (P p) c b) \\<in> Prof\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "hence \"?R : Prof\""], ["proof (prove)\nusing this:\n  (\\<lambda>p. below (P p) c b) \\<in> Prof\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. below (below (P p) c b) b a) \\<in> Prof", "using dist"], ["proof (prove)\nusing this:\n  (\\<lambda>p. below (P p) c b) \\<in> Prof\n  distinct [a, b, c]\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. below (below (P p) c b) b a) \\<in> Prof", "by(auto simp add:Prof_def Pi_def below_Lin)"], ["proof (state)\nthis:\n  (\\<lambda>p. below (below (P p) c b) b a) \\<in> Prof\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "hence \"?S : Prof\""], ["proof (prove)\nusing this:\n  (\\<lambda>p. below (below (P p) c b) b a) \\<in> Prof\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. below (below (below (P p) c b) b a) a c) \\<in> Prof", "using dist"], ["proof (prove)\nusing this:\n  (\\<lambda>p. below (below (P p) c b) b a) \\<in> Prof\n  distinct [a, b, c]\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. below (below (below (P p) c b) b a) a c) \\<in> Prof", "by(auto simp add:Prof_def Pi_def below_Lin)"], ["proof (state)\nthis:\n  (\\<lambda>p. below (below (below (P p) c b) b a) a c) \\<in> Prof\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "have \"\\<forall>i. (a,b) : P i \\<longleftrightarrow> (a,c) : ?Q i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (a <\\<^bsub>P i\\<^esub> b) = (a <\\<^bsub>below (P i) c b\\<^esub> c)", "using \\<open>P : Prof\\<close> dist"], ["proof (prove)\nusing this:\n  P \\<in> Prof\n  distinct [a, b, c]\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (a <\\<^bsub>P i\\<^esub> b) = (a <\\<^bsub>below (P i) c b\\<^esub> c)", "by(auto simp add:in_below Prof_def Pi_def)"], ["proof (state)\nthis:\n  \\<forall>i.\n     (a <\\<^bsub>P i\\<^esub> b) = (a <\\<^bsub>below (P i) c b\\<^esub> c)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "hence ab: \"(a,b) : F P \\<longleftrightarrow> (a,c) : F ?Q\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (a <\\<^bsub>P i\\<^esub> b) = (a <\\<^bsub>below (P i) c b\\<^esub> c)\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) =\n    (a <\\<^bsub>F (\\<lambda>p. below (P p) c b)\\<^esub> c)", "using 2 \\<open>P : Prof\\<close> \\<open>?Q : Prof\\<close> dist[simplified]"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (a <\\<^bsub>P i\\<^esub> b) = (a <\\<^bsub>below (P i) c b\\<^esub> c)\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?a'2 \\<noteq> ?b'2; ?a2 \\<noteq> ?b'2;\n   ?b2 \\<noteq> ?a'2; ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?a'2 <\\<^bsub>?P'2 i\\<^esub> ?b'2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?a'2 <\\<^bsub>F ?P'2\\<^esub> ?b'2)\n  P \\<in> Prof\n  (\\<lambda>p. below (P p) c b) \\<in> Prof\n  a \\<noteq> b \\<and> a \\<noteq> c \\<and> b \\<noteq> c\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) =\n    (a <\\<^bsub>F (\\<lambda>p. below (P p) c b)\\<^esub> c)", "by (blast)"], ["proof (state)\nthis:\n  (a <\\<^bsub>F P\\<^esub> b) =\n  (a <\\<^bsub>F (\\<lambda>p. below (P p) c b)\\<^esub> c)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "have \"\\<forall>i. (a,c) : ?Q i \\<longleftrightarrow> (b,c) : ?R i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (a <\\<^bsub>below (P i) c b\\<^esub> c) =\n       (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c)", "using \\<open>P : Prof\\<close> dist"], ["proof (prove)\nusing this:\n  P \\<in> Prof\n  distinct [a, b, c]\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (a <\\<^bsub>below (P i) c b\\<^esub> c) =\n       (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c)", "by(auto simp add:in_below Prof_def Pi_def below_Lin)"], ["proof (state)\nthis:\n  \\<forall>i.\n     (a <\\<^bsub>below (P i) c b\\<^esub> c) =\n     (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "hence ac: \"(a,c) : F ?Q \\<longleftrightarrow> (b,c) : F ?R\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (a <\\<^bsub>below (P i) c b\\<^esub> c) =\n     (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c)\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F (\\<lambda>p. below (P p) c b)\\<^esub> c) =\n    (b <\\<^bsub>F (\\<lambda>p. below (below (P p) c b) b a)\\<^esub> c)", "using 2 \\<open>?Q : Prof\\<close> \\<open>?R : Prof\\<close> dist[simplified]"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (a <\\<^bsub>below (P i) c b\\<^esub> c) =\n     (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c)\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?a'2 \\<noteq> ?b'2; ?a2 \\<noteq> ?b'2;\n   ?b2 \\<noteq> ?a'2; ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?a'2 <\\<^bsub>?P'2 i\\<^esub> ?b'2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?a'2 <\\<^bsub>F ?P'2\\<^esub> ?b'2)\n  (\\<lambda>p. below (P p) c b) \\<in> Prof\n  (\\<lambda>p. below (below (P p) c b) b a) \\<in> Prof\n  a \\<noteq> b \\<and> a \\<noteq> c \\<and> b \\<noteq> c\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F (\\<lambda>p. below (P p) c b)\\<^esub> c) =\n    (b <\\<^bsub>F (\\<lambda>p. below (below (P p) c b) b a)\\<^esub> c)", "by (blast)"], ["proof (state)\nthis:\n  (a <\\<^bsub>F (\\<lambda>p. below (P p) c b)\\<^esub> c) =\n  (b <\\<^bsub>F (\\<lambda>p. below (below (P p) c b) b a)\\<^esub> c)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "have \"\\<forall>i. (b,c) : ?R i \\<longleftrightarrow> (b,a) : ?S i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c) =\n       (b <\\<^bsub>below (below (below (P i) c b) b a) a c\\<^esub> a)", "using \\<open>P : Prof\\<close> dist"], ["proof (prove)\nusing this:\n  P \\<in> Prof\n  distinct [a, b, c]\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c) =\n       (b <\\<^bsub>below (below (below (P i) c b) b a) a c\\<^esub> a)", "by(auto simp add:in_below Prof_def Pi_def below_Lin)"], ["proof (state)\nthis:\n  \\<forall>i.\n     (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c) =\n     (b <\\<^bsub>below (below (below (P i) c b) b a) a c\\<^esub> a)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "hence bc: \"(b,c) : F ?R \\<longleftrightarrow> (b,a) : F ?S\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c) =\n     (b <\\<^bsub>below (below (below (P i) c b) b a) a c\\<^esub> a)\n\ngoal (1 subgoal):\n 1. (b <\\<^bsub>F (\\<lambda>p. below (below (P p) c b) b a)\\<^esub> c) =\n    (b <\\<^bsub>F (\\<lambda>p.\n                      below (below (below (P p) c b) b a) a c)\\<^esub> a)", "using \\<open>?R : Prof\\<close> \\<open>?S : Prof\\<close> dist[simplified] 2"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c) =\n     (b <\\<^bsub>below (below (below (P i) c b) b a) a c\\<^esub> a)\n  (\\<lambda>p. below (below (P p) c b) b a) \\<in> Prof\n  (\\<lambda>p. below (below (below (P p) c b) b a) a c) \\<in> Prof\n  a \\<noteq> b \\<and> a \\<noteq> c \\<and> b \\<noteq> c\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?a'2 \\<noteq> ?b'2; ?a2 \\<noteq> ?b'2;\n   ?b2 \\<noteq> ?a'2; ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?a'2 <\\<^bsub>?P'2 i\\<^esub> ?b'2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?a'2 <\\<^bsub>F ?P'2\\<^esub> ?b'2)\n\ngoal (1 subgoal):\n 1. (b <\\<^bsub>F (\\<lambda>p. below (below (P p) c b) b a)\\<^esub> c) =\n    (b <\\<^bsub>F (\\<lambda>p.\n                      below (below (below (P p) c b) b a) a c)\\<^esub> a)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i.\n                (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c) =\n                (b <\\<^bsub>below (below (below (P i) c b) b a) a\n                             c\\<^esub> a);\n     (\\<lambda>p. below (below (P p) c b) b a) \\<in> Prof;\n     (\\<lambda>p. below (below (below (P p) c b) b a) a c) \\<in> Prof;\n     a \\<noteq> b \\<and> a \\<noteq> c \\<and> b \\<noteq> c;\n     \\<And>a b a' b' P P'.\n        \\<lbrakk>a \\<noteq> b; a' \\<noteq> b'; a \\<noteq> b'; b \\<noteq> a';\n         P \\<in> Prof; P' \\<in> Prof;\n         \\<forall>i.\n            (a <\\<^bsub>P i\\<^esub> b) =\n            (a' <\\<^bsub>P' i\\<^esub> b')\\<rbrakk>\n        \\<Longrightarrow> (a <\\<^bsub>F P\\<^esub> b) =\n                          (a' <\\<^bsub>F P'\\<^esub> b')\\<rbrakk>\n    \\<Longrightarrow> (b <\\<^bsub>F (\\<lambda>p.\n  below (below (P p) c b) b a)\\<^esub> c) =\n                      (b <\\<^bsub>F (\\<lambda>p.\n  below (below (below (P p) c b) b a) a c)\\<^esub> a)", "apply(rule 2)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>\\<forall>i.\n                (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c) =\n                (b <\\<^bsub>below (below (below (P i) c b) b a) a\n                             c\\<^esub> a);\n     (\\<lambda>p. below (below (P p) c b) b a) \\<in> Prof;\n     (\\<lambda>p. below (below (below (P p) c b) b a) a c) \\<in> Prof;\n     a \\<noteq> b \\<and> a \\<noteq> c \\<and> b \\<noteq> c;\n     \\<And>a b a' b' P P'.\n        \\<lbrakk>a \\<noteq> b; a' \\<noteq> b'; a \\<noteq> b'; b \\<noteq> a';\n         P \\<in> Prof; P' \\<in> Prof;\n         \\<forall>i.\n            (a <\\<^bsub>P i\\<^esub> b) =\n            (a' <\\<^bsub>P' i\\<^esub> b')\\<rbrakk>\n        \\<Longrightarrow> (a <\\<^bsub>F P\\<^esub> b) =\n                          (a' <\\<^bsub>F P'\\<^esub> b')\\<rbrakk>\n    \\<Longrightarrow> b \\<noteq> c\n 2. \\<lbrakk>\\<forall>i.\n                (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c) =\n                (b <\\<^bsub>below (below (below (P i) c b) b a) a\n                             c\\<^esub> a);\n     (\\<lambda>p. below (below (P p) c b) b a) \\<in> Prof;\n     (\\<lambda>p. below (below (below (P p) c b) b a) a c) \\<in> Prof;\n     a \\<noteq> b \\<and> a \\<noteq> c \\<and> b \\<noteq> c;\n     \\<And>a b a' b' P P'.\n        \\<lbrakk>a \\<noteq> b; a' \\<noteq> b'; a \\<noteq> b'; b \\<noteq> a';\n         P \\<in> Prof; P' \\<in> Prof;\n         \\<forall>i.\n            (a <\\<^bsub>P i\\<^esub> b) =\n            (a' <\\<^bsub>P' i\\<^esub> b')\\<rbrakk>\n        \\<Longrightarrow> (a <\\<^bsub>F P\\<^esub> b) =\n                          (a' <\\<^bsub>F P'\\<^esub> b')\\<rbrakk>\n    \\<Longrightarrow> b \\<noteq> a\n 3. \\<lbrakk>\\<forall>i.\n                (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c) =\n                (b <\\<^bsub>below (below (below (P i) c b) b a) a\n                             c\\<^esub> a);\n     (\\<lambda>p. below (below (P p) c b) b a) \\<in> Prof;\n     (\\<lambda>p. below (below (below (P p) c b) b a) a c) \\<in> Prof;\n     a \\<noteq> b \\<and> a \\<noteq> c \\<and> b \\<noteq> c;\n     \\<And>a b a' b' P P'.\n        \\<lbrakk>a \\<noteq> b; a' \\<noteq> b'; a \\<noteq> b'; b \\<noteq> a';\n         P \\<in> Prof; P' \\<in> Prof;\n         \\<forall>i.\n            (a <\\<^bsub>P i\\<^esub> b) =\n            (a' <\\<^bsub>P' i\\<^esub> b')\\<rbrakk>\n        \\<Longrightarrow> (a <\\<^bsub>F P\\<^esub> b) =\n                          (a' <\\<^bsub>F P'\\<^esub> b')\\<rbrakk>\n    \\<Longrightarrow> b \\<noteq> a\n 4. \\<lbrakk>\\<forall>i.\n                (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c) =\n                (b <\\<^bsub>below (below (below (P i) c b) b a) a\n                             c\\<^esub> a);\n     (\\<lambda>p. below (below (P p) c b) b a) \\<in> Prof;\n     (\\<lambda>p. below (below (below (P p) c b) b a) a c) \\<in> Prof;\n     a \\<noteq> b \\<and> a \\<noteq> c \\<and> b \\<noteq> c;\n     \\<And>a b a' b' P P'.\n        \\<lbrakk>a \\<noteq> b; a' \\<noteq> b'; a \\<noteq> b'; b \\<noteq> a';\n         P \\<in> Prof; P' \\<in> Prof;\n         \\<forall>i.\n            (a <\\<^bsub>P i\\<^esub> b) =\n            (a' <\\<^bsub>P' i\\<^esub> b')\\<rbrakk>\n        \\<Longrightarrow> (a <\\<^bsub>F P\\<^esub> b) =\n                          (a' <\\<^bsub>F P'\\<^esub> b')\\<rbrakk>\n    \\<Longrightarrow> c \\<noteq> b\n 5. \\<lbrakk>\\<forall>i.\n                (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c) =\n                (b <\\<^bsub>below (below (below (P i) c b) b a) a\n                             c\\<^esub> a);\n     (\\<lambda>p. below (below (P p) c b) b a) \\<in> Prof;\n     (\\<lambda>p. below (below (below (P p) c b) b a) a c) \\<in> Prof;\n     a \\<noteq> b \\<and> a \\<noteq> c \\<and> b \\<noteq> c;\n     \\<And>a b a' b' P P'.\n        \\<lbrakk>a \\<noteq> b; a' \\<noteq> b'; a \\<noteq> b'; b \\<noteq> a';\n         P \\<in> Prof; P' \\<in> Prof;\n         \\<forall>i.\n            (a <\\<^bsub>P i\\<^esub> b) =\n            (a' <\\<^bsub>P' i\\<^esub> b')\\<rbrakk>\n        \\<Longrightarrow> (a <\\<^bsub>F P\\<^esub> b) =\n                          (a' <\\<^bsub>F P'\\<^esub> b')\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>p. below (below (P p) c b) b a) \\<in> Prof\n 6. \\<lbrakk>\\<forall>i.\n                (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c) =\n                (b <\\<^bsub>below (below (below (P i) c b) b a) a\n                             c\\<^esub> a);\n     (\\<lambda>p. below (below (P p) c b) b a) \\<in> Prof;\n     (\\<lambda>p. below (below (below (P p) c b) b a) a c) \\<in> Prof;\n     a \\<noteq> b \\<and> a \\<noteq> c \\<and> b \\<noteq> c;\n     \\<And>a b a' b' P P'.\n        \\<lbrakk>a \\<noteq> b; a' \\<noteq> b'; a \\<noteq> b'; b \\<noteq> a';\n         P \\<in> Prof; P' \\<in> Prof;\n         \\<forall>i.\n            (a <\\<^bsub>P i\\<^esub> b) =\n            (a' <\\<^bsub>P' i\\<^esub> b')\\<rbrakk>\n        \\<Longrightarrow> (a <\\<^bsub>F P\\<^esub> b) =\n                          (a' <\\<^bsub>F P'\\<^esub> b')\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>p. below (below (below (P p) c b) b a) a c)\n                      \\<in> Prof\n 7. \\<lbrakk>\\<forall>i.\n                (b <\\<^bsub>below (below (P i) c b) b a\\<^esub> c) =\n                (b <\\<^bsub>below (below (below (P i) c b) b a) a\n                             c\\<^esub> a);\n     (\\<lambda>p. below (below (P p) c b) b a) \\<in> Prof;\n     (\\<lambda>p. below (below (below (P p) c b) b a) a c) \\<in> Prof;\n     a \\<noteq> b \\<and> a \\<noteq> c \\<and> b \\<noteq> c;\n     \\<And>a b a' b' P P'.\n        \\<lbrakk>a \\<noteq> b; a' \\<noteq> b'; a \\<noteq> b'; b \\<noteq> a';\n         P \\<in> Prof; P' \\<in> Prof;\n         \\<forall>i.\n            (a <\\<^bsub>P i\\<^esub> b) =\n            (a' <\\<^bsub>P' i\\<^esub> b')\\<rbrakk>\n        \\<Longrightarrow> (a <\\<^bsub>F P\\<^esub> b) =\n                          (a' <\\<^bsub>F P'\\<^esub> b')\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i.\n                         (b <\\<^bsub>below (below (P i) c b) b\na\\<^esub> c) =\n                         (b <\\<^bsub>below (below (below (P i) c b) b a) a\nc\\<^esub> a)", "by fast+"], ["proof (state)\nthis:\n  (b <\\<^bsub>F (\\<lambda>p. below (below (P p) c b) b a)\\<^esub> c) =\n  (b <\\<^bsub>F (\\<lambda>p.\n                    below (below (below (P p) c b) b a) a c)\\<^esub> a)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "have \"\\<forall>i. (b,a) : ?S i \\<longleftrightarrow> (a,b) : P i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (b <\\<^bsub>below (below (below (P i) c b) b a) a c\\<^esub> a) =\n       (a <\\<^bsub>P i\\<^esub> b)", "using \\<open>P : Prof\\<close> dist"], ["proof (prove)\nusing this:\n  P \\<in> Prof\n  distinct [a, b, c]\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (b <\\<^bsub>below (below (below (P i) c b) b a) a c\\<^esub> a) =\n       (a <\\<^bsub>P i\\<^esub> b)", "by(auto simp add:in_below Prof_def Pi_def below_Lin)"], ["proof (state)\nthis:\n  \\<forall>i.\n     (b <\\<^bsub>below (below (below (P i) c b) b a) a c\\<^esub> a) =\n     (a <\\<^bsub>P i\\<^esub> b)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "hence \"\\<forall>i. (b,a) : ?S i \\<longleftrightarrow> (b,a) : P' i\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (b <\\<^bsub>below (below (below (P i) c b) b a) a c\\<^esub> a) =\n     (a <\\<^bsub>P i\\<^esub> b)\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (b <\\<^bsub>below (below (below (P i) c b) b a) a c\\<^esub> a) =\n       (b <\\<^bsub>P' i\\<^esub> a)", "using iff"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (b <\\<^bsub>below (below (below (P i) c b) b a) a c\\<^esub> a) =\n     (a <\\<^bsub>P i\\<^esub> b)\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (b <\\<^bsub>P' i\\<^esub> a)\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (b <\\<^bsub>below (below (below (P i) c b) b a) a c\\<^esub> a) =\n       (b <\\<^bsub>P' i\\<^esub> a)", "by blast"], ["proof (state)\nthis:\n  \\<forall>i.\n     (b <\\<^bsub>below (below (below (P i) c b) b a) a c\\<^esub> a) =\n     (b <\\<^bsub>P' i\\<^esub> a)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "hence ba: \"(b,a) : F ?S \\<longleftrightarrow> (b,a) : F P'\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (b <\\<^bsub>below (below (below (P i) c b) b a) a c\\<^esub> a) =\n     (b <\\<^bsub>P' i\\<^esub> a)\n\ngoal (1 subgoal):\n 1. (b <\\<^bsub>F (\\<lambda>p.\n                      below (below (below (P p) c b) b a) a c)\\<^esub> a) =\n    (b <\\<^bsub>F P'\\<^esub> a)", "using \\<open>IIA F\\<close> \\<open>P' : Prof\\<close> \\<open>?S : Prof\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (b <\\<^bsub>below (below (below (P i) c b) b a) a c\\<^esub> a) =\n     (b <\\<^bsub>P' i\\<^esub> a)\n  IIA F\n  P' \\<in> Prof\n  (\\<lambda>p. below (below (below (P p) c b) b a) a c) \\<in> Prof\n\ngoal (1 subgoal):\n 1. (b <\\<^bsub>F (\\<lambda>p.\n                      below (below (below (P p) c b) b a) a c)\\<^esub> a) =\n    (b <\\<^bsub>F P'\\<^esub> a)", "unfolding IIA_def"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (b <\\<^bsub>below (below (below (P i) c b) b a) a c\\<^esub> a) =\n     (b <\\<^bsub>P' i\\<^esub> a)\n  \\<forall>P\\<in>Prof.\n     \\<forall>P'\\<in>Prof.\n        \\<forall>a b.\n           (\\<forall>i.\n               (a <\\<^bsub>P i\\<^esub> b) =\n               (a <\\<^bsub>P' i\\<^esub> b)) \\<longrightarrow>\n           (a <\\<^bsub>F P\\<^esub> b) = (a <\\<^bsub>F P'\\<^esub> b)\n  P' \\<in> Prof\n  (\\<lambda>p. below (below (below (P p) c b) b a) a c) \\<in> Prof\n\ngoal (1 subgoal):\n 1. (b <\\<^bsub>F (\\<lambda>p.\n                      below (below (below (P p) c b) b a) a c)\\<^esub> a) =\n    (b <\\<^bsub>F P'\\<^esub> a)", "by fast"], ["proof (state)\nthis:\n  (b <\\<^bsub>F (\\<lambda>p.\n                    below (below (below (P p) c b) b a) a c)\\<^esub> a) =\n  (b <\\<^bsub>F P'\\<^esub> a)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "from ab ac bc ba"], ["proof (chain)\npicking this:\n  (a <\\<^bsub>F P\\<^esub> b) =\n  (a <\\<^bsub>F (\\<lambda>p. below (P p) c b)\\<^esub> c)\n  (a <\\<^bsub>F (\\<lambda>p. below (P p) c b)\\<^esub> c) =\n  (b <\\<^bsub>F (\\<lambda>p. below (below (P p) c b) b a)\\<^esub> c)\n  (b <\\<^bsub>F (\\<lambda>p. below (below (P p) c b) b a)\\<^esub> c) =\n  (b <\\<^bsub>F (\\<lambda>p.\n                    below (below (below (P p) c b) b a) a c)\\<^esub> a)\n  (b <\\<^bsub>F (\\<lambda>p.\n                    below (below (below (P p) c b) b a) a c)\\<^esub> a) =\n  (b <\\<^bsub>F P'\\<^esub> a)", "have \"(a,b) : F P \\<longleftrightarrow> (b,a) : F P'\""], ["proof (prove)\nusing this:\n  (a <\\<^bsub>F P\\<^esub> b) =\n  (a <\\<^bsub>F (\\<lambda>p. below (P p) c b)\\<^esub> c)\n  (a <\\<^bsub>F (\\<lambda>p. below (P p) c b)\\<^esub> c) =\n  (b <\\<^bsub>F (\\<lambda>p. below (below (P p) c b) b a)\\<^esub> c)\n  (b <\\<^bsub>F (\\<lambda>p. below (below (P p) c b) b a)\\<^esub> c) =\n  (b <\\<^bsub>F (\\<lambda>p.\n                    below (below (below (P p) c b) b a) a c)\\<^esub> a)\n  (b <\\<^bsub>F (\\<lambda>p.\n                    below (below (below (P p) c b) b a) a c)\\<^esub> a) =\n  (b <\\<^bsub>F P'\\<^esub> a)\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (b <\\<^bsub>F P'\\<^esub> a)", "by simp"], ["proof (state)\nthis:\n  (a <\\<^bsub>F P\\<^esub> b) = (b <\\<^bsub>F P'\\<^esub> a)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?b2 <\\<^bsub>?P'2 i\\<^esub> ?a2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?b2 <\\<^bsub>F ?P'2\\<^esub> ?a2)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "note 3 = this"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?b2 <\\<^bsub>?P'2 i\\<^esub> ?a2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?b2 <\\<^bsub>F ?P'2\\<^esub> ?a2)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?b2 <\\<^bsub>?P'2 i\\<^esub> ?a2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?b2 <\\<^bsub>F ?P'2\\<^esub> ?a2)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "fix a b c P P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "assume A: \"a\\<noteq>b\" \"b\\<noteq>c\" \"a\\<noteq>c\" \"P : Prof\" \"P' : Prof\" and\n      iff: \"\\<forall>i. (a,b) : P i \\<longleftrightarrow> (b,c) : P' i\""], ["proof (state)\nthis:\n  a \\<noteq> b\n  b \\<noteq> c\n  a \\<noteq> c\n  P \\<in> Prof\n  P' \\<in> Prof\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (b <\\<^bsub>P' i\\<^esub> c)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "hence \"\\<forall>i. (b,a) : (converse o P)i \\<longleftrightarrow> (b,c) : P' i\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  b \\<noteq> c\n  a \\<noteq> c\n  P \\<in> Prof\n  P' \\<in> Prof\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (b <\\<^bsub>P' i\\<^esub> c)\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (b <\\<^bsub>(converse \\<circ> P) i\\<^esub> a) =\n       (b <\\<^bsub>P' i\\<^esub> c)", "by simp"], ["proof (state)\nthis:\n  \\<forall>i.\n     (b <\\<^bsub>(converse \\<circ> P) i\\<^esub> a) =\n     (b <\\<^bsub>P' i\\<^esub> c)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "moreover"], ["proof (state)\nthis:\n  \\<forall>i.\n     (b <\\<^bsub>(converse \\<circ> P) i\\<^esub> a) =\n     (b <\\<^bsub>P' i\\<^esub> c)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "have cP: \"converse o P : Prof\""], ["proof (prove)\ngoal (1 subgoal):\n 1. converse \\<circ> P \\<in> Prof", "using \\<open>P:Prof\\<close>"], ["proof (prove)\nusing this:\n  P \\<in> Prof\n\ngoal (1 subgoal):\n 1. converse \\<circ> P \\<in> Prof", "by(simp add:Prof_def Pi_def)"], ["proof (state)\nthis:\n  converse \\<circ> P \\<in> Prof\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     (b <\\<^bsub>(converse \\<circ> P) i\\<^esub> a) =\n     (b <\\<^bsub>P' i\\<^esub> c)\n  converse \\<circ> P \\<in> Prof", "have \"(b,a) : F(converse o P) \\<longleftrightarrow> (b,c) : F P'\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (b <\\<^bsub>(converse \\<circ> P) i\\<^esub> a) =\n     (b <\\<^bsub>P' i\\<^esub> c)\n  converse \\<circ> P \\<in> Prof\n\ngoal (1 subgoal):\n 1. (b <\\<^bsub>F (converse \\<circ> P)\\<^esub> a) =\n    (b <\\<^bsub>F P'\\<^esub> c)", "using A 2"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (b <\\<^bsub>(converse \\<circ> P) i\\<^esub> a) =\n     (b <\\<^bsub>P' i\\<^esub> c)\n  converse \\<circ> P \\<in> Prof\n  a \\<noteq> b\n  b \\<noteq> c\n  a \\<noteq> c\n  P \\<in> Prof\n  P' \\<in> Prof\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?a'2 \\<noteq> ?b'2; ?a2 \\<noteq> ?b'2;\n   ?b2 \\<noteq> ?a'2; ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?a'2 <\\<^bsub>?P'2 i\\<^esub> ?b'2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?a'2 <\\<^bsub>F ?P'2\\<^esub> ?b'2)\n\ngoal (1 subgoal):\n 1. (b <\\<^bsub>F (converse \\<circ> P)\\<^esub> a) =\n    (b <\\<^bsub>F P'\\<^esub> c)", "by metis"], ["proof (state)\nthis:\n  (b <\\<^bsub>F (converse \\<circ> P)\\<^esub> a) =\n  (b <\\<^bsub>F P'\\<^esub> c)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "moreover"], ["proof (state)\nthis:\n  (b <\\<^bsub>F (converse \\<circ> P)\\<^esub> a) =\n  (b <\\<^bsub>F P'\\<^esub> c)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "have \"(a,b) : F P \\<longleftrightarrow> (b,a) : F(converse o P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) =\n    (b <\\<^bsub>F (converse \\<circ> P)\\<^esub> a)", "by (rule 3[OF \\<open>a\\<noteq>b\\<close> \\<open>P:Prof\\<close> cP]) simp"], ["proof (state)\nthis:\n  (a <\\<^bsub>F P\\<^esub> b) = (b <\\<^bsub>F (converse \\<circ> P)\\<^esub> a)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "ultimately"], ["proof (chain)\npicking this:\n  (b <\\<^bsub>F (converse \\<circ> P)\\<^esub> a) =\n  (b <\\<^bsub>F P'\\<^esub> c)\n  (a <\\<^bsub>F P\\<^esub> b) = (b <\\<^bsub>F (converse \\<circ> P)\\<^esub> a)", "have \"(a,b) : F P \\<longleftrightarrow> (b,c) : F P'\""], ["proof (prove)\nusing this:\n  (b <\\<^bsub>F (converse \\<circ> P)\\<^esub> a) =\n  (b <\\<^bsub>F P'\\<^esub> c)\n  (a <\\<^bsub>F P\\<^esub> b) = (b <\\<^bsub>F (converse \\<circ> P)\\<^esub> a)\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (b <\\<^bsub>F P'\\<^esub> c)", "by blast"], ["proof (state)\nthis:\n  (a <\\<^bsub>F P\\<^esub> b) = (b <\\<^bsub>F P'\\<^esub> c)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?b2 \\<noteq> ?c2; ?a2 \\<noteq> ?c2;\n   ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?b2 <\\<^bsub>?P'2 i\\<^esub> ?c2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?b2 <\\<^bsub>F ?P'2\\<^esub> ?c2)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "note 4 = this"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?b2 \\<noteq> ?c2; ?a2 \\<noteq> ?c2;\n   ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?b2 <\\<^bsub>?P'2 i\\<^esub> ?c2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?b2 <\\<^bsub>F ?P'2\\<^esub> ?c2)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?b2 \\<noteq> ?c2; ?a2 \\<noteq> ?c2;\n   ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?b2 <\\<^bsub>?P'2 i\\<^esub> ?c2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?b2 <\\<^bsub>F ?P'2\\<^esub> ?c2)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "fix a b a' b' :: alt and P P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "assume A: \"a\\<noteq>b\" \"a'\\<noteq>b'\" \"P : Prof\" \"P' : Prof\"\n      \"\\<forall>i. (a,b) : P i \\<longleftrightarrow> (a',b') : P' i\""], ["proof (state)\nthis:\n  a \\<noteq> b\n  a' \\<noteq> b'\n  P \\<in> Prof\n  P' \\<in> Prof\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (a' <\\<^bsub>P' i\\<^esub> b')\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "have \"(a,b) : F P \\<longleftrightarrow> (a',b') : F P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "assume \"a\\<noteq>b' & b\\<noteq>a'\""], ["proof (state)\nthis:\n  a \\<noteq> b' \\<and> b \\<noteq> a'\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "hence ?thesis"], ["proof (prove)\nusing this:\n  a \\<noteq> b' \\<and> b \\<noteq> a'\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "using 2 A"], ["proof (prove)\nusing this:\n  a \\<noteq> b' \\<and> b \\<noteq> a'\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?a'2 \\<noteq> ?b'2; ?a2 \\<noteq> ?b'2;\n   ?b2 \\<noteq> ?a'2; ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?a'2 <\\<^bsub>?P'2 i\\<^esub> ?b'2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?a'2 <\\<^bsub>F ?P'2\\<^esub> ?b'2)\n  a \\<noteq> b\n  a' \\<noteq> b'\n  P \\<in> Prof\n  P' \\<in> Prof\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (a' <\\<^bsub>P' i\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "by blast"], ["proof (state)\nthis:\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "}"], ["proof (state)\nthis:\n  a \\<noteq> b' \\<and> b \\<noteq> a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "moreover"], ["proof (state)\nthis:\n  a \\<noteq> b' \\<and> b \\<noteq> a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "{"], ["proof (state)\nthis:\n  a \\<noteq> b' \\<and> b \\<noteq> a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "assume \"a=b' & b\\<noteq>a'\""], ["proof (state)\nthis:\n  a = b' \\<and> b \\<noteq> a'\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "hence ?thesis"], ["proof (prove)\nusing this:\n  a = b' \\<and> b \\<noteq> a'\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "using 4 A"], ["proof (prove)\nusing this:\n  a = b' \\<and> b \\<noteq> a'\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?b2 \\<noteq> ?c2; ?a2 \\<noteq> ?c2;\n   ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?b2 <\\<^bsub>?P'2 i\\<^esub> ?c2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?b2 <\\<^bsub>F ?P'2\\<^esub> ?c2)\n  a \\<noteq> b\n  a' \\<noteq> b'\n  P \\<in> Prof\n  P' \\<in> Prof\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (a' <\\<^bsub>P' i\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "by blast"], ["proof (state)\nthis:\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "}"], ["proof (state)\nthis:\n  a = b' \\<and> b \\<noteq> a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "moreover"], ["proof (state)\nthis:\n  a = b' \\<and> b \\<noteq> a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "{"], ["proof (state)\nthis:\n  a = b' \\<and> b \\<noteq> a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "assume \"a\\<noteq>b' & b=a'\""], ["proof (state)\nthis:\n  a \\<noteq> b' \\<and> b = a'\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "hence ?thesis"], ["proof (prove)\nusing this:\n  a \\<noteq> b' \\<and> b = a'\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "using 4 A"], ["proof (prove)\nusing this:\n  a \\<noteq> b' \\<and> b = a'\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?b2 \\<noteq> ?c2; ?a2 \\<noteq> ?c2;\n   ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?b2 <\\<^bsub>?P'2 i\\<^esub> ?c2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?b2 <\\<^bsub>F ?P'2\\<^esub> ?c2)\n  a \\<noteq> b\n  a' \\<noteq> b'\n  P \\<in> Prof\n  P' \\<in> Prof\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (a' <\\<^bsub>P' i\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "by blast"], ["proof (state)\nthis:\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "}"], ["proof (state)\nthis:\n  a \\<noteq> b' \\<and> b = a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "moreover"], ["proof (state)\nthis:\n  a \\<noteq> b' \\<and> b = a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "{"], ["proof (state)\nthis:\n  a \\<noteq> b' \\<and> b = a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "assume \"a=b' & b=a'\""], ["proof (state)\nthis:\n  a = b' \\<and> b = a'\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "hence ?thesis"], ["proof (prove)\nusing this:\n  a = b' \\<and> b = a'\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "using 3 A"], ["proof (prove)\nusing this:\n  a = b' \\<and> b = a'\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?P2 \\<in> Prof; ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?b2 <\\<^bsub>?P'2 i\\<^esub> ?a2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?b2 <\\<^bsub>F ?P'2\\<^esub> ?a2)\n  a \\<noteq> b\n  a' \\<noteq> b'\n  P \\<in> Prof\n  P' \\<in> Prof\n  \\<forall>i. (a <\\<^bsub>P i\\<^esub> b) = (a' <\\<^bsub>P' i\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "by blast"], ["proof (state)\nthis:\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "}"], ["proof (state)\nthis:\n  a = b' \\<and> b = a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "ultimately"], ["proof (chain)\npicking this:\n  a \\<noteq> b' \\<and> b \\<noteq> a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n  a = b' \\<and> b \\<noteq> a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n  a \\<noteq> b' \\<and> b = a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n  a = b' \\<and> b = a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<noteq> b' \\<and> b \\<noteq> a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n  a = b' \\<and> b \\<noteq> a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n  a \\<noteq> b' \\<and> b = a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n  a = b' \\<and> b = a' \\<Longrightarrow>\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal (1 subgoal):\n 1. (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')", "by blast"], ["proof (state)\nthis:\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (a <\\<^bsub>F P\\<^esub> b) = (a' <\\<^bsub>F P'\\<^esub> b')\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?a'2 \\<noteq> ?b'2; ?P2 \\<in> Prof;\n   ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?a'2 <\\<^bsub>?P'2 i\\<^esub> ?b'2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?a'2 <\\<^bsub>F ?P'2\\<^esub> ?b'2)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "note pairwise_neutrality = this"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 \\<noteq> ?b2; ?a'2 \\<noteq> ?b'2; ?P2 \\<in> Prof;\n   ?P'2 \\<in> Prof;\n   \\<forall>i.\n      (?a2 <\\<^bsub>?P2 i\\<^esub> ?b2) =\n      (?a'2 <\\<^bsub>?P'2 i\\<^esub> ?b'2)\\<rbrakk>\n  \\<Longrightarrow> (?a2 <\\<^bsub>F ?P2\\<^esub> ?b2) =\n                    (?a'2 <\\<^bsub>F ?P'2\\<^esub> ?b'2)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "obtain h :: \"indi \\<Rightarrow> nat\" where\n    injh: \"inj h\" and surjh: \"h ` I = {0..<N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>inj h; range h = {0..<N}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(metis ex_bij_betw_finite_nat[OF finite_indi] bij_betw_def)"], ["proof (state)\nthis:\n  inj h\n  range h = {0..<N}\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "obtain a b :: alt where \"a \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a b. a \\<noteq> b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using alt3"], ["proof (prove)\nusing this:\n  \\<exists>a b c. distinct [a, b, c]\n\ngoal (1 subgoal):\n 1. (\\<And>a b. a \\<noteq> b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "obtain Lab where \"(a,b) : Lab\" \"Lab:Lin\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Lab.\n        \\<lbrakk>a <\\<^bsub>Lab\\<^esub> b; Lab \\<in> Lin\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>a\\<noteq>b\\<close>"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<And>Lab.\n        \\<lbrakk>a <\\<^bsub>Lab\\<^esub> b; Lab \\<in> Lin\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis complete_Lin)"], ["proof (state)\nthis:\n  a <\\<^bsub>Lab\\<^esub> b\n  Lab \\<in> Lin\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "hence \"(b,a) \\<notin> Lab\""], ["proof (prove)\nusing this:\n  a <\\<^bsub>Lab\\<^esub> b\n  Lab \\<in> Lin\n\ngoal (1 subgoal):\n 1. (b, a) \\<notin> Lab", "by(simp add:slo_defs trans_def) metis"], ["proof (state)\nthis:\n  (b, a) \\<notin> Lab\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "obtain Lba where \"(b,a) : Lba\" \"Lba:Lin\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Lba.\n        \\<lbrakk>b <\\<^bsub>Lba\\<^esub> a; Lba \\<in> Lin\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>a\\<noteq>b\\<close>"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<And>Lba.\n        \\<lbrakk>b <\\<^bsub>Lba\\<^esub> a; Lba \\<in> Lin\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis complete_Lin)"], ["proof (state)\nthis:\n  b <\\<^bsub>Lba\\<^esub> a\n  Lba \\<in> Lin\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "hence \"(a,b) \\<notin> Lba\""], ["proof (prove)\nusing this:\n  b <\\<^bsub>Lba\\<^esub> a\n  Lba \\<in> Lin\n\ngoal (1 subgoal):\n 1. (a, b) \\<notin> Lba", "by(simp add:slo_defs trans_def) metis"], ["proof (state)\nthis:\n  (a, b) \\<notin> Lba\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "let ?Pi = \"%n. %i. if h i < n then Lab else Lba\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "have PiProf: \"!!n. ?Pi n : Prof\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. (\\<lambda>i. if h i < n then Lab else Lba) \\<in> Prof", "using \\<open>Lab:Lin\\<close> \\<open>Lba:Lin\\<close>"], ["proof (prove)\nusing this:\n  Lab \\<in> Lin\n  Lba \\<in> Lin\n\ngoal (1 subgoal):\n 1. \\<And>n. (\\<lambda>i. if h i < n then Lab else Lba) \\<in> Prof", "unfolding Prof_def Pi_def"], ["proof (prove)\nusing this:\n  Lab \\<in> Lin\n  Lba \\<in> Lin\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (\\<lambda>i. if h i < n then Lab else Lba)\n       \\<in> {f. \\<forall>x. x \\<in> I \\<longrightarrow> f x \\<in> Lin}", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>i. if h i < ?n then Lab else Lba) \\<in> Prof\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "have \"\\<exists>n<N. (\\<forall>m\\<le>n. (b,a) : F(?Pi m)) & (a,b) : F(?Pi(n+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n<N.\n       (\\<forall>m\\<le>n.\n           b <\\<^bsub>F (\\<lambda>i.\n                            if h i < m then Lab else Lba)\\<^esub> a) \\<and>\n       a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n<N.\n       (\\<forall>m\\<le>n.\n           b <\\<^bsub>F (\\<lambda>i.\n                            if h i < m then Lab else Lba)\\<^esub> a) \\<and>\n       a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b", "have 0: \"!!n. F(?Pi n) : Lin\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. F (\\<lambda>i. if h i < n then Lab else Lba) \\<in> Lin", "using \\<open>F : SWF\\<close> PiProf"], ["proof (prove)\nusing this:\n  F \\<in> SWF\n  (\\<lambda>i. if h i < ?n then Lab else Lba) \\<in> Prof\n\ngoal (1 subgoal):\n 1. \\<And>n. F (\\<lambda>i. if h i < n then Lab else Lba) \\<in> Lin", "by(simp add:Pi_def)"], ["proof (state)\nthis:\n  F (\\<lambda>i. if h i < ?n then Lab else Lba) \\<in> Lin\n\ngoal (1 subgoal):\n 1. \\<exists>n<N.\n       (\\<forall>m\\<le>n.\n           b <\\<^bsub>F (\\<lambda>i.\n                            if h i < m then Lab else Lba)\\<^esub> a) \\<and>\n       a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b", "have \"F(%i. Lba):Lin\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>i. Lba) \\<in> Lin", "using \\<open>F:SWF\\<close> \\<open>Lba:Lin\\<close>"], ["proof (prove)\nusing this:\n  F \\<in> SWF\n  Lba \\<in> Lin\n\ngoal (1 subgoal):\n 1. F (\\<lambda>i. Lba) \\<in> Lin", "by(simp add:Prof_def Pi_def)"], ["proof (state)\nthis:\n  F (\\<lambda>i. Lba) \\<in> Lin\n\ngoal (1 subgoal):\n 1. \\<exists>n<N.\n       (\\<forall>m\\<le>n.\n           b <\\<^bsub>F (\\<lambda>i.\n                            if h i < m then Lab else Lba)\\<^esub> a) \\<and>\n       a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b", "hence 1: \"(a,b) \\<notin> F(?Pi 0)\""], ["proof (prove)\nusing this:\n  F (\\<lambda>i. Lba) \\<in> Lin\n\ngoal (1 subgoal):\n 1. (a, b) \\<notin> F (\\<lambda>i. if h i < 0 then Lab else Lba)", "using u \\<open>(a,b) \\<notin> Lba\\<close> \\<open>Lba:Lin\\<close> \\<open>Lba:Lin\\<close> \\<open>a\\<noteq>b\\<close>"], ["proof (prove)\nusing this:\n  F (\\<lambda>i. Lba) \\<in> Lin\n  unanimity F\n  (a, b) \\<notin> Lba\n  Lba \\<in> Lin\n  Lba \\<in> Lin\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (a, b) \\<notin> F (\\<lambda>i. if h i < 0 then Lab else Lba)", "by(simp add:unanimity_def notin_Lin_iff const_Lin_Prof)"], ["proof (state)\nthis:\n  (a, b) \\<notin> F (\\<lambda>i. if h i < 0 then Lab else Lba)\n\ngoal (1 subgoal):\n 1. \\<exists>n<N.\n       (\\<forall>m\\<le>n.\n           b <\\<^bsub>F (\\<lambda>i.\n                            if h i < m then Lab else Lba)\\<^esub> a) \\<and>\n       a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b", "have \"?Pi N = (%p. Lab)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. if h i < N then Lab else Lba) = (\\<lambda>p. Lab)", "using surjh [THEN equalityD1]"], ["proof (prove)\nusing this:\n  range h \\<subseteq> {0..<N}\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. if h i < N then Lab else Lba) = (\\<lambda>p. Lab)", "by(auto simp: subset_eq)"], ["proof (state)\nthis:\n  (\\<lambda>i. if h i < N then Lab else Lba) = (\\<lambda>p. Lab)\n\ngoal (1 subgoal):\n 1. \\<exists>n<N.\n       (\\<forall>m\\<le>n.\n           b <\\<^bsub>F (\\<lambda>i.\n                            if h i < m then Lab else Lba)\\<^esub> a) \\<and>\n       a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>i. if h i < N then Lab else Lba) = (\\<lambda>p. Lab)\n\ngoal (1 subgoal):\n 1. \\<exists>n<N.\n       (\\<forall>m\\<le>n.\n           b <\\<^bsub>F (\\<lambda>i.\n                            if h i < m then Lab else Lba)\\<^esub> a) \\<and>\n       a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b", "have \"F(%i. Lab):Lin\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (\\<lambda>i. Lab) \\<in> Lin", "using \\<open>F:SWF\\<close> \\<open>Lab:Lin\\<close>"], ["proof (prove)\nusing this:\n  F \\<in> SWF\n  Lab \\<in> Lin\n\ngoal (1 subgoal):\n 1. F (\\<lambda>i. Lab) \\<in> Lin", "by(simp add:Prof_def Pi_def)"], ["proof (state)\nthis:\n  F (\\<lambda>i. Lab) \\<in> Lin\n\ngoal (1 subgoal):\n 1. \\<exists>n<N.\n       (\\<forall>m\\<le>n.\n           b <\\<^bsub>F (\\<lambda>i.\n                            if h i < m then Lab else Lba)\\<^esub> a) \\<and>\n       a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>i. if h i < N then Lab else Lba) = (\\<lambda>p. Lab)\n  F (\\<lambda>i. Lab) \\<in> Lin", "have 2: \"(a,b) \\<in> F(?Pi N)\""], ["proof (prove)\nusing this:\n  (\\<lambda>i. if h i < N then Lab else Lba) = (\\<lambda>p. Lab)\n  F (\\<lambda>i. Lab) \\<in> Lin\n\ngoal (1 subgoal):\n 1. a <\\<^bsub>F (\\<lambda>i. if h i < N then Lab else Lba)\\<^esub> b", "using u \\<open>(a,b) : Lab\\<close> \\<open>Lab:Lin\\<close>"], ["proof (prove)\nusing this:\n  (\\<lambda>i. if h i < N then Lab else Lba) = (\\<lambda>p. Lab)\n  F (\\<lambda>i. Lab) \\<in> Lin\n  unanimity F\n  a <\\<^bsub>Lab\\<^esub> b\n  Lab \\<in> Lin\n\ngoal (1 subgoal):\n 1. a <\\<^bsub>F (\\<lambda>i. if h i < N then Lab else Lba)\\<^esub> b", "by(simp add:unanimity_def const_Lin_Prof)"], ["proof (state)\nthis:\n  a <\\<^bsub>F (\\<lambda>i. if h i < N then Lab else Lba)\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<exists>n<N.\n       (\\<forall>m\\<le>n.\n           b <\\<^bsub>F (\\<lambda>i.\n                            if h i < m then Lab else Lba)\\<^esub> a) \\<and>\n       a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b", "with ex_least_nat_less[of \"%n. (a,b) : F(?Pi n)\"] 1 2 notin_Lin_iff[OF 0 \\<open>a\\<noteq>b\\<close>]"], ["proof (chain)\npicking this:\n  \\<lbrakk>a <\\<^bsub>F (\\<lambda>i.\n                            if h i < ?n then Lab else Lba)\\<^esub> b;\n   (a, b) \\<notin> F (\\<lambda>i. if h i < 0 then Lab else Lba)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k<?n.\n                       (\\<forall>i\\<le>k.\n                           (a, b)\n                           \\<notin> F (\\<lambda>ia.\n    if h ia < i then Lab else Lba)) \\<and>\n                       a <\\<^bsub>F (\\<lambda>i.\n  if h i < Suc k then Lab else Lba)\\<^esub> b\n  (a, b) \\<notin> F (\\<lambda>i. if h i < 0 then Lab else Lba)\n  a <\\<^bsub>F (\\<lambda>i. if h i < N then Lab else Lba)\\<^esub> b\n  ((a, b) \\<notin> F (\\<lambda>i. if h i < ?n1 then Lab else Lba)) =\n  (b <\\<^bsub>F (\\<lambda>i. if h i < ?n1 then Lab else Lba)\\<^esub> a)\n  a <\\<^bsub>F (\\<lambda>i. if h i < N then Lab else Lba)\\<^esub> b", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>a <\\<^bsub>F (\\<lambda>i.\n                            if h i < ?n then Lab else Lba)\\<^esub> b;\n   (a, b) \\<notin> F (\\<lambda>i. if h i < 0 then Lab else Lba)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k<?n.\n                       (\\<forall>i\\<le>k.\n                           (a, b)\n                           \\<notin> F (\\<lambda>ia.\n    if h ia < i then Lab else Lba)) \\<and>\n                       a <\\<^bsub>F (\\<lambda>i.\n  if h i < Suc k then Lab else Lba)\\<^esub> b\n  (a, b) \\<notin> F (\\<lambda>i. if h i < 0 then Lab else Lba)\n  a <\\<^bsub>F (\\<lambda>i. if h i < N then Lab else Lba)\\<^esub> b\n  ((a, b) \\<notin> F (\\<lambda>i. if h i < ?n1 then Lab else Lba)) =\n  (b <\\<^bsub>F (\\<lambda>i. if h i < ?n1 then Lab else Lba)\\<^esub> a)\n  a <\\<^bsub>F (\\<lambda>i. if h i < N then Lab else Lba)\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<exists>n<N.\n       (\\<forall>m\\<le>n.\n           b <\\<^bsub>F (\\<lambda>i.\n                            if h i < m then Lab else Lba)\\<^esub> a) \\<and>\n       a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b", "by simp"], ["proof (state)\nthis:\n  \\<exists>n<N.\n     (\\<forall>m\\<le>n.\n         b <\\<^bsub>F (\\<lambda>i.\n                          if h i < m then Lab else Lba)\\<^esub> a) \\<and>\n     a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>n<N.\n     (\\<forall>m\\<le>n.\n         b <\\<^bsub>F (\\<lambda>i.\n                          if h i < m then Lab else Lba)\\<^esub> a) \\<and>\n     a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "then"], ["proof (chain)\npicking this:\n  \\<exists>n<N.\n     (\\<forall>m\\<le>n.\n         b <\\<^bsub>F (\\<lambda>i.\n                          if h i < m then Lab else Lba)\\<^esub> a) \\<and>\n     a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b", "obtain n where n: \"n<N\" \"\\<forall>m\\<le>n. (b,a) : F(?Pi m)\" \"(a,b) : F(?Pi(n+1))\""], ["proof (prove)\nusing this:\n  \\<exists>n<N.\n     (\\<forall>m\\<le>n.\n         b <\\<^bsub>F (\\<lambda>i.\n                          if h i < m then Lab else Lba)\\<^esub> a) \\<and>\n     a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n < N;\n         \\<forall>m\\<le>n.\n            b <\\<^bsub>F (\\<lambda>i.\n                             if h i < m then Lab else Lba)\\<^esub> a;\n         a <\\<^bsub>F (\\<lambda>i.\n                          if h i < n + 1 then Lab\n                          else Lba)\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  n < N\n  \\<forall>m\\<le>n.\n     b <\\<^bsub>F (\\<lambda>i. if h i < m then Lab else Lba)\\<^esub> a\n  a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "have \"dictator F (inv h n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dictator F (inv h n)", "proof (rule dictatorI [OF \\<open>F : SWF\\<close>], auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P a b.\n       \\<lbrakk>P \\<in> Prof; a \\<noteq> b;\n        a <\\<^bsub>P (inv h n)\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "fix P c d"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P a b.\n       \\<lbrakk>P \\<in> Prof; a \\<noteq> b;\n        a <\\<^bsub>P (inv h n)\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "assume \"P \\<in> Prof\" \"c\\<noteq>d\" \"(c,d) \\<in> P(inv h n)\""], ["proof (state)\nthis:\n  P \\<in> Prof\n  c \\<noteq> d\n  c <\\<^bsub>P (inv h n)\\<^esub> d\n\ngoal (1 subgoal):\n 1. \\<And>P a b.\n       \\<lbrakk>P \\<in> Prof; a \\<noteq> b;\n        a <\\<^bsub>P (inv h n)\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "then"], ["proof (chain)\npicking this:\n  P \\<in> Prof\n  c \\<noteq> d\n  c <\\<^bsub>P (inv h n)\\<^esub> d", "obtain e where dist: \"distinct[c,d,e]\""], ["proof (prove)\nusing this:\n  P \\<in> Prof\n  c \\<noteq> d\n  c <\\<^bsub>P (inv h n)\\<^esub> d\n\ngoal (1 subgoal):\n 1. (\\<And>e. distinct [c, d, e] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using third_alt"], ["proof (prove)\nusing this:\n  P \\<in> Prof\n  c \\<noteq> d\n  c <\\<^bsub>P (inv h n)\\<^esub> d\n  ?a \\<noteq> ?b \\<Longrightarrow> \\<exists>c. distinct [?a, ?b, c]\n\ngoal (1 subgoal):\n 1. (\\<And>e. distinct [c, d, e] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  distinct [c, d, e]\n\ngoal (1 subgoal):\n 1. \\<And>P a b.\n       \\<lbrakk>P \\<in> Prof; a \\<noteq> b;\n        a <\\<^bsub>P (inv h n)\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "let ?W = \"%i. if h i < n then mktop (P i) e else\n                  if h i = n then above (P i) c e else mkbot (P i) e\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P a b.\n       \\<lbrakk>P \\<in> Prof; a \\<noteq> b;\n        a <\\<^bsub>P (inv h n)\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "have \"?W : Prof\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        if h i < n then mktop (P i) e\n        else if h i = n then Arrow_Order.above (P i) c e else mkbot (P i) e)\n    \\<in> Prof", "using \\<open>P : Prof\\<close> dist"], ["proof (prove)\nusing this:\n  P \\<in> Prof\n  distinct [c, d, e]\n\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        if h i < n then mktop (P i) e\n        else if h i = n then Arrow_Order.above (P i) c e else mkbot (P i) e)\n    \\<in> Prof", "by(simp add:Pi_def Prof_def mkbot_Lin mktop_Lin above_Lin)"], ["proof (state)\nthis:\n  (\\<lambda>i.\n      if h i < n then mktop (P i) e\n      else if h i = n then Arrow_Order.above (P i) c e else mkbot (P i) e)\n  \\<in> Prof\n\ngoal (1 subgoal):\n 1. \\<And>P a b.\n       \\<lbrakk>P \\<in> Prof; a \\<noteq> b;\n        a <\\<^bsub>P (inv h n)\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "have \"\\<forall>i. (c,d) : P i \\<longleftrightarrow> (c,d) : ?W i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (c <\\<^bsub>P i\\<^esub> d) =\n       (c <\\<^bsub>(if h i < n then mktop (P i) e\n                    else if h i = n then Arrow_Order.above (P i) c e\n                         else mkbot (P i) e)\\<^esub> d)", "using dist \\<open>P : Prof\\<close>"], ["proof (prove)\nusing this:\n  distinct [c, d, e]\n  P \\<in> Prof\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (c <\\<^bsub>P i\\<^esub> d) =\n       (c <\\<^bsub>(if h i < n then mktop (P i) e\n                    else if h i = n then Arrow_Order.above (P i) c e\n                         else mkbot (P i) e)\\<^esub> d)", "by(auto simp: in_above in_mkbot in_mktop Prof_def Pi_def)"], ["proof (state)\nthis:\n  \\<forall>i.\n     (c <\\<^bsub>P i\\<^esub> d) =\n     (c <\\<^bsub>(if h i < n then mktop (P i) e\n                  else if h i = n then Arrow_Order.above (P i) c e\n                       else mkbot (P i) e)\\<^esub> d)\n\ngoal (1 subgoal):\n 1. \\<And>P a b.\n       \\<lbrakk>P \\<in> Prof; a \\<noteq> b;\n        a <\\<^bsub>P (inv h n)\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "hence PW: \"(c,d) : F P \\<longleftrightarrow> (c,d) : F ?W\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (c <\\<^bsub>P i\\<^esub> d) =\n     (c <\\<^bsub>(if h i < n then mktop (P i) e\n                  else if h i = n then Arrow_Order.above (P i) c e\n                       else mkbot (P i) e)\\<^esub> d)\n\ngoal (1 subgoal):\n 1. (c <\\<^bsub>F P\\<^esub> d) =\n    (c <\\<^bsub>F (\\<lambda>i.\n                      if h i < n then mktop (P i) e\n                      else if h i = n then Arrow_Order.above (P i) c e\n                           else mkbot (P i) e)\\<^esub> d)", "using \\<open>IIA F\\<close>[unfolded IIA_def] \\<open>P:Prof\\<close> \\<open>?W:Prof\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (c <\\<^bsub>P i\\<^esub> d) =\n     (c <\\<^bsub>(if h i < n then mktop (P i) e\n                  else if h i = n then Arrow_Order.above (P i) c e\n                       else mkbot (P i) e)\\<^esub> d)\n  \\<forall>P\\<in>Prof.\n     \\<forall>P'\\<in>Prof.\n        \\<forall>a b.\n           (\\<forall>i.\n               (a <\\<^bsub>P i\\<^esub> b) =\n               (a <\\<^bsub>P' i\\<^esub> b)) \\<longrightarrow>\n           (a <\\<^bsub>F P\\<^esub> b) = (a <\\<^bsub>F P'\\<^esub> b)\n  P \\<in> Prof\n  (\\<lambda>i.\n      if h i < n then mktop (P i) e\n      else if h i = n then Arrow_Order.above (P i) c e else mkbot (P i) e)\n  \\<in> Prof\n\ngoal (1 subgoal):\n 1. (c <\\<^bsub>F P\\<^esub> d) =\n    (c <\\<^bsub>F (\\<lambda>i.\n                      if h i < n then mktop (P i) e\n                      else if h i = n then Arrow_Order.above (P i) c e\n                           else mkbot (P i) e)\\<^esub> d)", "by fast"], ["proof (state)\nthis:\n  (c <\\<^bsub>F P\\<^esub> d) =\n  (c <\\<^bsub>F (\\<lambda>i.\n                    if h i < n then mktop (P i) e\n                    else if h i = n then Arrow_Order.above (P i) c e\n                         else mkbot (P i) e)\\<^esub> d)\n\ngoal (1 subgoal):\n 1. \\<And>P a b.\n       \\<lbrakk>P \\<in> Prof; a \\<noteq> b;\n        a <\\<^bsub>P (inv h n)\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "have \"\\<forall>i. (c,e) : ?W i \\<longleftrightarrow> (a,b) : ?Pi (n+1) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (c <\\<^bsub>(if h i < n then mktop (P i) e\n                    else if h i = n then Arrow_Order.above (P i) c e\n                         else mkbot (P i) e)\\<^esub> e) =\n       (a <\\<^bsub>(if h i < n + 1 then Lab else Lba)\\<^esub> b)", "using dist \\<open>P : Prof\\<close>"], ["proof (prove)\nusing this:\n  distinct [c, d, e]\n  P \\<in> Prof\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (c <\\<^bsub>(if h i < n then mktop (P i) e\n                    else if h i = n then Arrow_Order.above (P i) c e\n                         else mkbot (P i) e)\\<^esub> e) =\n       (a <\\<^bsub>(if h i < n + 1 then Lab else Lba)\\<^esub> b)", "by (auto simp: \\<open>(a,b):Lab\\<close> \\<open>(a,b)\\<notin>Lba\\<close>\n        in_mkbot in_mktop in_above Prof_def Pi_def)"], ["proof (state)\nthis:\n  \\<forall>i.\n     (c <\\<^bsub>(if h i < n then mktop (P i) e\n                  else if h i = n then Arrow_Order.above (P i) c e\n                       else mkbot (P i) e)\\<^esub> e) =\n     (a <\\<^bsub>(if h i < n + 1 then Lab else Lba)\\<^esub> b)\n\ngoal (1 subgoal):\n 1. \\<And>P a b.\n       \\<lbrakk>P \\<in> Prof; a \\<noteq> b;\n        a <\\<^bsub>P (inv h n)\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "hence \"(c,e) : F ?W \\<longleftrightarrow> (a,b) : F(?Pi(n+1))\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (c <\\<^bsub>(if h i < n then mktop (P i) e\n                  else if h i = n then Arrow_Order.above (P i) c e\n                       else mkbot (P i) e)\\<^esub> e) =\n     (a <\\<^bsub>(if h i < n + 1 then Lab else Lba)\\<^esub> b)\n\ngoal (1 subgoal):\n 1. (c <\\<^bsub>F (\\<lambda>i.\n                      if h i < n then mktop (P i) e\n                      else if h i = n then Arrow_Order.above (P i) c e\n                           else mkbot (P i) e)\\<^esub> e) =\n    (a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b)", "using pairwise_neutrality[of c e a b ?W \"?Pi(n+1)\"]\n        \\<open>a\\<noteq>b\\<close> dist \\<open>?W : Prof\\<close> PiProf"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (c <\\<^bsub>(if h i < n then mktop (P i) e\n                  else if h i = n then Arrow_Order.above (P i) c e\n                       else mkbot (P i) e)\\<^esub> e) =\n     (a <\\<^bsub>(if h i < n + 1 then Lab else Lba)\\<^esub> b)\n  \\<lbrakk>c \\<noteq> e; a \\<noteq> b;\n   (\\<lambda>i.\n       if h i < n then mktop (P i) e\n       else if h i = n then Arrow_Order.above (P i) c e else mkbot (P i) e)\n   \\<in> Prof;\n   (\\<lambda>i. if h i < n + 1 then Lab else Lba) \\<in> Prof;\n   \\<forall>i.\n      (c <\\<^bsub>(if h i < n then mktop (P i) e\n                   else if h i = n then Arrow_Order.above (P i) c e\n                        else mkbot (P i) e)\\<^esub> e) =\n      (a <\\<^bsub>(if h i < n + 1 then Lab else Lba)\\<^esub> b)\\<rbrakk>\n  \\<Longrightarrow> (c <\\<^bsub>F (\\<lambda>i.\nif h i < n then mktop (P i) e\nelse if h i = n then Arrow_Order.above (P i) c e\n     else mkbot (P i) e)\\<^esub> e) =\n                    (a <\\<^bsub>F (\\<lambda>i.\nif h i < n + 1 then Lab else Lba)\\<^esub> b)\n  a \\<noteq> b\n  distinct [c, d, e]\n  (\\<lambda>i.\n      if h i < n then mktop (P i) e\n      else if h i = n then Arrow_Order.above (P i) c e else mkbot (P i) e)\n  \\<in> Prof\n  (\\<lambda>i. if h i < ?n then Lab else Lba) \\<in> Prof\n\ngoal (1 subgoal):\n 1. (c <\\<^bsub>F (\\<lambda>i.\n                      if h i < n then mktop (P i) e\n                      else if h i = n then Arrow_Order.above (P i) c e\n                           else mkbot (P i) e)\\<^esub> e) =\n    (a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b)", "by simp"], ["proof (state)\nthis:\n  (c <\\<^bsub>F (\\<lambda>i.\n                    if h i < n then mktop (P i) e\n                    else if h i = n then Arrow_Order.above (P i) c e\n                         else mkbot (P i) e)\\<^esub> e) =\n  (a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b)\n\ngoal (1 subgoal):\n 1. \\<And>P a b.\n       \\<lbrakk>P \\<in> Prof; a \\<noteq> b;\n        a <\\<^bsub>P (inv h n)\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "hence \"(c,e) : F ?W\""], ["proof (prove)\nusing this:\n  (c <\\<^bsub>F (\\<lambda>i.\n                    if h i < n then mktop (P i) e\n                    else if h i = n then Arrow_Order.above (P i) c e\n                         else mkbot (P i) e)\\<^esub> e) =\n  (a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b)\n\ngoal (1 subgoal):\n 1. c <\\<^bsub>F (\\<lambda>i.\n                     if h i < n then mktop (P i) e\n                     else if h i = n then Arrow_Order.above (P i) c e\n                          else mkbot (P i) e)\\<^esub> e", "using n(3)"], ["proof (prove)\nusing this:\n  (c <\\<^bsub>F (\\<lambda>i.\n                    if h i < n then mktop (P i) e\n                    else if h i = n then Arrow_Order.above (P i) c e\n                         else mkbot (P i) e)\\<^esub> e) =\n  (a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b)\n  a <\\<^bsub>F (\\<lambda>i. if h i < n + 1 then Lab else Lba)\\<^esub> b\n\ngoal (1 subgoal):\n 1. c <\\<^bsub>F (\\<lambda>i.\n                     if h i < n then mktop (P i) e\n                     else if h i = n then Arrow_Order.above (P i) c e\n                          else mkbot (P i) e)\\<^esub> e", "by blast"], ["proof (state)\nthis:\n  c <\\<^bsub>F (\\<lambda>i.\n                   if h i < n then mktop (P i) e\n                   else if h i = n then Arrow_Order.above (P i) c e\n                        else mkbot (P i) e)\\<^esub> e\n\ngoal (1 subgoal):\n 1. \\<And>P a b.\n       \\<lbrakk>P \\<in> Prof; a \\<noteq> b;\n        a <\\<^bsub>P (inv h n)\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "have \"\\<forall>i. (e,d) : ?W i \\<longleftrightarrow> (b,a) : ?Pi n i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (e <\\<^bsub>(if h i < n then mktop (P i) e\n                    else if h i = n then Arrow_Order.above (P i) c e\n                         else mkbot (P i) e)\\<^esub> d) =\n       (b <\\<^bsub>(if h i < n then Lab else Lba)\\<^esub> a)", "using dist \\<open>P : Prof\\<close> \\<open>(c,d) \\<in> P(inv h n)\\<close> \\<open>inj h\\<close>"], ["proof (prove)\nusing this:\n  distinct [c, d, e]\n  P \\<in> Prof\n  c <\\<^bsub>P (inv h n)\\<^esub> d\n  inj h\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (e <\\<^bsub>(if h i < n then mktop (P i) e\n                    else if h i = n then Arrow_Order.above (P i) c e\n                         else mkbot (P i) e)\\<^esub> d) =\n       (b <\\<^bsub>(if h i < n then Lab else Lba)\\<^esub> a)", "by(auto simp: \\<open>(b,a):Lba\\<close> \\<open>(b,a)\\<notin>Lab\\<close>\n        in_mkbot in_mktop in_above Prof_def Pi_def)"], ["proof (state)\nthis:\n  \\<forall>i.\n     (e <\\<^bsub>(if h i < n then mktop (P i) e\n                  else if h i = n then Arrow_Order.above (P i) c e\n                       else mkbot (P i) e)\\<^esub> d) =\n     (b <\\<^bsub>(if h i < n then Lab else Lba)\\<^esub> a)\n\ngoal (1 subgoal):\n 1. \\<And>P a b.\n       \\<lbrakk>P \\<in> Prof; a \\<noteq> b;\n        a <\\<^bsub>P (inv h n)\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "hence \"(e,d) : F ?W \\<longleftrightarrow> (b,a) : F(?Pi n)\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (e <\\<^bsub>(if h i < n then mktop (P i) e\n                  else if h i = n then Arrow_Order.above (P i) c e\n                       else mkbot (P i) e)\\<^esub> d) =\n     (b <\\<^bsub>(if h i < n then Lab else Lba)\\<^esub> a)\n\ngoal (1 subgoal):\n 1. (e <\\<^bsub>F (\\<lambda>i.\n                      if h i < n then mktop (P i) e\n                      else if h i = n then Arrow_Order.above (P i) c e\n                           else mkbot (P i) e)\\<^esub> d) =\n    (b <\\<^bsub>F (\\<lambda>i. if h i < n then Lab else Lba)\\<^esub> a)", "using pairwise_neutrality[of e d b a ?W \"?Pi n\"]\n        \\<open>a\\<noteq>b\\<close> dist \\<open>?W : Prof\\<close> PiProf"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (e <\\<^bsub>(if h i < n then mktop (P i) e\n                  else if h i = n then Arrow_Order.above (P i) c e\n                       else mkbot (P i) e)\\<^esub> d) =\n     (b <\\<^bsub>(if h i < n then Lab else Lba)\\<^esub> a)\n  \\<lbrakk>e \\<noteq> d; b \\<noteq> a;\n   (\\<lambda>i.\n       if h i < n then mktop (P i) e\n       else if h i = n then Arrow_Order.above (P i) c e else mkbot (P i) e)\n   \\<in> Prof;\n   (\\<lambda>i. if h i < n then Lab else Lba) \\<in> Prof;\n   \\<forall>i.\n      (e <\\<^bsub>(if h i < n then mktop (P i) e\n                   else if h i = n then Arrow_Order.above (P i) c e\n                        else mkbot (P i) e)\\<^esub> d) =\n      (b <\\<^bsub>(if h i < n then Lab else Lba)\\<^esub> a)\\<rbrakk>\n  \\<Longrightarrow> (e <\\<^bsub>F (\\<lambda>i.\nif h i < n then mktop (P i) e\nelse if h i = n then Arrow_Order.above (P i) c e\n     else mkbot (P i) e)\\<^esub> d) =\n                    (b <\\<^bsub>F (\\<lambda>i.\nif h i < n then Lab else Lba)\\<^esub> a)\n  a \\<noteq> b\n  distinct [c, d, e]\n  (\\<lambda>i.\n      if h i < n then mktop (P i) e\n      else if h i = n then Arrow_Order.above (P i) c e else mkbot (P i) e)\n  \\<in> Prof\n  (\\<lambda>i. if h i < ?n then Lab else Lba) \\<in> Prof\n\ngoal (1 subgoal):\n 1. (e <\\<^bsub>F (\\<lambda>i.\n                      if h i < n then mktop (P i) e\n                      else if h i = n then Arrow_Order.above (P i) c e\n                           else mkbot (P i) e)\\<^esub> d) =\n    (b <\\<^bsub>F (\\<lambda>i. if h i < n then Lab else Lba)\\<^esub> a)", "by simp blast"], ["proof (state)\nthis:\n  (e <\\<^bsub>F (\\<lambda>i.\n                    if h i < n then mktop (P i) e\n                    else if h i = n then Arrow_Order.above (P i) c e\n                         else mkbot (P i) e)\\<^esub> d) =\n  (b <\\<^bsub>F (\\<lambda>i. if h i < n then Lab else Lba)\\<^esub> a)\n\ngoal (1 subgoal):\n 1. \\<And>P a b.\n       \\<lbrakk>P \\<in> Prof; a \\<noteq> b;\n        a <\\<^bsub>P (inv h n)\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "hence \"(e,d) : F ?W\""], ["proof (prove)\nusing this:\n  (e <\\<^bsub>F (\\<lambda>i.\n                    if h i < n then mktop (P i) e\n                    else if h i = n then Arrow_Order.above (P i) c e\n                         else mkbot (P i) e)\\<^esub> d) =\n  (b <\\<^bsub>F (\\<lambda>i. if h i < n then Lab else Lba)\\<^esub> a)\n\ngoal (1 subgoal):\n 1. e <\\<^bsub>F (\\<lambda>i.\n                     if h i < n then mktop (P i) e\n                     else if h i = n then Arrow_Order.above (P i) c e\n                          else mkbot (P i) e)\\<^esub> d", "using n(2)"], ["proof (prove)\nusing this:\n  (e <\\<^bsub>F (\\<lambda>i.\n                    if h i < n then mktop (P i) e\n                    else if h i = n then Arrow_Order.above (P i) c e\n                         else mkbot (P i) e)\\<^esub> d) =\n  (b <\\<^bsub>F (\\<lambda>i. if h i < n then Lab else Lba)\\<^esub> a)\n  \\<forall>m\\<le>n.\n     b <\\<^bsub>F (\\<lambda>i. if h i < m then Lab else Lba)\\<^esub> a\n\ngoal (1 subgoal):\n 1. e <\\<^bsub>F (\\<lambda>i.\n                     if h i < n then mktop (P i) e\n                     else if h i = n then Arrow_Order.above (P i) c e\n                          else mkbot (P i) e)\\<^esub> d", "by auto"], ["proof (state)\nthis:\n  e <\\<^bsub>F (\\<lambda>i.\n                   if h i < n then mktop (P i) e\n                   else if h i = n then Arrow_Order.above (P i) c e\n                        else mkbot (P i) e)\\<^esub> d\n\ngoal (1 subgoal):\n 1. \\<And>P a b.\n       \\<lbrakk>P \\<in> Prof; a \\<noteq> b;\n        a <\\<^bsub>P (inv h n)\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "with \\<open>(c,e) : F ?W\\<close> \\<open>?W : Prof\\<close> \\<open>F:SWF\\<close>"], ["proof (chain)\npicking this:\n  c <\\<^bsub>F (\\<lambda>i.\n                   if h i < n then mktop (P i) e\n                   else if h i = n then Arrow_Order.above (P i) c e\n                        else mkbot (P i) e)\\<^esub> e\n  (\\<lambda>i.\n      if h i < n then mktop (P i) e\n      else if h i = n then Arrow_Order.above (P i) c e else mkbot (P i) e)\n  \\<in> Prof\n  F \\<in> SWF\n  e <\\<^bsub>F (\\<lambda>i.\n                   if h i < n then mktop (P i) e\n                   else if h i = n then Arrow_Order.above (P i) c e\n                        else mkbot (P i) e)\\<^esub> d", "have \"(c,d) \\<in> F ?W\""], ["proof (prove)\nusing this:\n  c <\\<^bsub>F (\\<lambda>i.\n                   if h i < n then mktop (P i) e\n                   else if h i = n then Arrow_Order.above (P i) c e\n                        else mkbot (P i) e)\\<^esub> e\n  (\\<lambda>i.\n      if h i < n then mktop (P i) e\n      else if h i = n then Arrow_Order.above (P i) c e else mkbot (P i) e)\n  \\<in> Prof\n  F \\<in> SWF\n  e <\\<^bsub>F (\\<lambda>i.\n                   if h i < n then mktop (P i) e\n                   else if h i = n then Arrow_Order.above (P i) c e\n                        else mkbot (P i) e)\\<^esub> d\n\ngoal (1 subgoal):\n 1. c <\\<^bsub>F (\\<lambda>i.\n                     if h i < n then mktop (P i) e\n                     else if h i = n then Arrow_Order.above (P i) c e\n                          else mkbot (P i) e)\\<^esub> d", "unfolding Pi_def slo_defs trans_def"], ["proof (prove)\nusing this:\n  c <\\<^bsub>F (\\<lambda>i.\n                   if h i < n then mktop (P i) e\n                   else if h i = n then Arrow_Order.above (P i) c e\n                        else mkbot (P i) e)\\<^esub> e\n  (\\<lambda>i.\n      if h i < n then mktop (P i) e\n      else if h i = n then Arrow_Order.above (P i) c e else mkbot (P i) e)\n  \\<in> Prof\n  F \\<in> {f. \\<forall>x.\n                 x \\<in> Prof \\<longrightarrow>\n                 f x\n                 \\<in> {L. (\\<forall>x y z.\n                               x <\\<^bsub>L\\<^esub> y \\<longrightarrow>\n                               y <\\<^bsub>L\\<^esub> z \\<longrightarrow>\n                               x <\\<^bsub>L\\<^esub> z) \\<and>\n                           (\\<forall>a. (a, a) \\<notin> L) \\<and>\n                           (\\<forall>x\\<in>UNIV.\n                               \\<forall>y\\<in>UNIV.\n                                  x \\<noteq> y \\<longrightarrow>\n                                  x <\\<^bsub>L\\<^esub> y \\<or>\n                                  y <\\<^bsub>L\\<^esub> x)}}\n  e <\\<^bsub>F (\\<lambda>i.\n                   if h i < n then mktop (P i) e\n                   else if h i = n then Arrow_Order.above (P i) c e\n                        else mkbot (P i) e)\\<^esub> d\n\ngoal (1 subgoal):\n 1. c <\\<^bsub>F (\\<lambda>i.\n                     if h i < n then mktop (P i) e\n                     else if h i = n then Arrow_Order.above (P i) c e\n                          else mkbot (P i) e)\\<^esub> d", "by blast"], ["proof (state)\nthis:\n  c <\\<^bsub>F (\\<lambda>i.\n                   if h i < n then mktop (P i) e\n                   else if h i = n then Arrow_Order.above (P i) c e\n                        else mkbot (P i) e)\\<^esub> d\n\ngoal (1 subgoal):\n 1. \\<And>P a b.\n       \\<lbrakk>P \\<in> Prof; a \\<noteq> b;\n        a <\\<^bsub>P (inv h n)\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> a <\\<^bsub>F P\\<^esub> b", "thus \"(c,d) \\<in> F P\""], ["proof (prove)\nusing this:\n  c <\\<^bsub>F (\\<lambda>i.\n                   if h i < n then mktop (P i) e\n                   else if h i = n then Arrow_Order.above (P i) c e\n                        else mkbot (P i) e)\\<^esub> d\n\ngoal (1 subgoal):\n 1. c <\\<^bsub>F P\\<^esub> d", "using PW"], ["proof (prove)\nusing this:\n  c <\\<^bsub>F (\\<lambda>i.\n                   if h i < n then mktop (P i) e\n                   else if h i = n then Arrow_Order.above (P i) c e\n                        else mkbot (P i) e)\\<^esub> d\n  (c <\\<^bsub>F P\\<^esub> d) =\n  (c <\\<^bsub>F (\\<lambda>i.\n                    if h i < n then mktop (P i) e\n                    else if h i = n then Arrow_Order.above (P i) c e\n                         else mkbot (P i) e)\\<^esub> d)\n\ngoal (1 subgoal):\n 1. c <\\<^bsub>F P\\<^esub> d", "by blast"], ["proof (state)\nthis:\n  c <\\<^bsub>F P\\<^esub> d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dictator F (inv h n)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", "thus ?thesis"], ["proof (prove)\nusing this:\n  dictator F (inv h n)\n\ngoal (1 subgoal):\n 1. \\<exists>i. dictator F i", ".."], ["proof (state)\nthis:\n  \\<exists>i. dictator F i\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}