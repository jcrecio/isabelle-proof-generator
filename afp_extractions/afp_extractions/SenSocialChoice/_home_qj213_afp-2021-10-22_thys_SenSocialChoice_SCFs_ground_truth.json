{"file_name": "/home/qj213/afp-2021-10-22/thys/SenSocialChoice/SCFs.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/SenSocialChoice", "problem_names": ["lemma choiceSetI[intro]:\n  \"\\<lbrakk> x \\<in> A; \\<And>y. y \\<in> A \\<Longrightarrow> x \\<^bsub>r\\<^esub>\\<preceq> y \\<rbrakk> \\<Longrightarrow> x \\<in> choiceSet A r\"", "lemma choiceFnI[intro]:\n  \"(\\<And>A'. \\<lbrakk> A' \\<subseteq> A; A' \\<noteq> {} \\<rbrakk> \\<Longrightarrow> choiceSet A' r \\<noteq> {}) \\<Longrightarrow> choiceFn A r\"", "lemma quasi_transI[intro]:\n  \"(\\<And>x y z. \\<lbrakk> x \\<^bsub>r\\<^esub>\\<prec> y; y \\<^bsub>r\\<^esub>\\<prec> z \\<rbrakk> \\<Longrightarrow> x \\<^bsub>r\\<^esub>\\<prec> z) \\<Longrightarrow> quasi_trans r\"", "lemma quasi_transD: \"\\<lbrakk> x \\<^bsub>r\\<^esub>\\<prec> y; y \\<^bsub>r\\<^esub>\\<prec> z; quasi_trans r \\<rbrakk> \\<Longrightarrow> x \\<^bsub>r\\<^esub>\\<prec> z\"", "lemma trans_imp_quasi_trans: \"trans r \\<Longrightarrow> quasi_trans r\"", "lemma r_c_qt_imp_cf:\n  assumes finiteA: \"finite A\"\n      and c: \"complete A r\"\n      and qt: \"quasi_trans r\"\n      and r: \"refl_on A r\"\n  shows \"choiceFn A r\"", "lemma rpr_choiceFn: \"\\<lbrakk> finite A; rpr A r \\<rbrakk> \\<Longrightarrow> choiceFn A r\"", "lemma SCFI[intro]:\n  assumes c: \"\\<And>P. Pcond A Is P \\<Longrightarrow> complete A (scf P)\"\n  shows \"SCF scf A Is Pcond\"", "lemma SCF_completeD[dest]: \"\\<lbrakk> SCF scf A Is Pcond; Pcond A Is P \\<rbrakk> \\<Longrightarrow> complete A (scf P)\"", "lemma SWF_rpr[dest]: \"\\<lbrakk> SWF swf A Is Pcond; Pcond A Is P \\<rbrakk> \\<Longrightarrow> rpr A (swf P)\"", "lemma weak_paretoI[intro]:\n  \"(\\<And>P x y. \\<lbrakk>Pcond A Is P; x \\<in> A; y \\<in> A; \\<And>i. i\\<in>Is \\<Longrightarrow> x \\<^bsub>(P i)\\<^esub>\\<prec> y\\<rbrakk> \\<Longrightarrow> x \\<^bsub>(scf P)\\<^esub>\\<prec> y)\n  \\<Longrightarrow> weak_pareto scf A Is Pcond\"", "lemma weak_paretoD:\n  \"\\<lbrakk> weak_pareto scf A Is Pcond; Pcond A Is P; x \\<in> A; y \\<in> A;\n     (\\<And>i. i \\<in> Is \\<Longrightarrow> x \\<^bsub>(P i)\\<^esub>\\<prec> y) \\<rbrakk> \\<Longrightarrow> x \\<^bsub>(scf P)\\<^esub>\\<prec> y\"", "lemma iiaI[intro]:\n  \"(\\<And>P P' x y.\n    \\<lbrakk> profile S Is P; profile S Is P';\n      x \\<in> S; y \\<in> S;\n      \\<And>i. i \\<in> Is \\<Longrightarrow> ((x \\<^bsub>(P i)\\<^esub>\\<preceq> y) \\<longleftrightarrow> (x \\<^bsub>(P' i)\\<^esub>\\<preceq> y)) \\<and> ((y \\<^bsub>(P i)\\<^esub>\\<preceq> x) \\<longleftrightarrow> (y \\<^bsub>(P' i)\\<^esub>\\<preceq> x))\n    \\<rbrakk> \\<Longrightarrow> ((x \\<^bsub>(swf P)\\<^esub>\\<preceq> y) \\<longleftrightarrow> (x \\<^bsub>(swf P')\\<^esub>\\<preceq> y)))\n  \\<Longrightarrow> iia swf S Is\"", "lemma iiaE:\n  \"\\<lbrakk> iia swf S Is;\n     {x,y} \\<subseteq> S;\n     a \\<in> {x, y}; b \\<in> {x, y};\n     \\<And>i a b. \\<lbrakk> a \\<in> {x, y}; b \\<in> {x, y}; i \\<in> Is \\<rbrakk> \\<Longrightarrow> (a \\<^bsub>(P' i)\\<^esub>\\<preceq> b) \\<longleftrightarrow> (a \\<^bsub>(P i)\\<^esub>\\<preceq> b);\n     profile S Is P; profile S Is P' \\<rbrakk>\n  \\<Longrightarrow> (a \\<^bsub>(swf P)\\<^esub>\\<preceq> b) \\<longleftrightarrow> (a \\<^bsub>(swf P')\\<^esub>\\<preceq> b)\"", "lemma semidecisiveI[intro]:\n  \"\\<lbrakk> C \\<subseteq> Is;\n    \\<And>P. \\<lbrakk> profile A Is P; \\<And>i. i \\<in> C \\<Longrightarrow> x \\<^bsub>(P i)\\<^esub>\\<prec> y; \\<And>i. i \\<in> Is - C \\<Longrightarrow> y \\<^bsub>(P i)\\<^esub>\\<prec> x \\<rbrakk>\n     \\<Longrightarrow> x \\<^bsub>(scf P)\\<^esub>\\<prec> y \\<rbrakk> \\<Longrightarrow> semidecisive scf A Is C x y\"", "lemma semidecisive_coalitionD[dest]: \"semidecisive scf A Is C x y \\<Longrightarrow> C \\<subseteq> Is\"", "lemma sd_refl: \"\\<lbrakk> C \\<subseteq> Is; C \\<noteq> {} \\<rbrakk> \\<Longrightarrow> semidecisive scf A Is C x x\"", "lemma decisiveI[intro]:\n  \"\\<lbrakk> C \\<subseteq> Is; \\<And>P. \\<lbrakk> profile A Is P; \\<And>i. i \\<in> C \\<Longrightarrow> x \\<^bsub>(P i)\\<^esub>\\<prec> y \\<rbrakk> \\<Longrightarrow> x \\<^bsub>(scf P)\\<^esub>\\<prec> y \\<rbrakk>\n    \\<Longrightarrow> decisive scf A Is C x y\"", "lemma d_imp_sd: \"decisive scf A Is C x y \\<Longrightarrow> semidecisive scf A Is C x y\"", "lemma decisive_coalitionD[dest]: \"decisive scf A Is C x y \\<Longrightarrow> C \\<subseteq> Is\"", "lemma d_refl: \"\\<lbrakk> C \\<subseteq> Is; C \\<noteq> {} \\<rbrakk> \\<Longrightarrow> decisive scf A Is C x x\"", "lemma dictatorI[intro]:\n  \"\\<lbrakk> j \\<in> Is; \\<And>x y. \\<lbrakk> x \\<in> A; y \\<in> A \\<rbrakk> \\<Longrightarrow> decisive scf A Is {j} x y \\<rbrakk> \\<Longrightarrow> dictator scf A Is j\"", "lemma dictator_individual[dest]: \"dictator scf A Is j \\<Longrightarrow> j \\<in> Is\""], "translations": [["", "lemma choiceSetI[intro]:\n  \"\\<lbrakk> x \\<in> A; \\<And>y. y \\<in> A \\<Longrightarrow> x \\<^bsub>r\\<^esub>\\<preceq> y \\<rbrakk> \\<Longrightarrow> x \\<in> choiceSet A r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A;\n     \\<And>y.\n        y \\<in> A \\<Longrightarrow> x \\<^bsub>r\\<^esub>\\<preceq> y\\<rbrakk>\n    \\<Longrightarrow> x \\<in> choiceSet A r", "unfolding choiceSet_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A;\n     \\<And>y.\n        y \\<in> A \\<Longrightarrow> x \\<^bsub>r\\<^esub>\\<preceq> y\\<rbrakk>\n    \\<Longrightarrow> x \\<in> {x \\<in> A.\n                               \\<forall>y\\<in>A.\n                                  x \\<^bsub>r\\<^esub>\\<preceq> y}", "by simp"], ["", "lemma choiceFnI[intro]:\n  \"(\\<And>A'. \\<lbrakk> A' \\<subseteq> A; A' \\<noteq> {} \\<rbrakk> \\<Longrightarrow> choiceSet A' r \\<noteq> {}) \\<Longrightarrow> choiceFn A r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A'.\n        \\<lbrakk>A' \\<subseteq> A; A' \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> choiceSet A' r \\<noteq> {}) \\<Longrightarrow>\n    choiceFn A r", "unfolding choiceFn_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A'.\n        \\<lbrakk>A' \\<subseteq> A; A' \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> choiceSet A' r \\<noteq> {}) \\<Longrightarrow>\n    \\<forall>A'\\<subseteq>A.\n       A' \\<noteq> {} \\<longrightarrow> choiceSet A' r \\<noteq> {}", "by simp"], ["", "text\\<open>If a complete and reflexive relation is also \\emph{quasi-transitive}\nit will yield a choice function.\\<close>"], ["", "definition quasi_trans :: \"'a RPR \\<Rightarrow> bool\" where\n  \"quasi_trans r \\<equiv> \\<forall>x y z. x \\<^bsub>r\\<^esub>\\<prec> y \\<and> y \\<^bsub>r\\<^esub>\\<prec> z \\<longrightarrow> x \\<^bsub>r\\<^esub>\\<prec> z\""], ["", "lemma quasi_transI[intro]:\n  \"(\\<And>x y z. \\<lbrakk> x \\<^bsub>r\\<^esub>\\<prec> y; y \\<^bsub>r\\<^esub>\\<prec> z \\<rbrakk> \\<Longrightarrow> x \\<^bsub>r\\<^esub>\\<prec> z) \\<Longrightarrow> quasi_trans r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y z.\n        \\<lbrakk>x \\<^bsub>r\\<^esub>\\<prec> y;\n         y \\<^bsub>r\\<^esub>\\<prec> z\\<rbrakk>\n        \\<Longrightarrow> x \\<^bsub>r\\<^esub>\\<prec> z) \\<Longrightarrow>\n    quasi_trans r", "unfolding quasi_trans_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y z.\n        \\<lbrakk>x \\<^bsub>r\\<^esub>\\<prec> y;\n         y \\<^bsub>r\\<^esub>\\<prec> z\\<rbrakk>\n        \\<Longrightarrow> x \\<^bsub>r\\<^esub>\\<prec> z) \\<Longrightarrow>\n    \\<forall>x y z.\n       x \\<^bsub>r\\<^esub>\\<prec> y \\<and>\n       y \\<^bsub>r\\<^esub>\\<prec> z \\<longrightarrow>\n       x \\<^bsub>r\\<^esub>\\<prec> z", "by blast"], ["", "lemma quasi_transD: \"\\<lbrakk> x \\<^bsub>r\\<^esub>\\<prec> y; y \\<^bsub>r\\<^esub>\\<prec> z; quasi_trans r \\<rbrakk> \\<Longrightarrow> x \\<^bsub>r\\<^esub>\\<prec> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<^bsub>r\\<^esub>\\<prec> y; y \\<^bsub>r\\<^esub>\\<prec> z;\n     quasi_trans r\\<rbrakk>\n    \\<Longrightarrow> x \\<^bsub>r\\<^esub>\\<prec> z", "unfolding quasi_trans_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<^bsub>r\\<^esub>\\<prec> y; y \\<^bsub>r\\<^esub>\\<prec> z;\n     \\<forall>x y z.\n        x \\<^bsub>r\\<^esub>\\<prec> y \\<and>\n        y \\<^bsub>r\\<^esub>\\<prec> z \\<longrightarrow>\n        x \\<^bsub>r\\<^esub>\\<prec> z\\<rbrakk>\n    \\<Longrightarrow> x \\<^bsub>r\\<^esub>\\<prec> z", "by blast"], ["", "lemma trans_imp_quasi_trans: \"trans r \\<Longrightarrow> quasi_trans r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans r \\<Longrightarrow> quasi_trans r", "by (rule quasi_transI, unfold strict_pref_def trans_def, blast)"], ["", "lemma r_c_qt_imp_cf:\n  assumes finiteA: \"finite A\"\n      and c: \"complete A r\"\n      and qt: \"quasi_trans r\"\n      and r: \"refl_on A r\"\n  shows \"choiceFn A r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. choiceFn A r", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A'.\n       \\<lbrakk>A' \\<subseteq> A; A' \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> choiceSet A' r \\<noteq> {}", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A'.\n       \\<lbrakk>A' \\<subseteq> A; A' \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> choiceSet A' r \\<noteq> {}", "assume B: \"B \\<subseteq> A\" \"B \\<noteq> {}\""], ["proof (state)\nthis:\n  B \\<subseteq> A\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>A'.\n       \\<lbrakk>A' \\<subseteq> A; A' \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> choiceSet A' r \\<noteq> {}", "with finite_subset finiteA"], ["proof (chain)\npicking this:\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n  finite A\n  B \\<subseteq> A\n  B \\<noteq> {}", "have finiteB: \"finite B\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n  finite A\n  B \\<subseteq> A\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. finite B", "by auto"], ["proof (state)\nthis:\n  finite B\n\ngoal (1 subgoal):\n 1. \\<And>A'.\n       \\<lbrakk>A' \\<subseteq> A; A' \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> choiceSet A' r \\<noteq> {}", "from finiteB B"], ["proof (chain)\npicking this:\n  finite B\n  B \\<subseteq> A\n  B \\<noteq> {}", "show \"choiceSet B r \\<noteq> {}\""], ["proof (prove)\nusing this:\n  finite B\n  B \\<subseteq> A\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. choiceSet B r \\<noteq> {}", "proof(induct rule: finite_subset_induct')"], ["proof (state)\ngoal (2 subgoals):\n 1. {} \\<noteq> {} \\<Longrightarrow> choiceSet {} r \\<noteq> {}\n 2. \\<And>a F.\n       \\<lbrakk>finite F; a \\<in> A; F \\<subseteq> A; a \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow> choiceSet F r \\<noteq> {};\n        insert a F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> choiceSet (insert a F) r \\<noteq> {}", "case empty"], ["proof (state)\nthis:\n  {} \\<noteq> {}\n\ngoal (2 subgoals):\n 1. {} \\<noteq> {} \\<Longrightarrow> choiceSet {} r \\<noteq> {}\n 2. \\<And>a F.\n       \\<lbrakk>finite F; a \\<in> A; F \\<subseteq> A; a \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow> choiceSet F r \\<noteq> {};\n        insert a F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> choiceSet (insert a F) r \\<noteq> {}", "with B"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  B \\<noteq> {}\n  {} \\<noteq> {}", "show ?case"], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  B \\<noteq> {}\n  {} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. choiceSet {} r \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  choiceSet {} r \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>a F.\n       \\<lbrakk>finite F; a \\<in> A; F \\<subseteq> A; a \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow> choiceSet F r \\<noteq> {};\n        insert a F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> choiceSet (insert a F) r \\<noteq> {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a F.\n       \\<lbrakk>finite F; a \\<in> A; F \\<subseteq> A; a \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow> choiceSet F r \\<noteq> {};\n        insert a F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> choiceSet (insert a F) r \\<noteq> {}", "case (insert a B)"], ["proof (state)\nthis:\n  finite B\n  a \\<in> A\n  B \\<subseteq> A\n  a \\<notin> B\n  B \\<noteq> {} \\<Longrightarrow> choiceSet B r \\<noteq> {}\n  insert a B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>a F.\n       \\<lbrakk>finite F; a \\<in> A; F \\<subseteq> A; a \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow> choiceSet F r \\<noteq> {};\n        insert a F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> choiceSet (insert a F) r \\<noteq> {}", "hence finiteB: \"finite B\"\n        and aA: \"a \\<in> A\"\n        and AB: \"B \\<subseteq> A\"\n        and aB: \"a \\<notin> B\"\n        and cF: \"B \\<noteq> {} \\<Longrightarrow> choiceSet B r \\<noteq> {}\""], ["proof (prove)\nusing this:\n  finite B\n  a \\<in> A\n  B \\<subseteq> A\n  a \\<notin> B\n  B \\<noteq> {} \\<Longrightarrow> choiceSet B r \\<noteq> {}\n  insert a B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (finite B &&& a \\<in> A) &&&\n    B \\<subseteq> A &&&\n    a \\<notin> B &&&\n    (B \\<noteq> {} \\<Longrightarrow> choiceSet B r \\<noteq> {})", "by - blast"], ["proof (state)\nthis:\n  finite B\n  a \\<in> A\n  B \\<subseteq> A\n  a \\<notin> B\n  B \\<noteq> {} \\<Longrightarrow> choiceSet B r \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>a F.\n       \\<lbrakk>finite F; a \\<in> A; F \\<subseteq> A; a \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow> choiceSet F r \\<noteq> {};\n        insert a F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> choiceSet (insert a F) r \\<noteq> {}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. choiceSet (insert a B) r \\<noteq> {}", "proof(cases \"B = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. B = {} \\<Longrightarrow> choiceSet (insert a B) r \\<noteq> {}\n 2. B \\<noteq> {} \\<Longrightarrow> choiceSet (insert a B) r \\<noteq> {}", "case True"], ["proof (state)\nthis:\n  B = {}\n\ngoal (2 subgoals):\n 1. B = {} \\<Longrightarrow> choiceSet (insert a B) r \\<noteq> {}\n 2. B \\<noteq> {} \\<Longrightarrow> choiceSet (insert a B) r \\<noteq> {}", "with aA r"], ["proof (chain)\npicking this:\n  a \\<in> A\n  refl_on A r\n  B = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<in> A\n  refl_on A r\n  B = {}\n\ngoal (1 subgoal):\n 1. choiceSet (insert a B) r \\<noteq> {}", "unfolding choiceSet_def"], ["proof (prove)\nusing this:\n  a \\<in> A\n  refl_on A r\n  B = {}\n\ngoal (1 subgoal):\n 1. {x \\<in> insert a B.\n     \\<forall>y\\<in>insert a B. x \\<^bsub>r\\<^esub>\\<preceq> y} \\<noteq>\n    {}", "by blast"], ["proof (state)\nthis:\n  choiceSet (insert a B) r \\<noteq> {}\n\ngoal (1 subgoal):\n 1. B \\<noteq> {} \\<Longrightarrow> choiceSet (insert a B) r \\<noteq> {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<noteq> {} \\<Longrightarrow> choiceSet (insert a B) r \\<noteq> {}", "case False"], ["proof (state)\nthis:\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. B \\<noteq> {} \\<Longrightarrow> choiceSet (insert a B) r \\<noteq> {}", "with cF"], ["proof (chain)\npicking this:\n  B \\<noteq> {} \\<Longrightarrow> choiceSet B r \\<noteq> {}\n  B \\<noteq> {}", "obtain b where bCF: \"b \\<in> choiceSet B r\""], ["proof (prove)\nusing this:\n  B \\<noteq> {} \\<Longrightarrow> choiceSet B r \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        b \\<in> choiceSet B r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  b \\<in> choiceSet B r\n\ngoal (1 subgoal):\n 1. B \\<noteq> {} \\<Longrightarrow> choiceSet (insert a B) r \\<noteq> {}", "from AB aA bCF complete_refl_on[OF c r]"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> choiceSet B r\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk>\n  \\<Longrightarrow> ?x \\<^bsub>r\\<^esub>\\<preceq> ?y \\<or>\n                    ?y \\<^bsub>r\\<^esub>\\<preceq> ?x", "have \"a \\<^bsub>r\\<^esub>\\<prec> b \\<or> b \\<^bsub>r\\<^esub>\\<preceq> a\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> choiceSet B r\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk>\n  \\<Longrightarrow> ?x \\<^bsub>r\\<^esub>\\<preceq> ?y \\<or>\n                    ?y \\<^bsub>r\\<^esub>\\<preceq> ?x\n\ngoal (1 subgoal):\n 1. a \\<^bsub>r\\<^esub>\\<prec> b \\<or> b \\<^bsub>r\\<^esub>\\<preceq> a", "unfolding choiceSet_def strict_pref_def"], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> {x \\<in> B. \\<forall>y\\<in>B. x \\<^bsub>r\\<^esub>\\<preceq> y}\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk>\n  \\<Longrightarrow> ?x \\<^bsub>r\\<^esub>\\<preceq> ?y \\<or>\n                    ?y \\<^bsub>r\\<^esub>\\<preceq> ?x\n\ngoal (1 subgoal):\n 1. a \\<^bsub>r\\<^esub>\\<preceq> b \\<and> (b, a) \\<notin> r \\<or>\n    b \\<^bsub>r\\<^esub>\\<preceq> a", "by blast"], ["proof (state)\nthis:\n  a \\<^bsub>r\\<^esub>\\<prec> b \\<or> b \\<^bsub>r\\<^esub>\\<preceq> a\n\ngoal (1 subgoal):\n 1. B \\<noteq> {} \\<Longrightarrow> choiceSet (insert a B) r \\<noteq> {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  a \\<^bsub>r\\<^esub>\\<prec> b \\<or> b \\<^bsub>r\\<^esub>\\<preceq> a\n\ngoal (1 subgoal):\n 1. choiceSet (insert a B) r \\<noteq> {}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<^bsub>r\\<^esub>\\<prec> b \\<Longrightarrow>\n    choiceSet (insert a B) r \\<noteq> {}\n 2. b \\<^bsub>r\\<^esub>\\<preceq> a \\<Longrightarrow>\n    choiceSet (insert a B) r \\<noteq> {}", "assume ab: \"b \\<^bsub>r\\<^esub>\\<preceq> a\""], ["proof (state)\nthis:\n  b \\<^bsub>r\\<^esub>\\<preceq> a\n\ngoal (2 subgoals):\n 1. a \\<^bsub>r\\<^esub>\\<prec> b \\<Longrightarrow>\n    choiceSet (insert a B) r \\<noteq> {}\n 2. b \\<^bsub>r\\<^esub>\\<preceq> a \\<Longrightarrow>\n    choiceSet (insert a B) r \\<noteq> {}", "with bCF"], ["proof (chain)\npicking this:\n  b \\<in> choiceSet B r\n  b \\<^bsub>r\\<^esub>\\<preceq> a", "show ?thesis"], ["proof (prove)\nusing this:\n  b \\<in> choiceSet B r\n  b \\<^bsub>r\\<^esub>\\<preceq> a\n\ngoal (1 subgoal):\n 1. choiceSet (insert a B) r \\<noteq> {}", "unfolding choiceSet_def"], ["proof (prove)\nusing this:\n  b \\<in> {x \\<in> B. \\<forall>y\\<in>B. x \\<^bsub>r\\<^esub>\\<preceq> y}\n  b \\<^bsub>r\\<^esub>\\<preceq> a\n\ngoal (1 subgoal):\n 1. {x \\<in> insert a B.\n     \\<forall>y\\<in>insert a B. x \\<^bsub>r\\<^esub>\\<preceq> y} \\<noteq>\n    {}", "by auto"], ["proof (state)\nthis:\n  choiceSet (insert a B) r \\<noteq> {}\n\ngoal (1 subgoal):\n 1. a \\<^bsub>r\\<^esub>\\<prec> b \\<Longrightarrow>\n    choiceSet (insert a B) r \\<noteq> {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<^bsub>r\\<^esub>\\<prec> b \\<Longrightarrow>\n    choiceSet (insert a B) r \\<noteq> {}", "assume ab: \"a \\<^bsub>r\\<^esub>\\<prec> b\""], ["proof (state)\nthis:\n  a \\<^bsub>r\\<^esub>\\<prec> b\n\ngoal (1 subgoal):\n 1. a \\<^bsub>r\\<^esub>\\<prec> b \\<Longrightarrow>\n    choiceSet (insert a B) r \\<noteq> {}", "have \"a \\<in> choiceSet (insert a B) r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> choiceSet (insert a B) r", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<notin> choiceSet (insert a B) r \\<Longrightarrow> False", "assume aCF: \"a \\<notin> choiceSet (insert a B) r\""], ["proof (state)\nthis:\n  a \\<notin> choiceSet (insert a B) r\n\ngoal (1 subgoal):\n 1. a \\<notin> choiceSet (insert a B) r \\<Longrightarrow> False", "from aB"], ["proof (chain)\npicking this:\n  a \\<notin> B", "have \"\\<And>b. b \\<in> B \\<Longrightarrow> a \\<noteq> b\""], ["proof (prove)\nusing this:\n  a \\<notin> B\n\ngoal (1 subgoal):\n 1. \\<And>b. b \\<in> B \\<Longrightarrow> a \\<noteq> b", "by auto"], ["proof (state)\nthis:\n  ?b \\<in> B \\<Longrightarrow> a \\<noteq> ?b\n\ngoal (1 subgoal):\n 1. a \\<notin> choiceSet (insert a B) r \\<Longrightarrow> False", "with aCF aA AB c r"], ["proof (chain)\npicking this:\n  a \\<notin> choiceSet (insert a B) r\n  a \\<in> A\n  B \\<subseteq> A\n  complete A r\n  refl_on A r\n  ?b \\<in> B \\<Longrightarrow> a \\<noteq> ?b", "obtain b' where B: \"b' \\<in> B\" \"b' \\<^bsub>r\\<^esub>\\<prec> a\""], ["proof (prove)\nusing this:\n  a \\<notin> choiceSet (insert a B) r\n  a \\<in> A\n  B \\<subseteq> A\n  complete A r\n  refl_on A r\n  ?b \\<in> B \\<Longrightarrow> a \\<noteq> ?b\n\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>b' \\<in> B; b' \\<^bsub>r\\<^esub>\\<prec> a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding choiceSet_def complete_def strict_pref_def"], ["proof (prove)\nusing this:\n  a \\<notin> {x \\<in> insert a B.\n              \\<forall>y\\<in>insert a B. x \\<^bsub>r\\<^esub>\\<preceq> y}\n  a \\<in> A\n  B \\<subseteq> A\n  \\<forall>x\\<in>A.\n     \\<forall>y\\<in>A - {x}.\n        x \\<^bsub>r\\<^esub>\\<preceq> y \\<or> y \\<^bsub>r\\<^esub>\\<preceq> x\n  refl_on A r\n  ?b \\<in> B \\<Longrightarrow> a \\<noteq> ?b\n\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>b' \\<in> B;\n         b' \\<^bsub>r\\<^esub>\\<preceq> a \\<and> (a, b') \\<notin> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  b' \\<in> B\n  b' \\<^bsub>r\\<^esub>\\<prec> a\n\ngoal (1 subgoal):\n 1. a \\<notin> choiceSet (insert a B) r \\<Longrightarrow> False", "with ab qt"], ["proof (chain)\npicking this:\n  a \\<^bsub>r\\<^esub>\\<prec> b\n  quasi_trans r\n  b' \\<in> B\n  b' \\<^bsub>r\\<^esub>\\<prec> a", "have \"b' \\<^bsub>r\\<^esub>\\<prec> b\""], ["proof (prove)\nusing this:\n  a \\<^bsub>r\\<^esub>\\<prec> b\n  quasi_trans r\n  b' \\<in> B\n  b' \\<^bsub>r\\<^esub>\\<prec> a\n\ngoal (1 subgoal):\n 1. b' \\<^bsub>r\\<^esub>\\<prec> b", "by (blast dest: quasi_transD)"], ["proof (state)\nthis:\n  b' \\<^bsub>r\\<^esub>\\<prec> b\n\ngoal (1 subgoal):\n 1. a \\<notin> choiceSet (insert a B) r \\<Longrightarrow> False", "with bCF B"], ["proof (chain)\npicking this:\n  b \\<in> choiceSet B r\n  b' \\<in> B\n  b' \\<^bsub>r\\<^esub>\\<prec> a\n  b' \\<^bsub>r\\<^esub>\\<prec> b", "show False"], ["proof (prove)\nusing this:\n  b \\<in> choiceSet B r\n  b' \\<in> B\n  b' \\<^bsub>r\\<^esub>\\<prec> a\n  b' \\<^bsub>r\\<^esub>\\<prec> b\n\ngoal (1 subgoal):\n 1. False", "unfolding choiceSet_def strict_pref_def"], ["proof (prove)\nusing this:\n  b \\<in> {x \\<in> B. \\<forall>y\\<in>B. x \\<^bsub>r\\<^esub>\\<preceq> y}\n  b' \\<in> B\n  b' \\<^bsub>r\\<^esub>\\<preceq> a \\<and> (a, b') \\<notin> r\n  b' \\<^bsub>r\\<^esub>\\<preceq> b \\<and> (b, b') \\<notin> r\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a \\<in> choiceSet (insert a B) r\n\ngoal (1 subgoal):\n 1. a \\<^bsub>r\\<^esub>\\<prec> b \\<Longrightarrow>\n    choiceSet (insert a B) r \\<noteq> {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  a \\<in> choiceSet (insert a B) r\n\ngoal (1 subgoal):\n 1. choiceSet (insert a B) r \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  choiceSet (insert a B) r \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  choiceSet (insert a B) r \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  choiceSet (insert a B) r \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  choiceSet B r \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rpr_choiceFn: \"\\<lbrakk> finite A; rpr A r \\<rbrakk> \\<Longrightarrow> choiceFn A r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; rpr A r\\<rbrakk> \\<Longrightarrow> choiceFn A r", "unfolding rpr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A;\n     complete A r \\<and> refl_on A r \\<and> trans r\\<rbrakk>\n    \\<Longrightarrow> choiceFn A r", "by (blast dest: trans_imp_quasi_trans r_c_qt_imp_cf)"], ["", "(* **************************************** *)"], ["", "subsection\\<open>Social Choice Functions (SCFs)\\<close>"], ["", "text \\<open>A \\emph{social choice function} (SCF), also called a\n\\emph{collective choice rule} by Sen \\cite[p28]{Sen:70a}, is a function that\nsomehow aggregates society's opinions, expressed as a profile, into a\npreference relation.\\<close>"], ["", "type_synonym ('a, 'i) SCF = \"('a, 'i) Profile \\<Rightarrow> 'a RPR\""], ["", "text \\<open>The least we require of an SCF is that it be \\emph{complete} and\nsome function of the profile. The latter condition is usually implied by\nother conditions, such as @{term \"iia\"}.\\<close>"], ["", "definition\n  SCF :: \"('a, 'i) SCF \\<Rightarrow> 'a set \\<Rightarrow> 'i set \\<Rightarrow> ('a set \\<Rightarrow> 'i set \\<Rightarrow> ('a, 'i) Profile \\<Rightarrow> bool) \\<Rightarrow> bool\"\nwhere\n  \"SCF scf A Is Pcond \\<equiv> (\\<forall>P. Pcond A Is P \\<longrightarrow> (complete A (scf P)))\""], ["", "lemma SCFI[intro]:\n  assumes c: \"\\<And>P. Pcond A Is P \\<Longrightarrow> complete A (scf P)\"\n  shows \"SCF scf A Is Pcond\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SCF scf A Is Pcond", "unfolding SCF_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P. Pcond A Is P \\<longrightarrow> complete A (scf P)", "using assms"], ["proof (prove)\nusing this:\n  Pcond A Is ?P \\<Longrightarrow> complete A (scf ?P)\n\ngoal (1 subgoal):\n 1. \\<forall>P. Pcond A Is P \\<longrightarrow> complete A (scf P)", "by blast"], ["", "lemma SCF_completeD[dest]: \"\\<lbrakk> SCF scf A Is Pcond; Pcond A Is P \\<rbrakk> \\<Longrightarrow> complete A (scf P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SCF scf A Is Pcond; Pcond A Is P\\<rbrakk>\n    \\<Longrightarrow> complete A (scf P)", "unfolding SCF_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>P. Pcond A Is P \\<longrightarrow> complete A (scf P);\n     Pcond A Is P\\<rbrakk>\n    \\<Longrightarrow> complete A (scf P)", "by blast"], ["", "(* **************************************** *)"], ["", "subsection\\<open>Social Welfare Functions (SWFs)\\<close>"], ["", "text \\<open>A \\emph{Social Welfare Function} (SWF) is an SCF that expresses the\nsociety's opinion as a single RPR.\n\nIn some situations it might make sense to restrict the allowable\nprofiles.\\<close>"], ["", "definition\n  SWF :: \"('a, 'i) SCF \\<Rightarrow> 'a set \\<Rightarrow> 'i set \\<Rightarrow> ('a set \\<Rightarrow> 'i set \\<Rightarrow> ('a, 'i) Profile \\<Rightarrow> bool) \\<Rightarrow> bool\"\nwhere\n  \"SWF swf A Is Pcond \\<equiv> (\\<forall>P. Pcond A Is P \\<longrightarrow> rpr A (swf P))\""], ["", "lemma SWF_rpr[dest]: \"\\<lbrakk> SWF swf A Is Pcond; Pcond A Is P \\<rbrakk> \\<Longrightarrow> rpr A (swf P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SWF swf A Is Pcond; Pcond A Is P\\<rbrakk>\n    \\<Longrightarrow> rpr A (swf P)", "unfolding SWF_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>P. Pcond A Is P \\<longrightarrow> rpr A (swf P);\n     Pcond A Is P\\<rbrakk>\n    \\<Longrightarrow> rpr A (swf P)", "by simp"], ["", "(* **************************************** *)"], ["", "subsection\\<open>General Properties of an SCF\\<close>"], ["", "text\\<open>An SCF has a \\emph{universal domain} if it works for all profiles.\\<close>"], ["", "definition universal_domain :: \"'a set \\<Rightarrow> 'i set \\<Rightarrow> ('a, 'i) Profile \\<Rightarrow> bool\" where\n  \"universal_domain A Is P \\<equiv> profile A Is P\""], ["", "declare universal_domain_def[simp]"], ["", "text\\<open>An SCF is \\emph{weakly Pareto-optimal} if, whenever everyone strictly\nprefers @{term \"x\"} to @{term \"y\"}, the SCF does too.\\<close>"], ["", "definition\n  weak_pareto :: \"('a, 'i) SCF \\<Rightarrow> 'a set \\<Rightarrow> 'i set \\<Rightarrow> ('a set \\<Rightarrow> 'i set \\<Rightarrow> ('a, 'i) Profile \\<Rightarrow> bool) \\<Rightarrow> bool\"\nwhere\n  \"weak_pareto scf A Is Pcond \\<equiv>\n     (\\<forall>P x y. Pcond A Is P \\<and> x \\<in> A \\<and> y \\<in> A \\<and> (\\<forall>i \\<in> Is. x \\<^bsub>(P i)\\<^esub>\\<prec> y) \\<longrightarrow> x \\<^bsub>(scf P)\\<^esub>\\<prec> y)\""], ["", "lemma weak_paretoI[intro]:\n  \"(\\<And>P x y. \\<lbrakk>Pcond A Is P; x \\<in> A; y \\<in> A; \\<And>i. i\\<in>Is \\<Longrightarrow> x \\<^bsub>(P i)\\<^esub>\\<prec> y\\<rbrakk> \\<Longrightarrow> x \\<^bsub>(scf P)\\<^esub>\\<prec> y)\n  \\<Longrightarrow> weak_pareto scf A Is Pcond\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P x y.\n        \\<lbrakk>Pcond A Is P; x \\<in> A; y \\<in> A;\n         \\<And>i.\n            i \\<in> Is \\<Longrightarrow>\n            x \\<^bsub>(P i)\\<^esub>\\<prec> y\\<rbrakk>\n        \\<Longrightarrow> x \\<^bsub>(scf\nP)\\<^esub>\\<prec> y) \\<Longrightarrow>\n    weak_pareto scf A Is Pcond", "unfolding weak_pareto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P x y.\n        \\<lbrakk>Pcond A Is P; x \\<in> A; y \\<in> A;\n         \\<And>i.\n            i \\<in> Is \\<Longrightarrow>\n            x \\<^bsub>(P i)\\<^esub>\\<prec> y\\<rbrakk>\n        \\<Longrightarrow> x \\<^bsub>(scf\nP)\\<^esub>\\<prec> y) \\<Longrightarrow>\n    \\<forall>P x y.\n       Pcond A Is P \\<and>\n       x \\<in> A \\<and>\n       y \\<in> A \\<and>\n       (\\<forall>i\\<in>Is.\n           x \\<^bsub>(P i)\\<^esub>\\<prec> y) \\<longrightarrow>\n       x \\<^bsub>(scf P)\\<^esub>\\<prec> y", "by simp"], ["", "lemma weak_paretoD:\n  \"\\<lbrakk> weak_pareto scf A Is Pcond; Pcond A Is P; x \\<in> A; y \\<in> A;\n     (\\<And>i. i \\<in> Is \\<Longrightarrow> x \\<^bsub>(P i)\\<^esub>\\<prec> y) \\<rbrakk> \\<Longrightarrow> x \\<^bsub>(scf P)\\<^esub>\\<prec> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>weak_pareto scf A Is Pcond; Pcond A Is P; x \\<in> A; y \\<in> A;\n     \\<And>i.\n        i \\<in> Is \\<Longrightarrow>\n        x \\<^bsub>(P i)\\<^esub>\\<prec> y\\<rbrakk>\n    \\<Longrightarrow> x \\<^bsub>(scf P)\\<^esub>\\<prec> y", "unfolding weak_pareto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>P x y.\n                Pcond A Is P \\<and>\n                x \\<in> A \\<and>\n                y \\<in> A \\<and>\n                (\\<forall>i\\<in>Is.\n                    x \\<^bsub>(P i)\\<^esub>\\<prec> y) \\<longrightarrow>\n                x \\<^bsub>(scf P)\\<^esub>\\<prec> y;\n     Pcond A Is P; x \\<in> A; y \\<in> A;\n     \\<And>i.\n        i \\<in> Is \\<Longrightarrow>\n        x \\<^bsub>(P i)\\<^esub>\\<prec> y\\<rbrakk>\n    \\<Longrightarrow> x \\<^bsub>(scf P)\\<^esub>\\<prec> y", "by simp"], ["", "text\\<open>\n\nAn SCF satisfies \\emph{independence of irrelevant alternatives} if, for two\npreference profiles @{term \"P\"} and @{term \"P'\"} where for all individuals\n@{term \"i\"}, alternatives @{term \"x\"} and @{term \"y\"} drawn from set @{term\n\"S\"} have the same order in @{term \"P i\"} and @{term \"P' i\"}, then\nalternatives @{term \"x\"} and @{term \"y\"} have the same order in @{term \"scf\nP\"} and @{term \"scf P'\"}.\n\n\\<close>"], ["", "definition iia :: \"('a, 'i) SCF \\<Rightarrow> 'a set \\<Rightarrow> 'i set \\<Rightarrow> bool\" where\n  \"iia scf S Is \\<equiv>\n    (\\<forall>P P' x y. profile S Is P \\<and> profile S Is P'\n      \\<and> x \\<in> S \\<and> y \\<in> S\n      \\<and> (\\<forall>i \\<in> Is. ((x \\<^bsub>(P i)\\<^esub>\\<preceq> y) \\<longleftrightarrow> (x \\<^bsub>(P' i)\\<^esub>\\<preceq> y)) \\<and> ((y \\<^bsub>(P i)\\<^esub>\\<preceq> x) \\<longleftrightarrow> (y \\<^bsub>(P' i)\\<^esub>\\<preceq> x)))\n         \\<longrightarrow> ((x \\<^bsub>(scf P)\\<^esub>\\<preceq> y) \\<longleftrightarrow> (x \\<^bsub>(scf P')\\<^esub>\\<preceq> y)))\""], ["", "lemma iiaI[intro]:\n  \"(\\<And>P P' x y.\n    \\<lbrakk> profile S Is P; profile S Is P';\n      x \\<in> S; y \\<in> S;\n      \\<And>i. i \\<in> Is \\<Longrightarrow> ((x \\<^bsub>(P i)\\<^esub>\\<preceq> y) \\<longleftrightarrow> (x \\<^bsub>(P' i)\\<^esub>\\<preceq> y)) \\<and> ((y \\<^bsub>(P i)\\<^esub>\\<preceq> x) \\<longleftrightarrow> (y \\<^bsub>(P' i)\\<^esub>\\<preceq> x))\n    \\<rbrakk> \\<Longrightarrow> ((x \\<^bsub>(swf P)\\<^esub>\\<preceq> y) \\<longleftrightarrow> (x \\<^bsub>(swf P')\\<^esub>\\<preceq> y)))\n  \\<Longrightarrow> iia swf S Is\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P P' x y.\n        \\<lbrakk>profile S Is P; profile S Is P'; x \\<in> S; y \\<in> S;\n         \\<And>i.\n            i \\<in> Is \\<Longrightarrow>\n            (x \\<^bsub>(P i)\\<^esub>\\<preceq> y) =\n            (x \\<^bsub>(P' i)\\<^esub>\\<preceq> y) \\<and>\n            (y \\<^bsub>(P i)\\<^esub>\\<preceq> x) =\n            (y \\<^bsub>(P' i)\\<^esub>\\<preceq> x)\\<rbrakk>\n        \\<Longrightarrow> (x \\<^bsub>(swf P)\\<^esub>\\<preceq> y) =\n                          (x \\<^bsub>(swf\n P')\\<^esub>\\<preceq> y)) \\<Longrightarrow>\n    iia swf S Is", "unfolding iia_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P P' x y.\n        \\<lbrakk>profile S Is P; profile S Is P'; x \\<in> S; y \\<in> S;\n         \\<And>i.\n            i \\<in> Is \\<Longrightarrow>\n            (x \\<^bsub>(P i)\\<^esub>\\<preceq> y) =\n            (x \\<^bsub>(P' i)\\<^esub>\\<preceq> y) \\<and>\n            (y \\<^bsub>(P i)\\<^esub>\\<preceq> x) =\n            (y \\<^bsub>(P' i)\\<^esub>\\<preceq> x)\\<rbrakk>\n        \\<Longrightarrow> (x \\<^bsub>(swf P)\\<^esub>\\<preceq> y) =\n                          (x \\<^bsub>(swf\n P')\\<^esub>\\<preceq> y)) \\<Longrightarrow>\n    \\<forall>P P' x y.\n       profile S Is P \\<and>\n       profile S Is P' \\<and>\n       x \\<in> S \\<and>\n       y \\<in> S \\<and>\n       (\\<forall>i\\<in>Is.\n           (x \\<^bsub>(P i)\\<^esub>\\<preceq> y) =\n           (x \\<^bsub>(P' i)\\<^esub>\\<preceq> y) \\<and>\n           (y \\<^bsub>(P i)\\<^esub>\\<preceq> x) =\n           (y \\<^bsub>(P' i)\\<^esub>\\<preceq> x)) \\<longrightarrow>\n       (x \\<^bsub>(swf P)\\<^esub>\\<preceq> y) =\n       (x \\<^bsub>(swf P')\\<^esub>\\<preceq> y)", "by simp"], ["", "lemma iiaE:\n  \"\\<lbrakk> iia swf S Is;\n     {x,y} \\<subseteq> S;\n     a \\<in> {x, y}; b \\<in> {x, y};\n     \\<And>i a b. \\<lbrakk> a \\<in> {x, y}; b \\<in> {x, y}; i \\<in> Is \\<rbrakk> \\<Longrightarrow> (a \\<^bsub>(P' i)\\<^esub>\\<preceq> b) \\<longleftrightarrow> (a \\<^bsub>(P i)\\<^esub>\\<preceq> b);\n     profile S Is P; profile S Is P' \\<rbrakk>\n  \\<Longrightarrow> (a \\<^bsub>(swf P)\\<^esub>\\<preceq> b) \\<longleftrightarrow> (a \\<^bsub>(swf P')\\<^esub>\\<preceq> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>iia swf S Is; {x, y} \\<subseteq> S; a \\<in> {x, y};\n     b \\<in> {x, y};\n     \\<And>i a b.\n        \\<lbrakk>a \\<in> {x, y}; b \\<in> {x, y}; i \\<in> Is\\<rbrakk>\n        \\<Longrightarrow> (a \\<^bsub>(P' i)\\<^esub>\\<preceq> b) =\n                          (a \\<^bsub>(P i)\\<^esub>\\<preceq> b);\n     profile S Is P; profile S Is P'\\<rbrakk>\n    \\<Longrightarrow> (a \\<^bsub>(swf P)\\<^esub>\\<preceq> b) =\n                      (a \\<^bsub>(swf P')\\<^esub>\\<preceq> b)", "unfolding iia_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>P P' x y.\n                profile S Is P \\<and>\n                profile S Is P' \\<and>\n                x \\<in> S \\<and>\n                y \\<in> S \\<and>\n                (\\<forall>i\\<in>Is.\n                    (x \\<^bsub>(P i)\\<^esub>\\<preceq> y) =\n                    (x \\<^bsub>(P' i)\\<^esub>\\<preceq> y) \\<and>\n                    (y \\<^bsub>(P i)\\<^esub>\\<preceq> x) =\n                    (y \\<^bsub>(P' i)\\<^esub>\\<preceq> x)) \\<longrightarrow>\n                (x \\<^bsub>(swf P)\\<^esub>\\<preceq> y) =\n                (x \\<^bsub>(swf P')\\<^esub>\\<preceq> y);\n     {x, y} \\<subseteq> S; a \\<in> {x, y}; b \\<in> {x, y};\n     \\<And>i a b.\n        \\<lbrakk>a \\<in> {x, y}; b \\<in> {x, y}; i \\<in> Is\\<rbrakk>\n        \\<Longrightarrow> (a \\<^bsub>(P' i)\\<^esub>\\<preceq> b) =\n                          (a \\<^bsub>(P i)\\<^esub>\\<preceq> b);\n     profile S Is P; profile S Is P'\\<rbrakk>\n    \\<Longrightarrow> (a \\<^bsub>(swf P)\\<^esub>\\<preceq> b) =\n                      (a \\<^bsub>(swf P')\\<^esub>\\<preceq> b)", "by (simp, blast)"], ["", "(* **************************************** *)"], ["", "subsection\\<open>Decisiveness and Semi-decisiveness\\<close>"], ["", "text\\<open>This notion is the key to Arrow's Theorem, and hinges on the use of\nstrict preference \\cite[p42]{Sen:70a}.\\<close>"], ["", "text\\<open>A coalition @{term \"C\"} of agents is \\emph{semi-decisive} for @{term\n\"x\"} over @{term \"y\"} if, whenever the coalition prefers @{term \"x\"} to\n@{term \"y\"} and all other agents prefer the converse, the coalition\nprevails.\\<close>"], ["", "definition semidecisive :: \"('a, 'i) SCF \\<Rightarrow> 'a set \\<Rightarrow> 'i set \\<Rightarrow> 'i set \\<Rightarrow> 'a \\<Rightarrow> 'a \\<Rightarrow> bool\" where\n  \"semidecisive scf A Is C x y \\<equiv>\n    C \\<subseteq> Is \\<and> (\\<forall>P. profile A Is P \\<and> (\\<forall>i \\<in> C. x \\<^bsub>(P i)\\<^esub>\\<prec> y) \\<and> (\\<forall>i \\<in> Is - C. y \\<^bsub>(P i)\\<^esub>\\<prec> x)\n      \\<longrightarrow> x \\<^bsub>(scf P)\\<^esub>\\<prec> y)\""], ["", "lemma semidecisiveI[intro]:\n  \"\\<lbrakk> C \\<subseteq> Is;\n    \\<And>P. \\<lbrakk> profile A Is P; \\<And>i. i \\<in> C \\<Longrightarrow> x \\<^bsub>(P i)\\<^esub>\\<prec> y; \\<And>i. i \\<in> Is - C \\<Longrightarrow> y \\<^bsub>(P i)\\<^esub>\\<prec> x \\<rbrakk>\n     \\<Longrightarrow> x \\<^bsub>(scf P)\\<^esub>\\<prec> y \\<rbrakk> \\<Longrightarrow> semidecisive scf A Is C x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> Is;\n     \\<And>P.\n        \\<lbrakk>profile A Is P;\n         \\<And>i.\n            i \\<in> C \\<Longrightarrow> x \\<^bsub>(P i)\\<^esub>\\<prec> y;\n         \\<And>i.\n            i \\<in> Is - C \\<Longrightarrow>\n            y \\<^bsub>(P i)\\<^esub>\\<prec> x\\<rbrakk>\n        \\<Longrightarrow> x \\<^bsub>(scf P)\\<^esub>\\<prec> y\\<rbrakk>\n    \\<Longrightarrow> semidecisive scf A Is C x y", "unfolding semidecisive_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> Is;\n     \\<And>P.\n        \\<lbrakk>profile A Is P;\n         \\<And>i.\n            i \\<in> C \\<Longrightarrow> x \\<^bsub>(P i)\\<^esub>\\<prec> y;\n         \\<And>i.\n            i \\<in> Is - C \\<Longrightarrow>\n            y \\<^bsub>(P i)\\<^esub>\\<prec> x\\<rbrakk>\n        \\<Longrightarrow> x \\<^bsub>(scf P)\\<^esub>\\<prec> y\\<rbrakk>\n    \\<Longrightarrow> C \\<subseteq> Is \\<and>\n                      (\\<forall>P.\n                          profile A Is P \\<and>\n                          (\\<forall>i\\<in>C.\n                              x \\<^bsub>(P i)\\<^esub>\\<prec> y) \\<and>\n                          (\\<forall>i\\<in>Is - C.\n                              y \\<^bsub>(P\n    i)\\<^esub>\\<prec> x) \\<longrightarrow>\n                          x \\<^bsub>(scf P)\\<^esub>\\<prec> y)", "by simp"], ["", "lemma semidecisive_coalitionD[dest]: \"semidecisive scf A Is C x y \\<Longrightarrow> C \\<subseteq> Is\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semidecisive scf A Is C x y \\<Longrightarrow> C \\<subseteq> Is", "unfolding semidecisive_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<subseteq> Is \\<and>\n    (\\<forall>P.\n        profile A Is P \\<and>\n        (\\<forall>i\\<in>C. x \\<^bsub>(P i)\\<^esub>\\<prec> y) \\<and>\n        (\\<forall>i\\<in>Is - C.\n            y \\<^bsub>(P i)\\<^esub>\\<prec> x) \\<longrightarrow>\n        x \\<^bsub>(scf P)\\<^esub>\\<prec> y) \\<Longrightarrow>\n    C \\<subseteq> Is", "by simp"], ["", "lemma sd_refl: \"\\<lbrakk> C \\<subseteq> Is; C \\<noteq> {} \\<rbrakk> \\<Longrightarrow> semidecisive scf A Is C x x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> Is; C \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> semidecisive scf A Is C x x", "unfolding semidecisive_def strict_pref_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> Is; C \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> C \\<subseteq> Is \\<and>\n                      (\\<forall>P.\n                          profile A Is P \\<and>\n                          (\\<forall>i\\<in>C.\n                              x \\<^bsub>(P i)\\<^esub>\\<preceq> x \\<and>\n                              (x, x) \\<notin> P i) \\<and>\n                          (\\<forall>i\\<in>Is - C.\n                              x \\<^bsub>(P i)\\<^esub>\\<preceq> x \\<and>\n                              (x, x) \\<notin> P i) \\<longrightarrow>\n                          x \\<^bsub>(scf P)\\<^esub>\\<preceq> x \\<and>\n                          (x, x) \\<notin> scf P)", "by blast"], ["", "text\\<open>A coalition @{term \"C\"} is \\emph{decisive} for @{term \"x\"} over\n@{term \"y\"} if, whenever the coalition prefers @{term \"x\"} to @{term \"y\"},\nthe coalition prevails.\\<close>"], ["", "definition decisive :: \"('a, 'i) SCF \\<Rightarrow> 'a set \\<Rightarrow> 'i set \\<Rightarrow> 'i set \\<Rightarrow> 'a \\<Rightarrow> 'a \\<Rightarrow> bool\" where\n  \"decisive scf A Is C x y \\<equiv>\n    C \\<subseteq> Is \\<and> (\\<forall>P. profile A Is P \\<and> (\\<forall>i \\<in> C. x \\<^bsub>(P i)\\<^esub>\\<prec> y) \\<longrightarrow> x \\<^bsub>(scf P)\\<^esub>\\<prec> y)\""], ["", "lemma decisiveI[intro]:\n  \"\\<lbrakk> C \\<subseteq> Is; \\<And>P. \\<lbrakk> profile A Is P; \\<And>i. i \\<in> C \\<Longrightarrow> x \\<^bsub>(P i)\\<^esub>\\<prec> y \\<rbrakk> \\<Longrightarrow> x \\<^bsub>(scf P)\\<^esub>\\<prec> y \\<rbrakk>\n    \\<Longrightarrow> decisive scf A Is C x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> Is;\n     \\<And>P.\n        \\<lbrakk>profile A Is P;\n         \\<And>i.\n            i \\<in> C \\<Longrightarrow>\n            x \\<^bsub>(P i)\\<^esub>\\<prec> y\\<rbrakk>\n        \\<Longrightarrow> x \\<^bsub>(scf P)\\<^esub>\\<prec> y\\<rbrakk>\n    \\<Longrightarrow> decisive scf A Is C x y", "unfolding decisive_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> Is;\n     \\<And>P.\n        \\<lbrakk>profile A Is P;\n         \\<And>i.\n            i \\<in> C \\<Longrightarrow>\n            x \\<^bsub>(P i)\\<^esub>\\<prec> y\\<rbrakk>\n        \\<Longrightarrow> x \\<^bsub>(scf P)\\<^esub>\\<prec> y\\<rbrakk>\n    \\<Longrightarrow> C \\<subseteq> Is \\<and>\n                      (\\<forall>P.\n                          profile A Is P \\<and>\n                          (\\<forall>i\\<in>C.\n                              x \\<^bsub>(P\n    i)\\<^esub>\\<prec> y) \\<longrightarrow>\n                          x \\<^bsub>(scf P)\\<^esub>\\<prec> y)", "by simp"], ["", "lemma d_imp_sd: \"decisive scf A Is C x y \\<Longrightarrow> semidecisive scf A Is C x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. decisive scf A Is C x y \\<Longrightarrow> semidecisive scf A Is C x y", "unfolding decisive_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<subseteq> Is \\<and>\n    (\\<forall>P.\n        profile A Is P \\<and>\n        (\\<forall>i\\<in>C.\n            x \\<^bsub>(P i)\\<^esub>\\<prec> y) \\<longrightarrow>\n        x \\<^bsub>(scf P)\\<^esub>\\<prec> y) \\<Longrightarrow>\n    semidecisive scf A Is C x y", "by (rule semidecisiveI, blast+)"], ["", "lemma decisive_coalitionD[dest]: \"decisive scf A Is C x y \\<Longrightarrow> C \\<subseteq> Is\""], ["proof (prove)\ngoal (1 subgoal):\n 1. decisive scf A Is C x y \\<Longrightarrow> C \\<subseteq> Is", "unfolding decisive_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<subseteq> Is \\<and>\n    (\\<forall>P.\n        profile A Is P \\<and>\n        (\\<forall>i\\<in>C.\n            x \\<^bsub>(P i)\\<^esub>\\<prec> y) \\<longrightarrow>\n        x \\<^bsub>(scf P)\\<^esub>\\<prec> y) \\<Longrightarrow>\n    C \\<subseteq> Is", "by simp"], ["", "text \\<open>Anyone is trivially decisive for @{term \"x\"} against @{term \"x\"}.\\<close>"], ["", "lemma d_refl: \"\\<lbrakk> C \\<subseteq> Is; C \\<noteq> {} \\<rbrakk> \\<Longrightarrow> decisive scf A Is C x x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> Is; C \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> decisive scf A Is C x x", "unfolding decisive_def strict_pref_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<subseteq> Is; C \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> C \\<subseteq> Is \\<and>\n                      (\\<forall>P.\n                          profile A Is P \\<and>\n                          (\\<forall>i\\<in>C.\n                              x \\<^bsub>(P i)\\<^esub>\\<preceq> x \\<and>\n                              (x, x) \\<notin> P i) \\<longrightarrow>\n                          x \\<^bsub>(scf P)\\<^esub>\\<preceq> x \\<and>\n                          (x, x) \\<notin> scf P)", "by simp"], ["", "text\\<open>Agent @{term \"j\"} is a \\emph{dictator} if her preferences always\nprevail. This is the same as saying that she is decisive for all @{term \"x\"}\nand @{term \"y\"}.\\<close>"], ["", "definition dictator :: \"('a, 'i) SCF \\<Rightarrow> 'a set \\<Rightarrow> 'i set \\<Rightarrow> 'i \\<Rightarrow> bool\" where\n  \"dictator scf A Is j \\<equiv> j \\<in> Is \\<and> (\\<forall>x \\<in> A. \\<forall>y \\<in> A. decisive scf A Is {j} x y)\""], ["", "lemma dictatorI[intro]:\n  \"\\<lbrakk> j \\<in> Is; \\<And>x y. \\<lbrakk> x \\<in> A; y \\<in> A \\<rbrakk> \\<Longrightarrow> decisive scf A Is {j} x y \\<rbrakk> \\<Longrightarrow> dictator scf A Is j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>j \\<in> Is;\n     \\<And>x y.\n        \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n        \\<Longrightarrow> decisive scf A Is {j} x y\\<rbrakk>\n    \\<Longrightarrow> dictator scf A Is j", "unfolding dictator_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>j \\<in> Is;\n     \\<And>x y.\n        \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n        \\<Longrightarrow> decisive scf A Is {j} x y\\<rbrakk>\n    \\<Longrightarrow> j \\<in> Is \\<and>\n                      (\\<forall>x\\<in>A.\n                          \\<forall>y\\<in>A. decisive scf A Is {j} x y)", "by simp"], ["", "lemma dictator_individual[dest]: \"dictator scf A Is j \\<Longrightarrow> j \\<in> Is\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dictator scf A Is j \\<Longrightarrow> j \\<in> Is", "unfolding dictator_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<in> Is \\<and>\n    (\\<forall>x\\<in>A.\n        \\<forall>y\\<in>A. decisive scf A Is {j} x y) \\<Longrightarrow>\n    j \\<in> Is", "by simp"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"]]}